uint64_t getEnumTagSinglePayload for LargeImage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD429CD4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MediaMetadata();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LargeImage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD429D5C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MediaMetadata();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AD429DD0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MediaMetadata();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LargeImage.Context(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  const void *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  const void *v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int (*v184)(const void *, uint64_t, uint64_t);
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  _QWORD *v235;
  uint64_t v236;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unsigned int (*__dst)(const void *, uint64_t, uint64_t);
  char *__dsta;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    v16 = v15 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v5 = *(int *)(a3 + 28);
    v6 = (_OWORD *)(a1 + v5);
    v7 = (uint64_t)a2 + v5;
    *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)a2 + v5 + 9);
    *v6 = *(_OWORD *)((char *)a2 + v5);
    v8 = (int *)type metadata accessor for MediaMetadata();
    v9 = v8[5];
    v10 = (char *)v6 + v9;
    v11 = (const void *)(v7 + v9);
    v12 = sub_1AD63B03C();
    v13 = *(_QWORD *)(v12 - 8);
    __dst = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    v238 = v13;
    v244 = v12;
    if (__dst(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = v8[6];
    v18 = (char *)v6 + v17;
    v19 = v7 + v17;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = *(_BYTE *)(v19 + 8);
    v20 = v8[7];
    v21 = (char *)v6 + v20;
    v22 = v7 + v20;
    v21[8] = *(_BYTE *)(v22 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v23 = v8[8];
    v24 = (char *)v6 + v23;
    v25 = v7 + v23;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = *(_BYTE *)(v25 + 8);
    v26 = v8[9];
    v27 = (char *)v6 + v26;
    v28 = v7 + v26;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = *(_BYTE *)(v28 + 8);
    v29 = v8[10];
    v30 = (char *)v6 + v29;
    v31 = v7 + v29;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = *(_BYTE *)(v31 + 8);
    v32 = v8[11];
    v33 = (_QWORD *)((char *)v6 + v32);
    v34 = (_QWORD *)(v7 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = v8[12];
    v37 = (_QWORD *)((char *)v6 + v36);
    v38 = (_QWORD *)(v7 + v36);
    v243 = v38[1];
    *v37 = *v38;
    v37[1] = v243;
    v39 = v8[13];
    v40 = (_QWORD *)((char *)v6 + v39);
    v41 = (_QWORD *)(v7 + v39);
    v242 = v41[1];
    *v40 = *v41;
    v40[1] = v242;
    v42 = v8[14];
    v43 = (char *)v6 + v42;
    v44 = v7 + v42;
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = *(_BYTE *)(v44 + 8);
    *((_BYTE *)v6 + v8[15]) = *(_BYTE *)(v7 + v8[15]);
    v45 = v8[16];
    v46 = (char *)v6 + v45;
    v47 = v7 + v45;
    *(_QWORD *)v46 = *(_QWORD *)v47;
    v46[8] = *(_BYTE *)(v47 + 8);
    v48 = v8[17];
    v49 = (char *)v6 + v48;
    v50 = v7 + v48;
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v49[8] = *(_BYTE *)(v50 + 8);
    v51 = v8[18];
    v52 = (char *)v6 + v51;
    v53 = v7 + v51;
    v52[8] = *(_BYTE *)(v53 + 8);
    *(_QWORD *)v52 = *(_QWORD *)v53;
    v54 = v8[19];
    v55 = (char *)v6 + v54;
    v56 = v7 + v54;
    v55[8] = *(_BYTE *)(v56 + 8);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    v57 = v8[20];
    v58 = (char *)v6 + v57;
    v59 = v7 + v57;
    v58[8] = *(_BYTE *)(v59 + 8);
    *(_QWORD *)v58 = *(_QWORD *)v59;
    v60 = v8[21];
    v61 = (char *)v6 + v60;
    v62 = v7 + v60;
    *(_QWORD *)v61 = *(_QWORD *)v62;
    v61[8] = *(_BYTE *)(v62 + 8);
    v63 = v8[22];
    v64 = (char *)v6 + v63;
    v65 = v7 + v63;
    *(_QWORD *)v64 = *(_QWORD *)v65;
    v64[8] = *(_BYTE *)(v65 + 8);
    v66 = v8[23];
    v67 = (char *)v6 + v66;
    v68 = v7 + v66;
    *(_QWORD *)v67 = *(_QWORD *)v68;
    v67[8] = *(_BYTE *)(v68 + 8);
    v69 = v8[24];
    v70 = (_QWORD *)((char *)v6 + v69);
    v71 = (_QWORD *)(v7 + v69);
    v241 = v71[1];
    *v70 = *v71;
    v70[1] = v241;
    v72 = v8[25];
    v73 = (_QWORD *)((char *)v6 + v72);
    v74 = (_QWORD *)(v7 + v72);
    v240 = v74[1];
    *v73 = *v74;
    v73[1] = v240;
    v75 = v8[26];
    v76 = (char *)v6 + v75;
    v77 = v7 + v75;
    *(_QWORD *)v76 = *(_QWORD *)v77;
    v76[8] = *(_BYTE *)(v77 + 8);
    v78 = v8[27];
    v79 = (char *)v6 + v78;
    v80 = v7 + v78;
    v79[8] = *(_BYTE *)(v80 + 8);
    *(_QWORD *)v79 = *(_QWORD *)v80;
    v81 = v8[28];
    v82 = (char *)v6 + v81;
    v83 = v7 + v81;
    *(_QWORD *)v82 = *(_QWORD *)v83;
    v82[8] = *(_BYTE *)(v83 + 8);
    v84 = v8[29];
    v85 = (char *)v6 + v84;
    v86 = v7 + v84;
    *(_QWORD *)v85 = *(_QWORD *)v86;
    v85[8] = *(_BYTE *)(v86 + 8);
    v87 = v8[30];
    v88 = (char *)v6 + v87;
    v89 = v7 + v87;
    *(_QWORD *)v88 = *(_QWORD *)v89;
    v88[8] = *(_BYTE *)(v89 + 8);
    *((_BYTE *)v6 + v8[31]) = *(_BYTE *)(v7 + v8[31]);
    *((_BYTE *)v6 + v8[32]) = *(_BYTE *)(v7 + v8[32]);
    v90 = v8[33];
    v91 = (_QWORD *)((char *)v6 + v90);
    v92 = (_QWORD *)(v7 + v90);
    v239 = v92[1];
    *v91 = *v92;
    v91[1] = v239;
    v93 = v8[34];
    v94 = (char *)v6 + v93;
    v95 = v7 + v93;
    *(_QWORD *)v94 = *(_QWORD *)v95;
    v94[8] = *(_BYTE *)(v95 + 8);
    v96 = v8[35];
    v97 = (char *)v6 + v96;
    v98 = v7 + v96;
    *(_QWORD *)v97 = *(_QWORD *)v98;
    v97[8] = *(_BYTE *)(v98 + 8);
    v99 = v8[36];
    v100 = (char *)v6 + v99;
    v101 = v7 + v99;
    v100[8] = *(_BYTE *)(v101 + 8);
    *(_QWORD *)v100 = *(_QWORD *)v101;
    v102 = v8[37];
    v103 = (char *)v6 + v102;
    v104 = v7 + v102;
    v103[8] = *(_BYTE *)(v104 + 8);
    *(_QWORD *)v103 = *(_QWORD *)v104;
    v105 = v8[38];
    v106 = (char *)v6 + v105;
    v107 = v7 + v105;
    *(_QWORD *)v106 = *(_QWORD *)v107;
    v106[8] = *(_BYTE *)(v107 + 8);
    v108 = v8[39];
    v109 = (char *)v6 + v108;
    v110 = v7 + v108;
    *(_QWORD *)v109 = *(_QWORD *)v110;
    v109[8] = *(_BYTE *)(v110 + 8);
    v111 = v8[40];
    v112 = (char *)v6 + v111;
    v113 = v7 + v111;
    *(_QWORD *)v112 = *(_QWORD *)v113;
    v112[8] = *(_BYTE *)(v113 + 8);
    v114 = v8[41];
    v115 = (char *)v6 + v114;
    v116 = v7 + v114;
    *(_QWORD *)v115 = *(_QWORD *)v116;
    v115[8] = *(_BYTE *)(v116 + 8);
    v117 = v8[42];
    v118 = (_QWORD *)((char *)v6 + v117);
    v119 = (_QWORD *)(v7 + v117);
    v120 = v119[1];
    *v118 = *v119;
    v118[1] = v120;
    v121 = v8[43];
    v122 = (_QWORD *)((char *)v6 + v121);
    v123 = (_QWORD *)(v7 + v121);
    v124 = v123[1];
    *v122 = *v123;
    v122[1] = v124;
    v125 = v8[44];
    v126 = (_QWORD *)((char *)v6 + v125);
    v127 = (_QWORD *)(v7 + v125);
    v128 = v127[1];
    *v126 = *v127;
    v126[1] = v128;
    *((_BYTE *)v6 + v8[45]) = *(_BYTE *)(v7 + v8[45]);
    v129 = v8[46];
    v130 = (char *)v6 + v129;
    v131 = v7 + v129;
    *(_QWORD *)v130 = *(_QWORD *)v131;
    v130[8] = *(_BYTE *)(v131 + 8);
    v132 = v8[47];
    v133 = (char *)v6 + v132;
    v134 = v7 + v132;
    *(_QWORD *)v133 = *(_QWORD *)v134;
    v133[8] = *(_BYTE *)(v134 + 8);
    v135 = v8[48];
    v136 = (_QWORD *)((char *)v6 + v135);
    v137 = (_QWORD *)(v7 + v135);
    v138 = v137[1];
    *v136 = *v137;
    v136[1] = v138;
    v139 = v8[49];
    v140 = (char *)v6 + v139;
    v141 = v7 + v139;
    v140[8] = *(_BYTE *)(v141 + 8);
    *(_QWORD *)v140 = *(_QWORD *)v141;
    v142 = v8[50];
    v143 = (char *)v6 + v142;
    v144 = v7 + v142;
    v143[8] = *(_BYTE *)(v144 + 8);
    *(_QWORD *)v143 = *(_QWORD *)v144;
    v145 = v8[51];
    v146 = (char *)v6 + v145;
    v147 = v7 + v145;
    v146[8] = *(_BYTE *)(v147 + 8);
    *(_QWORD *)v146 = *(_QWORD *)v147;
    v148 = v8[52];
    v149 = (char *)v6 + v148;
    v150 = v7 + v148;
    *(_QWORD *)v149 = *(_QWORD *)v150;
    v149[8] = *(_BYTE *)(v150 + 8);
    v151 = v8[53];
    v152 = (_QWORD *)((char *)v6 + v151);
    v153 = (_QWORD *)(v7 + v151);
    v154 = v153[1];
    *v152 = *v153;
    v152[1] = v154;
    v155 = v8[54];
    v156 = (char *)v6 + v155;
    v157 = (const void *)(v7 + v155);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__dst(v157, 1, v244))
    {
      v158 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v238 + 16))(v156, v157, v244);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v238 + 56))(v156, 0, 1, v244);
    }
    v159 = v8[55];
    v160 = (char *)v6 + v159;
    v161 = v7 + v159;
    *(_QWORD *)v160 = *(_QWORD *)v161;
    v160[8] = *(_BYTE *)(v161 + 8);
    v162 = v8[56];
    v163 = (char *)v6 + v162;
    v164 = v7 + v162;
    v163[8] = *(_BYTE *)(v164 + 8);
    *(_QWORD *)v163 = *(_QWORD *)v164;
    v165 = v8[57];
    v166 = (_QWORD *)((char *)v6 + v165);
    v167 = (_QWORD *)(v7 + v165);
    v168 = v167[1];
    *v166 = *v167;
    v166[1] = v168;
    v169 = v8[58];
    v170 = (_QWORD *)((char *)v6 + v169);
    v171 = (_QWORD *)(v7 + v169);
    v172 = v171[1];
    *v170 = *v171;
    v170[1] = v172;
    v173 = v8[59];
    v174 = (char *)v6 + v173;
    v175 = v7 + v173;
    *(_QWORD *)v174 = *(_QWORD *)v175;
    v174[8] = *(_BYTE *)(v175 + 8);
    v176 = v8[60];
    v177 = (_QWORD *)((char *)v6 + v176);
    v178 = (_QWORD *)(v7 + v176);
    v179 = v178[1];
    *v177 = *v178;
    v177[1] = v179;
    *((_BYTE *)v6 + v8[61]) = *(_BYTE *)(v7 + v8[61]);
    v180 = v8[62];
    __dsta = (char *)v6 + v180;
    v181 = (const void *)(v7 + v180);
    v182 = sub_1AD63B084();
    v183 = *(_QWORD *)(v182 - 8);
    v184 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v183 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v184(v181, 1, v182))
    {
      v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      memcpy(__dsta, v181, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v183 + 16))(__dsta, v181, v182);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v183 + 56))(__dsta, 0, 1, v182);
    }
    v186 = v8[63];
    v187 = (_QWORD *)((char *)v6 + v186);
    v188 = (_QWORD *)(v7 + v186);
    v189 = v188[1];
    *v187 = *v188;
    v187[1] = v189;
    *((_BYTE *)v6 + v8[64]) = *(_BYTE *)(v7 + v8[64]);
    v190 = v8[65];
    v191 = (_QWORD *)((char *)v6 + v190);
    v192 = (_QWORD *)(v7 + v190);
    v193 = v192[1];
    *v191 = *v192;
    v191[1] = v193;
    v194 = v8[66];
    v195 = (char *)v6 + v194;
    v196 = v7 + v194;
    *(_QWORD *)v195 = *(_QWORD *)v196;
    v195[8] = *(_BYTE *)(v196 + 8);
    v197 = v8[67];
    v198 = (char *)v6 + v197;
    v199 = v7 + v197;
    *(_QWORD *)v198 = *(_QWORD *)v199;
    v198[8] = *(_BYTE *)(v199 + 8);
    v200 = v8[68];
    v201 = (char *)v6 + v200;
    v202 = v7 + v200;
    v201[8] = *(_BYTE *)(v202 + 8);
    *(_QWORD *)v201 = *(_QWORD *)v202;
    v203 = v8[69];
    v204 = (char *)v6 + v203;
    v205 = v7 + v203;
    *(_QWORD *)v204 = *(_QWORD *)v205;
    v204[8] = *(_BYTE *)(v205 + 8);
    *((_BYTE *)v6 + v8[70]) = *(_BYTE *)(v7 + v8[70]);
    v206 = v8[71];
    v207 = (char *)v6 + v206;
    v208 = v7 + v206;
    *(_QWORD *)v207 = *(_QWORD *)v208;
    v207[8] = *(_BYTE *)(v208 + 8);
    v209 = v8[72];
    v210 = (char *)v6 + v209;
    v211 = v7 + v209;
    v210[8] = *(_BYTE *)(v211 + 8);
    *(_QWORD *)v210 = *(_QWORD *)v211;
    v212 = v8[73];
    v213 = (char *)v6 + v212;
    v214 = v7 + v212;
    *(_QWORD *)v213 = *(_QWORD *)v214;
    v213[8] = *(_BYTE *)(v214 + 8);
    v215 = v8[74];
    v216 = (char *)v6 + v215;
    v217 = v7 + v215;
    *(_QWORD *)v216 = *(_QWORD *)v217;
    v216[8] = *(_BYTE *)(v217 + 8);
    v218 = v8[75];
    v219 = (char *)v6 + v218;
    v220 = v7 + v218;
    *(_QWORD *)v219 = *(_QWORD *)v220;
    v219[8] = *(_BYTE *)(v220 + 8);
    *((_BYTE *)v6 + v8[76]) = *(_BYTE *)(v7 + v8[76]);
    v221 = v8[77];
    v222 = (char *)v6 + v221;
    v223 = v7 + v221;
    *(_QWORD *)v222 = *(_QWORD *)v223;
    v222[8] = *(_BYTE *)(v223 + 8);
    *((_BYTE *)v6 + v8[78]) = *(_BYTE *)(v7 + v8[78]);
    *((_BYTE *)v6 + v8[79]) = *(_BYTE *)(v7 + v8[79]);
    *((_BYTE *)v6 + v8[80]) = *(_BYTE *)(v7 + v8[80]);
    v224 = v8[81];
    v225 = (char *)v6 + v224;
    v226 = v7 + v224;
    *(_QWORD *)v225 = *(_QWORD *)v226;
    v225[8] = *(_BYTE *)(v226 + 8);
    *((_BYTE *)v6 + v8[82]) = *(_BYTE *)(v7 + v8[82]);
    *((_BYTE *)v6 + v8[83]) = *(_BYTE *)(v7 + v8[83]);
    v227 = v8[84];
    v228 = (char *)v6 + v227;
    v229 = v7 + v227;
    *(_QWORD *)v228 = *(_QWORD *)v229;
    v228[8] = *(_BYTE *)(v229 + 8);
    *((_BYTE *)v6 + v8[85]) = *(_BYTE *)(v7 + v8[85]);
    *((_BYTE *)v6 + v8[86]) = *(_BYTE *)(v7 + v8[86]);
    *((_BYTE *)v6 + v8[87]) = *(_BYTE *)(v7 + v8[87]);
    *((_BYTE *)v6 + v8[88]) = *(_BYTE *)(v7 + v8[88]);
    v230 = v8[89];
    v231 = (char *)v6 + v230;
    v232 = v7 + v230;
    *(_QWORD *)v231 = *(_QWORD *)v232;
    v231[8] = *(_BYTE *)(v232 + 8);
    v233 = v8[90];
    v234 = (_QWORD *)((char *)v6 + v233);
    v235 = (_QWORD *)(v7 + v233);
    v236 = v235[1];
    *v234 = *v235;
    v234[1] = v236;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  return v16;
}

uint64_t destroy for LargeImage.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = (int *)type metadata accessor for MediaMetadata();
  v4 = v2 + v3[5];
  v5 = sub_1AD63B03C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v2 + v3[54];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v2 + v3[62];
  v10 = sub_1AD63B084();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LargeImage.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  const void *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  const void *v177;
  uint64_t v178;
  uint64_t v179;
  unsigned int (*v180)(const void *, uint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unsigned int (*__dst)(const void *, uint64_t, uint64_t);
  char *__dsta;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(int *)(a3 + 28);
  v4 = (_OWORD *)(a1 + v3);
  v5 = a2 + v3;
  *(_OWORD *)((char *)v4 + 9) = *(_OWORD *)(a2 + v3 + 9);
  *v4 = *(_OWORD *)(a2 + v3);
  v6 = (int *)type metadata accessor for MediaMetadata();
  v7 = v6[5];
  v8 = (char *)v4 + v7;
  v9 = (const void *)(v5 + v7);
  v10 = sub_1AD63B03C();
  v11 = *(_QWORD *)(v10 - 8);
  __dst = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v234 = v11;
  v240 = v10;
  if (__dst(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = v6[6];
  v14 = (char *)v4 + v13;
  v15 = v5 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = *(_BYTE *)(v15 + 8);
  v16 = v6[7];
  v17 = (char *)v4 + v16;
  v18 = v5 + v16;
  v17[8] = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = v6[8];
  v20 = (char *)v4 + v19;
  v21 = v5 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = *(_BYTE *)(v21 + 8);
  v22 = v6[9];
  v23 = (char *)v4 + v22;
  v24 = v5 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = *(_BYTE *)(v24 + 8);
  v25 = v6[10];
  v26 = (char *)v4 + v25;
  v27 = v5 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = *(_BYTE *)(v27 + 8);
  v28 = v6[11];
  v29 = (_QWORD *)((char *)v4 + v28);
  v30 = (_QWORD *)(v5 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = v6[12];
  v33 = (_QWORD *)((char *)v4 + v32);
  v34 = (_QWORD *)(v5 + v32);
  v239 = v34[1];
  *v33 = *v34;
  v33[1] = v239;
  v35 = v6[13];
  v36 = (_QWORD *)((char *)v4 + v35);
  v37 = (_QWORD *)(v5 + v35);
  v238 = v37[1];
  *v36 = *v37;
  v36[1] = v238;
  v38 = v6[14];
  v39 = (char *)v4 + v38;
  v40 = v5 + v38;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = *(_BYTE *)(v40 + 8);
  *((_BYTE *)v4 + v6[15]) = *(_BYTE *)(v5 + v6[15]);
  v41 = v6[16];
  v42 = (char *)v4 + v41;
  v43 = v5 + v41;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v42[8] = *(_BYTE *)(v43 + 8);
  v44 = v6[17];
  v45 = (char *)v4 + v44;
  v46 = v5 + v44;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = *(_BYTE *)(v46 + 8);
  v47 = v6[18];
  v48 = (char *)v4 + v47;
  v49 = v5 + v47;
  v48[8] = *(_BYTE *)(v49 + 8);
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v50 = v6[19];
  v51 = (char *)v4 + v50;
  v52 = v5 + v50;
  v51[8] = *(_BYTE *)(v52 + 8);
  *(_QWORD *)v51 = *(_QWORD *)v52;
  v53 = v6[20];
  v54 = (char *)v4 + v53;
  v55 = v5 + v53;
  v54[8] = *(_BYTE *)(v55 + 8);
  *(_QWORD *)v54 = *(_QWORD *)v55;
  v56 = v6[21];
  v57 = (char *)v4 + v56;
  v58 = v5 + v56;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = *(_BYTE *)(v58 + 8);
  v59 = v6[22];
  v60 = (char *)v4 + v59;
  v61 = v5 + v59;
  *(_QWORD *)v60 = *(_QWORD *)v61;
  v60[8] = *(_BYTE *)(v61 + 8);
  v62 = v6[23];
  v63 = (char *)v4 + v62;
  v64 = v5 + v62;
  *(_QWORD *)v63 = *(_QWORD *)v64;
  v63[8] = *(_BYTE *)(v64 + 8);
  v65 = v6[24];
  v66 = (_QWORD *)((char *)v4 + v65);
  v67 = (_QWORD *)(v5 + v65);
  v237 = v67[1];
  *v66 = *v67;
  v66[1] = v237;
  v68 = v6[25];
  v69 = (_QWORD *)((char *)v4 + v68);
  v70 = (_QWORD *)(v5 + v68);
  v236 = v70[1];
  *v69 = *v70;
  v69[1] = v236;
  v71 = v6[26];
  v72 = (char *)v4 + v71;
  v73 = v5 + v71;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v72[8] = *(_BYTE *)(v73 + 8);
  v74 = v6[27];
  v75 = (char *)v4 + v74;
  v76 = v5 + v74;
  v75[8] = *(_BYTE *)(v76 + 8);
  *(_QWORD *)v75 = *(_QWORD *)v76;
  v77 = v6[28];
  v78 = (char *)v4 + v77;
  v79 = v5 + v77;
  *(_QWORD *)v78 = *(_QWORD *)v79;
  v78[8] = *(_BYTE *)(v79 + 8);
  v80 = v6[29];
  v81 = (char *)v4 + v80;
  v82 = v5 + v80;
  *(_QWORD *)v81 = *(_QWORD *)v82;
  v81[8] = *(_BYTE *)(v82 + 8);
  v83 = v6[30];
  v84 = (char *)v4 + v83;
  v85 = v5 + v83;
  *(_QWORD *)v84 = *(_QWORD *)v85;
  v84[8] = *(_BYTE *)(v85 + 8);
  *((_BYTE *)v4 + v6[31]) = *(_BYTE *)(v5 + v6[31]);
  *((_BYTE *)v4 + v6[32]) = *(_BYTE *)(v5 + v6[32]);
  v86 = v6[33];
  v87 = (_QWORD *)((char *)v4 + v86);
  v88 = (_QWORD *)(v5 + v86);
  v235 = v88[1];
  *v87 = *v88;
  v87[1] = v235;
  v89 = v6[34];
  v90 = (char *)v4 + v89;
  v91 = v5 + v89;
  *(_QWORD *)v90 = *(_QWORD *)v91;
  v90[8] = *(_BYTE *)(v91 + 8);
  v92 = v6[35];
  v93 = (char *)v4 + v92;
  v94 = v5 + v92;
  *(_QWORD *)v93 = *(_QWORD *)v94;
  v93[8] = *(_BYTE *)(v94 + 8);
  v95 = v6[36];
  v96 = (char *)v4 + v95;
  v97 = v5 + v95;
  v96[8] = *(_BYTE *)(v97 + 8);
  *(_QWORD *)v96 = *(_QWORD *)v97;
  v98 = v6[37];
  v99 = (char *)v4 + v98;
  v100 = v5 + v98;
  v99[8] = *(_BYTE *)(v100 + 8);
  *(_QWORD *)v99 = *(_QWORD *)v100;
  v101 = v6[38];
  v102 = (char *)v4 + v101;
  v103 = v5 + v101;
  *(_QWORD *)v102 = *(_QWORD *)v103;
  v102[8] = *(_BYTE *)(v103 + 8);
  v104 = v6[39];
  v105 = (char *)v4 + v104;
  v106 = v5 + v104;
  *(_QWORD *)v105 = *(_QWORD *)v106;
  v105[8] = *(_BYTE *)(v106 + 8);
  v107 = v6[40];
  v108 = (char *)v4 + v107;
  v109 = v5 + v107;
  *(_QWORD *)v108 = *(_QWORD *)v109;
  v108[8] = *(_BYTE *)(v109 + 8);
  v110 = v6[41];
  v111 = (char *)v4 + v110;
  v112 = v5 + v110;
  *(_QWORD *)v111 = *(_QWORD *)v112;
  v111[8] = *(_BYTE *)(v112 + 8);
  v113 = v6[42];
  v114 = (_QWORD *)((char *)v4 + v113);
  v115 = (_QWORD *)(v5 + v113);
  v116 = v115[1];
  *v114 = *v115;
  v114[1] = v116;
  v117 = v6[43];
  v118 = (_QWORD *)((char *)v4 + v117);
  v119 = (_QWORD *)(v5 + v117);
  v120 = v119[1];
  *v118 = *v119;
  v118[1] = v120;
  v121 = v6[44];
  v122 = (_QWORD *)((char *)v4 + v121);
  v123 = (_QWORD *)(v5 + v121);
  v124 = v123[1];
  *v122 = *v123;
  v122[1] = v124;
  *((_BYTE *)v4 + v6[45]) = *(_BYTE *)(v5 + v6[45]);
  v125 = v6[46];
  v126 = (char *)v4 + v125;
  v127 = v5 + v125;
  *(_QWORD *)v126 = *(_QWORD *)v127;
  v126[8] = *(_BYTE *)(v127 + 8);
  v128 = v6[47];
  v129 = (char *)v4 + v128;
  v130 = v5 + v128;
  *(_QWORD *)v129 = *(_QWORD *)v130;
  v129[8] = *(_BYTE *)(v130 + 8);
  v131 = v6[48];
  v132 = (_QWORD *)((char *)v4 + v131);
  v133 = (_QWORD *)(v5 + v131);
  v134 = v133[1];
  *v132 = *v133;
  v132[1] = v134;
  v135 = v6[49];
  v136 = (char *)v4 + v135;
  v137 = v5 + v135;
  v136[8] = *(_BYTE *)(v137 + 8);
  *(_QWORD *)v136 = *(_QWORD *)v137;
  v138 = v6[50];
  v139 = (char *)v4 + v138;
  v140 = v5 + v138;
  v139[8] = *(_BYTE *)(v140 + 8);
  *(_QWORD *)v139 = *(_QWORD *)v140;
  v141 = v6[51];
  v142 = (char *)v4 + v141;
  v143 = v5 + v141;
  v142[8] = *(_BYTE *)(v143 + 8);
  *(_QWORD *)v142 = *(_QWORD *)v143;
  v144 = v6[52];
  v145 = (char *)v4 + v144;
  v146 = v5 + v144;
  *(_QWORD *)v145 = *(_QWORD *)v146;
  v145[8] = *(_BYTE *)(v146 + 8);
  v147 = v6[53];
  v148 = (_QWORD *)((char *)v4 + v147);
  v149 = (_QWORD *)(v5 + v147);
  v150 = v149[1];
  *v148 = *v149;
  v148[1] = v150;
  v151 = v6[54];
  v152 = (char *)v4 + v151;
  v153 = (const void *)(v5 + v151);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__dst(v153, 1, v240))
  {
    v154 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v234 + 16))(v152, v153, v240);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v234 + 56))(v152, 0, 1, v240);
  }
  v155 = v6[55];
  v156 = (char *)v4 + v155;
  v157 = v5 + v155;
  *(_QWORD *)v156 = *(_QWORD *)v157;
  v156[8] = *(_BYTE *)(v157 + 8);
  v158 = v6[56];
  v159 = (char *)v4 + v158;
  v160 = v5 + v158;
  v159[8] = *(_BYTE *)(v160 + 8);
  *(_QWORD *)v159 = *(_QWORD *)v160;
  v161 = v6[57];
  v162 = (_QWORD *)((char *)v4 + v161);
  v163 = (_QWORD *)(v5 + v161);
  v164 = v163[1];
  *v162 = *v163;
  v162[1] = v164;
  v165 = v6[58];
  v166 = (_QWORD *)((char *)v4 + v165);
  v167 = (_QWORD *)(v5 + v165);
  v168 = v167[1];
  *v166 = *v167;
  v166[1] = v168;
  v169 = v6[59];
  v170 = (char *)v4 + v169;
  v171 = v5 + v169;
  *(_QWORD *)v170 = *(_QWORD *)v171;
  v170[8] = *(_BYTE *)(v171 + 8);
  v172 = v6[60];
  v173 = (_QWORD *)((char *)v4 + v172);
  v174 = (_QWORD *)(v5 + v172);
  v175 = v174[1];
  *v173 = *v174;
  v173[1] = v175;
  *((_BYTE *)v4 + v6[61]) = *(_BYTE *)(v5 + v6[61]);
  v176 = v6[62];
  __dsta = (char *)v4 + v176;
  v177 = (const void *)(v5 + v176);
  v178 = sub_1AD63B084();
  v179 = *(_QWORD *)(v178 - 8);
  v180 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v179 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v180(v177, 1, v178))
  {
    v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(__dsta, v177, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v179 + 16))(__dsta, v177, v178);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v179 + 56))(__dsta, 0, 1, v178);
  }
  v182 = v6[63];
  v183 = (_QWORD *)((char *)v4 + v182);
  v184 = (_QWORD *)(v5 + v182);
  v185 = v184[1];
  *v183 = *v184;
  v183[1] = v185;
  *((_BYTE *)v4 + v6[64]) = *(_BYTE *)(v5 + v6[64]);
  v186 = v6[65];
  v187 = (_QWORD *)((char *)v4 + v186);
  v188 = (_QWORD *)(v5 + v186);
  v189 = v188[1];
  *v187 = *v188;
  v187[1] = v189;
  v190 = v6[66];
  v191 = (char *)v4 + v190;
  v192 = v5 + v190;
  *(_QWORD *)v191 = *(_QWORD *)v192;
  v191[8] = *(_BYTE *)(v192 + 8);
  v193 = v6[67];
  v194 = (char *)v4 + v193;
  v195 = v5 + v193;
  *(_QWORD *)v194 = *(_QWORD *)v195;
  v194[8] = *(_BYTE *)(v195 + 8);
  v196 = v6[68];
  v197 = (char *)v4 + v196;
  v198 = v5 + v196;
  v197[8] = *(_BYTE *)(v198 + 8);
  *(_QWORD *)v197 = *(_QWORD *)v198;
  v199 = v6[69];
  v200 = (char *)v4 + v199;
  v201 = v5 + v199;
  *(_QWORD *)v200 = *(_QWORD *)v201;
  v200[8] = *(_BYTE *)(v201 + 8);
  *((_BYTE *)v4 + v6[70]) = *(_BYTE *)(v5 + v6[70]);
  v202 = v6[71];
  v203 = (char *)v4 + v202;
  v204 = v5 + v202;
  *(_QWORD *)v203 = *(_QWORD *)v204;
  v203[8] = *(_BYTE *)(v204 + 8);
  v205 = v6[72];
  v206 = (char *)v4 + v205;
  v207 = v5 + v205;
  v206[8] = *(_BYTE *)(v207 + 8);
  *(_QWORD *)v206 = *(_QWORD *)v207;
  v208 = v6[73];
  v209 = (char *)v4 + v208;
  v210 = v5 + v208;
  *(_QWORD *)v209 = *(_QWORD *)v210;
  v209[8] = *(_BYTE *)(v210 + 8);
  v211 = v6[74];
  v212 = (char *)v4 + v211;
  v213 = v5 + v211;
  *(_QWORD *)v212 = *(_QWORD *)v213;
  v212[8] = *(_BYTE *)(v213 + 8);
  v214 = v6[75];
  v215 = (char *)v4 + v214;
  v216 = v5 + v214;
  *(_QWORD *)v215 = *(_QWORD *)v216;
  v215[8] = *(_BYTE *)(v216 + 8);
  *((_BYTE *)v4 + v6[76]) = *(_BYTE *)(v5 + v6[76]);
  v217 = v6[77];
  v218 = (char *)v4 + v217;
  v219 = v5 + v217;
  *(_QWORD *)v218 = *(_QWORD *)v219;
  v218[8] = *(_BYTE *)(v219 + 8);
  *((_BYTE *)v4 + v6[78]) = *(_BYTE *)(v5 + v6[78]);
  *((_BYTE *)v4 + v6[79]) = *(_BYTE *)(v5 + v6[79]);
  *((_BYTE *)v4 + v6[80]) = *(_BYTE *)(v5 + v6[80]);
  v220 = v6[81];
  v221 = (char *)v4 + v220;
  v222 = v5 + v220;
  *(_QWORD *)v221 = *(_QWORD *)v222;
  v221[8] = *(_BYTE *)(v222 + 8);
  *((_BYTE *)v4 + v6[82]) = *(_BYTE *)(v5 + v6[82]);
  *((_BYTE *)v4 + v6[83]) = *(_BYTE *)(v5 + v6[83]);
  v223 = v6[84];
  v224 = (char *)v4 + v223;
  v225 = v5 + v223;
  *(_QWORD *)v224 = *(_QWORD *)v225;
  v224[8] = *(_BYTE *)(v225 + 8);
  *((_BYTE *)v4 + v6[85]) = *(_BYTE *)(v5 + v6[85]);
  *((_BYTE *)v4 + v6[86]) = *(_BYTE *)(v5 + v6[86]);
  *((_BYTE *)v4 + v6[87]) = *(_BYTE *)(v5 + v6[87]);
  *((_BYTE *)v4 + v6[88]) = *(_BYTE *)(v5 + v6[88]);
  v226 = v6[89];
  v227 = (char *)v4 + v226;
  v228 = v5 + v226;
  *(_QWORD *)v227 = *(_QWORD *)v228;
  v227[8] = *(_BYTE *)(v228 + 8);
  v229 = v6[90];
  v230 = (_QWORD *)((char *)v4 + v229);
  v231 = (_QWORD *)(v5 + v229);
  v232 = v231[1];
  *v230 = *v231;
  v230[1] = v232;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LargeImage.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  char *v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  char *v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  char *v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  _QWORD *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  int v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  _QWORD *v199;
  uint64_t v200;
  _QWORD *v201;
  _QWORD *v202;
  uint64_t v203;
  char *v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  _QWORD *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t (*v215)(char *, uint64_t, uint64_t);
  int v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  _QWORD *v221;
  uint64_t v222;
  _QWORD *v223;
  _QWORD *v224;
  uint64_t v225;
  char *v226;
  uint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t *v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t *v275;
  uint64_t v276;
  uint64_t v277;
  _QWORD *v278;
  _QWORD *v279;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (_OWORD *)(a1 + v4);
  v6 = a2 + v4;
  v7 = *(_OWORD *)(a2 + v4);
  *(_OWORD *)((char *)v5 + 9) = *(_OWORD *)(a2 + v4 + 9);
  *v5 = v7;
  v8 = (int *)type metadata accessor for MediaMetadata();
  v9 = v8[5];
  v10 = (char *)v5 + v9;
  v11 = (char *)(v6 + v9);
  v12 = sub_1AD63B03C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  v18 = v8[6];
  v19 = (char *)v5 + v18;
  v20 = (uint64_t *)(v6 + v18);
  v21 = *v20;
  v19[8] = *((_BYTE *)v20 + 8);
  *(_QWORD *)v19 = v21;
  v22 = v8[7];
  v23 = (char *)v5 + v22;
  v24 = (uint64_t *)(v6 + v22);
  v25 = *v24;
  v23[8] = *((_BYTE *)v24 + 8);
  *(_QWORD *)v23 = v25;
  v26 = v8[8];
  v27 = (char *)v5 + v26;
  v28 = (uint64_t *)(v6 + v26);
  v29 = *v28;
  v27[8] = *((_BYTE *)v28 + 8);
  *(_QWORD *)v27 = v29;
  v30 = v8[9];
  v31 = (char *)v5 + v30;
  v32 = (uint64_t *)(v6 + v30);
  v33 = *v32;
  v31[8] = *((_BYTE *)v32 + 8);
  *(_QWORD *)v31 = v33;
  v34 = v8[10];
  v35 = (char *)v5 + v34;
  v36 = (uint64_t *)(v6 + v34);
  v37 = *v36;
  v35[8] = *((_BYTE *)v36 + 8);
  *(_QWORD *)v35 = v37;
  v38 = v8[11];
  v39 = (_QWORD *)((char *)v5 + v38);
  v40 = (_QWORD *)(v6 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = v8[12];
  v42 = (_QWORD *)((char *)v5 + v41);
  v43 = (_QWORD *)(v6 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = v8[13];
  v45 = (_QWORD *)((char *)v5 + v44);
  v46 = (_QWORD *)(v6 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = v8[14];
  v48 = (char *)v5 + v47;
  v49 = (uint64_t *)(v6 + v47);
  v50 = *v49;
  v48[8] = *((_BYTE *)v49 + 8);
  *(_QWORD *)v48 = v50;
  *((_BYTE *)v5 + v8[15]) = *(_BYTE *)(v6 + v8[15]);
  v51 = v8[16];
  v52 = (char *)v5 + v51;
  v53 = (uint64_t *)(v6 + v51);
  v54 = *v53;
  v52[8] = *((_BYTE *)v53 + 8);
  *(_QWORD *)v52 = v54;
  v55 = v8[17];
  v56 = (char *)v5 + v55;
  v57 = (uint64_t *)(v6 + v55);
  v58 = *v57;
  v56[8] = *((_BYTE *)v57 + 8);
  *(_QWORD *)v56 = v58;
  v59 = v8[18];
  v60 = (char *)v5 + v59;
  v61 = (uint64_t *)(v6 + v59);
  v62 = *v61;
  v60[8] = *((_BYTE *)v61 + 8);
  *(_QWORD *)v60 = v62;
  v63 = v8[19];
  v64 = (char *)v5 + v63;
  v65 = (uint64_t *)(v6 + v63);
  v66 = *v65;
  v64[8] = *((_BYTE *)v65 + 8);
  *(_QWORD *)v64 = v66;
  v67 = v8[20];
  v68 = (char *)v5 + v67;
  v69 = (uint64_t *)(v6 + v67);
  v70 = *v69;
  v68[8] = *((_BYTE *)v69 + 8);
  *(_QWORD *)v68 = v70;
  v71 = v8[21];
  v72 = (char *)v5 + v71;
  v73 = (uint64_t *)(v6 + v71);
  v74 = *v73;
  v72[8] = *((_BYTE *)v73 + 8);
  *(_QWORD *)v72 = v74;
  v75 = v8[22];
  v76 = (char *)v5 + v75;
  v77 = (uint64_t *)(v6 + v75);
  v78 = *v77;
  v76[8] = *((_BYTE *)v77 + 8);
  *(_QWORD *)v76 = v78;
  v79 = v8[23];
  v80 = (char *)v5 + v79;
  v81 = (uint64_t *)(v6 + v79);
  v82 = *v81;
  v80[8] = *((_BYTE *)v81 + 8);
  *(_QWORD *)v80 = v82;
  v83 = v8[24];
  v84 = (_QWORD *)((char *)v5 + v83);
  v85 = (_QWORD *)(v6 + v83);
  *v84 = *v85;
  v84[1] = v85[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v86 = v8[25];
  v87 = (_QWORD *)((char *)v5 + v86);
  v88 = (_QWORD *)(v6 + v86);
  *v87 = *v88;
  v87[1] = v88[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v89 = v8[26];
  v90 = (char *)v5 + v89;
  v91 = (uint64_t *)(v6 + v89);
  v92 = *v91;
  v90[8] = *((_BYTE *)v91 + 8);
  *(_QWORD *)v90 = v92;
  v93 = v8[27];
  v94 = (char *)v5 + v93;
  v95 = (uint64_t *)(v6 + v93);
  v96 = *v95;
  v94[8] = *((_BYTE *)v95 + 8);
  *(_QWORD *)v94 = v96;
  v97 = v8[28];
  v98 = (char *)v5 + v97;
  v99 = (uint64_t *)(v6 + v97);
  v100 = *v99;
  v98[8] = *((_BYTE *)v99 + 8);
  *(_QWORD *)v98 = v100;
  v101 = v8[29];
  v102 = (char *)v5 + v101;
  v103 = (uint64_t *)(v6 + v101);
  v104 = *v103;
  v102[8] = *((_BYTE *)v103 + 8);
  *(_QWORD *)v102 = v104;
  v105 = v8[30];
  v106 = (char *)v5 + v105;
  v107 = (uint64_t *)(v6 + v105);
  v108 = *v107;
  v106[8] = *((_BYTE *)v107 + 8);
  *(_QWORD *)v106 = v108;
  *((_BYTE *)v5 + v8[31]) = *(_BYTE *)(v6 + v8[31]);
  *((_BYTE *)v5 + v8[32]) = *(_BYTE *)(v6 + v8[32]);
  v109 = v8[33];
  v110 = (_QWORD *)((char *)v5 + v109);
  v111 = (_QWORD *)(v6 + v109);
  *v110 = *v111;
  v110[1] = v111[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v112 = v8[34];
  v113 = (char *)v5 + v112;
  v114 = (uint64_t *)(v6 + v112);
  v115 = *v114;
  v113[8] = *((_BYTE *)v114 + 8);
  *(_QWORD *)v113 = v115;
  v116 = v8[35];
  v117 = (char *)v5 + v116;
  v118 = (uint64_t *)(v6 + v116);
  v119 = *v118;
  v117[8] = *((_BYTE *)v118 + 8);
  *(_QWORD *)v117 = v119;
  v120 = v8[36];
  v121 = (char *)v5 + v120;
  v122 = (uint64_t *)(v6 + v120);
  v123 = *v122;
  v121[8] = *((_BYTE *)v122 + 8);
  *(_QWORD *)v121 = v123;
  v124 = v8[37];
  v125 = (char *)v5 + v124;
  v126 = (uint64_t *)(v6 + v124);
  v127 = *v126;
  v125[8] = *((_BYTE *)v126 + 8);
  *(_QWORD *)v125 = v127;
  v128 = v8[38];
  v129 = (char *)v5 + v128;
  v130 = (uint64_t *)(v6 + v128);
  v131 = *v130;
  v129[8] = *((_BYTE *)v130 + 8);
  *(_QWORD *)v129 = v131;
  v132 = v8[39];
  v133 = (char *)v5 + v132;
  v134 = (uint64_t *)(v6 + v132);
  v135 = *v134;
  v133[8] = *((_BYTE *)v134 + 8);
  *(_QWORD *)v133 = v135;
  v136 = v8[40];
  v137 = (char *)v5 + v136;
  v138 = (uint64_t *)(v6 + v136);
  v139 = *v138;
  v137[8] = *((_BYTE *)v138 + 8);
  *(_QWORD *)v137 = v139;
  v140 = v8[41];
  v141 = (char *)v5 + v140;
  v142 = (uint64_t *)(v6 + v140);
  v143 = *v142;
  v141[8] = *((_BYTE *)v142 + 8);
  *(_QWORD *)v141 = v143;
  v144 = v8[42];
  v145 = (_QWORD *)((char *)v5 + v144);
  v146 = (_QWORD *)(v6 + v144);
  *v145 = *v146;
  v145[1] = v146[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v147 = v8[43];
  v148 = (_QWORD *)((char *)v5 + v147);
  v149 = (_QWORD *)(v6 + v147);
  *v148 = *v149;
  v148[1] = v149[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150 = v8[44];
  v151 = (_QWORD *)((char *)v5 + v150);
  v152 = (_QWORD *)(v6 + v150);
  *v151 = *v152;
  v151[1] = v152[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + v8[45]) = *(_BYTE *)(v6 + v8[45]);
  v153 = v8[46];
  v154 = (char *)v5 + v153;
  v155 = v6 + v153;
  v156 = *(_BYTE *)(v155 + 8);
  *(_QWORD *)v154 = *(_QWORD *)v155;
  v154[8] = v156;
  v157 = v8[47];
  v158 = (char *)v5 + v157;
  v159 = (uint64_t *)(v6 + v157);
  v160 = *v159;
  v158[8] = *((_BYTE *)v159 + 8);
  *(_QWORD *)v158 = v160;
  v161 = v8[48];
  v162 = (_QWORD *)((char *)v5 + v161);
  v163 = (_QWORD *)(v6 + v161);
  *v162 = *v163;
  v162[1] = v163[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v164 = v8[49];
  v165 = (char *)v5 + v164;
  v166 = (uint64_t *)(v6 + v164);
  v167 = *v166;
  v165[8] = *((_BYTE *)v166 + 8);
  *(_QWORD *)v165 = v167;
  v168 = v8[50];
  v169 = (char *)v5 + v168;
  v170 = (uint64_t *)(v6 + v168);
  v171 = *v170;
  v169[8] = *((_BYTE *)v170 + 8);
  *(_QWORD *)v169 = v171;
  v172 = v8[51];
  v173 = (char *)v5 + v172;
  v174 = (uint64_t *)(v6 + v172);
  v175 = *v174;
  v173[8] = *((_BYTE *)v174 + 8);
  *(_QWORD *)v173 = v175;
  v176 = v8[52];
  v177 = (char *)v5 + v176;
  v178 = (uint64_t *)(v6 + v176);
  v179 = *v178;
  v177[8] = *((_BYTE *)v178 + 8);
  *(_QWORD *)v177 = v179;
  v180 = v8[53];
  v181 = (_QWORD *)((char *)v5 + v180);
  v182 = (_QWORD *)(v6 + v180);
  *v181 = *v182;
  v181[1] = v182[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v183 = v8[54];
  v184 = (char *)v5 + v183;
  v185 = (char *)(v6 + v183);
  v186 = v14((char *)v5 + v183, 1, v12);
  v187 = v14(v185, 1, v12);
  if (v186)
  {
    if (!v187)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v184, v185, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v184, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v187)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v184, v12);
LABEL_12:
    v188 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v184, v185, v12);
LABEL_13:
  v189 = v8[55];
  v190 = (char *)v5 + v189;
  v191 = (uint64_t *)(v6 + v189);
  v192 = *v191;
  v190[8] = *((_BYTE *)v191 + 8);
  *(_QWORD *)v190 = v192;
  v193 = v8[56];
  v194 = (char *)v5 + v193;
  v195 = (uint64_t *)(v6 + v193);
  v196 = *v195;
  v194[8] = *((_BYTE *)v195 + 8);
  *(_QWORD *)v194 = v196;
  v197 = v8[57];
  v198 = (_QWORD *)((char *)v5 + v197);
  v199 = (_QWORD *)(v6 + v197);
  *v198 = *v199;
  v198[1] = v199[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v200 = v8[58];
  v201 = (_QWORD *)((char *)v5 + v200);
  v202 = (_QWORD *)(v6 + v200);
  *v201 = *v202;
  v201[1] = v202[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v203 = v8[59];
  v204 = (char *)v5 + v203;
  v205 = (uint64_t *)(v6 + v203);
  v206 = *v205;
  v204[8] = *((_BYTE *)v205 + 8);
  *(_QWORD *)v204 = v206;
  v207 = v8[60];
  v208 = (_QWORD *)((char *)v5 + v207);
  v209 = (_QWORD *)(v6 + v207);
  *v208 = *v209;
  v208[1] = v209[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + v8[61]) = *(_BYTE *)(v6 + v8[61]);
  v210 = v8[62];
  v211 = (char *)v5 + v210;
  v212 = (char *)(v6 + v210);
  v213 = sub_1AD63B084();
  v214 = *(_QWORD *)(v213 - 8);
  v215 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v214 + 48);
  v216 = v215(v211, 1, v213);
  v217 = v215(v212, 1, v213);
  if (!v216)
  {
    if (!v217)
    {
      (*(void (**)(char *, char *, uint64_t))(v214 + 24))(v211, v212, v213);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v214 + 8))(v211, v213);
    goto LABEL_18;
  }
  if (v217)
  {
LABEL_18:
    v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v211, v212, v213);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v211, 0, 1, v213);
LABEL_19:
  v219 = v8[63];
  v220 = (_QWORD *)((char *)v5 + v219);
  v221 = (_QWORD *)(v6 + v219);
  *v220 = *v221;
  v220[1] = v221[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + v8[64]) = *(_BYTE *)(v6 + v8[64]);
  v222 = v8[65];
  v223 = (_QWORD *)((char *)v5 + v222);
  v224 = (_QWORD *)(v6 + v222);
  *v223 = *v224;
  v223[1] = v224[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v225 = v8[66];
  v226 = (char *)v5 + v225;
  v227 = (uint64_t *)(v6 + v225);
  v228 = *v227;
  v226[8] = *((_BYTE *)v227 + 8);
  *(_QWORD *)v226 = v228;
  v229 = v8[67];
  v230 = (char *)v5 + v229;
  v231 = (uint64_t *)(v6 + v229);
  v232 = *v231;
  v230[8] = *((_BYTE *)v231 + 8);
  *(_QWORD *)v230 = v232;
  v233 = v8[68];
  v234 = (char *)v5 + v233;
  v235 = (uint64_t *)(v6 + v233);
  v236 = *v235;
  v234[8] = *((_BYTE *)v235 + 8);
  *(_QWORD *)v234 = v236;
  v237 = v8[69];
  v238 = (char *)v5 + v237;
  v239 = (uint64_t *)(v6 + v237);
  v240 = *v239;
  v238[8] = *((_BYTE *)v239 + 8);
  *(_QWORD *)v238 = v240;
  *((_BYTE *)v5 + v8[70]) = *(_BYTE *)(v6 + v8[70]);
  v241 = v8[71];
  v242 = (char *)v5 + v241;
  v243 = (uint64_t *)(v6 + v241);
  v244 = *v243;
  v242[8] = *((_BYTE *)v243 + 8);
  *(_QWORD *)v242 = v244;
  v245 = v8[72];
  v246 = (char *)v5 + v245;
  v247 = (uint64_t *)(v6 + v245);
  v248 = *v247;
  v246[8] = *((_BYTE *)v247 + 8);
  *(_QWORD *)v246 = v248;
  v249 = v8[73];
  v250 = (char *)v5 + v249;
  v251 = (uint64_t *)(v6 + v249);
  v252 = *v251;
  v250[8] = *((_BYTE *)v251 + 8);
  *(_QWORD *)v250 = v252;
  v253 = v8[74];
  v254 = (char *)v5 + v253;
  v255 = (uint64_t *)(v6 + v253);
  v256 = *v255;
  v254[8] = *((_BYTE *)v255 + 8);
  *(_QWORD *)v254 = v256;
  v257 = v8[75];
  v258 = (char *)v5 + v257;
  v259 = (uint64_t *)(v6 + v257);
  v260 = *v259;
  v258[8] = *((_BYTE *)v259 + 8);
  *(_QWORD *)v258 = v260;
  *((_BYTE *)v5 + v8[76]) = *(_BYTE *)(v6 + v8[76]);
  v261 = v8[77];
  v262 = (char *)v5 + v261;
  v263 = (uint64_t *)(v6 + v261);
  v264 = *v263;
  v262[8] = *((_BYTE *)v263 + 8);
  *(_QWORD *)v262 = v264;
  *((_BYTE *)v5 + v8[78]) = *(_BYTE *)(v6 + v8[78]);
  *((_BYTE *)v5 + v8[79]) = *(_BYTE *)(v6 + v8[79]);
  *((_BYTE *)v5 + v8[80]) = *(_BYTE *)(v6 + v8[80]);
  v265 = v8[81];
  v266 = (char *)v5 + v265;
  v267 = (uint64_t *)(v6 + v265);
  v268 = *v267;
  v266[8] = *((_BYTE *)v267 + 8);
  *(_QWORD *)v266 = v268;
  *((_BYTE *)v5 + v8[82]) = *(_BYTE *)(v6 + v8[82]);
  *((_BYTE *)v5 + v8[83]) = *(_BYTE *)(v6 + v8[83]);
  v269 = v8[84];
  v270 = (char *)v5 + v269;
  v271 = (uint64_t *)(v6 + v269);
  v272 = *v271;
  v270[8] = *((_BYTE *)v271 + 8);
  *(_QWORD *)v270 = v272;
  *((_BYTE *)v5 + v8[85]) = *(_BYTE *)(v6 + v8[85]);
  *((_BYTE *)v5 + v8[86]) = *(_BYTE *)(v6 + v8[86]);
  *((_BYTE *)v5 + v8[87]) = *(_BYTE *)(v6 + v8[87]);
  *((_BYTE *)v5 + v8[88]) = *(_BYTE *)(v6 + v8[88]);
  v273 = v8[89];
  v274 = (char *)v5 + v273;
  v275 = (uint64_t *)(v6 + v273);
  v276 = *v275;
  v274[8] = *((_BYTE *)v275 + 8);
  *(_QWORD *)v274 = v276;
  v277 = v8[90];
  v278 = (_QWORD *)((char *)v5 + v277);
  v279 = (_QWORD *)(v6 + v277);
  *v278 = *v279;
  v278[1] = v279[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LargeImage.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  const void *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  const void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 28);
  v5 = (_OWORD *)(a1 + v4);
  v6 = a2 + v4;
  *(_OWORD *)((char *)v5 + 9) = *(_OWORD *)(a2 + v4 + 9);
  *v5 = *(_OWORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for MediaMetadata();
  v8 = v7[5];
  v9 = (char *)v5 + v8;
  v10 = (const void *)(v6 + v8);
  v11 = sub_1AD63B03C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = v7[6];
  v16 = (char *)v5 + v15;
  v17 = v6 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = *(_BYTE *)(v17 + 8);
  v18 = v7[7];
  v19 = (char *)v5 + v18;
  v20 = v6 + v18;
  v19[8] = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v21 = v7[8];
  v22 = (char *)v5 + v21;
  v23 = v6 + v21;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = *(_BYTE *)(v23 + 8);
  v24 = v7[9];
  v25 = (char *)v5 + v24;
  v26 = v6 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = *(_BYTE *)(v26 + 8);
  v27 = v7[10];
  v28 = (char *)v5 + v27;
  v29 = v6 + v27;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = *(_BYTE *)(v29 + 8);
  *(_OWORD *)((char *)v5 + v7[11]) = *(_OWORD *)(v6 + v7[11]);
  *(_OWORD *)((char *)v5 + v7[12]) = *(_OWORD *)(v6 + v7[12]);
  *(_OWORD *)((char *)v5 + v7[13]) = *(_OWORD *)(v6 + v7[13]);
  v30 = v7[14];
  v31 = (char *)v5 + v30;
  v32 = v6 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = *(_BYTE *)(v32 + 8);
  *((_BYTE *)v5 + v7[15]) = *(_BYTE *)(v6 + v7[15]);
  v33 = v7[16];
  v34 = (char *)v5 + v33;
  v35 = v6 + v33;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  v34[8] = *(_BYTE *)(v35 + 8);
  v36 = v7[17];
  v37 = (char *)v5 + v36;
  v38 = v6 + v36;
  v37[8] = *(_BYTE *)(v38 + 8);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v39 = v7[18];
  v40 = (char *)v5 + v39;
  v41 = v6 + v39;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  v40[8] = *(_BYTE *)(v41 + 8);
  v42 = v7[19];
  v43 = (char *)v5 + v42;
  v44 = v6 + v42;
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v43[8] = *(_BYTE *)(v44 + 8);
  v45 = v7[20];
  v46 = (char *)v5 + v45;
  v47 = v6 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v46[8] = *(_BYTE *)(v47 + 8);
  v48 = v7[21];
  v49 = (char *)v5 + v48;
  v50 = v6 + v48;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v49[8] = *(_BYTE *)(v50 + 8);
  v51 = v7[22];
  v52 = (char *)v5 + v51;
  v53 = v6 + v51;
  *(_QWORD *)v52 = *(_QWORD *)v53;
  v52[8] = *(_BYTE *)(v53 + 8);
  v54 = v7[23];
  v55 = (char *)v5 + v54;
  v56 = v6 + v54;
  *(_QWORD *)v55 = *(_QWORD *)v56;
  v55[8] = *(_BYTE *)(v56 + 8);
  *(_OWORD *)((char *)v5 + v7[24]) = *(_OWORD *)(v6 + v7[24]);
  *(_OWORD *)((char *)v5 + v7[25]) = *(_OWORD *)(v6 + v7[25]);
  v57 = v7[26];
  v58 = (char *)v5 + v57;
  v59 = v6 + v57;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  v58[8] = *(_BYTE *)(v59 + 8);
  v60 = v7[27];
  v61 = (char *)v5 + v60;
  v62 = v6 + v60;
  *(_QWORD *)v61 = *(_QWORD *)v62;
  v61[8] = *(_BYTE *)(v62 + 8);
  v63 = v7[28];
  v64 = (char *)v5 + v63;
  v65 = v6 + v63;
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v64[8] = *(_BYTE *)(v65 + 8);
  v66 = v7[29];
  v67 = (char *)v5 + v66;
  v68 = v6 + v66;
  *(_QWORD *)v67 = *(_QWORD *)v68;
  v67[8] = *(_BYTE *)(v68 + 8);
  v69 = v7[30];
  v70 = (char *)v5 + v69;
  v71 = v6 + v69;
  *(_QWORD *)v70 = *(_QWORD *)v71;
  v70[8] = *(_BYTE *)(v71 + 8);
  *((_BYTE *)v5 + v7[31]) = *(_BYTE *)(v6 + v7[31]);
  *((_BYTE *)v5 + v7[32]) = *(_BYTE *)(v6 + v7[32]);
  *(_OWORD *)((char *)v5 + v7[33]) = *(_OWORD *)(v6 + v7[33]);
  v72 = v7[34];
  v73 = (char *)v5 + v72;
  v74 = v6 + v72;
  v73[8] = *(_BYTE *)(v74 + 8);
  *(_QWORD *)v73 = *(_QWORD *)v74;
  v75 = v7[35];
  v76 = (char *)v5 + v75;
  v77 = v6 + v75;
  *(_QWORD *)v76 = *(_QWORD *)v77;
  v76[8] = *(_BYTE *)(v77 + 8);
  v78 = v7[36];
  v79 = (char *)v5 + v78;
  v80 = v6 + v78;
  *(_QWORD *)v79 = *(_QWORD *)v80;
  v79[8] = *(_BYTE *)(v80 + 8);
  v81 = v7[37];
  v82 = (char *)v5 + v81;
  v83 = v6 + v81;
  v82[8] = *(_BYTE *)(v83 + 8);
  *(_QWORD *)v82 = *(_QWORD *)v83;
  v84 = v7[38];
  v85 = (char *)v5 + v84;
  v86 = v6 + v84;
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v85[8] = *(_BYTE *)(v86 + 8);
  v87 = v7[39];
  v88 = (char *)v5 + v87;
  v89 = v6 + v87;
  *(_QWORD *)v88 = *(_QWORD *)v89;
  v88[8] = *(_BYTE *)(v89 + 8);
  v90 = v7[40];
  v91 = (char *)v5 + v90;
  v92 = v6 + v90;
  *(_QWORD *)v91 = *(_QWORD *)v92;
  v91[8] = *(_BYTE *)(v92 + 8);
  v93 = v7[41];
  v94 = (char *)v5 + v93;
  v95 = v6 + v93;
  *(_QWORD *)v94 = *(_QWORD *)v95;
  v94[8] = *(_BYTE *)(v95 + 8);
  *(_OWORD *)((char *)v5 + v7[42]) = *(_OWORD *)(v6 + v7[42]);
  *(_OWORD *)((char *)v5 + v7[43]) = *(_OWORD *)(v6 + v7[43]);
  *(_OWORD *)((char *)v5 + v7[44]) = *(_OWORD *)(v6 + v7[44]);
  *((_BYTE *)v5 + v7[45]) = *(_BYTE *)(v6 + v7[45]);
  v96 = v7[46];
  v97 = (char *)v5 + v96;
  v98 = v6 + v96;
  *(_QWORD *)v97 = *(_QWORD *)v98;
  v97[8] = *(_BYTE *)(v98 + 8);
  v99 = v7[47];
  v100 = (char *)v5 + v99;
  v101 = v6 + v99;
  v100[8] = *(_BYTE *)(v101 + 8);
  *(_QWORD *)v100 = *(_QWORD *)v101;
  *(_OWORD *)((char *)v5 + v7[48]) = *(_OWORD *)(v6 + v7[48]);
  v102 = v7[49];
  v103 = (char *)v5 + v102;
  v104 = v6 + v102;
  *(_QWORD *)v103 = *(_QWORD *)v104;
  v103[8] = *(_BYTE *)(v104 + 8);
  v105 = v7[50];
  v106 = (char *)v5 + v105;
  v107 = v6 + v105;
  v106[8] = *(_BYTE *)(v107 + 8);
  *(_QWORD *)v106 = *(_QWORD *)v107;
  v108 = v7[51];
  v109 = (char *)v5 + v108;
  v110 = v6 + v108;
  *(_QWORD *)v109 = *(_QWORD *)v110;
  v109[8] = *(_BYTE *)(v110 + 8);
  v111 = v7[52];
  v112 = (char *)v5 + v111;
  v113 = v6 + v111;
  *(_QWORD *)v112 = *(_QWORD *)v113;
  v112[8] = *(_BYTE *)(v113 + 8);
  *(_OWORD *)((char *)v5 + v7[53]) = *(_OWORD *)(v6 + v7[53]);
  v114 = v7[54];
  v115 = (char *)v5 + v114;
  v116 = (const void *)(v6 + v114);
  if (v13((const void *)(v6 + v114), 1, v11))
  {
    v117 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 32))(v115, v116, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v115, 0, 1, v11);
  }
  v118 = v7[55];
  v119 = (char *)v5 + v118;
  v120 = v6 + v118;
  *(_QWORD *)v119 = *(_QWORD *)v120;
  v119[8] = *(_BYTE *)(v120 + 8);
  v121 = v7[56];
  v122 = (char *)v5 + v121;
  v123 = v6 + v121;
  v122[8] = *(_BYTE *)(v123 + 8);
  *(_QWORD *)v122 = *(_QWORD *)v123;
  *(_OWORD *)((char *)v5 + v7[57]) = *(_OWORD *)(v6 + v7[57]);
  *(_OWORD *)((char *)v5 + v7[58]) = *(_OWORD *)(v6 + v7[58]);
  v124 = v7[59];
  v125 = (char *)v5 + v124;
  v126 = v6 + v124;
  *(_QWORD *)v125 = *(_QWORD *)v126;
  v125[8] = *(_BYTE *)(v126 + 8);
  *(_OWORD *)((char *)v5 + v7[60]) = *(_OWORD *)(v6 + v7[60]);
  *((_BYTE *)v5 + v7[61]) = *(_BYTE *)(v6 + v7[61]);
  v127 = v7[62];
  v128 = (char *)v5 + v127;
  v129 = (const void *)(v6 + v127);
  v130 = sub_1AD63B084();
  v131 = *(_QWORD *)(v130 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48))(v129, 1, v130))
  {
    v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v131 + 32))(v128, v129, v130);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
  }
  *(_OWORD *)((char *)v5 + v7[63]) = *(_OWORD *)(v6 + v7[63]);
  *((_BYTE *)v5 + v7[64]) = *(_BYTE *)(v6 + v7[64]);
  *(_OWORD *)((char *)v5 + v7[65]) = *(_OWORD *)(v6 + v7[65]);
  v133 = v7[66];
  v134 = (char *)v5 + v133;
  v135 = v6 + v133;
  v134[8] = *(_BYTE *)(v135 + 8);
  *(_QWORD *)v134 = *(_QWORD *)v135;
  v136 = v7[67];
  v137 = (char *)v5 + v136;
  v138 = v6 + v136;
  v137[8] = *(_BYTE *)(v138 + 8);
  *(_QWORD *)v137 = *(_QWORD *)v138;
  v139 = v7[68];
  v140 = (char *)v5 + v139;
  v141 = v6 + v139;
  v140[8] = *(_BYTE *)(v141 + 8);
  *(_QWORD *)v140 = *(_QWORD *)v141;
  v142 = v7[69];
  v143 = (char *)v5 + v142;
  v144 = v6 + v142;
  *(_QWORD *)v143 = *(_QWORD *)v144;
  v143[8] = *(_BYTE *)(v144 + 8);
  *((_BYTE *)v5 + v7[70]) = *(_BYTE *)(v6 + v7[70]);
  v145 = v7[71];
  v146 = (char *)v5 + v145;
  v147 = v6 + v145;
  *(_QWORD *)v146 = *(_QWORD *)v147;
  v146[8] = *(_BYTE *)(v147 + 8);
  v148 = v7[72];
  v149 = (char *)v5 + v148;
  v150 = v6 + v148;
  v149[8] = *(_BYTE *)(v150 + 8);
  *(_QWORD *)v149 = *(_QWORD *)v150;
  v151 = v7[73];
  v152 = (char *)v5 + v151;
  v153 = v6 + v151;
  *(_QWORD *)v152 = *(_QWORD *)v153;
  v152[8] = *(_BYTE *)(v153 + 8);
  v154 = v7[74];
  v155 = (char *)v5 + v154;
  v156 = v6 + v154;
  *(_QWORD *)v155 = *(_QWORD *)v156;
  v155[8] = *(_BYTE *)(v156 + 8);
  v157 = v7[75];
  v158 = (char *)v5 + v157;
  v159 = v6 + v157;
  *(_QWORD *)v158 = *(_QWORD *)v159;
  v158[8] = *(_BYTE *)(v159 + 8);
  *((_BYTE *)v5 + v7[76]) = *(_BYTE *)(v6 + v7[76]);
  v160 = v7[77];
  v161 = (char *)v5 + v160;
  v162 = v6 + v160;
  *(_QWORD *)v161 = *(_QWORD *)v162;
  v161[8] = *(_BYTE *)(v162 + 8);
  *((_BYTE *)v5 + v7[78]) = *(_BYTE *)(v6 + v7[78]);
  *((_BYTE *)v5 + v7[79]) = *(_BYTE *)(v6 + v7[79]);
  *((_BYTE *)v5 + v7[80]) = *(_BYTE *)(v6 + v7[80]);
  v163 = v7[81];
  v164 = (char *)v5 + v163;
  v165 = v6 + v163;
  *(_QWORD *)v164 = *(_QWORD *)v165;
  v164[8] = *(_BYTE *)(v165 + 8);
  *((_BYTE *)v5 + v7[82]) = *(_BYTE *)(v6 + v7[82]);
  *((_BYTE *)v5 + v7[83]) = *(_BYTE *)(v6 + v7[83]);
  v166 = v7[84];
  v167 = (char *)v5 + v166;
  v168 = v6 + v166;
  *(_QWORD *)v167 = *(_QWORD *)v168;
  v167[8] = *(_BYTE *)(v168 + 8);
  *((_BYTE *)v5 + v7[85]) = *(_BYTE *)(v6 + v7[85]);
  *((_BYTE *)v5 + v7[86]) = *(_BYTE *)(v6 + v7[86]);
  *((_BYTE *)v5 + v7[87]) = *(_BYTE *)(v6 + v7[87]);
  *((_BYTE *)v5 + v7[88]) = *(_BYTE *)(v6 + v7[88]);
  v169 = v7[89];
  v170 = (char *)v5 + v169;
  v171 = v6 + v169;
  v170[8] = *(_BYTE *)(v171 + 8);
  *(_QWORD *)v170 = *(_QWORD *)v171;
  *(_OWORD *)((char *)v5 + v7[90]) = *(_OWORD *)(v6 + v7[90]);
  return a1;
}

uint64_t assignWithTake for LargeImage.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  int v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t (*v206)(char *, uint64_t, uint64_t);
  int v207;
  int v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  uint64_t *v261;
  uint64_t v262;
  uint64_t v263;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 28);
  v5 = (_OWORD *)(a1 + v4);
  v6 = a2 + v4;
  *(_OWORD *)((char *)v5 + 9) = *(_OWORD *)(a2 + v4 + 9);
  *v5 = *(_OWORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for MediaMetadata();
  v8 = v7[5];
  v9 = (char *)v5 + v8;
  v10 = (char *)(v6 + v8);
  v11 = sub_1AD63B03C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = v7[6];
  v18 = (char *)v5 + v17;
  v19 = v6 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = *(_BYTE *)(v19 + 8);
  v20 = v7[7];
  v21 = (char *)v5 + v20;
  v22 = v6 + v20;
  v21[8] = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = v7[8];
  v24 = (char *)v5 + v23;
  v25 = v6 + v23;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = *(_BYTE *)(v25 + 8);
  v26 = v7[9];
  v27 = (char *)v5 + v26;
  v28 = v6 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = *(_BYTE *)(v28 + 8);
  v29 = v7[10];
  v30 = (char *)v5 + v29;
  v31 = v6 + v29;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = *(_BYTE *)(v31 + 8);
  v32 = v7[11];
  v33 = (_QWORD *)((char *)v5 + v32);
  v34 = (uint64_t *)(v6 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  v37 = v7[12];
  v38 = (_QWORD *)((char *)v5 + v37);
  v39 = (uint64_t *)(v6 + v37);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  v42 = v7[13];
  v43 = (_QWORD *)((char *)v5 + v42);
  v44 = (uint64_t *)(v6 + v42);
  v46 = *v44;
  v45 = v44[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  v47 = v7[14];
  v48 = (char *)v5 + v47;
  v49 = v6 + v47;
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v48[8] = *(_BYTE *)(v49 + 8);
  *((_BYTE *)v5 + v7[15]) = *(_BYTE *)(v6 + v7[15]);
  v50 = v7[16];
  v51 = (char *)v5 + v50;
  v52 = v6 + v50;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  v51[8] = *(_BYTE *)(v52 + 8);
  v53 = v7[17];
  v54 = (char *)v5 + v53;
  v55 = v6 + v53;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  v54[8] = *(_BYTE *)(v55 + 8);
  v56 = v7[18];
  v57 = (char *)v5 + v56;
  v58 = v6 + v56;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = *(_BYTE *)(v58 + 8);
  v59 = v7[19];
  v60 = (char *)v5 + v59;
  v61 = v6 + v59;
  *(_QWORD *)v60 = *(_QWORD *)v61;
  v60[8] = *(_BYTE *)(v61 + 8);
  v62 = v7[20];
  v63 = (char *)v5 + v62;
  v64 = v6 + v62;
  *(_QWORD *)v63 = *(_QWORD *)v64;
  v63[8] = *(_BYTE *)(v64 + 8);
  v65 = v7[21];
  v66 = (char *)v5 + v65;
  v67 = v6 + v65;
  *(_QWORD *)v66 = *(_QWORD *)v67;
  v66[8] = *(_BYTE *)(v67 + 8);
  v68 = v7[22];
  v69 = (char *)v5 + v68;
  v70 = v6 + v68;
  *(_QWORD *)v69 = *(_QWORD *)v70;
  v69[8] = *(_BYTE *)(v70 + 8);
  v71 = v7[23];
  v72 = (char *)v5 + v71;
  v73 = v6 + v71;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v72[8] = *(_BYTE *)(v73 + 8);
  v74 = v7[24];
  v75 = (_QWORD *)((char *)v5 + v74);
  v76 = (uint64_t *)(v6 + v74);
  v78 = *v76;
  v77 = v76[1];
  *v75 = v78;
  v75[1] = v77;
  swift_bridgeObjectRelease();
  v79 = v7[25];
  v80 = (_QWORD *)((char *)v5 + v79);
  v81 = (uint64_t *)(v6 + v79);
  v83 = *v81;
  v82 = v81[1];
  *v80 = v83;
  v80[1] = v82;
  swift_bridgeObjectRelease();
  v84 = v7[26];
  v85 = (char *)v5 + v84;
  v86 = v6 + v84;
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v85[8] = *(_BYTE *)(v86 + 8);
  v87 = v7[27];
  v88 = (char *)v5 + v87;
  v89 = v6 + v87;
  v88[8] = *(_BYTE *)(v89 + 8);
  *(_QWORD *)v88 = *(_QWORD *)v89;
  v90 = v7[28];
  v91 = (char *)v5 + v90;
  v92 = v6 + v90;
  v91[8] = *(_BYTE *)(v92 + 8);
  *(_QWORD *)v91 = *(_QWORD *)v92;
  v93 = v7[29];
  v94 = (char *)v5 + v93;
  v95 = v6 + v93;
  v94[8] = *(_BYTE *)(v95 + 8);
  *(_QWORD *)v94 = *(_QWORD *)v95;
  v96 = v7[30];
  v97 = (char *)v5 + v96;
  v98 = v6 + v96;
  v97[8] = *(_BYTE *)(v98 + 8);
  *(_QWORD *)v97 = *(_QWORD *)v98;
  *((_BYTE *)v5 + v7[31]) = *(_BYTE *)(v6 + v7[31]);
  *((_BYTE *)v5 + v7[32]) = *(_BYTE *)(v6 + v7[32]);
  v99 = v7[33];
  v100 = (_QWORD *)((char *)v5 + v99);
  v101 = (uint64_t *)(v6 + v99);
  v103 = *v101;
  v102 = v101[1];
  *v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  v104 = v7[34];
  v105 = (char *)v5 + v104;
  v106 = v6 + v104;
  *(_QWORD *)v105 = *(_QWORD *)v106;
  v105[8] = *(_BYTE *)(v106 + 8);
  v107 = v7[35];
  v108 = (char *)v5 + v107;
  v109 = v6 + v107;
  v108[8] = *(_BYTE *)(v109 + 8);
  *(_QWORD *)v108 = *(_QWORD *)v109;
  v110 = v7[36];
  v111 = (char *)v5 + v110;
  v112 = v6 + v110;
  v111[8] = *(_BYTE *)(v112 + 8);
  *(_QWORD *)v111 = *(_QWORD *)v112;
  v113 = v7[37];
  v114 = (char *)v5 + v113;
  v115 = v6 + v113;
  v114[8] = *(_BYTE *)(v115 + 8);
  *(_QWORD *)v114 = *(_QWORD *)v115;
  v116 = v7[38];
  v117 = (char *)v5 + v116;
  v118 = v6 + v116;
  v117[8] = *(_BYTE *)(v118 + 8);
  *(_QWORD *)v117 = *(_QWORD *)v118;
  v119 = v7[39];
  v120 = (char *)v5 + v119;
  v121 = v6 + v119;
  *(_QWORD *)v120 = *(_QWORD *)v121;
  v120[8] = *(_BYTE *)(v121 + 8);
  v122 = v7[40];
  v123 = (char *)v5 + v122;
  v124 = v6 + v122;
  *(_QWORD *)v123 = *(_QWORD *)v124;
  v123[8] = *(_BYTE *)(v124 + 8);
  v125 = v7[41];
  v126 = (char *)v5 + v125;
  v127 = v6 + v125;
  *(_QWORD *)v126 = *(_QWORD *)v127;
  v126[8] = *(_BYTE *)(v127 + 8);
  v128 = v7[42];
  v129 = (_QWORD *)((char *)v5 + v128);
  v130 = (uint64_t *)(v6 + v128);
  v132 = *v130;
  v131 = v130[1];
  *v129 = v132;
  v129[1] = v131;
  swift_bridgeObjectRelease();
  v133 = v7[43];
  v134 = (_QWORD *)((char *)v5 + v133);
  v135 = (uint64_t *)(v6 + v133);
  v137 = *v135;
  v136 = v135[1];
  *v134 = v137;
  v134[1] = v136;
  swift_bridgeObjectRelease();
  v138 = v7[44];
  v139 = (_QWORD *)((char *)v5 + v138);
  v140 = (uint64_t *)(v6 + v138);
  v142 = *v140;
  v141 = v140[1];
  *v139 = v142;
  v139[1] = v141;
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + v7[45]) = *(_BYTE *)(v6 + v7[45]);
  v143 = v7[46];
  v144 = (char *)v5 + v143;
  v145 = v6 + v143;
  *(_QWORD *)v144 = *(_QWORD *)v145;
  v144[8] = *(_BYTE *)(v145 + 8);
  v146 = v7[47];
  v147 = (char *)v5 + v146;
  v148 = v6 + v146;
  *(_QWORD *)v147 = *(_QWORD *)v148;
  v147[8] = *(_BYTE *)(v148 + 8);
  v149 = v7[48];
  v150 = (_QWORD *)((char *)v5 + v149);
  v151 = (uint64_t *)(v6 + v149);
  v153 = *v151;
  v152 = v151[1];
  *v150 = v153;
  v150[1] = v152;
  swift_bridgeObjectRelease();
  v154 = v7[49];
  v155 = (char *)v5 + v154;
  v156 = v6 + v154;
  *(_QWORD *)v155 = *(_QWORD *)v156;
  v155[8] = *(_BYTE *)(v156 + 8);
  v157 = v7[50];
  v158 = (char *)v5 + v157;
  v159 = v6 + v157;
  v158[8] = *(_BYTE *)(v159 + 8);
  *(_QWORD *)v158 = *(_QWORD *)v159;
  v160 = v7[51];
  v161 = (char *)v5 + v160;
  v162 = v6 + v160;
  v161[8] = *(_BYTE *)(v162 + 8);
  *(_QWORD *)v161 = *(_QWORD *)v162;
  v163 = v7[52];
  v164 = (char *)v5 + v163;
  v165 = v6 + v163;
  *(_QWORD *)v164 = *(_QWORD *)v165;
  v164[8] = *(_BYTE *)(v165 + 8);
  v166 = v7[53];
  v167 = (_QWORD *)((char *)v5 + v166);
  v168 = (uint64_t *)(v6 + v166);
  v170 = *v168;
  v169 = v168[1];
  *v167 = v170;
  v167[1] = v169;
  swift_bridgeObjectRelease();
  v171 = v7[54];
  v172 = (char *)v5 + v171;
  v173 = (char *)(v6 + v171);
  v174 = v13((char *)v5 + v171, 1, v11);
  v175 = v13(v173, 1, v11);
  if (v174)
  {
    if (!v175)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v172, v173, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v172, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v175)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v172, v11);
LABEL_12:
    v176 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v172, v173, v11);
LABEL_13:
  v177 = v7[55];
  v178 = (char *)v5 + v177;
  v179 = v6 + v177;
  *(_QWORD *)v178 = *(_QWORD *)v179;
  v178[8] = *(_BYTE *)(v179 + 8);
  v180 = v7[56];
  v181 = (char *)v5 + v180;
  v182 = v6 + v180;
  v181[8] = *(_BYTE *)(v182 + 8);
  *(_QWORD *)v181 = *(_QWORD *)v182;
  v183 = v7[57];
  v184 = (_QWORD *)((char *)v5 + v183);
  v185 = (uint64_t *)(v6 + v183);
  v187 = *v185;
  v186 = v185[1];
  *v184 = v187;
  v184[1] = v186;
  swift_bridgeObjectRelease();
  v188 = v7[58];
  v189 = (_QWORD *)((char *)v5 + v188);
  v190 = (uint64_t *)(v6 + v188);
  v192 = *v190;
  v191 = v190[1];
  *v189 = v192;
  v189[1] = v191;
  swift_bridgeObjectRelease();
  v193 = v7[59];
  v194 = (char *)v5 + v193;
  v195 = v6 + v193;
  *(_QWORD *)v194 = *(_QWORD *)v195;
  v194[8] = *(_BYTE *)(v195 + 8);
  v196 = v7[60];
  v197 = (_QWORD *)((char *)v5 + v196);
  v198 = (uint64_t *)(v6 + v196);
  v200 = *v198;
  v199 = v198[1];
  *v197 = v200;
  v197[1] = v199;
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + v7[61]) = *(_BYTE *)(v6 + v7[61]);
  v201 = v7[62];
  v202 = (char *)v5 + v201;
  v203 = (char *)(v6 + v201);
  v204 = sub_1AD63B084();
  v205 = *(_QWORD *)(v204 - 8);
  v206 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v205 + 48);
  v207 = v206(v202, 1, v204);
  v208 = v206(v203, 1, v204);
  if (!v207)
  {
    if (!v208)
    {
      (*(void (**)(char *, char *, uint64_t))(v205 + 40))(v202, v203, v204);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v205 + 8))(v202, v204);
    goto LABEL_18;
  }
  if (v208)
  {
LABEL_18:
    v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v202, v203, v204);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v202, 0, 1, v204);
LABEL_19:
  v210 = v7[63];
  v211 = (_QWORD *)((char *)v5 + v210);
  v212 = (uint64_t *)(v6 + v210);
  v214 = *v212;
  v213 = v212[1];
  *v211 = v214;
  v211[1] = v213;
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + v7[64]) = *(_BYTE *)(v6 + v7[64]);
  v215 = v7[65];
  v216 = (_QWORD *)((char *)v5 + v215);
  v217 = (uint64_t *)(v6 + v215);
  v219 = *v217;
  v218 = v217[1];
  *v216 = v219;
  v216[1] = v218;
  swift_bridgeObjectRelease();
  v220 = v7[66];
  v221 = (char *)v5 + v220;
  v222 = v6 + v220;
  *(_QWORD *)v221 = *(_QWORD *)v222;
  v221[8] = *(_BYTE *)(v222 + 8);
  v223 = v7[67];
  v224 = (char *)v5 + v223;
  v225 = v6 + v223;
  v224[8] = *(_BYTE *)(v225 + 8);
  *(_QWORD *)v224 = *(_QWORD *)v225;
  v226 = v7[68];
  v227 = (char *)v5 + v226;
  v228 = v6 + v226;
  v227[8] = *(_BYTE *)(v228 + 8);
  *(_QWORD *)v227 = *(_QWORD *)v228;
  v229 = v7[69];
  v230 = (char *)v5 + v229;
  v231 = v6 + v229;
  *(_QWORD *)v230 = *(_QWORD *)v231;
  v230[8] = *(_BYTE *)(v231 + 8);
  *((_BYTE *)v5 + v7[70]) = *(_BYTE *)(v6 + v7[70]);
  v232 = v7[71];
  v233 = (char *)v5 + v232;
  v234 = v6 + v232;
  v233[8] = *(_BYTE *)(v234 + 8);
  *(_QWORD *)v233 = *(_QWORD *)v234;
  v235 = v7[72];
  v236 = (char *)v5 + v235;
  v237 = v6 + v235;
  *(_QWORD *)v236 = *(_QWORD *)v237;
  v236[8] = *(_BYTE *)(v237 + 8);
  v238 = v7[73];
  v239 = (char *)v5 + v238;
  v240 = v6 + v238;
  *(_QWORD *)v239 = *(_QWORD *)v240;
  v239[8] = *(_BYTE *)(v240 + 8);
  v241 = v7[74];
  v242 = (char *)v5 + v241;
  v243 = v6 + v241;
  *(_QWORD *)v242 = *(_QWORD *)v243;
  v242[8] = *(_BYTE *)(v243 + 8);
  v244 = v7[75];
  v245 = (char *)v5 + v244;
  v246 = v6 + v244;
  *(_QWORD *)v245 = *(_QWORD *)v246;
  v245[8] = *(_BYTE *)(v246 + 8);
  *((_BYTE *)v5 + v7[76]) = *(_BYTE *)(v6 + v7[76]);
  v247 = v7[77];
  v248 = (char *)v5 + v247;
  v249 = v6 + v247;
  *(_QWORD *)v248 = *(_QWORD *)v249;
  v248[8] = *(_BYTE *)(v249 + 8);
  *((_BYTE *)v5 + v7[78]) = *(_BYTE *)(v6 + v7[78]);
  *((_BYTE *)v5 + v7[79]) = *(_BYTE *)(v6 + v7[79]);
  *((_BYTE *)v5 + v7[80]) = *(_BYTE *)(v6 + v7[80]);
  v250 = v7[81];
  v251 = (char *)v5 + v250;
  v252 = v6 + v250;
  *(_QWORD *)v251 = *(_QWORD *)v252;
  v251[8] = *(_BYTE *)(v252 + 8);
  *((_BYTE *)v5 + v7[82]) = *(_BYTE *)(v6 + v7[82]);
  *((_BYTE *)v5 + v7[83]) = *(_BYTE *)(v6 + v7[83]);
  v253 = v7[84];
  v254 = (char *)v5 + v253;
  v255 = v6 + v253;
  *(_QWORD *)v254 = *(_QWORD *)v255;
  v254[8] = *(_BYTE *)(v255 + 8);
  *((_BYTE *)v5 + v7[85]) = *(_BYTE *)(v6 + v7[85]);
  *((_BYTE *)v5 + v7[86]) = *(_BYTE *)(v6 + v7[86]);
  *((_BYTE *)v5 + v7[87]) = *(_BYTE *)(v6 + v7[87]);
  *((_BYTE *)v5 + v7[88]) = *(_BYTE *)(v6 + v7[88]);
  v256 = v7[89];
  v257 = (char *)v5 + v256;
  v258 = v6 + v256;
  *(_QWORD *)v257 = *(_QWORD *)v258;
  v257[8] = *(_BYTE *)(v258 + 8);
  v259 = v7[90];
  v260 = (_QWORD *)((char *)v5 + v259);
  v261 = (uint64_t *)(v6 + v259);
  v263 = *v261;
  v262 = v261[1];
  *v260 = v263;
  v260[1] = v262;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LargeImage.Context()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD42D440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 28);
  v5 = type metadata accessor for MediaMetadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for LargeImage.Context()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD42D48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 28);
  v6 = type metadata accessor for MediaMetadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1AD42D4D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MediaMetadata();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LargeImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD42D5A4 + 4 * byte_1AD6847A1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD42D5D8 + 4 * byte_1AD68479C[v4]))();
}

uint64_t sub_1AD42D5D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD42D5E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD42D5E8);
  return result;
}

uint64_t sub_1AD42D5F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD42D5FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD42D600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD42D608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LargeImage.CodingKeys()
{
  return &type metadata for LargeImage.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LargeImage.Context.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD42D670 + 4 * byte_1AD6847AB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD42D6A4 + 4 * byte_1AD6847A6[v4]))();
}

uint64_t sub_1AD42D6A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD42D6AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD42D6B4);
  return result;
}

uint64_t sub_1AD42D6C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD42D6C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD42D6CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD42D6D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LargeImage.Context.CodingKeys()
{
  return &type metadata for LargeImage.Context.CodingKeys;
}

unint64_t sub_1AD42D6F4()
{
  unint64_t result;

  result = qword_1EECDC540;
  if (!qword_1EECDC540)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684960, &type metadata for LargeImage.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC540);
  }
  return result;
}

unint64_t sub_1AD42D73C()
{
  unint64_t result;

  result = qword_1EECDC548;
  if (!qword_1EECDC548)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684A18, &type metadata for LargeImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC548);
  }
  return result;
}

unint64_t sub_1AD42D784()
{
  unint64_t result;

  result = qword_1ED2E22B8;
  if (!qword_1ED2E22B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684988, &type metadata for LargeImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E22B8);
  }
  return result;
}

unint64_t sub_1AD42D7CC()
{
  unint64_t result;

  result = qword_1ED2E22B0;
  if (!qword_1ED2E22B0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6849B0, &type metadata for LargeImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E22B0);
  }
  return result;
}

unint64_t sub_1AD42D814()
{
  unint64_t result;

  result = qword_1ED2E22D0;
  if (!qword_1ED2E22D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6848D0, &type metadata for LargeImage.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E22D0);
  }
  return result;
}

unint64_t sub_1AD42D85C()
{
  unint64_t result;

  result = qword_1ED2E22C8;
  if (!qword_1ED2E22C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6848F8, &type metadata for LargeImage.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E22C8);
  }
  return result;
}

uint64_t sub_1AD42D8A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74726F506863616DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6953726566667562 && a2 == 0xEA0000000000657ALL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365726464416D76 && a2 == 0xE900000000000073 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1AD42DA70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AD42DB58@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_1AD42DB64()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD42DB90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

ValueMetadata *type metadata accessor for ValidatorError()
{
  return &type metadata for ValidatorError;
}

ValueMetadata *type metadata accessor for ValidatorError.Context()
{
  return &type metadata for ValidatorError.Context;
}

uint64_t sub_1AD42DBE4()
{
  uint64_t v0;

  sub_1AD42DC84();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD42DC34()
{
  uint64_t v0;

  sub_1AD42DC84();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD42DC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v28 - v6;
  v8 = MEMORY[0x1E0DEE9E0];
  v32 = MEMORY[0x1E0DEE9E0];
  v9 = *(_QWORD *)(v1 + 24);
  if (v9)
  {
    if (v9 == 1)
      goto LABEL_13;
    v10 = *(_QWORD *)(v1 + 16);
    v31 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v30 = v10;
    *((_QWORD *)&v30 + 1) = v9;
    sub_1AD002F7C(&v30, v29);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = v8;
    sub_1AD43F448(v29, 0x656C746974, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
    v32 = v28;
    swift_bridgeObjectRelease();
  }
  v12 = type metadata accessor for IDSSampleInvitation();
  v13 = v1 + *(int *)(v12 + 20);
  sub_1AD0E48B8(v13, (uint64_t)v7);
  v14 = sub_1AD63B03C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v7, 1, v14);
  sub_1AD009758((uint64_t)v7, (uint64_t *)&unk_1ED2E2D98);
  if (v17 != 1)
  {
    sub_1AD0E48B8(v13, (uint64_t)v5);
    if (v16(v5, 1, v14) == 1)
    {
      sub_1AD009758((uint64_t)v5, (uint64_t *)&unk_1ED2E2D98);
      sub_1AD43D86C(1702125924, 0xE400000000000000, &v30);
      sub_1AD009758((uint64_t)&v30, &qword_1EECDC5F0);
    }
    else
    {
      v31 = v14;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v30);
      (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 32))(boxed_opaque_existential_0, v5, v14);
      sub_1AD002F7C(&v30, v29);
      v19 = v32;
      v20 = swift_isUniquelyReferenced_nonNull_native();
      v28 = v19;
      sub_1AD43F448(v29, 1702125924, 0xE400000000000000, v20);
      v32 = v28;
      swift_bridgeObjectRelease();
    }
  }
  v21 = v1 + *(int *)(v12 + 24);
  v22 = *(_QWORD *)(v21 + 24);
  if (!v22)
    return v32;
  if (v22 != 1)
  {
    v24 = *(_QWORD *)(v21 + 16);
    v31 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v30 = v24;
    *((_QWORD *)&v30 + 1) = v22;
    sub_1AD002F7C(&v30, v29);
    swift_bridgeObjectRetain();
    v25 = v32;
    v26 = swift_isUniquelyReferenced_nonNull_native();
    v28 = v25;
    sub_1AD43F448(v29, 0x6E6F73616572, 0xE600000000000000, v26);
    v23 = v28;
    swift_bridgeObjectRelease();
    return v23;
  }
LABEL_13:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD42DF8C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD42E014(&qword_1EECD7110, (uint64_t)&unk_1AD650F48);
  result = sub_1AD42E014(&qword_1EECD70D8, (uint64_t)&unk_1AD650F70);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for IDSSampleInvitation()
{
  uint64_t result;

  result = qword_1ED2E1978;
  if (!qword_1ED2E1978)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD42E014(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IDSSampleInvitation();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD42E054(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = a2 + 2;
    v10 = a2[3];
    swift_retain();
    if (v10 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v9;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)v9;
      *(_QWORD *)(a1 + 24) = v10;
      swift_bridgeObjectRetain();
    }
    v11 = *(int *)(a3 + 20);
    v12 = (void *)(a1 + v11);
    v13 = (char *)a2 + v11;
    v14 = sub_1AD63B03C();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = *(int *)(a3 + 24);
    v18 = a1 + v17;
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *(_QWORD *)v18 = *v19;
    *(_QWORD *)(v18 + 8) = v20;
    v21 = v19 + 2;
    v22 = v19[3];
    swift_retain();
    if (v22 == 1)
    {
      *(_OWORD *)(v18 + 16) = *v21;
    }
    else
    {
      *(_QWORD *)(v18 + 16) = *(_QWORD *)v21;
      *(_QWORD *)(v18 + 24) = v22;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_1AD42E1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_release();
  if (*(_QWORD *)(a1 + 24) != 1)
    swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1AD63B03C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 24);
  swift_release();
  result = *(_QWORD *)(v7 + 24);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1AD42E284(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 2;
  v8 = a2[3];
  swift_retain();
  if (v8 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v7;
    *(_QWORD *)(a1 + 24) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = *(int *)(a3 + 20);
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = sub_1AD63B03C();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v15;
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *(_QWORD *)v16 = *v17;
  *(_QWORD *)(v16 + 8) = v18;
  v19 = v17 + 2;
  v20 = v17[3];
  swift_retain();
  if (v20 == 1)
  {
    *(_OWORD *)(v16 + 16) = *v19;
  }
  else
  {
    *(_QWORD *)(v16 + 16) = *(_QWORD *)v19;
    *(_QWORD *)(v16 + 24) = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *sub_1AD42E3CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = a2[3];
  if (a1[3] == 1)
  {
    if (v7 != 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == 1)
  {
    sub_1AD009758((uint64_t)(a1 + 2), &qword_1ED2E3198);
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_8;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1AD63B03C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_13:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_14:
  v17 = *(int *)(a3 + 24);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_retain();
  swift_release();
  v21 = *((_QWORD *)v19 + 3);
  if (v18[3] != 1)
  {
    if (v21 != 1)
    {
      v18[2] = *((_QWORD *)v19 + 2);
      v18[3] = *((_QWORD *)v19 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758((uint64_t)(v18 + 2), &qword_1ED2E3198);
    goto LABEL_19;
  }
  if (v21 == 1)
  {
LABEL_19:
    *((_OWORD *)v18 + 1) = *((_OWORD *)v19 + 1);
    return a1;
  }
  v18[2] = *((_QWORD *)v19 + 2);
  v18[3] = *((_QWORD *)v19 + 3);
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *sub_1AD42E608(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63B03C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 24);
  v14 = (_OWORD *)((char *)a1 + v13);
  v15 = (_OWORD *)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  return a1;
}

uint64_t sub_1AD42E6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = (_OWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) == 1)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 24);
  if (v7 == 1)
  {
    sub_1AD009758(a1 + 16, &qword_1ED2E3198);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = *(int *)(a3 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1AD63B03C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_11:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_12:
  v17 = *(int *)(a3 + 24);
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  swift_release();
  v20 = (_QWORD *)(v19 + 16);
  if (*(_QWORD *)(v18 + 24) != 1)
  {
    v21 = *(_QWORD *)(v19 + 24);
    if (v21 != 1)
    {
      *(_QWORD *)(v18 + 16) = *v20;
      *(_QWORD *)(v18 + 24) = v21;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(v18 + 16, &qword_1ED2E3198);
  }
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v20;
  return a1;
}

uint64_t sub_1AD42E8B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD42E8C0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1AD42E940()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD42E94C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1AD42E9C4()
{
  unint64_t v0;

  sub_1AD0E67F0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1AD42EA38@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD42EA68(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD42EAB8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t type metadata accessor for IMSGSMACharacteristic()
{
  uint64_t result;

  result = qword_1EECDC598;
  if (!qword_1EECDC598)
    return swift_getSingletonMetadata();
  return result;
}

__n128 sub_1AD42EB44(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 28));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD42EBA8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 32));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 sub_1AD42EBF8(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 32));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD42EC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD42ECD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 28);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD42ED60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 32);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD42EDEC@<X0>(char *a1@<X8>)
{
  return sub_1AD42F1EC(a1);
}

uint64_t sub_1AD42EDF8()
{
  char *v0;

  return *(_QWORD *)&aSipoudp_1[8 * *v0];
}

uint64_t sub_1AD42EE10(char *a1, char *a2)
{
  return sub_1AD4336B4(*a1, *a2);
}

uint64_t sub_1AD42EE1C()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD42EE74()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD42EEA0()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD42EEF4@<X0>(char *a1@<X8>)
{
  return sub_1AD42EDEC(a1);
}

void sub_1AD42EF00(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = *(_QWORD *)&aSipoudp_1[8 * *v1];
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1AD42EF1C()
{
  sub_1AD431C68();
  return sub_1AD63B924();
}

uint64_t sub_1AD42EF78()
{
  sub_1AD431C68();
  return sub_1AD63B8C4();
}

uint64_t sub_1AD42EFC4@<X0>(char *a1@<X8>)
{
  return sub_1AD333AC4(a1);
}

uint64_t sub_1AD42EFD0()
{
  _BYTE *v0;

  if (*v0)
    return 0x534C546F5052534DLL;
  else
    return 1347572557;
}

uint64_t sub_1AD42F004(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD433610(*a1, *a2);
}

uint64_t sub_1AD42F01C@<X0>(char *a1@<X8>)
{
  return sub_1AD42EFC4(a1);
}

void sub_1AD42F028(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1347572557;
  if (*v1)
    v2 = 0x534C546F5052534DLL;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AD42F060()
{
  sub_1AD431C24();
  return sub_1AD63B924();
}

uint64_t sub_1AD42F0BC()
{
  sub_1AD431C24();
  return sub_1AD63B8C4();
}

uint64_t sub_1AD42F108@<X0>(char *a1@<X8>)
{
  return sub_1AD333AC4(a1);
}

uint64_t sub_1AD42F114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD433614(*a1, *a2);
}

uint64_t sub_1AD42F12C@<X0>(char *a1@<X8>)
{
  return sub_1AD42F108(a1);
}

uint64_t sub_1AD42F138()
{
  sub_1AD431BE0();
  return sub_1AD63B924();
}

uint64_t sub_1AD42F194()
{
  sub_1AD431BE0();
  return sub_1AD63B8C4();
}

uint64_t sub_1AD42F1E0@<X0>(char *a1@<X8>)
{
  return sub_1AD42F1EC(a1);
}

uint64_t sub_1AD42F1EC@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD42F240()
{
  char *v0;

  return *(_QWORD *)&aSipoudp_1[8 * *v0];
}

uint64_t sub_1AD42F258@<X0>(char *a1@<X8>)
{
  return sub_1AD42F1E0(a1);
}

uint64_t sub_1AD42F264()
{
  sub_1AD431B9C();
  return sub_1AD63B924();
}

uint64_t sub_1AD42F2C0()
{
  sub_1AD431B9C();
  return sub_1AD63B8C4();
}

uint64_t sub_1AD42F30C@<X0>(char *a1@<X8>)
{
  return sub_1AD333AC4(a1);
}

uint64_t sub_1AD42F318()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD42F390()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD42F3E4()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD42F458@<X0>(char *a1@<X8>)
{
  return sub_1AD42F30C(a1);
}

uint64_t sub_1AD42F464()
{
  sub_1AD431B58();
  return sub_1AD63B924();
}

uint64_t sub_1AD42F4C0()
{
  sub_1AD431B58();
  return sub_1AD63B8C4();
}

uint64_t sub_1AD42F50C@<X0>(char *a1@<X8>)
{
  return sub_1AD333AC4(a1);
}

uint64_t sub_1AD42F518()
{
  _BYTE *v0;

  if (*v0)
    return 1347703379;
  else
    return 5264466;
}

uint64_t sub_1AD42F544()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD42F5B4()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD42F600()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD42F66C@<X0>(char *a1@<X8>)
{
  return sub_1AD42F50C(a1);
}

void sub_1AD42F678(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 5264466;
  if (*v1)
    v2 = 1347703379;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AD42F6A8()
{
  sub_1AD431B14();
  return sub_1AD63B924();
}

uint64_t sub_1AD42F704()
{
  sub_1AD431B14();
  return sub_1AD63B8C4();
}

void sub_1AD42F750(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *sub_1AD42F75C(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*sub_1AD42F768())()
{
  return nullsub_1;
}

void sub_1AD42F778(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *sub_1AD42F784(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*sub_1AD42F790())()
{
  return nullsub_1;
}

void sub_1AD42F7A0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *sub_1AD42F7AC(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*sub_1AD42F7B8())()
{
  return nullsub_1;
}

void sub_1AD42F7C8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *sub_1AD42F7D4(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*sub_1AD42F7E0())()
{
  return nullsub_1;
}

void sub_1AD42F7F0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 4);
}

_BYTE *sub_1AD42F7FC(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = *result;
  return result;
}

uint64_t (*sub_1AD42F808())()
{
  return nullsub_1;
}

void sub_1AD42F818(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 5);
}

_BYTE *sub_1AD42F824(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = *result;
  return result;
}

uint64_t (*sub_1AD42F830())()
{
  return nullsub_1;
}

void sub_1AD42F840(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 6);
}

_BYTE *sub_1AD42F84C(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 6) = *result;
  return result;
}

uint64_t (*sub_1AD42F858())()
{
  return nullsub_1;
}

void sub_1AD42F868(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 7);
}

_BYTE *sub_1AD42F874(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 7) = *result;
  return result;
}

uint64_t (*sub_1AD42F880())()
{
  return nullsub_1;
}

void sub_1AD42F890(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *sub_1AD42F89C(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*sub_1AD42F8A8())()
{
  return nullsub_1;
}

uint64_t sub_1AD42F8B8@<X0>(char *a1@<X8>)
{
  return sub_1AD333AC4(a1);
}

void *sub_1AD42F8C4()
{
  return &unk_1E5CB8FA8;
}

uint64_t sub_1AD42F8D0()
{
  _BYTE *v0;

  if (*v0)
    return 0x747365676944;
  else
    return 4279105;
}

uint64_t sub_1AD42F900(char *a1, char *a2)
{
  return sub_1AD434028(*a1, *a2);
}

uint64_t sub_1AD42F90C()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD42F980()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD42F9D0()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD42FA40@<X0>(char *a1@<X8>)
{
  return sub_1AD42F8B8(a1);
}

void sub_1AD42FA4C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 4279105;
  if (*v1)
    v2 = 0x747365676944;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AD42FA80()
{
  sub_1AD431AD0();
  return sub_1AD63B924();
}

uint64_t sub_1AD42FADC()
{
  sub_1AD431AD0();
  return sub_1AD63B8C4();
}

void sub_1AD42FB28(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5CB90B0;
}

uint64_t (*sub_1AD42FB3C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD34BDE0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD42FBC4(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34BF10;
}

void sub_1AD42FC28(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *sub_1AD42FC34(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*sub_1AD42FC40())()
{
  return nullsub_1;
}

uint64_t sub_1AD42FC50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IMSGSMACharacteristic();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 24), a1, &qword_1ED2E1A40);
}

uint64_t sub_1AD42FC8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IMSGSMACharacteristic();
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 24), &qword_1ED2E1A40);
}

uint64_t (*sub_1AD42FCC8())(_QWORD)
{
  type metadata accessor for IMSGSMACharacteristic();
  return nullsub_1;
}

uint64_t sub_1AD42FCF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 28);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD42FD78(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IMSGSMACharacteristic();
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD42FDC4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IMSGSMACharacteristic();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD42FE08(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IMSGSMACharacteristic() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD42FEA8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD42FEFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 28));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD42FF80(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IMSGSMACharacteristic() + 28);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD42FFF8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 32);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD430080(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IMSGSMACharacteristic();
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD4300CC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IMSGSMACharacteristic();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD430110(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IMSGSMACharacteristic() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD4301B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 32));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD430204(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IMSGSMACharacteristic() + 32));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD430288(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IMSGSMACharacteristic() + 32);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD430300@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;

  result = type metadata accessor for IMSGSMACharacteristic();
  v4 = (char *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  v8 = v4[3];
  v9 = v4[4];
  v10 = v4[5];
  v11 = v4[6];
  v12 = v4[7];
  LOBYTE(v4) = v4[8];
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v12;
  a1[8] = (_BYTE)v4;
  return result;
}

uint64_t sub_1AD430374(char *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t result;
  _BYTE *v12;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v10 = a1[8];
  result = type metadata accessor for IMSGSMACharacteristic();
  v12 = (_BYTE *)(v1 + *(int *)(result + 36));
  *v12 = v2;
  v12[1] = v3;
  v12[2] = v4;
  v12[3] = v5;
  v12[4] = v6;
  v12[5] = v7;
  v12[6] = v8;
  v12[7] = v9;
  v12[8] = v10;
  return result;
}

uint64_t (*sub_1AD430404())(_QWORD)
{
  type metadata accessor for IMSGSMACharacteristic();
  return nullsub_1;
}

uint64_t sub_1AD43042C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IMSGSMACharacteristic();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 40), a1, &qword_1ED2E7140);
}

uint64_t sub_1AD430468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IMSGSMACharacteristic();
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 40), &qword_1ED2E7140);
}

uint64_t (*sub_1AD4304A4())(_QWORD)
{
  type metadata accessor for IMSGSMACharacteristic();
  return nullsub_1;
}

unint64_t sub_1AD4304D0()
{
  unint64_t result;

  result = qword_1EECDC550;
  if (!qword_1EECDC550)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684BD4, &type metadata for IMSGSMATransportProtoCharacteristic.PSSignallingProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC550);
  }
  return result;
}

unint64_t sub_1AD430518()
{
  unint64_t result;

  result = qword_1EECDC558;
  if (!qword_1EECDC558)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684CC4, &type metadata for IMSGSMATransportProtoCharacteristic.PSMediaProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC558);
  }
  return result;
}

unint64_t sub_1AD430560()
{
  unint64_t result;

  result = qword_1EECDC560;
  if (!qword_1EECDC560)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684DB4, &type metadata for IMSGSMATransportProtoCharacteristic.PSRTMediaProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC560);
  }
  return result;
}

unint64_t sub_1AD4305A8()
{
  unint64_t result;

  result = qword_1EECDC568;
  if (!qword_1EECDC568)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684EA4, &type metadata for IMSGSMATransportProtoCharacteristic.WifiSignallingProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC568);
  }
  return result;
}

unint64_t sub_1AD4305F0()
{
  unint64_t result;

  result = qword_1EECDC570;
  if (!qword_1EECDC570)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684F94, &type metadata for IMSGSMATransportProtoCharacteristic.WifiMediaProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC570);
  }
  return result;
}

unint64_t sub_1AD430638()
{
  unint64_t result;

  result = qword_1EECDC578;
  if (!qword_1EECDC578)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD685084, &type metadata for IMSGSMATransportProtoCharacteristic.WifiRTMediaProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC578);
  }
  return result;
}

unint64_t sub_1AD43067C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD28EFB0();
  result = sub_1AD28F038();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD4306AC()
{
  unint64_t result;

  result = qword_1EECDC580;
  if (!qword_1EECDC580)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD685190, &type metadata for IMSGSMACharacteristic.AuthType);
    atomic_store(result, (unint64_t *)&qword_1EECDC580);
  }
  return result;
}

unint64_t sub_1AD4306F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EECDC588;
  if (!qword_1EECDC588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EECDC590);
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EECDC588);
  }
  return result;
}

uint64_t sub_1AD430740(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD43078C(&qword_1EECD46B8, (uint64_t)&unk_1AD652898);
  result = sub_1AD43078C(&qword_1EECD46C8, (uint64_t)&unk_1AD6528C0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD43078C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IMSGSMACharacteristic();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD4307D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD43080C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t __swift_memcpy9_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for IMSGSMATransportProtoCharacteristic(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 1);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IMSGSMATransportProtoCharacteristic(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 1) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for IMSGSMATransportProtoCharacteristic()
{
  return &type metadata for IMSGSMATransportProtoCharacteristic;
}

ValueMetadata *type metadata accessor for IMSGSMATransportProtoCharacteristic.PSSignallingProto()
{
  return &type metadata for IMSGSMATransportProtoCharacteristic.PSSignallingProto;
}

ValueMetadata *type metadata accessor for IMSGSMATransportProtoCharacteristic.PSMediaProto()
{
  return &type metadata for IMSGSMATransportProtoCharacteristic.PSMediaProto;
}

ValueMetadata *type metadata accessor for IMSGSMATransportProtoCharacteristic.PSRTMediaProto()
{
  return &type metadata for IMSGSMATransportProtoCharacteristic.PSRTMediaProto;
}

uint64_t _s9BlastDoor35IMSGSMATransportProtoCharacteristicV17PSSignallingProtoOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD430990 + 4 * byte_1AD684BC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD4309C4 + 4 * byte_1AD684BC0[v4]))();
}

uint64_t sub_1AD4309C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD4309CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD4309D4);
  return result;
}

uint64_t sub_1AD4309E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD4309E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD4309EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD4309F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IMSGSMATransportProtoCharacteristic.WifiSignallingProto()
{
  return &type metadata for IMSGSMATransportProtoCharacteristic.WifiSignallingProto;
}

ValueMetadata *type metadata accessor for IMSGSMATransportProtoCharacteristic.WifiMediaProto()
{
  return &type metadata for IMSGSMATransportProtoCharacteristic.WifiMediaProto;
}

ValueMetadata *type metadata accessor for IMSGSMATransportProtoCharacteristic.WifiRTMediaProto()
{
  return &type metadata for IMSGSMATransportProtoCharacteristic.WifiRTMediaProto;
}

uint64_t sub_1AD430A30(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v9 = a2[1];
    v8 = a2[2];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v9;
    v10 = a2[3];
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v11 = a3[6];
    v12 = (void *)(a1 + v11);
    v13 = (char *)a2 + v11;
    v14 = sub_1AD63AF28();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v18 = a3[7];
    v19 = a1 + v18;
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = v20[1];
    *(_QWORD *)v19 = *v20;
    *(_QWORD *)(v19 + 8) = v21;
    v22 = v20 + 2;
    v23 = v20[3];
    swift_retain();
    if (v23 == 1)
    {
      *(_OWORD *)(v19 + 16) = *v22;
    }
    else
    {
      *(_QWORD *)(v19 + 16) = *(_QWORD *)v22;
      *(_QWORD *)(v19 + 24) = v23;
      swift_bridgeObjectRetain();
    }
    v24 = a3[8];
    v25 = a1 + v24;
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *(_QWORD *)v25 = *v26;
    *(_QWORD *)(v25 + 8) = v27;
    v28 = v26 + 2;
    v29 = v26[3];
    swift_retain();
    if (v29 == 1)
    {
      *(_OWORD *)(v25 + 16) = *v28;
    }
    else
    {
      *(_QWORD *)(v25 + 16) = *(_QWORD *)v28;
      *(_QWORD *)(v25 + 24) = v29;
      swift_bridgeObjectRetain();
    }
    v30 = a3[9];
    v31 = a3[10];
    v32 = a1 + v30;
    v33 = (uint64_t)a2 + v30;
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
    v34 = (void *)(a1 + v31);
    v35 = (char *)a2 + v31;
    v36 = sub_1AD63B084();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
  }
  return a1;
}

uint64_t sub_1AD430C7C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_1AD63AF28();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + a2[7];
  swift_release();
  if (*(_QWORD *)(v7 + 24) != 1)
    swift_bridgeObjectRelease();
  v8 = a1 + a2[8];
  swift_release();
  if (*(_QWORD *)(v8 + 24) != 1)
    swift_bridgeObjectRelease();
  v9 = a1 + a2[10];
  v10 = sub_1AD63B084();
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return result;
}

uint64_t sub_1AD430D8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1AD63AF28();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *(_QWORD *)v16 = *v17;
  *(_QWORD *)(v16 + 8) = v18;
  v19 = v17 + 2;
  v20 = v17[3];
  swift_retain();
  if (v20 == 1)
  {
    *(_OWORD *)(v16 + 16) = *v19;
  }
  else
  {
    *(_QWORD *)(v16 + 16) = *(_QWORD *)v19;
    *(_QWORD *)(v16 + 24) = v20;
    swift_bridgeObjectRetain();
  }
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *(_QWORD *)v22 = *v23;
  *(_QWORD *)(v22 + 8) = v24;
  v25 = v23 + 2;
  v26 = v23[3];
  swift_retain();
  if (v26 == 1)
  {
    *(_OWORD *)(v22 + 16) = *v25;
  }
  else
  {
    *(_QWORD *)(v22 + 16) = *(_QWORD *)v25;
    *(_QWORD *)(v22 + 24) = v26;
    swift_bridgeObjectRetain();
  }
  v27 = a3[9];
  v28 = a3[10];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  v31 = (void *)(a1 + v28);
  v32 = (const void *)(a2 + v28);
  v33 = sub_1AD63B084();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  return a1;
}

uint64_t sub_1AD430FAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1AD63AF28();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *v17 = *(_QWORD *)(a2 + v16);
  v17[1] = v19;
  swift_retain();
  swift_release();
  v20 = *(_QWORD *)(v18 + 24);
  if (v17[3] == 1)
  {
    if (v20 != 1)
    {
      v17[2] = *(_QWORD *)(v18 + 16);
      v17[3] = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v20 == 1)
  {
    sub_1AD0256E4((uint64_t)(v17 + 2));
LABEL_12:
    *((_OWORD *)v17 + 1) = *(_OWORD *)(v18 + 16);
    goto LABEL_14;
  }
  v17[2] = *(_QWORD *)(v18 + 16);
  v17[3] = *(_QWORD *)(v18 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_14:
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a2 + v21 + 8);
  *v22 = *(_QWORD *)(a2 + v21);
  v22[1] = v24;
  swift_retain();
  swift_release();
  v25 = *(_QWORD *)(v23 + 24);
  if (v22[3] == 1)
  {
    if (v25 != 1)
    {
      v22[2] = *(_QWORD *)(v23 + 16);
      v22[3] = *(_QWORD *)(v23 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  if (v25 == 1)
  {
    sub_1AD0256E4((uint64_t)(v22 + 2));
LABEL_19:
    *((_OWORD *)v22 + 1) = *(_OWORD *)(v23 + 16);
    goto LABEL_21;
  }
  v22[2] = *(_QWORD *)(v23 + 16);
  v22[3] = *(_QWORD *)(v23 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_21:
  v26 = a3[9];
  v27 = (_BYTE *)(a1 + v26);
  v28 = (_BYTE *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  v27[2] = v28[2];
  v27[3] = v28[3];
  v27[4] = v28[4];
  v27[5] = v28[5];
  v27[6] = v28[6];
  v27[7] = v28[7];
  v27[8] = v28[8];
  v29 = a3[10];
  v30 = (void *)(a1 + v29);
  v31 = (void *)(a2 + v29);
  v32 = sub_1AD63B084();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_26;
  }
  if (v36)
  {
LABEL_26:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v30, v31, v32);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

uint64_t sub_1AD431340(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1AD63AF28();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_OWORD *)(a1 + v13);
  v16 = (_OWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (_OWORD *)(a1 + v14);
  v19 = (_OWORD *)(a2 + v14);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[9];
  v22 = a3[10];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = (void *)(a1 + v22);
  v26 = (const void *)(a2 + v22);
  v27 = sub_1AD63B084();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  return a1;
}

uint64_t sub_1AD4314D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1AD63AF28();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  swift_release();
  v19 = (_OWORD *)(v18 + 16);
  if (*(_QWORD *)(v17 + 24) == 1)
  {
LABEL_10:
    *(_OWORD *)(v17 + 16) = *v19;
    goto LABEL_12;
  }
  v20 = *(_QWORD *)(v18 + 24);
  if (v20 == 1)
  {
    sub_1AD0256E4(v17 + 16);
    goto LABEL_10;
  }
  *(_QWORD *)(v17 + 16) = *(_QWORD *)v19;
  *(_QWORD *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
LABEL_12:
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  swift_release();
  v24 = (_OWORD *)(v23 + 16);
  if (*(_QWORD *)(v22 + 24) == 1)
  {
LABEL_15:
    *(_OWORD *)(v22 + 16) = *v24;
    goto LABEL_17;
  }
  v25 = *(_QWORD *)(v23 + 24);
  if (v25 == 1)
  {
    sub_1AD0256E4(v22 + 16);
    goto LABEL_15;
  }
  *(_QWORD *)(v22 + 16) = *(_QWORD *)v24;
  *(_QWORD *)(v22 + 24) = v25;
  swift_bridgeObjectRelease();
LABEL_17:
  v26 = a3[9];
  v27 = a3[10];
  v28 = (_BYTE *)(a1 + v26);
  v29 = (_BYTE *)(a2 + v26);
  *v28 = *v29;
  v28[1] = v29[1];
  v28[2] = v29[2];
  v28[3] = v29[3];
  v28[4] = v29[4];
  v28[5] = v29[5];
  v28[6] = v29[6];
  v28[7] = v29[7];
  v28[8] = v29[8];
  v30 = (void *)(a1 + v27);
  v31 = (void *)(a2 + v27);
  v32 = sub_1AD63B084();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_22;
  }
  if (v36)
  {
LABEL_22:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v30, v31, v32);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

uint64_t sub_1AD4317DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD4317E8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1AD431890()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD43189C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1AD431940()
{
  unint64_t v0;
  unint64_t v1;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, qword_1ED2E7158, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t _s9BlastDoor21IMSGSMACharacteristicV8AuthTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD431A50 + 4 * byte_1AD684BCF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD431A84 + 4 * byte_1AD684BCA[v4]))();
}

uint64_t sub_1AD431A84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD431A8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD431A94);
  return result;
}

uint64_t sub_1AD431AA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD431AA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD431AAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD431AB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IMSGSMACharacteristic.AuthType()
{
  return &type metadata for IMSGSMACharacteristic.AuthType;
}

unint64_t sub_1AD431AD0()
{
  unint64_t result;

  result = qword_1EECDC5A8;
  if (!qword_1EECDC5A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6851F8, &type metadata for IMSGSMACharacteristic.AuthType);
    atomic_store(result, (unint64_t *)&qword_1EECDC5A8);
  }
  return result;
}

unint64_t sub_1AD431B14()
{
  unint64_t result;

  result = qword_1EECDC5B0;
  if (!qword_1EECDC5B0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6850EC, &type metadata for IMSGSMATransportProtoCharacteristic.WifiRTMediaProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC5B0);
  }
  return result;
}

unint64_t sub_1AD431B58()
{
  unint64_t result;

  result = qword_1EECDC5B8;
  if (!qword_1EECDC5B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684FFC, &type metadata for IMSGSMATransportProtoCharacteristic.WifiMediaProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC5B8);
  }
  return result;
}

unint64_t sub_1AD431B9C()
{
  unint64_t result;

  result = qword_1EECDC5C0;
  if (!qword_1EECDC5C0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684F0C, &type metadata for IMSGSMATransportProtoCharacteristic.WifiSignallingProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC5C0);
  }
  return result;
}

unint64_t sub_1AD431BE0()
{
  unint64_t result;

  result = qword_1EECDC5C8;
  if (!qword_1EECDC5C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684E1C, &type metadata for IMSGSMATransportProtoCharacteristic.PSRTMediaProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC5C8);
  }
  return result;
}

unint64_t sub_1AD431C24()
{
  unint64_t result;

  result = qword_1EECDC5D0;
  if (!qword_1EECDC5D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684D2C, &type metadata for IMSGSMATransportProtoCharacteristic.PSMediaProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC5D0);
  }
  return result;
}

unint64_t sub_1AD431C68()
{
  unint64_t result;

  result = qword_1EECDC5D8;
  if (!qword_1EECDC5D8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684C3C, &type metadata for IMSGSMATransportProtoCharacteristic.PSSignallingProto);
    atomic_store(result, (unint64_t *)&qword_1EECDC5D8);
  }
  return result;
}

uint64_t sub_1AD431CBC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6B636F6C726961;
  else
    v3 = 0x6F6F647473616C62;
  if (v2)
    v4 = 0xE900000000000072;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6B636F6C726961;
  else
    v5 = 0x6F6F647473616C62;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE900000000000072;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD431D64(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1818848627;
    else
      v3 = 0x656D686361747461;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xEA0000000000746ELL;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1818848627;
      else
        v6 = 0x656D686361747461;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xEA0000000000746ELL;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x6E69616C70;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x6E69616C70)
  {
LABEL_21:
    v8 = sub_1AD63C2A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AD431E6C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x6572756C696166;
  else
    v2 = 0x73736563637573;
  if ((a2 & 1) != 0)
    v3 = 0x6572756C696166;
  else
    v3 = 0x73736563637573;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1AD63C2A8();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1AD431EE8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x746E696F70;
  else
    v3 = 0x656C63726963;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x746E696F70;
  else
    v5 = 0x656C63726963;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD431F84(char a1, char a2)
{
  char v2;

  if (*(_QWORD *)&aFull_2[8 * a1] == *(_QWORD *)&aFull_2[8 * a2])
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1AD431FE8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x77656976626577;
  else
    v2 = 0x726573776F7262;
  if ((a2 & 1) != 0)
    v3 = 0x77656976626577;
  else
    v3 = 0x726573776F7262;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1AD63C2A8();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1AD432064(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7972657571;
  else
    v3 = 0x616E6964726F6F63;
  if (v2)
    v4 = 0xEB00000000736574;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7972657571;
  else
    v5 = 0x616E6964726F6F63;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xEB00000000736574;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD43210C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000013;
  else
    v3 = 0x61636F4C776F6873;
  if (v2)
    v4 = 0xEC0000006E6F6974;
  else
    v4 = 0x80000001AD69D6A0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000013;
  else
    v5 = 0x61636F4C776F6873;
  if ((a2 & 1) != 0)
    v6 = 0x80000001AD69D6A0;
  else
    v6 = 0xEC0000006E6F6974;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD4321BC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEC00000054484749;
  v3 = 0x45485F54524F4853;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x485F4D554944454DLL;
    else
      v5 = 0x4945485F4C4C4154;
    if (v4 == 1)
      v6 = 0xED00005448474945;
    else
      v6 = 0xEB00000000544847;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x45485F54524F4853;
  v6 = 0xEC00000054484749;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x485F4D554944454DLL;
    else
      v3 = 0x4945485F4C4C4154;
    if (v7 == 1)
      v2 = 0xED00005448474945;
    else
      v2 = 0xEB00000000544847;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AD432304(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x726568744FLL;
  else
    v3 = 0x4952552D504953;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x726568744FLL;
  else
    v5 = 0x4952552D504953;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD4323A4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 5459283;
  else
    v3 = 0x4965636976726553;
  if (v2)
    v4 = 0xE900000000000044;
  else
    v4 = 0xE300000000000000;
  if ((a2 & 1) != 0)
    v5 = 5459283;
  else
    v5 = 0x4965636976726553;
  if ((a2 & 1) != 0)
    v6 = 0xE300000000000000;
  else
    v6 = 0xE900000000000044;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD432444(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000021;
  else
    v3 = 0xD000000000000019;
  if (v2)
    v4 = 0x80000001AD69D760;
  else
    v4 = 0x80000001AD69D780;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000021;
  else
    v5 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v6 = 0x80000001AD69D780;
  else
    v6 = 0x80000001AD69D760;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD4324F0(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x6E6F69746361;
    else
      v2 = 0x324C756E656DLL;
    v3 = 0xE600000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x6E6F69746361;
      else
        v5 = 0x324C756E656DLL;
      v6 = 0xE600000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE500000000000000;
    v2 = 0x796C706572;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE500000000000000;
  if (v2 != 0x796C706572)
  {
LABEL_15:
    v7 = sub_1AD63C2A8();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD4325F0(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x6E6F69746361;
    else
      v2 = 0x314C756E656DLL;
    v3 = 0xE600000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x6E6F69746361;
      else
        v5 = 0x314C756E656DLL;
      v6 = 0xE600000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE500000000000000;
    v2 = 0x796C706572;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE500000000000000;
  if (v2 != 0x796C706572)
  {
LABEL_15:
    v7 = sub_1AD63C2A8();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD4326F0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD432730(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD4327C8 + 4 * byte_1AD685497[a2]))(0x72656C616964);
}

uint64_t sub_1AD4327C8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x72656C616964 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD4328B8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x575F4D554944454DLL;
  else
    v3 = 0x49575F4C4C414D53;
  if (v2)
    v4 = 0xEB00000000485444;
  else
    v4 = 0xEC00000048544449;
  if ((a2 & 1) != 0)
    v5 = 0x575F4D554944454DLL;
  else
    v5 = 0x49575F4C4C414D53;
  if ((a2 & 1) != 0)
    v6 = 0xEC00000048544449;
  else
    v6 = 0xEB00000000485444;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD43296C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x746E6F7A69726F68;
  else
    v3 = 0x6C61636974726576;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEA00000000006C61;
  if ((a2 & 1) != 0)
    v5 = 0x746E6F7A69726F68;
  else
    v5 = 0x6C61636974726576;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006C61;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD432A14(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x5448474952;
  else
    v3 = 1413891404;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x5448474952;
  else
    v5 = 1413891404;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD432AAC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000016;
  else
    v3 = 0x6465696669726576;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0x80000001AD69D630;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000016;
  else
    v5 = 0x6465696669726576;
  if ((a2 & 1) != 0)
    v6 = 0x80000001AD69D630;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD432B54(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x544E4F5A49524F48;
  else
    v3 = 0x4C41434954524556;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEA00000000004C41;
  if ((a2 & 1) != 0)
    v5 = 0x544E4F5A49524F48;
  else
    v5 = 0x4C41434954524556;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000004C41;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD432BFC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000017;
  else
    v3 = 0xD000000000000012;
  if (v2)
    v4 = 0x80000001AD69D6E0;
  else
    v4 = 0x80000001AD69D700;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000017;
  else
    v5 = 0xD000000000000012;
  if ((a2 & 1) != 0)
    v6 = 0x80000001AD69D700;
  else
    v6 = 0x80000001AD69D6E0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD432CA8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x4F45444956;
  else
    v2 = 0x4F49445541;
  if ((a2 & 1) != 0)
    v3 = 0x4F45444956;
  else
    v3 = 0x4F49445541;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1AD63C2A8();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1AD432D1C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1684828002;
    else
      v3 = 0x6E696C7265646E75;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xE900000000000065;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1684828002;
      else
        v6 = 0x6E696C7265646E75;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xE900000000000065;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x7363696C617469;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x7363696C617469)
  {
LABEL_21:
    v8 = sub_1AD63C2A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AD432E2C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEB00000000726562;
  v3 = 0x6D754E656E6F6870;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6465686369726E65;
    else
      v5 = 0x6C61436F65646976;
    if (v4 == 1)
      v6 = 0xEC0000006C6C6143;
    else
      v6 = 0xE90000000000006CLL;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6D754E656E6F6870;
  v6 = 0xEB00000000726562;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x6465686369726E65;
    else
      v3 = 0x6C61436F65646976;
    if (v7 == 1)
      v2 = 0xEC0000006C6C6143;
    else
      v2 = 0xE90000000000006CLL;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AD432F64(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6974736567677573;
  else
    v3 = 0x6567617373656DLL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEB00000000736E6FLL;
  if ((a2 & 1) != 0)
    v5 = 0x6974736567677573;
  else
    v5 = 0x6567617373656DLL;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000736E6FLL;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD433010(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E6F69746361;
  else
    v3 = 0x796C706572;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6E6F69746361;
  else
    v5 = 0x796C706572;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD4330AC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x726568744FLL;
  else
    v3 = 1869049676;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x726568744FLL;
  else
    v5 = 1869049676;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD433144(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD4331B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD433228 + 4 * byte_1AD6854A2[a2]))(0x6464697754657270);
}

uint64_t sub_1AD433228(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6464697754657270 && v1 == 0xEB0000000064656CLL)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD4332E8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x70616D746962;
    else
      v3 = 0x6675426C65786970;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xEB00000000726566;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x70616D746962;
      else
        v6 = 0x6675426C65786970;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xEB00000000726566;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE300000000000000;
    v3 = 7894113;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE300000000000000;
  if (v3 != 7894113)
  {
LABEL_21:
    v8 = sub_1AD63C2A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AD4333F8(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001AD69CA60;
  else
    v2 = 0x80000001AD69CA40;
  if ((a2 & 1) != 0)
    v3 = 0x80000001AD69CA60;
  else
    v3 = 0x80000001AD69CA40;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1AD433494(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 1635017060;
  else
    v2 = 1701603686;
  if ((a2 & 1) != 0)
    v3 = 1635017060;
  else
    v3 = 1701603686;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1AD63C2A8();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1AD433500(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000010;
    else
      v3 = 0x6974697257726F66;
    if (v2 == 1)
      v4 = 0x80000001AD69DEC0;
    else
      v4 = 0xEA0000000000676ELL;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000010;
      else
        v6 = 0x6974697257726F66;
      if (v5 == 1)
        v7 = 0x80000001AD69DEC0;
      else
        v7 = 0xEA0000000000676ELL;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1752457584;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1752457584)
  {
LABEL_21:
    v8 = sub_1AD63C2A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AD433618(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x534C546F5052534DLL;
  else
    v3 = 1347572557;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x534C546F5052534DLL;
  else
    v5 = 1347572557;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD4336B4(char a1, char a2)
{
  char v2;

  if (*(_QWORD *)&aSipoudp_2[8 * a1] == *(_QWORD *)&aSipoudp_2[8 * a2])
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1AD433718(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1347703379;
  else
    v3 = 5264466;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1347703379;
  else
    v5 = 5264466;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD4337AC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD4337F4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD433860 + 4 * byte_1AD6854AA[a2]))(0x6157646564697567);
}

uint64_t sub_1AD433860(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6157646564697567 && v1 == 0xEA00000000006B6CLL)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1AD433910(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD433950(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD4339A4 + 4 * byte_1AD6854B2[a2]))(0x6E65657267);
}

uint64_t sub_1AD4339A4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E65657267 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD433A3C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x5064696C61766E69;
  else
    v3 = 0x4964696C61766E69;
  if (v2)
    v4 = 0xEB000000006D6574;
  else
    v4 = 0xEF6675626F746F72;
  if ((a2 & 1) != 0)
    v5 = 0x5064696C61766E69;
  else
    v5 = 0x4964696C61766E69;
  if ((a2 & 1) != 0)
    v6 = 0xEF6675626F746F72;
  else
    v6 = 0xEB000000006D6574;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD433AF4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD433B44(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD433BC4 + 4 * byte_1AD6854BB[a2]))(0x65676E616863);
}

uint64_t sub_1AD433BC4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x65676E616863 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1AD433C90(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD433CE0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD433D50 + 4 * byte_1AD6854C4[a2]))(0x79616C70736964);
}

uint64_t sub_1AD433D50(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x79616C70736964 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD433E04(char a1, char a2)
{
  char v2;

  if (*(_QWORD *)&aIms3gpp_3[8 * a1] == *(_QWORD *)&aIms3gpp_3[8 * a2])
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1AD433E68(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000012;
  else
    v3 = 0xD00000000000001ALL;
  if (v2)
    v4 = 0x80000001AD69D7B0;
  else
    v4 = 0x80000001AD69D7D0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000012;
  else
    v5 = 0xD00000000000001ALL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001AD69D7D0;
  else
    v6 = 0x80000001AD69D7B0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD433F10(uint64_t a1, uint64_t a2)
{
  return sub_1AD436BB0(a1, a2, sub_1AD5A6878);
}

uint64_t sub_1AD433F20(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6F65646976;
    else
      v3 = 0x6E776F6E6B6E75;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6F65646976;
      else
        v6 = 0x6E776F6E6B6E75;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x6F69647561;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x6F69647561)
  {
LABEL_21:
    v8 = sub_1AD63C2A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AD434028(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x747365676944;
  else
    v3 = 4279105;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x747365676944;
  else
    v5 = 4279105;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD4340C0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD434124(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD4341AC + 4 * byte_1AD6854CD[a2]))(0x616D49696A6F6D65);
}

uint64_t sub_1AD4341AC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x616D49696A6F6D65 && v1 == 0xEA00000000006567)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD434280(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E776F6E6B6E75;
  else
    v3 = 0xD00000000000003BLL;
  if (v2)
    v4 = 0x80000001AD69CA00;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6E776F6E6B6E75;
  else
    v5 = 0xD00000000000003BLL;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0x80000001AD69CA00;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD434328(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1AD434368(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD4343D0 + 4 * byte_1AD6854D7[a2]))(0x6D756964656DLL);
}

uint64_t sub_1AD4343D0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D756964656DLL && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD43447C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000017;
  else
    v3 = 0xD000000000000015;
  if (v2)
    v4 = 0x80000001AD69CE60;
  else
    v4 = 0x80000001AD69CFC0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000017;
  else
    v5 = 0xD000000000000015;
  if ((a2 & 1) != 0)
    v6 = 0x80000001AD69CFC0;
  else
    v6 = 0x80000001AD69CE60;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD434524(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1AD434570(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD4345D0 + 4 * byte_1AD6854E1[a2]))(a3 + 1);
}

uint64_t sub_1AD4345D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 1 && v3 == 0x80000001AD69CF40)
    v4 = 1;
  else
    v4 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1AD434664(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1AD4346B0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1AD43478C + 4 * byte_1AD6854EE[a2]))(v2 - 1);
}

uint64_t sub_1AD43478C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 - 1 && v2 == 0x80000001AD69CE80)
    v3 = 1;
  else
    v3 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1AD4348AC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD4348EC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD4349A8 + 4 * byte_1AD6854FE[a2]))(0x656C646F6F64);
}

uint64_t sub_1AD4349A8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C646F6F64 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD434AC4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEB00000000656D61;
  v3 = 0x4E79616C70736964;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x7069636974726170;
    else
      v5 = 0x6E776F6E6B6E75;
    if (v4 == 1)
      v6 = 0xEB00000000746E61;
    else
      v6 = 0xE700000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x4E79616C70736964;
  v6 = 0xEB00000000656D61;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x7069636974726170;
    else
      v3 = 0x6E776F6E6B6E75;
    if (v7 == 1)
      v2 = 0xEB00000000746E61;
    else
      v2 = 0xE700000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1AD434BF4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD434C3C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD434CA4 + 4 * byte_1AD68550A[a2]))(0x323030327061);
}

uint64_t sub_1AD434CA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x323030327061 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1AD434D50(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x726568746FLL;
  else
    v3 = 1668576097;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x726568746FLL;
  else
    v5 = 1668576097;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD434DE8(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x6C616974726170;
    else
      v2 = 0x646574656C6564;
    v3 = 0xE700000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x6C616974726170;
      else
        v5 = 0x646574656C6564;
      v6 = 0xE700000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE400000000000000;
    v2 = 1819047270;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE400000000000000;
  if (v2 != 1819047270)
  {
LABEL_15:
    v7 = sub_1AD63C2A8();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD434EF0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1AD434F3C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD434FF0 + 4 * byte_1AD685515[a2]))(0x41657361426C696ELL);
}

uint64_t sub_1AD434FF0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x41657361426C696ELL && v1 == 0xEE00737365726464)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD4350D8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6574697277;
  else
    v3 = 1684104562;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6574697277;
  else
    v5 = 1684104562;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD435170(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C6F686563616C70;
  else
    v3 = 1701736302;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xEB00000000726564;
  if ((a2 & 1) != 0)
    v5 = 0x6C6F686563616C70;
  else
    v5 = 1701736302;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000726564;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD435214(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD435280(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD43532C + 4 * byte_1AD685522[a2]))(0x7373654D74786574);
}

uint64_t sub_1AD43532C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7373654D74786574 && v1 == 0xEB00000000656761)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD435428(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x696A6F6D656DLL;
  else
    v3 = 0x696A6F6D696E61;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x696A6F6D656DLL;
  else
    v5 = 0x696A6F6D696E61;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD4354C8(char a1, char a2)
{
  char v2;

  if (*(_QWORD *)&aFqdn_4[8 * a1] == *(_QWORD *)&aFqdn_4[8 * a2])
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1AD43552C(uint64_t a1, uint64_t a2)
{
  return sub_1AD436BB0(a1, a2, sub_1AD59C63C);
}

uint64_t sub_1AD435538(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE006E6F6974617ALL;
  v3 = 0x696C616974696E69;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 1684104562;
    else
      v5 = 0x6574697277;
    if (v4 == 1)
      v6 = 0xE400000000000000;
    else
      v6 = 0xE500000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x696C616974696E69;
  v6 = 0xEE006E6F6974617ALL;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 1684104562;
    else
      v3 = 0x6574697277;
    if (v7 == 1)
      v2 = 0xE400000000000000;
    else
      v2 = 0xE500000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1AD435648(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD435688(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD4356FC + 4 * byte_1AD68552D[a2]))(0x656B6F727473);
}

uint64_t sub_1AD4356FC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656B6F727473 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD4357B8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x696A6F6D656DLL;
    else
      v3 = 0x6D6172676F6E6F6DLL;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x696A6F6D656DLL;
      else
        v6 = 0x6D6172676F6E6F6DLL;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x736F746F6870;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x736F746F6870)
  {
LABEL_21:
    v8 = sub_1AD63C2A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AD4358C0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x80000001AD69DBE0;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000028;
    else
      v4 = 0xD00000000000002CLL;
    if (v3 == 1)
      v5 = 0x80000001AD69DC10;
    else
      v5 = 0x80000001AD69DC40;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v7 = 0xD000000000000028;
      else
        v7 = 0xD00000000000002CLL;
      if (v6 == 1)
        v2 = 0x80000001AD69DC10;
      else
        v2 = 0x80000001AD69DC40;
      if (v4 != v7)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xD00000000000002ELL;
    v5 = 0x80000001AD69DBE0;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  if (v4 != 0xD00000000000002ELL)
  {
LABEL_21:
    v8 = sub_1AD63C2A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AD4359BC(uint64_t a1, uint64_t a2)
{
  return sub_1AD436BB0(a1, a2, PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.rawValue.getter);
}

uint64_t sub_1AD4359C8(char a1, char a2)
{
  char v2;

  if (*(_QWORD *)&aLatn_1[8 * a1] == *(_QWORD *)&aLatn_1[8 * a2])
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

void sub_1AD435A2C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1AD435A78(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD435AFC + 4 * byte_1AD685537[a2]))(0x74697277646E6168);
}

uint64_t sub_1AD435AFC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x74697277646E6168 && v1 == 0xEB00000000676E69)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD435BB0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x61724669746C756DLL;
  else
    v3 = 0x7246656C676E6973;
  if (v2)
    v4 = 0xEB00000000656D61;
  else
    v4 = 0xEA0000000000656DLL;
  if ((a2 & 1) != 0)
    v5 = 0x61724669746C756DLL;
  else
    v5 = 0x7246656C676E6973;
  if ((a2 & 1) != 0)
    v6 = 0xEA0000000000656DLL;
  else
    v6 = 0xEB00000000656D61;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD435C60(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001AD69DC90;
  else
    v2 = 0x80000001AD69DC70;
  if ((a2 & 1) != 0)
    v3 = 0x80000001AD69DC90;
  else
    v3 = 0x80000001AD69DC70;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1AD435CFC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD435D68(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD435E58 + 4 * byte_1AD685544[a2]))(0x7373654D74786574);
}

uint64_t sub_1AD435E58(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7373654D74786574 && v1 == 0xEB00000000656761)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD435FAC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x69616E626D756874;
  else
    v3 = 1701603686;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE90000000000006CLL;
  if ((a2 & 1) != 0)
    v5 = 0x69616E626D756874;
  else
    v5 = 1701603686;
  if ((a2 & 1) != 0)
    v6 = 0xE90000000000006CLL;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD43604C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656D686361747461;
  else
    v3 = 0x7265646E6572;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEA0000000000746ELL;
  if ((a2 & 1) != 0)
    v5 = 0x656D686361747461;
  else
    v5 = 0x7265646E6572;
  if ((a2 & 1) != 0)
    v6 = 0xEA0000000000746ELL;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD4360F0(uint64_t a1, uint64_t a2)
{
  return sub_1AD436BB0(a1, a2, ImageHeader.rawValue.getter);
}

uint64_t sub_1AD4360FC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 0x6567617373656DLL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0x80000001AD69D1F0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 0x6567617373656DLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001AD69D1F0;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD4361A4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD4361DC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD436280 + 4 * byte_1AD685552[a2]))(1836020326);
}

uint64_t sub_1AD436280(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1836020326 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1AD436370(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1AD4363BC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1AD436440 + 4 * byte_1AD68555D[a2]))();
}

uint64_t sub_1AD436440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0x80000001AD69D820)
    v4 = 1;
  else
    v4 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1AD43650C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1AD436558(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1AD4365EC + 4 * byte_1AD68556A[a2]))(v2 + 21);
}

uint64_t sub_1AD4365EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 21 && v2 == 0x80000001AD69D870)
    v3 = 1;
  else
    v3 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1AD4366F4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7265746E6563;
    else
      v3 = 0x7468676972;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE500000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x7265746E6563;
      else
        v6 = 0x7468676972;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE500000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1952867692;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1952867692)
  {
LABEL_21:
    v8 = sub_1AD63C2A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AD4367EC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x726F7779654B7461;
  else
    v2 = 0x656966696C617571;
  if ((a2 & 1) != 0)
    v3 = 0x726F7779654B7461;
  else
    v3 = 0x656966696C617571;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1AD63C2A8();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_1AD436874(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD4368C4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD436968 + 4 * byte_1AD685578[a2]))(0x726F6C6F63);
}

uint64_t sub_1AD436968(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x726F6C6F63 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD436A5C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D6574737973;
  else
    v3 = 0x6569666963657073;
  if (v2)
    v4 = 0xE900000000000064;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6D6574737973;
  else
    v5 = 0x6569666963657073;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD436B00(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x61632D6C6C616D73;
  else
    v3 = 0x6C616D726F6ELL;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEA00000000007370;
  if ((a2 & 1) != 0)
    v5 = 0x61632D6C6C616D73;
  else
    v5 = 0x6C616D726F6ELL;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000007370;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1AD436BA4(uint64_t a1, uint64_t a2)
{
  return sub_1AD436BB0(a1, a2, StyleSheet.Font.Weight.rawValue.getter);
}

uint64_t sub_1AD436BB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_1AD436C48(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD436C98(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD436D34 + 4 * byte_1AD685584[a2]))(1852793705);
}

uint64_t sub_1AD436D34(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1852793705 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD436E20(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6574756C6F736261;
  else
    v3 = 0x6569666963657073;
  if (v2)
    v4 = 0xE900000000000064;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6574756C6F736261;
  else
    v5 = 0x6569666963657073;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1AD436EC8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD436F18(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD436FB4 + 4 * byte_1AD685591[a2]))(0x6C6C616D732D78);
}

uint64_t sub_1AD436FB4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C6C616D732D78 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1AD4370A8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD4370E0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AD437124 + 4 * byte_1AD68559C[a2]))(30832);
}

uint64_t sub_1AD437124(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 30832 && v1 == 0xE200000000000000)
    v2 = 1;
  else
    v2 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1AD4371A8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x63696C617469;
    else
      v3 = 0x657571696C626FLL;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x63696C617469;
      else
        v6 = 0x657571696C626FLL;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x6C616D726F6ELL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x6C616D726F6ELL)
  {
LABEL_21:
    v8 = sub_1AD63C2A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

BOOL sub_1AD4372B0(char a1, char a2)
{
  int v3;

  v3 = sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * a1], 0xE400000000000000);
  return v3 == sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * a2], 0xE400000000000000);
}

__n128 sub_1AD437308(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;

  v2 = swift_allocObject();
  v3 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v2 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v2 + 160) = v3;
  v4 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v2 + 176) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v2 + 192) = v4;
  v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v2 + 96) = v5;
  v6 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v2 + 128) = v6;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v7;
  result = *(__n128 *)(a1 + 32);
  v9 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(v2 + 48) = result;
  *(_OWORD *)(v2 + 64) = v9;
  return result;
}

void sub_1AD437364(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_1AD4373D8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char v20;
  size_t v21;
  size_t v22;
  OSType v23;
  const __CFDictionary *v24;
  CVReturn v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  void *v32;
  id v33;
  char v34;
  uint64_t v35;
  void *v36;
  id v37;
  char v38;
  uint64_t v39;
  void *v40;
  id v41;
  char v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void *v57;
  void *v58;
  unint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  const __CFDictionary *v68;
  void *v69;
  id v70;
  void *v71;
  id v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  __int16 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  os_log_type_t v84;
  NSObject *v85;
  uint64_t v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[2];
  __int16 v91;
  unint64_t v92;
  _OWORD v93[15];

  if (a1 != BYTE6(v3))
  {
    sub_1AD63BB7C();
    if (qword_1ED2DAD30 == -1)
    {
LABEL_6:
      sub_1AD63B48C();
      sub_1AD00F938();
      swift_allocError();
      *(_WORD *)v8 = 0;
      *(_QWORD *)(v8 + 8) = 0;
      swift_willThrow();
      return;
    }
LABEL_63:
    swift_once();
    goto LABEL_6;
  }
  v7 = *(char *)(v2 + 89);
  if (v7 == 4)
  {
    sub_1AD63BB7C();
    if (qword_1ED2DAD30 == -1)
      goto LABEL_6;
    goto LABEL_63;
  }
  *(_QWORD *)(v6 - 128) = 0;
  if (*(_BYTE *)(v2 + 121) != 1)
  {
    v15 = sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * v7], 0xE400000000000000);
    if (v15 != sub_1AD0027F8(0x41524742uLL, 0xE400000000000000))
    {
      sub_1AD63BB7C();
      if (qword_1ED2DAD30 == -1)
        goto LABEL_59;
      goto LABEL_77;
    }
    v16 = sub_1AD438DD4(MEMORY[0x1E0DEE9D8]);
    v88 = v7;
    if ((*(_BYTE *)(v2 + 120) & 1) != 0)
    {
      if ((*(_BYTE *)(v2 + 40) & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v27 = *(_QWORD *)(v2 + 112);
      v28 = (void *)*MEMORY[0x1E0CA8F68];
      *(_QWORD *)(v6 - 200) = *MEMORY[0x1E0CA8F68];
      type metadata accessor for CFString(0);
      sub_1ACFF9724((unint64_t *)&qword_1ED2E2DD0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1AD647CA8);
      v29 = v28;
      sub_1AD63BD08();
      *(_QWORD *)(v6 - 176) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v6 - 200) = v27;
      sub_1AD002F7C((_OWORD *)(v6 - 200), v93);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v92 = v16;
      sub_1AD43F578(v93, v6 - 168, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1AD0E0BF4(v6 - 168);
      if ((*(_BYTE *)(v2 + 40) & 1) != 0)
      {
LABEL_15:
        if ((*(_BYTE *)(v2 + 56) & 1) != 0)
          goto LABEL_16;
        goto LABEL_26;
      }
    }
    v31 = *(_QWORD *)(v2 + 32);
    v32 = (void *)*MEMORY[0x1E0CA8FC0];
    *(_QWORD *)(v6 - 200) = *MEMORY[0x1E0CA8FC0];
    type metadata accessor for CFString(0);
    sub_1ACFF9724((unint64_t *)&qword_1ED2E2DD0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1AD647CA8);
    v33 = v32;
    sub_1AD63BD08();
    *(_QWORD *)(v6 - 176) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v6 - 200) = v31;
    sub_1AD002F7C((_OWORD *)(v6 - 200), v93);
    v34 = swift_isUniquelyReferenced_nonNull_native();
    v92 = v16;
    sub_1AD43F578(v93, v6 - 168, v34);
    swift_bridgeObjectRelease();
    sub_1AD0E0BF4(v6 - 168);
    if ((*(_BYTE *)(v2 + 56) & 1) != 0)
    {
LABEL_16:
      if ((*(_BYTE *)(v2 + 72) & 1) != 0)
        goto LABEL_17;
      goto LABEL_27;
    }
LABEL_26:
    v35 = *(_QWORD *)(v2 + 48);
    v36 = (void *)*MEMORY[0x1E0CA8FA0];
    *(_QWORD *)(v6 - 200) = *MEMORY[0x1E0CA8FA0];
    type metadata accessor for CFString(0);
    sub_1ACFF9724((unint64_t *)&qword_1ED2E2DD0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1AD647CA8);
    v37 = v36;
    sub_1AD63BD08();
    *(_QWORD *)(v6 - 176) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v6 - 200) = v35;
    sub_1AD002F7C((_OWORD *)(v6 - 200), v93);
    v38 = swift_isUniquelyReferenced_nonNull_native();
    v92 = v16;
    sub_1AD43F578(v93, v6 - 168, v38);
    swift_bridgeObjectRelease();
    sub_1AD0E0BF4(v6 - 168);
    if ((*(_BYTE *)(v2 + 72) & 1) != 0)
    {
LABEL_17:
      if ((*(_BYTE *)(v2 + 88) & 1) != 0)
        goto LABEL_19;
      goto LABEL_18;
    }
LABEL_27:
    v39 = *(_QWORD *)(v2 + 64);
    v40 = (void *)*MEMORY[0x1E0CA8FB0];
    *(_QWORD *)(v6 - 200) = *MEMORY[0x1E0CA8FB0];
    type metadata accessor for CFString(0);
    sub_1ACFF9724((unint64_t *)&qword_1ED2E2DD0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1AD647CA8);
    v41 = v40;
    sub_1AD63BD08();
    *(_QWORD *)(v6 - 176) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v6 - 200) = v39;
    sub_1AD002F7C((_OWORD *)(v6 - 200), v93);
    v42 = swift_isUniquelyReferenced_nonNull_native();
    v92 = v16;
    sub_1AD43F578(v93, v6 - 168, v42);
    swift_bridgeObjectRelease();
    sub_1AD0E0BF4(v6 - 168);
    if ((*(_BYTE *)(v2 + 88) & 1) != 0)
    {
LABEL_19:
      v21 = *(_QWORD *)(v2 + 16);
      v22 = *(_QWORD *)(v2 + 24);
      v23 = sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * v88], 0xE400000000000000);
      v24 = (const __CFDictionary *)sub_1AD63B678();
      swift_bridgeObjectRelease();
      v25 = CVPixelBufferCreate(0, v21, v22, v23, v24, (CVPixelBufferRef *)(v6 - 128));

      if (!v25)
      {
        v26 = *(void **)(v6 - 128);
        if (v26)
        {
          CVPixelBufferGetDataSize((CVPixelBufferRef)v26);
          __asm { BR              X9 }
        }
      }
      sub_1AD63BB7C();
      if (qword_1ED2DAD30 != -1)
        swift_once();
      sub_1AD63B48C();
LABEL_32:
      sub_1AD00F938();
      swift_allocError();
      *(_WORD *)v43 = 512;
LABEL_60:
      *(_QWORD *)(v43 + 8) = 0;
      swift_willThrow();
LABEL_61:

      return;
    }
LABEL_18:
    v17 = *(_QWORD *)(v2 + 80);
    v18 = (void *)*MEMORY[0x1E0CA8FB8];
    *(_QWORD *)(v6 - 200) = *MEMORY[0x1E0CA8FB8];
    type metadata accessor for CFString(0);
    sub_1ACFF9724((unint64_t *)&qword_1ED2E2DD0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1AD647CA8);
    v19 = v18;
    sub_1AD63BD08();
    *(_QWORD *)(v6 - 176) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v6 - 200) = v17;
    sub_1AD002F7C((_OWORD *)(v6 - 200), v93);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v92 = v16;
    sub_1AD43F578(v93, v6 - 168, v20);
    swift_bridgeObjectRelease();
    sub_1AD0E0BF4(v6 - 168);
    goto LABEL_19;
  }
  v91 = 0;
  *(_QWORD *)(v6 - 200) = 0;
  *(_QWORD *)(v6 - 192) = 0;
  *(_BYTE *)(v6 - 184) = 1;
  v9 = *(_QWORD *)(v2 + 184);
  if (v9)
  {
    if (!*(_QWORD *)(v9 + 16))
    {
      __break(1u);
      goto LABEL_77;
    }
    if (*(uint64_t *)(v9 + 32) >= 16)
    {
      LOBYTE(v91) = 1;
      v10 = sub_1AD63AFD0();
      v12 = v11;
      sub_1AD440C50(v10, v11);
      v14 = v13;
      sub_1AD00412C(v10, v12);
      __asm { BR              X10 }
    }
  }
  v44 = sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * v7], 0xE400000000000000);
  if (v44 != sub_1AD0027F8(0x30323478uLL, 0xE400000000000000))
  {
    v45 = sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * v7], 0xE400000000000000);
    if (v45 != sub_1AD0027F8(0x66303234uLL, 0xE400000000000000))
    {
      v46 = sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * v7], 0xE400000000000000);
      if (v46 != sub_1AD0027F8(0x76303234uLL, 0xE400000000000000))
      {
        sub_1AD63BB7C();
        if (qword_1ED2DAD30 == -1)
          goto LABEL_59;
        goto LABEL_77;
      }
    }
  }
  if ((*(_BYTE *)(v2 + 152) & 1) != 0 || *(_QWORD *)(v2 + 144) != 2)
  {
    sub_1AD63BB7C();
    if (qword_1ED2DAD30 == -1)
      goto LABEL_59;
    goto LABEL_77;
  }
  v47 = *(_QWORD *)(v2 + 160);
  if (!v47
    || (v48 = *(_QWORD *)(v2 + 168)) == 0
    || (v49 = *(_QWORD *)(v2 + 176)) == 0
    || (v50 = v7, (v51 = *(_QWORD *)(v2 + 184)) == 0))
  {
    sub_1AD63BB7C();
    if (qword_1ED2DAD30 == -1)
      goto LABEL_59;
    goto LABEL_77;
  }
  if (*(_QWORD *)(v47 + 16) != 2
    || *(_QWORD *)(v48 + 16) != 2
    || *(_QWORD *)(v49 + 16) != 2
    || *(_QWORD *)(v51 + 16) != 2)
  {
    sub_1AD63BB7C();
    if (qword_1ED2DAD30 == -1)
    {
LABEL_59:
      sub_1AD63B48C();
      sub_1AD00F938();
      swift_allocError();
      *(_WORD *)v43 = 0;
      goto LABEL_60;
    }
LABEL_77:
    swift_once();
    goto LABEL_59;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52 = sub_1AD63BB70();
  if (qword_1ED2DAD30 != -1)
  {
    v87 = v52;
    swift_once();
    v52 = v87;
  }
  v85 = qword_1ED2DAD28;
  v84 = v52;
  if (os_log_type_enabled((os_log_t)qword_1ED2DAD28, v52))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v86 = swift_slowAlloc();
    v83 = swift_slowAlloc();
    *(_QWORD *)(v6 - 168) = v83;
    *(_DWORD *)v86 = 136315394;
    v53 = swift_bridgeObjectRetain();
    v80 = MEMORY[0x1AF44A6B0](v53, MEMORY[0x1E0DEB418]);
    v81 = v54;
    swift_bridgeObjectRelease();
    sub_1AD43D1D0(v80, v81, (uint64_t *)(v6 - 168));
    sub_1AD63BC60();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v86 + 12) = 2080;
    v55 = swift_bridgeObjectRetain();
    v79 = MEMORY[0x1AF44A6B0](v55, MEMORY[0x1E0DEB418]);
    v82 = v56;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v93[0] = sub_1AD43D1D0(v79, v82, (uint64_t *)(v6 - 168));
    sub_1AD63BC60();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ACFC8000, v85, v84, "Pixel buffer plane information. bytesPerRow: %s offsets: %s", (uint8_t *)v86, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF44BED4](v83, -1, -1);
    MEMORY[0x1AF44BED4](v86, -1, -1);
  }
  v92 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v93[0] = v5;
  v90[0] = MEMORY[0x1E0DEE9D8];
  v90[1] = MEMORY[0x1E0DEE9D8];
  v89 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)&v93[0] + 1) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AD0040A0(v5, v3);
  LOBYTE(v78) = v50;
  sub_1AD440E20((uint64_t)v93);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1AD00412C(*(uint64_t *)&v93[0], *((unint64_t *)&v93[0] + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_86:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  v58 = v57;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_release();
  v59 = *(_QWORD *)(v2 + 200);
  if (v59 >> 60 == 15)
  {
    sub_1AD00F938();
    swift_allocError();
    *(_WORD *)v60 = 2048;
    *(_QWORD *)(v60 + 8) = 0;
    swift_willThrow();

LABEL_85:
    sub_1AD00412C(*(uint64_t *)&v93[0], *((unint64_t *)&v93[0] + 1));
    goto LABEL_86;
  }
  v61 = v58;
  v62 = *(_QWORD *)(v2 + 192);
  v63 = (void *)objc_opt_self();
  sub_1AD0040A0(v62, v59);
  v64 = (void *)sub_1AD63AFA0();
  *(_QWORD *)(v6 - 168) = 0;
  v65 = objc_msgSend(v63, sel_propertyListWithData_options_format_error_, v64, 0, 0, v6 - 168, v90, v6 - 200, (char *)&v91 + 1, &v89, &v91, v2, v78);

  v66 = *(void **)(v6 - 168);
  if (!v65)
  {
    v74 = v66;
    sub_1AD63AE50();

LABEL_84:
    swift_willThrow();
    sub_1AD004118(v62, v59);

    goto LABEL_85;
  }
  v67 = v66;
  sub_1AD63BCC0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1D18);
  if (!swift_dynamicCast())
  {
    sub_1AD00F938();
    swift_allocError();
    v76 = 2304;
LABEL_83:
    *(_WORD *)v75 = v76;
    *(_QWORD *)(v75 + 8) = 0;
    goto LABEL_84;
  }
  v68 = (const __CFDictionary *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  CVBufferSetAttachments((CVBufferRef)v61, v68, kCVAttachmentMode_ShouldPropagate);

  if (CVPixelBufferCreate(0, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), 0x42475241u, 0, (CVPixelBufferRef *)(v6 - 128))|| (v69 = *(void **)(v6 - 128)) == 0)
  {
    sub_1AD63BB7C();
    sub_1AD63B48C();
    sub_1AD00F938();
    swift_allocError();
    v76 = 512;
    goto LABEL_83;
  }
  *(_QWORD *)(v6 - 168) = 0;
  v70 = v69;
  if (VTPixelTransferSessionCreate(0, (VTPixelTransferSessionRef *)(v6 - 168)) || (v71 = *(void **)(v6 - 168)) == 0)
  {
    sub_1AD00F938();
    swift_allocError();
    *(_WORD *)v77 = 768;
    *(_QWORD *)(v77 + 8) = 0;
    swift_willThrow();
    sub_1AD004118(v62, v59);

    goto LABEL_88;
  }
  v72 = v71;
  if (VTPixelTransferSessionTransferImage((VTPixelTransferSessionRef)v72, (CVPixelBufferRef)v61, (CVPixelBufferRef)v70))
  {
    sub_1AD00F938();
    swift_allocError();
    *(_WORD *)v73 = 1024;
    *(_QWORD *)(v73 + 8) = 0;
    swift_willThrow();
    sub_1AD004118(v62, v59);

LABEL_88:
    sub_1AD00412C(*(uint64_t *)&v93[0], *((unint64_t *)&v93[0] + 1));

    goto LABEL_86;
  }
  VTPixelTransferSessionInvalidate((VTPixelTransferSessionRef)v72);
  sub_1AD004118(v62, v59);

  sub_1AD00412C(*(uint64_t *)&v93[0], *((unint64_t *)&v93[0] + 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v6 - 128))
    goto LABEL_32;
}

uint64_t sub_1AD438D84()
{
  uint64_t v0;

  sub_1AD00F938();
  swift_allocError();
  *(_WORD *)v0 = 1280;
  *(_QWORD *)(v0 + 8) = 0;
  return swift_willThrow();
}

unint64_t sub_1AD438DD4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC6D0);
  v2 = sub_1AD63BE58();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACFF64C0(v6, (uint64_t)v15, &qword_1EECDC6D8);
    result = sub_1AD0DFBAC((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1AD002F7C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD438F14(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2E08);
  v2 = sub_1AD63BE58();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACFF64C0(v6, (uint64_t)&v13, (uint64_t *)&unk_1ED2E2DF8);
    v7 = v13;
    result = sub_1AD0DFBDC(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1AD002F7C(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD439040(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7650);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC650);
  v6 = sub_1AD63BE58();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1ACFF64C0(v12, (uint64_t)v5, &qword_1ED2E7650);
    result = sub_1AD0DFC64((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1AD63B084();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_OWORD *)(v7[7] + 16 * v16) = *(_OWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD4391D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E73E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDC680);
  v6 = sub_1AD63BE58();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1ACFF64C0(v12, (uint64_t)v5, (uint64_t *)&unk_1ED2E73E8);
    result = sub_1AD0DFCD0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1AD63BE10();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = (unint64_t)sub_1AD002F7C(v9, (_OWORD *)(v7[7] + 32 * v16));
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD439370(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDC6B0);
  v2 = (_QWORD *)sub_1AD63BE58();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1AD0DFB48(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD439480(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC6A8);
  v2 = (_QWORD *)sub_1AD63BE58();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1AD0040A0(v7, v8);
    result = sub_1AD0DFB48(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (uint64_t *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD4395A4(uint64_t a1)
{
  return sub_1AD4397F0(a1, &qword_1ED2E1F20, &qword_1ED2E1F28, (uint64_t (*)(uint64_t *, unint64_t))sub_1AD00FA24);
}

unint64_t sub_1AD4395C0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC6A0);
  v2 = (_QWORD *)sub_1AD63BE58();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_1AD0DFB48(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD4396D8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  char v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD40);
  v2 = (_QWORD *)sub_1AD63BE58();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *(_BYTE *)v4;
    v6 = *(v4 - 1);
    result = sub_1AD0DFBDC((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v6;
    *(_BYTE *)(v2[7] + result) = v5;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD4397D4(uint64_t a1)
{
  return sub_1AD4397F0(a1, &qword_1ED2E2D78, &qword_1EECDC690, (uint64_t (*)(uint64_t *, unint64_t))sub_1AD00FA24);
}

unint64_t sub_1AD4397F0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_1AD63BE58();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACFF64C0(v11, (uint64_t)&v20, a3);
    v12 = v20;
    v13 = v21;
    result = sub_1AD0DFB48(v20, v21);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v8[6] + 16 * result);
    *v16 = v12;
    v16[1] = v13;
    result = a4(&v22, v8[7] + 40 * result);
    v17 = v8[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v8[2] = v19;
    v11 += 56;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD43992C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _BYTE v13[8];
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC668);
  v2 = sub_1AD63BE58();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACFF64C0(v6, (uint64_t)v13, (uint64_t *)&unk_1EECDC670);
    v7 = v13[0];
    result = sub_1AD0DFD9C(v13[0]);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v7;
    result = sub_1AD00FA24(&v14, v3[7] + 40 * result);
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD439A5C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA5E0);
  v2 = sub_1AD63BE58();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACFF64C0(v6, (uint64_t)&v15, (uint64_t *)&unk_1ED2DA5D0);
    v7 = v15;
    v8 = v16;
    result = sub_1AD0DFB48(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1AD002F7C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

BlastDoor::BlastDoorPixelBufferFormats_optional __swiftcall BlastDoorPixelBufferFormats.init(rawValue:)(Swift::UInt32 rawValue)
{
  char *v1;
  char *v3;
  int v4;
  char v5;

  v3 = v1;
  v4 = sub_1AD0027F8(0x76303234uLL, 0xE400000000000000);
  if (v4 == rawValue)
  {
    v5 = 0;
  }
  else
  {
    v4 = sub_1AD0027F8(0x66303234uLL, 0xE400000000000000);
    if (v4 == rawValue)
    {
      v5 = 1;
    }
    else
    {
      v4 = sub_1AD0027F8(0x30323478uLL, 0xE400000000000000);
      if (v4 == rawValue)
      {
        v5 = 2;
      }
      else
      {
        v4 = sub_1AD0027F8(0x41524742uLL, 0xE400000000000000);
        if (v4 == rawValue)
          v5 = 3;
        else
          v5 = 4;
      }
    }
  }
  *v3 = v5;
  return (BlastDoor::BlastDoorPixelBufferFormats_optional)v4;
}

uint64_t BlastDoorPixelBufferFormats.rawValue.getter()
{
  char *v0;

  return sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * *v0], 0xE400000000000000);
}

BOOL sub_1AD439C48(char *a1, char *a2)
{
  return sub_1AD4372B0(*a1, *a2);
}

uint64_t sub_1AD439C54()
{
  char *v0;

  return sub_1AD14BFA4(*v0);
}

uint64_t sub_1AD439C5C()
{
  char *v0;

  sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * *v0], 0xE400000000000000);
  return sub_1AD63C4DC();
}

uint64_t sub_1AD439C98(uint64_t a1)
{
  char *v1;

  return sub_1AD14DD70(a1, *v1);
}

BlastDoor::BlastDoorPixelBufferFormats_optional sub_1AD439CA0(Swift::UInt32 *a1)
{
  return BlastDoorPixelBufferFormats.init(rawValue:)(*a1);
}

uint64_t sub_1AD439CA8@<X0>(_DWORD *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * *v1], 0xE400000000000000);
  *a1 = result;
  return result;
}

uint64_t sub_1AD439CE0()
{
  sub_1AD442758();
  return sub_1AD63B96C();
}

uint64_t sub_1AD439D3C()
{
  sub_1AD442758();
  return sub_1AD63B90C();
}

uint64_t sub_1AD439D88()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1AD439D90(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD439D98())()
{
  return nullsub_1;
}

uint64_t sub_1AD439DA8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1AD439DB0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*sub_1AD439DB8())()
{
  return nullsub_1;
}

uint64_t sub_1AD439DC8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AD439DD4(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD439DE4())()
{
  return nullsub_1;
}

uint64_t sub_1AD439DF4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1AD439E00(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD439E10())()
{
  return nullsub_1;
}

uint64_t sub_1AD439E20()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_1AD439E2C(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD439E3C())()
{
  return nullsub_1;
}

uint64_t sub_1AD439E4C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t sub_1AD439E58(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD439E68())()
{
  return nullsub_1;
}

void sub_1AD439E78(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 73);
}

_BYTE *sub_1AD439E84(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 73) = *result;
  return result;
}

uint64_t (*sub_1AD439E90())()
{
  return nullsub_1;
}

uint64_t sub_1AD439EA0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_1AD439EA8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

uint64_t (*sub_1AD439EB0())()
{
  return nullsub_1;
}

uint64_t sub_1AD439EC0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t sub_1AD439EC8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = result;
  return result;
}

uint64_t (*sub_1AD439ED0())()
{
  return nullsub_1;
}

uint64_t sub_1AD439EE0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t sub_1AD439EEC(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_BYTE *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD439EFC())()
{
  return nullsub_1;
}

uint64_t sub_1AD439F0C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 105);
}

uint64_t sub_1AD439F14(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 105) = result;
  return result;
}

uint64_t (*sub_1AD439F1C())()
{
  return nullsub_1;
}

uint64_t sub_1AD439F2C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t sub_1AD439F38(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = result;
  *(_BYTE *)(v2 + 120) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD439F48())()
{
  return nullsub_1;
}

uint64_t sub_1AD439F58()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t sub_1AD439F64(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = result;
  *(_BYTE *)(v2 + 136) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD439F74())()
{
  return nullsub_1;
}

uint64_t sub_1AD439F84()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD439F8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 144) = a1;
  return result;
}

uint64_t (*sub_1AD439FB4())()
{
  return nullsub_1;
}

uint64_t sub_1AD439FC4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD439FCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 152) = a1;
  return result;
}

uint64_t (*sub_1AD439FF4())()
{
  return nullsub_1;
}

uint64_t sub_1AD43A004()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD43A00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 160) = a1;
  return result;
}

uint64_t (*sub_1AD43A034())()
{
  return nullsub_1;
}

uint64_t sub_1AD43A044()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD43A04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 168) = a1;
  return result;
}

uint64_t (*sub_1AD43A074())()
{
  return nullsub_1;
}

uint64_t sub_1AD43A084()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + 184));
  return v1;
}

uint64_t sub_1AD43A0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD004118(*(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return result;
}

uint64_t (*sub_1AD43A0E8())()
{
  return nullsub_1;
}

double sub_1AD43A0F8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 1;
  *(_QWORD *)(a1 + 64) = 0;
  *(_WORD *)(a1 + 72) = 1025;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 104) = 1;
  *(_BYTE *)(a1 + 105) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 120) = 1;
  *(_QWORD *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 136) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0xF000000000000000;
  return result;
}

void sub_1AD43A188(__CVBuffer *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  size_t Width;
  size_t Height;
  Swift::UInt32 PixelFormatType;
  int v8;
  size_t DataSize;
  size_t BytesPerRow;
  size_t PlaneCount;
  _BYTE *BaseAddress;
  size_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  size_t v18;
  int64_t v19;
  size_t WidthOfPlane;
  unint64_t v21;
  unint64_t v22;
  size_t HeightOfPlane;
  unint64_t v24;
  unint64_t v25;
  size_t BytesPerRowOfPlane;
  unint64_t v27;
  unint64_t v28;
  _BYTE *BaseAddressOfPlane;
  _BYTE *v30;
  unint64_t v31;
  unint64_t v32;
  CFDictionaryRef v33;
  uint64_t v34;
  void *v35;
  id v36;
  unint64_t v37;
  char v38;
  int v39;
  uint64_t v40;
  char v41;
  id v42;
  unint64_t v43;
  char v44;
  int v45;
  id v46;
  char v47;
  id v48;
  unint64_t v49;
  char v50;
  int v51;
  id v52;
  char v53;
  id v54;
  unint64_t v55;
  char v56;
  int v57;
  _BYTE *v58;
  char v59;
  id v60;
  unint64_t v61;
  char v62;
  int v63;
  id v64;
  char v65;
  char *v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  id v76;
  id v77;
  void *v78;
  void *v79;
  BOOL v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  int v86;
  char v87;
  char v88;
  size_t v89;
  size_t v90;
  uint64_t v91;
  id v92;
  id v93;
  id v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int IsPlanar;
  size_t v99;
  size_t v100;
  size_t v101;
  int v102;
  size_t v103;
  _BYTE *v104;
  size_t v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  id v113;
  _BYTE v114[7];
  _BYTE v115[11];
  __int16 v116;
  int v117;
  __int16 v118;
  _BYTE v119[7];
  _OWORD v120[2];
  __int128 v121;
  __int128 v122;
  uint64_t v123;

  v123 = *MEMORY[0x1E0C80C00];
  v97 = sub_1AD63B66C();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v95 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = 1;
  v111 = 1;
  v110 = 1;
  v109 = 1;
  v108 = 1;
  v107 = 1;
  v106 = 1;
  Width = CVPixelBufferGetWidth(a1);
  Height = CVPixelBufferGetHeight(a1);
  PixelFormatType = CVPixelBufferGetPixelFormatType(a1);
  BlastDoorPixelBufferFormats.init(rawValue:)(PixelFormatType);
  v8 = LOBYTE(v120[0]);
  DataSize = CVPixelBufferGetDataSize(a1);
  BytesPerRow = CVPixelBufferGetBytesPerRow(a1);
  IsPlanar = CVPixelBufferIsPlanar(a1);
  v102 = v8;
  v101 = DataSize;
  if (IsPlanar)
  {
    PlaneCount = CVPixelBufferGetPlaneCount(a1);
    v106 = 0;
    CVPixelBufferLockBaseAddress(a1, 1uLL);
    BaseAddress = CVPixelBufferGetBaseAddress(a1);
    v105 = PlaneCount;
    v104 = BaseAddress;
    v103 = Width;
    v100 = Height;
    v99 = BytesPerRow;
    if (BaseAddress)
    {
      if ((PlaneCount & 0x8000000000000000) != 0)
        goto LABEL_99;
      if (PlaneCount)
      {
        v13 = 0;
        v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v18 = v105;
        while (v18 != v13)
        {
          if (v14)
          {
            WidthOfPlane = CVPixelBufferGetWidthOfPlane(a1, v13);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v14 = sub_1AD3CB7E8(0, v14[2] + 1, 1, v14);
            v22 = v14[2];
            v21 = v14[3];
            if (v22 >= v21 >> 1)
              v14 = sub_1AD3CB7E8((_QWORD *)(v21 > 1), v22 + 1, 1, v14);
            v14[2] = v22 + 1;
            v14[v22 + 4] = WidthOfPlane;
          }
          if (v15)
          {
            HeightOfPlane = CVPixelBufferGetHeightOfPlane(a1, v13);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v15 = sub_1AD3CB7E8(0, v15[2] + 1, 1, v15);
            v25 = v15[2];
            v24 = v15[3];
            if (v25 >= v24 >> 1)
              v15 = sub_1AD3CB7E8((_QWORD *)(v24 > 1), v25 + 1, 1, v15);
            v15[2] = v25 + 1;
            v15[v25 + 4] = HeightOfPlane;
          }
          if (v16)
          {
            BytesPerRowOfPlane = CVPixelBufferGetBytesPerRowOfPlane(a1, v13);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v16 = sub_1AD3CB7E8(0, v16[2] + 1, 1, v16);
            v28 = v16[2];
            v27 = v16[3];
            if (v28 >= v27 >> 1)
              v16 = sub_1AD3CB7E8((_QWORD *)(v27 > 1), v28 + 1, 1, v16);
            v16[2] = v28 + 1;
            v16[v28 + 4] = BytesPerRowOfPlane;
          }
          if (v17)
          {
            BaseAddressOfPlane = CVPixelBufferGetBaseAddressOfPlane(a1, v13);
            if (!BaseAddressOfPlane)
              goto LABEL_100;
            v30 = BaseAddressOfPlane;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v17 = sub_1AD3CB7E8(0, v17[2] + 1, 1, v17);
            v32 = v17[2];
            v31 = v17[3];
            if (v32 >= v31 >> 1)
              v17 = sub_1AD3CB7E8((_QWORD *)(v31 > 1), v32 + 1, 1, v17);
            v19 = v30 - v104;
            v17[2] = v32 + 1;
            v17[v32 + 4] = v19;
          }
          ++v13;
          v18 = v105;
          if (v105 == v13)
            goto LABEL_34;
        }
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
      }
    }
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_34:
    CVPixelBufferUnlockBaseAddress(a1, 1uLL);
  }
  else
  {
    v103 = CVPixelBufferGetWidth(a1);
    v100 = CVPixelBufferGetHeight(a1);
    v99 = CVPixelBufferGetBytesPerRow(a1);
    v105 = 0;
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v33 = CVPixelBufferCopyCreationAttributes(a1);
  *(_QWORD *)&v120[0] = 0;
  sub_1AD63B684();

  v34 = *(_QWORD *)&v120[0];
  if (!*(_QWORD *)&v120[0])
    goto LABEL_48;
  if (!*(_QWORD *)(*(_QWORD *)&v120[0] + 16))
  {
    swift_bridgeObjectRelease();
LABEL_48:
    v40 = 0;
    v94 = 0;
    v104 = 0;
    v92 = 0;
    v93 = 0;
    goto LABEL_88;
  }
  *(_QWORD *)&v121 = *MEMORY[0x1E0CA8F68];
  v35 = (void *)v121;
  type metadata accessor for CFString(0);
  sub_1ACFF9724((unint64_t *)&qword_1ED2E2DD0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1AD647CA8);
  v36 = v35;
  sub_1AD63BD08();
  if (*(_QWORD *)(v34 + 16) && (v37 = sub_1AD0DFBAC((uint64_t)v120), (v38 & 1) != 0))
  {
    sub_1AD3551A8(*(_QWORD *)(v34 + 56) + 32 * v37, (uint64_t)&v121);
  }
  else
  {
    v121 = 0u;
    v122 = 0u;
  }
  sub_1AD0E0BF4((uint64_t)v120);
  if (*((_QWORD *)&v122 + 1))
  {
    v39 = swift_dynamicCast();
    if (v39)
      v40 = (uint64_t)v113;
    else
      v40 = 0;
    v41 = v39 ^ 1;
  }
  else
  {
    sub_1AD32F28C((uint64_t)&v121);
    v40 = 0;
    v41 = 1;
  }
  v108 = v41;
  *(_QWORD *)&v121 = *MEMORY[0x1E0CA8FC0];
  v42 = (id)v121;
  sub_1AD63BD08();
  if (*(_QWORD *)(v34 + 16) && (v43 = sub_1AD0DFBAC((uint64_t)v120), (v44 & 1) != 0))
  {
    sub_1AD3551A8(*(_QWORD *)(v34 + 56) + 32 * v43, (uint64_t)&v121);
  }
  else
  {
    v121 = 0u;
    v122 = 0u;
  }
  sub_1AD0E0BF4((uint64_t)v120);
  if (*((_QWORD *)&v122 + 1))
  {
    v45 = swift_dynamicCast();
    v46 = v113;
    if (!v45)
      v46 = 0;
    v93 = v46;
    v47 = v45 ^ 1;
  }
  else
  {
    sub_1AD32F28C((uint64_t)&v121);
    v93 = 0;
    v47 = 1;
  }
  v112 = v47;
  *(_QWORD *)&v121 = *MEMORY[0x1E0CA8FA0];
  v48 = (id)v121;
  sub_1AD63BD08();
  if (*(_QWORD *)(v34 + 16) && (v49 = sub_1AD0DFBAC((uint64_t)v120), (v50 & 1) != 0))
  {
    sub_1AD3551A8(*(_QWORD *)(v34 + 56) + 32 * v49, (uint64_t)&v121);
  }
  else
  {
    v121 = 0u;
    v122 = 0u;
  }
  sub_1AD0E0BF4((uint64_t)v120);
  if (*((_QWORD *)&v122 + 1))
  {
    v51 = swift_dynamicCast();
    v52 = v113;
    if (!v51)
      v52 = 0;
    v92 = v52;
    v53 = v51 ^ 1;
  }
  else
  {
    sub_1AD32F28C((uint64_t)&v121);
    v92 = 0;
    v53 = 1;
  }
  v111 = v53;
  *(_QWORD *)&v121 = *MEMORY[0x1E0CA8FB0];
  v54 = (id)v121;
  sub_1AD63BD08();
  if (*(_QWORD *)(v34 + 16) && (v55 = sub_1AD0DFBAC((uint64_t)v120), (v56 & 1) != 0))
  {
    sub_1AD3551A8(*(_QWORD *)(v34 + 56) + 32 * v55, (uint64_t)&v121);
  }
  else
  {
    v121 = 0u;
    v122 = 0u;
  }
  sub_1AD0E0BF4((uint64_t)v120);
  if (*((_QWORD *)&v122 + 1))
  {
    v57 = swift_dynamicCast();
    v58 = v113;
    if (!v57)
      v58 = 0;
    v104 = v58;
    v59 = v57 ^ 1;
  }
  else
  {
    sub_1AD32F28C((uint64_t)&v121);
    v104 = 0;
    v59 = 1;
  }
  v110 = v59;
  v113 = (id)*MEMORY[0x1E0CA8FB8];
  v60 = v113;
  sub_1AD63BD08();
  if (*(_QWORD *)(v34 + 16))
  {
    v61 = sub_1AD0DFBAC((uint64_t)v120);
    if ((v62 & 1) != 0)
    {
      sub_1AD3551A8(*(_QWORD *)(v34 + 56) + 32 * v61, (uint64_t)&v121);
    }
    else
    {
      v121 = 0u;
      v122 = 0u;
    }
  }
  else
  {
    v121 = 0u;
    v122 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1AD0E0BF4((uint64_t)v120);
  if (*((_QWORD *)&v122 + 1))
  {
    v63 = swift_dynamicCast();
    v64 = v113;
    if (!v63)
      v64 = 0;
    v94 = v64;
    v65 = v63 ^ 1;
  }
  else
  {
    sub_1AD32F28C((uint64_t)&v121);
    v94 = 0;
    v65 = 1;
  }
  v109 = v65;
LABEL_88:
  v66 = v95;
  sub_1AD63BB40();
  v67 = sub_1AD63B660();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v66, v97);
  *(_QWORD *)&v121 = v67;
  if (*(_QWORD *)(v67 + 16))
  {
    v97 = v40;
    sub_1AD43D86C(0x53726F6C6F434743, 0xEC00000065636170, v120);
    sub_1AD32F28C((uint64_t)v120);
    v68 = (void *)objc_opt_self();
    v69 = (void *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v120[0] = 0;
    v70 = objc_msgSend(v68, sel_dataWithPropertyList_format_options_error_, v69, 200, 0, v120);

    v71 = *(id *)&v120[0];
    if (v70)
    {
      v72 = sub_1AD63AFB8();
      v74 = v73;

    }
    else
    {
      v78 = v71;
      v79 = (void *)sub_1AD63AE50();

      swift_willThrow();
      v72 = 0;
      v74 = 0xF000000000000000;
    }
    v76 = v93;
    v77 = v92;
    sub_1AD004118(0, 0xF000000000000000);
    v75 = IsPlanar;
    v40 = v97;
  }
  else
  {
    swift_bridgeObjectRelease();

    v72 = 0;
    v74 = 0xF000000000000000;
    v75 = IsPlanar;
    v76 = v93;
    v77 = v92;
  }
  v80 = v75 == 0;
  v81 = v112;
  v82 = !v80;
  *(_DWORD *)(a2 + 25) = v120[0];
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)v120 + 3);
  v83 = v111;
  *(_DWORD *)(a2 + 41) = (_DWORD)v113;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)((char *)&v113 + 3);
  v84 = v110;
  *(_DWORD *)(a2 + 57) = *(_DWORD *)v119;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v119[3];
  v85 = v109;
  v86 = v117;
  *(_WORD *)(a2 + 78) = v118;
  *(_DWORD *)(a2 + 74) = v86;
  LOBYTE(v86) = v108;
  *(_DWORD *)(a2 + 106) = *(_DWORD *)&v115[7];
  *(_WORD *)(a2 + 110) = v116;
  v87 = v107;
  *(_DWORD *)(a2 + 121) = *(_DWORD *)v115;
  *(_DWORD *)(a2 + 124) = *(_DWORD *)&v115[3];
  v88 = v106;
  *(_DWORD *)(a2 + 140) = *(_DWORD *)&v114[3];
  *(_DWORD *)(a2 + 137) = *(_DWORD *)v114;
  v89 = v100;
  *(_QWORD *)a2 = v103;
  *(_QWORD *)(a2 + 8) = v89;
  *(_QWORD *)(a2 + 16) = v76;
  *(_BYTE *)(a2 + 24) = v81;
  *(_QWORD *)(a2 + 32) = v77;
  *(_BYTE *)(a2 + 40) = v83;
  *(_QWORD *)(a2 + 48) = v104;
  *(_BYTE *)(a2 + 56) = v84;
  *(_QWORD *)(a2 + 64) = v94;
  *(_BYTE *)(a2 + 72) = v85;
  *(_BYTE *)(a2 + 73) = v102;
  v90 = v99;
  *(_QWORD *)(a2 + 80) = v101;
  *(_QWORD *)(a2 + 88) = v90;
  *(_QWORD *)(a2 + 96) = v40;
  *(_BYTE *)(a2 + 104) = v86;
  *(_BYTE *)(a2 + 105) = v82;
  *(_QWORD *)(a2 + 112) = 0;
  *(_BYTE *)(a2 + 120) = v87;
  *(_QWORD *)(a2 + 128) = v105;
  *(_BYTE *)(a2 + 136) = v88;
  *(_QWORD *)(a2 + 144) = v14;
  *(_QWORD *)(a2 + 152) = v15;
  *(_QWORD *)(a2 + 160) = v16;
  *(_QWORD *)(a2 + 168) = v17;
  *(_QWORD *)(a2 + 176) = v72;
  *(_QWORD *)(a2 + 184) = v74;
}

uint64_t sub_1AD43AD78(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AD43ADB4 + 4 * byte_1AD6855A0[a1]))(0xD000000000000010, 0x80000001AD6A9D20);
}

uint64_t sub_1AD43ADB4()
{
  uint64_t v0;

  return v0 - 5;
}

uint64_t sub_1AD43AED0()
{
  unsigned __int8 *v0;

  return sub_1AD43AD78(*v0);
}

uint64_t sub_1AD43AED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD44211C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD43AEFC()
{
  sub_1AD441558();
  return sub_1AD63C560();
}

uint64_t sub_1AD43AF24()
{
  sub_1AD441558();
  return sub_1AD63C56C();
}

uint64_t sub_1AD43AF4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC5F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 8);
  v35 = *(_QWORD *)(v1 + 16);
  v36 = v7;
  v40 = *(unsigned __int8 *)(v1 + 24);
  v34 = *(_QWORD *)(v1 + 32);
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 40);
  v31 = *(_QWORD *)(v1 + 48);
  v32 = *(unsigned __int8 *)(v1 + 56);
  v33 = v7;
  v29 = *(_QWORD *)(v1 + 64);
  v30 = *(unsigned __int8 *)(v1 + 72);
  v28 = *(unsigned __int8 *)(v1 + 73);
  v8 = *(_QWORD *)(v1 + 80);
  v26 = *(_QWORD *)(v1 + 88);
  v27 = v8;
  v24 = *(_QWORD *)(v1 + 96);
  v25 = *(unsigned __int8 *)(v1 + 104);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 105);
  v21 = *(_QWORD *)(v1 + 112);
  v22 = *(unsigned __int8 *)(v1 + 120);
  v23 = v8;
  v9 = *(_QWORD *)(v1 + 128);
  v20 = *(unsigned __int8 *)(v1 + 136);
  v18 = *(_QWORD *)(v1 + 144);
  v19 = v9;
  v17 = *(_QWORD *)(v1 + 152);
  v16 = *(_QWORD *)(v1 + 160);
  v15 = *(_QWORD *)(v1 + 168);
  v10 = *(_QWORD *)(v1 + 184);
  v14 = *(_QWORD *)(v1 + 176);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD441558();
  sub_1AD63C53C();
  LOBYTE(v38) = 0;
  v11 = v37;
  sub_1AD63C050();
  if (!v11)
  {
    v37 = v10;
    LOBYTE(v38) = 1;
    sub_1AD63C050();
    LOBYTE(v38) = 2;
    sub_1AD63BFFC();
    LOBYTE(v38) = 3;
    sub_1AD63BFFC();
    LOBYTE(v38) = 4;
    sub_1AD63BFFC();
    LOBYTE(v38) = 5;
    sub_1AD63BFFC();
    LOBYTE(v38) = v28;
    v41 = 6;
    sub_1AD44159C();
    sub_1AD63C014();
    LOBYTE(v38) = 7;
    sub_1AD63C050();
    LOBYTE(v38) = 8;
    sub_1AD63C050();
    LOBYTE(v38) = 9;
    sub_1AD63BFFC();
    LOBYTE(v38) = 10;
    sub_1AD63C02C();
    LOBYTE(v38) = 11;
    sub_1AD63BFFC();
    LOBYTE(v38) = 12;
    sub_1AD63BFFC();
    v38 = v18;
    v41 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC610);
    sub_1AD441624(&qword_1EECD5148, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
    sub_1AD63C014();
    v38 = v17;
    v41 = 14;
    sub_1AD63C014();
    v38 = v16;
    v41 = 15;
    sub_1AD63C014();
    v38 = v15;
    v41 = 16;
    sub_1AD63C014();
    v38 = v14;
    v39 = v37;
    v41 = 17;
    sub_1AD00FDFC();
    sub_1AD63C014();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AD43B49C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _QWORD v69[3];
  char v70;
  _BYTE v71[7];
  uint64_t v72;
  char v73;
  _BYTE v74[7];
  uint64_t v75;
  char v76;
  _BYTE v77[7];
  uint64_t v78;
  char v79;
  char v80;
  int v81;
  __int16 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  int v88;
  __int16 v89;
  uint64_t v90;
  char v91;
  _BYTE v92[7];
  uint64_t v93;
  char v94;
  _BYTE v95[7];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  unint64_t v104;
  _BYTE v105[7];
  char v106;
  _BYTE v107[7];
  char v108;
  int v109;
  __int16 v110;
  char v111;
  int v112;
  __int16 v113;
  char v114;
  _BYTE v115[7];
  char v116;
  _BYTE v117[7];
  char v118;
  _BYTE v119[7];
  char v120;
  uint64_t v121;

  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC618);
  v5 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = 1;
  v118 = 1;
  v116 = 1;
  v114 = 1;
  v111 = 1;
  v108 = 1;
  v106 = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD441558();
  sub_1AD63C524();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1AD004118(0, 0xF000000000000000);
  }
  else
  {
    v56 = v5;
    LOBYTE(v69[0]) = 0;
    v8 = sub_1AD63BF3C();
    LOBYTE(v69[0]) = 1;
    v9 = sub_1AD63BF3C();
    LOBYTE(v69[0]) = 2;
    v55 = sub_1AD63BEE8();
    v120 = v10 & 1;
    LOBYTE(v69[0]) = 3;
    v54 = v10;
    v53 = sub_1AD63BEE8();
    v118 = v11 & 1;
    LOBYTE(v69[0]) = 4;
    v52 = v11;
    v51 = sub_1AD63BEE8();
    v116 = v12 & 1;
    LOBYTE(v69[0]) = 5;
    v50 = v12;
    v49 = sub_1AD63BEE8();
    v114 = v13 & 1;
    LOBYTE(v57) = 6;
    v48 = v13;
    sub_1AD4415E0();
    sub_1AD63BF00();
    v47 = LOBYTE(v69[0]);
    LOBYTE(v69[0]) = 7;
    v46 = sub_1AD63BF3C();
    LOBYTE(v69[0]) = 8;
    v45 = sub_1AD63BF3C();
    v42 = v9;
    v43 = v8;
    v40 = a2;
    LOBYTE(v69[0]) = 9;
    v41 = sub_1AD63BEE8();
    v44 = v14;
    v111 = v14 & 1;
    LOBYTE(v69[0]) = 10;
    v39 = sub_1AD63BF18();
    LOBYTE(v69[0]) = 11;
    v37 = sub_1AD63BEE8();
    v38 = v15;
    v108 = v15 & 1;
    LOBYTE(v69[0]) = 12;
    v36 = sub_1AD63BEE8();
    v17 = v16;
    v106 = v16 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC610);
    LOBYTE(v57) = 13;
    v35 = sub_1AD441624(&qword_1EECD5138, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
    sub_1AD63BF00();
    LOBYTE(v57) = 14;
    v34 = v69[0];
    swift_bridgeObjectRetain();
    sub_1AD63BF00();
    v18 = v69[0];
    LOBYTE(v57) = 15;
    swift_bridgeObjectRetain();
    sub_1AD63BF00();
    v19 = v69[0];
    LOBYTE(v57) = 16;
    swift_bridgeObjectRetain();
    sub_1AD63BF00();
    v20 = v69[0];
    v102 = 17;
    sub_1AD00F97C();
    swift_bridgeObjectRetain();
    sub_1AD63BF00();
    v39 &= 1u;
    v21 = v39;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v121);
    v22 = v104;
    v121 = v103;
    sub_1AD00408C(v103, v104);
    sub_1AD004118(0, 0xF000000000000000);
    *(_QWORD *)&v57 = v43;
    *((_QWORD *)&v57 + 1) = v42;
    *(_QWORD *)&v58 = v55;
    BYTE8(v58) = v54 & 1;
    *(_QWORD *)&v59 = v53;
    BYTE8(v59) = v52 & 1;
    *(_QWORD *)&v60 = v51;
    BYTE8(v60) = v50 & 1;
    *(_QWORD *)&v61 = v49;
    BYTE8(v61) = v48 & 1;
    BYTE9(v61) = v47;
    *(_QWORD *)&v62 = v46;
    *((_QWORD *)&v62 + 1) = v45;
    *(_QWORD *)&v63 = v41;
    BYTE8(v63) = v44 & 1;
    BYTE9(v63) = v21;
    *(_QWORD *)&v64 = v37;
    BYTE8(v64) = v38 & 1;
    *(_QWORD *)&v65 = v36;
    BYTE8(v65) = v17 & 1;
    v23 = v34;
    *(_QWORD *)&v66 = v34;
    *((_QWORD *)&v66 + 1) = v18;
    *(_QWORD *)&v67 = v19;
    *((_QWORD *)&v67 + 1) = v20;
    v24 = v121;
    *(_QWORD *)&v68 = v121;
    *((_QWORD *)&v68 + 1) = v22;
    sub_1AD00F844((uint64_t)&v57);
    sub_1AD004118(v24, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v66;
    v26 = v40;
    v40[8] = v65;
    v26[9] = v25;
    v27 = v68;
    v26[10] = v67;
    v26[11] = v27;
    v28 = v62;
    v26[4] = v61;
    v26[5] = v28;
    v29 = v64;
    v26[6] = v63;
    v26[7] = v29;
    v30 = v58;
    *v26 = v57;
    v26[1] = v30;
    v31 = v60;
    v26[2] = v59;
    v26[3] = v31;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v69[0] = v43;
    v69[1] = v42;
    v69[2] = v55;
    v70 = v120;
    *(_DWORD *)v71 = *(_DWORD *)v119;
    *(_DWORD *)&v71[3] = *(_DWORD *)&v119[3];
    v72 = v53;
    v73 = v118;
    *(_DWORD *)v74 = *(_DWORD *)v117;
    *(_DWORD *)&v74[3] = *(_DWORD *)&v117[3];
    v75 = v51;
    v76 = v116;
    *(_DWORD *)v77 = *(_DWORD *)v115;
    *(_DWORD *)&v77[3] = *(_DWORD *)&v115[3];
    v78 = v49;
    v79 = v114;
    v80 = v47;
    v81 = v112;
    v82 = v113;
    v83 = v46;
    v84 = v45;
    v85 = v41;
    v86 = v111;
    v87 = v39;
    v89 = v110;
    v88 = v109;
    v90 = v37;
    v91 = v108;
    *(_DWORD *)&v92[3] = *(_DWORD *)&v107[3];
    *(_DWORD *)v92 = *(_DWORD *)v107;
    v93 = v36;
    v94 = v106;
    *(_DWORD *)v95 = *(_DWORD *)v105;
    *(_DWORD *)&v95[3] = *(_DWORD *)&v105[3];
    v96 = v23;
    v97 = v18;
    v98 = v19;
    v99 = v20;
    v100 = v24;
    v101 = v22;
    return sub_1AD441684((uint64_t)v69);
  }
}

uint64_t sub_1AD43BD64@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1AD43B49C(a1, a2);
}

uint64_t sub_1AD43BD78(_QWORD *a1)
{
  return sub_1AD43AF4C(a1);
}

uint64_t sub_1AD43BD8C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AD43BDC0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD43BE10())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_1AD43BE4C@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v21[2];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  swift_beginAccess();
  v3 = v1[10];
  v4 = v1[12];
  v29 = v1[11];
  v5 = v29;
  v30 = v4;
  v6 = v1[12];
  v31 = v1[13];
  v7 = v1[7];
  v9 = v1[5];
  v24 = v1[6];
  v8 = v24;
  v25 = v7;
  v10 = v1[7];
  v26 = v1[8];
  v11 = v1[8];
  v12 = v1[10];
  v27 = v1[9];
  v13 = v27;
  v28 = v12;
  v14 = v1[3];
  v21[0] = v1[2];
  v21[1] = v14;
  v15 = v1[5];
  v17 = v1[2];
  v16 = v1[3];
  v22 = v1[4];
  v18 = v22;
  v23 = v15;
  a1[8] = v3;
  a1[9] = v5;
  v19 = v1[13];
  a1[10] = v6;
  a1[11] = v19;
  a1[4] = v8;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v13;
  *a1 = v17;
  a1[1] = v16;
  a1[2] = v18;
  a1[3] = v9;
  return sub_1AD00F844((uint64_t)v21);
}

uint64_t sub_1AD43BF00(_OWORD *a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[12];

  swift_beginAccess();
  v3 = v1[10];
  v4 = v1[12];
  v5 = v1[13];
  v17[9] = v1[11];
  v17[10] = v4;
  v17[11] = v5;
  v6 = v1[7];
  v17[4] = v1[6];
  v17[5] = v6;
  v7 = v1[9];
  v17[6] = v1[8];
  v17[7] = v7;
  v17[8] = v3;
  v8 = v1[3];
  v17[0] = v1[2];
  v17[1] = v8;
  v9 = v1[5];
  v17[2] = v1[4];
  v17[3] = v9;
  v10 = a1[9];
  v1[10] = a1[8];
  v1[11] = v10;
  v11 = a1[11];
  v1[12] = a1[10];
  v1[13] = v11;
  v12 = a1[5];
  v1[6] = a1[4];
  v1[7] = v12;
  v13 = a1[7];
  v1[8] = a1[6];
  v1[9] = v13;
  v14 = a1[1];
  v1[2] = *a1;
  v1[3] = v14;
  v15 = a1[3];
  v1[4] = a1[2];
  v1[5] = v15;
  return sub_1AD441684((uint64_t)v17);
}

uint64_t (*sub_1AD43BFB0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

__n128 sub_1AD43BFEC(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 1;
  v3 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v2 + 160) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v2 + 176) = v3;
  v4 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v2 + 192) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v2 + 208) = v4;
  v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v2 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v2 + 112) = v5;
  v6 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v2 + 128) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v2 + 144) = v6;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 48) = v7;
  result = *(__n128 *)(a1 + 32);
  v9 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(v2 + 64) = result;
  *(_OWORD *)(v2 + 80) = v9;
  return result;
}

uint64_t sub_1AD43C054(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  v2 = a1[9];
  *(_OWORD *)(v1 + 160) = a1[8];
  *(_OWORD *)(v1 + 176) = v2;
  v3 = a1[11];
  *(_OWORD *)(v1 + 192) = a1[10];
  *(_OWORD *)(v1 + 208) = v3;
  v4 = a1[5];
  *(_OWORD *)(v1 + 96) = a1[4];
  *(_OWORD *)(v1 + 112) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 128) = a1[6];
  *(_OWORD *)(v1 + 144) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 32) = *a1;
  *(_OWORD *)(v1 + 48) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 64) = a1[2];
  *(_OWORD *)(v1 + 80) = v7;
  return v1;
}

uint64_t sub_1AD43C098(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_BYTE *)(v6 + 24) = 1;
  v7 = a1[9];
  *(_OWORD *)(v6 + 160) = a1[8];
  *(_OWORD *)(v6 + 176) = v7;
  v8 = a1[11];
  *(_OWORD *)(v6 + 192) = a1[10];
  *(_OWORD *)(v6 + 208) = v8;
  v9 = a1[5];
  *(_OWORD *)(v6 + 96) = a1[4];
  *(_OWORD *)(v6 + 112) = v9;
  v10 = a1[7];
  *(_OWORD *)(v6 + 128) = a1[6];
  *(_OWORD *)(v6 + 144) = v10;
  v11 = a1[1];
  *(_OWORD *)(v6 + 32) = *a1;
  *(_OWORD *)(v6 + 48) = v11;
  v12 = a1[3];
  *(_OWORD *)(v6 + 64) = a1[2];
  *(_OWORD *)(v6 + 80) = v12;
  swift_beginAccess();
  *(_QWORD *)(v6 + 16) = a2;
  *(_BYTE *)(v6 + 24) = a3 & 1;
  return v6;
}

uint64_t sub_1AD43C14C(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 1;
  v6 = a1[9];
  *(_OWORD *)(v3 + 160) = a1[8];
  *(_OWORD *)(v3 + 176) = v6;
  v7 = a1[11];
  *(_OWORD *)(v3 + 192) = a1[10];
  *(_OWORD *)(v3 + 208) = v7;
  v8 = a1[5];
  *(_OWORD *)(v3 + 96) = a1[4];
  *(_OWORD *)(v3 + 112) = v8;
  v9 = a1[7];
  *(_OWORD *)(v3 + 128) = a1[6];
  *(_OWORD *)(v3 + 144) = v9;
  v10 = a1[1];
  *(_OWORD *)(v3 + 32) = *a1;
  *(_OWORD *)(v3 + 48) = v10;
  v11 = a1[3];
  *(_OWORD *)(v3 + 64) = a1[2];
  *(_OWORD *)(v3 + 80) = v11;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = a2;
  *(_BYTE *)(v3 + 24) = a3 & 1;
  return v3;
}

uint64_t sub_1AD43C1E0()
{
  return sub_1AD0CFC90();
}

uint64_t sub_1AD43C1F4()
{
  return sub_1AD0CFC90();
}

uint64_t sub_1AD43C208()
{
  return sub_1AD0CFC90();
}

uint64_t sub_1AD43C21C()
{
  return sub_1AD0CFC90();
}

uint64_t sub_1AD43C230(__CVBuffer *a1)
{
  uint64_t v1;
  _BYTE *BaseAddress;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  CVPixelBufferLockBaseAddress(a1, 1uLL);
  BaseAddress = CVPixelBufferGetBaseAddress(a1);
  if (BaseAddress)
  {
    v4 = BaseAddress;
    swift_beginAccess();
    v5 = sub_1AD3DB9F0(v4, *(_QWORD *)(v1 + 112));
    v7 = v6;
    CVPixelBufferUnlockBaseAddress(a1, 1uLL);
    sub_1AD63AFC4();
    return sub_1AD00412C(v5, v7);
  }
  else
  {
    sub_1AD00F938();
    swift_allocError();
    *(_WORD *)v9 = 257;
    *(_QWORD *)(v9 + 8) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1AD43C31C(__CVBuffer *a1)
{
  uint64_t v1;
  _BYTE *BaseAddress;
  _BYTE *v4;
  uint64_t v5;

  CVPixelBufferLockBaseAddress(a1, 1uLL);
  BaseAddress = CVPixelBufferGetBaseAddress(a1);
  if (BaseAddress)
  {
    v4 = BaseAddress;
    swift_beginAccess();
    v1 = sub_1AD3DB9F0(v4, *(_QWORD *)(v1 + 112));
    CVPixelBufferUnlockBaseAddress(a1, 1uLL);
  }
  else
  {
    sub_1AD00F938();
    swift_allocError();
    *(_WORD *)v5 = 257;
    *(_QWORD *)(v5 + 8) = 0;
    swift_willThrow();
  }
  return v1;
}

_OWORD *sub_1AD43C3DC()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[12];

  v1 = v0[11];
  v8[8] = v0[10];
  v8[9] = v1;
  v2 = v0[13];
  v8[10] = v0[12];
  v8[11] = v2;
  v3 = v0[7];
  v8[4] = v0[6];
  v8[5] = v3;
  v4 = v0[9];
  v8[6] = v0[8];
  v8[7] = v4;
  v5 = v0[3];
  v8[0] = v0[2];
  v8[1] = v5;
  v6 = v0[5];
  v8[2] = v0[4];
  v8[3] = v6;
  sub_1AD441684((uint64_t)v8);
  return v0;
}

uint64_t sub_1AD43C430()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[12];

  v1 = v0[11];
  v8[8] = v0[10];
  v8[9] = v1;
  v2 = v0[13];
  v8[10] = v0[12];
  v8[11] = v2;
  v3 = v0[7];
  v8[4] = v0[6];
  v8[5] = v3;
  v4 = v0[9];
  v8[6] = v0[8];
  v8[7] = v4;
  v5 = v0[3];
  v8[0] = v0[2];
  v8[1] = v5;
  v6 = v0[5];
  v8[2] = v0[4];
  v8[3] = v6;
  sub_1AD441684((uint64_t)v8);
  return swift_deallocClassInstance();
}

__n128 sub_1AD43C490@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = 1;
  v5 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v4 + 176) = v5;
  v6 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v4 + 208) = v6;
  v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v4 + 112) = v7;
  v8 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v4 + 144) = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 48) = v9;
  result = *(__n128 *)(a1 + 32);
  v11 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(v4 + 64) = result;
  *(_OWORD *)(v4 + 80) = v11;
  *a2 = v4;
  return result;
}

uint64_t sub_1AD43C508()
{
  return sub_1AD0CFC90();
}

uint64_t sub_1AD43C51C(__CVBuffer *a1)
{
  return sub_1AD43C230(a1);
}

uint64_t sub_1AD43C53C(__CVBuffer *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE *BaseAddress;
  _BYTE *v6;
  uint64_t v7;

  v4 = *v1;
  CVPixelBufferLockBaseAddress(a1, 1uLL);
  BaseAddress = CVPixelBufferGetBaseAddress(a1);
  if (BaseAddress)
  {
    v6 = BaseAddress;
    swift_beginAccess();
    v2 = sub_1AD3DB9F0(v6, *(_QWORD *)(v4 + 112));
    CVPixelBufferUnlockBaseAddress(a1, 1uLL);
  }
  else
  {
    sub_1AD00F938();
    swift_allocError();
    *(_WORD *)v7 = 257;
    *(_QWORD *)(v7 + 8) = 0;
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1AD43C608@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v21[2];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  swift_beginAccess();
  v3 = v1[9];
  v4 = v1[11];
  v29 = v1[10];
  v5 = v29;
  v30 = v4;
  v6 = v1[11];
  v31 = v1[12];
  v7 = v1[6];
  v9 = v1[4];
  v24 = v1[5];
  v8 = v24;
  v25 = v7;
  v10 = v1[6];
  v26 = v1[7];
  v11 = v1[7];
  v12 = v1[9];
  v27 = v1[8];
  v13 = v27;
  v28 = v12;
  v14 = v1[2];
  v21[0] = v1[1];
  v21[1] = v14;
  v15 = v1[4];
  v17 = v1[1];
  v16 = v1[2];
  v22 = v1[3];
  v18 = v22;
  v23 = v15;
  a1[8] = v3;
  a1[9] = v5;
  v19 = v1[12];
  a1[10] = v6;
  a1[11] = v19;
  a1[4] = v8;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v13;
  *a1 = v17;
  a1[1] = v16;
  a1[2] = v18;
  a1[3] = v9;
  return sub_1AD00F844((uint64_t)v21);
}

uint64_t sub_1AD43C6BC(_OWORD *a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[12];

  swift_beginAccess();
  v3 = v1[9];
  v4 = v1[11];
  v5 = v1[12];
  v17[9] = v1[10];
  v17[10] = v4;
  v17[11] = v5;
  v6 = v1[6];
  v17[4] = v1[5];
  v17[5] = v6;
  v7 = v1[8];
  v17[6] = v1[7];
  v17[7] = v7;
  v17[8] = v3;
  v8 = v1[2];
  v17[0] = v1[1];
  v17[1] = v8;
  v9 = v1[4];
  v17[2] = v1[3];
  v17[3] = v9;
  v10 = a1[9];
  v1[9] = a1[8];
  v1[10] = v10;
  v11 = a1[11];
  v1[11] = a1[10];
  v1[12] = v11;
  v12 = a1[5];
  v1[5] = a1[4];
  v1[6] = v12;
  v13 = a1[7];
  v1[7] = a1[6];
  v1[8] = v13;
  v14 = a1[1];
  v1[1] = *a1;
  v1[2] = v14;
  v15 = a1[3];
  v1[3] = a1[2];
  v1[4] = v15;
  return sub_1AD441684((uint64_t)v17);
}

uint64_t (*sub_1AD43C76C())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

_OWORD *sub_1AD43C7AC(_OWORD *a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v2 = a1[9];
  v1[9] = a1[8];
  v1[10] = v2;
  v3 = a1[11];
  v1[11] = a1[10];
  v1[12] = v3;
  v4 = a1[5];
  v1[5] = a1[4];
  v1[6] = v4;
  v5 = a1[7];
  v1[7] = a1[6];
  v1[8] = v5;
  v6 = a1[1];
  v1[1] = *a1;
  v1[2] = v6;
  v7 = a1[3];
  v1[3] = a1[2];
  v1[4] = v7;
  return v1;
}

void sub_1AD43C7E4(_DWORD *a1@<X0>, uint64_t a2@<X1>, size_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X6>, _QWORD **a8@<X7>, CVPixelBufferRef *a9@<X8>, _QWORD **a10, _QWORD **a11, uint64_t a12, _BYTE *a13, _QWORD **a14, _BYTE *a15, _QWORD *a16, char a17)
{
  size_t v17;
  uint64_t v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD **v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int16 v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  size_t v54;
  size_t v55;
  size_t v56;
  _QWORD *v57;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v59;
  char v60;
  _QWORD *v61;
  char v62;
  _QWORD *v63;
  char v64;
  CVPixelBufferRef v65;
  uint64_t v66;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  size_t v78;
  uint64_t v79;
  OSType v81;
  uint64_t v82;
  CVPixelBufferRef v84[3];

  v84[1] = *(CVPixelBufferRef *)MEMORY[0x1E0C80C00];
  if (!a1)
  {
    sub_1AD63BB7C();
    if (qword_1ED2DAD30 != -1)
      goto LABEL_80;
    goto LABEL_43;
  }
  v17 = a3;
  if ((a3 & 0x8000000000000000) != 0)
    goto LABEL_79;
  if (!a3)
  {
LABEL_44:
    if ((*a15 & 1) == 0 || *a13 != 1)
      goto LABEL_59;
    v48 = a7[2];
    if (v48)
    {
      v49 = a7[4];
      if (v49 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (v49 <= 0x7FFFFFFF)
        {
          v50 = a4[2];
          if (v50)
          {
            v51 = a4[4];
            if ((v51 & 0x8000000000000000) != 0 || HIDWORD(v51))
              goto LABEL_89;
            if (v48 >= 2)
            {
              v52 = a7[5];
              if (v52 >= (uint64_t)0xFFFFFFFF80000000)
              {
                if (v52 <= 0x7FFFFFFF)
                {
                  if (v50 >= 2)
                  {
                    v53 = a4[5];
                    if ((v53 & 0x8000000000000000) == 0 && !HIDWORD(v53))
                    {
                      *a1 = bswap32(v49);
                      a1[1] = bswap32(v51);
                      a1[2] = bswap32(v52);
                      a1[3] = bswap32(v53);
LABEL_59:
                      v84[0] = 0;
                      swift_beginAccess();
                      v54 = a16[2];
                      v55 = a16[3];
                      v81 = sub_1AD0027F8(*(_QWORD *)&a420v_0[8 * a17], 0xE400000000000000);
                      v56 = a16[12];
                      v57 = *a14;
                      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      *a14 = v57;
                      v78 = v55;
                      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                        v57 = sub_1AD3CB8F4(0, v57[2], 0, v57);
                      *a14 = v57;
                      v59 = *a10;
                      swift_bridgeObjectRetain();
                      v60 = swift_isUniquelyReferenced_nonNull_native();
                      *a10 = v59;
                      if ((v60 & 1) == 0)
                        v59 = sub_1AD3CB7E8(0, v59[2], 0, v59);
                      *a10 = v59;
                      v61 = *a11;
                      swift_bridgeObjectRetain();
                      v62 = swift_isUniquelyReferenced_nonNull_native();
                      *a11 = v61;
                      if ((v62 & 1) == 0)
                        v61 = sub_1AD3CB7E8(0, v61[2], 0, v61);
                      *a11 = v61;
                      v63 = *a8;
                      swift_bridgeObjectRetain();
                      v64 = swift_isUniquelyReferenced_nonNull_native();
                      *a8 = v63;
                      if ((v64 & 1) == 0)
                        v63 = sub_1AD3CB7E8(0, v63[2], 0, v63);
                      *a8 = v63;
                      swift_bridgeObjectRetain();
                      CVPixelBufferCreateWithPlanarBytes(0, v54, v78, v81, a1, v56, v17, (void **)v57 + 4, v59 + 4, v61 + 4, v63 + 4, 0, 0, 0, v84);
                      v65 = v84[0];
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if (v65)
                      {
                        *a9 = v65;
                      }
                      else
                      {
                        sub_1AD00F938();
                        swift_allocError();
                        *(_WORD *)v66 = 256;
                        *(_QWORD *)(v66 + 8) = 0;
                        swift_willThrow();

                      }
                      return;
                    }
LABEL_89:
                    sub_1AD63BE1C();
                    __break(1u);
                    return;
                  }
LABEL_88:
                  __break(1u);
                }
LABEL_87:
                __break(1u);
                goto LABEL_88;
              }
LABEL_86:
              __break(1u);
              goto LABEL_87;
            }
LABEL_85:
            __break(1u);
            goto LABEL_86;
          }
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_83;
  }
  v19 = 0;
  v73 = a5 + 32;
  v74 = a4 + 4;
  v72 = a6 + 32;
  v79 = a4[2];
  v77 = *(_QWORD *)(a5 + 16);
  v76 = *(_QWORD *)(a6 + 16);
  v75 = a7[2];
  v70 = a2 - (_QWORD)a1;
  v71 = a7 + 4;
  while (v17 != v19)
  {
    if (v79 == v19)
      goto LABEL_73;
    if (v77 == v19)
      goto LABEL_74;
    if (v76 == v19)
      goto LABEL_75;
    if (v75 == v19)
      goto LABEL_76;
    v20 = v17;
    v21 = v74[v19];
    if (v21 < 0)
      goto LABEL_69;
    v22 = *(_QWORD *)(v73 + 8 * v19);
    if (v22 < 0)
      goto LABEL_69;
    v23 = a14;
    v24 = *(_QWORD *)(v72 + 8 * v19);
    if (v24 < 0)
      goto LABEL_69;
    v82 = v71[v19];
    v25 = *a8;
    v26 = swift_isUniquelyReferenced_nonNull_native();
    *a8 = v25;
    if ((v26 & 1) == 0)
    {
      v25 = sub_1AD3CB7E8(0, v25[2] + 1, 1, v25);
      *a8 = v25;
    }
    v28 = v25[2];
    v27 = v25[3];
    if (v28 >= v27 >> 1)
      v25 = sub_1AD3CB7E8((_QWORD *)(v27 > 1), v28 + 1, 1, v25);
    v25[2] = v28 + 1;
    v25[v28 + 4] = v21;
    *a8 = v25;
    v29 = *a10;
    v30 = swift_isUniquelyReferenced_nonNull_native();
    *a10 = v29;
    if ((v30 & 1) == 0)
    {
      v29 = sub_1AD3CB7E8(0, v29[2] + 1, 1, v29);
      *a10 = v29;
    }
    v32 = v29[2];
    v31 = v29[3];
    if (v32 >= v31 >> 1)
      v29 = sub_1AD3CB7E8((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    v29[2] = v32 + 1;
    v29[v32 + 4] = v22;
    *a10 = v29;
    v33 = *a11;
    v34 = swift_isUniquelyReferenced_nonNull_native();
    *a11 = v33;
    if ((v34 & 1) == 0)
    {
      v33 = sub_1AD3CB7E8(0, v33[2] + 1, 1, v33);
      *a11 = v33;
    }
    v36 = v33[2];
    v35 = v33[3];
    if (v36 >= v35 >> 1)
      v33 = sub_1AD3CB7E8((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    v33[2] = v36 + 1;
    v33[v36 + 4] = v24;
    *a11 = v33;
    if (v82 < 0)
    {
LABEL_69:
      sub_1AD00F938();
      swift_allocError();
      v47 = 2560;
      goto LABEL_70;
    }
    v37 = v24 * v21;
    if ((unsigned __int128)(v24 * (__int128)v21) >> 64 != (v24 * v21) >> 63)
      goto LABEL_77;
    v38 = __OFADD__(v82, v37);
    v39 = v82 + v37;
    if (v38)
      goto LABEL_78;
    if (v70 < v39)
      goto LABEL_69;
    a14 = v23;
    if ((*(_BYTE *)(a12 + 16) & 1) == 0)
    {
      v40 = (unint64_t *)a12;
      if (!v19)
        goto LABEL_33;
      if (v19 == 1)
      {
        v40 = (unint64_t *)(a12 + 8);
LABEL_33:
        v41 = *v40;
        if (v82 == (int)v41 && v21 == HIDWORD(v41))
          goto LABEL_36;
      }
    }
    *a13 = 1;
LABEL_36:
    v42 = *v23;
    v43 = swift_isUniquelyReferenced_nonNull_native();
    *v23 = v42;
    if ((v43 & 1) == 0)
    {
      v42 = sub_1AD3CB8F4(0, v42[2] + 1, 1, v42);
      *v23 = v42;
    }
    v17 = v20;
    v45 = v42[2];
    v44 = v42[3];
    if (v45 >= v44 >> 1)
      v42 = sub_1AD3CB8F4((_QWORD *)(v44 > 1), v45 + 1, 1, v42);
    ++v19;
    v42[2] = v45 + 1;
    v42[v45 + 4] = (char *)a1 + v82;
    *v23 = v42;
    if (v20 == v19)
      goto LABEL_44;
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  swift_once();
LABEL_43:
  sub_1AD63B48C();
  sub_1AD00F938();
  swift_allocError();
  v47 = 1792;
LABEL_70:
  *(_WORD *)v46 = v47;
  *(_QWORD *)(v46 + 8) = 0;
  swift_willThrow();
}

_OWORD *sub_1AD43D024()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[12];

  v1 = v0[10];
  v8[8] = v0[9];
  v8[9] = v1;
  v2 = v0[12];
  v8[10] = v0[11];
  v8[11] = v2;
  v3 = v0[6];
  v8[4] = v0[5];
  v8[5] = v3;
  v4 = v0[8];
  v8[6] = v0[7];
  v8[7] = v4;
  v5 = v0[2];
  v8[0] = v0[1];
  v8[1] = v5;
  v6 = v0[4];
  v8[2] = v0[3];
  v8[3] = v6;
  sub_1AD441684((uint64_t)v8);
  return v0;
}

uint64_t sub_1AD43D078()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[12];

  v1 = v0[10];
  v8[8] = v0[9];
  v8[9] = v1;
  v2 = v0[12];
  v8[10] = v0[11];
  v8[11] = v2;
  v3 = v0[6];
  v8[4] = v0[5];
  v8[5] = v3;
  v4 = v0[8];
  v8[6] = v0[7];
  v8[7] = v4;
  v5 = v0[2];
  v8[0] = v0[1];
  v8[1] = v5;
  v6 = v0[4];
  v8[2] = v0[3];
  v8[3] = v6;
  sub_1AD441684((uint64_t)v8);
  return swift_deallocClassInstance();
}

uint64_t sub_1AD43D0D8()
{
  return swift_slowAlloc();
}

void sub_1AD43D0E0()
{
  JUMPOUT(0x1AF44BED4);
}

uint64_t sub_1AD43D0EC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1AD43D120(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1AD43D140(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AD43D160(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1AD43D1D0(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1AD63BC60();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1AD43D1D0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1AD43D2A0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1AD3551A8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1AD3551A8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1AD43D2A0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1AD63BC6C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1AD43D458(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1AD63BDB0();
  if (!v8)
  {
    sub_1AD63BE1C();
    __break(1u);
LABEL_17:
    result = sub_1AD63BE64();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1AD43D458(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1AD43D4EC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1AD43D660(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1AD43D660(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1AD43D4EC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1AD414544(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1AD63BD44();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1AD63BE1C();
      __break(1u);
LABEL_10:
      v2 = sub_1AD63B834();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1AD63BE64();
    __break(1u);
LABEL_14:
    result = sub_1AD63BE1C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1AD43D660(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2688);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1AD63BE64();
  __break(1u);
  return result;
}

_BYTE **sub_1AD43D7AC(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_1AD43D7BC(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_1AD63BC60();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

double sub_1AD43D86C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1AD0DFB48(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1AD43FCC0();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1AD002F7C((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1AD43EDEC(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1AD43D95C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1AD0DFC64(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1AD44024C();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1AD63B084();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  sub_1AD43EFC0(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1AD43DA48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1AD0DFB48(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1AD44063C();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1AD00FA24((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_1AD43F260(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1AD43DB40(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA5E0);
  v6 = sub_1AD63BE4C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1AD002F7C(v24, v35);
      }
      else
      {
        sub_1AD3551A8((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1AD63C4AC();
      sub_1AD63B7F8();
      result = sub_1AD63C4F4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1AD002F7C(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1AD43DE3C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC6D0);
  v6 = sub_1AD63BE4C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1AD002F7C((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1AD0E0BB8(v25, (uint64_t)&v38);
      sub_1AD3551A8(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1AD63BCF0();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1AD002F7C(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1AD43E150(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2E08);
  v6 = sub_1AD63BE4C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((a2 & 1) != 0)
    {
      sub_1AD002F7C(v23, v34);
    }
    else
    {
      sub_1AD3551A8((uint64_t)v23, (uint64_t)v34);
      v24 = v22;
    }
    sub_1AD63C4AC();
    type metadata accessor for CFString(0);
    sub_1ACFF9724((unint64_t *)&unk_1ED2E2DC0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1AD647A0C);
    sub_1AD63B15C();
    result = sub_1AD63C4F4();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = (uint64_t)sub_1AD002F7C(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1AD43E470(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  __int128 v40;

  v3 = v2;
  v5 = sub_1AD63B084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC650);
  v39 = a2;
  v10 = sub_1AD63BE4C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v40 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v40 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v21);
      swift_retain();
    }
    sub_1ACFF9724(&qword_1EECD19E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1AD63B6B4();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v19) = v40;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1AD43E808(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC698);
  result = sub_1AD63BE4C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 16 * v19;
      v29 = *(_DWORD *)v28;
      v30 = *(_QWORD *)(v28 + 8);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = MEMORY[0x1AF44B190](*(_QWORD *)(v7 + 40), v27, 4);
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 16 * v16;
      *(_DWORD *)v17 = v29;
      *(_QWORD *)(v17 + 8) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1AD43EAC8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2D78);
  v37 = a2;
  v6 = sub_1AD63BE4C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_1AD00FA24(v25, (uint64_t)v38);
    }
    else
    {
      sub_1AD0CFC4C((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1AD63C4AC();
    sub_1AD63B7F8();
    result = sub_1AD63C4F4();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_1AD00FA24(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_1AD43EDEC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1AD63BCE4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1AD63C4AC();
        swift_bridgeObjectRetain();
        sub_1AD63B7F8();
        v10 = sub_1AD63C4F4();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD43EFC0(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_1AD63B084();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1AD63BCE4();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1ACFF9724(&qword_1EECD19E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1AD63B6B4();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 16 * a1);
            v25 = (_OWORD *)(v23 + 16 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD43F260(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1AD63BCE4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1AD63C4AC();
        swift_bridgeObjectRetain();
        sub_1AD63B7F8();
        v11 = sub_1AD63C4F4();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_1AD43F448(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1AD0DFB48(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_1AD002F7C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1AD43FCC0();
      goto LABEL_7;
    }
    sub_1AD43DB40(v15, a4 & 1);
    v21 = sub_1AD0DFB48(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1AD43FA70(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1AD63C44C();
  __break(1u);
  return result;
}

_OWORD *sub_1AD43F578(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1AD0DFBAC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_1AD002F7C(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1AD43FEA4();
      goto LABEL_7;
    }
    sub_1AD43DE3C(v13, a3 & 1);
    v19 = sub_1AD0DFBAC(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1AD0E0BB8(a2, (uint64_t)v21);
      return sub_1AD43FAD8(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1AD63C44C();
  __break(1u);
  return result;
}

_OWORD *sub_1AD43F6B0(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1AD0DFBDC((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        return sub_1AD002F7C(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1AD440088();
      goto LABEL_7;
    }
    sub_1AD43E150(v12, a3 & 1);
    v18 = sub_1AD0DFBDC((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1AD43FB50(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for CFString(0);
  result = (_OWORD *)sub_1AD63C44C();
  __break(1u);
  return result;
}

uint64_t sub_1AD43F7D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v5 = (_QWORD **)v4;
  v28 = a2;
  v9 = sub_1AD63B084();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_1AD0DFC64(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (uint64_t *)(v21[7] + 16 * v15);
      result = swift_release();
      v24 = v28;
      *v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1AD44024C();
    goto LABEL_7;
  }
  sub_1AD43E470(v18, a4 & 1);
  v25 = sub_1AD0DFC64(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    result = sub_1AD63C44C();
    __break(1u);
    return result;
  }
  v15 = v25;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_1AD43FBB4(v15, (uint64_t)v12, a1, v28, v21);
}

uint64_t sub_1AD43F93C(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1AD0DFB48(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_1(v19);
        return sub_1AD00FA24(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1AD44063C();
      goto LABEL_7;
    }
    sub_1AD43EAC8(v15, a4 & 1);
    v21 = sub_1AD0DFB48(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1AD43FC54(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1AD63C44C();
  __break(1u);
  return result;
}

_OWORD *sub_1AD43FA70(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1AD002F7C(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_1AD43FAD8(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1AD002F7C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

_OWORD *sub_1AD43FB50(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1AD002F7C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1AD43FBB4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_1AD63B084();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_1AD43FC54(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1AD00FA24(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

void *sub_1AD43FCC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA5E0);
  v2 = *v0;
  v3 = sub_1AD63BE40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1AD3551A8(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1AD002F7C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AD43FEA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC6D0);
  v2 = *v0;
  v3 = sub_1AD63BE40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1AD0E0BB8(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1AD3551A8(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1AD002F7C(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1AD440088()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2E08);
  v2 = *v0;
  v3 = sub_1AD63BE40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1AD3551A8(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1AD002F7C(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD44024C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v1 = v0;
  v2 = sub_1AD63B084();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC650);
  v6 = *v0;
  v7 = sub_1AD63BE40();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v26 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v27 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v8 + 48) + v19;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v28 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v20);
    v22(v21, v5, v2);
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v28;
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AD440488()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC698);
  v2 = *v0;
  v3 = sub_1AD63BE40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_DWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_DWORD *)v22 = v20;
    *(_QWORD *)(v22 + 8) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD44063C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2D78);
  v2 = *v0;
  v3 = sub_1AD63BE40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_1AD0CFC4C(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1AD00FA24(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1AD440824(uint64_t a1)
{
  __asm { BR              X13 }
}

void sub_1AD44087C()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int8x16_t *v8;
  unint64_t v9;
  int8x16_t v10;
  unint64_t v11;
  unsigned int *v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;

  v14 = v1;
  LOWORD(v15) = v0;
  BYTE2(v15) = BYTE2(v0);
  v4 = HIDWORD(v0);
  HIBYTE(v15) = BYTE3(v0);
  v5 = v0 >> 40;
  v16 = BYTE4(v0);
  v6 = HIWORD(v0);
  v17 = v5;
  v18 = v6;
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    JUMPOUT(0x1AD440B30);
  }
  if (v3)
  {
    if (v3 >= 8)
    {
      v7 = v3 & 0xFFFFFFFFFFFFFFF8;
      v8 = (int8x16_t *)&v19;
      v9 = v3 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v10 = vrev32q_s8(*v8);
        v8[-1] = vrev32q_s8(v8[-1]);
        *v8 = v10;
        v8 += 2;
        v9 -= 8;
      }
      while (v9);
      if (v7 == v3)
        goto LABEL_10;
    }
    else
    {
      v7 = 0;
    }
    v11 = v3 - v7;
    v12 = (unsigned int *)&v14 + v7;
    do
    {
      *v12 = bswap32(*v12);
      ++v12;
      --v11;
    }
    while (v11);
LABEL_10:
    LOBYTE(v4) = v16;
    LOBYTE(v5) = v17;
    LOBYTE(v6) = v18;
  }
  v13 = v15 | ((unint64_t)v4 << 32) | ((unint64_t)v5 << 40) | ((unint64_t)v6 << 48);
  *v2 = v14;
  v2[1] = v13;
}

uint64_t sub_1AD440B58(int *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int8x16_t *v10;
  unint64_t v11;
  int8x16_t v12;
  unint64_t v13;
  unsigned int *v14;

  result = sub_1AD63AF64();
  v5 = *a1;
  if (a1[1] < (int)v5)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  result = sub_1AD63ADA8();
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v6 = result;
  result = sub_1AD63ADCC();
  v7 = v5 - result;
  if (__OFSUB__(v5, result))
    goto LABEL_15;
  v8 = result;
  result = sub_1AD63ADC0();
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!a2)
    return result;
  if (a2 < 8)
  {
    v9 = 0;
LABEL_11:
    v13 = a2 - v9;
    v14 = (unsigned int *)(v6 + v5 + 4 * v9 - v8);
    do
    {
      *v14 = bswap32(*v14);
      ++v14;
      --v13;
    }
    while (v13);
    return result;
  }
  v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  v10 = (int8x16_t *)(v7 + v6 + 16);
  v11 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v12 = vrev32q_s8(*v10);
    v10[-1] = vrev32q_s8(v10[-1]);
    *v10 = v12;
    v10 += 2;
    v11 -= 8;
  }
  while (v11);
  if (v9 != a2)
    goto LABEL_11;
  return result;
}

void sub_1AD440C50(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD440C88()
{
  uint64_t v1;

  sub_1AD440824((uint64_t)&v1);
  return v1;
}

void sub_1AD440D00(uint64_t a1, uint64_t a2, uint64_t a3, size_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, _QWORD *a8, _QWORD **a9, _QWORD **a10, _QWORD **a11, uint64_t a12, _BYTE *a13, _QWORD **a14, _BYTE *a15, _QWORD *a16, char a17)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  CVPixelBufferRef v32;

  v22 = sub_1AD63ADA8();
  if (!v22)
    goto LABEL_10;
  v23 = v22;
  v24 = sub_1AD63ADCC();
  v25 = a1 - v24;
  if (__OFSUB__(a1, v24))
  {
    __break(1u);
    goto LABEL_9;
  }
  v26 = __OFSUB__(a2, a1);
  v27 = a2 - a1;
  if (v26)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  v28 = sub_1AD63ADC0();
  if (v28 >= v27)
    v29 = v27;
  else
    v29 = v28;
  sub_1AD43C7E4((_DWORD *)(v23 + v25), v23 + v25 + v29, a4, a5, a6, a7, a8, a9, &v32, a10, a11, a12, a13, a14, a15, a16, a17);
}

void sub_1AD440E20(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1AD440EB8@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD **v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  size_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD **v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  char v29;
  _BYTE *v30;
  _QWORD **v31;
  _BYTE *v32;
  uint64_t v33;
  _QWORD **v34;
  _QWORD **v35;

  v28 = v4;
  *(_QWORD *)(v7 - 112) = v1;
  *(_WORD *)(v7 - 104) = a1;
  v8 = HIDWORD(a1);
  *(_BYTE *)(v7 - 102) = BYTE2(a1);
  *(_BYTE *)(v7 - 101) = BYTE3(a1);
  v9 = a1 >> 40;
  v10 = HIWORD(a1);
  *(_BYTE *)(v7 - 100) = v8;
  *(_BYTE *)(v7 - 99) = v9;
  *(_BYTE *)(v7 - 98) = v10;
  v11 = v2;
  v12 = v7 - 112 + v10;
  v13 = *(_QWORD **)(v7 - 152);
  swift_bridgeObjectRetain();
  swift_retain_n();
  v14 = *(_QWORD **)(v7 - 128);
  swift_bridgeObjectRetain();
  v15 = *(_QWORD *)(v7 - 136);
  swift_bridgeObjectRetain();
  v16 = *(_QWORD *)(v7 - 144);
  swift_bridgeObjectRetain();
  sub_1AD43C7E4((_DWORD *)(v7 - 112), v12, v6, v14, v15, v16, v13, v35, (CVPixelBufferRef *)(v7 - 120), v11, v34, v33, v32, v31, v30, v5, v29);
  if (v3)
  {
    v17 = *(_QWORD *)(v7 - 112);
    v18 = *(unsigned int *)(v7 - 104);
    v19 = *(unsigned __int8 *)(v7 - 100);
    v20 = *(unsigned __int8 *)(v7 - 99);
    v21 = *(unsigned __int8 *)(v7 - 98);
    swift_release();
    *v4 = v17;
    v4[1] = v18 | (v19 << 32) | (v20 << 40) | (v21 << 48);
  }
  else
  {
    v19 = *(_QWORD *)(v7 - 120);
    v22 = *(_QWORD *)(v7 - 112);
    v23 = *(unsigned int *)(v7 - 104);
    v24 = *(unsigned __int8 *)(v7 - 100);
    v25 = *(unsigned __int8 *)(v7 - 99);
    v26 = *(unsigned __int8 *)(v7 - 98);
    swift_release();
    *v28 = v22;
    v28[1] = v23 | (v24 << 32) | (v25 << 40) | (v26 << 48);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_1AD441558()
{
  unint64_t result;

  result = qword_1EECDC600;
  if (!qword_1EECDC600)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6858FC, &type metadata for PixelBufferEncodingConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC600);
  }
  return result;
}

unint64_t sub_1AD44159C()
{
  unint64_t result;

  result = qword_1EECDC608;
  if (!qword_1EECDC608)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for BlastDoorPixelBufferFormats, &type metadata for BlastDoorPixelBufferFormats);
    atomic_store(result, (unint64_t *)&qword_1EECDC608);
  }
  return result;
}

unint64_t sub_1AD4415E0()
{
  unint64_t result;

  result = qword_1EECDC620;
  if (!qword_1EECDC620)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for BlastDoorPixelBufferFormats, &type metadata for BlastDoorPixelBufferFormats);
    atomic_store(result, (unint64_t *)&qword_1EECDC620);
  }
  return result;
}

uint64_t sub_1AD441624(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EECDC610);
    v8 = a2;
    result = MEMORY[0x1AF44BDF0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD441684(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 176);
  v3 = *(_QWORD *)(a1 + 184);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD004118(v2, v3);
  return a1;
}

unint64_t sub_1AD4416F0()
{
  unint64_t result;

  result = qword_1EECDC628;
  if (!qword_1EECDC628)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for BlastDoorPixelBufferFormats, &type metadata for BlastDoorPixelBufferFormats);
    atomic_store(result, (unint64_t *)&qword_1EECDC628);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BlastDoorPixelBufferFormats(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD441780 + 4 * byte_1AD6855B7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD4417B4 + 4 * byte_1AD6855B2[v4]))();
}

uint64_t sub_1AD4417B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD4417BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD4417C4);
  return result;
}

uint64_t sub_1AD4417D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD4417D8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD4417DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD4417E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlastDoorPixelBufferFormats()
{
  return &type metadata for BlastDoorPixelBufferFormats;
}

uint64_t destroy for PixelBufferEncodingConfiguration(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 184);
  if (v3 >> 60 != 15)
    return sub_1AD00412C(*(_QWORD *)(a1 + 176), v3);
  return result;
}

uint64_t initializeWithCopy for PixelBufferEncodingConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v3 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v3;
  v4 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v4;
  v5 = (uint64_t *)(a2 + 176);
  v6 = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)v5;
  }
  else
  {
    v7 = *v5;
    sub_1AD0040A0(*v5, v6);
    *(_QWORD *)(a1 + 176) = v7;
    *(_QWORD *)(a1 + 184) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for PixelBufferEncodingConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v9 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v9;
  v10 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v10;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(a2 + 176);
  v12 = *(_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 184) >> 60 != 15)
  {
    if (v12 >> 60 != 15)
    {
      v14 = *v11;
      sub_1AD0040A0(*v11, v12);
      v15 = *(_QWORD *)(a1 + 176);
      v16 = *(_QWORD *)(a1 + 184);
      *(_QWORD *)(a1 + 176) = v14;
      *(_QWORD *)(a1 + 184) = v12;
      sub_1AD00412C(v15, v16);
      return a1;
    }
    sub_1AD007EC0(a1 + 176);
    goto LABEL_6;
  }
  if (v12 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 176) = *(_OWORD *)v11;
    return a1;
  }
  v13 = *v11;
  sub_1AD0040A0(*v11, v12);
  *(_QWORD *)(a1 + 176) = v13;
  *(_QWORD *)(a1 + 184) = v12;
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for PixelBufferEncodingConfiguration(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a2 + 176);
  v5 = *(_QWORD *)(a1 + 184);
  if (v5 >> 60 != 15)
  {
    v6 = *(_QWORD *)(a2 + 184);
    if (v6 >> 60 != 15)
    {
      v7 = *(_QWORD *)(a1 + 176);
      *(_QWORD *)(a1 + 176) = *v4;
      *(_QWORD *)(a1 + 184) = v6;
      sub_1AD00412C(v7, v5);
      return a1;
    }
    sub_1AD007EC0(a1 + 176);
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for PixelBufferEncodingConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 192))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 144);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PixelBufferEncodingConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 0;
    if (a2)
      *(_QWORD *)(result + 144) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferEncodingConfiguration()
{
  return &type metadata for PixelBufferEncodingConfiguration;
}

uint64_t type metadata accessor for PixelBufferEncoder()
{
  return objc_opt_self();
}

uint64_t sub_1AD441DAC()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD441DB8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1AD441DC0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 104))(a1, a2, a3 & 1);
}

uint64_t type metadata accessor for PixelBufferDecoder()
{
  return objc_opt_self();
}

uint64_t sub_1AD441DEC()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD441DF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for PixelBufferEncodingConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1AD441E4C + 4 * byte_1AD6855C1[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1AD441E80 + 4 * byte_1AD6855BC[v4]))();
}

uint64_t sub_1AD441E80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD441E88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD441E90);
  return result;
}

uint64_t sub_1AD441E9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD441EA4);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1AD441EA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD441EB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferEncodingConfiguration.CodingKeys()
{
  return &type metadata for PixelBufferEncodingConfiguration.CodingKeys;
}

unint64_t sub_1AD441ED0()
{
  unint64_t result;

  result = qword_1EECDC630;
  if (!qword_1EECDC630)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6858D4, &type metadata for PixelBufferEncodingConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC630);
  }
  return result;
}

unint64_t sub_1AD441F18()
{
  unint64_t result;

  result = qword_1EECDC638;
  if (!qword_1EECDC638)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD685844, &type metadata for PixelBufferEncodingConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC638);
  }
  return result;
}

unint64_t sub_1AD441F60()
{
  unint64_t result;

  result = qword_1EECDC640;
  if (!qword_1EECDC640)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD68586C, &type metadata for PixelBufferEncodingConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC640);
  }
  return result;
}

unint64_t sub_1AD441FA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t result;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC6C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC6C8);
    v7 = (_QWORD *)sub_1AD63BE58();
    v8 = &v5[*(int *)(v2 + 48)];
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1ACFF64C0(v9, (uint64_t)v5, &qword_1EECDC6C0);
      v11 = *(_QWORD *)v5;
      v12 = v5[8];
      result = sub_1AD0DFD20(*(_QWORD *)v5, v12);
      if ((v14 & 1) != 0)
        break;
      v15 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v16 = v7[6] + 16 * result;
      *(_QWORD *)v16 = v11;
      *(_BYTE *)(v16 + 8) = v12;
      v17 = v7[7];
      v18 = sub_1AD63AF28();
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v15, v8, v18);
      v19 = v7[2];
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
        goto LABEL_10;
      v7[2] = v21;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1AD44211C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A9D20 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A9D40 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AD6A9D60 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AD6A9D80 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AD6A9DA0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AD6A9DC0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A9DE0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD6A9E00 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD6A9E20 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AD6A9E40 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD6A9E60 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AD6A9E80 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD6A9EA0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD6A9EC0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD6A9EE0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AD6A9F00 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001AD6A9F20 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD6A9F50)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 17;
    else
      return 18;
  }
}

unint64_t sub_1AD442758()
{
  unint64_t result;

  result = qword_1EECDC658;
  if (!qword_1EECDC658)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for BlastDoorPixelBufferFormats, &type metadata for BlastDoorPixelBufferFormats);
    atomic_store(result, (unint64_t *)&qword_1EECDC658);
  }
  return result;
}

uint64_t sub_1AD4427A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD4427D4(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[1].n128_i64[0];
  v6 = v1[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD442828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t type metadata accessor for IDSHomeKitInvitation(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDC6E0);
}

__n128 sub_1AD442888(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 *v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  v6 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 32));
  swift_release();
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v3;
  v6[1].n128_u8[8] = v4;
  v6[1].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD4428EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 48));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD285EE4(v5, v6);
}

__n128 sub_1AD44293C(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  unint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 48));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_u64[1];
  swift_release();
  sub_1AD009794(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD4429A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 52));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 sub_1AD4429F0(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 52));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD442A54@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 64));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 sub_1AD442AA4(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 64));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD442B08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 68));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = (_BYTE)v3;
  return swift_retain();
}

__n128 sub_1AD442B54(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 *v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  v6 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 68));
  swift_release();
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v3;
  v6[1].n128_u8[8] = v4;
  v6[1].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD442BB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 72));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = (_BYTE)v3;
  return swift_retain();
}

__n128 sub_1AD442C04(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 *v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  v6 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 72));
  swift_release();
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v3;
  v6[1].n128_u8[8] = v4;
  v6[1].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD442C68@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 76));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD285EE4(v5, v6);
}

__n128 sub_1AD442CB8(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  unint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 76));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_u64[1];
  swift_release();
  sub_1AD009794(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD442D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD442D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 32);
  if ((*(_BYTE *)(v1 + 25) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD442E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 48);
  if (*(_QWORD *)(v1 + 24) >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    sub_1AD00408C(v2, *(_QWORD *)(v1 + 24));
    return v2;
  }
  return result;
}

uint64_t sub_1AD442EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 52);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD442F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 64);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD442FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 68);
  if ((*(_BYTE *)(v1 + 25) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD443034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 72);
  if ((*(_BYTE *)(v1 + 25) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD4430AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 76);
  if (*(_QWORD *)(v1 + 24) >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    sub_1AD00408C(v2, *(_QWORD *)(v1 + 24));
    return v2;
  }
  return result;
}

uint64_t sub_1AD443140@<X0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2748);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2D88);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648160;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AD685A10;
  *(_QWORD *)(v3 + 32) = sub_1AD44DFF0;
  *(_QWORD *)(v3 + 40) = v4;
  v5 = sub_1AD2817DC(v3);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2B18);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD44E01C;
  *(_QWORD *)(inited + 40) = v6;
  sub_1AD280950((_QWORD *)inited, a1);
  v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AD648160;
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1AD648160;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1AD685A10;
  *(_QWORD *)(v8 + 32) = sub_1AD44E04C;
  *(_QWORD *)(v8 + 40) = v9;
  v10 = sub_1AD2817DC(v8);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  swift_setDeallocating();
  swift_arrayDestroy();
  *(_QWORD *)(v7 + 32) = sub_1AD44E050;
  *(_QWORD *)(v7 + 40) = v11;
  sub_1AD280950((_QWORD *)v7, a1 + 32);
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_1AD648160;
  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AD648160;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1AD685A20;
  *(_QWORD *)(v13 + 32) = sub_1AD44E04C;
  *(_QWORD *)(v13 + 40) = v14;
  v15 = sub_1AD2817DC(v13);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  swift_setDeallocating();
  swift_arrayDestroy();
  *(_QWORD *)(v12 + 32) = sub_1AD44E050;
  *(_QWORD *)(v12 + 40) = v16;
  return sub_1AD280950((_QWORD *)v12, a1 + 64);
}

uint64_t sub_1AD4433F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 25);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 25) = v5;
  return swift_retain();
}

__n128 sub_1AD443418(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  swift_release();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u8[8] = v4;
  v1[1].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD44346C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 56);
  v5 = *(_BYTE *)(v1 + 57);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 25) = v5;
  return swift_retain();
}

__n128 sub_1AD443490(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  swift_release();
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u8[8] = v4;
  v1[3].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD4434E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  v4 = *(_BYTE *)(v1 + 88);
  v5 = *(_BYTE *)(v1 + 89);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 25) = v5;
  return swift_retain();
}

__n128 sub_1AD443508(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  swift_release();
  result = *a1;
  v1[4] = *a1;
  v1[5].n128_u64[0] = v3;
  v1[5].n128_u8[8] = v4;
  v1[5].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD44355C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 25) & 1) == 0)
    return *(_QWORD *)(v0 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD4435C4()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 57) & 1) == 0)
    return *(_QWORD *)(v0 + 48);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD44362C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 89) & 1) == 0)
    return *(_QWORD *)(v0 + 80);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t (*sub_1AD443698(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3019A4;
  }
  return result;
}

void (*sub_1AD443724(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v7 = v1[3];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD301A68;
}

uint64_t sub_1AD443788@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD44610C(type metadata accessor for IDSHomeKitInvitation, a1);
}

uint64_t sub_1AD443794(uint64_t a1)
{
  return sub_1AD446158(a1, type metadata accessor for IDSHomeKitInvitation);
}

uint64_t (*sub_1AD4437A0())(_QWORD)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD4437C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1AD2894B4(v4, v5);
}

__n128 sub_1AD443804(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 24));
  sub_1AD289394(*v4, v4[1]);
  result = v6;
  *(__n128 *)v4 = v6;
  v4[2] = v2;
  v4[3] = v3;
  return result;
}

uint64_t (*sub_1AD443860())(_QWORD)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD443888()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 28));
}

uint64_t sub_1AD4438A8(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for IDSHomeKitInvitation(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_1AD4438D4())(_QWORD)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD4438FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = type metadata accessor for IDSHomeKitInvitation(0);
  v5 = a1 + *(int *)(result + 32);
  if ((*(_BYTE *)(v5 + 25) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_BYTE *)(v5 + 24);
    *(_QWORD *)a2 = *(_QWORD *)(v5 + 16);
    *(_BYTE *)(a2 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_1AD44398C(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  char v10;

  v4 = a2 & 1;
  v5 = v2 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 32);
  v6 = *(uint64_t (**)(uint64_t *))v5;
  v9 = a1;
  v10 = v4;
  result = v6(&v9);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = v4;
    *(_BYTE *)(v5 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v8 = 0x6E776F6E6B6E753CLL;
    v8[1] = 0xE90000000000003ELL;
    v8[2] = 0xD00000000000001CLL;
    v8[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD443A70(uint64_t a1))(uint64_t *)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_BYTE *)(v4 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_BYTE *)(a1 + 8) = v5 & 1;
    return sub_1AD443B10;
  }
  return result;
}

uint64_t sub_1AD443B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD443B64(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *((_BYTE *)a1 + 25);
  v7 = a2 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 32);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v2;
  *(_QWORD *)(v7 + 16) = v4;
  *(_BYTE *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 25) = v6;
  return result;
}

void (*sub_1AD443BDC(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 32);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  LOBYTE(v5) = *((_BYTE *)v5 + 25);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = v9;
  *((_BYTE *)v3 + 25) = (_BYTE)v5;
  swift_retain();
  return sub_1AD443C5C;
}

uint64_t sub_1AD443C60()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 36));
}

uint64_t sub_1AD443C80(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for IDSHomeKitInvitation(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*sub_1AD443CAC())(_QWORD)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD443CD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1AD443D08(v4);
}

uint64_t sub_1AD443D08(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD443D3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 40));
  result = sub_1AD289484(*v4);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*sub_1AD443D7C())(_QWORD)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD443DA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 44), a1, &qword_1ED2E7140);
}

uint64_t sub_1AD443DE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 44), &qword_1ED2E7140);
}

uint64_t (*sub_1AD443E1C())(_QWORD)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD443E44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 48);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 16);
    *a2 = v5;
    a2[1] = v4;
    return sub_1AD00408C(v5, v4);
  }
  return result;
}

uint64_t sub_1AD443ED0(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IDSHomeKitInvitation(0);
  sub_1AD00408C(v2, v1);
  return sub_1AD003258(v2, v1);
}

uint64_t sub_1AD443F20(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1AD003258(a1, a2);
}

uint64_t (*sub_1AD443F64(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*result)();

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 48);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 >> 60 == 11)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v5;
    sub_1AD00408C(v6, v5);
    return sub_1AD444004;
  }
  return result;
}

uint64_t sub_1AD444008@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 48));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD285EE4(v5, v6);
}

uint64_t sub_1AD44405C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 48));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD285EE4(v4, v5);
  swift_release();
  result = sub_1AD009794(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD4440E0(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 48);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD285EE4(v7, v8);
  return sub_1AD444158;
}

void sub_1AD444158(uint64_t **a1, char a2)
{
  sub_1AD445308(a1, a2, (void (*)(uint64_t, uint64_t))sub_1AD009794, (void (*)(uint64_t, uint64_t))sub_1AD285EE4);
}

uint64_t sub_1AD44416C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 52);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD4441F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IDSHomeKitInvitation(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD444240(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD444284(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 52);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD444324@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 52));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD444378(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 52));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD4443FC(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 52);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD444474;
}

void sub_1AD444474(uint64_t **a1, char a2)
{
  sub_1AD445308(a1, a2, (void (*)(uint64_t, uint64_t))sub_1AD003F24, (void (*)(uint64_t, uint64_t))sub_1AD003E48);
}

uint64_t sub_1AD444488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 56), a1, &qword_1ED2E7140);
}

uint64_t sub_1AD4444C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 56), &qword_1ED2E7140);
}

uint64_t (*sub_1AD444500())(_QWORD)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD444528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 60), a1, (uint64_t *)&unk_1EECDB370);
}

uint64_t sub_1AD444564(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 60), (uint64_t *)&unk_1EECDB370);
}

uint64_t (*sub_1AD4445A0())(_QWORD)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD4445C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 64);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD444650(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IDSHomeKitInvitation(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD44469C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD4446E0(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 64);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD444780@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 64));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD4447D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 64));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD444858(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 64);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD444474;
}

uint64_t sub_1AD4448D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = type metadata accessor for IDSHomeKitInvitation(0);
  v5 = a1 + *(int *)(result + 68);
  if ((*(_BYTE *)(v5 + 25) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_BYTE *)(v5 + 24);
    *(_QWORD *)a2 = *(_QWORD *)(v5 + 16);
    *(_BYTE *)(a2 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_1AD444960(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  char v10;

  v4 = a2 & 1;
  v5 = v2 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 68);
  v6 = *(uint64_t (**)(uint64_t *))v5;
  v9 = a1;
  v10 = v4;
  result = v6(&v9);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = v4;
    *(_BYTE *)(v5 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v8 = 0x6E776F6E6B6E753CLL;
    v8[1] = 0xE90000000000003ELL;
    v8[2] = 0xD00000000000001CLL;
    v8[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD444A44(uint64_t a1))(uint64_t *)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 68);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_BYTE *)(v4 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_BYTE *)(a1 + 8) = v5 & 1;
    return sub_1AD443B10;
  }
  return result;
}

uint64_t sub_1AD444AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 68));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD444B34(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *((_BYTE *)a1 + 25);
  v7 = a2 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 68);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v2;
  *(_QWORD *)(v7 + 16) = v4;
  *(_BYTE *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 25) = v6;
  return result;
}

void (*sub_1AD444BAC(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 68);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  LOBYTE(v5) = *((_BYTE *)v5 + 25);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = v9;
  *((_BYTE *)v3 + 25) = (_BYTE)v5;
  swift_retain();
  return sub_1AD443C5C;
}

uint64_t sub_1AD444C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = type metadata accessor for IDSHomeKitInvitation(0);
  v5 = a1 + *(int *)(result + 72);
  if ((*(_BYTE *)(v5 + 25) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_BYTE *)(v5 + 24);
    *(_QWORD *)a2 = *(_QWORD *)(v5 + 16);
    *(_BYTE *)(a2 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_1AD444CBC(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  char v10;

  v4 = a2 & 1;
  v5 = v2 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 72);
  v6 = *(uint64_t (**)(uint64_t *))v5;
  v9 = a1;
  v10 = v4;
  result = v6(&v9);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = v4;
    *(_BYTE *)(v5 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v8 = 0x6E776F6E6B6E753CLL;
    v8[1] = 0xE90000000000003ELL;
    v8[2] = 0xD00000000000001CLL;
    v8[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD444DA0(uint64_t a1))(uint64_t *)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 72);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_BYTE *)(v4 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_BYTE *)(a1 + 8) = v5 & 1;
    return sub_1AD443B10;
  }
  return result;
}

uint64_t sub_1AD444E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 72));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD444E90(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *((_BYTE *)a1 + 25);
  v7 = a2 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 72);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v2;
  *(_QWORD *)(v7 + 16) = v4;
  *(_BYTE *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 25) = v6;
  return result;
}

void (*sub_1AD444F08(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 72);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  LOBYTE(v5) = *((_BYTE *)v5 + 25);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = v9;
  *((_BYTE *)v3 + 25) = (_BYTE)v5;
  swift_retain();
  return sub_1AD443C5C;
}

uint64_t sub_1AD444F88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 76);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 16);
    *a2 = v5;
    a2[1] = v4;
    return sub_1AD00408C(v5, v4);
  }
  return result;
}

uint64_t sub_1AD445014(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IDSHomeKitInvitation(0);
  sub_1AD00408C(v2, v1);
  return sub_1AD003258(v2, v1);
}

uint64_t sub_1AD445064(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1AD003258(a1, a2);
}

uint64_t (*sub_1AD4450A8(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*result)();

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 76);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 >> 60 == 11)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v5;
    sub_1AD00408C(v6, v5);
    return sub_1AD444004;
  }
  return result;
}

uint64_t sub_1AD445148(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003258(*a1, v3);
  sub_1AD00408C(*a1, v3);
  sub_1AD003258(v2, v3);
  return sub_1AD004118(v2, v3);
}

uint64_t sub_1AD4451B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 76));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD285EE4(v5, v6);
}

uint64_t sub_1AD44520C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 76));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD285EE4(v4, v5);
  swift_release();
  result = sub_1AD009794(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD445290(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHomeKitInvitation(0) + 76);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD285EE4(v7, v8);
  return sub_1AD444158;
}

void sub_1AD445308(uint64_t **a1, char a2, void (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t))
{
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v5 = *a1;
  v6 = (*a1)[3];
  v7 = (_QWORD *)((*a1)[4] + *((int *)*a1 + 10));
  v9 = **a1;
  v8 = (*a1)[1];
  v10 = (*a1)[2];
  v11 = v7[2];
  v12 = v7[3];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    a4(v10, v6);
    swift_release();
    a3(v11, v12);
    *v7 = v9;
    v7[1] = v8;
    v7[2] = v10;
    v7[3] = v6;
    v14 = v5[2];
    v15 = v5[3];
    swift_release();
    a3(v14, v15);
  }
  else
  {
    swift_release();
    a3(v11, v12);
    *v7 = v9;
    v7[1] = v8;
    v7[2] = v10;
    v7[3] = v6;
  }
  free(v5);
}

uint64_t sub_1AD4453F8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD445400(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_1AD445428())()
{
  return nullsub_1;
}

uint64_t sub_1AD445438()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD445440(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_1AD445468())()
{
  return nullsub_1;
}

uint64_t sub_1AD445480@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  if ((*(_BYTE *)(result + 25) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(result + 24);
    *(_QWORD *)a2 = *(_QWORD *)(result + 16);
    *(_BYTE *)(a2 + 8) = v2 & 1;
  }
  return result;
}

uint64_t sub_1AD4454F0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t *);
  char v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  char v9;

  v4 = *(uint64_t (**)(uint64_t *))v2;
  v5 = a2 & 1;
  v8 = a1;
  v9 = a2 & 1;
  result = v4(&v8);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v2 + 16) = a1;
    *(_BYTE *)(v2 + 24) = v5;
    *(_BYTE *)(v2 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD4455C8(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  if ((*(_BYTE *)(v1 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(v1 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
    *(_BYTE *)(a1 + 8) = v2 & 1;
    return sub_1AD445648;
  }
  return result;
}

uint64_t sub_1AD445648(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  char v8;

  v1 = a1[2];
  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(uint64_t (**)(uint64_t *))v1;
  v7 = *a1;
  v8 = v3;
  result = v4(&v7);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 16) = v2;
    *(_BYTE *)(v1 + 24) = v3;
    *(_BYTE *)(v1 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD445720(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  v7 = *((_BYTE *)a1 + 25);
  swift_retain();
  result = swift_release();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6;
  *(_BYTE *)(a2 + 25) = v7;
  return result;
}

void (*sub_1AD445788(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  v7 = *(_BYTE *)(v1 + 25);
  *v3 = *(_QWORD *)v1;
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  *((_BYTE *)v3 + 25) = v7;
  swift_retain();
  return sub_1AD4457F4;
}

void sub_1AD4457F4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *a1;
  v3 = (*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  v8 = *((_BYTE *)*a1 + 25);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v6;
    *(_BYTE *)(v3 + 24) = v7;
    *(_BYTE *)(v3 + 25) = v8;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v6;
    *(_BYTE *)(v3 + 24) = v7;
    *(_BYTE *)(v3 + 25) = v8;
  }
  free(v2);
}

uint64_t sub_1AD44588C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  if ((*(_BYTE *)(result + 57) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(result + 56);
    *(_QWORD *)a2 = *(_QWORD *)(result + 48);
    *(_BYTE *)(a2 + 8) = v2 & 1;
  }
  return result;
}

uint64_t sub_1AD4458FC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t *);
  char v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  char v9;

  v4 = *(uint64_t (**)(uint64_t *))(v2 + 32);
  v5 = a2 & 1;
  v8 = a1;
  v9 = a2 & 1;
  result = v4(&v8);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v2 + 48) = a1;
    *(_BYTE *)(v2 + 56) = v5;
    *(_BYTE *)(v2 + 57) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD4459D4(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  if ((*(_BYTE *)(v1 + 57) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(v1 + 56);
    *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
    *(_BYTE *)(a1 + 8) = v2 & 1;
    return sub_1AD445A54;
  }
  return result;
}

uint64_t sub_1AD445A54(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  char v8;

  v1 = a1[2];
  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(uint64_t (**)(uint64_t *))(v1 + 32);
  v7 = *a1;
  v8 = v3;
  result = v4(&v7);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 48) = v2;
    *(_BYTE *)(v1 + 56) = v3;
    *(_BYTE *)(v1 + 57) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD445B2C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  v7 = *((_BYTE *)a1 + 25);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v5;
  *(_BYTE *)(a2 + 56) = v6;
  *(_BYTE *)(a2 + 57) = v7;
  return result;
}

void (*sub_1AD445B94(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 56);
  v7 = *(_BYTE *)(v1 + 57);
  *v3 = *(_QWORD *)(v1 + 32);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  *((_BYTE *)v3 + 25) = v7;
  swift_retain();
  return sub_1AD445C00;
}

void sub_1AD445C00(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *a1;
  v3 = (*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  v8 = *((_BYTE *)*a1 + 25);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + 32) = v5;
    *(_QWORD *)(v3 + 40) = v4;
    *(_QWORD *)(v3 + 48) = v6;
    *(_BYTE *)(v3 + 56) = v7;
    *(_BYTE *)(v3 + 57) = v8;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)(v3 + 32) = v5;
    *(_QWORD *)(v3 + 40) = v4;
    *(_QWORD *)(v3 + 48) = v6;
    *(_BYTE *)(v3 + 56) = v7;
    *(_BYTE *)(v3 + 57) = v8;
  }
  free(v2);
}

uint64_t sub_1AD445C98@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  if ((*(_BYTE *)(result + 89) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(result + 88);
    *(_QWORD *)a2 = *(_QWORD *)(result + 80);
    *(_BYTE *)(a2 + 8) = v2 & 1;
  }
  return result;
}

uint64_t sub_1AD445D08(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t *);
  char v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  char v9;

  v4 = *(uint64_t (**)(uint64_t *))(v2 + 64);
  v5 = a2 & 1;
  v8 = a1;
  v9 = a2 & 1;
  result = v4(&v8);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v2 + 80) = a1;
    *(_BYTE *)(v2 + 88) = v5;
    *(_BYTE *)(v2 + 89) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD445DE0(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  if ((*(_BYTE *)(v1 + 89) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(v1 + 88);
    *(_QWORD *)a1 = *(_QWORD *)(v1 + 80);
    *(_BYTE *)(a1 + 8) = v2 & 1;
    return sub_1AD445E60;
  }
  return result;
}

uint64_t sub_1AD445E60(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  char v8;

  v1 = a1[2];
  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(uint64_t (**)(uint64_t *))(v1 + 64);
  v7 = *a1;
  v8 = v3;
  result = v4(&v7);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 80) = v2;
    *(_BYTE *)(v1 + 88) = v3;
    *(_BYTE *)(v1 + 89) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD445F38(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  v7 = *((_BYTE *)a1 + 25);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 64) = v4;
  *(_QWORD *)(a2 + 72) = v3;
  *(_QWORD *)(a2 + 80) = v5;
  *(_BYTE *)(a2 + 88) = v6;
  *(_BYTE *)(a2 + 89) = v7;
  return result;
}

void (*sub_1AD445FA0(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_BYTE *)(v1 + 88);
  v7 = *(_BYTE *)(v1 + 89);
  *v3 = *(_QWORD *)(v1 + 64);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  *((_BYTE *)v3 + 25) = v7;
  swift_retain();
  return sub_1AD44600C;
}

void sub_1AD44600C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *a1;
  v3 = (*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  v8 = *((_BYTE *)*a1 + 25);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + 64) = v5;
    *(_QWORD *)(v3 + 72) = v4;
    *(_QWORD *)(v3 + 80) = v6;
    *(_BYTE *)(v3 + 88) = v7;
    *(_BYTE *)(v3 + 89) = v8;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)(v3 + 64) = v5;
    *(_QWORD *)(v3 + 72) = v4;
    *(_QWORD *)(v3 + 80) = v6;
    *(_BYTE *)(v3 + 88) = v7;
    *(_BYTE *)(v3 + 89) = v8;
  }
  free(v2);
}

uint64_t sub_1AD4460AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t sub_1AD4460D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1ACFF6540(a1, v1, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD4460F0())()
{
  return nullsub_1;
}

uint64_t sub_1AD446100@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD44610C(type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule, a1);
}

uint64_t sub_1AD44610C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_1ACFF64C0(v2 + *(int *)(v4 + 20), a2, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t sub_1AD44614C(uint64_t a1)
{
  return sub_1AD446158(a1, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
}

uint64_t sub_1AD446158(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = a2(0);
  return sub_1ACFF6540(a1, v2 + *(int *)(v4 + 20), (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD446194())(_QWORD)
{
  type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule(0);
  return nullsub_1;
}

uint64_t sub_1AD4461C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t result;

  if (*(double *)a1 != *(double *)a2)
    return 0;
  v2 = *(_QWORD **)(a1 + 24);
  if (v2)
  {
    v3 = *(_QWORD **)(a2 + 24);
    if (v3)
      return sub_1AD3523FC(v2, v3);
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD446248(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t result;
  _BOOL4 v11;

  if ((*(_BYTE *)(a1 + 25) & 1) != 0 || (*(_BYTE *)(a2 + 25) & 1) != 0)
    goto LABEL_28;
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  v5 = *(_BYTE *)(a1 + 57);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_BYTE *)(a1 + 88);
  v8 = *(_BYTE *)(a1 + 89);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) == 0)
      return 0;
  }
  else
  {
    result = 0;
    if ((*(_BYTE *)(a2 + 24) & 1) != 0 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return result;
  }
  if ((v5 & 1) != 0 || (*(_BYTE *)(a2 + 57) & 1) != 0)
    goto LABEL_28;
  if ((v4 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 56) & 1) != 0)
      goto LABEL_16;
    return 0;
  }
  result = 0;
  if ((*(_BYTE *)(a2 + 56) & 1) != 0 || v3 != *(_QWORD *)(a2 + 48))
    return result;
LABEL_16:
  if ((v8 & 1) != 0 || (*(_BYTE *)(a2 + 89) & 1) != 0)
  {
LABEL_28:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  v11 = (*(_BYTE *)(a2 + 88) & 1) == 0 && v6 == *(_QWORD *)(a2 + 80);
  if ((v7 & 1) != 0)
    return *(_BYTE *)(a2 + 88) & 1;
  else
    return v11;
}

uint64_t sub_1AD446358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  _BYTE *v28;
  _BYTE *v29;
  char v30;
  _BYTE *v31;
  void (*v32)(_BYTE *, uint64_t);
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  void (*v39)(_BYTE *, uint64_t);
  _BYTE v41[12];
  int v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;

  v45 = type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule(0);
  v4 = MEMORY[0x1E0C80A78](v45);
  v49 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v50 = &v41[-v6];
  v7 = sub_1AD63B03C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v44 = &v41[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB358);
  v11 = MEMORY[0x1E0C80A78](v10);
  v46 = &v41[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v14 = &v41[-v13];
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v16 = MEMORY[0x1E0C80A78](v15);
  v43 = &v41[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = &v41[-v19];
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = &v41[-v22];
  MEMORY[0x1E0C80A78](v21);
  v25 = &v41[-v24];
  v47 = a1;
  sub_1ACFF64C0(a1, (uint64_t)&v41[-v24], (uint64_t *)&unk_1ED2E2D98);
  v48 = a2;
  sub_1ACFF64C0(a2, (uint64_t)v23, (uint64_t *)&unk_1ED2E2D98);
  v26 = (uint64_t)&v14[*(int *)(v10 + 48)];
  sub_1ACFF64C0((uint64_t)v25, (uint64_t)v14, (uint64_t *)&unk_1ED2E2D98);
  sub_1ACFF64C0((uint64_t)v23, v26, (uint64_t *)&unk_1ED2E2D98);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v27((uint64_t)v14, 1, v7) == 1)
  {
    sub_1AD009758((uint64_t)v23, (uint64_t *)&unk_1ED2E2D98);
    sub_1AD009758((uint64_t)v25, (uint64_t *)&unk_1ED2E2D98);
    if (v27(v26, 1, v7) == 1)
    {
      sub_1AD009758((uint64_t)v14, (uint64_t *)&unk_1ED2E2D98);
      v28 = v50;
      sub_1AD0D3D2C(v47, (uint64_t)v50, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
      v29 = v49;
      sub_1AD0D3D2C(v48, (uint64_t)v49, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_1ACFF64C0((uint64_t)v14, (uint64_t)v20, (uint64_t *)&unk_1ED2E2D98);
  if (v27(v26, 1, v7) == 1)
  {
    sub_1AD009758((uint64_t)v23, (uint64_t *)&unk_1ED2E2D98);
    sub_1AD009758((uint64_t)v25, (uint64_t *)&unk_1ED2E2D98);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v20, v7);
LABEL_6:
    sub_1AD009758((uint64_t)v14, &qword_1EECDB358);
    v28 = v50;
    sub_1AD0D3D2C(v47, (uint64_t)v50, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
    v29 = v49;
    sub_1AD0D3D2C(v48, (uint64_t)v49, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
    goto LABEL_7;
  }
  v31 = v44;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 32))(v44, v26, v7);
  sub_1ACFF9724(&qword_1EECDB368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v42 = sub_1AD63B738();
  v32 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v32(v31, v7);
  sub_1AD009758((uint64_t)v23, (uint64_t *)&unk_1ED2E2D98);
  sub_1AD009758((uint64_t)v25, (uint64_t *)&unk_1ED2E2D98);
  v32(v20, v7);
  sub_1AD009758((uint64_t)v14, (uint64_t *)&unk_1ED2E2D98);
  v28 = v50;
  sub_1AD0D3D2C(v47, (uint64_t)v50, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
  v29 = v49;
  sub_1AD0D3D2C(v48, (uint64_t)v49, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
  if ((v42 & 1) != 0)
  {
LABEL_9:
    v33 = v46;
    v34 = *(int *)(v45 + 20);
    v35 = (uint64_t)&v29[v34];
    v36 = (uint64_t)&v46[*(int *)(v10 + 48)];
    sub_1ACFF64C0((uint64_t)&v28[v34], (uint64_t)v46, (uint64_t *)&unk_1ED2E2D98);
    sub_1ACFF64C0(v35, v36, (uint64_t *)&unk_1ED2E2D98);
    if (v27((uint64_t)v33, 1, v7) == 1)
    {
      sub_1AD066230((uint64_t)v29, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
      sub_1AD066230((uint64_t)v28, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
      if (v27(v36, 1, v7) == 1)
      {
        sub_1AD009758((uint64_t)v33, (uint64_t *)&unk_1ED2E2D98);
        v30 = 1;
        return v30 & 1;
      }
    }
    else
    {
      v37 = v43;
      sub_1ACFF64C0((uint64_t)v33, (uint64_t)v43, (uint64_t *)&unk_1ED2E2D98);
      if (v27(v36, 1, v7) != 1)
      {
        v38 = v44;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 32))(v44, v36, v7);
        sub_1ACFF9724(&qword_1EECDB368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
        v30 = sub_1AD63B738();
        v39 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
        v39(v38, v7);
        sub_1AD066230((uint64_t)v29, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
        sub_1AD066230((uint64_t)v28, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
        v39(v37, v7);
        sub_1AD009758((uint64_t)v33, (uint64_t *)&unk_1ED2E2D98);
        return v30 & 1;
      }
      sub_1AD066230((uint64_t)v29, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
      sub_1AD066230((uint64_t)v28, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v37, v7);
    }
    sub_1AD009758((uint64_t)v33, &qword_1EECDB358);
    v30 = 0;
    return v30 & 1;
  }
LABEL_7:
  sub_1AD066230((uint64_t)v29, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
  sub_1AD066230((uint64_t)v28, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
  v30 = 0;
  return v30 & 1;
}

BOOL sub_1AD446944(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 result;
  BOOL v9;
  uint64_t v10;
  char v11;

  v4 = *a1;
  v5 = a1[1];
  v6 = *a2;
  v7 = a2[1];
  if (!v4)
  {
    if (!v6)
      goto LABEL_4;
    return 0;
  }
  if (!v6 || (sub_1AD351614(v4, v6) & 1) == 0)
    return 0;
LABEL_4:
  result = (v5 | v7) == 0;
  if (v5)
    v9 = v7 == 0;
  else
    v9 = 1;
  if (!v9)
  {
    swift_bridgeObjectRetain();
    v10 = swift_bridgeObjectRetain();
    v11 = sub_1AD35176C(v10, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11 & 1;
  }
  return result;
}

uint64_t sub_1AD4469E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(uint64_t, uint64_t, uint64_t);
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  _BYTE *v104;
  _BYTE *v105;
  _BYTE *v106;
  _BYTE *v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t result;
  uint64_t v126;
  _BYTE *v127;
  void (*v128)(_BYTE *, uint64_t);
  uint64_t v129;
  double v130;
  _BYTE *v131;
  _QWORD *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  BOOL v137;
  int *v138;
  int v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE *v145;
  char v146;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  int *v157;
  uint64_t v158;
  int v159;
  int v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  unsigned int (*v172)(uint64_t, uint64_t, uint64_t);
  int v173;
  uint64_t v174;
  _BYTE *v175;
  uint64_t v176;
  _BYTE *v177;
  void (*v178)(_BYTE *, uint64_t);
  _BYTE *v179;
  uint64_t v180;
  _BYTE *v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  char v188;
  uint64_t v189;
  _BYTE *v190;
  uint64_t v191;
  _BYTE *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _BYTE *v202;
  uint64_t v203;
  uint64_t v204;
  _BYTE *v205;
  uint64_t v206;
  _BYTE *v207;
  char v208;
  void (*v209)(_BYTE *, uint64_t);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unsigned int (*v214)(uint64_t, uint64_t, uint64_t);
  _BYTE *v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  _BYTE *v219;
  uint64_t v220;
  _BYTE *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char v227;
  _BYTE *v228;
  uint64_t v229;
  char v230;
  _BYTE *v231;
  uint64_t v232;
  char v233;
  _BYTE *v234;
  uint64_t v235;
  char v236;
  _BYTE *v237;
  uint64_t v238;
  char v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char v248;
  _BYTE v249[4];
  int v250;
  _BYTE *v251;
  uint64_t v252;
  _BYTE *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  _BYTE *v257;
  _BYTE *v258;
  _BYTE *v259;
  _BYTE *v260;
  uint64_t v261;
  uint64_t v262;
  _BYTE *v263;
  uint64_t v264;
  _BYTE *v265;
  _BYTE *v266;
  int *v267;
  _BYTE *v268;
  uint64_t v269;
  uint64_t v270;
  _BYTE *v271;
  _BYTE *v272;
  uint64_t v273;
  uint64_t v274;
  _BYTE *v275;
  _BYTE *v276;
  _BYTE *v277;
  uint64_t v278;
  uint64_t v279;
  _BYTE *v280;
  _BYTE *v281;
  _BYTE *v282;
  _BYTE *v283;
  _BYTE *v284;
  _BYTE *v285;
  _BYTE *v286;
  _BYTE *v287;
  _BYTE *v288;
  _BYTE *v289;
  uint64_t v290;
  uint64_t v291;
  _BYTE *v292;
  _BYTE *v293;
  _BYTE *v294;
  _BYTE *v295;
  uint64_t v296;
  uint64_t v297[2];
  uint64_t v298[2];

  v256 = type metadata accessor for CloudKitSharingToken();
  v255 = *(_QWORD *)(v256 - 8);
  MEMORY[0x1E0C80A78](v256);
  v253 = &v249[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v249[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDE7B0);
  MEMORY[0x1E0C80A78](v254);
  v9 = &v249[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v262 = sub_1AD63B084();
  v264 = *(_QWORD *)(v262 - 8);
  MEMORY[0x1E0C80A78](v262);
  v259 = &v249[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  v12 = MEMORY[0x1E0C80A78](v11);
  v257 = &v249[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v260 = &v249[-v14];
  v261 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7130);
  v15 = MEMORY[0x1E0C80A78](v261);
  v258 = &v249[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v263 = &v249[-v17];
  v18 = sub_1AD63B03C();
  v269 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v265 = &v249[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  MEMORY[0x1E0C80A78](v20);
  v266 = &v249[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v268 = (_BYTE *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB358);
  MEMORY[0x1E0C80A78](v268);
  v23 = &v249[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = type metadata accessor for IDSHomeKitInvitation(0);
  v25 = MEMORY[0x1E0C80A78](v24);
  v26 = MEMORY[0x1E0C80A78](v25);
  v27 = MEMORY[0x1E0C80A78](v26);
  v281 = &v249[-v28];
  v29 = MEMORY[0x1E0C80A78](v27);
  v280 = &v249[-v30];
  v31 = MEMORY[0x1E0C80A78](v29);
  v284 = &v249[-v32];
  v33 = MEMORY[0x1E0C80A78](v31);
  v282 = &v249[-v34];
  v35 = MEMORY[0x1E0C80A78](v33);
  v286 = &v249[-v36];
  v37 = MEMORY[0x1E0C80A78](v35);
  v283 = &v249[-v38];
  v39 = MEMORY[0x1E0C80A78](v37);
  v287 = &v249[-v40];
  v41 = MEMORY[0x1E0C80A78](v39);
  v285 = &v249[-v42];
  v43 = MEMORY[0x1E0C80A78](v41);
  v293 = &v249[-v44];
  v45 = MEMORY[0x1E0C80A78](v43);
  v292 = &v249[-v46];
  v47 = MEMORY[0x1E0C80A78](v45);
  v295 = &v249[-v48];
  v49 = MEMORY[0x1E0C80A78](v47);
  v288 = &v249[-v50];
  v51 = MEMORY[0x1E0C80A78](v49);
  v294 = &v249[-v52];
  v53 = MEMORY[0x1E0C80A78](v51);
  v289 = &v249[-v54];
  v55 = MEMORY[0x1E0C80A78](v53);
  MEMORY[0x1E0C80A78](v55);
  v57 = MEMORY[0x1E0C80A78](&v249[-v56]);
  v278 = (uint64_t)&v249[-v58];
  v59 = MEMORY[0x1E0C80A78](v57);
  v279 = (uint64_t)&v249[-v60];
  v61 = MEMORY[0x1E0C80A78](v59);
  v272 = &v249[-v62];
  v63 = MEMORY[0x1E0C80A78](v61);
  v271 = &v249[-v64];
  v65 = MEMORY[0x1E0C80A78](v63);
  v277 = &v249[-v66];
  v67 = MEMORY[0x1E0C80A78](v65);
  v276 = &v249[-v68];
  v69 = MEMORY[0x1E0C80A78](v67);
  v275 = &v249[-v70];
  v71 = MEMORY[0x1E0C80A78](v69);
  v72 = MEMORY[0x1E0C80A78](v71);
  v74 = &v249[-v73];
  v75 = MEMORY[0x1E0C80A78](v72);
  v77 = &v249[-v76];
  v78 = MEMORY[0x1E0C80A78](v75);
  v80 = &v249[-v79];
  v81 = MEMORY[0x1E0C80A78](v78);
  v88 = &v249[-v84];
  v296 = a1;
  v89 = *(_QWORD *)(a1 + 24);
  if (v89 == 1)
    goto LABEL_169;
  v90 = *(_QWORD *)(a2 + 24);
  if (v90 == 1)
    goto LABEL_169;
  v274 = v85;
  v273 = v86;
  v290 = v82;
  v291 = v81;
  v270 = v83;
  if (!v89)
  {
    if (!v90)
    {
LABEL_12:
      v251 = v7;
      v267 = v87;
      sub_1AD0D3D2C(v296, (uint64_t)&v249[-v84], type metadata accessor for IDSHomeKitInvitation);
      sub_1AD0D3D2C(a2, (uint64_t)v80, type metadata accessor for IDSHomeKitInvitation);
      goto LABEL_13;
    }
LABEL_10:
    sub_1AD0D3D2C(v296, (uint64_t)&v249[-v84], type metadata accessor for IDSHomeKitInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v80, type metadata accessor for IDSHomeKitInvitation);
    goto LABEL_11;
  }
  if (!v90)
    goto LABEL_10;
  if (*(_QWORD *)(v296 + 16) == *(_QWORD *)(a2 + 16) && v89 == v90)
    goto LABEL_12;
  v251 = v7;
  v267 = v87;
  v91 = sub_1AD63C2A8();
  sub_1AD0D3D2C(v296, (uint64_t)v88, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD0D3D2C(a2, (uint64_t)v80, type metadata accessor for IDSHomeKitInvitation);
  if ((v91 & 1) == 0)
  {
LABEL_11:
    sub_1AD066230((uint64_t)v80, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v88, type metadata accessor for IDSHomeKitInvitation);
LABEL_19:
    v98 = (uint64_t)v294;
    v97 = v295;
    v99 = v296;
    sub_1AD0D3D2C(v296, (uint64_t)v77, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v74, type metadata accessor for IDSHomeKitInvitation);
LABEL_20:
    sub_1AD066230((uint64_t)v74, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v77, type metadata accessor for IDSHomeKitInvitation);
LABEL_21:
    v100 = v279;
    v101 = (uint64_t)v277;
    v102 = v275;
    v103 = v270;
    sub_1AD0D3D2C(v99, v270, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v102, type metadata accessor for IDSHomeKitInvitation);
LABEL_22:
    sub_1AD066230((uint64_t)v102, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230(v103, type metadata accessor for IDSHomeKitInvitation);
    v104 = v288;
    goto LABEL_23;
  }
LABEL_13:
  v252 = a2;
  v92 = v267[5];
  v93 = (uint64_t)&v80[v92];
  v94 = (uint64_t)&v23[*((int *)v268 + 12)];
  sub_1ACFF64C0((uint64_t)&v88[v92], (uint64_t)v23, (uint64_t *)&unk_1ED2E2D98);
  sub_1ACFF64C0(v93, v94, (uint64_t *)&unk_1ED2E2D98);
  v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v269 + 48);
  if (v95((uint64_t)v23, 1, v18) == 1)
  {
    sub_1AD066230((uint64_t)v80, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v88, type metadata accessor for IDSHomeKitInvitation);
    if (v95(v94, 1, v18) == 1)
    {
      sub_1AD009758((uint64_t)v23, (uint64_t *)&unk_1ED2E2D98);
      sub_1AD0D3D2C(v296, (uint64_t)v77, type metadata accessor for IDSHomeKitInvitation);
      a2 = v252;
      sub_1AD0D3D2C(v252, (uint64_t)v74, type metadata accessor for IDSHomeKitInvitation);
      goto LABEL_50;
    }
    goto LABEL_18;
  }
  v96 = v266;
  sub_1ACFF64C0((uint64_t)v23, (uint64_t)v266, (uint64_t *)&unk_1ED2E2D98);
  if (v95(v94, 1, v18) == 1)
  {
    sub_1AD066230((uint64_t)v80, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v88, type metadata accessor for IDSHomeKitInvitation);
    (*(void (**)(_BYTE *, uint64_t))(v269 + 8))(v96, v18);
LABEL_18:
    sub_1AD009758((uint64_t)v23, &qword_1EECDB358);
    a2 = v252;
    goto LABEL_19;
  }
  v268 = v9;
  v126 = v269;
  v127 = v265;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v269 + 32))(v265, v94, v18);
  sub_1ACFF9724(&qword_1EECDB368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v250 = sub_1AD63B738();
  v128 = *(void (**)(_BYTE *, uint64_t))(v126 + 8);
  v128(v127, v18);
  sub_1AD066230((uint64_t)v80, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD066230((uint64_t)v88, type metadata accessor for IDSHomeKitInvitation);
  v128(v96, v18);
  v9 = v268;
  sub_1AD009758((uint64_t)v23, (uint64_t *)&unk_1ED2E2D98);
  v99 = v296;
  sub_1AD0D3D2C(v296, (uint64_t)v77, type metadata accessor for IDSHomeKitInvitation);
  a2 = v252;
  sub_1AD0D3D2C(v252, (uint64_t)v74, type metadata accessor for IDSHomeKitInvitation);
  v98 = (uint64_t)v294;
  v97 = v295;
  if ((v250 & 1) == 0)
    goto LABEL_20;
LABEL_50:
  v268 = v9;
  v129 = v267[6];
  v130 = *(double *)&v77[v129];
  v131 = *(_BYTE **)&v77[v129 + 8];
  v132 = *(_QWORD **)&v77[v129 + 24];
  v133 = (uint64_t *)&v74[v129];
  v135 = *v133;
  v134 = v133[1];
  v136 = (_QWORD *)v133[3];
  if (!v131)
  {
    v266 = 0;
    v269 = *(_QWORD *)&v130;
    sub_1AD2894B4(v135, v134);
    sub_1AD066230((uint64_t)v74, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v77, type metadata accessor for IDSHomeKitInvitation);
    if (!v134)
    {
      sub_1AD289394(v269, 0);
      v99 = v296;
      v103 = v270;
      sub_1AD0D3D2C(v296, v270, type metadata accessor for IDSHomeKitInvitation);
      v102 = v275;
      sub_1AD0D3D2C(a2, (uint64_t)v275, type metadata accessor for IDSHomeKitInvitation);
      v98 = (uint64_t)v294;
      v97 = v295;
      v100 = v279;
      v101 = (uint64_t)v277;
      goto LABEL_59;
    }
    goto LABEL_63;
  }
  if (!v134)
  {
    v266 = v131;
    v269 = *(_QWORD *)&v130;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    sub_1AD066230((uint64_t)v74, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v77, type metadata accessor for IDSHomeKitInvitation);
    swift_bridgeObjectRelease();
    swift_release();
LABEL_63:
    sub_1AD289394(v269, (uint64_t)v266);
    v142 = v135;
    v143 = v134;
LABEL_65:
    sub_1AD289394(v142, v143);
    v97 = v295;
    v99 = v296;
    v98 = (uint64_t)v294;
    goto LABEL_21;
  }
  if (v130 != *(double *)&v135)
  {
    v144 = *(_QWORD *)&v130;
    v145 = v131;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1AD066230((uint64_t)v74, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v77, type metadata accessor for IDSHomeKitInvitation);
    swift_bridgeObjectRelease();
    swift_release();
    v142 = v144;
    v143 = (uint64_t)v145;
    goto LABEL_65;
  }
  v98 = (uint64_t)v294;
  v97 = v295;
  if (!v132)
    goto LABEL_169;
  v266 = v131;
  v269 = *(_QWORD *)&v130;
  if (!v136)
    goto LABEL_169;
  v137 = sub_1AD3523FC(v132, v136);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  sub_1AD066230((uint64_t)v74, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD066230((uint64_t)v77, type metadata accessor for IDSHomeKitInvitation);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1AD289394(v269, (uint64_t)v266);
  v99 = v296;
  v103 = v270;
  sub_1AD0D3D2C(v296, v270, type metadata accessor for IDSHomeKitInvitation);
  v102 = v275;
  sub_1AD0D3D2C(a2, (uint64_t)v275, type metadata accessor for IDSHomeKitInvitation);
  v100 = v279;
  v101 = (uint64_t)v277;
  if (!v137)
    goto LABEL_22;
LABEL_59:
  v138 = v267;
  v139 = *(unsigned __int8 *)(v103 + v267[7]);
  sub_1AD066230(v103, type metadata accessor for IDSHomeKitInvitation);
  v140 = (uint64_t)v102;
  v141 = v102[v138[7]];
  sub_1AD066230(v140, type metadata accessor for IDSHomeKitInvitation);
  if (v139 != 2)
  {
    v104 = v288;
    if (v141 != 2)
    {
      v146 = ((v139 & 1) == 0) ^ v141;
      v105 = v276;
      sub_1AD0D3D2C(v99, (uint64_t)v276, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD0D3D2C(a2, v101, type metadata accessor for IDSHomeKitInvitation);
      if ((v146 & 1) != 0)
        goto LABEL_68;
LABEL_24:
      sub_1AD066230(v101, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD066230((uint64_t)v105, type metadata accessor for IDSHomeKitInvitation);
      goto LABEL_25;
    }
LABEL_23:
    v105 = v276;
    sub_1AD0D3D2C(v99, (uint64_t)v276, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD0D3D2C(a2, v101, type metadata accessor for IDSHomeKitInvitation);
    goto LABEL_24;
  }
  v104 = v288;
  if (v141 != 2)
    goto LABEL_23;
  v105 = v276;
  sub_1AD0D3D2C(v99, (uint64_t)v276, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD0D3D2C(a2, v101, type metadata accessor for IDSHomeKitInvitation);
LABEL_68:
  v147 = (uint64_t)v105;
  v148 = v267;
  v149 = v147 + v267[8];
  if ((*(_BYTE *)(v149 + 25) & 1) != 0)
    goto LABEL_169;
  v150 = *(_QWORD *)(v149 + 16);
  v151 = *(_BYTE *)(v149 + 24);
  sub_1AD066230(v147, type metadata accessor for IDSHomeKitInvitation);
  v152 = v101 + v148[8];
  if ((*(_BYTE *)(v152 + 25) & 1) != 0)
    goto LABEL_169;
  v153 = v101;
  v154 = *(_QWORD *)(v152 + 16);
  v155 = *(_BYTE *)(v152 + 24);
  sub_1AD066230(v153, type metadata accessor for IDSHomeKitInvitation);
  if ((v151 & 1) != 0)
  {
    if ((v155 & 1) != 0)
    {
      v106 = v271;
      sub_1AD0D3D2C(v99, (uint64_t)v271, type metadata accessor for IDSHomeKitInvitation);
      v107 = v272;
      sub_1AD0D3D2C(a2, (uint64_t)v272, type metadata accessor for IDSHomeKitInvitation);
      goto LABEL_76;
    }
    goto LABEL_25;
  }
  if ((v155 & 1) != 0)
  {
LABEL_25:
    v106 = v271;
    sub_1AD0D3D2C(v99, (uint64_t)v271, type metadata accessor for IDSHomeKitInvitation);
    v107 = v272;
    sub_1AD0D3D2C(a2, (uint64_t)v272, type metadata accessor for IDSHomeKitInvitation);
LABEL_26:
    sub_1AD066230((uint64_t)v107, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v106, type metadata accessor for IDSHomeKitInvitation);
    v108 = v293;
    goto LABEL_27;
  }
  v156 = v150;
  v106 = v271;
  sub_1AD0D3D2C(v99, (uint64_t)v271, type metadata accessor for IDSHomeKitInvitation);
  v107 = v272;
  sub_1AD0D3D2C(a2, (uint64_t)v272, type metadata accessor for IDSHomeKitInvitation);
  if (v156 != v154)
    goto LABEL_26;
LABEL_76:
  v157 = v267;
  v158 = (uint64_t)v106;
  v159 = v106[v267[9]];
  sub_1AD066230(v158, type metadata accessor for IDSHomeKitInvitation);
  v160 = v107[v157[9]];
  sub_1AD066230((uint64_t)v107, type metadata accessor for IDSHomeKitInvitation);
  v108 = v293;
  if (v159 == 2)
  {
    if (v160 == 2)
    {
      sub_1AD0D3D2C(v99, v100, type metadata accessor for IDSHomeKitInvitation);
      v109 = v278;
      sub_1AD0D3D2C(a2, v278, type metadata accessor for IDSHomeKitInvitation);
      goto LABEL_81;
    }
    goto LABEL_27;
  }
  if (v160 == 2)
  {
LABEL_27:
    sub_1AD0D3D2C(v99, v100, type metadata accessor for IDSHomeKitInvitation);
    v109 = v278;
    sub_1AD0D3D2C(a2, v278, type metadata accessor for IDSHomeKitInvitation);
LABEL_28:
    sub_1AD066230(v109, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230(v100, type metadata accessor for IDSHomeKitInvitation);
LABEL_29:
    v110 = v291;
    sub_1AD0D3D2C(v99, v291, type metadata accessor for IDSHomeKitInvitation);
    v111 = v290;
    sub_1AD0D3D2C(a2, v290, type metadata accessor for IDSHomeKitInvitation);
    v112 = v292;
LABEL_30:
    sub_1AD066230(v111, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230(v110, type metadata accessor for IDSHomeKitInvitation);
LABEL_31:
    v113 = v289;
    sub_1AD0D3D2C(v99, (uint64_t)v289, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD0D3D2C(a2, v98, type metadata accessor for IDSHomeKitInvitation);
    goto LABEL_32;
  }
  v161 = ((v159 & 1) == 0) ^ v160;
  sub_1AD0D3D2C(v99, v100, type metadata accessor for IDSHomeKitInvitation);
  v109 = v278;
  sub_1AD0D3D2C(a2, v278, type metadata accessor for IDSHomeKitInvitation);
  if ((v161 & 1) == 0)
    goto LABEL_28;
LABEL_81:
  v162 = v267[10];
  v164 = *(_QWORD *)(v100 + v162);
  v163 = *(_QWORD *)(v100 + v162 + 8);
  v165 = (uint64_t *)(v109 + v162);
  v166 = *v165;
  v167 = v165[1];
  if (v164 == 1)
  {
    sub_1AD443D08(*v165);
    sub_1AD066230(v109, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230(v100, type metadata accessor for IDSHomeKitInvitation);
    if (v166 == 1)
    {
      sub_1AD289484(1);
      v110 = v291;
      sub_1AD0D3D2C(v99, v291, type metadata accessor for IDSHomeKitInvitation);
      v111 = v290;
      sub_1AD0D3D2C(a2, v290, type metadata accessor for IDSHomeKitInvitation);
      v108 = v293;
      v97 = v295;
      goto LABEL_88;
    }
    goto LABEL_86;
  }
  v298[0] = v164;
  v298[1] = v163;
  if (v166 == 1)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1AD066230(v109, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230(v100, type metadata accessor for IDSHomeKitInvitation);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_86:
    sub_1AD289484(v164);
    sub_1AD289484(v166);
    v108 = v293;
    v97 = v295;
    goto LABEL_29;
  }
  v297[0] = v166;
  v297[1] = v167;
  sub_1AD443D08(v164);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LODWORD(v279) = sub_1AD446944(v298, v297);
  sub_1AD066230(v109, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD066230(v100, type metadata accessor for IDSHomeKitInvitation);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD289484(v164);
  v110 = v291;
  sub_1AD0D3D2C(v99, v291, type metadata accessor for IDSHomeKitInvitation);
  v111 = v290;
  sub_1AD0D3D2C(a2, v290, type metadata accessor for IDSHomeKitInvitation);
  v112 = v292;
  v108 = v293;
  v97 = v295;
  if ((v279 & 1) == 0)
    goto LABEL_30;
LABEL_88:
  v168 = v267[11];
  v279 = v111 + v168;
  v169 = v263;
  v170 = (uint64_t)&v263[*(int *)(v261 + 48)];
  sub_1ACFF64C0(v110 + v168, (uint64_t)v263, &qword_1ED2E7140);
  v278 = v170;
  sub_1ACFF64C0(v279, v170, &qword_1ED2E7140);
  v171 = v262;
  v279 = *(_QWORD *)(v264 + 48);
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v279)(v169, 1, v262) != 1)
  {
    v175 = v260;
    sub_1ACFF64C0((uint64_t)v169, (uint64_t)v260, &qword_1ED2E7140);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v279)(v278, 1, v171) != 1)
    {
      v176 = v264;
      v177 = v259;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v264 + 32))(v259, v278, v171);
      sub_1ACFF9724((unint64_t *)&qword_1EECD22B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      LODWORD(v278) = sub_1AD63B738();
      v178 = *(void (**)(_BYTE *, uint64_t))(v176 + 8);
      v179 = v177;
      v98 = (uint64_t)v294;
      v178(v179, v171);
      sub_1AD066230(v290, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD066230(v291, type metadata accessor for IDSHomeKitInvitation);
      v178(v175, v171);
      sub_1AD009758((uint64_t)v263, &qword_1ED2E7140);
      v113 = v289;
      sub_1AD0D3D2C(v99, (uint64_t)v289, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD0D3D2C(a2, v98, type metadata accessor for IDSHomeKitInvitation);
      v112 = v292;
      v172 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v279;
      if ((v278 & 1) != 0)
        goto LABEL_95;
LABEL_32:
      sub_1AD066230(v98, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD066230((uint64_t)v113, type metadata accessor for IDSHomeKitInvitation);
LABEL_33:
      sub_1AD0D3D2C(v99, (uint64_t)v104, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD0D3D2C(a2, (uint64_t)v97, type metadata accessor for IDSHomeKitInvitation);
      goto LABEL_34;
    }
    v174 = (uint64_t)v169;
    sub_1AD066230(v290, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230(v291, type metadata accessor for IDSHomeKitInvitation);
    (*(void (**)(_BYTE *, uint64_t))(v264 + 8))(v175, v171);
    v112 = v292;
    goto LABEL_93;
  }
  sub_1AD066230(v111, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD066230(v110, type metadata accessor for IDSHomeKitInvitation);
  v172 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v279;
  v173 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v279)(v278, 1, v171);
  v112 = v292;
  v174 = (uint64_t)v169;
  if (v173 != 1)
  {
LABEL_93:
    sub_1AD009758(v174, (uint64_t *)&unk_1ED2E7130);
    goto LABEL_31;
  }
  sub_1AD009758((uint64_t)v169, &qword_1ED2E7140);
  v113 = v289;
  sub_1AD0D3D2C(v99, (uint64_t)v289, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD0D3D2C(a2, v98, type metadata accessor for IDSHomeKitInvitation);
LABEL_95:
  v180 = v267[12];
  v181 = &v113[v180];
  v182 = *(_QWORD *)&v113[v180 + 24];
  if (v182 >> 60 == 11)
    goto LABEL_169;
  v183 = v98 + v180;
  v184 = *(_QWORD *)(v183 + 24);
  if (v184 >> 60 == 11)
    goto LABEL_169;
  v185 = *((_QWORD *)v181 + 2);
  v186 = *(_QWORD *)(v183 + 16);
  if (v182 >> 60 != 15)
  {
    sub_1AD285EE4(v185, v182);
    sub_1AD285EE4(v185, v182);
    sub_1AD285EE4(v186, v184);
    if (v184 >> 60 != 15)
    {
      sub_1AD3DB778(v185, v182);
      v188 = v187;
      sub_1AD009794(v186, v184);
      sub_1AD009794(v185, v182);
      sub_1AD066230(v98, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD066230((uint64_t)v289, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD004118(v185, v182);
      sub_1AD0D3D2C(v99, (uint64_t)v104, type metadata accessor for IDSHomeKitInvitation);
      a2 = v252;
      v97 = v295;
      sub_1AD0D3D2C(v252, (uint64_t)v295, type metadata accessor for IDSHomeKitInvitation);
      v112 = v292;
      v108 = v293;
      if ((v188 & 1) != 0)
        goto LABEL_104;
LABEL_34:
      sub_1AD066230((uint64_t)v97, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD066230((uint64_t)v104, type metadata accessor for IDSHomeKitInvitation);
LABEL_35:
      sub_1AD0D3D2C(v99, (uint64_t)v112, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD0D3D2C(a2, (uint64_t)v108, type metadata accessor for IDSHomeKitInvitation);
      v114 = v287;
      goto LABEL_36;
    }
    sub_1AD066230(v98, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v289, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD009794(v185, v182);
    goto LABEL_102;
  }
  sub_1AD285EE4(v185, v182);
  sub_1AD285EE4(v186, v184);
  sub_1AD066230(v98, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD066230((uint64_t)v113, type metadata accessor for IDSHomeKitInvitation);
  if (v184 >> 60 != 15)
  {
LABEL_102:
    sub_1AD004118(v185, v182);
    sub_1AD004118(v186, v184);
    a2 = v252;
    v112 = v292;
    v108 = v293;
    v97 = v295;
    goto LABEL_33;
  }
  sub_1AD004118(v185, v182);
  sub_1AD0D3D2C(v99, (uint64_t)v104, type metadata accessor for IDSHomeKitInvitation);
  v97 = v295;
  sub_1AD0D3D2C(v252, (uint64_t)v295, type metadata accessor for IDSHomeKitInvitation);
LABEL_104:
  v189 = v267[13];
  v190 = &v104[v189];
  v191 = *(_QWORD *)&v104[v189 + 24];
  if (v191 == 1)
    goto LABEL_169;
  v192 = &v97[v189];
  v193 = *((_QWORD *)v192 + 3);
  if (v193 == 1)
    goto LABEL_169;
  v194 = *((_QWORD *)v190 + 2);
  v195 = *((_QWORD *)v192 + 2);
  if (!v191)
  {
    sub_1AD003E48(*((_QWORD *)v190 + 2), 0);
    sub_1AD003E48(v195, v193);
    sub_1AD066230((uint64_t)v295, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v288, type metadata accessor for IDSHomeKitInvitation);
    if (!v193)
      goto LABEL_113;
    sub_1AD003F24(v194, 0);
    v196 = v195;
    v197 = v193;
    goto LABEL_115;
  }
  if (!v193)
  {
    sub_1AD003E48(*((_QWORD *)v190 + 2), v191);
    sub_1AD003E48(v195, 0);
    sub_1AD066230((uint64_t)v295, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v288, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD003F24(v194, v191);
    v196 = v195;
    v197 = 0;
LABEL_115:
    sub_1AD003F24(v196, v197);
    a2 = v252;
    v99 = v296;
    v112 = v292;
    v108 = v293;
    goto LABEL_35;
  }
  if (v194 == v195 && v191 == v193)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v295, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v288, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD003F24(v194, v191);
LABEL_113:
    v112 = v292;
    sub_1AD0D3D2C(v296, (uint64_t)v292, type metadata accessor for IDSHomeKitInvitation);
    v108 = v293;
    sub_1AD0D3D2C(v252, (uint64_t)v293, type metadata accessor for IDSHomeKitInvitation);
    goto LABEL_117;
  }
  v198 = sub_1AD63C2A8();
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v295, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD066230((uint64_t)v288, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD003F24(v194, v191);
  v99 = v296;
  v112 = v292;
  sub_1AD0D3D2C(v296, (uint64_t)v292, type metadata accessor for IDSHomeKitInvitation);
  a2 = v252;
  v108 = v293;
  sub_1AD0D3D2C(v252, (uint64_t)v293, type metadata accessor for IDSHomeKitInvitation);
  v114 = v287;
  if ((v198 & 1) == 0)
  {
LABEL_36:
    sub_1AD066230((uint64_t)v108, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v112, type metadata accessor for IDSHomeKitInvitation);
LABEL_37:
    v115 = v285;
    sub_1AD0D3D2C(v99, (uint64_t)v285, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v114, type metadata accessor for IDSHomeKitInvitation);
    v117 = v283;
    v116 = v284;
    v118 = v282;
    v119 = v286;
LABEL_38:
    sub_1AD066230((uint64_t)v114, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v115, type metadata accessor for IDSHomeKitInvitation);
LABEL_39:
    sub_1AD0D3D2C(v99, (uint64_t)v117, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v119, type metadata accessor for IDSHomeKitInvitation);
    goto LABEL_40;
  }
LABEL_117:
  v199 = v267[14];
  v200 = (uint64_t)&v112[v199];
  v201 = (uint64_t)&v108[v199];
  v202 = v258;
  v203 = (uint64_t)&v258[*(int *)(v261 + 48)];
  sub_1ACFF64C0(v200, (uint64_t)v258, &qword_1ED2E7140);
  sub_1ACFF64C0(v201, v203, &qword_1ED2E7140);
  if (v172((uint64_t)v202, 1, v262) == 1)
  {
    sub_1AD066230((uint64_t)v293, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v292, type metadata accessor for IDSHomeKitInvitation);
    if (v172(v203, 1, v262) == 1)
    {
      sub_1AD009758((uint64_t)v258, &qword_1ED2E7140);
      v115 = v285;
      sub_1AD0D3D2C(v296, (uint64_t)v285, type metadata accessor for IDSHomeKitInvitation);
      v114 = v287;
      sub_1AD0D3D2C(v252, (uint64_t)v287, type metadata accessor for IDSHomeKitInvitation);
      goto LABEL_124;
    }
    goto LABEL_122;
  }
  sub_1ACFF64C0((uint64_t)v258, (uint64_t)v257, &qword_1ED2E7140);
  if (v172(v203, 1, v262) == 1)
  {
    sub_1AD066230((uint64_t)v293, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v292, type metadata accessor for IDSHomeKitInvitation);
    (*(void (**)(_BYTE *, uint64_t))(v264 + 8))(v257, v262);
LABEL_122:
    sub_1AD009758((uint64_t)v258, (uint64_t *)&unk_1ED2E7130);
    a2 = v252;
    v99 = v296;
    v114 = v287;
    goto LABEL_37;
  }
  v204 = v264;
  v205 = v259;
  v206 = v262;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v264 + 32))(v259, v203, v262);
  sub_1ACFF9724((unint64_t *)&qword_1EECD22B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  v207 = v257;
  v208 = sub_1AD63B738();
  v209 = *(void (**)(_BYTE *, uint64_t))(v204 + 8);
  v209(v205, v206);
  sub_1AD066230((uint64_t)v293, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD066230((uint64_t)v292, type metadata accessor for IDSHomeKitInvitation);
  v209(v207, v206);
  sub_1AD009758((uint64_t)v258, &qword_1ED2E7140);
  v99 = v296;
  v115 = v285;
  sub_1AD0D3D2C(v296, (uint64_t)v285, type metadata accessor for IDSHomeKitInvitation);
  a2 = v252;
  v114 = v287;
  sub_1AD0D3D2C(v252, (uint64_t)v287, type metadata accessor for IDSHomeKitInvitation);
  v117 = v283;
  v116 = v284;
  v118 = v282;
  v119 = v286;
  if ((v208 & 1) == 0)
    goto LABEL_38;
LABEL_124:
  v210 = v267[15];
  v211 = (uint64_t)&v114[v210];
  v212 = (uint64_t)v268;
  v213 = (uint64_t)&v268[*(int *)(v254 + 48)];
  sub_1ACFF64C0((uint64_t)&v115[v210], (uint64_t)v268, (uint64_t *)&unk_1EECDB370);
  sub_1ACFF64C0(v211, v213, (uint64_t *)&unk_1EECDB370);
  v214 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v255 + 48);
  if (v214(v212, 1, v256) != 1)
  {
    sub_1ACFF64C0((uint64_t)v268, (uint64_t)v251, (uint64_t *)&unk_1EECDB370);
    if (v214(v213, 1, v256) != 1)
    {
      v215 = v253;
      sub_1AD0CE1D8(v213, (uint64_t)v253);
      v216 = (uint64_t)v251;
      v217 = sub_1AD4E9140((uint64_t)v251, (uint64_t)v215);
      sub_1AD066230((uint64_t)v215, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
      sub_1AD066230((uint64_t)v287, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD066230((uint64_t)v285, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD066230(v216, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
      sub_1AD009758((uint64_t)v268, (uint64_t *)&unk_1EECDB370);
      v99 = v296;
      v117 = v283;
      sub_1AD0D3D2C(v296, (uint64_t)v283, type metadata accessor for IDSHomeKitInvitation);
      a2 = v252;
      v119 = v286;
      sub_1AD0D3D2C(v252, (uint64_t)v286, type metadata accessor for IDSHomeKitInvitation);
      v116 = v284;
      v118 = v282;
      if ((v217 & 1) != 0)
        goto LABEL_131;
LABEL_40:
      sub_1AD066230((uint64_t)v119, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD066230((uint64_t)v117, type metadata accessor for IDSHomeKitInvitation);
LABEL_41:
      sub_1AD0D3D2C(v99, (uint64_t)v118, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD0D3D2C(a2, (uint64_t)v116, type metadata accessor for IDSHomeKitInvitation);
      goto LABEL_42;
    }
    sub_1AD066230((uint64_t)v287, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v285, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v251, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
    goto LABEL_129;
  }
  sub_1AD066230((uint64_t)v287, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD066230((uint64_t)v285, type metadata accessor for IDSHomeKitInvitation);
  if (v214(v213, 1, v256) != 1)
  {
LABEL_129:
    sub_1AD009758((uint64_t)v268, &qword_1EECDE7B0);
    a2 = v252;
    v99 = v296;
    v117 = v283;
    v116 = v284;
    v118 = v282;
    v119 = v286;
    goto LABEL_39;
  }
  sub_1AD009758((uint64_t)v268, (uint64_t *)&unk_1EECDB370);
  v117 = v283;
  sub_1AD0D3D2C(v296, (uint64_t)v283, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD0D3D2C(v252, (uint64_t)v286, type metadata accessor for IDSHomeKitInvitation);
LABEL_131:
  v218 = v267[16];
  v219 = &v117[v218];
  v220 = *(_QWORD *)&v117[v218 + 24];
  if (v220 == 1)
    goto LABEL_169;
  v221 = &v286[v218];
  v222 = *((_QWORD *)v221 + 3);
  if (v222 == 1)
    goto LABEL_169;
  v223 = *((_QWORD *)v219 + 2);
  v224 = *((_QWORD *)v221 + 2);
  if (!v220)
  {
    sub_1AD003E48(*((_QWORD *)v219 + 2), 0);
    sub_1AD003E48(v224, v222);
    sub_1AD066230((uint64_t)v286, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v283, type metadata accessor for IDSHomeKitInvitation);
    if (!v222)
      goto LABEL_140;
    sub_1AD003F24(v223, 0);
    v225 = v224;
    v226 = v222;
    goto LABEL_142;
  }
  if (!v222)
  {
    sub_1AD003E48(*((_QWORD *)v219 + 2), v220);
    sub_1AD003E48(v224, 0);
    sub_1AD066230((uint64_t)v286, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v283, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD003F24(v223, v220);
    v225 = v224;
    v226 = 0;
LABEL_142:
    sub_1AD003F24(v225, v226);
    a2 = v252;
    v99 = v296;
    v116 = v284;
    v118 = v282;
    goto LABEL_41;
  }
  if (v223 != v224 || v220 != v222)
  {
    v227 = sub_1AD63C2A8();
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v286, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v283, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD003F24(v223, v220);
    v99 = v296;
    v118 = v282;
    sub_1AD0D3D2C(v296, (uint64_t)v282, type metadata accessor for IDSHomeKitInvitation);
    a2 = v252;
    v116 = v284;
    sub_1AD0D3D2C(v252, (uint64_t)v284, type metadata accessor for IDSHomeKitInvitation);
    if ((v227 & 1) != 0)
      goto LABEL_144;
LABEL_42:
    sub_1AD066230((uint64_t)v116, type metadata accessor for IDSHomeKitInvitation);
    sub_1AD066230((uint64_t)v118, type metadata accessor for IDSHomeKitInvitation);
    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v286, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD066230((uint64_t)v283, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD003F24(v223, v220);
LABEL_140:
  v118 = v282;
  sub_1AD0D3D2C(v296, (uint64_t)v282, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD0D3D2C(v252, (uint64_t)v284, type metadata accessor for IDSHomeKitInvitation);
LABEL_144:
  v228 = &v118[v267[17]];
  if ((v228[25] & 1) != 0)
    goto LABEL_169;
  v229 = *((_QWORD *)v228 + 2);
  v230 = v228[24];
  sub_1AD066230((uint64_t)v282, type metadata accessor for IDSHomeKitInvitation);
  v231 = &v284[v267[17]];
  if ((v231[25] & 1) != 0)
    goto LABEL_169;
  v232 = *((_QWORD *)v231 + 2);
  v233 = v231[24];
  sub_1AD066230((uint64_t)v284, type metadata accessor for IDSHomeKitInvitation);
  if ((v230 & 1) == 0)
  {
    a2 = v252;
    v99 = v296;
    if ((v233 & 1) == 0)
    {
      v120 = v280;
      sub_1AD0D3D2C(v296, (uint64_t)v280, type metadata accessor for IDSHomeKitInvitation);
      v121 = v281;
      sub_1AD0D3D2C(a2, (uint64_t)v281, type metadata accessor for IDSHomeKitInvitation);
      if (v229 == v232)
        goto LABEL_152;
LABEL_44:
      sub_1AD066230((uint64_t)v121, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD066230((uint64_t)v120, type metadata accessor for IDSHomeKitInvitation);
      goto LABEL_45;
    }
LABEL_43:
    v120 = v280;
    sub_1AD0D3D2C(v99, (uint64_t)v280, type metadata accessor for IDSHomeKitInvitation);
    v121 = v281;
    sub_1AD0D3D2C(a2, (uint64_t)v281, type metadata accessor for IDSHomeKitInvitation);
    goto LABEL_44;
  }
  a2 = v252;
  v99 = v296;
  if ((v233 & 1) == 0)
    goto LABEL_43;
  v120 = v280;
  sub_1AD0D3D2C(v296, (uint64_t)v280, type metadata accessor for IDSHomeKitInvitation);
  sub_1AD0D3D2C(a2, (uint64_t)v281, type metadata accessor for IDSHomeKitInvitation);
LABEL_152:
  v234 = &v120[v267[18]];
  if ((v234[25] & 1) != 0)
    goto LABEL_169;
  v235 = *((_QWORD *)v234 + 2);
  v236 = v234[24];
  sub_1AD066230((uint64_t)v280, type metadata accessor for IDSHomeKitInvitation);
  v237 = &v281[v267[18]];
  if ((v237[25] & 1) != 0)
    goto LABEL_169;
  v238 = *((_QWORD *)v237 + 2);
  v239 = v237[24];
  sub_1AD066230((uint64_t)v281, type metadata accessor for IDSHomeKitInvitation);
  if ((v236 & 1) == 0)
  {
    a2 = v252;
    v99 = v296;
    if ((v239 & 1) == 0)
    {
      v122 = v274;
      sub_1AD0D3D2C(v296, v274, type metadata accessor for IDSHomeKitInvitation);
      v123 = v273;
      sub_1AD0D3D2C(a2, v273, type metadata accessor for IDSHomeKitInvitation);
      if (v235 == v238)
        goto LABEL_160;
LABEL_46:
      sub_1AD066230(v123, type metadata accessor for IDSHomeKitInvitation);
      sub_1AD066230(v122, type metadata accessor for IDSHomeKitInvitation);
      goto LABEL_47;
    }
LABEL_45:
    v122 = v274;
    sub_1AD0D3D2C(v99, v274, type metadata accessor for IDSHomeKitInvitation);
    v123 = v273;
    sub_1AD0D3D2C(a2, v273, type metadata accessor for IDSHomeKitInvitation);
    goto LABEL_46;
  }
  a2 = v252;
  v99 = v296;
  if ((v239 & 1) == 0)
    goto LABEL_45;
  v122 = v274;
  sub_1AD0D3D2C(v296, v274, type metadata accessor for IDSHomeKitInvitation);
  v123 = v273;
  sub_1AD0D3D2C(a2, v273, type metadata accessor for IDSHomeKitInvitation);
LABEL_160:
  v240 = v267[19];
  v241 = v122 + v240;
  v242 = *(_QWORD *)(v122 + v240 + 24);
  if (v242 >> 60 != 11)
  {
    v243 = v123 + v240;
    v244 = *(_QWORD *)(v243 + 24);
    if (v244 >> 60 != 11)
    {
      v245 = v122;
      v246 = *(_QWORD *)(v241 + 16);
      v247 = *(_QWORD *)(v243 + 16);
      if (v242 >> 60 == 15)
      {
        sub_1AD285EE4(v246, v242);
        sub_1AD285EE4(v247, v244);
        sub_1AD066230(v123, type metadata accessor for IDSHomeKitInvitation);
        sub_1AD066230(v245, type metadata accessor for IDSHomeKitInvitation);
        if (v244 >> 60 == 15)
        {
          sub_1AD004118(v246, v242);
          v124 = 1;
          return v124 & 1;
        }
      }
      else
      {
        sub_1AD285EE4(v246, v242);
        sub_1AD285EE4(v246, v242);
        sub_1AD285EE4(v247, v244);
        if (v244 >> 60 != 15)
        {
          sub_1AD3DB778(v246, v242);
          v124 = v248;
          sub_1AD009794(v247, v244);
          sub_1AD009794(v246, v242);
          sub_1AD066230(v123, type metadata accessor for IDSHomeKitInvitation);
          sub_1AD066230(v245, type metadata accessor for IDSHomeKitInvitation);
          sub_1AD004118(v246, v242);
          return v124 & 1;
        }
        sub_1AD066230(v123, type metadata accessor for IDSHomeKitInvitation);
        sub_1AD066230(v245, type metadata accessor for IDSHomeKitInvitation);
        sub_1AD009794(v246, v242);
      }
      sub_1AD004118(v246, v242);
      sub_1AD004118(v247, v244);
LABEL_47:
      v124 = 0;
      return v124 & 1;
    }
  }
LABEL_169:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDC6F8);
}

uint64_t sub_1AD4490C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD289350, (uint64_t (*)(void))sub_1AD289514);
}

uint64_t sub_1AD4490DC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD7108, type metadata accessor for IDSHomeKitInvitation, (uint64_t)&unk_1AD650CC8);
  result = sub_1ACFF9724(&qword_1EECD70D0, type metadata accessor for IDSHomeKitInvitation, (uint64_t)&unk_1AD650CF0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD449138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2893C4, (uint64_t (*)(void))sub_1AD289558);
}

uint64_t sub_1AD44914C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD289680, (uint64_t (*)(void))sub_1AD289764);
}

uint64_t sub_1AD449160(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD3620, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule, (uint64_t)&unk_1AD650DB8);
  result = sub_1ACFF9724(&qword_1EECD3658, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule, (uint64_t)&unk_1AD650DE0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD4491C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD4491FC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD44923C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1AD003180(v1, v2);
}

uint64_t sub_1AD4492C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1AD003180(v1, v2);
}

uint64_t sub_1AD449314(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  type metadata accessor for IDSHomeKitInvitation(0);
  return sub_1AD003180(v1, v2);
}

uint64_t sub_1AD449378(uint64_t a1)
{
  return sub_1AD003180(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1AD4493A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 25);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  *(_BYTE *)(a2 + 25) = v5;
  return swift_retain();
}

uint64_t sub_1AD4493D4(uint64_t a1)
{
  return sub_1AD003180(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1AD449404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  v5 = *(_BYTE *)(a1 + 57);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  *(_BYTE *)(a2 + 25) = v5;
  return swift_retain();
}

uint64_t sub_1AD449434(uint64_t a1)
{
  return sub_1AD003180(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1AD449464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_BYTE *)(a1 + 88);
  v5 = *(_BYTE *)(a1 + 89);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  *(_BYTE *)(a2 + 25) = v5;
  return swift_retain();
}

uint64_t sub_1AD449490(uint64_t a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _OWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  _OWORD *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _OWORD *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  unint64_t v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  _OWORD *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  _OWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _OWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v137;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return a1;
  }
  v8 = a2[1];
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v8;
  v9 = a2 + 2;
  v10 = a2[3];
  swift_retain();
  if (v10 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v9;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v9;
    *(_QWORD *)(a1 + 24) = v10;
    swift_bridgeObjectRetain();
  }
  v11 = a3[5];
  v12 = (void *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = sub_1AD63B03C();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[6];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  if (v20)
  {
    *v18 = *v19;
    v18[1] = v20;
    v21 = v19[3];
    v18[2] = v19[2];
    v18[3] = v21;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v22;
  }
  v23 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v24 = a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = *((_QWORD *)v25 + 2);
  *(_QWORD *)(v24 + 8) = *((_QWORD *)v25 + 1);
  *(_QWORD *)(v24 + 16) = v27;
  *(_WORD *)(v24 + 24) = *((_WORD *)v25 + 12);
  v28 = a3[9];
  v29 = a3[10];
  v30 = *((_BYTE *)a2 + v28);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(a1 + v28) = v30;
  v31 = a1 + v29;
  v32 = (char *)a2 + v29;
  v33 = *(_QWORD *)((char *)a2 + v29);
  swift_retain();
  if (v33 == 1)
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  else
  {
    v34 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = v33;
    *(_QWORD *)(v31 + 8) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v35 = a3[11];
  v36 = (void *)(a1 + v35);
  v37 = (char *)a2 + v35;
  v38 = sub_1AD63B084();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  if (v40(v37, 1, v38))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  v42 = a3[12];
  v43 = a1 + v42;
  v44 = (_QWORD *)((char *)a2 + v42);
  v45 = v44[1];
  *(_QWORD *)v43 = *v44;
  *(_QWORD *)(v43 + 8) = v45;
  v46 = v44 + 2;
  v47 = v44[3];
  swift_retain();
  if (v47 >> 60 == 11 || v47 >> 60 == 15)
  {
    *(_OWORD *)(v43 + 16) = *v46;
  }
  else
  {
    v48 = *(_QWORD *)v46;
    sub_1AD0040A0(v48, v47);
    *(_QWORD *)(v43 + 16) = v48;
    *(_QWORD *)(v43 + 24) = v47;
  }
  v49 = a3[13];
  v50 = a1 + v49;
  v51 = (_QWORD *)((char *)a2 + v49);
  v52 = v51[1];
  *(_QWORD *)v50 = *v51;
  *(_QWORD *)(v50 + 8) = v52;
  v53 = v51 + 2;
  v54 = v51[3];
  swift_retain();
  if (v54 == 1)
  {
    *(_OWORD *)(v50 + 16) = *v53;
  }
  else
  {
    *(_QWORD *)(v50 + 16) = *(_QWORD *)v53;
    *(_QWORD *)(v50 + 24) = v54;
    swift_bridgeObjectRetain();
  }
  v55 = a3[14];
  v56 = (void *)(a1 + v55);
  v57 = (char *)a2 + v55;
  if (v40((char *)a2 + v55, 1, v38))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v56, v57, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v56, 0, 1, v38);
  }
  v59 = a3[15];
  v60 = (char *)(a1 + v59);
  v61 = (char *)a2 + v59;
  v62 = type metadata accessor for CloudKitSharingToken();
  v63 = *(_QWORD *)(v62 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    v137 = v63;
    *(_DWORD *)v60 = *(_DWORD *)v61;
    *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
    v65 = *((_QWORD *)v61 + 4);
    *((_OWORD *)v60 + 1) = *((_OWORD *)v61 + 1);
    *((_QWORD *)v60 + 4) = v65;
    v66 = (uint64_t *)(v61 + 40);
    v67 = *((_QWORD *)v61 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v67 >> 60 == 11 || v67 >> 60 == 15)
    {
      *(_OWORD *)(v60 + 40) = *(_OWORD *)v66;
      v68 = *((_QWORD *)v61 + 9);
      if (v68)
        goto LABEL_33;
    }
    else
    {
      v74 = *v66;
      sub_1AD0040A0(*v66, v67);
      *((_QWORD *)v60 + 5) = v74;
      *((_QWORD *)v60 + 6) = v67;
      v68 = *((_QWORD *)v61 + 9);
      if (v68)
      {
LABEL_33:
        v69 = *((_DWORD *)v61 + 15);
        *((_DWORD *)v60 + 14) = *((_DWORD *)v61 + 14);
        *((_DWORD *)v60 + 15) = v69;
        v60[64] = v61[64];
        v70 = *((_QWORD *)v61 + 10);
        *((_QWORD *)v60 + 9) = v68;
        *((_QWORD *)v60 + 10) = v70;
        v71 = v61 + 88;
        v72 = *((_QWORD *)v61 + 12);
        swift_retain();
        if (v72 >> 60 == 15)
        {
          *(_OWORD *)(v60 + 88) = *v71;
        }
        else
        {
          v73 = *(_QWORD *)v71;
          sub_1AD0040A0(v73, v72);
          *((_QWORD *)v60 + 11) = v73;
          *((_QWORD *)v60 + 12) = v72;
        }
LABEL_38:
        v76 = *((_QWORD *)v61 + 14);
        *((_QWORD *)v60 + 13) = *((_QWORD *)v61 + 13);
        *((_QWORD *)v60 + 14) = v76;
        v77 = v61 + 120;
        v78 = *((_QWORD *)v61 + 16);
        swift_retain();
        if (v78 >> 60 == 15)
        {
          *(_OWORD *)(v60 + 120) = *v77;
        }
        else
        {
          v79 = *(_QWORD *)v77;
          sub_1AD0040A0(v79, v78);
          *((_QWORD *)v60 + 15) = v79;
          *((_QWORD *)v60 + 16) = v78;
        }
        v80 = *((_QWORD *)v61 + 18);
        *((_QWORD *)v60 + 17) = *((_QWORD *)v61 + 17);
        *((_QWORD *)v60 + 18) = v80;
        v81 = (uint64_t *)(v61 + 152);
        v82 = *((_QWORD *)v61 + 20);
        swift_retain();
        if (v82 >> 60 == 11 || v82 >> 60 == 15)
        {
          *(_OWORD *)(v60 + 152) = *(_OWORD *)v81;
        }
        else
        {
          v83 = *v81;
          sub_1AD0040A0(*v81, v82);
          *((_QWORD *)v60 + 19) = v83;
          *((_QWORD *)v60 + 20) = v82;
        }
        v84 = *((_QWORD *)v61 + 21);
        if (v84)
        {
          v85 = *((_QWORD *)v61 + 22);
          *((_QWORD *)v60 + 21) = v84;
          *((_QWORD *)v60 + 22) = v85;
          v86 = v61 + 184;
          v87 = *((_QWORD *)v61 + 24);
          swift_retain();
          if (v87 >> 60 == 15)
          {
            *(_OWORD *)(v60 + 184) = *v86;
          }
          else
          {
            v90 = *(_QWORD *)v86;
            sub_1AD0040A0(v90, v87);
            *((_QWORD *)v60 + 23) = v90;
            *((_QWORD *)v60 + 24) = v87;
          }
          *((_DWORD *)v60 + 50) = *((_DWORD *)v61 + 50);
          v91 = *((_QWORD *)v61 + 27);
          *((_QWORD *)v60 + 26) = *((_QWORD *)v61 + 26);
          *((_QWORD *)v60 + 27) = v91;
          v92 = v61 + 224;
          v93 = *((_QWORD *)v61 + 29);
          swift_retain();
          if (v93 >> 60 == 15)
          {
            *((_OWORD *)v60 + 14) = *v92;
          }
          else
          {
            v94 = *(_QWORD *)v92;
            sub_1AD0040A0(v94, v93);
            *((_QWORD *)v60 + 28) = v94;
            *((_QWORD *)v60 + 29) = v93;
          }
        }
        else
        {
          v88 = *(_OWORD *)(v61 + 216);
          *(_OWORD *)(v60 + 200) = *(_OWORD *)(v61 + 200);
          *(_OWORD *)(v60 + 216) = v88;
          *((_QWORD *)v60 + 29) = *((_QWORD *)v61 + 29);
          v89 = *(_OWORD *)(v61 + 184);
          *(_OWORD *)(v60 + 168) = *(_OWORD *)(v61 + 168);
          *(_OWORD *)(v60 + 184) = v89;
        }
        v95 = *((_QWORD *)v61 + 32);
        *((_OWORD *)v60 + 15) = *((_OWORD *)v61 + 15);
        *((_QWORD *)v60 + 32) = v95;
        v96 = (uint64_t *)(v61 + 264);
        v97 = *((_QWORD *)v61 + 34);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v97 >> 60 == 11 || v97 >> 60 == 15)
        {
          *(_OWORD *)(v60 + 264) = *(_OWORD *)v96;
        }
        else
        {
          v98 = *v96;
          sub_1AD0040A0(*v96, v97);
          *((_QWORD *)v60 + 33) = v98;
          *((_QWORD *)v60 + 34) = v97;
        }
        v99 = *(int *)(v62 + 24);
        v100 = &v60[v99];
        v101 = &v61[v99];
        v102 = *(_QWORD *)&v61[v99 + 8];
        *(_QWORD *)v100 = *(_QWORD *)&v61[v99];
        *((_QWORD *)v100 + 1) = v102;
        swift_retain();
        v103 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v104 = &v100[v103];
        v105 = &v101[v103];
        v106 = sub_1AD63AF28();
        v107 = *(_QWORD *)(v106 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
        {
          v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v104, v105, v106);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
        }
        v109 = *(int *)(v62 + 28);
        v110 = &v60[v109];
        v111 = &v61[v109];
        v112 = *((_QWORD *)v111 + 1);
        *(_QWORD *)v110 = *(_QWORD *)v111;
        *((_QWORD *)v110 + 1) = v112;
        v113 = v111 + 16;
        v114 = *((_QWORD *)v111 + 3);
        swift_retain();
        if (v114 == 1)
        {
          *((_OWORD *)v110 + 1) = *v113;
        }
        else
        {
          *((_QWORD *)v110 + 2) = *(_QWORD *)v113;
          *((_QWORD *)v110 + 3) = v114;
          swift_bridgeObjectRetain();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v60, 0, 1, v62);
        goto LABEL_64;
      }
    }
    v75 = *(_OWORD *)(v61 + 72);
    *(_OWORD *)(v60 + 56) = *(_OWORD *)(v61 + 56);
    *(_OWORD *)(v60 + 72) = v75;
    *(_OWORD *)(v60 + 88) = *(_OWORD *)(v61 + 88);
    goto LABEL_38;
  }
  v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
LABEL_64:
  v115 = a3[16];
  v116 = a1 + v115;
  v117 = (_QWORD *)((char *)a2 + v115);
  v118 = v117[1];
  *(_QWORD *)v116 = *v117;
  *(_QWORD *)(v116 + 8) = v118;
  v119 = v117 + 2;
  v120 = v117[3];
  swift_retain();
  if (v120 == 1)
  {
    *(_OWORD *)(v116 + 16) = *v119;
  }
  else
  {
    *(_QWORD *)(v116 + 16) = *(_QWORD *)v119;
    *(_QWORD *)(v116 + 24) = v120;
    swift_bridgeObjectRetain();
  }
  v121 = a3[17];
  v122 = a3[18];
  v123 = a1 + v121;
  v124 = (char *)a2 + v121;
  v125 = *((_QWORD *)v124 + 1);
  *(_QWORD *)v123 = *(_QWORD *)v124;
  *(_QWORD *)(v123 + 8) = v125;
  *(_QWORD *)(v123 + 16) = *((_QWORD *)v124 + 2);
  *(_WORD *)(v123 + 24) = *((_WORD *)v124 + 12);
  v126 = a1 + v122;
  v127 = (char *)a2 + v122;
  v128 = *((_QWORD *)v127 + 1);
  *(_QWORD *)v126 = *(_QWORD *)v127;
  *(_QWORD *)(v126 + 8) = v128;
  *(_QWORD *)(v126 + 16) = *((_QWORD *)v127 + 2);
  *(_WORD *)(v126 + 24) = *((_WORD *)v127 + 12);
  v129 = a3[19];
  v130 = a1 + v129;
  v131 = (_QWORD *)((char *)a2 + v129);
  v132 = v131[1];
  *(_QWORD *)v130 = *v131;
  *(_QWORD *)(v130 + 8) = v132;
  v133 = v131 + 2;
  v134 = v131[3];
  swift_retain();
  swift_retain();
  swift_retain();
  if (v134 >> 60 == 11 || v134 >> 60 == 15)
  {
    *(_OWORD *)(v130 + 16) = *(_OWORD *)v133;
  }
  else
  {
    v135 = *v133;
    sub_1AD0040A0(*v133, v134);
    *(_QWORD *)(v130 + 16) = v135;
    *(_QWORD *)(v130 + 24) = v134;
  }
  return a1;
}

uint64_t sub_1AD449D14(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  unint64_t v33;

  swift_release();
  if (*(_QWORD *)(a1 + 24) != 1)
    swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1AD63B03C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(a1 + a2[6] + 8))
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release();
  if (*(_QWORD *)(a1 + a2[10]) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = a1 + a2[11];
  v8 = sub_1AD63B084();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = a1 + a2[12];
  swift_release();
  v12 = *(_QWORD *)(v11 + 24);
  if (v12 >> 60 != 15 && (v12 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(*(_QWORD *)(v11 + 16), v12);
  v14 = a1 + a2[13];
  swift_release();
  if (*(_QWORD *)(v14 + 24) != 1)
    swift_bridgeObjectRelease();
  v15 = a1 + a2[14];
  if (!v10(v15, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v8);
  v16 = (uint64_t *)(a1 + a2[15]);
  v17 = type metadata accessor for CloudKitSharingToken();
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v18 = v16[6];
    if (v18 >> 60 != 15 && (v18 & 0xF000000000000000) != 0xB000000000000000)
      sub_1AD00412C(v16[5], v18);
    if (v16[9])
    {
      swift_release();
      v19 = v16[12];
      if (v19 >> 60 != 15)
        sub_1AD00412C(v16[11], v19);
    }
    swift_release();
    v20 = v16[16];
    if (v20 >> 60 != 15)
      sub_1AD00412C(v16[15], v20);
    swift_release();
    v21 = v16[20];
    if (v21 >> 60 != 15 && (v21 & 0xF000000000000000) != 0xB000000000000000)
      sub_1AD00412C(v16[19], v21);
    if (v16[21])
    {
      swift_release();
      v22 = v16[24];
      if (v22 >> 60 != 15)
        sub_1AD00412C(v16[23], v22);
      swift_release();
      v23 = v16[29];
      if (v23 >> 60 != 15)
        sub_1AD00412C(v16[28], v23);
    }
    swift_bridgeObjectRelease();
    swift_release();
    v24 = v16[34];
    if (v24 >> 60 != 15 && (v24 & 0xF000000000000000) != 0xB000000000000000)
      sub_1AD00412C(v16[33], v24);
    v25 = (char *)v16 + *(int *)(v17 + 24);
    swift_release();
    v26 = &v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28)];
    v27 = sub_1AD63AF28();
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
    v29 = (char *)v16 + *(int *)(v17 + 28);
    swift_release();
    if (*((_QWORD *)v29 + 3) != 1)
      swift_bridgeObjectRelease();
  }
  v30 = a1 + a2[16];
  swift_release();
  if (*(_QWORD *)(v30 + 24) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v31 = a1 + a2[19];
  result = swift_release();
  v33 = *(_QWORD *)(v31 + 24);
  if (v33 >> 60 != 15 && (v33 & 0xF000000000000000) != 0xB000000000000000)
    return sub_1AD00412C(*(_QWORD *)(v31 + 16), v33);
  return result;
}

uint64_t sub_1AD44A124(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD *v58;
  _DWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  _OWORD *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  _OWORD *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  unint64_t v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  _QWORD *v109;
  uint64_t v110;
  _OWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  _OWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v135;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 2;
  v8 = a2[3];
  swift_retain();
  if (v8 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v7;
    *(_QWORD *)(a1 + 24) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = sub_1AD63B03C();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  if (v18)
  {
    *v16 = *v17;
    v16[1] = v18;
    v19 = v17[3];
    v16[2] = v17[2];
    v16[3] = v19;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v20;
  }
  v21 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v22 = a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v23;
  v25 = *((_QWORD *)v23 + 2);
  *(_QWORD *)(v22 + 8) = *((_QWORD *)v23 + 1);
  *(_QWORD *)(v22 + 16) = v25;
  *(_WORD *)(v22 + 24) = *((_WORD *)v23 + 12);
  v26 = a3[9];
  v27 = a3[10];
  v28 = *((_BYTE *)a2 + v26);
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(a1 + v26) = v28;
  v29 = a1 + v27;
  v30 = (char *)a2 + v27;
  v31 = *(_QWORD *)((char *)a2 + v27);
  swift_retain();
  if (v31 == 1)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  else
  {
    v32 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = v31;
    *(_QWORD *)(v29 + 8) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v33 = a3[11];
  v34 = (void *)(a1 + v33);
  v35 = (char *)a2 + v33;
  v36 = sub_1AD63B084();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v38(v35, 1, v36))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v40 = a3[12];
  v41 = a1 + v40;
  v42 = (_QWORD *)((char *)a2 + v40);
  v43 = v42[1];
  *(_QWORD *)v41 = *v42;
  *(_QWORD *)(v41 + 8) = v43;
  v44 = v42 + 2;
  v45 = v42[3];
  swift_retain();
  if (v45 >> 60 == 11 || v45 >> 60 == 15)
  {
    *(_OWORD *)(v41 + 16) = *v44;
  }
  else
  {
    v46 = *(_QWORD *)v44;
    sub_1AD0040A0(v46, v45);
    *(_QWORD *)(v41 + 16) = v46;
    *(_QWORD *)(v41 + 24) = v45;
  }
  v47 = a3[13];
  v48 = a1 + v47;
  v49 = (_QWORD *)((char *)a2 + v47);
  v50 = v49[1];
  *(_QWORD *)v48 = *v49;
  *(_QWORD *)(v48 + 8) = v50;
  v51 = v49 + 2;
  v52 = v49[3];
  swift_retain();
  if (v52 == 1)
  {
    *(_OWORD *)(v48 + 16) = *v51;
  }
  else
  {
    *(_QWORD *)(v48 + 16) = *(_QWORD *)v51;
    *(_QWORD *)(v48 + 24) = v52;
    swift_bridgeObjectRetain();
  }
  v53 = a3[14];
  v54 = (void *)(a1 + v53);
  v55 = (char *)a2 + v53;
  if (v38((char *)a2 + v53, 1, v36))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v37 + 16))(v54, v55, v36);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v54, 0, 1, v36);
  }
  v57 = a3[15];
  v58 = (_DWORD *)(a1 + v57);
  v59 = (_DWORD *)((char *)a2 + v57);
  v60 = type metadata accessor for CloudKitSharingToken();
  v61 = *(_QWORD *)(v60 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_62;
  }
  v135 = v61;
  *v58 = *v59;
  *((_QWORD *)v58 + 1) = *((_QWORD *)v59 + 1);
  v63 = *((_QWORD *)v59 + 4);
  *((_OWORD *)v58 + 1) = *((_OWORD *)v59 + 1);
  *((_QWORD *)v58 + 4) = v63;
  v64 = (uint64_t *)(v59 + 10);
  v65 = *((_QWORD *)v59 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v65 >> 60 == 11 || v65 >> 60 == 15)
  {
    *(_OWORD *)(v58 + 10) = *(_OWORD *)v64;
    v66 = *((_QWORD *)v59 + 9);
    if (v66)
      goto LABEL_31;
LABEL_35:
    v73 = *(_OWORD *)(v59 + 18);
    *(_OWORD *)(v58 + 14) = *(_OWORD *)(v59 + 14);
    *(_OWORD *)(v58 + 18) = v73;
    *(_OWORD *)(v58 + 22) = *(_OWORD *)(v59 + 22);
    goto LABEL_36;
  }
  v72 = *v64;
  sub_1AD0040A0(*v64, v65);
  *((_QWORD *)v58 + 5) = v72;
  *((_QWORD *)v58 + 6) = v65;
  v66 = *((_QWORD *)v59 + 9);
  if (!v66)
    goto LABEL_35;
LABEL_31:
  v67 = v59[15];
  v58[14] = v59[14];
  v58[15] = v67;
  *((_BYTE *)v58 + 64) = *((_BYTE *)v59 + 64);
  v68 = *((_QWORD *)v59 + 10);
  *((_QWORD *)v58 + 9) = v66;
  *((_QWORD *)v58 + 10) = v68;
  v69 = v59 + 22;
  v70 = *((_QWORD *)v59 + 12);
  swift_retain();
  if (v70 >> 60 == 15)
  {
    *(_OWORD *)(v58 + 22) = *v69;
  }
  else
  {
    v71 = *(_QWORD *)v69;
    sub_1AD0040A0(v71, v70);
    *((_QWORD *)v58 + 11) = v71;
    *((_QWORD *)v58 + 12) = v70;
  }
LABEL_36:
  v74 = *((_QWORD *)v59 + 14);
  *((_QWORD *)v58 + 13) = *((_QWORD *)v59 + 13);
  *((_QWORD *)v58 + 14) = v74;
  v75 = v59 + 30;
  v76 = *((_QWORD *)v59 + 16);
  swift_retain();
  if (v76 >> 60 == 15)
  {
    *(_OWORD *)(v58 + 30) = *v75;
  }
  else
  {
    v77 = *(_QWORD *)v75;
    sub_1AD0040A0(v77, v76);
    *((_QWORD *)v58 + 15) = v77;
    *((_QWORD *)v58 + 16) = v76;
  }
  v78 = *((_QWORD *)v59 + 18);
  *((_QWORD *)v58 + 17) = *((_QWORD *)v59 + 17);
  *((_QWORD *)v58 + 18) = v78;
  v79 = (uint64_t *)(v59 + 38);
  v80 = *((_QWORD *)v59 + 20);
  swift_retain();
  if (v80 >> 60 == 11 || v80 >> 60 == 15)
  {
    *(_OWORD *)(v58 + 38) = *(_OWORD *)v79;
  }
  else
  {
    v81 = *v79;
    sub_1AD0040A0(*v79, v80);
    *((_QWORD *)v58 + 19) = v81;
    *((_QWORD *)v58 + 20) = v80;
  }
  v82 = *((_QWORD *)v59 + 21);
  if (v82)
  {
    v83 = *((_QWORD *)v59 + 22);
    *((_QWORD *)v58 + 21) = v82;
    *((_QWORD *)v58 + 22) = v83;
    v84 = v59 + 46;
    v85 = *((_QWORD *)v59 + 24);
    swift_retain();
    if (v85 >> 60 == 15)
    {
      *(_OWORD *)(v58 + 46) = *v84;
    }
    else
    {
      v88 = *(_QWORD *)v84;
      sub_1AD0040A0(v88, v85);
      *((_QWORD *)v58 + 23) = v88;
      *((_QWORD *)v58 + 24) = v85;
    }
    v58[50] = v59[50];
    v89 = *((_QWORD *)v59 + 27);
    *((_QWORD *)v58 + 26) = *((_QWORD *)v59 + 26);
    *((_QWORD *)v58 + 27) = v89;
    v90 = v59 + 56;
    v91 = *((_QWORD *)v59 + 29);
    swift_retain();
    if (v91 >> 60 == 15)
    {
      *((_OWORD *)v58 + 14) = *v90;
    }
    else
    {
      v92 = *(_QWORD *)v90;
      sub_1AD0040A0(v92, v91);
      *((_QWORD *)v58 + 28) = v92;
      *((_QWORD *)v58 + 29) = v91;
    }
  }
  else
  {
    v86 = *(_OWORD *)(v59 + 54);
    *(_OWORD *)(v58 + 50) = *(_OWORD *)(v59 + 50);
    *(_OWORD *)(v58 + 54) = v86;
    *((_QWORD *)v58 + 29) = *((_QWORD *)v59 + 29);
    v87 = *(_OWORD *)(v59 + 46);
    *(_OWORD *)(v58 + 42) = *(_OWORD *)(v59 + 42);
    *(_OWORD *)(v58 + 46) = v87;
  }
  v93 = *((_QWORD *)v59 + 32);
  *((_OWORD *)v58 + 15) = *((_OWORD *)v59 + 15);
  *((_QWORD *)v58 + 32) = v93;
  v94 = (uint64_t *)(v59 + 66);
  v95 = *((_QWORD *)v59 + 34);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v95 >> 60 == 11 || v95 >> 60 == 15)
  {
    *(_OWORD *)(v58 + 66) = *(_OWORD *)v94;
  }
  else
  {
    v96 = *v94;
    sub_1AD0040A0(*v94, v95);
    *((_QWORD *)v58 + 33) = v96;
    *((_QWORD *)v58 + 34) = v95;
  }
  v97 = *(int *)(v60 + 24);
  v98 = (_QWORD *)((char *)v58 + v97);
  v99 = (char *)v59 + v97;
  v100 = *(_QWORD *)((char *)v59 + v97 + 8);
  *v98 = *(_QWORD *)((char *)v59 + v97);
  v98[1] = v100;
  swift_retain();
  v101 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v102 = (char *)v98 + v101;
  v103 = &v99[v101];
  v104 = sub_1AD63AF28();
  v105 = *(_QWORD *)(v104 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
  {
    v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v102, v103, v104);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
  }
  v107 = *(int *)(v60 + 28);
  v108 = (char *)v58 + v107;
  v109 = (_QWORD *)((char *)v59 + v107);
  v110 = v109[1];
  *(_QWORD *)v108 = *v109;
  *((_QWORD *)v108 + 1) = v110;
  v111 = v109 + 2;
  v112 = v109[3];
  swift_retain();
  if (v112 == 1)
  {
    *((_OWORD *)v108 + 1) = *v111;
  }
  else
  {
    *((_QWORD *)v108 + 2) = *(_QWORD *)v111;
    *((_QWORD *)v108 + 3) = v112;
    swift_bridgeObjectRetain();
  }
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v58, 0, 1, v60);
LABEL_62:
  v113 = a3[16];
  v114 = a1 + v113;
  v115 = (_QWORD *)((char *)a2 + v113);
  v116 = v115[1];
  *(_QWORD *)v114 = *v115;
  *(_QWORD *)(v114 + 8) = v116;
  v117 = v115 + 2;
  v118 = v115[3];
  swift_retain();
  if (v118 == 1)
  {
    *(_OWORD *)(v114 + 16) = *v117;
  }
  else
  {
    *(_QWORD *)(v114 + 16) = *(_QWORD *)v117;
    *(_QWORD *)(v114 + 24) = v118;
    swift_bridgeObjectRetain();
  }
  v119 = a3[17];
  v120 = a3[18];
  v121 = a1 + v119;
  v122 = (char *)a2 + v119;
  v123 = *((_QWORD *)v122 + 1);
  *(_QWORD *)v121 = *(_QWORD *)v122;
  *(_QWORD *)(v121 + 8) = v123;
  *(_QWORD *)(v121 + 16) = *((_QWORD *)v122 + 2);
  *(_WORD *)(v121 + 24) = *((_WORD *)v122 + 12);
  v124 = a1 + v120;
  v125 = (char *)a2 + v120;
  v126 = *((_QWORD *)v125 + 1);
  *(_QWORD *)v124 = *(_QWORD *)v125;
  *(_QWORD *)(v124 + 8) = v126;
  *(_QWORD *)(v124 + 16) = *((_QWORD *)v125 + 2);
  *(_WORD *)(v124 + 24) = *((_WORD *)v125 + 12);
  v127 = a3[19];
  v128 = a1 + v127;
  v129 = (_QWORD *)((char *)a2 + v127);
  v130 = v129[1];
  *(_QWORD *)v128 = *v129;
  *(_QWORD *)(v128 + 8) = v130;
  v131 = v129 + 2;
  v132 = v129[3];
  swift_retain();
  swift_retain();
  swift_retain();
  if (v132 >> 60 == 11 || v132 >> 60 == 15)
  {
    *(_OWORD *)(v128 + 16) = *(_OWORD *)v131;
  }
  else
  {
    v133 = *v131;
    sub_1AD0040A0(*v131, v132);
    *(_QWORD *)(v128 + 16) = v133;
    *(_QWORD *)(v128 + 24) = v132;
  }
  return a1;
}

_QWORD *sub_1AD44A978(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t *v86;
  unint64_t v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  unint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _OWORD *v132;
  _OWORD *v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t *v137;
  unint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  _OWORD *v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  _OWORD *v162;
  uint64_t v163;
  _OWORD *v164;
  uint64_t v165;
  uint64_t *v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  unint64_t v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  _OWORD *v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t *v192;
  unint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t (*v205)(char *, uint64_t, uint64_t);
  int v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  char *v231;
  uint64_t v232;
  uint64_t *v233;
  unint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int *v253;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = a2[3];
  if (a1[3] == 1)
  {
    if (v7 != 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == 1)
  {
    sub_1AD009758((uint64_t)(a1 + 2), &qword_1ED2E3198);
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_8;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1AD63B03C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_13:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_14:
  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a1 + v17 + 8);
  v21 = *(_QWORD *)((char *)a2 + v17 + 8);
  if (v20)
  {
    if (v21)
    {
      *v18 = *v19;
      v22 = v19[2];
      v18[1] = v19[1];
      v18[2] = v22;
      swift_retain();
      swift_release();
      v18[3] = v19[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD44BE10((uint64_t)v18);
      v24 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v24;
    }
  }
  else if (v21)
  {
    *v18 = *v19;
    v23 = v19[2];
    v18[1] = v19[1];
    v18[2] = v23;
    v18[3] = v19[3];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v25;
  }
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)((char *)a2 + v26 + 8);
  *(_QWORD *)v27 = *(_QWORD *)((char *)a2 + v26);
  *((_QWORD *)v27 + 1) = v29;
  swift_retain();
  swift_release();
  v30 = *((_QWORD *)v28 + 2);
  *((_WORD *)v27 + 12) = *((_WORD *)v28 + 12);
  *((_QWORD *)v27 + 2) = v30;
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v31 = a3[10];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (char *)a2 + v31;
  v34 = *(_QWORD *)((char *)a2 + v31);
  if (*(_QWORD *)((char *)a1 + v31) == 1)
  {
    if (v34 != 1)
    {
      *v32 = v34;
      v32[1] = *((_QWORD *)v33 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v34 == 1)
  {
    sub_1AD44BE40((uint64_t)a1 + v31);
LABEL_27:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    goto LABEL_29;
  }
  *v32 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32[1] = *((_QWORD *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_29:
  v35 = a3[11];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_1AD63B084();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
LABEL_34:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v36, v37, v38);
LABEL_35:
  v253 = a3;
  v44 = a3[12];
  v45 = (_QWORD *)((char *)a1 + v44);
  v46 = (char *)a2 + v44;
  v47 = *(_QWORD *)((char *)a2 + v44 + 8);
  *v45 = *(_QWORD *)((char *)a2 + v44);
  v45[1] = v47;
  swift_retain();
  swift_release();
  v48 = (uint64_t *)(v46 + 16);
  v49 = *((_QWORD *)v46 + 3);
  v50 = v49 & 0xF000000000000000;
  if (v45[3] >> 60 == 11)
  {
    if (v50 == 0xB000000000000000)
      goto LABEL_46;
LABEL_41:
    if (v49 >> 60 != 15)
    {
      v51 = *v48;
      sub_1AD0040A0(*v48, *((_QWORD *)v46 + 3));
      v45[2] = v51;
      v45[3] = v49;
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v50 == 0xB000000000000000)
  {
    sub_1AD009758((uint64_t)(v45 + 2), &qword_1ED2E3250);
LABEL_46:
    *((_OWORD *)v45 + 1) = *(_OWORD *)v48;
    goto LABEL_47;
  }
  if (v45[3] >> 60 == 15)
    goto LABEL_41;
  if (v49 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v45 + 2));
    goto LABEL_46;
  }
  v80 = *v48;
  sub_1AD0040A0(*v48, *((_QWORD *)v46 + 3));
  v81 = v45[2];
  v82 = v45[3];
  v45[2] = v80;
  v45[3] = v49;
  sub_1AD00412C(v81, v82);
LABEL_47:
  v52 = v253[13];
  v53 = (_QWORD *)((char *)a1 + v52);
  v54 = (char *)a2 + v52;
  v55 = *(_QWORD *)((char *)a2 + v52 + 8);
  *v53 = *(_QWORD *)((char *)a2 + v52);
  v53[1] = v55;
  swift_retain();
  swift_release();
  v56 = *((_QWORD *)v54 + 3);
  if (v53[3] == 1)
  {
    if (v56 != 1)
    {
      v53[2] = *((_QWORD *)v54 + 2);
      v53[3] = *((_QWORD *)v54 + 3);
      swift_bridgeObjectRetain();
      goto LABEL_54;
    }
    goto LABEL_52;
  }
  if (v56 == 1)
  {
    sub_1AD009758((uint64_t)(v53 + 2), &qword_1ED2E3198);
LABEL_52:
    *((_OWORD *)v53 + 1) = *((_OWORD *)v54 + 1);
    goto LABEL_54;
  }
  v53[2] = *((_QWORD *)v54 + 2);
  v53[3] = *((_QWORD *)v54 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_54:
  v57 = v253;
  v58 = v253[14];
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = v40((char *)a1 + v58, 1, v38);
  v62 = v40(v60, 1, v38);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v59, v60, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v59, 0, 1, v38);
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v59, v38);
LABEL_59:
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_60;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v59, v60, v38);
LABEL_60:
  v64 = v253[15];
  v65 = (uint64_t)a1 + v64;
  v66 = (char *)a2 + v64;
  v67 = type metadata accessor for CloudKitSharingToken();
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  v70 = v69(v65, 1, v67);
  v71 = v69((uint64_t)v66, 1, v67);
  if (!v70)
  {
    if (v71)
    {
      sub_1AD066230(v65, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
      goto LABEL_67;
    }
    v252 = v67;
    *(_DWORD *)v65 = *(_DWORD *)v66;
    *(_QWORD *)(v65 + 8) = *((_QWORD *)v66 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v65 + 16) = *((_QWORD *)v66 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v76 = *((_QWORD *)v66 + 4);
    *(_QWORD *)(v65 + 24) = *((_QWORD *)v66 + 3);
    *(_QWORD *)(v65 + 32) = v76;
    swift_retain();
    swift_release();
    v77 = (uint64_t *)(v66 + 40);
    v78 = *((_QWORD *)v66 + 6);
    v79 = v78 & 0xF000000000000000;
    if (*(_QWORD *)(v65 + 48) >> 60 == 11)
    {
      if (v79 == 0xB000000000000000)
        goto LABEL_113;
LABEL_109:
      if (v78 >> 60 != 15)
      {
        v131 = *v77;
        sub_1AD0040A0(*v77, *((_QWORD *)v66 + 6));
        *(_QWORD *)(v65 + 40) = v131;
        *(_QWORD *)(v65 + 48) = v78;
        goto LABEL_114;
      }
      goto LABEL_113;
    }
    if (v79 == 0xB000000000000000)
    {
      sub_1AD009758(v65 + 40, &qword_1ED2E3250);
    }
    else
    {
      if (*(_QWORD *)(v65 + 48) >> 60 == 15)
        goto LABEL_109;
      if (v78 >> 60 != 15)
      {
        v241 = *v77;
        sub_1AD0040A0(*v77, *((_QWORD *)v66 + 6));
        v242 = *(_QWORD *)(v65 + 40);
        v243 = *(_QWORD *)(v65 + 48);
        *(_QWORD *)(v65 + 40) = v241;
        *(_QWORD *)(v65 + 48) = v78;
        sub_1AD00412C(v242, v243);
LABEL_114:
        v132 = (_OWORD *)(v65 + 56);
        v133 = v66 + 56;
        v134 = *((_QWORD *)v66 + 9);
        if (*(_QWORD *)(v65 + 72))
        {
          if (!v134)
          {
            sub_1AD0AEC58(v65 + 56);
            v144 = *(_OWORD *)(v66 + 72);
            v143 = *(_OWORD *)(v66 + 88);
            *v132 = *v133;
            *(_OWORD *)(v65 + 72) = v144;
            *(_OWORD *)(v65 + 88) = v143;
            goto LABEL_130;
          }
          *(_DWORD *)(v65 + 56) = *((_DWORD *)v66 + 14);
          v135 = *((_DWORD *)v66 + 15);
          *(_BYTE *)(v65 + 64) = v66[64];
          *(_DWORD *)(v65 + 60) = v135;
          v136 = *((_QWORD *)v66 + 10);
          *(_QWORD *)(v65 + 72) = *((_QWORD *)v66 + 9);
          *(_QWORD *)(v65 + 80) = v136;
          swift_retain();
          swift_release();
          v137 = (uint64_t *)(v66 + 88);
          v138 = *((_QWORD *)v66 + 12);
          if (*(_QWORD *)(v65 + 96) >> 60 == 15)
          {
            if (v138 >> 60 != 15)
            {
              v139 = *v137;
LABEL_128:
              sub_1AD0040A0(v139, v138);
              *(_QWORD *)(v65 + 88) = v139;
              *(_QWORD *)(v65 + 96) = v138;
              goto LABEL_130;
            }
          }
          else
          {
            if (v138 >> 60 != 15)
            {
              v147 = *v137;
              sub_1AD0040A0(*v137, *((_QWORD *)v66 + 12));
              v148 = *(_QWORD *)(v65 + 88);
              v149 = *(_QWORD *)(v65 + 96);
              *(_QWORD *)(v65 + 88) = v147;
              *(_QWORD *)(v65 + 96) = v138;
              sub_1AD00412C(v148, v149);
LABEL_130:
              v150 = *((_QWORD *)v66 + 14);
              *(_QWORD *)(v65 + 104) = *((_QWORD *)v66 + 13);
              *(_QWORD *)(v65 + 112) = v150;
              swift_retain();
              swift_release();
              v151 = (uint64_t *)(v66 + 120);
              v152 = *((_QWORD *)v66 + 16);
              if (*(_QWORD *)(v65 + 128) >> 60 == 15)
              {
                if (v152 >> 60 != 15)
                {
                  v153 = *v151;
                  sub_1AD0040A0(*v151, *((_QWORD *)v66 + 16));
                  *(_QWORD *)(v65 + 120) = v153;
                  *(_QWORD *)(v65 + 128) = v152;
                  goto LABEL_137;
                }
              }
              else
              {
                if (v152 >> 60 != 15)
                {
                  v154 = *v151;
                  sub_1AD0040A0(*v151, *((_QWORD *)v66 + 16));
                  v155 = *(_QWORD *)(v65 + 120);
                  v156 = *(_QWORD *)(v65 + 128);
                  *(_QWORD *)(v65 + 120) = v154;
                  *(_QWORD *)(v65 + 128) = v152;
                  sub_1AD00412C(v155, v156);
LABEL_137:
                  v157 = *((_QWORD *)v66 + 18);
                  *(_QWORD *)(v65 + 136) = *((_QWORD *)v66 + 17);
                  *(_QWORD *)(v65 + 144) = v157;
                  swift_retain();
                  swift_release();
                  v158 = (uint64_t *)(v66 + 152);
                  v159 = *((_QWORD *)v66 + 20);
                  v160 = v159 & 0xF000000000000000;
                  if (*(_QWORD *)(v65 + 160) >> 60 == 11)
                  {
                    if (v160 == 0xB000000000000000)
                      goto LABEL_147;
LABEL_143:
                    if (v159 >> 60 != 15)
                    {
                      v161 = *v158;
                      sub_1AD0040A0(*v158, *((_QWORD *)v66 + 20));
                      *(_QWORD *)(v65 + 152) = v161;
                      *(_QWORD *)(v65 + 160) = v159;
                      goto LABEL_148;
                    }
                    goto LABEL_147;
                  }
                  if (v160 == 0xB000000000000000)
                  {
                    sub_1AD009758(v65 + 152, &qword_1ED2E3250);
                  }
                  else
                  {
                    if (*(_QWORD *)(v65 + 160) >> 60 == 15)
                      goto LABEL_143;
                    if (v159 >> 60 != 15)
                    {
                      v244 = *v158;
                      sub_1AD0040A0(*v158, *((_QWORD *)v66 + 20));
                      v245 = *(_QWORD *)(v65 + 152);
                      v246 = *(_QWORD *)(v65 + 160);
                      *(_QWORD *)(v65 + 152) = v244;
                      *(_QWORD *)(v65 + 160) = v159;
                      sub_1AD00412C(v245, v246);
LABEL_148:
                      v162 = (_OWORD *)(v65 + 168);
                      v164 = v66 + 168;
                      v163 = *((_QWORD *)v66 + 21);
                      if (!*(_QWORD *)(v65 + 168))
                      {
                        if (!v163)
                        {
                          *v162 = *v164;
                          v175 = *(_OWORD *)(v66 + 184);
                          v176 = *(_OWORD *)(v66 + 200);
                          v177 = *(_OWORD *)(v66 + 216);
                          *(_QWORD *)(v65 + 232) = *((_QWORD *)v66 + 29);
                          *(_OWORD *)(v65 + 200) = v176;
                          *(_OWORD *)(v65 + 216) = v177;
                          *(_OWORD *)(v65 + 184) = v175;
                          goto LABEL_174;
                        }
                        v169 = *((_QWORD *)v66 + 22);
                        *(_QWORD *)(v65 + 168) = v163;
                        *(_QWORD *)(v65 + 176) = v169;
                        v170 = (uint64_t *)(v66 + 184);
                        v171 = *((_QWORD *)v66 + 24);
                        swift_retain();
                        if (v171 >> 60 == 15)
                        {
                          *(_OWORD *)(v65 + 184) = *(_OWORD *)v170;
                        }
                        else
                        {
                          v178 = *v170;
                          sub_1AD0040A0(*v170, v171);
                          *(_QWORD *)(v65 + 184) = v178;
                          *(_QWORD *)(v65 + 192) = v171;
                        }
                        *(_DWORD *)(v65 + 200) = *((_DWORD *)v66 + 50);
                        v179 = *((_QWORD *)v66 + 27);
                        *(_QWORD *)(v65 + 208) = *((_QWORD *)v66 + 26);
                        *(_QWORD *)(v65 + 216) = v179;
                        v180 = v66 + 224;
                        v181 = *((_QWORD *)v66 + 29);
                        swift_retain();
                        if (v181 >> 60 == 15)
                        {
                          *(_OWORD *)(v65 + 224) = *v180;
                          goto LABEL_174;
                        }
                        v182 = *(_QWORD *)v180;
                        goto LABEL_169;
                      }
                      if (!v163)
                      {
                        sub_1AD0AEC8C((uint64_t *)(v65 + 168));
                        *v162 = *v164;
                        v173 = *(_OWORD *)(v66 + 200);
                        v172 = *(_OWORD *)(v66 + 216);
                        v174 = *(_OWORD *)(v66 + 184);
                        *(_QWORD *)(v65 + 232) = *((_QWORD *)v66 + 29);
                        *(_OWORD *)(v65 + 200) = v173;
                        *(_OWORD *)(v65 + 216) = v172;
                        *(_OWORD *)(v65 + 184) = v174;
                        goto LABEL_174;
                      }
                      v165 = *((_QWORD *)v66 + 22);
                      *(_QWORD *)(v65 + 168) = v163;
                      *(_QWORD *)(v65 + 176) = v165;
                      swift_retain();
                      swift_release();
                      v166 = (uint64_t *)(v66 + 184);
                      v167 = *((_QWORD *)v66 + 24);
                      if (*(_QWORD *)(v65 + 192) >> 60 == 15)
                      {
                        if (v167 >> 60 != 15)
                        {
                          v168 = *v166;
                          sub_1AD0040A0(*v166, *((_QWORD *)v66 + 24));
                          *(_QWORD *)(v65 + 184) = v168;
                          *(_QWORD *)(v65 + 192) = v167;
                          goto LABEL_166;
                        }
                      }
                      else
                      {
                        if (v167 >> 60 != 15)
                        {
                          v183 = *v166;
                          sub_1AD0040A0(*v166, *((_QWORD *)v66 + 24));
                          v184 = *(_QWORD *)(v65 + 184);
                          v185 = *(_QWORD *)(v65 + 192);
                          *(_QWORD *)(v65 + 184) = v183;
                          *(_QWORD *)(v65 + 192) = v167;
                          sub_1AD00412C(v184, v185);
LABEL_166:
                          *(_DWORD *)(v65 + 200) = *((_DWORD *)v66 + 50);
                          v186 = *((_QWORD *)v66 + 27);
                          *(_QWORD *)(v65 + 208) = *((_QWORD *)v66 + 26);
                          *(_QWORD *)(v65 + 216) = v186;
                          swift_retain();
                          swift_release();
                          v187 = (uint64_t *)(v66 + 224);
                          v181 = *((_QWORD *)v66 + 29);
                          if (*(_QWORD *)(v65 + 232) >> 60 == 15)
                          {
                            if (v181 >> 60 != 15)
                            {
                              v182 = *v187;
LABEL_169:
                              sub_1AD0040A0(v182, v181);
                              *(_QWORD *)(v65 + 224) = v182;
                              *(_QWORD *)(v65 + 232) = v181;
                              goto LABEL_174;
                            }
                          }
                          else
                          {
                            if (v181 >> 60 != 15)
                            {
                              v188 = *v187;
                              sub_1AD0040A0(*v187, *((_QWORD *)v66 + 29));
                              v189 = *(_QWORD *)(v65 + 224);
                              v190 = *(_QWORD *)(v65 + 232);
                              *(_QWORD *)(v65 + 224) = v188;
                              *(_QWORD *)(v65 + 232) = v181;
                              sub_1AD00412C(v189, v190);
LABEL_174:
                              *(_QWORD *)(v65 + 240) = *((_QWORD *)v66 + 30);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              v191 = *((_QWORD *)v66 + 32);
                              *(_QWORD *)(v65 + 248) = *((_QWORD *)v66 + 31);
                              *(_QWORD *)(v65 + 256) = v191;
                              swift_retain();
                              swift_release();
                              v192 = (uint64_t *)(v66 + 264);
                              v193 = *((_QWORD *)v66 + 34);
                              v194 = v193 & 0xF000000000000000;
                              if (*(_QWORD *)(v65 + 272) >> 60 == 11)
                              {
                                if (v194 == 0xB000000000000000)
                                  goto LABEL_184;
LABEL_180:
                                if (v193 >> 60 != 15)
                                {
                                  v195 = *v192;
                                  sub_1AD0040A0(*v192, *((_QWORD *)v66 + 34));
                                  *(_QWORD *)(v65 + 264) = v195;
                                  *(_QWORD *)(v65 + 272) = v193;
                                  goto LABEL_185;
                                }
                                goto LABEL_184;
                              }
                              if (v194 == 0xB000000000000000)
                              {
                                sub_1AD009758(v65 + 264, &qword_1ED2E3250);
                              }
                              else
                              {
                                if (*(_QWORD *)(v65 + 272) >> 60 == 15)
                                  goto LABEL_180;
                                if (v193 >> 60 != 15)
                                {
                                  v247 = *v192;
                                  sub_1AD0040A0(*v192, *((_QWORD *)v66 + 34));
                                  v248 = *(_QWORD *)(v65 + 264);
                                  v249 = *(_QWORD *)(v65 + 272);
                                  *(_QWORD *)(v65 + 264) = v247;
                                  *(_QWORD *)(v65 + 272) = v193;
                                  sub_1AD00412C(v248, v249);
LABEL_185:
                                  v196 = *(int *)(v252 + 24);
                                  v197 = (_QWORD *)(v65 + v196);
                                  v198 = &v66[v196];
                                  v199 = *(_QWORD *)&v66[v196 + 8];
                                  *v197 = *(_QWORD *)&v66[v196];
                                  v197[1] = v199;
                                  swift_retain();
                                  swift_release();
                                  v200 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                + 28);
                                  v201 = (char *)v197 + v200;
                                  v202 = &v198[v200];
                                  v203 = sub_1AD63AF28();
                                  v204 = *(_QWORD *)(v203 - 8);
                                  v205 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v204 + 48);
                                  v206 = v205(v201, 1, v203);
                                  v207 = v205(v202, 1, v203);
                                  if (v206)
                                  {
                                    if (!v207)
                                    {
                                      (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v201, v202, v203);
                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v204 + 56))(v201, 0, 1, v203);
                                      goto LABEL_191;
                                    }
                                  }
                                  else
                                  {
                                    if (!v207)
                                    {
                                      (*(void (**)(char *, char *, uint64_t))(v204 + 24))(v201, v202, v203);
LABEL_191:
                                      v57 = v253;
                                      v209 = *(int *)(v252 + 28);
                                      v210 = (_QWORD *)(v65 + v209);
                                      v211 = &v66[v209];
                                      v212 = *(_QWORD *)&v66[v209 + 8];
                                      *v210 = *(_QWORD *)&v66[v209];
                                      v210[1] = v212;
                                      swift_retain();
                                      swift_release();
                                      v213 = *((_QWORD *)v211 + 3);
                                      if (v210[3] == 1)
                                      {
                                        if (v213 != 1)
                                        {
                                          v210[2] = *((_QWORD *)v211 + 2);
                                          v210[3] = *((_QWORD *)v211 + 3);
                                          swift_bridgeObjectRetain();
                                          goto LABEL_198;
                                        }
                                      }
                                      else
                                      {
                                        if (v213 != 1)
                                        {
                                          v210[2] = *((_QWORD *)v211 + 2);
                                          v210[3] = *((_QWORD *)v211 + 3);
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRelease();
                                          goto LABEL_198;
                                        }
                                        sub_1AD009758((uint64_t)(v210 + 2), &qword_1ED2E3198);
                                      }
                                      *((_OWORD *)v210 + 1) = *((_OWORD *)v211 + 1);
                                      goto LABEL_198;
                                    }
                                    (*(void (**)(char *, uint64_t))(v204 + 8))(v201, v203);
                                  }
                                  v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                  memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
                                  goto LABEL_191;
                                }
                                sub_1AD007EC0(v65 + 264);
                              }
LABEL_184:
                              *(_OWORD *)(v65 + 264) = *(_OWORD *)v192;
                              goto LABEL_185;
                            }
                            sub_1AD007EC0(v65 + 224);
                          }
                          *(_OWORD *)(v65 + 224) = *(_OWORD *)v187;
                          goto LABEL_174;
                        }
                        sub_1AD007EC0(v65 + 184);
                      }
                      *(_OWORD *)(v65 + 184) = *(_OWORD *)v166;
                      goto LABEL_166;
                    }
                    sub_1AD007EC0(v65 + 152);
                  }
LABEL_147:
                  *(_OWORD *)(v65 + 152) = *(_OWORD *)v158;
                  goto LABEL_148;
                }
                sub_1AD007EC0(v65 + 120);
              }
              *(_OWORD *)(v65 + 120) = *(_OWORD *)v151;
              goto LABEL_137;
            }
            sub_1AD007EC0(v65 + 88);
          }
          *(_OWORD *)(v65 + 88) = *(_OWORD *)v137;
          goto LABEL_130;
        }
        if (!v134)
        {
          v145 = *v133;
          v146 = *(_OWORD *)(v66 + 88);
          *(_OWORD *)(v65 + 72) = *(_OWORD *)(v66 + 72);
          *(_OWORD *)(v65 + 88) = v146;
          *v132 = v145;
          goto LABEL_130;
        }
        *(_DWORD *)(v65 + 56) = *((_DWORD *)v66 + 14);
        v140 = *((_DWORD *)v66 + 15);
        *(_BYTE *)(v65 + 64) = v66[64];
        *(_DWORD *)(v65 + 60) = v140;
        v141 = *((_QWORD *)v66 + 10);
        *(_QWORD *)(v65 + 72) = *((_QWORD *)v66 + 9);
        *(_QWORD *)(v65 + 80) = v141;
        v142 = v66 + 88;
        v138 = *((_QWORD *)v66 + 12);
        swift_retain();
        if (v138 >> 60 == 15)
        {
          *(_OWORD *)(v65 + 88) = *v142;
          goto LABEL_130;
        }
        v139 = *(_QWORD *)v142;
        goto LABEL_128;
      }
      sub_1AD007EC0(v65 + 40);
    }
LABEL_113:
    *(_OWORD *)(v65 + 40) = *(_OWORD *)v77;
    goto LABEL_114;
  }
  if (v71)
  {
LABEL_67:
    v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy((void *)v65, v66, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_198;
  }
  v250 = v68;
  v251 = v67;
  *(_DWORD *)v65 = *(_DWORD *)v66;
  *(_QWORD *)(v65 + 8) = *((_QWORD *)v66 + 1);
  *(_QWORD *)(v65 + 16) = *((_QWORD *)v66 + 2);
  v72 = *((_QWORD *)v66 + 4);
  *(_QWORD *)(v65 + 24) = *((_QWORD *)v66 + 3);
  *(_QWORD *)(v65 + 32) = v72;
  v73 = (uint64_t *)(v66 + 40);
  v74 = *((_QWORD *)v66 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v74 >> 60 == 11 || v74 >> 60 == 15)
  {
    *(_OWORD *)(v65 + 40) = *(_OWORD *)v73;
  }
  else
  {
    v83 = *v73;
    sub_1AD0040A0(*v73, v74);
    *(_QWORD *)(v65 + 40) = v83;
    *(_QWORD *)(v65 + 48) = v74;
  }
  v57 = v253;
  if (*((_QWORD *)v66 + 9))
  {
    *(_DWORD *)(v65 + 56) = *((_DWORD *)v66 + 14);
    v84 = *((_DWORD *)v66 + 15);
    *(_BYTE *)(v65 + 64) = v66[64];
    *(_DWORD *)(v65 + 60) = v84;
    v85 = *((_QWORD *)v66 + 10);
    *(_QWORD *)(v65 + 72) = *((_QWORD *)v66 + 9);
    *(_QWORD *)(v65 + 80) = v85;
    v86 = (uint64_t *)(v66 + 88);
    v87 = *((_QWORD *)v66 + 12);
    swift_retain();
    if (v87 >> 60 != 15)
    {
      v91 = *v86;
      sub_1AD0040A0(*v86, v87);
      *(_QWORD *)(v65 + 88) = v91;
      *(_QWORD *)(v65 + 96) = v87;
      goto LABEL_82;
    }
    v88 = (_OWORD *)(v65 + 88);
    v89 = *(_OWORD *)v86;
  }
  else
  {
    v88 = (_OWORD *)(v65 + 56);
    v89 = *(_OWORD *)(v66 + 56);
    v90 = *(_OWORD *)(v66 + 88);
    *(_OWORD *)(v65 + 72) = *(_OWORD *)(v66 + 72);
    *(_OWORD *)(v65 + 88) = v90;
  }
  *v88 = v89;
LABEL_82:
  v92 = *((_QWORD *)v66 + 14);
  *(_QWORD *)(v65 + 104) = *((_QWORD *)v66 + 13);
  *(_QWORD *)(v65 + 112) = v92;
  v93 = (uint64_t *)(v66 + 120);
  v94 = *((_QWORD *)v66 + 16);
  swift_retain();
  if (v94 >> 60 == 15)
  {
    *(_OWORD *)(v65 + 120) = *(_OWORD *)v93;
  }
  else
  {
    v95 = *v93;
    sub_1AD0040A0(*v93, v94);
    *(_QWORD *)(v65 + 120) = v95;
    *(_QWORD *)(v65 + 128) = v94;
  }
  v96 = *((_QWORD *)v66 + 18);
  *(_QWORD *)(v65 + 136) = *((_QWORD *)v66 + 17);
  *(_QWORD *)(v65 + 144) = v96;
  v97 = (uint64_t *)(v66 + 152);
  v98 = *((_QWORD *)v66 + 20);
  swift_retain();
  if (v98 >> 60 == 11 || v98 >> 60 == 15)
  {
    *(_OWORD *)(v65 + 152) = *(_OWORD *)v97;
  }
  else
  {
    v99 = *v97;
    sub_1AD0040A0(*v97, v98);
    *(_QWORD *)(v65 + 152) = v99;
    *(_QWORD *)(v65 + 160) = v98;
  }
  v100 = *((_QWORD *)v66 + 21);
  if (v100)
  {
    v101 = *((_QWORD *)v66 + 22);
    *(_QWORD *)(v65 + 168) = v100;
    *(_QWORD *)(v65 + 176) = v101;
    v102 = (uint64_t *)(v66 + 184);
    v103 = *((_QWORD *)v66 + 24);
    swift_retain();
    if (v103 >> 60 == 15)
    {
      *(_OWORD *)(v65 + 184) = *(_OWORD *)v102;
    }
    else
    {
      v107 = *v102;
      sub_1AD0040A0(*v102, v103);
      *(_QWORD *)(v65 + 184) = v107;
      *(_QWORD *)(v65 + 192) = v103;
    }
    *(_DWORD *)(v65 + 200) = *((_DWORD *)v66 + 50);
    v108 = *((_QWORD *)v66 + 27);
    *(_QWORD *)(v65 + 208) = *((_QWORD *)v66 + 26);
    *(_QWORD *)(v65 + 216) = v108;
    v109 = (uint64_t *)(v66 + 224);
    v110 = *((_QWORD *)v66 + 29);
    swift_retain();
    if (v110 >> 60 == 15)
    {
      *(_OWORD *)(v65 + 224) = *(_OWORD *)v109;
    }
    else
    {
      v111 = *v109;
      sub_1AD0040A0(*v109, v110);
      *(_QWORD *)(v65 + 224) = v111;
      *(_QWORD *)(v65 + 232) = v110;
    }
  }
  else
  {
    *(_OWORD *)(v65 + 168) = *(_OWORD *)(v66 + 168);
    v104 = *(_OWORD *)(v66 + 184);
    v105 = *(_OWORD *)(v66 + 200);
    v106 = *(_OWORD *)(v66 + 216);
    *(_QWORD *)(v65 + 232) = *((_QWORD *)v66 + 29);
    *(_OWORD *)(v65 + 200) = v105;
    *(_OWORD *)(v65 + 216) = v106;
    *(_OWORD *)(v65 + 184) = v104;
  }
  *(_QWORD *)(v65 + 240) = *((_QWORD *)v66 + 30);
  v112 = *((_QWORD *)v66 + 32);
  *(_QWORD *)(v65 + 248) = *((_QWORD *)v66 + 31);
  *(_QWORD *)(v65 + 256) = v112;
  v113 = (uint64_t *)(v66 + 264);
  v114 = *((_QWORD *)v66 + 34);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v114 >> 60 == 11 || v114 >> 60 == 15)
  {
    *(_OWORD *)(v65 + 264) = *(_OWORD *)v113;
  }
  else
  {
    v115 = *v113;
    sub_1AD0040A0(*v113, v114);
    *(_QWORD *)(v65 + 264) = v115;
    *(_QWORD *)(v65 + 272) = v114;
  }
  v116 = *(int *)(v251 + 24);
  v117 = (_QWORD *)(v65 + v116);
  v118 = &v66[v116];
  v119 = *(_QWORD *)&v66[v116 + 8];
  *v117 = *(_QWORD *)&v66[v116];
  v117[1] = v119;
  swift_retain();
  v120 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v121 = (char *)v117 + v120;
  v122 = &v118[v120];
  v123 = sub_1AD63AF28();
  v124 = *(_QWORD *)(v123 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
  {
    v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v122, v123);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
  }
  v126 = *(int *)(v251 + 28);
  v127 = v65 + v126;
  v128 = &v66[v126];
  v129 = *((_QWORD *)v128 + 1);
  *(_QWORD *)v127 = *(_QWORD *)v128;
  *(_QWORD *)(v127 + 8) = v129;
  v130 = *((_QWORD *)v128 + 3);
  swift_retain();
  if (v130 == 1)
  {
    *(_OWORD *)(v127 + 16) = *((_OWORD *)v128 + 1);
  }
  else
  {
    *(_QWORD *)(v127 + 16) = *((_QWORD *)v128 + 2);
    *(_QWORD *)(v127 + 24) = *((_QWORD *)v128 + 3);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v250 + 56))(v65, 0, 1, v251);
LABEL_198:
  v214 = v57[16];
  v215 = (_QWORD *)((char *)a1 + v214);
  v216 = (char *)a2 + v214;
  v217 = *(_QWORD *)((char *)a2 + v214 + 8);
  *v215 = *(_QWORD *)((char *)a2 + v214);
  v215[1] = v217;
  swift_retain();
  swift_release();
  v218 = *((_QWORD *)v216 + 3);
  if (v215[3] == 1)
  {
    if (v218 != 1)
    {
      v215[2] = *((_QWORD *)v216 + 2);
      v215[3] = *((_QWORD *)v216 + 3);
      swift_bridgeObjectRetain();
      goto LABEL_205;
    }
    goto LABEL_203;
  }
  if (v218 == 1)
  {
    sub_1AD009758((uint64_t)(v215 + 2), &qword_1ED2E3198);
LABEL_203:
    *((_OWORD *)v215 + 1) = *((_OWORD *)v216 + 1);
    goto LABEL_205;
  }
  v215[2] = *((_QWORD *)v216 + 2);
  v215[3] = *((_QWORD *)v216 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_205:
  v219 = v57[17];
  v220 = (char *)a1 + v219;
  v221 = (char *)a2 + v219;
  v222 = *(_QWORD *)((char *)a2 + v219 + 8);
  *(_QWORD *)v220 = *(_QWORD *)((char *)a2 + v219);
  *((_QWORD *)v220 + 1) = v222;
  swift_retain();
  swift_release();
  v223 = *((_QWORD *)v221 + 2);
  *((_WORD *)v220 + 12) = *((_WORD *)v221 + 12);
  *((_QWORD *)v220 + 2) = v223;
  v224 = v57[18];
  v225 = (char *)a1 + v224;
  v226 = (char *)a2 + v224;
  v227 = *(_QWORD *)((char *)a2 + v224 + 8);
  *(_QWORD *)v225 = *(_QWORD *)((char *)a2 + v224);
  *((_QWORD *)v225 + 1) = v227;
  swift_retain();
  swift_release();
  v228 = *((_QWORD *)v226 + 2);
  *((_WORD *)v225 + 12) = *((_WORD *)v226 + 12);
  *((_QWORD *)v225 + 2) = v228;
  v229 = v57[19];
  v230 = (_QWORD *)((char *)a1 + v229);
  v231 = (char *)a2 + v229;
  v232 = *(_QWORD *)((char *)a2 + v229 + 8);
  *v230 = *(_QWORD *)((char *)a2 + v229);
  v230[1] = v232;
  swift_retain();
  swift_release();
  v233 = (uint64_t *)(v231 + 16);
  v234 = *((_QWORD *)v231 + 3);
  v235 = v234 & 0xF000000000000000;
  if (v230[3] >> 60 == 11)
  {
    if (v235 == 0xB000000000000000)
      goto LABEL_215;
  }
  else
  {
    if (v235 == 0xB000000000000000)
    {
      sub_1AD009758((uint64_t)(v230 + 2), &qword_1ED2E3250);
LABEL_215:
      *((_OWORD *)v230 + 1) = *(_OWORD *)v233;
      return a1;
    }
    if (v230[3] >> 60 != 15)
    {
      if (v234 >> 60 != 15)
      {
        v238 = *v233;
        sub_1AD0040A0(*v233, *((_QWORD *)v231 + 3));
        v239 = v230[2];
        v240 = v230[3];
        v230[2] = v238;
        v230[3] = v234;
        sub_1AD00412C(v239, v240);
        return a1;
      }
      sub_1AD007EC0((uint64_t)(v230 + 2));
      goto LABEL_215;
    }
  }
  if (v234 >> 60 == 15)
    goto LABEL_215;
  v236 = *v233;
  sub_1AD0040A0(*v233, *((_QWORD *)v231 + 3));
  v230[2] = v236;
  v230[3] = v234;
  return a1;
}

uint64_t sub_1AD44BE10(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD44BE40(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AD44BE70(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  _OWORD *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  _OWORD *v70;
  _OWORD *v71;
  _OWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  __int128 v79;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63B03C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = (_OWORD *)((char *)a1 + v13);
  v16 = (_OWORD *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  v18 = a3[8];
  v19 = a3[9];
  v20 = (_OWORD *)((char *)a1 + v18);
  v21 = (_OWORD *)((char *)a2 + v18);
  *v20 = *v21;
  *(_OWORD *)((char *)v20 + 10) = *(_OWORD *)((char *)v21 + 10);
  *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
  v22 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1AD63B084();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v29 = a3[12];
  v30 = a3[13];
  v31 = *(_OWORD *)((char *)a2 + v29);
  v32 = *(_OWORD *)((char *)a2 + v29 + 16);
  v33 = (_OWORD *)((char *)a1 + v29);
  *v33 = v31;
  v33[1] = v32;
  v34 = (_OWORD *)((char *)a1 + v30);
  v35 = (_OWORD *)((char *)a2 + v30);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = a3[14];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  if (v27((char *)a2 + v37, 1, v25))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v38, v39, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v38, 0, 1, v25);
  }
  v41 = a3[15];
  v42 = (_OWORD *)((char *)a1 + v41);
  v43 = (_OWORD *)((char *)a2 + v41);
  v44 = type metadata accessor for CloudKitSharingToken();
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v47 = v43[13];
    v42[12] = v43[12];
    v42[13] = v47;
    v42[14] = v43[14];
    *((_QWORD *)v42 + 30) = *((_QWORD *)v43 + 30);
    v48 = v43[9];
    v42[8] = v43[8];
    v42[9] = v48;
    v49 = v43[11];
    v42[10] = v43[10];
    v42[11] = v49;
    v50 = v43[5];
    v42[4] = v43[4];
    v42[5] = v50;
    v51 = v43[7];
    v42[6] = v43[6];
    v42[7] = v51;
    v52 = v43[1];
    *v42 = *v43;
    v42[1] = v52;
    v53 = v43[3];
    v42[2] = v43[2];
    v42[3] = v53;
    *(_OWORD *)((char *)v42 + 248) = *(_OWORD *)((char *)v43 + 248);
    *(_OWORD *)((char *)v42 + 264) = *(_OWORD *)((char *)v43 + 264);
    v54 = *(int *)(v44 + 24);
    v55 = (char *)v42 + v54;
    v56 = (char *)v43 + v54;
    *(_OWORD *)((char *)v42 + v54) = *(_OWORD *)((char *)v43 + v54);
    v57 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    __dst = &v55[v57];
    v58 = &v56[v57];
    v59 = sub_1AD63AF28();
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(__dst, v58, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(__dst, 0, 1, v59);
    }
    v62 = *(int *)(v44 + 28);
    v63 = (_OWORD *)((char *)v42 + v62);
    v64 = (_OWORD *)((char *)v43 + v62);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  v66 = a3[16];
  v67 = a3[17];
  v68 = *(_OWORD *)((char *)a2 + v66);
  v69 = *(_OWORD *)((char *)a2 + v66 + 16);
  v70 = (_OWORD *)((char *)a1 + v66);
  *v70 = v68;
  v70[1] = v69;
  v71 = (_OWORD *)((char *)a1 + v67);
  v72 = (_OWORD *)((char *)a2 + v67);
  *v71 = *v72;
  *(_OWORD *)((char *)v71 + 10) = *(_OWORD *)((char *)v72 + 10);
  v73 = a3[18];
  v74 = a3[19];
  v75 = (_OWORD *)((char *)a1 + v73);
  v76 = (_OWORD *)((char *)a2 + v73);
  *v75 = *v76;
  *(_OWORD *)((char *)v75 + 10) = *(_OWORD *)((char *)v76 + 10);
  v77 = (_OWORD *)((char *)a1 + v74);
  v78 = (_OWORD *)((char *)a2 + v74);
  v79 = v78[1];
  *v77 = *v78;
  v77[1] = v79;
  return a1;
}

uint64_t sub_1AD44C290(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  int v61;
  int v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  _OWORD *v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  _OWORD *v91;
  unint64_t v92;
  unint64_t v93;
  __int128 v94;
  _QWORD *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  unint64_t v105;
  unint64_t v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(void *, uint64_t, uint64_t);
  int v127;
  size_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _OWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = (_OWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) == 1)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 24);
  if (v7 == 1)
  {
    sub_1AD009758(a1 + 16, &qword_1ED2E3198);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = a3[5];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1AD63B03C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_11:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_12:
  v17 = a3[6];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  if (*(_QWORD *)(a1 + v17 + 8))
  {
    v20 = v19[1];
    if (v20)
    {
      *v18 = *v19;
      v21 = v19[2];
      v18[1] = v20;
      v18[2] = v21;
      swift_release();
      v18[3] = v19[3];
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1AD44BE10((uint64_t)v18);
  }
  v22 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v22;
LABEL_17:
  v23 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  swift_release();
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  *(_WORD *)(v24 + 24) = *(_WORD *)(v25 + 24);
  v26 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  if (*(_QWORD *)(a1 + v26) == 1)
  {
LABEL_20:
    *(_OWORD *)v27 = *(_OWORD *)v28;
    goto LABEL_22;
  }
  if (*(_QWORD *)v28 == 1)
  {
    sub_1AD44BE40(a1 + v26);
    goto LABEL_20;
  }
  *(_QWORD *)v27 = *(_QWORD *)v28;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  swift_bridgeObjectRelease();
LABEL_22:
  v29 = a3[11];
  v30 = (void *)(a1 + v29);
  v31 = (void *)(a2 + v29);
  v32 = sub_1AD63B084();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
LABEL_27:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v30, v31, v32);
LABEL_28:
  v38 = a3[12];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  swift_release();
  v41 = (_OWORD *)(v40 + 16);
  v42 = *(_QWORD *)(v39 + 24);
  if (v42 >> 60 == 11)
  {
LABEL_34:
    *(_OWORD *)(v39 + 16) = *v41;
    goto LABEL_35;
  }
  v43 = *(_QWORD *)(v40 + 24);
  if (v43 >> 60 == 11)
  {
    sub_1AD009758(v39 + 16, &qword_1ED2E3250);
    goto LABEL_34;
  }
  if (v42 >> 60 == 15)
    goto LABEL_34;
  if (v43 >> 60 == 15)
  {
    sub_1AD007EC0(v39 + 16);
    goto LABEL_34;
  }
  v87 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v39 + 16) = *(_QWORD *)v41;
  *(_QWORD *)(v39 + 24) = v43;
  sub_1AD00412C(v87, v42);
LABEL_35:
  v44 = a3[13];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_OWORD *)(a1 + v44) = *(_OWORD *)(a2 + v44);
  swift_release();
  v47 = (_OWORD *)(v46 + 16);
  if (*(_QWORD *)(v45 + 24) == 1)
  {
LABEL_38:
    *(_OWORD *)(v45 + 16) = *v47;
    goto LABEL_40;
  }
  v48 = *(_QWORD *)(v46 + 24);
  if (v48 == 1)
  {
    sub_1AD009758(v45 + 16, &qword_1ED2E3198);
    goto LABEL_38;
  }
  *(_QWORD *)(v45 + 16) = *(_QWORD *)v47;
  *(_QWORD *)(v45 + 24) = v48;
  swift_bridgeObjectRelease();
LABEL_40:
  v49 = a3[14];
  v50 = (void *)(a1 + v49);
  v51 = (void *)(a2 + v49);
  v52 = v34((void *)(a1 + v49), 1, v32);
  v53 = v34(v51, 1, v32);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v50, v51, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v50, 0, 1, v32);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v50, v32);
LABEL_45:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v50, v51, v32);
LABEL_46:
  v55 = a3[15];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = type metadata accessor for CloudKitSharingToken();
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60(v57, 1, v58);
  if (!v61)
  {
    if (v62)
    {
      sub_1AD066230(v56, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
      goto LABEL_52;
    }
    *(_DWORD *)v56 = *(_DWORD *)v57;
    *(_QWORD *)(v56 + 8) = *(_QWORD *)(v57 + 8);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v56 + 16) = *(_QWORD *)(v57 + 16);
    swift_bridgeObjectRelease();
    *(_OWORD *)(v56 + 24) = *(_OWORD *)(v57 + 24);
    swift_release();
    v80 = (_QWORD *)(v57 + 40);
    v81 = *(_QWORD *)(v56 + 48);
    if (v81 >> 60 != 11)
    {
      v82 = *(_QWORD *)(v57 + 48);
      if (v82 >> 60 == 11)
      {
        sub_1AD009758(v56 + 40, &qword_1ED2E3250);
      }
      else if (v81 >> 60 != 15)
      {
        if (v82 >> 60 != 15)
        {
          v154 = *(_QWORD *)(v56 + 40);
          *(_QWORD *)(v56 + 40) = *v80;
          *(_QWORD *)(v56 + 48) = v82;
          sub_1AD00412C(v154, v81);
LABEL_66:
          if (*(_QWORD *)(v56 + 72))
          {
            v88 = *(_QWORD *)(v57 + 72);
            if (v88)
            {
              v89 = *(_DWORD *)(v57 + 60);
              *(_DWORD *)(v56 + 56) = *(_DWORD *)(v57 + 56);
              *(_DWORD *)(v56 + 60) = v89;
              *(_BYTE *)(v56 + 64) = *(_BYTE *)(v57 + 64);
              v90 = *(_QWORD *)(v57 + 80);
              *(_QWORD *)(v56 + 72) = v88;
              *(_QWORD *)(v56 + 80) = v90;
              swift_release();
              v91 = (_OWORD *)(v57 + 88);
              v92 = *(_QWORD *)(v56 + 96);
              if (v92 >> 60 == 15)
              {
LABEL_71:
                *(_OWORD *)(v56 + 88) = *v91;
                goto LABEL_74;
              }
              v93 = *(_QWORD *)(v57 + 96);
              if (v93 >> 60 == 15)
              {
                sub_1AD007EC0(v56 + 88);
                goto LABEL_71;
              }
              v109 = *(_QWORD *)(v56 + 88);
              *(_QWORD *)(v56 + 88) = *(_QWORD *)v91;
              *(_QWORD *)(v56 + 96) = v93;
              sub_1AD00412C(v109, v92);
LABEL_74:
              *(_OWORD *)(v56 + 104) = *(_OWORD *)(v57 + 104);
              swift_release();
              v95 = (_QWORD *)(v57 + 120);
              v96 = *(_QWORD *)(v56 + 128);
              if (v96 >> 60 != 15)
              {
                v97 = *(_QWORD *)(v57 + 128);
                if (v97 >> 60 != 15)
                {
                  v98 = *(_QWORD *)(v56 + 120);
                  *(_QWORD *)(v56 + 120) = *v95;
                  *(_QWORD *)(v56 + 128) = v97;
                  sub_1AD00412C(v98, v96);
LABEL_79:
                  *(_OWORD *)(v56 + 136) = *(_OWORD *)(v57 + 136);
                  swift_release();
                  v99 = (_QWORD *)(v57 + 152);
                  v100 = *(_QWORD *)(v56 + 160);
                  if (v100 >> 60 != 11)
                  {
                    v101 = *(_QWORD *)(v57 + 160);
                    if (v101 >> 60 == 11)
                    {
                      sub_1AD009758(v56 + 152, &qword_1ED2E3250);
                    }
                    else if (v100 >> 60 != 15)
                    {
                      if (v101 >> 60 != 15)
                      {
                        v155 = *(_QWORD *)(v56 + 152);
                        *(_QWORD *)(v56 + 152) = *v99;
                        *(_QWORD *)(v56 + 160) = v101;
                        sub_1AD00412C(v155, v100);
LABEL_86:
                        v102 = *(_QWORD *)(v57 + 168);
                        if (*(_QWORD *)(v56 + 168))
                        {
                          if (v102)
                          {
                            v103 = *(_QWORD *)(v57 + 176);
                            *(_QWORD *)(v56 + 168) = v102;
                            *(_QWORD *)(v56 + 176) = v103;
                            swift_release();
                            v104 = (_QWORD *)(v57 + 184);
                            v105 = *(_QWORD *)(v56 + 192);
                            if (v105 >> 60 != 15)
                            {
                              v106 = *(_QWORD *)(v57 + 192);
                              if (v106 >> 60 != 15)
                              {
                                v110 = *(_QWORD *)(v56 + 184);
                                *(_QWORD *)(v56 + 184) = *v104;
                                *(_QWORD *)(v56 + 192) = v106;
                                sub_1AD00412C(v110, v105);
LABEL_96:
                                *(_DWORD *)(v56 + 200) = *(_DWORD *)(v57 + 200);
                                *(_OWORD *)(v56 + 208) = *(_OWORD *)(v57 + 208);
                                swift_release();
                                v111 = (_QWORD *)(v57 + 224);
                                v112 = *(_QWORD *)(v56 + 232);
                                if (v112 >> 60 != 15)
                                {
                                  v113 = *(_QWORD *)(v57 + 232);
                                  if (v113 >> 60 != 15)
                                  {
                                    v114 = *(_QWORD *)(v56 + 224);
                                    *(_QWORD *)(v56 + 224) = *v111;
                                    *(_QWORD *)(v56 + 232) = v113;
                                    sub_1AD00412C(v114, v112);
LABEL_101:
                                    *(_QWORD *)(v56 + 240) = *(_QWORD *)(v57 + 240);
                                    swift_bridgeObjectRelease();
                                    *(_OWORD *)(v56 + 248) = *(_OWORD *)(v57 + 248);
                                    swift_release();
                                    v115 = (_QWORD *)(v57 + 264);
                                    v116 = *(_QWORD *)(v56 + 272);
                                    if (v116 >> 60 != 11)
                                    {
                                      v117 = *(_QWORD *)(v57 + 272);
                                      if (v117 >> 60 == 11)
                                      {
                                        sub_1AD009758(v56 + 264, &qword_1ED2E3250);
                                      }
                                      else if (v116 >> 60 != 15)
                                      {
                                        if (v117 >> 60 != 15)
                                        {
                                          v156 = *(_QWORD *)(v56 + 264);
                                          *(_QWORD *)(v56 + 264) = *v115;
                                          *(_QWORD *)(v56 + 272) = v117;
                                          sub_1AD00412C(v156, v116);
LABEL_108:
                                          v159 = v58;
                                          v118 = *(int *)(v58 + 24);
                                          v119 = v56 + v118;
                                          v120 = v57 + v118;
                                          *(_OWORD *)(v56 + v118) = *(_OWORD *)(v57 + v118);
                                          swift_release();
                                          v121 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                        + 28);
                                          v122 = (void *)(v119 + v121);
                                          v123 = (void *)(v120 + v121);
                                          v124 = sub_1AD63AF28();
                                          v125 = *(_QWORD *)(v124 - 8);
                                          v126 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v125 + 48);
                                          v157 = v122;
                                          LODWORD(v122) = v126(v122, 1, v124);
                                          v127 = v126(v123, 1, v124);
                                          if ((_DWORD)v122)
                                          {
                                            if (v127)
                                            {
                                              v128 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40)
                                                                           - 8)
                                                               + 64);
                                              v129 = v157;
LABEL_113:
                                              memcpy(v129, v123, v128);
                                              goto LABEL_116;
                                            }
                                            (*(void (**)(void *, void *, uint64_t))(v125 + 32))(v157, v123, v124);
                                            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v157, 0, 1, v124);
                                          }
                                          else
                                          {
                                            if (v127)
                                            {
                                              (*(void (**)(void *, uint64_t))(v125 + 8))(v157, v124);
                                              v128 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40)
                                                                           - 8)
                                                               + 64);
                                              v129 = v157;
                                              goto LABEL_113;
                                            }
                                            (*(void (**)(void *, void *, uint64_t))(v125 + 40))(v157, v123, v124);
                                          }
LABEL_116:
                                          v130 = *(int *)(v159 + 28);
                                          v131 = v56 + v130;
                                          v132 = v57 + v130;
                                          *(_OWORD *)(v56 + v130) = *(_OWORD *)(v57 + v130);
                                          swift_release();
                                          v133 = (_QWORD *)(v132 + 16);
                                          if (*(_QWORD *)(v131 + 24) != 1)
                                          {
                                            v134 = *(_QWORD *)(v132 + 24);
                                            if (v134 != 1)
                                            {
                                              *(_QWORD *)(v131 + 16) = *v133;
                                              *(_QWORD *)(v131 + 24) = v134;
                                              swift_bridgeObjectRelease();
                                              goto LABEL_121;
                                            }
                                            sub_1AD009758(v131 + 16, &qword_1ED2E3198);
                                          }
                                          *(_OWORD *)(v131 + 16) = *(_OWORD *)v133;
                                          goto LABEL_121;
                                        }
                                        sub_1AD007EC0(v56 + 264);
                                      }
                                    }
                                    *(_OWORD *)(v56 + 264) = *(_OWORD *)v115;
                                    goto LABEL_108;
                                  }
                                  sub_1AD007EC0(v56 + 224);
                                }
                                *(_OWORD *)(v56 + 224) = *(_OWORD *)v111;
                                goto LABEL_101;
                              }
                              sub_1AD007EC0(v56 + 184);
                            }
                            *(_OWORD *)(v56 + 184) = *(_OWORD *)v104;
                            goto LABEL_96;
                          }
                          sub_1AD0AEC8C((uint64_t *)(v56 + 168));
                        }
                        v107 = *(_OWORD *)(v57 + 216);
                        *(_OWORD *)(v56 + 200) = *(_OWORD *)(v57 + 200);
                        *(_OWORD *)(v56 + 216) = v107;
                        *(_QWORD *)(v56 + 232) = *(_QWORD *)(v57 + 232);
                        v108 = *(_OWORD *)(v57 + 184);
                        *(_OWORD *)(v56 + 168) = *(_OWORD *)(v57 + 168);
                        *(_OWORD *)(v56 + 184) = v108;
                        goto LABEL_101;
                      }
                      sub_1AD007EC0(v56 + 152);
                    }
                  }
                  *(_OWORD *)(v56 + 152) = *(_OWORD *)v99;
                  goto LABEL_86;
                }
                sub_1AD007EC0(v56 + 120);
              }
              *(_OWORD *)(v56 + 120) = *(_OWORD *)v95;
              goto LABEL_79;
            }
            sub_1AD0AEC58(v56 + 56);
          }
          v94 = *(_OWORD *)(v57 + 72);
          *(_OWORD *)(v56 + 56) = *(_OWORD *)(v57 + 56);
          *(_OWORD *)(v56 + 72) = v94;
          *(_OWORD *)(v56 + 88) = *(_OWORD *)(v57 + 88);
          goto LABEL_74;
        }
        sub_1AD007EC0(v56 + 40);
      }
    }
    *(_OWORD *)(v56 + 40) = *(_OWORD *)v80;
    goto LABEL_66;
  }
  if (v62)
  {
LABEL_52:
    v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy((void *)v56, (const void *)v57, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_121;
  }
  v63 = *(_OWORD *)(v57 + 208);
  *(_OWORD *)(v56 + 192) = *(_OWORD *)(v57 + 192);
  *(_OWORD *)(v56 + 208) = v63;
  *(_OWORD *)(v56 + 224) = *(_OWORD *)(v57 + 224);
  *(_QWORD *)(v56 + 240) = *(_QWORD *)(v57 + 240);
  v64 = *(_OWORD *)(v57 + 144);
  *(_OWORD *)(v56 + 128) = *(_OWORD *)(v57 + 128);
  *(_OWORD *)(v56 + 144) = v64;
  v65 = *(_OWORD *)(v57 + 176);
  *(_OWORD *)(v56 + 160) = *(_OWORD *)(v57 + 160);
  *(_OWORD *)(v56 + 176) = v65;
  v66 = *(_OWORD *)(v57 + 80);
  *(_OWORD *)(v56 + 64) = *(_OWORD *)(v57 + 64);
  *(_OWORD *)(v56 + 80) = v66;
  v67 = *(_OWORD *)(v57 + 112);
  *(_OWORD *)(v56 + 96) = *(_OWORD *)(v57 + 96);
  *(_OWORD *)(v56 + 112) = v67;
  v68 = *(_OWORD *)(v57 + 16);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *(_OWORD *)(v56 + 16) = v68;
  v69 = *(_OWORD *)(v57 + 48);
  *(_OWORD *)(v56 + 32) = *(_OWORD *)(v57 + 32);
  *(_OWORD *)(v56 + 48) = v69;
  *(_OWORD *)(v56 + 248) = *(_OWORD *)(v57 + 248);
  *(_OWORD *)(v56 + 264) = *(_OWORD *)(v57 + 264);
  v158 = v58;
  v70 = *(int *)(v58 + 24);
  v71 = v56 + v70;
  v72 = v57 + v70;
  *(_OWORD *)(v56 + v70) = *(_OWORD *)(v57 + v70);
  v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v74 = (void *)(v71 + v73);
  v75 = (const void *)(v72 + v73);
  v76 = sub_1AD63AF28();
  v77 = *(_QWORD *)(v76 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v77 + 32))(v74, v75, v76);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  }
  v83 = *(int *)(v158 + 28);
  v84 = (_OWORD *)(v56 + v83);
  v85 = (_OWORD *)(v57 + v83);
  v86 = v85[1];
  *v84 = *v85;
  v84[1] = v86;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 56))(v56, 0, 1);
LABEL_121:
  v135 = a3[16];
  v136 = a1 + v135;
  v137 = a2 + v135;
  *(_OWORD *)(a1 + v135) = *(_OWORD *)(a2 + v135);
  swift_release();
  v138 = (_OWORD *)(v137 + 16);
  if (*(_QWORD *)(v136 + 24) == 1)
  {
LABEL_124:
    *(_OWORD *)(v136 + 16) = *v138;
    goto LABEL_126;
  }
  v139 = *(_QWORD *)(v137 + 24);
  if (v139 == 1)
  {
    sub_1AD009758(v136 + 16, &qword_1ED2E3198);
    goto LABEL_124;
  }
  *(_QWORD *)(v136 + 16) = *(_QWORD *)v138;
  *(_QWORD *)(v136 + 24) = v139;
  swift_bridgeObjectRelease();
LABEL_126:
  v140 = a3[17];
  v141 = a1 + v140;
  v142 = a2 + v140;
  *(_OWORD *)(a1 + v140) = *(_OWORD *)(a2 + v140);
  swift_release();
  *(_QWORD *)(v141 + 16) = *(_QWORD *)(v142 + 16);
  *(_WORD *)(v141 + 24) = *(_WORD *)(v142 + 24);
  v143 = a3[18];
  v144 = a1 + v143;
  v145 = a2 + v143;
  *(_OWORD *)(a1 + v143) = *(_OWORD *)(a2 + v143);
  swift_release();
  *(_QWORD *)(v144 + 16) = *(_QWORD *)(v145 + 16);
  *(_WORD *)(v144 + 24) = *(_WORD *)(v145 + 24);
  v146 = a3[19];
  v147 = a1 + v146;
  v148 = a2 + v146;
  *(_OWORD *)(a1 + v146) = *(_OWORD *)(a2 + v146);
  swift_release();
  v149 = (_QWORD *)(v148 + 16);
  v150 = *(_QWORD *)(v147 + 24);
  if (v150 >> 60 != 11)
  {
    v151 = *(_QWORD *)(v148 + 24);
    if (v151 >> 60 == 11)
    {
      sub_1AD009758(v147 + 16, &qword_1ED2E3250);
    }
    else if (v150 >> 60 != 15)
    {
      if (v151 >> 60 != 15)
      {
        v153 = *(_QWORD *)(v147 + 16);
        *(_QWORD *)(v147 + 16) = *v149;
        *(_QWORD *)(v147 + 24) = v151;
        sub_1AD00412C(v153, v150);
        return a1;
      }
      sub_1AD007EC0(v147 + 16);
    }
  }
  *(_OWORD *)(v147 + 16) = *(_OWORD *)v149;
  return a1;
}

uint64_t sub_1AD44CF84()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD44CF90(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[11];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[15];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1AD44D060()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD44D06C(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[11];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[15];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1AD44D138()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E5320, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, qword_1ED2E7158, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    if (v1 <= 0x3F)
    {
      sub_1ACFFECF8(319, &qword_1EECDC6F0, (void (*)(uint64_t))type metadata accessor for CloudKitSharingToken);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t destroy for IDSHomeKitInvitation.IDSHomeKitInvitationRequestedCapabilities()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for IDSHomeKitInvitation.IDSHomeKitInvitationRequestedCapabilities(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IDSHomeKitInvitation.IDSHomeKitInvitationRequestedCapabilities(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IDSHomeKitInvitation.IDSHomeKitInvitationRequestedCapabilities(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IDSHomeKitInvitation.IDSHomeKitInvitationRequestedCapabilities()
{
  return &type metadata for IDSHomeKitInvitation.IDSHomeKitInvitationRequestedCapabilities;
}

_QWORD *assignWithCopy for IDSHomeKitInviteeSchedule(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSHomeKitInviteeSchedule(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSHomeKitInviteeSchedule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSHomeKitInviteeSchedule()
{
  return &type metadata for IDSHomeKitInviteeSchedule;
}

uint64_t destroy for IDSHomeKitInviteeScheduleWeekDayRule()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for IDSHomeKitInviteeScheduleWeekDayRule(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for IDSHomeKitInviteeScheduleWeekDayRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  return a1;
}

__n128 __swift_memcpy90_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 74) = *(_OWORD *)(a2 + 74);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for IDSHomeKitInviteeScheduleWeekDayRule(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSHomeKitInviteeScheduleWeekDayRule(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 90))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSHomeKitInviteeScheduleWeekDayRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 90) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 90) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSHomeKitInviteeScheduleWeekDayRule()
{
  return &type metadata for IDSHomeKitInviteeScheduleWeekDayRule;
}

uint64_t *sub_1AD44D73C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B03C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = *(int *)(a3 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)v14, 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1AD44D888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v4 = sub_1AD63B03C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  return result;
}

char *sub_1AD44D92C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_1AD63B03C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *sub_1AD44DA4C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;

  v6 = sub_1AD63B03C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

char *sub_1AD44DBFC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_1AD63B03C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *sub_1AD44DD1C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;

  v6 = sub_1AD63B03C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

uint64_t sub_1AD44DECC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD44DED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1AD44DF18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD44DF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1AD44DF68()
{
  unint64_t v0;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E5320, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1AD44DFE0()
{
  return swift_deallocObject();
}

BOOL sub_1AD44DFF0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1AD280E7C(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_1AD44DFF8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD44E01C(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD280E64(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_1AD44E024()
{
  return swift_deallocObject();
}

uint64_t sub_1AD44E034()
{
  return swift_deallocObject();
}

uint64_t sub_1AD44E054()
{
  sub_1AD63BD38();
  sub_1AD63B810();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63BE04();
  sub_1AD63B810();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63BE04();
  sub_1AD63B810();
  sub_1AD63BE04();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63BE04();
  sub_1AD63B810();
  return 0;
}

uint64_t sub_1AD44E3CC(void (*a1)(uint64_t *__return_ptr, _BYTE *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  char *v8;
  uint64_t i;
  uint64_t v10;
  _BYTE v11[288];
  uint64_t v12;
  _BYTE __dst[288];
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1AD63BDE0();
    v8 = (char *)(a3 + 32);
    for (i = v5 - 1; ; --i)
    {
      memcpy(__dst, v8, 0x119uLL);
      memcpy(v11, v8, 0x119uLL);
      sub_1AD45E134((uint64_t)__dst);
      a1(&v12, v11, &v10);
      sub_1AD292424((uint64_t)__dst);
      if (v3)
        return swift_release();
      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      if (!i)
        break;
      v8 += 288;
    }
    return v14;
  }
  return result;
}

uint64_t sub_1AD44E4E8(void (*a1)(uint64_t *__return_ptr, _OWORD *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  _OWORD *v8;
  uint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _OWORD v21[10];
  uint64_t v22;
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v5 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1AD63BDE0();
    v8 = (_OWORD *)(a3 + 32);
    for (i = v5 - 1; ; --i)
    {
      v10 = v8[7];
      v11 = v8[5];
      v28 = v8[6];
      v29 = v10;
      v12 = v8[7];
      v13 = v8[9];
      v30 = v8[8];
      v31 = v13;
      v14 = v8[3];
      v15 = v8[1];
      v24 = v8[2];
      v25 = v14;
      v16 = v8[3];
      v17 = v8[5];
      v26 = v8[4];
      v27 = v17;
      v18 = v8[1];
      v23[0] = *v8;
      v23[1] = v18;
      v21[6] = v28;
      v21[7] = v12;
      v19 = v8[9];
      v21[8] = v30;
      v21[9] = v19;
      v21[2] = v24;
      v21[3] = v16;
      v21[4] = v26;
      v21[5] = v11;
      v21[0] = v23[0];
      v21[1] = v15;
      sub_1AD45E084((uint64_t)v23);
      a1(&v22, v21, &v20);
      sub_1AD45E0DC((uint64_t)v23);
      if (v3)
        return swift_release();
      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      if (!i)
        break;
      v8 += 10;
    }
    return v32;
  }
  return result;
}

uint64_t sub_1AD44E63C(void (*a1)(_QWORD *__return_ptr, id *, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  _BYTE __dst[281];
  uint64_t v16;
  id v17;
  _QWORD __src[37];
  uint64_t v19;

  v4 = v3;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1AD63BE34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    return v7;
  v19 = MEMORY[0x1E0DEE9D8];
  result = sub_1AD149A08(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v7 = v19;
    while (1)
    {
      v10 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AF44AA40](v9, a3) : *(id *)(a3 + 8 * v9 + 32);
      v11 = v10;
      v17 = v10;
      a1(__src, &v17, &v16);
      if (v4)
        break;
      v4 = 0;

      memcpy(__dst, __src, sizeof(__dst));
      v19 = v7;
      v13 = *(_QWORD *)(v7 + 16);
      v12 = *(_QWORD *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1AD149A08(v12 > 1, v13 + 1, 1);
        v7 = v19;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v13 + 1;
      memcpy((void *)(v7 + 288 * v13 + 32), __dst, 0x119uLL);
      if (v6 == v9)
        return v7;
    }
    swift_release();

    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD44E7D0(void (*a1)(_OWORD *__return_ptr, id *, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  id v27;
  _OWORD v28[10];
  uint64_t v29;
  uint64_t v30;

  v4 = v3;
  v30 = a2;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1AD63BE34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    return v7;
  v29 = MEMORY[0x1E0DEE9D8];
  result = sub_1AD1499EC(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v7 = v29;
    while (1)
    {
      v10 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AF44AA40](v9, a3) : *(id *)(a3 + 8 * v9 + 32);
      v11 = v10;
      v27 = v10;
      a1(v28, &v27, &v26);
      if (v4)
        break;
      v4 = 0;

      v20 = v28[4];
      v21 = v28[5];
      v19 = v28[3];
      v17 = v28[1];
      v18 = v28[2];
      v24 = v28[8];
      v25 = v28[9];
      v22 = v28[6];
      v23 = v28[7];
      v13 = *(_QWORD *)(v7 + 16);
      v12 = *(_QWORD *)(v7 + 24);
      v16 = v28[0];
      v29 = v7;
      if (v13 >= v12 >> 1)
      {
        sub_1AD1499EC(v12 > 1, v13 + 1, 1);
        v7 = v29;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v13 + 1;
      v14 = (_OWORD *)(v7 + 160 * v13);
      v14[2] = v16;
      v14[3] = v17;
      v14[6] = v20;
      v14[7] = v21;
      v14[4] = v18;
      v14[5] = v19;
      v14[10] = v24;
      v14[11] = v25;
      v14[8] = v22;
      v14[9] = v23;
      if (v6 == v9)
        return v7;
    }
    swift_release();

    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD44E9AC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD44EA0C()
{
  _BYTE *v0;

  if (*v0)
    return 0x5064696C61766E69;
  else
    return 0x4964696C61766E69;
}

uint64_t sub_1AD44EA5C(char *a1, char *a2)
{
  return sub_1AD433A3C(*a1, *a2);
}

uint64_t sub_1AD44EA68()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD44EAFC()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD44EB6C()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD44EBFC@<X0>(char *a1@<X8>)
{
  return sub_1AD44E9AC(a1);
}

void sub_1AD44EC08(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x4964696C61766E69;
  if (*v1)
    v2 = 0x5064696C61766E69;
  v3 = 0xEB000000006D6574;
  if (*v1)
    v3 = 0xEF6675626F746F72;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AD44EC5C@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 1;
  switch(result)
  {
    case 1103:
      v2 = 0;
      goto LABEL_3;
    case 1104:
LABEL_3:
      *a2 = v2;
      break;
    case 1106:
      *a2 = 2;
      break;
    case 1108:
      *a2 = 3;
      break;
    case 1109:
      *a2 = 4;
      break;
    case 1150:
      *a2 = 5;
      break;
    case 1151:
      *a2 = 6;
      break;
    case 1152:
      *a2 = 7;
      break;
    default:
      *a2 = 8;
      break;
  }
  return result;
}

uint64_t sub_1AD44ECE4()
{
  char *v0;

  return qword_1AD6863B8[*v0];
}

BOOL sub_1AD44ECF8(char *a1, char *a2)
{
  return qword_1AD6863B8[*a1] == qword_1AD6863B8[*a2];
}

uint64_t sub_1AD44ED1C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD44ED68()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD44ED9C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD44EDE4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD44EC5C(*a1, a2);
}

void sub_1AD44EDEC(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1AD6863B8[*v1];
}

uint64_t sub_1AD44EE04@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD44EE5C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AD44EE88 + 4 * byte_1AD685E22[*v0]))(0x657A65657262, 0xE600000000000000);
}

uint64_t sub_1AD44EE88()
{
  return 0x6157646564697567;
}

uint64_t sub_1AD44EEA4()
{
  return 0x6562656C6B637568;
}

uint64_t sub_1AD44EEC4()
{
  return 0x6F65646976;
}

void sub_1AD44EED8(char *a1)
{
  sub_1AD4337AC(*a1);
}

void sub_1AD44EEE4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1AD63C4AC();
  __asm { BR              X9 }
}

uint64_t sub_1AD44EF2C()
{
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

void sub_1AD44EFA4()
{
  __asm { BR              X10 }
}

uint64_t sub_1AD44EFDC()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

void sub_1AD44F040()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1AD63C4AC();
  __asm { BR              X9 }
}

uint64_t sub_1AD44F084()
{
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD44F0FC@<X0>(char *a1@<X8>)
{
  return sub_1AD44EE04(a1);
}

uint64_t sub_1AD44F108()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1AD44F134 + 4 * byte_1AD685E32[*v0]))();
}

void sub_1AD44F134(_QWORD *a1@<X8>)
{
  *a1 = 0x6157646564697567;
  a1[1] = 0xEA00000000006B6CLL;
}

void sub_1AD44F154(_QWORD *a1@<X8>)
{
  *a1 = 0x6562656C6B637568;
  a1[1] = 0xEB00000000797272;
}

void sub_1AD44F178(_QWORD *a1@<X8>)
{
  *a1 = 0x6F65646976;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1AD44F190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _QWORD *v31;
  _QWORD v33[16];
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v38 = a2;
  v39 = a3;
  v41 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2428);
  v6 = MEMORY[0x1E0C80A78](v5);
  v35 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)v33 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2420);
  v10 = MEMORY[0x1E0C80A78](v9);
  v33[15] = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v37 = (char *)v33 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2418);
  v14 = MEMORY[0x1E0C80A78](v13);
  v33[14] = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v33 - v16;
  *a4 = 8;
  v18 = (int *)type metadata accessor for IDSActivitySharingInvitation(0);
  v19 = &a4[v18[5]];
  v20 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v33[10] = v19;
  v34 = v21;
  v21(v19, 1, 1, v20);
  v22 = &a4[v18[6]];
  v23 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v33[13] = v22;
  v24(v22, 1, 1, v23);
  v25 = &a4[v18[7]];
  v26 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage(0);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v33[12] = v25;
  v27(v25, 1, 1, v26);
  v28 = &a4[v18[8]];
  *v28 = 0u;
  v28[1] = 0u;
  v33[11] = v28;
  v29 = &a4[v18[9]];
  v29[2] = 0u;
  v29[3] = 0u;
  *v29 = 0u;
  v29[1] = 0u;
  v30 = &a4[v18[10]];
  v30[1] = 0u;
  v30[2] = 0u;
  *v30 = 0u;
  sub_1AD44EC5C(v41, (char *)&v40);
  if (v40 != 8)
  {
    v41 = v40;
    v33[9] = v17;
    v34(v17, 1, 1, v20);
    v33[6] = v23;
    v33[7] = v24;
    v24(v37, 1, 1, v23);
    v27(v36, 1, 1, v26);
    __asm { BR              X9 }
  }
  sub_1AD0DDA60();
  swift_allocError();
  *v31 = 0xD000000000000036;
  v31[1] = 0x80000001AD6AA1F0;
  v31[2] = 0x4964696C61766E69;
  v31[3] = 0xEB000000006D6574;
  v31[4] = 0xD00000000000001CLL;
  v31[5] = 0x80000001AD6AA230;
  swift_willThrow();
  sub_1AD00412C(v38, v39);
  return sub_1AD066230((uint64_t)a4, type metadata accessor for IDSActivitySharingInvitation);
}

uint64_t sub_1AD44FBE0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  char *v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int *v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  char *v53;
  uint64_t (*v54)(_QWORD);
  uint64_t (*v55)(_QWORD);
  uint64_t v56;
  uint64_t (*v57)(_QWORD);
  int v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char *v70;

  v65 = a3;
  v66 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v62 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v63 = (uint64_t)&v52 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2410);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v52 - v15;
  v17 = sub_1AD63B264();
  MEMORY[0x1E0C80A78](v17);
  v18 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = 0;
  v67 = 0u;
  v68 = 0u;
  sub_1AD0040A0(a1, a2);
  sub_1AD63B258();
  sub_1ACFF9724(&qword_1EECDB660, type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&unk_1AD67D764);
  v21 = v70;
  result = sub_1AD63B33C();
  if (!v21)
  {
    v53 = v9;
    v60 = v14;
    v70 = v16;
    v23 = v18[6];
    v24 = &v20[v18[5]];
    v25 = *(_QWORD *)v24;
    v58 = v24[8];
    v26 = &v20[v23];
    v27 = *(uint64_t (**)(_QWORD))&v20[v23];
    v28 = *((_QWORD *)v26 + 1);
    v56 = v25;
    v57 = v27;
    v29 = &v20[v18[7]];
    v30 = *(uint64_t (**)(_QWORD))v29;
    v31 = *((_QWORD *)v29 + 1);
    v32 = &v20[v18[8]];
    v33 = (uint64_t)&v20[v18[9]];
    v34 = *((_QWORD *)v32 + 1);
    v54 = *(uint64_t (**)(_QWORD))v32;
    v55 = v30;
    v35 = v63;
    sub_1ACFF64C0(v33, v63, &qword_1EECDB5B0);
    v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    v36 = v52(v35, 1, v66);
    v61 = v34;
    swift_bridgeObjectRetain();
    v64 = v28;
    swift_bridgeObjectRetain();
    v59 = v31;
    swift_bridgeObjectRetain();
    sub_1AD009758(v35, &qword_1EECDB5B0);
    if (v36 == 1)
    {
      v37 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo(0);
      v38 = (uint64_t)v70;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v70, 1, 1, v37);
      v39 = v65;
      v40 = v59;
      v41 = (uint64_t)v60;
    }
    else
    {
      v42 = v33;
      v43 = (uint64_t)v53;
      sub_1ACFF64C0(v42, (uint64_t)v53, &qword_1EECDB5B0);
      v44 = v52(v43, 1, v66);
      v39 = v65;
      v38 = (uint64_t)v70;
      v45 = v62;
      if (v44 == 1)
      {
        sub_1AD63B240();
        v46 = (int *)v66;
        *(_OWORD *)(v45 + *(int *)(v66 + 20)) = xmmword_1AD67A180;
        *(_OWORD *)(v45 + v46[6]) = xmmword_1AD67A180;
        *(_OWORD *)(v45 + v46[7]) = xmmword_1AD67A180;
        v47 = (_QWORD *)(v45 + v46[8]);
        *v47 = 0;
        v47[1] = 0;
        sub_1AD009758(v43, &qword_1EECDB5B0);
      }
      else
      {
        sub_1AD2A5214(v43, v62, type metadata accessor for SecureCloudInviteUserInfoProtobuf);
      }
      v40 = v59;
      v41 = (uint64_t)v60;
      sub_1AD450DB0(v45, v38);
      sub_1AD066230(v45, type metadata accessor for SecureCloudInviteUserInfoProtobuf);
      v48 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v38, 0, 1, v48);
    }
    v49 = &v20[v18[10]];
    v50 = *(unsigned int *)v49;
    v51 = v49[4];
    sub_1ACFF64C0(v38, v41, &qword_1EECD2410);
    LOBYTE(v67) = v51;
    sub_1AD1FAD4C(v56, v58, v57, v64, v55, v40, v54, v61, v39, v41, v50 | ((unint64_t)v51 << 32));
    sub_1AD009758(v38, &qword_1EECD2410);
    return sub_1AD066230((uint64_t)v20, type metadata accessor for SecureCloudInviteRequestProtobuf);
  }
  return result;
}

uint64_t sub_1AD45009C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unsigned int *v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  uint64_t v52;
  uint64_t (*v53)(_QWORD);
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _OWORD v63[2];
  uint64_t v64;
  int v65;
  unsigned __int8 v66;

  v59 = a3;
  v5 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  MEMORY[0x1E0C80A78](v5);
  v58 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v57 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v50 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2410);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v50 - v16;
  v18 = sub_1AD63B264();
  MEMORY[0x1E0C80A78](v18);
  v19 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = 0;
  memset(v63, 0, sizeof(v63));
  sub_1AD0040A0(a1, a2);
  sub_1AD63B258();
  sub_1ACFF9724(&qword_1EECDB678, type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&unk_1AD67D8CC);
  v22 = (uint64_t)v62;
  result = sub_1AD63B33C();
  if (!v22)
  {
    v62 = v17;
    v24 = v19[6];
    v25 = &v21[v19[5]];
    v26 = *(_QWORD *)v25;
    v65 = v25[8];
    v27 = *(_QWORD *)&v21[v24 + 8];
    v53 = *(uint64_t (**)(_QWORD))&v21[v24];
    v54 = v15;
    v28 = &v21[v19[7]];
    v29 = *((_QWORD *)v28 + 1);
    v51 = *(uint64_t (**)(_QWORD))v28;
    v52 = v26;
    v30 = v19[10];
    v56 = v21;
    v31 = (uint64_t)&v21[v30];
    sub_1ACFF64C0((uint64_t)&v21[v30], (uint64_t)v11, &qword_1EECDB5B0);
    v32 = (int *)v61;
    v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
    v34 = v33(v11, 1, v61);
    v55 = v29;
    swift_bridgeObjectRetain();
    v60 = v27;
    swift_bridgeObjectRetain();
    sub_1AD009758((uint64_t)v11, &qword_1EECDB5B0);
    if (v34 == 1)
    {
      v35 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v62, 1, 1, v35);
      v36 = (uint64_t)v56;
    }
    else
    {
      v37 = v57;
      sub_1ACFF64C0(v31, v57, &qword_1EECDB5B0);
      v38 = v33((char *)v37, 1, (uint64_t)v32);
      v39 = (uint64_t)v62;
      if (v38 == 1)
      {
        v40 = v32;
        v41 = v58;
        sub_1AD63B240();
        *(_OWORD *)(v41 + v40[5]) = xmmword_1AD67A180;
        *(_OWORD *)(v41 + v40[6]) = xmmword_1AD67A180;
        *(_OWORD *)(v41 + v40[7]) = xmmword_1AD67A180;
        v42 = (_QWORD *)(v41 + v40[8]);
        *v42 = 0;
        v42[1] = 0;
        sub_1AD009758(v37, &qword_1EECDB5B0);
      }
      else
      {
        v41 = v58;
        sub_1AD2A5214(v37, v58, type metadata accessor for SecureCloudInviteUserInfoProtobuf);
      }
      sub_1AD450DB0(v41, v39);
      v36 = (uint64_t)v56;
      sub_1AD066230(v41, type metadata accessor for SecureCloudInviteUserInfoProtobuf);
      v43 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v39, 0, 1, v43);
    }
    v44 = (unsigned int *)(v36 + v19[11]);
    v45 = *v44;
    v46 = *((_BYTE *)v44 + 4);
    v47 = v36 + v19[9];
    v48 = (uint64_t)v54;
    if ((*(_BYTE *)(v47 + 9) & 1) == 0 && (*(_BYTE *)(v47 + 8) & 1) != 0)
      __asm { BR              X11 }
    LOBYTE(v63[0]) = 5;
    v49 = (uint64_t)v62;
    sub_1ACFF64C0((uint64_t)v62, (uint64_t)v54, &qword_1EECD2410);
    v66 = v46;
    sub_1AD1FC834(v52, v65, v53, v60, v51, v55, 0, 0, v59, (unsigned __int8 *)v63, v48, v45 | ((unint64_t)v46 << 32));
    sub_1AD009758(v49, &qword_1EECD2410);
    return sub_1AD066230(v36, type metadata accessor for SecureCloudInviteResponseProtobuf);
  }
  return result;
}

void sub_1AD450580()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + *(int *)(v1 + 32) + 8))
    swift_bridgeObjectRetain();
  JUMPOUT(0x1AD4504B0);
}

uint64_t sub_1AD4505E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v7 = sub_1AD63B264();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for SecureCloudWithdrawRequestProtobuf(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_1AD0040A0(a1, a2);
  sub_1AD63B258();
  sub_1ACFF9724(&qword_1EECDB6E8, type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&unk_1AD67E024);
  result = sub_1AD63B33C();
  if (!v3)
  {
    v12 = *(int *)(v8 + 24);
    v13 = &v10[*(int *)(v8 + 20)];
    v14 = *(_QWORD *)v13;
    v15 = v13[8];
    v16 = *(_QWORD *)&v10[v12];
    v17 = *(_QWORD *)&v10[v12 + 8];
    swift_bridgeObjectRetain();
    sub_1AD201CD0(v14, v15, v16, v17, a3);
    return sub_1AD066230((uint64_t)v10, type metadata accessor for SecureCloudWithdrawRequestProtobuf);
  }
  return result;
}

uint64_t sub_1AD45075C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t (**a3)(uint64_t *)@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  v7 = sub_1AD63B264();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for SecureCloudPingRequestProtobuf(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_1AD0040A0(a1, a2);
  sub_1AD63B258();
  sub_1ACFF9724(&qword_1EECDB6A0, type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&unk_1AD67DBC4);
  result = sub_1AD63B33C();
  if (!v3)
  {
    v12 = (uint64_t *)&v10[*(int *)(v8 + 20)];
    v13 = *v12;
    v14 = v12[1];
    swift_bridgeObjectRetain();
    sub_1AD200CFC(v13, v14, a3);
    return sub_1AD066230((uint64_t)v10, type metadata accessor for SecureCloudPingRequestProtobuf);
  }
  return result;
}

uint64_t sub_1AD4508C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t *);
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(uint64_t *);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t *);
  char *v29;
  uint64_t (*v30)(uint64_t *);
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unsigned __int8 v35;
  char *v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t *);
  uint64_t (*v41)(_QWORD);
  char *v42;
  uint64_t (*v43)(_QWORD);
  _QWORD *v44;
  _QWORD *v45;
  uint64_t (*v46)(uint64_t *);
  _OWORD v47[2];
  uint64_t v48;
  int v49;
  unsigned __int8 v50;

  v45 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2408);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v39 - v10);
  v12 = sub_1AD63B264();
  MEMORY[0x1E0C80A78](v12);
  v13 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = 0;
  memset(v47, 0, sizeof(v47));
  sub_1AD0040A0(a1, a2);
  sub_1AD63B258();
  sub_1ACFF9724(&qword_1EECDB6D0, type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&unk_1AD67DE94);
  result = sub_1AD63B33C();
  if (!v3)
  {
    v17 = v13[6];
    v18 = &v15[v13[5]];
    v19 = (uint64_t (*)(uint64_t *))*((_QWORD *)v18 + 1);
    v43 = *(uint64_t (**)(_QWORD))v18;
    v44 = v11;
    v20 = *(char **)&v15[v17];
    v49 = v15[v17 + 8];
    v21 = v13[9];
    v22 = &v15[v13[8]];
    v23 = (uint64_t (*)(uint64_t *))*((_QWORD *)v22 + 1);
    v41 = *(uint64_t (**)(_QWORD))v22;
    v42 = v20;
    v24 = *(_QWORD *)&v15[v21 + 8];
    if (v24 >> 60 == 15)
    {
      v25 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v44, 1, 1, v25);
      v40 = v23;
      swift_bridgeObjectRetain();
      v46 = v19;
      swift_bridgeObjectRetain();
      v26 = (uint64_t)v9;
    }
    else
    {
      v27 = *(_QWORD *)&v15[v21];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AD00408C(v27, v24);
      sub_1AD4511C0(v27, v24, v44);
      v28 = v23;
      v26 = (uint64_t)v9;
      v40 = v28;
      v46 = v19;
      sub_1AD004118(v27, v24);
    }
    v29 = &v15[v13[7]];
    v31 = *(uint64_t (**)(_QWORD))v29;
    v30 = (uint64_t (*)(uint64_t *))*((_QWORD *)v29 + 1);
    v32 = v13[10];
    v33 = &v15[v13[11]];
    v34 = *(unsigned int *)v33;
    v35 = v33[4];
    v36 = &v15[v32];
    if ((v15[v32 + 9] & 1) != 0)
    {
      v37 = 2;
    }
    else if ((v36[8] & 1) != 0)
    {
      v37 = *(_QWORD *)v36 != 0;
    }
    else
    {
      v37 = 2;
    }
    LOBYTE(v47[0]) = v37;
    v38 = v44;
    sub_1ACFF64C0((uint64_t)v44, v26, &qword_1EECD2408);
    swift_bridgeObjectRetain();
    v50 = v35;
    sub_1AD1FF084(v43, v46, v42, v49, v41, v40, (unsigned __int8 *)v47, v26, v45, v31, v30, v34 | ((unint64_t)v35 << 32));
    sub_1AD009758((uint64_t)v38, &qword_1EECD2408);
    return sub_1AD066230((uint64_t)v15, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
  }
  return result;
}

uint64_t sub_1AD450C30@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v7 = sub_1AD63B264();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for SecureCloudPingResponseProtobuf(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_1AD0040A0(a1, a2);
  sub_1AD63B258();
  sub_1ACFF9724(&qword_1EECDB6B8, type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&unk_1AD67DD2C);
  result = sub_1AD63B33C();
  if (!v3)
  {
    v12 = *(int *)(v8 + 24);
    v13 = (uint64_t *)&v10[*(int *)(v8 + 20)];
    v14 = *v13;
    v15 = v13[1];
    v16 = *(uint64_t (**)(_QWORD))&v10[v12];
    v17 = *(_QWORD *)&v10[v12 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AD2014B0(v14, v15, v16, v17, a3);
    return sub_1AD066230((uint64_t)v10, type metadata accessor for SecureCloudPingResponseProtobuf);
  }
  return result;
}

uint64_t sub_1AD450DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  unint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t (*v54)(_QWORD);
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[392];
  uint64_t v71;

  v55 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2408);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v43 - v8);
  v10 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v11 = a1 + v10[5];
  v12 = *(_QWORD *)(v11 + 8);
  if (v12 >> 60 == 15)
  {
    v53 = v7;
    sub_1AD45E1B8(&v63);
    v13 = &v63;
  }
  else
  {
    v14 = *(_QWORD *)v11;
    sub_1AD0040A0(*(_QWORD *)v11, *(_QWORD *)(v11 + 8));
    sub_1AD45144C(v14, v12, (uint64_t)&v63);
    if (v2)
    {
      v15 = v14;
      v16 = v12;
      return sub_1AD004118(v15, v16);
    }
    v53 = v7;
    sub_1AD004118(v14, v12);
    sub_1AD00FF28((uint64_t)&v63, (uint64_t)&v56, &qword_1EECD4E38);
    v13 = &v56;
  }
  sub_1AD00FF28((uint64_t)v13, (uint64_t)v70, &qword_1EECD4E38);
  v17 = v10[7];
  v18 = a1 + v10[8];
  v19 = *(_QWORD *)(v18 + 8);
  v54 = *(uint64_t (**)(_QWORD))v18;
  v20 = *(_QWORD *)(a1 + v17 + 8);
  if (v20 >> 60 == 15)
  {
    v52 = v19;
    swift_bridgeObjectRetain();
    v50 = 0;
    v51 = 0;
    v71 = 0;
    v48 = 0;
    v49 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
  }
  else
  {
    v24 = *(_QWORD *)(a1 + v17);
    swift_bridgeObjectRetain();
    sub_1AD00408C(v24, v20);
    sub_1AD4517FC(v24, v20, &v63);
    if (v2)
    {
      sub_1AD291920((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD2915BC);
      swift_bridgeObjectRelease();
      v15 = v24;
      v16 = v20;
      return sub_1AD004118(v15, v16);
    }
    v52 = v19;
    sub_1AD004118(v24, v20);
    v50 = *((_QWORD *)&v63 + 1);
    v51 = v63;
    v71 = v64;
    v21 = v66;
    v22 = v67;
    v23 = v68;
    v48 = v69;
    v49 = v65;
  }
  v25 = a1 + v10[6];
  v26 = *(_QWORD *)(v25 + 8);
  if (v26 >> 60 != 15)
  {
    v31 = *(_QWORD *)v25;
    sub_1AD0040A0(*(_QWORD *)v25, *(_QWORD *)(v25 + 8));
    sub_1AD4511C0(v31, v26, v9);
    if (!v2)
    {
      v46 = v23;
      v47 = 0;
      v27 = (uint64_t)v9;
      v28 = v22;
      v29 = v21;
      sub_1AD004118(v31, v26);
      goto LABEL_17;
    }
    sub_1AD291920((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD2915BC);
    sub_1AD2918B8(v51, v50, v71, v49, v21, v22, v23, v48);
    swift_bridgeObjectRelease();
    v15 = v31;
    v16 = v26;
    return sub_1AD004118(v15, v16);
  }
  v46 = v23;
  v47 = v2;
  v27 = (uint64_t)v9;
  v28 = v22;
  v29 = v21;
  v30 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v27, 1, 1, v30);
LABEL_17:
  v45 = v27;
  sub_1AD00FF28((uint64_t)v70, (uint64_t)&v63, &qword_1EECD4E38);
  v34 = v50;
  v33 = v51;
  *(_QWORD *)&v56 = v51;
  *((_QWORD *)&v56 + 1) = v50;
  v35 = v71;
  v36 = v48;
  v37 = v49;
  v57 = v71;
  v58 = v49;
  v44 = v29;
  v59 = v29;
  v60 = v28;
  v38 = v46;
  v61 = v46;
  v62 = v48;
  v39 = v27;
  v40 = (uint64_t)v53;
  sub_1ACFF64C0(v39, (uint64_t)v53, &qword_1EECD2408);
  sub_1AD291920((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD2919C4);
  v41 = v35;
  v42 = v44;
  sub_1AD291C00(v33, v34, v41, v37, v44, v28, v38, v36);
  sub_1AD1FE438((uint64_t)&v63, v54, v52, &v56, v40, v55);
  sub_1AD009758(v45, &qword_1EECD2408);
  sub_1AD291920((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD2915BC);
  return sub_1AD2918B8(v33, v34, v71, v37, v42, v28, v38, v36);
}

void sub_1AD4511C0(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  _QWORD *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (_QWORD *)((char *)v30 - v12);
  v14 = objc_allocWithZone((Class)_BlastDoorASCodableSecureCloudShareItem);
  sub_1AD0040A0(a1, a2);
  v15 = (void *)sub_1AD63AFA0();
  sub_1AD00412C(a1, a2);
  v16 = objc_msgSend(v14, sel_initWithData_, v15);

  if (v16)
  {
    if (objc_msgSend(v16, sel_hasZoneName)
      && (v17 = objc_msgSend(v16, sel_zoneName)) != 0)
    {
      v18 = v17;
      v31 = sub_1AD63B768();
      v20 = v19;

    }
    else
    {
      v31 = 0;
      v20 = 0;
    }
    if (objc_msgSend(v16, sel_hasShareURL))
    {
      v30[1] = v3;
      v21 = v20;
      v22 = objc_msgSend(v16, sel_shareURL);
      if (v22)
      {
        v23 = v22;
        v24 = a3;
        v25 = (uint64_t (*)(_QWORD))sub_1AD63B768();
        v27 = v26;

      }
      else
      {
        v24 = a3;
        v25 = 0;
        v27 = 0;
      }
      v20 = v21;
    }
    else
    {
      v24 = a3;
      v25 = 0;
      v27 = 0;
    }
    sub_1AD4527F0(v16, v13);
    if (v4)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ACFF64C0((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_1EECDB370);
      sub_1AD2037F0(v31, v20, v25, v27, (uint64_t)v11, v24);
      sub_1AD009758((uint64_t)v13, (uint64_t *)&unk_1EECDB370);

      v29 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v24, 0, 1, v29);
    }
  }
  else
  {
    v28 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a3, 1, 1, v28);
  }
}

void sub_1AD45144C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  void *v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  _QWORD *v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  _QWORD v31[48];
  _BYTE v32[352];
  _OWORD v33[24];

  v8 = objc_allocWithZone((Class)_BlastDoorASCodableActivityDataPreview);
  sub_1AD0040A0(a1, a2);
  v9 = (void *)sub_1AD63AFA0();
  sub_1AD00412C(a1, a2);
  v10 = objc_msgSend(v8, sel_initWithData_, v9);

  if (!v10)
  {
    sub_1AD45E1B8(v33);
LABEL_25:
    sub_1AD00FF28((uint64_t)v33, a3, &qword_1EECD4E38);
    return;
  }
  v11 = objc_msgSend(v10, sel_hasDate);
  v12 = 0;
  if (v11)
  {
    objc_msgSend(v10, sel_date);
    v12 = v13;
  }
  if (!objc_msgSend(v10, sel_hasActivitySnapshot))
  {
    sub_1AD45E1F8(v33);
    v16 = v33;
LABEL_11:
    sub_1AD00FF28((uint64_t)v16, (uint64_t)v32, &qword_1EECD4F48);
    if ((uint64_t)objc_msgSend(v10, sel_workoutsCount) >= 1
      && (v17 = objc_msgSend(v10, sel_workouts)) != 0
      && (v18 = v17,
          *(_QWORD *)&v33[0] = 0,
          sub_1AD32F2CC(0, &qword_1EECDB410),
          sub_1AD63B9A8(),
          v18,
          (v20 = *(_QWORD *)&v33[0]) != 0))
    {
      MEMORY[0x1E0C80A78](v19);
      v30 = v3;
      v21 = sub_1AD44E63C((void (*)(_QWORD *__return_ptr, id *, uint64_t *))sub_1AD45E268, (uint64_t)v29, v20);
      if (v4)
      {
LABEL_22:
        sub_1AD45DA38((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD291754);
        swift_bridgeObjectRelease();

        return;
      }
      v22 = v21;
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = MEMORY[0x1E0DEE9D8];
    }
    if ((uint64_t)objc_msgSend(v10, sel_achievementsCount) >= 1
      && (v23 = objc_msgSend(v10, sel_achievements)) != 0
      && (v24 = v23,
          *(_QWORD *)&v33[0] = 0,
          sub_1AD32F2CC(0, &qword_1EECDB408),
          sub_1AD63B9A8(),
          v24,
          (v26 = *(_QWORD *)&v33[0]) != 0))
    {
      MEMORY[0x1E0C80A78](v25);
      v30 = v3;
      v27 = sub_1AD44E7D0((void (*)(_OWORD *__return_ptr, id *, uint64_t *))sub_1AD45E234, (uint64_t)v29, v26);
      if (v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      v28 = v27;
      swift_bridgeObjectRelease();

    }
    else
    {

      v28 = MEMORY[0x1E0DEE9D8];
    }
    sub_1AD00FF28((uint64_t)v32, (uint64_t)v31, &qword_1EECD4F48);
    v31[44] = v22;
    v31[45] = v28;
    v31[46] = v12;
    LOBYTE(v31[47]) = v11 ^ 1;
    memcpy(v33, v31, 0x179uLL);
    nullsub_1(v33);
    goto LABEL_25;
  }
  v14 = objc_msgSend(v10, sel_activitySnapshot);
  if (v14)
  {
    v15 = v14;
    sub_1AD451988(v14, (uint64_t)v33);
    if (v4)
    {

      return;
    }

    memcpy(v31, v33, 0x159uLL);
    nullsub_1(v31);
    v16 = v31;
    goto LABEL_11;
  }
  __break(1u);
}

void sub_1AD4517FC(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[4];

  v7 = objc_allocWithZone((Class)_BlastDoorASCodableShareLocations);
  sub_1AD0040A0(a1, a2);
  v8 = (void *)sub_1AD63AFA0();
  sub_1AD00412C(a1, a2);
  v9 = objc_msgSend(v7, sel_initWithData_, v8);

  if (v9)
  {
    if (objc_msgSend(v9, sel_hasActivityShareURL)
      && (v10 = objc_msgSend(v9, sel_activityShareURL)) != 0)
    {
      v11 = v10;
      v12 = sub_1AD63B768();
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0;
    }
    if (objc_msgSend(v9, sel_hasRelationshipShareURL)
      && (v15 = objc_msgSend(v9, sel_relationshipShareURL)) != 0)
    {
      v16 = v15;
      v17 = (uint64_t (*)(_QWORD))sub_1AD63B768();
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    sub_1AD202DF8(v12, v14, v17, v19, v22);

    if (!v3)
    {
      v20 = v22[1];
      *a3 = v22[0];
      a3[1] = v20;
      v21 = v22[3];
      a3[2] = v22[2];
      a3[3] = v21;
    }
  }
  else
  {
    a3[2] = 0u;
    a3[3] = 0u;
    *a3 = 0u;
    a3[1] = 0u;
  }
}

void sub_1AD451988(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *v6;
  id v7;
  void *v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  char v38;
  id v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  id v52;
  uint64_t v53;
  unsigned int v54;
  char v55;
  uint64_t v56;
  unsigned int v57;
  char v58;
  uint64_t v59;
  unsigned int v60;
  char v61;
  uint64_t v62;
  unsigned int v63;
  char v64;
  uint64_t v65;
  unsigned int v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;

  if (!objc_msgSend(a1, sel_hasSample))
  {
    v46 = 0;
    v47 = 0;
    v44 = 0;
    v45 = 0;
    v42 = 0;
    v43 = 0;
    v41 = 0;
    v40 = 0;
LABEL_6:
    if (objc_msgSend(a1, sel_hasSourceUUID)
      && (v7 = objc_msgSend(a1, sel_sourceUUID)) != 0)
    {
      v8 = v7;
      v84 = sub_1AD63AFB8();
      v75 = v9;

    }
    else
    {
      v84 = 0;
      v75 = 0xF000000000000000;
    }
    v57 = objc_msgSend(a1, sel_hasSnapshotIndex);
    if (v57)
      v73 = objc_msgSend(a1, sel_snapshotIndex);
    else
      v73 = 0;
    v10 = objc_msgSend(a1, sel_hasTimeZoneOffsetFromUTCForNoon);
    if (v10)
      v72 = objc_msgSend(a1, sel_timeZoneOffsetFromUTCForNoon);
    else
      v72 = 0;
    v66 = objc_msgSend(a1, sel_hasEnergyBurned);
    if (v66)
    {
      objc_msgSend(a1, sel_energyBurned);
      v71 = v11;
    }
    else
    {
      v71 = 0;
    }
    v63 = objc_msgSend(a1, sel_hasEnergyBurnedGoal);
    if (v63)
    {
      objc_msgSend(a1, sel_energyBurnedGoal);
      v70 = v12;
    }
    else
    {
      v70 = 0;
    }
    v60 = objc_msgSend(a1, sel_hasBriskMinutes);
    if (v60)
    {
      objc_msgSend(a1, sel_briskMinutes);
      v69 = v13;
    }
    else
    {
      v69 = 0;
    }
    v54 = objc_msgSend(a1, sel_hasBriskMinutesGoal);
    if (v54)
    {
      objc_msgSend(a1, sel_briskMinutesGoal);
      v68 = v14;
    }
    else
    {
      v68 = 0;
    }
    v15 = objc_msgSend(a1, sel_hasActiveHours);
    if (v15)
    {
      objc_msgSend(a1, sel_activeHours);
      v65 = v16;
    }
    else
    {
      v65 = 0;
    }
    v17 = objc_msgSend(a1, sel_hasActiveHoursGoal);
    if (v17)
    {
      objc_msgSend(a1, sel_activeHoursGoal);
      v62 = v18;
    }
    else
    {
      v62 = 0;
    }
    v19 = objc_msgSend(a1, sel_hasWalkingAndRunningDistance);
    if (v19)
    {
      objc_msgSend(a1, sel_walkingAndRunningDistance);
      v59 = v20;
    }
    else
    {
      v59 = 0;
    }
    v21 = objc_msgSend(a1, sel_hasStepCount);
    if (v21)
    {
      objc_msgSend(a1, sel_stepCount);
      v56 = v22;
    }
    else
    {
      v56 = 0;
    }
    v23 = objc_msgSend(a1, sel_hasPushCount);
    if (v23)
    {
      objc_msgSend(a1, sel_pushCount);
      v53 = v24;
    }
    else
    {
      v53 = 0;
    }
    v25 = objc_msgSend(a1, sel_hasWheelchairUse);
    v74 = a2;
    if (v25)
      v52 = objc_msgSend(a1, sel_wheelchairUse);
    else
      v52 = 0;
    v26 = objc_msgSend(a1, sel_hasMmv);
    if (v26)
    {
      objc_msgSend(a1, "mmv");
      v50 = v27;
    }
    else
    {
      v50 = 0;
    }
    v51 = v57 ^ 1;
    v58 = v10 ^ 1;
    v67 = v66 ^ 1;
    v64 = v63 ^ 1;
    v61 = v60 ^ 1;
    v55 = v54 ^ 1;
    v49 = v15 ^ 1;
    v48 = v17 ^ 1;
    v28 = v19 ^ 1;
    v29 = v21 ^ 1;
    v30 = v23 ^ 1;
    v31 = v25 ^ 1;
    v32 = v26 ^ 1;
    v33 = objc_msgSend(a1, sel_hasMmg);
    if (v33)
    {
      objc_msgSend(a1, "mmg");
      v35 = v34;
    }
    else
    {
      v35 = 0;
    }
    v36 = v33 ^ 1;
    v37 = objc_msgSend(a1, sel_hasAmm);
    v38 = v37;
    if (v37)
      v39 = objc_msgSend(a1, "amm");
    else
      v39 = 0;
    v76 = v47;
    v77 = v46;
    v78 = v45;
    v79 = v44;
    v80 = v43;
    v81 = v42;
    v82 = v41;
    v83 = v40;
    sub_1AD204124((uint64_t)&v76, v84, v75, (uint64_t)v73, v51, (uint64_t)v72, v58, v71, v74, v67, v70, v64, v69, v61, v68, v55, v65, v49, v62,
      v48,
      v59,
      v28,
      v56,
      v29,
      v53,
      v30,
      (uint64_t)v52,
      v31,
      v50,
      v32,
      v35,
      v36,
      (uint64_t)v39,
      v38 ^ 1);
    return;
  }
  v5 = objc_msgSend(a1, sel_sample);
  if (!v5)
  {
    __break(1u);
    return;
  }
  v6 = v5;
  sub_1AD452D68(v5, (uint64_t)&v76);

  if (!v2)
  {
    v46 = v77;
    v47 = v76;
    v44 = v79;
    v45 = v78;
    v42 = v81;
    v43 = v80;
    v41 = v82;
    v40 = v83;
    goto LABEL_6;
  }
}

void sub_1AD451F40(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  char v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unsigned int v49;
  id v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  int v75;
  char v76;

  if (objc_msgSend(a1, sel_hasSample))
  {
    v4 = objc_msgSend(a1, sel_sample);
    if (!v4)
    {
      __break(1u);
      goto LABEL_61;
    }
    v5 = v4;
    sub_1AD452D68(v4, (uint64_t)&v67);

    if (v66)
      return;
    v40 = v68;
    v38 = v67;
    v39 = v69;
    v63 = v71;
    v64 = v70;
    v62 = v72;
    v61 = v73;
    v75 = v74;
  }
  else
  {
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v63 = 0;
    v64 = 0;
    v61 = 0;
    v62 = 0;
    v75 = 0;
  }
  v58 = objc_msgSend(a1, sel_hasType);
  if (v58)
    v60 = objc_msgSend(a1, sel_type);
  else
    v60 = 0;
  v56 = objc_msgSend(a1, sel_hasDuration);
  if (v56)
  {
    objc_msgSend(a1, sel_duration);
    v59 = v6;
  }
  else
  {
    v59 = 0;
  }
  v54 = objc_msgSend(a1, sel_hasTotalEnergyBurnedInCanonicalUnit);
  if (v54)
  {
    objc_msgSend(a1, sel_totalEnergyBurnedInCanonicalUnit);
    v57 = v7;
  }
  else
  {
    v57 = 0;
  }
  v53 = objc_msgSend(a1, sel_hasTotalBasalEnergyBurnedInCanonicalUnit);
  if (v53)
  {
    objc_msgSend(a1, sel_totalBasalEnergyBurnedInCanonicalUnit);
    v55 = v8;
  }
  else
  {
    v55 = 0;
  }
  v51 = objc_msgSend(a1, sel_hasTotalDistanceInCanonicalUnit);
  if (v51)
  {
    objc_msgSend(a1, sel_totalDistanceInCanonicalUnit);
    v52 = v9;
  }
  else
  {
    v52 = 0;
  }
  v49 = objc_msgSend(a1, sel_hasGoalType);
  if (v49)
    v50 = objc_msgSend(a1, sel_goalType);
  else
    v50 = 0;
  v47 = objc_msgSend(a1, sel_hasGoalInCanonicalUnit);
  if (v47)
  {
    objc_msgSend(a1, sel_goalInCanonicalUnit);
    v48 = v10;
  }
  else
  {
    v48 = 0;
  }
  if (objc_msgSend(a1, sel_hasBundleID)
    && (v11 = objc_msgSend(a1, sel_bundleID)) != 0)
  {
    v12 = v11;
    v13 = sub_1AD63B768();
    v45 = v14;
    v46 = v13;

  }
  else
  {
    v45 = 0;
    v46 = 0;
  }
  if (objc_msgSend(a1, sel_hasIsWatchWorkout))
    v44 = objc_msgSend(a1, sel_isWatchWorkout);
  else
    v44 = 2;
  if (objc_msgSend(a1, sel_hasIsIndoorWorkout))
    v43 = objc_msgSend(a1, sel_isIndoorWorkout);
  else
    v43 = 2;
  if (objc_msgSend(a1, sel_hasDeviceManufacturer)
    && (v15 = objc_msgSend(a1, sel_deviceManufacturer)) != 0)
  {
    v16 = v15;
    v17 = sub_1AD63B768();
    v41 = v18;
    v42 = v17;

  }
  else
  {
    v41 = 0;
    v42 = 0;
  }
  if (objc_msgSend(a1, sel_hasDeviceModel)
    && (v19 = objc_msgSend(a1, sel_deviceModel)) != 0)
  {
    v20 = v19;
    v21 = sub_1AD63B768();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  v24 = objc_msgSend(a1, sel_hasAmm);
  v25 = v24;
  if (v24)
    v26 = objc_msgSend(a1, "amm");
  else
    v26 = 0;
  v65 = a2;
  if (objc_msgSend(a1, sel_hasSeymourCatalogWorkoutIdentifier))
  {
    v27 = v26;
    v28 = v23;
    v29 = v21;
    v30 = objc_msgSend(a1, sel_seymourCatalogWorkoutIdentifier);
    if (v30)
    {
      v31 = v30;
      v32 = sub_1AD63B768();
      v34 = v33;

    }
    else
    {
      v32 = 0;
      v34 = 0;
    }
    v21 = v29;
    v23 = v28;
    v26 = v27;
  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  if (!objc_msgSend(a1, sel_hasSeymourMediaType))
  {
    v37 = 4;
    goto LABEL_58;
  }
  v35 = objc_msgSend(a1, sel_seymourMediaType);
  if (!v35)
  {
LABEL_61:
    __break(1u);
    return;
  }
  v36 = v35;
  sub_1AD63B768();

  sub_1AD44EE04((char *)&v67);
  v37 = v67;
LABEL_58:
  v67 = v38;
  v68 = v40;
  v69 = v39;
  v70 = v64;
  v71 = v63;
  v72 = v62;
  v73 = v61;
  v74 = v75;
  v76 = v37;
  sub_1AD206AB8(&v67, (uint64_t)v60, v58 ^ 1, v59, v56 ^ 1, v57, v54 ^ 1, v55, v65, v53 ^ 1, v52, v51 ^ 1, (uint64_t)v50, v49 ^ 1, v48, v47 ^ 1, v46, v45, v44,
    v43,
    v42,
    v41,
    v21,
    v23,
    (uint64_t)v26,
    v25 ^ 1,
    v32,
    v34,
    &v76);
}

void sub_1AD4524F4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  char v15;
  char v16;
  char v17;
  char v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  _QWORD v40[5];
  unsigned __int8 v41;
  uint64_t v42;
  unsigned __int8 v43;
  char v44;
  char v45;
  char v46;
  int v47;

  if (!objc_msgSend(a1, sel_hasSample))
  {
    v37 = 0;
    v35 = 0;
    v36 = 0;
    v33 = 0;
    v34 = 0;
    v31 = 0;
    v32 = 0;
    v47 = 0;
    goto LABEL_6;
  }
  v5 = objc_msgSend(a1, sel_sample);
  if (!v5)
  {
    __break(1u);
    return;
  }
  v6 = v5;
  sub_1AD452D68(v5, (uint64_t)v40);

  if (!v2)
  {
    v37 = v40[0];
    v35 = v40[2];
    v36 = v40[1];
    v33 = v40[4];
    v34 = v40[3];
    v32 = v41;
    v31 = v42;
    v47 = v43;
LABEL_6:
    v7 = objc_msgSend(a1, sel_hasCompletedDate);
    v8 = 0;
    v9 = 0;
    if (v7)
    {
      objc_msgSend(a1, sel_completedDate);
      v9 = v10;
    }
    v11 = objc_msgSend(a1, sel_hasDoubleValue);
    if (v11)
    {
      objc_msgSend(a1, sel_doubleValue);
      v8 = v12;
    }
    v13 = objc_msgSend(a1, sel_hasIntValue);
    if (v13)
      v39 = objc_msgSend(a1, sel_intValue);
    else
      v39 = 0;
    v14 = objc_msgSend(a1, sel_hasWorkoutActivityType);
    if (v14)
      v38 = objc_msgSend(a1, sel_workoutActivityType);
    else
      v38 = 0;
    v15 = v7 ^ 1;
    v16 = v11 ^ 1;
    v17 = v13 ^ 1;
    v18 = v14 ^ 1;
    if (objc_msgSend(a1, sel_hasDefinitionIdentifier)
      && (v19 = objc_msgSend(a1, sel_definitionIdentifier)) != 0)
    {
      v20 = v19;
      v21 = sub_1AD63B768();
      v23 = v22;

    }
    else
    {
      v21 = 0;
      v23 = 0;
    }
    if (objc_msgSend(a1, sel_hasTemplateUniqueName))
    {
      v30 = v23;
      v24 = v21;
      v25 = objc_msgSend(a1, sel_templateUniqueName);
      if (v25)
      {
        v26 = v25;
        v27 = sub_1AD63B768();
        v29 = v28;

      }
      else
      {
        v27 = 0;
        v29 = 0;
      }
      v21 = v24;
      v23 = v30;
    }
    else
    {
      v27 = 0;
      v29 = 0;
    }
    LOBYTE(v40[0]) = v15;
    v46 = v16;
    v45 = v17;
    v44 = v18;
    *(_QWORD *)a2 = v37;
    *(_QWORD *)(a2 + 8) = v36;
    *(_QWORD *)(a2 + 16) = v35;
    *(_QWORD *)(a2 + 24) = v34;
    *(_QWORD *)(a2 + 32) = v33;
    *(_QWORD *)(a2 + 40) = v32;
    *(_QWORD *)(a2 + 48) = v31;
    *(_BYTE *)(a2 + 56) = v47;
    *(_QWORD *)(a2 + 64) = v9;
    *(_BYTE *)(a2 + 72) = v15;
    *(_QWORD *)(a2 + 80) = v8;
    *(_BYTE *)(a2 + 88) = v16;
    *(_QWORD *)(a2 + 96) = v39;
    *(_BYTE *)(a2 + 104) = v17;
    *(_QWORD *)(a2 + 112) = v38;
    *(_BYTE *)(a2 + 120) = v18;
    *(_QWORD *)(a2 + 128) = v21;
    *(_QWORD *)(a2 + 136) = v23;
    *(_QWORD *)(a2 + 144) = v27;
    *(_QWORD *)(a2 + 152) = v29;
  }
}

void sub_1AD4527F0(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  _QWORD *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  void *v25;
  uint64_t v26;
  void *v27;
  unsigned int v28;
  unint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t *v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  unint64_t v44;
  id v45[4];
  void *v46;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_hasInvitationToken)
    || (v8 = objc_msgSend(a1, sel_invitationToken)) == 0)
  {
    v20 = type metadata accessor for CloudKitSharingToken();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
    return;
  }
  v9 = v8;
  v10 = sub_1AD63AFB8();
  v12 = v11;

  v13 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  sub_1AD0040A0(v10, v12);
  v14 = sub_1AD36E7D4();
  if (!v2)
  {
    v21 = v14;
    v44 = v12;
    sub_1AD00412C(v10, v12);
    v22 = v21;
    objc_msgSend(v22, sel__enableStrictSecureDecodingMode);
    objc_msgSend(v22, sel_setDecodingFailurePolicy_, 1);
    v23 = sub_1AD32F2CC(0, &qword_1EECDB010);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v25 = (void *)sub_1AD63B744();
    objc_msgSend(v22, sel_setClass_forClassName_, ObjCClassFromMetadata, v25);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB0B8);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1AD648160;
    *(_QWORD *)(v26 + 32) = v23;
    sub_1AD63B768();
    sub_1AD63BC24();
    v43 = v22;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v45[3])
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v27 = v46;
        v28 = objc_msgSend(a1, sel_hasShareURL);
        v29 = v44;
        if (v28)
        {
          v30 = objc_msgSend(a1, sel_shareURL);
          if (!v30)
          {
            __break(1u);
            return;
          }
          v31 = v30;
          sub_1AD63B768();

          sub_1AD63AF04();
          swift_bridgeObjectRelease();
          v32 = sub_1AD63AF28();
          v33 = *(_QWORD *)(v32 - 8);
          v34 = 0;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v7, 1, v32) != 1)
          {
            v34 = (void *)sub_1AD63AE98();
            (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v32);
          }
          objc_msgSend(v27, sel_setShareURL_, v34);

          v29 = v44;
        }
        sub_1AD4E29DC(v27, a2);

        sub_1AD00412C(v10, v29);
        v35 = type metadata accessor for CloudKitSharingToken();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a2, 0, 1, v35);
        return;
      }
    }
    else
    {
      sub_1AD009758((uint64_t)v45, &qword_1EECDC5F0);
    }
    v39 = v44;
    v40 = sub_1AD63BD8C();
    swift_allocError();
    v42 = v41;
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v42, *MEMORY[0x1E0DEC458], v40);
    swift_willThrow();

    sub_1AD00412C(v10, v39);
    return;
  }
  sub_1AD00412C(v10, v12);
  v45[0] = v2;
  v15 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
  sub_1AD32F2CC(0, (unint64_t *)&qword_1EECDB380);
  if ((swift_dynamicCast() & 1) != 0)
  {

    v16 = v46;
    sub_1AD0DDA60();
    swift_allocError();
    v18 = v17;
    v19 = v16;
    sub_1AD601B20(v19, 0xD00000000000001CLL, 0x80000001AD6AA230, v18);
    swift_willThrow();
    sub_1AD00412C(v10, v12);

  }
  else
  {

    sub_1AD0DDA60();
    swift_allocError();
    v37 = v36;
    v38 = v2;
    sub_1AD6015CC(v2, 0xD00000000000001CLL, 0x80000001AD6AA230, v37);
    swift_willThrow();
    sub_1AD00412C(v10, v12);

  }
}

uint64_t sub_1AD452D68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;

  if (objc_msgSend(a1, sel_hasUuid)
    && (v4 = objc_msgSend(a1, sel_uuid)) != 0)
  {
    v5 = v4;
    v6 = sub_1AD63AFB8();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0xF000000000000000;
  }
  v9 = objc_msgSend(a1, sel_hasStartDate);
  if (v9)
  {
    objc_msgSend(a1, sel_startDate);
    v11 = v10;
  }
  else
  {
    v11 = 0;
  }
  v12 = objc_msgSend(a1, sel_hasEndDate);
  if (v12)
  {
    objc_msgSend(a1, sel_endDate);
    v14 = v13;
  }
  else
  {
    v14 = 0;
  }
  return sub_1AD209450(v6, v8, v11, v9 ^ 1, v14, v12 ^ 1, a2);
}

void sub_1AD452E78()
{
  __asm { BR              X10 }
}

uint64_t sub_1AD452EA8()
{
  return 1104;
}

void sub_1AD452F6C()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v12 = type metadata accessor for SecureCloudPingRequestProtobuf(0);
  MEMORY[0x1E0C80A78](v12);
  v13 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2428);
  MEMORY[0x1E0C80A78](v2);
  v18 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage(0);
  v16 = *(_QWORD *)(v4 - 8);
  v17 = v4;
  MEMORY[0x1E0C80A78](v4);
  v15 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2420);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse(0);
  MEMORY[0x1E0C80A78](v7);
  v14 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2418);
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest(0);
  MEMORY[0x1E0C80A78](v10);
  __asm { BR              X10 }
}

uint64_t sub_1AD453148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for IDSActivitySharingInvitation(0);
  v4 = *(_QWORD *)(v2 - 152);
  sub_1ACFF64C0(v1 + *(int *)(v3 + 28), v4, &qword_1EECD2428);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 168) + 48))(v4, 1, *(_QWORD *)(v2 - 160)) == 1)
  {
    sub_1AD009758(v4, &qword_1EECD2428);
    sub_1AD0DDA60();
    swift_allocError();
    *v5 = 0xD000000000000036;
    v5[1] = 0x80000001AD6AA1F0;
    v5[2] = 0x2065646172677055;
    v5[3] = 0xEF6567617373656DLL;
    v5[4] = 0xD00000000000001CLL;
    v5[5] = 0x80000001AD6AA230;
    swift_willThrow();
  }
  else
  {
    v6 = *(_QWORD *)(v2 - 176);
    sub_1AD2A5214(v4, v6, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    v7 = *(_QWORD *)(v2 - 72);
    v8 = sub_1AD454270(v6);
    if (!v7)
      v0 = v8;
    sub_1AD066230(v6, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  }
  return v0;
}

uint64_t sub_1AD45384C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  void (*v15)(void);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t result;
  char *v35;
  void (*v36)(void);
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v42 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v40 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2410);
  MEMORY[0x1E0C80A78](v4);
  v45 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo(0);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  MEMORY[0x1E0C80A78](v6);
  v39 = (char **)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD63B240();
  v11 = &v10[v8[5]];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = (uint64_t *)&v10[v8[6]];
  *v12 = 0;
  v12[1] = 0;
  v13 = (uint64_t *)&v10[v8[7]];
  *v13 = 0;
  v13[1] = 0;
  v14 = (uint64_t *)&v10[v8[8]];
  *v14 = 0;
  v14[1] = 0;
  v15 = *(void (**)(void))(v42 + 56);
  v35 = &v10[v8[9]];
  v36 = v15;
  v37 = v2;
  v15();
  v16 = &v10[v8[10]];
  v38 = v16;
  *(_DWORD *)v16 = 0;
  v16[4] = 1;
  if ((*(_BYTE *)(a1 + 8) & 1) == 0)
  {
    *(_QWORD *)v11 = *(_QWORD *)a1;
    v11[8] = 0;
  }
  v18 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  if (v17)
  {
    if (v17 == 1)
      goto LABEL_22;
    *v12 = v18;
    v12[1] = v17;
  }
  v20 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  if (v19)
  {
    if (v19 == 1)
      goto LABEL_22;
    *v13 = v20;
    v13[1] = v19;
  }
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(_QWORD *)(a1 + 104);
  if (v22)
  {
    if (v22 == 1)
      goto LABEL_22;
    *v14 = v21;
    v14[1] = v22;
  }
  v42 = v21;
  v41 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest(0);
  v23 = v45;
  sub_1ACFF64C0(a1 + *(int *)(v41 + 32), v45, &qword_1EECD2410);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v23, 1, v44) == 1)
  {
    sub_1AD003E48(v18, v17);
    sub_1AD003E48(v20, v19);
    sub_1AD003E48(v42, v22);
    sub_1AD009758(v23, &qword_1EECD2410);
  }
  else
  {
    v24 = v23;
    v25 = v39;
    sub_1AD2A5214(v24, (uint64_t)v39, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
    sub_1AD003E48(v18, v17);
    sub_1AD003E48(v20, v19);
    v26 = v22;
    v27 = (uint64_t)v25;
    sub_1AD003E48(v42, v26);
    v28 = v40;
    v29 = v46;
    sub_1AD4547B8(v25, v40);
    if (v29)
    {
      sub_1AD066230((uint64_t)v25, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      sub_1AD066230((uint64_t)v10, type metadata accessor for SecureCloudInviteRequestProtobuf);
      return v28;
    }
    v30 = (uint64_t)v35;
    sub_1AD009758((uint64_t)v35, &qword_1EECDB5B0);
    sub_1AD2A5214(v28, v30, type metadata accessor for SecureCloudInviteUserInfoProtobuf);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v36)(v30, 0, 1, v37);
    sub_1AD066230(v27, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
  }
  v31 = a1 + *(int *)(v41 + 36);
  if ((*(_BYTE *)(v31 + 21) & 1) == 0)
  {
    v32 = *(unsigned int *)(v31 + 16) | ((unint64_t)*(unsigned __int8 *)(v31 + 20) << 32);
    if ((v32 & 0x100000000) == 0)
    {
      v33 = v38;
      *(_DWORD *)v38 = v32;
      v33[4] = 0;
    }
    sub_1ACFF9724(&qword_1EECDB660, type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&unk_1AD67D764);
    v28 = sub_1AD63B348();
    sub_1AD066230((uint64_t)v10, type metadata accessor for SecureCloudInviteRequestProtobuf);
    return v28;
  }
LABEL_22:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD453C7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  void (*v16)(_QWORD, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD v25[8];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;

  v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v25[6] = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2410);
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo(0);
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  MEMORY[0x1E0C80A78](v6);
  v25[4] = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD63B240();
  v11 = &v10[v8[5]];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = &v10[v8[6]];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v10[v8[7]];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v10[v8[8]];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v15 = &v10[v8[9]];
  *(_QWORD *)v15 = 0;
  *((_WORD *)v15 + 4) = 256;
  v16 = *(void (**)(_QWORD, uint64_t, uint64_t))(v26 + 56);
  v25[0] = &v10[v8[10]];
  v25[1] = v16;
  v25[2] = v2;
  v16(v25[0], 1, 1);
  v17 = &v10[v8[11]];
  *(_DWORD *)v17 = 0;
  v17[4] = 1;
  if ((*(_BYTE *)(a1 + 8) & 1) == 0)
  {
    *(_QWORD *)v11 = *(_QWORD *)a1;
    v11[8] = 0;
  }
  v18 = *(_QWORD *)(a1 + 40);
  if (v18)
  {
    if (v18 == 1)
      goto LABEL_13;
    *(_QWORD *)v12 = *(_QWORD *)(a1 + 32);
    *((_QWORD *)v12 + 1) = v18;
  }
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  if (v20)
  {
    if (v20 == 1)
      goto LABEL_13;
    *(_QWORD *)v13 = v19;
    *((_QWORD *)v13 + 1) = v20;
  }
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(_QWORD *)(a1 + 104);
  if (!v22)
    goto LABEL_12;
  if (v22 != 1)
  {
    *(_QWORD *)v14 = v21;
    *((_QWORD *)v14 + 1) = v22;
LABEL_12:
    v25[3] = v17;
    v23 = *(unsigned __int8 *)(a1 + 112);
    v25[7] = v21;
    v26 = v19;
    __asm { BR              X11 }
  }
LABEL_13:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD454104(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v2 = type metadata accessor for SecureCloudWithdrawRequestProtobuf(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  v6 = *((_BYTE *)a1 + 8);
  v8 = a1[4];
  v7 = a1[5];
  sub_1AD63B240();
  v9 = &v4[*(int *)(v2 + 20)];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = &v4[*(int *)(v2 + 24)];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  if ((v6 & 1) == 0)
  {
    *(_QWORD *)v9 = v5;
    v9[8] = 0;
  }
  if (!v7)
    goto LABEL_6;
  if (v7 != 1)
  {
    *(_QWORD *)v10 = v8;
    *((_QWORD *)v10 + 1) = v7;
LABEL_6:
    sub_1ACFF9724(&qword_1EECDB6E8, type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&unk_1AD67E024);
    swift_bridgeObjectRetain();
    v11 = sub_1AD63B348();
    sub_1AD066230((uint64_t)v4, type metadata accessor for SecureCloudWithdrawRequestProtobuf);
    return v11;
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD454270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  char *v12;
  uint64_t *v13;
  uint64_t *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int v34;
  char *v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2408);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem(0);
  v46 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (uint64_t *)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD63B240();
  v11 = (uint64_t *)&v10[v8[5]];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v10[v8[6]];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = (uint64_t *)&v10[v8[7]];
  *v13 = 0;
  v13[1] = 0;
  v14 = (uint64_t *)&v10[v8[8]];
  *v14 = 0;
  v14[1] = 0;
  v15 = &v10[v8[9]];
  *(_OWORD *)v15 = xmmword_1AD67A180;
  v16 = &v10[v8[10]];
  *(_QWORD *)v16 = 0;
  v40 = v16;
  *((_WORD *)v16 + 4) = 256;
  v17 = &v10[v8[11]];
  *(_DWORD *)v17 = 0;
  v17[4] = 1;
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 24);
  if (v19)
  {
    if (v19 == 1)
      goto LABEL_26;
    *v11 = v18;
    v11[1] = v19;
  }
  v47 = v6;
  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    *(_QWORD *)v12 = *(_QWORD *)(a1 + 32);
    v12[8] = 0;
  }
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  if (v21)
  {
    if (v21 == 1)
      goto LABEL_26;
    *v14 = v20;
    v14[1] = v21;
  }
  v44 = v20;
  v45 = v18;
  v39 = (uint64_t *)v15;
  v42 = v1;
  v22 = (int *)type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage(0);
  v23 = a1 + v22[9];
  v24 = *(_QWORD *)(v23 + 16);
  v25 = *(_QWORD *)(v23 + 24);
  if (v25)
  {
    if (v25 == 1)
      goto LABEL_26;
    *v13 = v24;
    v13[1] = v25;
  }
  v26 = a1 + v22[10];
  if ((*(_BYTE *)(v26 + 21) & 1) == 0)
  {
    v43 = v24;
    v27 = *(unsigned int *)(v26 + 16) | ((unint64_t)*(unsigned __int8 *)(v26 + 20) << 32);
    v28 = v48;
    if ((v27 & 0x100000000) == 0)
    {
      *(_DWORD *)v17 = v27;
      v17[4] = 0;
    }
    sub_1ACFF64C0(a1 + v22[8], (uint64_t)v5, &qword_1EECD2408);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v5, 1, v47) == 1)
    {
      sub_1AD003E48(v45, v19);
      sub_1AD003E48(v44, v21);
      sub_1AD003E48(v43, v25);
      sub_1AD009758((uint64_t)v5, &qword_1EECD2408);
    }
    else
    {
      v29 = (uint64_t)v5;
      v30 = v41;
      sub_1AD2A5214(v29, (uint64_t)v41, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
      sub_1AD003E48(v45, v19);
      sub_1AD003E48(v44, v21);
      sub_1AD003E48(v43, v25);
      v31 = sub_1AD454B9C(v30);
      if (v28)
      {
        sub_1AD066230((uint64_t)v30, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
        goto LABEL_23;
      }
      v33 = v39;
      *v39 = v31;
      v33[1] = v32;
      sub_1AD066230((uint64_t)v30, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
    }
    v34 = *(unsigned __int8 *)(a1 + 80);
    if (v34 != 2)
    {
      v35 = v40;
      *(_QWORD *)v40 = v34 & 1;
      *((_WORD *)v35 + 4) = 1;
    }
    sub_1ACFF9724(&qword_1EECDB6D0, type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&unk_1AD67DE94);
    v36 = sub_1AD63B348();
    if (!v28)
    {
      v21 = v36;
      sub_1AD066230((uint64_t)v10, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
      return v21;
    }
LABEL_23:
    sub_1AD066230((uint64_t)v10, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
    return v21;
  }
LABEL_26:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD454648(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v2 = type metadata accessor for SecureCloudPingResponseProtobuf(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[2];
  v5 = a1[3];
  v8 = a1[6];
  v7 = a1[7];
  sub_1AD63B240();
  v9 = (uint64_t *)&v4[*(int *)(v2 + 20)];
  *v9 = 0;
  v9[1] = 0;
  v10 = (uint64_t *)&v4[*(int *)(v2 + 24)];
  *v10 = 0;
  v10[1] = 0;
  if (v5)
  {
    if (v5 == 1)
      goto LABEL_8;
    *v9 = v6;
    v9[1] = v5;
  }
  if (!v7)
  {
LABEL_7:
    sub_1AD003E48(v6, v5);
    sub_1AD003E48(v8, v7);
    sub_1ACFF9724(&qword_1EECDB6B8, type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&unk_1AD67DD2C);
    v11 = sub_1AD63B348();
    sub_1AD066230((uint64_t)v4, type metadata accessor for SecureCloudPingResponseProtobuf);
    return v11;
  }
  if (v7 != 1)
  {
    *v10 = v8;
    v10[1] = v7;
    goto LABEL_7;
  }
LABEL_8:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD4547B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t *v13;
  int v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  _OWORD *v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  _OWORD *v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  _BYTE v59[384];
  _QWORD v60[48];
  _BYTE v61[384];
  _BYTE v62[392];
  uint64_t v63;

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2408);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem(0);
  v58 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v56 = (_QWORD *)((char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AD63B240();
  v11 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v12 = a2 + v11[5];
  *(_OWORD *)v12 = xmmword_1AD67A180;
  v54 = (_OWORD *)(a2 + v11[6]);
  *v54 = xmmword_1AD67A180;
  v55 = (_OWORD *)(a2 + v11[7]);
  *v55 = xmmword_1AD67A180;
  v13 = (uint64_t *)(a2 + v11[8]);
  *v13 = 0;
  v13[1] = 0;
  sub_1AD00FF28((uint64_t)a1, (uint64_t)v61, &qword_1EECD4E38);
  sub_1AD00FF28((uint64_t)v61, (uint64_t)v62, &qword_1EECD4E38);
  v14 = sub_1AD45DAD4((uint64_t)v62);
  v57 = v9;
  if (v14 != 1)
  {
    memcpy(v59, v62, 0x179uLL);
    sub_1AD00FF28((uint64_t)v61, (uint64_t)v60, &qword_1EECD4E38);
    sub_1AD45DD00((uint64_t)v60);
    v15 = sub_1AD454EEC((uint64_t)v59);
    if (v3)
    {
      sub_1AD066230(a2, type metadata accessor for SecureCloudInviteUserInfoProtobuf);
      return sub_1AD291920((uint64_t)v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD2915BC);
    }
    v18 = v15;
    v19 = v16;
    sub_1AD291920((uint64_t)v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD2915BC);
    *(_QWORD *)v12 = v18;
    *(_QWORD *)(v12 + 8) = v19;
    v9 = v57;
  }
  v20 = a1[50];
  v21 = a1[51];
  if (v21)
  {
    if (v21 == 1)
    {
      result = sub_1AD63BE28();
      __break(1u);
      return result;
    }
    *v13 = v20;
    v13[1] = v21;
  }
  v22 = a1[52];
  if (v22)
  {
    v47 = a2;
    v43[1] = v2;
    v44 = v3;
    v24 = a1[53];
    v23 = a1[54];
    v26 = a1[55];
    v25 = a1[56];
    v28 = a1[57];
    v27 = a1[58];
    v43[0] = a1;
    v29 = a1[59];
    v60[0] = v22;
    v60[1] = v24;
    v60[2] = v23;
    v60[3] = v26;
    v60[4] = v25;
    v60[5] = v28;
    v60[6] = v27;
    v60[7] = v29;
    sub_1AD003E48(v20, v21);
    v45 = v22;
    v46 = v24;
    v48 = v23;
    v49 = v26;
    v50 = v25;
    v51 = v28;
    v52 = v27;
    v53 = v29;
    sub_1AD291C00(v22, v24, v23, v26, v25, v28, v27, v29);
    v30 = v44;
    v31 = sub_1AD4552D8(v60);
    v4 = v30;
    if (v30)
    {
      sub_1AD066230(v47, type metadata accessor for SecureCloudInviteUserInfoProtobuf);
      return sub_1AD2918B8(v45, v46, v48, v49, v50, v51, v52, v53);
    }
    v33 = v31;
    v34 = v32;
    sub_1AD2918B8(v45, v46, v48, v49, v50, v51, v52, v53);
    v35 = v55;
    *(_QWORD *)v55 = v33;
    *((_QWORD *)v35 + 1) = v34;
    v9 = v57;
    a2 = v47;
    a1 = (_QWORD *)v43[0];
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v36 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo(0);
  sub_1ACFF64C0((uint64_t)a1 + *(int *)(v36 + 28), (uint64_t)v9, &qword_1EECD2408);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v9, 1, v63) == 1)
    return sub_1AD009758((uint64_t)v9, &qword_1EECD2408);
  v37 = v56;
  sub_1AD2A5214((uint64_t)v9, (uint64_t)v56, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
  v38 = sub_1AD454B9C(v37);
  if (v4)
  {
    sub_1AD066230((uint64_t)v37, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
    v40 = type metadata accessor for SecureCloudInviteUserInfoProtobuf;
    v41 = a2;
  }
  else
  {
    v42 = v54;
    *(_QWORD *)v54 = v38;
    *((_QWORD *)v42 + 1) = v39;
    v40 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem;
    v41 = (uint64_t)v37;
  }
  return sub_1AD066230(v41, v40);
}

uint64_t sub_1AD454B9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CloudKitSharingToken();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorASCodableSecureCloudShareItem), sel_init);
  if (!v12)
  {
    sub_1AD0DDA60();
    swift_allocError();
    *v19 = 0xD000000000000036;
    v19[1] = 0x80000001AD6AA1F0;
    v19[2] = 0x5064696C61766E69;
    v19[3] = 0xEF6675626F746F72;
    v19[4] = 0xD00000000000001CLL;
    v19[5] = 0x80000001AD6AA230;
    swift_willThrow();
    return v1;
  }
  v13 = v12;
  if (a1[1])
  {
    v14 = (void *)sub_1AD63B744();
    objc_msgSend(v13, sel_setZoneName_, v14);

  }
  v15 = a1[5];
  if (v15)
  {
    v30 = v1;
    v31 = v11;
    if (v15 == 1)
      goto LABEL_17;
    v16 = a1[4];
    swift_bridgeObjectRetain();
    v17 = (void *)sub_1AD63B744();
    sub_1AD003F24(v16, v15);
    objc_msgSend(v13, sel_setShareURL_, v17);

    v3 = v2;
    v11 = v31;
    v1 = v30;
  }
  v18 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem(0);
  sub_1ACFF64C0((uint64_t)a1 + *(int *)(v18 + 24), (uint64_t)v7, (uint64_t *)&unk_1EECDB370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    sub_1AD2A5214((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
    v20 = sub_1AD4554D0();
    if (!v3)
    {
      v22 = v20;
      v23 = v21;
      v24 = (uint64_t)v11;
      v25 = (void *)sub_1AD63AFA0();
      sub_1AD00412C(v22, v23);
      objc_msgSend(v13, sel_setInvitationToken_, v25);

      sub_1AD066230(v24, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
      goto LABEL_13;
    }
    sub_1AD066230((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);

    return v1;
  }
  sub_1AD009758((uint64_t)v7, (uint64_t *)&unk_1EECDB370);
LABEL_13:
  v26 = objc_msgSend(v13, sel_data);
  if (v26)
  {
    v27 = v26;
    v1 = sub_1AD63AFB8();

    return v1;
  }
  __break(1u);
LABEL_17:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

id sub_1AD454EEC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  char v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  id result;
  id v19;
  void *v20;
  id v21;
  void *v22;
  _BYTE v23[16];
  unint64_t v24;
  _BYTE v25[352];
  uint64_t v26[44];
  _BYTE v27[352];
  _BYTE v28[360];

  sub_1AD00FF28(a1, (uint64_t)v28, &qword_1EECD4F48);
  v5 = *(_QWORD *)(a1 + 352);
  v4 = *(_QWORD *)(a1 + 360);
  v6 = *(double *)(a1 + 368);
  v7 = *(_BYTE *)(a1 + 376);
  v8 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorASCodableActivityDataPreview), sel_init);
  if (!v8)
  {
    sub_1AD0DDA60();
    swift_allocError();
    *v12 = 0xD000000000000036;
    v12[1] = 0x80000001AD6AA1F0;
    v12[2] = 0x5064696C61766E69;
    v12[3] = 0xEF6675626F746F72;
    v12[4] = 0xD00000000000001CLL;
    v12[5] = 0x80000001AD6AA230;
    swift_willThrow();
    return (id)v1;
  }
  v9 = v8;
  sub_1AD00FF28((uint64_t)v28, (uint64_t)v27, &qword_1EECD4F48);
  v10 = sub_1AD45D830((uint64_t)v27);
  if ((_DWORD)v10 != 1)
  {
    memcpy(v25, v27, 0x159uLL);
    sub_1AD00FF28((uint64_t)v28, (uint64_t)v26, &qword_1EECD4F48);
    sub_1AD292360(v26);
    v11 = sub_1AD455750((uint64_t)v25);
    if (v2)
    {

      sub_1AD45DA38((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD291754);
      return (id)v1;
    }
    v13 = (void *)v11;
    objc_msgSend(v9, sel_setActivitySnapshot_, v11);

    v10 = sub_1AD45DA38((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD291754);
  }
  if (*(_QWORD *)(v5 + 16))
  {
    MEMORY[0x1E0C80A78](v10);
    v24 = v1;
    swift_bridgeObjectRetain();
    v14 = sub_1AD44E3CC((void (*)(uint64_t *__return_ptr, _BYTE *, uint64_t *))sub_1AD45DF9C, (uint64_t)v23, v5);
    swift_bridgeObjectRelease();
    if (v2)
    {
LABEL_12:

      return (id)v1;
    }
    sub_1AD38720C(v14);
    swift_bridgeObjectRelease();
    v15 = objc_allocWithZone(MEMORY[0x1E0C99DE8]);
    v16 = (void *)sub_1AD63B990();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v15, sel_initWithArray_, v16);

    objc_msgSend(v9, sel_setWorkouts_, v17);
  }
  if (*(_QWORD *)(v4 + 16))
  {
    MEMORY[0x1E0C80A78](v10);
    v24 = v1;
    swift_bridgeObjectRetain();
    v1 = sub_1AD44E4E8((void (*)(uint64_t *__return_ptr, _OWORD *, uint64_t *))sub_1AD45E00C, (uint64_t)v23, v4);
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_12;
    sub_1AD387220(v1);
    swift_bridgeObjectRelease();
    v19 = objc_allocWithZone(MEMORY[0x1E0C99DE8]);
    v20 = (void *)sub_1AD63B990();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v19, sel_initWithArray_, v20);

    objc_msgSend(v9, sel_setAchievements_, v21);
  }
  if ((v7 & 1) == 0)
    objc_msgSend(v9, sel_setDate_, v6);
  result = objc_msgSend(v9, sel_data);
  if (result)
  {
    v22 = result;
    v1 = sub_1AD63AFB8();

    return (id)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD4552D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  v1 = a1[2];
  v2 = a1[3];
  v3 = a1[6];
  v4 = a1[7];
  v5 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorASCodableShareLocations), sel_init);
  if (!v5)
  {
    sub_1AD0DDA60();
    swift_allocError();
    *v13 = 0xD000000000000036;
    v13[1] = 0x80000001AD6AA1F0;
    v13[2] = 0x5064696C61766E69;
    v13[3] = 0xEF6675626F746F72;
    v13[4] = 0xD00000000000001CLL;
    v13[5] = 0x80000001AD6AA230;
    return swift_willThrow();
  }
  v6 = v5;
  if (v2)
  {
    if (v2 == 1)
      goto LABEL_12;
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1AD63B744();
    sub_1AD003F24(v1, v2);
    objc_msgSend(v6, sel_setActivityShareURL_, v7);

  }
  if (!v4)
  {
LABEL_8:
    v9 = objc_msgSend(v6, sel_data);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1AD63AFB8();

      return v11;
    }
    __break(1u);
    goto LABEL_12;
  }
  if (v4 != 1)
  {
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1AD63B744();
    sub_1AD003F24(v3, v4);
    objc_msgSend(v6, sel_setRelationshipShareURL_, v8);

    goto LABEL_8;
  }
LABEL_12:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD4554D0()
{
  void *v0;
  id v1;
  os_log_type_t v2;
  NSObject *v3;
  os_log_type_t v4;
  id v5;
  id v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_1AD4E2BB8();
  if (v0)
  {
    v2 = sub_1AD63BB7C();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    v3 = qword_1ED2E7530;
    v4 = v2;
    if (os_log_type_enabled((os_log_t)qword_1ED2E7530, v2))
    {
      v5 = v0;
      v6 = v0;
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v9 = v0;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      sub_1AD63BC60();
      *v8 = v16;

      _os_log_impl(&dword_1ACFC8000, v3, v4, "Error when attempting to recompose CloudSharingMetadata token: %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC98);
      swift_arrayDestroy();
      MEMORY[0x1AF44BED4](v8, -1, -1);
      MEMORY[0x1AF44BED4](v7, -1, -1);
    }
    return swift_willThrow();
  }
  else
  {
    v11 = v1;
    objc_msgSend(v11, sel_setShareURL_, 0);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
    v13 = (void *)sub_1AD63B744();
    sub_1AD32F2CC(0, &qword_1EECDB010);
    objc_msgSend(v12, sel_setClassName_forClass_, v13, swift_getObjCClassFromMetadata());

    objc_msgSend(v12, sel_encodeObject_forKey_, v11, *MEMORY[0x1E0CB2CD0]);
    v14 = objc_msgSend(v12, sel_encodedData);
    v15 = sub_1AD63AFB8();

    return v15;
  }
}

uint64_t sub_1AD455750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  void *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  _QWORD v49[5];
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  v32 = *(_QWORD *)(a1 + 88);
  v24 = *(_QWORD *)(a1 + 80);
  v25 = *(_QWORD *)(a1 + 112);
  v33 = *(_BYTE *)(a1 + 121);
  v34 = *(_BYTE *)(a1 + 120);
  v26 = *(_QWORD *)(a1 + 128);
  v9 = *(double *)(a1 + 144);
  v35 = *(_BYTE *)(a1 + 136);
  v36 = *(_BYTE *)(a1 + 152);
  v10 = *(double *)(a1 + 160);
  v11 = *(double *)(a1 + 176);
  v37 = *(_BYTE *)(a1 + 168);
  v38 = *(_BYTE *)(a1 + 184);
  v12 = *(double *)(a1 + 192);
  v13 = *(double *)(a1 + 208);
  v39 = *(_BYTE *)(a1 + 200);
  v40 = *(_BYTE *)(a1 + 216);
  v14 = *(double *)(a1 + 224);
  v15 = *(double *)(a1 + 240);
  v41 = *(_BYTE *)(a1 + 232);
  v42 = *(_BYTE *)(a1 + 248);
  v16 = *(double *)(a1 + 256);
  v27 = *(double *)(a1 + 272);
  v43 = *(_BYTE *)(a1 + 264);
  v44 = *(_BYTE *)(a1 + 280);
  v28 = *(_QWORD *)(a1 + 288);
  v45 = *(_BYTE *)(a1 + 296);
  v46 = *(_BYTE *)(a1 + 312);
  v29 = *(double *)(a1 + 304);
  v30 = *(double *)(a1 + 320);
  v31 = *(_QWORD *)(a1 + 336);
  v47 = *(_BYTE *)(a1 + 328);
  v48 = *(_BYTE *)(a1 + 344);
  v17 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorASCodableActivitySnapshot), sel_init);
  if (!v17)
  {
    sub_1AD0DDA60();
    swift_allocError();
    *v20 = 0xD000000000000036;
    v20[1] = 0x80000001AD6AA1F0;
    v20[2] = 0x5064696C61766E69;
    v20[3] = 0xEF6675626F746F72;
    v20[4] = 0xD00000000000001CLL;
    v20[5] = 0x80000001AD6AA230;
    swift_willThrow();
    return (uint64_t)v17;
  }
  if (v1)
  {
    v49[0] = v1;
    v49[1] = v2;
    v49[2] = v4;
    v49[3] = v3;
    v49[4] = v6;
    v50 = v5 & 1;
    v51 = v7;
    v52 = v8 & 1;
    swift_retain();
    sub_1AD285EE4(v4, v3);
    v18 = v53;
    v19 = sub_1AD456590((uint64_t)v49);
    v53 = v18;
    if (v18)
    {

      sub_1AD2917C0(v1, v2, v4, v3);
      return (uint64_t)v17;
    }
    v21 = (void *)v19;
    objc_msgSend(v17, sel_setSample_, v19);

    sub_1AD2917C0(v1, v2, v4, v3);
  }
  if (v32 >> 60 != 11)
  {
    if (v32 >> 60 != 15)
    {
      sub_1AD0040A0(v24, v32);
      v22 = (void *)sub_1AD63AFA0();
      objc_msgSend(v17, sel_setSourceUUID_, v22);

      sub_1AD009794(v24, v32);
    }
    if ((v33 & 1) == 0)
    {
      if ((v34 & 1) != 0)
      {
        if ((v35 & 1) != 0)
          goto LABEL_13;
      }
      else
      {
        objc_msgSend(v17, sel_setSnapshotIndex_, v25);
        if ((v35 & 1) != 0)
        {
LABEL_13:
          if ((v36 & 1) != 0)
            goto LABEL_14;
          goto LABEL_30;
        }
      }
      objc_msgSend(v17, sel_setTimeZoneOffsetFromUTCForNoon_, v26);
      if ((v36 & 1) != 0)
      {
LABEL_14:
        if ((v37 & 1) != 0)
          goto LABEL_15;
        goto LABEL_31;
      }
LABEL_30:
      objc_msgSend(v17, sel_setEnergyBurned_, v9);
      if ((v37 & 1) != 0)
      {
LABEL_15:
        if ((v38 & 1) != 0)
          goto LABEL_16;
        goto LABEL_32;
      }
LABEL_31:
      objc_msgSend(v17, sel_setEnergyBurnedGoal_, v10);
      if ((v38 & 1) != 0)
      {
LABEL_16:
        if ((v39 & 1) != 0)
          goto LABEL_17;
        goto LABEL_33;
      }
LABEL_32:
      objc_msgSend(v17, sel_setBriskMinutes_, v11);
      if ((v39 & 1) != 0)
      {
LABEL_17:
        if ((v40 & 1) != 0)
          goto LABEL_18;
        goto LABEL_34;
      }
LABEL_33:
      objc_msgSend(v17, sel_setBriskMinutesGoal_, v12);
      if ((v40 & 1) != 0)
      {
LABEL_18:
        if ((v41 & 1) != 0)
          goto LABEL_19;
        goto LABEL_35;
      }
LABEL_34:
      objc_msgSend(v17, sel_setActiveHours_, v13);
      if ((v41 & 1) != 0)
      {
LABEL_19:
        if ((v42 & 1) != 0)
          goto LABEL_20;
        goto LABEL_36;
      }
LABEL_35:
      objc_msgSend(v17, sel_setActiveHoursGoal_, v14);
      if ((v42 & 1) != 0)
      {
LABEL_20:
        if ((v43 & 1) != 0)
          goto LABEL_21;
        goto LABEL_37;
      }
LABEL_36:
      objc_msgSend(v17, sel_setWalkingAndRunningDistance_, v15);
      if ((v43 & 1) != 0)
      {
LABEL_21:
        if ((v44 & 1) != 0)
          goto LABEL_22;
        goto LABEL_38;
      }
LABEL_37:
      objc_msgSend(v17, sel_setStepCount_, v16);
      if ((v44 & 1) != 0)
      {
LABEL_22:
        if ((v45 & 1) != 0)
          goto LABEL_23;
        goto LABEL_39;
      }
LABEL_38:
      objc_msgSend(v17, sel_setPushCount_, v27);
      if ((v45 & 1) != 0)
      {
LABEL_23:
        if ((v46 & 1) != 0)
          goto LABEL_24;
        goto LABEL_40;
      }
LABEL_39:
      objc_msgSend(v17, sel_setWheelchairUse_, v28);
      if ((v46 & 1) != 0)
      {
LABEL_24:
        if ((v47 & 1) != 0)
          goto LABEL_25;
        goto LABEL_41;
      }
LABEL_40:
      objc_msgSend(v17, sel_setMmv_, v29);
      if ((v47 & 1) != 0)
      {
LABEL_25:
        if ((v48 & 1) != 0)
          return (uint64_t)v17;
LABEL_26:
        objc_msgSend(v17, sel_setAmm_, v31);
        return (uint64_t)v17;
      }
LABEL_41:
      objc_msgSend(v17, sel_setMmg_, v30);
      if ((v48 & 1) != 0)
        return (uint64_t)v17;
      goto LABEL_26;
    }
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD455CD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[5];
  char v44;
  uint64_t v45;
  char v46;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  v26 = *(_BYTE *)(a1 + 89);
  v27 = *(_BYTE *)(a1 + 88);
  v9 = *(double *)(a1 + 96);
  v10 = *(double *)(a1 + 112);
  v28 = *(_BYTE *)(a1 + 104);
  v29 = *(_BYTE *)(a1 + 120);
  v11 = *(double *)(a1 + 128);
  v12 = *(double *)(a1 + 144);
  v30 = *(_BYTE *)(a1 + 136);
  v31 = *(_BYTE *)(a1 + 152);
  v23 = *(_QWORD *)(a1 + 80);
  v24 = *(_QWORD *)(a1 + 160);
  v13 = *(double *)(a1 + 176);
  v32 = *(_BYTE *)(a1 + 168);
  v33 = *(_BYTE *)(a1 + 184);
  v34 = *(_QWORD *)(a1 + 200);
  v35 = *(unsigned __int8 *)(a1 + 208);
  v36 = *(unsigned __int8 *)(a1 + 209);
  v37 = *(_QWORD *)(a1 + 224);
  v38 = *(_QWORD *)(a1 + 240);
  v40 = *(_QWORD *)(a1 + 272);
  v41 = *(unsigned __int8 *)(a1 + 280);
  v25 = *(_QWORD *)(a1 + 248);
  v39 = *(_BYTE *)(a1 + 256);
  v14 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorASCodableWorkout), sel_init);
  if (!v14)
  {
    sub_1AD0DDA60();
    swift_allocError();
    *v16 = 0xD000000000000036;
    v16[1] = 0x80000001AD6AA1F0;
    v16[2] = 0x5064696C61766E69;
    v16[3] = 0xEF6675626F746F72;
    v16[4] = 0xD00000000000001CLL;
    v16[5] = 0x80000001AD6AA230;
    swift_willThrow();
    return (uint64_t)v14;
  }
  if (v1)
  {
    v43[0] = v1;
    v43[1] = v2;
    v43[2] = v3;
    v43[3] = v4;
    v43[4] = v6;
    v44 = v5 & 1;
    v45 = v7;
    v46 = v8 & 1;
    swift_retain();
    sub_1AD285EE4(v3, v4);
    v15 = sub_1AD456590((uint64_t)v43);
    if (v42)
    {

      sub_1AD2917C0(v1, v2, v3, v4);
      return (uint64_t)v14;
    }
    v17 = (void *)v15;
    objc_msgSend(v14, sel_setSample_, v15);

    sub_1AD2917C0(v1, v2, v3, v4);
  }
  if ((v26 & 1) == 0)
  {
    if ((v27 & 1) != 0)
    {
      if ((v28 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      objc_msgSend(v14, sel_setType_, v23);
      if ((v28 & 1) != 0)
      {
LABEL_10:
        if ((v29 & 1) != 0)
          goto LABEL_11;
        goto LABEL_30;
      }
    }
    objc_msgSend(v14, sel_setDuration_, v9);
    if ((v29 & 1) != 0)
    {
LABEL_11:
      if ((v30 & 1) != 0)
        goto LABEL_12;
      goto LABEL_31;
    }
LABEL_30:
    objc_msgSend(v14, sel_setTotalEnergyBurnedInCanonicalUnit_, v10);
    if ((v30 & 1) != 0)
    {
LABEL_12:
      if ((v31 & 1) != 0)
        goto LABEL_13;
      goto LABEL_32;
    }
LABEL_31:
    objc_msgSend(v14, sel_setTotalBasalEnergyBurnedInCanonicalUnit_, v11);
    if ((v31 & 1) != 0)
    {
LABEL_13:
      if ((v32 & 1) != 0)
        goto LABEL_14;
      goto LABEL_33;
    }
LABEL_32:
    objc_msgSend(v14, sel_setTotalDistanceInCanonicalUnit_, v12);
    if ((v32 & 1) != 0)
    {
LABEL_14:
      if ((v33 & 1) != 0)
        goto LABEL_15;
      goto LABEL_34;
    }
LABEL_33:
    objc_msgSend(v14, sel_setGoalType_, v24);
    if ((v33 & 1) != 0)
    {
LABEL_15:
      if (!v34)
        goto LABEL_17;
      goto LABEL_16;
    }
LABEL_34:
    objc_msgSend(v14, sel_setGoalInCanonicalUnit_, v13);
    if (!v34)
    {
LABEL_17:
      if (v35 == 2)
      {
        if (v36 == 2)
          goto LABEL_19;
      }
      else
      {
        objc_msgSend(v14, sel_setIsWatchWorkout_, v35 & 1);
        if (v36 == 2)
        {
LABEL_19:
          if (!v37)
            goto LABEL_21;
          goto LABEL_20;
        }
      }
      objc_msgSend(v14, sel_setIsIndoorWorkout_, v36 & 1);
      if (!v37)
      {
LABEL_21:
        if (v38)
        {
          v20 = (void *)sub_1AD63B744();
          objc_msgSend(v14, sel_setDeviceModel_, v20);

        }
        if ((v39 & 1) == 0)
          objc_msgSend(v14, sel_setAmm_, v25);
        if (v40)
        {
          v21 = (void *)sub_1AD63B744();
          objc_msgSend(v14, sel_setSeymourCatalogWorkoutIdentifier_, v21);

        }
        __asm { BR              X9 }
      }
LABEL_20:
      v19 = (void *)sub_1AD63B744();
      objc_msgSend(v14, sel_setDeviceManufacturer_, v19);

      goto LABEL_21;
    }
LABEL_16:
    v18 = (void *)sub_1AD63B744();
    objc_msgSend(v14, sel_setBundleID_, v18);

    goto LABEL_17;
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

id sub_1AD456270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double v9;
  double v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  char v33;
  uint64_t v34;
  char v35;
  id v36;

  v2 = *(_QWORD *)a1;
  v1 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  v9 = *(double *)(a1 + 64);
  v10 = *(double *)(a1 + 80);
  v25 = *(_BYTE *)(a1 + 72);
  v26 = *(_BYTE *)(a1 + 88);
  v23 = *(_QWORD *)(a1 + 96);
  v24 = *(_QWORD *)(a1 + 112);
  v27 = *(_BYTE *)(a1 + 104);
  v28 = *(_BYTE *)(a1 + 120);
  v29 = *(_QWORD *)(a1 + 136);
  v30 = *(_QWORD *)(a1 + 152);
  v36 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorASCodableAchievement), sel_init);
  if (!v36)
  {
    sub_1AD0DDA60();
    swift_allocError();
    *v16 = 0xD000000000000036;
    v16[1] = 0x80000001AD6AA1F0;
    v16[2] = 0x5064696C61766E69;
    v16[3] = 0xEF6675626F746F72;
    v16[4] = 0xD00000000000001CLL;
    v16[5] = 0x80000001AD6AA230;
    swift_willThrow();
    return v36;
  }
  if (v2)
  {
    v32[0] = v2;
    v32[1] = v1;
    v32[2] = v3;
    v32[3] = v4;
    v21 = v7;
    v22 = v6;
    v32[4] = v6;
    v33 = v5 & 1;
    v34 = v7;
    v11 = v8;
    v12 = v3;
    v13 = v1;
    v35 = v11 & 1;
    swift_retain();
    sub_1AD285EE4(v12, v4);
    v14 = sub_1AD456590((uint64_t)v32);
    if (v31)
    {
      v15 = v36;

      sub_1AD2917C0(v2, v13, v12, v4);
      return v15;
    }
    v17 = (void *)v14;
    v15 = v36;
    objc_msgSend(v36, sel_setSample_, v14);

    sub_1AD2917C0(v2, v13, v12, v4);
  }
  else
  {
    v15 = v36;
  }
  if ((v25 & 1) != 0)
  {
    if ((v26 & 1) != 0)
      goto LABEL_10;
  }
  else
  {
    objc_msgSend(v15, sel_setCompletedDate_, v9);
    if ((v26 & 1) != 0)
    {
LABEL_10:
      if ((v27 & 1) != 0)
        goto LABEL_11;
      goto LABEL_19;
    }
  }
  objc_msgSend(v15, sel_setDoubleValue_, v10, v21, v22);
  if ((v27 & 1) != 0)
  {
LABEL_11:
    if ((v28 & 1) != 0)
      goto LABEL_12;
    goto LABEL_20;
  }
LABEL_19:
  objc_msgSend(v15, sel_setIntValue_, v23, v21, v22);
  if ((v28 & 1) != 0)
  {
LABEL_12:
    if (!v29)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_20:
  objc_msgSend(v15, sel_setWorkoutActivityType_, v24, v21, v22);
  if (v29)
  {
LABEL_13:
    v18 = (void *)sub_1AD63B744();
    objc_msgSend(v15, sel_setDefinitionIdentifier_, v18);

  }
LABEL_14:
  if (v30)
  {
    v19 = (void *)sub_1AD63B744();
    objc_msgSend(v15, sel_setTemplateUniqueName_, v19);

  }
  return v15;
}

uint64_t sub_1AD456590(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  double v3;
  char v4;
  double v5;
  char v6;
  id v7;
  _QWORD *v8;
  void *v9;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(double *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 40);
  v5 = *(double *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 56);
  v7 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorASCodableSample), sel_init);
  if (!v7)
  {
    sub_1AD0DDA60();
    swift_allocError();
    *v8 = 0xD000000000000036;
    v8[1] = 0x80000001AD6AA1F0;
    v8[2] = 0x5064696C61766E69;
    v8[3] = 0xEF6675626F746F72;
    v8[4] = 0xD00000000000001CLL;
    v8[5] = 0x80000001AD6AA230;
    swift_willThrow();
    return (uint64_t)v7;
  }
  if (v2 >> 60 != 11)
  {
    if (v2 >> 60 == 15)
    {
      if ((v4 & 1) != 0)
        goto LABEL_5;
    }
    else
    {
      sub_1AD0040A0(v1, v2);
      v9 = (void *)sub_1AD63AFA0();
      objc_msgSend(v7, sel_setUuid_, v9);

      sub_1AD009794(v1, v2);
      if ((v4 & 1) != 0)
      {
LABEL_5:
        if ((v6 & 1) != 0)
          return (uint64_t)v7;
        goto LABEL_10;
      }
    }
    objc_msgSend(v7, sel_setStartDate_, v3);
    if ((v6 & 1) == 0)
LABEL_10:
      objc_msgSend(v7, sel_setEndDate_, v5);
    return (uint64_t)v7;
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD456788(_QWORD *a1, _QWORD *a2)
{
  return sub_1AD4587F4(a1, a2) & 1;
}

uint64_t sub_1AD4567A0(_QWORD *a1, _QWORD *a2)
{
  return sub_1AD4587F4(a1, a2) & 1;
}

uint64_t sub_1AD4567D8(_QWORD *a1, _QWORD *a2)
{
  return sub_1AD4587F4(a1, a2) & 1;
}

uint64_t sub_1AD456810(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  double v5;
  char v6;
  double v7;
  int v8;
  uint64_t v9;
  double v10;
  int v11;
  double v12;
  unsigned int v13;
  uint64_t result;
  char v15;
  char v16;
  int v17;

  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >> 60 == 11 || (v3 = *(_QWORD *)(a2 + 24), v3 >> 60 == 11))
  {
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(double *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  v7 = *(double *)(a1 + 48);
  v8 = *(unsigned __int8 *)(a1 + 56);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(double *)(a2 + 32);
  v11 = *(unsigned __int8 *)(a2 + 40);
  v12 = *(double *)(a2 + 48);
  v13 = *(unsigned __int8 *)(a2 + 56);
  if (v2 >> 60 != 15)
  {
    if (v3 >> 60 != 15)
    {
      sub_1AD285EE4(*(_QWORD *)(a1 + 16), v2);
      sub_1AD285EE4(v9, v3);
      sub_1AD3DB778(v4, v2);
      v16 = v15;
      sub_1AD009794(v9, v3);
      sub_1AD009794(v4, v2);
      if ((v16 & 1) != 0)
        goto LABEL_10;
      return 0;
    }
LABEL_7:
    sub_1AD285EE4(*(_QWORD *)(a1 + 16), v2);
    sub_1AD285EE4(v9, v3);
    sub_1AD004118(v4, v2);
    sub_1AD004118(v9, v3);
    return 0;
  }
  if (v3 >> 60 != 15)
    goto LABEL_7;
  sub_1AD285EE4(*(_QWORD *)(a1 + 16), v2);
  sub_1AD285EE4(v9, v3);
LABEL_10:
  if ((v6 & 1) != 0)
  {
    if (((v11 ^ 1 | v8) & 1) != 0)
      return v11 & v13;
  }
  else
  {
    if (v5 == v10)
      v17 = v11;
    else
      v17 = 1;
    if (((v17 | v8) & 1) != 0)
      return v13 & ~v17;
  }
  return (v7 == v12) & ~v13;
}

uint64_t sub_1AD4569D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  double v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  _QWORD v71[5];
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_BYTE *)(a1 + 56);
  v10 = *(double *)(a1 + 64);
  v65 = *(_BYTE *)(a1 + 72);
  v11 = *(double *)(a1 + 80);
  v12 = *(_BYTE *)(a1 + 88);
  v13 = *(_QWORD *)(a1 + 96);
  v14 = *(_BYTE *)(a1 + 104);
  v15 = *(_QWORD *)(a1 + 112);
  v16 = *(_BYTE *)(a1 + 120);
  v17 = *(_QWORD *)(a1 + 128);
  v18 = *(_QWORD *)(a1 + 136);
  v19 = *(_QWORD *)(a1 + 144);
  v20 = *(_QWORD *)(a1 + 152);
  v21 = *(_QWORD *)a2;
  v22 = *(_QWORD *)(a2 + 8);
  v24 = *(_QWORD *)(a2 + 16);
  v23 = *(_QWORD *)(a2 + 24);
  v26 = *(_QWORD *)(a2 + 32);
  v25 = *(_QWORD *)(a2 + 40);
  v67 = *(_QWORD *)(a2 + 48);
  v69 = *(_BYTE *)(a2 + 56);
  v27 = *(double *)(a2 + 64);
  v63 = *(unsigned __int8 *)(a2 + 72);
  v28 = *(double *)(a2 + 80);
  v61 = *(unsigned __int8 *)(a2 + 88);
  v59 = *(unsigned __int8 *)(a2 + 104);
  v57 = *(_QWORD *)(a2 + 112);
  v58 = *(_QWORD *)(a2 + 96);
  result = *(unsigned __int8 *)(a2 + 120);
  v31 = *(_QWORD *)(a2 + 128);
  v30 = *(_QWORD *)(a2 + 136);
  v32 = *(_QWORD *)(a2 + 144);
  v33 = *(_QWORD *)(a2 + 152);
  if (!v2)
  {
    v45 = v19;
    if (!v21)
      goto LABEL_6;
LABEL_10:
    v75 = v2;
    v76 = v3;
    v77 = v5;
    v78 = v4;
    v79 = v7;
    v80 = v6;
    v81 = v8;
    v82 = v9;
    v83 = v21;
    v84 = v22;
    v85 = v24;
    v86 = v23;
    v87 = v26;
    v88 = v25;
    v89 = v67;
    v90 = v69;
    sub_1AD291BC8(v21, v22, v24, v23);
    sub_1AD45D7A0(&v75);
    return 0;
  }
  v75 = v2;
  v76 = v3;
  v77 = v5;
  v78 = v4;
  v79 = v7;
  v80 = v6;
  v81 = v8;
  v82 = v9;
  if (!v21)
  {
    v66 = v9;
    v62 = v6;
    v64 = v8;
    v60 = v7;
    swift_retain();
    sub_1AD285EE4(v5, v4);
    swift_retain();
    sub_1AD285EE4(v5, v4);
    swift_release();
    sub_1AD009794(v5, v4);
    v7 = v60;
    v6 = v62;
    v8 = v64;
    v9 = v66;
    goto LABEL_10;
  }
  v45 = v19;
  v71[0] = v21;
  v71[1] = v22;
  v71[2] = v24;
  v71[3] = v23;
  v71[4] = v26;
  v72 = v25 & 1;
  v73 = v67;
  v74 = v69 & 1;
  v47 = result;
  v48 = v14;
  v68 = v33;
  v70 = v32;
  v51 = v15;
  v52 = v31;
  v50 = v16;
  v49 = v13;
  v55 = v17;
  v56 = v20;
  v53 = v30;
  v54 = v18;
  sub_1AD291BC8(v2, v3, v5, v4);
  swift_retain();
  sub_1AD285EE4(v5, v4);
  v46 = sub_1AD456810((uint64_t)&v75, (uint64_t)v71);
  v34 = v77;
  v35 = v78;
  swift_release();
  sub_1AD009794(v34, v35);
  sub_1AD2917C0(v2, v3, v5, v4);
  result = v47;
  v14 = v48;
  v13 = v49;
  v16 = v50;
  v15 = v51;
  v31 = v52;
  v30 = v53;
  v18 = v54;
  v17 = v55;
  v20 = v56;
  v33 = v68;
  v32 = v70;
  if ((v46 & 1) == 0)
    return 0;
LABEL_6:
  if ((v65 & 1) != 0)
  {
    if (!v63)
      return 0;
  }
  else
  {
    v36 = v63;
    if (v10 != v27)
      v36 = 1;
    if ((v36 & 1) != 0)
      return 0;
  }
  if ((v12 & 1) != 0)
  {
    if (!v61)
      return 0;
  }
  else
  {
    v37 = v61;
    if (v11 != v28)
      v37 = 1;
    if ((v37 & 1) != 0)
      return 0;
  }
  if ((v14 & 1) != 0)
  {
    if (!v59)
      return 0;
  }
  else
  {
    v38 = v59;
    if (v13 != v58)
      v38 = 1;
    if ((v38 & 1) != 0)
      return 0;
  }
  if ((v16 & 1) != 0)
  {
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    if (v15 == v57)
      v39 = result;
    else
      v39 = 1;
    if ((v39 & 1) != 0)
      return 0;
  }
  if (v18)
  {
    if (v30)
    {
      if (v17 != v31 || v18 != v30)
      {
        v40 = v32;
        v41 = v33;
        v42 = v20;
        v43 = sub_1AD63C2A8();
        v33 = v41;
        v32 = v40;
        v20 = v42;
        v44 = v43;
        result = 0;
        if ((v44 & 1) == 0)
          return result;
      }
      goto LABEL_42;
    }
    return 0;
  }
  if (v30)
    return 0;
LABEL_42:
  result = (v20 | v33) == 0;
  if (v20 && v33)
  {
    if (v45 == v32 && v20 == v33)
      return 1;
    else
      return sub_1AD63C2A8();
  }
  return result;
}

uint64_t sub_1AD456DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t result;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  int v84;
  char v85;
  char v86;
  char v87;
  char v89;
  double v90;
  double v91;
  uint64_t v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  char v117;
  int v118;
  char v119;
  int v120;
  char v121;
  int v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  char v135;
  int v136;
  char v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  char v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  int v148;
  int v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD v154[5];
  char v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_BYTE *)(a1 + 56);
  v140 = *(_QWORD *)(a1 + 80);
  v144 = *(_BYTE *)(a1 + 88);
  v143 = *(_BYTE *)(a1 + 89);
  v10 = *(double *)(a1 + 96);
  v141 = *(_BYTE *)(a1 + 104);
  v11 = *(double *)(a1 + 112);
  v137 = *(_BYTE *)(a1 + 120);
  v12 = *(double *)(a1 + 128);
  v123 = *(_BYTE *)(a1 + 136);
  v13 = *(double *)(a1 + 144);
  v121 = *(_BYTE *)(a1 + 152);
  v116 = *(_QWORD *)(a1 + 160);
  v119 = *(_BYTE *)(a1 + 168);
  v14 = *(double *)(a1 + 176);
  v117 = *(_BYTE *)(a1 + 184);
  v111 = *(_QWORD *)(a1 + 192);
  v113 = *(_QWORD *)(a1 + 200);
  v108 = *(unsigned __int8 *)(a1 + 209);
  v109 = *(unsigned __int8 *)(a1 + 208);
  v15 = *(_QWORD *)(a1 + 216);
  v101 = *(_QWORD *)(a1 + 232);
  v104 = *(_QWORD *)(a1 + 240);
  v105 = *(_QWORD *)(a1 + 224);
  v16 = *(_QWORD *)(a1 + 264);
  v17 = *(_QWORD *)(a1 + 272);
  v18 = *(unsigned __int8 *)(a1 + 280);
  v19 = *(_QWORD *)(a1 + 248);
  v100 = *(_BYTE *)(a1 + 256);
  v20 = *(double *)(a2 + 96);
  v21 = *(double *)(a2 + 112);
  v22 = *(double *)(a2 + 128);
  v23 = *(double *)(a2 + 144);
  v24 = *(double *)(a2 + 176);
  v25 = *(_QWORD *)a2;
  v26 = *(_QWORD *)(a2 + 8);
  v28 = *(_QWORD *)(a2 + 16);
  v27 = *(_QWORD *)(a2 + 24);
  v30 = *(_QWORD *)(a2 + 32);
  v29 = *(_QWORD *)(a2 + 40);
  v146 = *(_QWORD *)(a2 + 48);
  v150 = *(_BYTE *)(a2 + 56);
  v139 = *(_QWORD *)(a2 + 80);
  v142 = *(_BYTE *)(a2 + 88);
  v31 = *(_BYTE *)(a2 + 89);
  v32 = *(unsigned __int8 *)(a2 + 104);
  v136 = *(unsigned __int8 *)(a2 + 120);
  v122 = *(unsigned __int8 *)(a2 + 136);
  v120 = *(unsigned __int8 *)(a2 + 152);
  v114 = *(_QWORD *)(a2 + 160);
  v118 = *(unsigned __int8 *)(a2 + 168);
  v115 = *(unsigned __int8 *)(a2 + 184);
  v110 = *(_QWORD *)(a2 + 192);
  v112 = *(_QWORD *)(a2 + 200);
  v33 = *(unsigned __int8 *)(a2 + 208);
  v107 = *(unsigned __int8 *)(a2 + 209);
  v103 = *(_QWORD *)(a2 + 216);
  v106 = *(_QWORD *)(a2 + 224);
  v34 = *(_QWORD *)(a2 + 240);
  v102 = *(_QWORD *)(a2 + 232);
  v35 = *(_QWORD *)(a2 + 264);
  v36 = *(_QWORD *)(a2 + 272);
  v37 = *(unsigned __int8 *)(a2 + 280);
  v38 = *(_QWORD *)(a2 + 248);
  v39 = *(unsigned __int8 *)(a2 + 256);
  if (!v3)
  {
    v138 = v32;
    v44 = v2;
    v125 = v6;
    v128 = v7;
    v131 = v8;
    v135 = v9;
    if (!v25)
      goto LABEL_6;
LABEL_13:
    v158 = v3;
    v159 = v44;
    v160 = v4;
    v161 = v5;
    v162 = v125;
    v163 = v128;
    v164 = v131;
    v165 = v135;
    v166 = v25;
    v167 = v26;
    v168 = v28;
    v169 = v27;
    v170 = v30;
    v171 = v29;
    v172 = v146;
    v173 = v150;
    sub_1AD291BC8(v25, v26, v28, v27);
    sub_1AD45D7A0(&v158);
    return 0;
  }
  v134 = v31;
  v158 = v3;
  v159 = v2;
  v160 = v4;
  v161 = v5;
  v162 = v6;
  v163 = v7;
  v164 = v8;
  v165 = v9;
  if (!v25)
  {
    v145 = v3;
    v49 = v5;
    v50 = v4;
    v125 = v6;
    v128 = v7;
    v131 = v8;
    v135 = v9;
    v51 = v2;
    swift_retain();
    sub_1AD285EE4(v50, v49);
    swift_retain();
    sub_1AD285EE4(v50, v49);
    v44 = v51;
    swift_release();
    v4 = v50;
    v52 = v50;
    v5 = v49;
    v53 = v49;
    v3 = v145;
    sub_1AD009794(v52, v53);
    goto LABEL_13;
  }
  v138 = v32;
  v154[0] = v25;
  v154[1] = v26;
  v154[2] = v28;
  v154[3] = v27;
  v154[4] = v30;
  v40 = v2;
  v155 = v29 & 1;
  v156 = v146;
  v157 = v150 & 1;
  v94 = v33;
  v147 = v39;
  v151 = v35;
  v124 = v36;
  v130 = v38;
  v97 = v16;
  v98 = v15;
  v95 = v17;
  v96 = v34;
  v127 = v18;
  v93 = v37;
  v92 = v19;
  v90 = v13;
  v91 = v14;
  sub_1AD291BC8(v3, v2, v4, v5);
  swift_retain();
  sub_1AD285EE4(v4, v5);
  v89 = sub_1AD456810((uint64_t)&v158, (uint64_t)v154);
  v41 = v160;
  v42 = v5;
  v43 = v161;
  swift_release();
  sub_1AD009794(v41, v43);
  sub_1AD2917C0(v3, v40, v4, v42);
  v13 = v90;
  v14 = v91;
  v37 = v93;
  v33 = v94;
  v17 = v95;
  v34 = v96;
  v16 = v97;
  v15 = v98;
  v38 = v130;
  v39 = v147;
  v35 = v151;
  v36 = v124;
  v19 = v92;
  v18 = v127;
  v31 = v134;
  if ((v89 & 1) == 0)
    return 0;
LABEL_6:
  if ((v143 & 1) != 0 || (v31 & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  v45 = v37;
  v46 = v33;
  v47 = v16;
  if ((v144 & 1) != 0)
  {
    if ((v142 & 1) == 0)
      return 0;
  }
  else
  {
    result = 0;
    if ((v142 & 1) != 0 || v140 != v139)
      return result;
  }
  if ((v141 & 1) != 0)
  {
    if (!v138)
      return 0;
  }
  else
  {
    if (v10 == v20)
      v54 = v138;
    else
      v54 = 1;
    if ((v54 & 1) != 0)
      return 0;
  }
  if ((v137 & 1) != 0)
  {
    if (!v136)
      return 0;
  }
  else
  {
    v55 = v136;
    if (v11 != v21)
      v55 = 1;
    if ((v55 & 1) != 0)
      return 0;
  }
  if ((v123 & 1) != 0)
  {
    if (!v122)
      return 0;
  }
  else
  {
    v56 = v122;
    if (v12 != v22)
      v56 = 1;
    if ((v56 & 1) != 0)
      return 0;
  }
  if ((v121 & 1) != 0)
  {
    if (!v120)
      return 0;
  }
  else
  {
    v57 = v120;
    if (v13 != v23)
      v57 = 1;
    if ((v57 & 1) != 0)
      return 0;
  }
  if ((v119 & 1) != 0)
  {
    if (!v118)
      return 0;
  }
  else
  {
    v58 = v118;
    if (v116 != v114)
      v58 = 1;
    if ((v58 & 1) != 0)
      return 0;
  }
  if ((v117 & 1) != 0)
  {
    if (!v115)
      return 0;
  }
  else
  {
    v59 = v115;
    if (v14 != v24)
      v59 = 1;
    if ((v59 & 1) != 0)
      return 0;
  }
  if (v113)
  {
    if (!v112)
      return 0;
    if (v111 != v110 || v113 != v112)
    {
      v148 = v39;
      v152 = v35;
      v126 = v36;
      v132 = v38;
      v99 = v15;
      v129 = v18;
      v60 = v16;
      v61 = v17;
      v62 = v19;
      v63 = v34;
      v64 = sub_1AD63C2A8();
      v34 = v63;
      v15 = v99;
      v38 = v132;
      v39 = v148;
      v35 = v152;
      v36 = v126;
      v19 = v62;
      v17 = v61;
      v47 = v60;
      v18 = v129;
      v65 = v64;
      result = 0;
      if ((v65 & 1) == 0)
        return result;
    }
  }
  else if (v112)
  {
    return 0;
  }
  if (v109 == 2)
  {
    if (v46 != 2)
      return 0;
  }
  else
  {
    result = 0;
    if (v46 == 2 || ((((v109 & 1) == 0) ^ v46) & 1) == 0)
      return result;
  }
  if (v108 == 2)
  {
    if (v107 != 2)
      return 0;
  }
  else
  {
    result = 0;
    if (v107 == 2 || ((((v108 & 1) == 0) ^ v107) & 1) == 0)
      return result;
  }
  if (v105)
  {
    if (!v106)
      return 0;
    if (v15 != v103 || v105 != v106)
    {
      v149 = v39;
      v153 = v35;
      v66 = v36;
      v133 = v38;
      v67 = v18;
      v68 = v47;
      v69 = v17;
      v70 = v19;
      v71 = v34;
      v72 = sub_1AD63C2A8();
      v34 = v71;
      v38 = v133;
      v39 = v149;
      v35 = v153;
      v36 = v66;
      v19 = v70;
      v17 = v69;
      v47 = v68;
      v18 = v67;
      v73 = v72;
      result = 0;
      if ((v73 & 1) == 0)
        return result;
    }
  }
  else if (v106)
  {
    return 0;
  }
  if (v104)
  {
    if (!v34)
      return 0;
    if (v101 != v102 || v104 != v34)
    {
      v74 = v39;
      v75 = v35;
      v76 = v36;
      v77 = v38;
      v78 = v18;
      v79 = v47;
      v80 = v17;
      v81 = v19;
      v82 = sub_1AD63C2A8();
      v38 = v77;
      v39 = v74;
      v35 = v75;
      v36 = v76;
      v19 = v81;
      v17 = v80;
      v47 = v79;
      v18 = v78;
      v83 = v82;
      result = 0;
      if ((v83 & 1) == 0)
        return result;
    }
  }
  else if (v34)
  {
    return 0;
  }
  v84 = v18;
  if ((v100 & 1) != 0)
  {
    if (!v39)
      return 0;
  }
  else
  {
    if (v19 == v38)
      v85 = v39;
    else
      v85 = 1;
    if ((v85 & 1) != 0)
      return 0;
  }
  if (!v17)
  {
    if (!v36)
    {
LABEL_99:
      if (v18 == 4)
        return v45 == 4;
      else
        return v45 != 4 && v84 == v45;
    }
    return 0;
  }
  if (!v36)
    return 0;
  if (v47 == v35 && v17 == v36)
    goto LABEL_99;
  v86 = sub_1AD63C2A8();
  v18 = v84;
  v87 = v86;
  result = 0;
  if ((v87 & 1) != 0)
    goto LABEL_99;
  return result;
}

uint64_t sub_1AD457608(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  char v17;
  double v18;
  char v19;
  double v20;
  char v21;
  uint64_t v22;
  int v23;
  double v24;
  double v25;
  double v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  int v81;
  uint64_t v82;
  unsigned int v83;
  char v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  double v89;
  double v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  int v96;
  int v97;
  int v98;
  double v99;
  char v100;
  int v101;
  double v102;
  char v103;
  int v104;
  double v105;
  char v106;
  int v107;
  double v108;
  char v109;
  int v110;
  double v111;
  double v112;
  char v113;
  int v114;
  double v115;
  double v116;
  char v117;
  int v118;
  double v119;
  double v120;
  char v121;
  int v122;
  double v123;
  double v124;
  char v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  int v133;
  uint64_t v134;
  int v135;
  int v136;
  uint64_t v137;
  int v138;
  char v139;
  char v140;
  uint64_t v141;
  double v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  double v148;
  char v149;
  uint64_t v150;
  char v151;
  char v152;
  char v153;
  int v154;
  int v155;
  _QWORD v156[5];
  char v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;

  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 88);
  v145 = *(_QWORD *)(a1 + 80);
  v131 = *(_QWORD *)(a1 + 112);
  v10 = *(_BYTE *)(a1 + 120);
  v147 = *(_BYTE *)(a1 + 121);
  v128 = *(_QWORD *)(a1 + 128);
  v132 = *(_BYTE *)(a1 + 136);
  v124 = *(double *)(a1 + 144);
  v129 = *(_BYTE *)(a1 + 152);
  v120 = *(double *)(a1 + 160);
  v125 = *(_BYTE *)(a1 + 168);
  v116 = *(double *)(a1 + 176);
  v121 = *(_BYTE *)(a1 + 184);
  v112 = *(double *)(a1 + 192);
  v117 = *(_BYTE *)(a1 + 200);
  v11 = *(double *)(a1 + 208);
  v113 = *(_BYTE *)(a1 + 216);
  v12 = *(double *)(a1 + 224);
  v109 = *(_BYTE *)(a1 + 232);
  v13 = *(double *)(a1 + 240);
  v106 = *(_BYTE *)(a1 + 248);
  v14 = *(double *)(a1 + 256);
  v103 = *(_BYTE *)(a1 + 264);
  v15 = *(double *)(a1 + 272);
  v100 = *(_BYTE *)(a1 + 280);
  v16 = *(_QWORD *)(a1 + 288);
  v17 = *(_BYTE *)(a1 + 296);
  v18 = *(double *)(a1 + 304);
  v19 = *(_BYTE *)(a1 + 312);
  v20 = *(double *)(a1 + 320);
  v21 = *(_BYTE *)(a1 + 328);
  v22 = *(_QWORD *)(a1 + 336);
  v23 = *(unsigned __int8 *)(a1 + 344);
  v123 = *(double *)(a2 + 144);
  v119 = *(double *)(a2 + 160);
  v115 = *(double *)(a2 + 176);
  v111 = *(double *)(a2 + 192);
  v108 = *(double *)(a2 + 208);
  v105 = *(double *)(a2 + 224);
  v102 = *(double *)(a2 + 240);
  v99 = *(double *)(a2 + 256);
  v24 = *(double *)(a2 + 272);
  v25 = *(double *)(a2 + 304);
  v26 = *(double *)(a2 + 320);
  v27 = (unsigned __int8 *)(a2 + 264);
  v28 = *(_QWORD *)a2;
  v29 = *(_QWORD *)(a2 + 8);
  v31 = *(_QWORD *)(a2 + 16);
  v30 = *(_QWORD *)(a2 + 24);
  v33 = *(_QWORD *)(a2 + 32);
  v32 = *(_QWORD *)(a2 + 40);
  v150 = *(_QWORD *)(a2 + 48);
  v153 = *(_BYTE *)(a2 + 56);
  v143 = *(_QWORD *)(a2 + 80);
  v144 = *(_QWORD *)(a2 + 88);
  v130 = *(_QWORD *)(a2 + 112);
  v140 = *(_BYTE *)(a2 + 120);
  v139 = *(_BYTE *)(a2 + 121);
  v126 = *(_QWORD *)(a2 + 128);
  v34 = *(unsigned __int8 *)(a2 + 136);
  v127 = *(unsigned __int8 *)(a2 + 152);
  v122 = *(unsigned __int8 *)(a2 + 168);
  v118 = *(unsigned __int8 *)(a2 + 184);
  v114 = *(unsigned __int8 *)(a2 + 200);
  v110 = *(unsigned __int8 *)(a2 + 216);
  v107 = *(unsigned __int8 *)(a2 + 232);
  v104 = *(unsigned __int8 *)(a2 + 248);
  v101 = *(unsigned __int8 *)(a2 + 264);
  v35 = *(_QWORD *)(a2 + 288);
  v36 = *(_QWORD *)(a2 + 336);
  v37 = *(_QWORD *)a1;
  v98 = v27[16];
  v38 = v27[32];
  v39 = v27[48];
  v40 = v27[64];
  v41 = v27[80];
  if (!v37)
  {
    v91 = v34;
    v55 = v2;
    v56 = v4;
    v57 = v3;
    v134 = v6;
    v137 = v5;
    v83 = v41;
    v82 = v22;
    v53 = v147;
    if (!v28)
      goto LABEL_6;
LABEL_12:
    v160 = v37;
    v161 = v55;
    v162 = v56;
    v163 = v57;
    v164 = v134;
    v165 = v137;
    v166 = v7;
    v167 = v8;
    v168 = v28;
    v169 = v29;
    v170 = v31;
    v171 = v30;
    v172 = v33;
    v173 = v32;
    v174 = v150;
    v175 = v153;
    sub_1AD291BC8(v28, v29, v31, v30);
    sub_1AD45D7A0(&v160);
    return 0;
  }
  v160 = v37;
  v161 = v2;
  v162 = v4;
  v163 = v3;
  v164 = v6;
  v165 = v5;
  v166 = v7;
  v167 = v8;
  v141 = v37;
  if (!v28)
  {
    v134 = v6;
    v137 = v5;
    v149 = v8;
    v146 = v7;
    swift_retain();
    sub_1AD285EE4(v4, v3);
    swift_retain();
    sub_1AD285EE4(v4, v3);
    v55 = v2;
    swift_release();
    v56 = v4;
    v64 = v4;
    v57 = v3;
    sub_1AD009794(v64, v3);
    v37 = v141;
    v7 = v146;
    v8 = v149;
    goto LABEL_12;
  }
  v91 = v34;
  v83 = v41;
  v82 = v22;
  v156[0] = v28;
  v156[1] = v29;
  v156[2] = v31;
  v156[3] = v30;
  v156[4] = v33;
  v157 = v32 & 1;
  v158 = v150;
  v159 = v153 & 1;
  v154 = v38;
  v88 = v35;
  v87 = v10;
  v85 = v16;
  v86 = v9;
  v94 = v21;
  v96 = v23;
  v89 = v25;
  v90 = v11;
  v42 = v12;
  v43 = v26;
  v44 = v13;
  v45 = v14;
  v46 = v15;
  v47 = v18;
  v48 = v20;
  v151 = v19;
  v84 = v17;
  v92 = v36;
  v133 = v40;
  v136 = v39;
  v49 = v24;
  sub_1AD291BC8(v37, v2, v4, v3);
  swift_retain();
  sub_1AD285EE4(v4, v3);
  v50 = sub_1AD456810((uint64_t)&v160, (uint64_t)v156);
  v51 = v162;
  v52 = v163;
  swift_release();
  sub_1AD009794(v51, v52);
  sub_1AD2917C0(v141, v2, v4, v3);
  v53 = v147;
  v16 = v85;
  v9 = v86;
  v10 = v87;
  v35 = v88;
  v38 = v154;
  v24 = v49;
  v39 = v136;
  v40 = v133;
  v36 = v92;
  v17 = v84;
  v19 = v151;
  v21 = v94;
  v23 = v96;
  v20 = v48;
  v18 = v47;
  v15 = v46;
  v14 = v45;
  v13 = v44;
  v26 = v43;
  v12 = v42;
  v25 = v89;
  v11 = v90;
  if ((v50 & 1) == 0)
    return 0;
LABEL_6:
  if (v9 >> 60 == 11 || v144 >> 60 == 11)
    goto LABEL_105;
  if (v9 >> 60 == 15)
  {
    if (v144 >> 60 == 15)
    {
      v58 = v53;
      v59 = v10;
      v60 = v35;
      v155 = v38;
      v148 = v24;
      v138 = v39;
      v135 = v40;
      v93 = v36;
      v61 = v17;
      v62 = v16;
      v152 = v19;
      v95 = v21;
      v97 = v23;
      v142 = v20;
      sub_1AD285EE4(v145, v9);
      sub_1AD285EE4(v143, v144);
      v63 = v91;
      goto LABEL_17;
    }
LABEL_14:
    v65 = v9;
    sub_1AD285EE4(v145, v9);
    sub_1AD285EE4(v143, v144);
    sub_1AD004118(v145, v65);
    sub_1AD004118(v143, v144);
    return 0;
  }
  if (v144 >> 60 == 15)
    goto LABEL_14;
  v58 = v53;
  v59 = v10;
  v60 = v35;
  v155 = v38;
  v148 = v24;
  v138 = v39;
  v135 = v40;
  v93 = v36;
  v61 = v17;
  v62 = v16;
  v152 = v19;
  v95 = v21;
  v97 = v23;
  v142 = v20;
  v66 = v9;
  sub_1AD285EE4(v145, v9);
  sub_1AD285EE4(v143, v144);
  sub_1AD3DB778(v145, v66);
  v68 = v67;
  sub_1AD009794(v143, v144);
  sub_1AD009794(v145, v66);
  v63 = v91;
  if ((v68 & 1) == 0)
    return 0;
LABEL_17:
  if ((v58 & 1) != 0 || (v139 & 1) != 0)
  {
LABEL_105:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  if ((v59 & 1) != 0)
  {
    if ((v140 & 1) == 0)
      return 0;
  }
  else
  {
    result = 0;
    if ((v140 & 1) != 0 || v131 != v130)
      return result;
  }
  if ((v132 & 1) != 0)
  {
    if (!v63)
      return 0;
  }
  else
  {
    if (v128 == v126)
      v69 = v63;
    else
      v69 = 1;
    if ((v69 & 1) != 0)
      return 0;
  }
  if ((v129 & 1) != 0)
  {
    if (!v127)
      return 0;
  }
  else
  {
    v70 = v127;
    if (v124 != v123)
      v70 = 1;
    if ((v70 & 1) != 0)
      return 0;
  }
  if ((v125 & 1) != 0)
  {
    if (!v122)
      return 0;
  }
  else
  {
    v71 = v122;
    if (v120 != v119)
      v71 = 1;
    if ((v71 & 1) != 0)
      return 0;
  }
  if ((v121 & 1) != 0)
  {
    if (!v118)
      return 0;
  }
  else
  {
    v72 = v118;
    if (v116 != v115)
      v72 = 1;
    if ((v72 & 1) != 0)
      return 0;
  }
  if ((v117 & 1) != 0)
  {
    if (!v114)
      return 0;
  }
  else
  {
    v73 = v114;
    if (v112 != v111)
      v73 = 1;
    if ((v73 & 1) != 0)
      return 0;
  }
  if ((v113 & 1) != 0)
  {
    if (!v110)
      return 0;
  }
  else
  {
    v74 = v110;
    if (v11 != v108)
      v74 = 1;
    if ((v74 & 1) != 0)
      return 0;
  }
  if ((v109 & 1) != 0)
  {
    if (!v107)
      return 0;
  }
  else
  {
    v75 = v107;
    if (v12 != v105)
      v75 = 1;
    if ((v75 & 1) != 0)
      return 0;
  }
  if ((v106 & 1) != 0)
  {
    if (!v104)
      return 0;
  }
  else
  {
    v76 = v104;
    if (v13 != v102)
      v76 = 1;
    if ((v76 & 1) != 0)
      return 0;
  }
  if ((v103 & 1) != 0)
  {
    if (!v101)
      return 0;
  }
  else
  {
    v77 = v101;
    if (v14 != v99)
      v77 = 1;
    if ((v77 & 1) != 0)
      return 0;
  }
  if ((v100 & 1) != 0)
  {
    if (!v98)
      return 0;
  }
  else
  {
    v78 = v98;
    if (v15 != v148)
      v78 = 1;
    if ((v78 & 1) != 0)
      return 0;
  }
  if ((v61 & 1) != 0)
  {
    if (!v155)
      return 0;
  }
  else
  {
    v79 = v155;
    if (v62 != v60)
      v79 = 1;
    if ((v79 & 1) != 0)
      return 0;
  }
  if ((v152 & 1) != 0)
  {
    if (!v138)
      return 0;
  }
  else
  {
    v80 = v138;
    if (v18 != v25)
      v80 = 1;
    if ((v80 & 1) != 0)
      return 0;
  }
  if ((v95 & 1) != 0)
  {
    if (((v135 ^ 1 | v97) & 1) != 0)
      return v135 & v83;
  }
  else
  {
    v81 = v135;
    if (v142 != v26)
      v81 = 1;
    if (((v81 | v97) & 1) != 0)
      return v83 & ~v81;
  }
  return (v82 == v93) & ~v83;
}

uint64_t sub_1AD457ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _BYTE v11[352];
  uint64_t __dst[44];
  uint64_t v13[44];
  uint64_t v14[44];
  _BYTE __src[352];
  _BYTE v16[352];
  uint64_t v17;
  _BYTE v18[352];
  _BYTE v19[352];
  _BYTE v20[352];

  sub_1AD00FF28(a1, (uint64_t)v18, &qword_1EECD4F48);
  v5 = *(_QWORD *)(a1 + 352);
  v4 = *(_QWORD *)(a1 + 360);
  sub_1AD00FF28(a2, (uint64_t)v19, &qword_1EECD4F48);
  v7 = *(_QWORD *)(a2 + 352);
  v6 = *(_QWORD *)(a2 + 360);
  sub_1AD00FF28((uint64_t)v18, (uint64_t)v20, &qword_1EECD4F48);
  if (sub_1AD45D830((uint64_t)v20) != 1)
  {
    sub_1AD00FF28((uint64_t)v18, (uint64_t)__src, &qword_1EECD4F48);
    sub_1AD00FF28((uint64_t)v19, (uint64_t)v16, &qword_1EECD4F48);
    if (sub_1AD45D830((uint64_t)v16) != 1)
    {
      sub_1AD00FF28((uint64_t)v19, (uint64_t)__dst, &qword_1EECD4F48);
      memcpy(v11, __dst, 0x159uLL);
      sub_1AD00FF28((uint64_t)v18, (uint64_t)v13, &qword_1EECD4F48);
      sub_1AD45DA38((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD291B5C);
      sub_1AD292360(v13);
      v8 = sub_1AD457608((uint64_t)__src, (uint64_t)v11);
      memcpy(v14, __src, 0x159uLL);
      sub_1AD292258(v14);
      sub_1AD45DA38((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD291754);
      if ((v8 & 1) != 0)
        goto LABEL_8;
LABEL_10:
      v9 = 0;
      return v9 & 1;
    }
    memcpy(__dst, __src, 0x159uLL);
    sub_1AD00FF28((uint64_t)v18, (uint64_t)v13, &qword_1EECD4F48);
    sub_1AD00FF28((uint64_t)v18, (uint64_t)v14, &qword_1EECD4F48);
    sub_1AD292360(v14);
    sub_1AD292360(v13);
    sub_1AD292258(__dst);
LABEL_6:
    sub_1AD00FF28((uint64_t)v18, (uint64_t)v16, &qword_1EECD4F48);
    sub_1AD00FF28((uint64_t)v19, (uint64_t)&v17, &qword_1EECD4F48);
    sub_1AD45DA38((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD291B5C);
    sub_1AD45D848((uint64_t)v16);
    goto LABEL_10;
  }
  sub_1AD00FF28((uint64_t)v19, (uint64_t)v16, &qword_1EECD4F48);
  if (sub_1AD45D830((uint64_t)v16) != 1)
    goto LABEL_6;
LABEL_8:
  if ((sub_1AD350E78(v5, v7) & 1) == 0)
    goto LABEL_10;
  v9 = sub_1AD350F20(v4, v6);
  return v9 & 1;
}

uint64_t sub_1AD4580EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = type metadata accessor for CloudKitSharingToken();
  v53 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDE7B0);
  MEMORY[0x1E0C80A78](v52);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v46 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v46 - v20;
  MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v46 - v22;
  v25 = a1[1];
  v26 = a2[1];
  if (!v25)
  {
    if (!v26)
      goto LABEL_10;
LABEL_8:
    sub_1AD0D3D2C((uint64_t)a1, (uint64_t)&v46 - v22, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
    sub_1AD0D3D2C((uint64_t)a2, (uint64_t)v21, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
    goto LABEL_9;
  }
  if (!v26)
    goto LABEL_8;
  if (*a1 != *a2 || v25 != v26)
  {
    v50 = v23;
    v51 = v4;
    v27 = sub_1AD63C2A8();
    sub_1AD0D3D2C((uint64_t)a1, (uint64_t)v24, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
    sub_1AD0D3D2C((uint64_t)a2, (uint64_t)v21, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
    if ((v27 & 1) != 0)
      goto LABEL_11;
LABEL_9:
    sub_1AD066230((uint64_t)v21, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
    sub_1AD066230((uint64_t)v24, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
    goto LABEL_25;
  }
LABEL_10:
  v50 = v23;
  v51 = v4;
  sub_1AD0D3D2C((uint64_t)a1, (uint64_t)&v46 - v22, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
  sub_1AD0D3D2C((uint64_t)a2, (uint64_t)v21, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
LABEL_11:
  v48 = v9;
  v28 = *((_QWORD *)v24 + 5);
  if (v28 != 1)
  {
    v47 = v6;
    v49 = v11;
    v29 = *((_QWORD *)v21 + 5);
    if (v29 != 1)
    {
      v30 = *((_QWORD *)v24 + 4);
      v31 = *((_QWORD *)v21 + 4);
      if (v28)
      {
        if (v29)
        {
          if (v30 != v31 || v28 != v29)
          {
            v33 = sub_1AD63C2A8();
            swift_bridgeObjectRetain();
            sub_1AD066230((uint64_t)v21, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
            sub_1AD066230((uint64_t)v24, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
            sub_1AD003F24(v30, v28);
            sub_1AD0D3D2C((uint64_t)a1, (uint64_t)v18, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
            sub_1AD0D3D2C((uint64_t)a2, (uint64_t)v15, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
            if ((v33 & 1) != 0)
              goto LABEL_31;
LABEL_26:
            sub_1AD066230((uint64_t)v15, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
            sub_1AD066230((uint64_t)v18, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
            goto LABEL_27;
          }
          swift_bridgeObjectRetain();
          sub_1AD066230((uint64_t)v21, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
          sub_1AD066230((uint64_t)v24, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
          sub_1AD003F24(v30, v28);
LABEL_30:
          sub_1AD0D3D2C((uint64_t)a1, (uint64_t)v18, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
          sub_1AD0D3D2C((uint64_t)a2, (uint64_t)v15, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
LABEL_31:
          v38 = (uint64_t)v49;
          v39 = *(int *)(v50 + 24);
          v40 = (uint64_t)&v15[v39];
          v41 = (uint64_t)&v49[*(int *)(v52 + 48)];
          sub_1ACFF64C0((uint64_t)&v18[v39], (uint64_t)v49, (uint64_t *)&unk_1EECDB370);
          sub_1ACFF64C0(v40, v41, (uint64_t *)&unk_1EECDB370);
          v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
          v43 = v51;
          if (v42(v38, 1, v51) == 1)
          {
            sub_1AD066230((uint64_t)v15, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
            sub_1AD066230((uint64_t)v18, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
            if (v42(v41, 1, v43) == 1)
            {
              sub_1AD009758(v38, (uint64_t *)&unk_1EECDB370);
              v36 = 1;
              return v36 & 1;
            }
          }
          else
          {
            v44 = (uint64_t)v48;
            sub_1ACFF64C0(v38, (uint64_t)v48, (uint64_t *)&unk_1EECDB370);
            if (v42(v41, 1, v43) != 1)
            {
              v45 = (uint64_t)v47;
              sub_1AD2A5214(v41, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
              v36 = sub_1AD4E9140(v44, v45);
              sub_1AD066230(v45, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
              sub_1AD066230((uint64_t)v15, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
              sub_1AD066230((uint64_t)v18, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
              sub_1AD066230(v44, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
              sub_1AD009758(v38, (uint64_t *)&unk_1EECDB370);
              return v36 & 1;
            }
            sub_1AD066230((uint64_t)v15, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
            sub_1AD066230((uint64_t)v18, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
            sub_1AD066230(v44, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
          }
          sub_1AD009758(v38, &qword_1EECDE7B0);
LABEL_27:
          v36 = 0;
          return v36 & 1;
        }
        sub_1AD003E48(*((_QWORD *)v24 + 4), v28);
        sub_1AD003E48(v31, 0);
        sub_1AD066230((uint64_t)v21, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
        sub_1AD066230((uint64_t)v24, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
        sub_1AD003F24(v30, v28);
        v34 = v31;
        v35 = 0;
      }
      else
      {
        sub_1AD003E48(*((_QWORD *)v24 + 4), 0);
        sub_1AD003E48(v31, v29);
        sub_1AD066230((uint64_t)v21, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
        sub_1AD066230((uint64_t)v24, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
        if (!v29)
          goto LABEL_30;
        sub_1AD003F24(v30, 0);
        v34 = v31;
        v35 = v29;
      }
      sub_1AD003F24(v34, v35);
LABEL_25:
      sub_1AD0D3D2C((uint64_t)a1, (uint64_t)v18, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
      sub_1AD0D3D2C((uint64_t)a2, (uint64_t)v15, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
      goto LABEL_26;
    }
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD458740(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  if (v3 == 1 || (v4 = *(_QWORD *)(a2 + 24), v4 == 1))
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = (v3 | v4) == 0;
    if (v3)
      v6 = v4 == 0;
    else
      v6 = 1;
    if (!v6)
    {
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || v3 != v4)
        return sub_1AD63C2A8();
      return 1;
    }
    return v5;
  }
  return result;
}

uint64_t sub_1AD4587F4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;

  v3 = a1[3];
  if (v3 == 1)
    goto LABEL_20;
  v4 = a2[3];
  if (v4 == 1)
    goto LABEL_20;
  v5 = a1[6];
  v6 = a1[7];
  v7 = a2[6];
  v8 = a2[7];
  if (!v3)
  {
    if (!v4)
      goto LABEL_12;
    return 0;
  }
  if (!v4)
    return 0;
  if (a1[2] != a2[2] || v3 != v4)
  {
    v9 = sub_1AD63C2A8();
    result = 0;
    if ((v9 & 1) == 0)
      return result;
  }
LABEL_12:
  if (v6 == 1 || v8 == 1)
  {
LABEL_20:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  result = (v6 | v8) == 0;
  if (v6 && v8)
  {
    if (v5 == v7 && v6 == v8)
      return 1;
    else
      return sub_1AD63C2A8();
  }
  return result;
}

uint64_t sub_1AD458920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t result;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[384];
  _BYTE v93[384];
  _BYTE v94[384];
  _BYTE v95[384];
  _QWORD v96[48];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  _BYTE v114[384];
  _BYTE v115[384];
  _BYTE v116[392];

  v4 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem(0);
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  MEMORY[0x1E0C80A78](v4);
  v84 = (uint64_t *)((char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2408);
  MEMORY[0x1E0C80A78](v6);
  v85 = (uint64_t *)((char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC720);
  MEMORY[0x1E0C80A78](v87);
  v90 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo(0);
  v9 = MEMORY[0x1E0C80A78](v86);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v71 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (uint64_t *)((char *)&v71 - v16);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (uint64_t *)((char *)&v71 - v19);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v71 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v71 - v24;
  sub_1AD00FF28(a1, (uint64_t)v114, &qword_1EECD4E38);
  v91 = a2;
  sub_1AD00FF28(a2, (uint64_t)v115, &qword_1EECD4E38);
  sub_1AD00FF28((uint64_t)v114, (uint64_t)v116, &qword_1EECD4E38);
  if (sub_1AD45DAD4((uint64_t)v116) != 1)
  {
    sub_1AD00FF28((uint64_t)v114, (uint64_t)v96, &qword_1EECD4E38);
    sub_1AD00FF28((uint64_t)v115, (uint64_t)&v97, &qword_1EECD4E38);
    if (sub_1AD45DAD4((uint64_t)&v97) != 1)
    {
      sub_1AD00FF28((uint64_t)v115, (uint64_t)v93, &qword_1EECD4E38);
      memcpy(v92, v93, 0x179uLL);
      sub_1AD00FF28((uint64_t)v114, (uint64_t)v94, &qword_1EECD4E38);
      sub_1AD291920((uint64_t)v114, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD2919C4);
      sub_1AD45DD00((uint64_t)v94);
      v26 = sub_1AD457ECC((uint64_t)v96, (uint64_t)v92);
      memcpy(v95, v96, 0x179uLL);
      sub_1AD45DDB4((uint64_t)v95);
      sub_1AD291920((uint64_t)v114, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD2915BC);
      sub_1AD0D3D2C(a1, (uint64_t)v25, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      sub_1AD0D3D2C(v91, (uint64_t)v23, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      if ((v26 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      sub_1AD066230((uint64_t)v23, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      sub_1AD066230((uint64_t)v25, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      goto LABEL_21;
    }
    memcpy(v94, v96, 0x179uLL);
    sub_1AD00FF28((uint64_t)v114, (uint64_t)v95, &qword_1EECD4E38);
    sub_1AD45DD00((uint64_t)v95);
    sub_1AD45DD00((uint64_t)v95);
    sub_1AD45DDB4((uint64_t)v94);
LABEL_6:
    sub_1AD00FF28((uint64_t)v114, (uint64_t)&v97, &qword_1EECD4E38);
    sub_1AD00FF28((uint64_t)v115, (uint64_t)&v113, &qword_1EECD4E38);
    sub_1AD291920((uint64_t)v115, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD2919C4);
    sub_1AD45DAEC((uint64_t)&v97);
    sub_1AD0D3D2C(a1, (uint64_t)v25, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
    sub_1AD0D3D2C(v91, (uint64_t)v23, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
    goto LABEL_7;
  }
  sub_1AD00FF28((uint64_t)v115, (uint64_t)&v97, &qword_1EECD4E38);
  if (sub_1AD45DAD4((uint64_t)&v97) != 1)
    goto LABEL_6;
  sub_1AD0D3D2C(a1, (uint64_t)v25, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
  sub_1AD0D3D2C(v91, (uint64_t)v23, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
LABEL_9:
  v83 = v11;
  v27 = *((_QWORD *)v25 + 51);
  if (v27 != 1)
  {
    v82 = v14;
    v28 = *((_QWORD *)v23 + 51);
    if (v28 != 1)
    {
      v29 = *((_QWORD *)v25 + 50);
      v30 = *((_QWORD *)v23 + 50);
      if (v27)
      {
        if (v28)
        {
          if (v29 == v30 && v27 == v28)
          {
            swift_bridgeObjectRetain();
            sub_1AD066230((uint64_t)v23, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
            sub_1AD066230((uint64_t)v25, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
            sub_1AD003F24(v29, v27);
LABEL_18:
            sub_1AD0D3D2C(a1, (uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
            sub_1AD0D3D2C(v91, (uint64_t)v17, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
            v14 = v82;
            v11 = v83;
LABEL_28:
            v37 = v20[52];
            v36 = v20[53];
            v39 = v20[54];
            v38 = v20[55];
            v40 = v20[56];
            v41 = v20[57];
            v42 = v20[58];
            v43 = v20[59];
            v45 = v17[52];
            v44 = v17[53];
            v46 = v17[54];
            v47 = v17[55];
            v49 = v17[56];
            v48 = v17[57];
            v51 = v17[58];
            v50 = v17[59];
            v77 = v37;
            v78 = v40;
            v80 = v39;
            v81 = v38;
            v79 = v36;
            if (v37)
            {
              v97 = v37;
              v98 = v36;
              v99 = v39;
              v100 = v38;
              v101 = v40;
              v102 = v41;
              v103 = v42;
              v104 = v43;
              if (v45)
              {
                v96[0] = v45;
                v96[1] = v44;
                v96[2] = v46;
                v96[3] = v47;
                v96[4] = v49;
                v96[5] = v48;
                v96[6] = v51;
                v96[7] = v50;
                LODWORD(v76) = sub_1AD4587F4(&v97, v96);
                swift_retain();
                v52 = v80;
                v53 = v81;
                sub_1AD003E48(v80, v81);
                swift_retain();
                sub_1AD003E48(v42, v43);
                swift_retain();
                sub_1AD003E48(v52, v53);
                swift_retain();
                sub_1AD003E48(v42, v43);
                v75 = v43;
                sub_1AD066230((uint64_t)v17, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                sub_1AD066230((uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                v54 = v99;
                v55 = v100;
                v56 = v103;
                v57 = v104;
                swift_release();
                v58 = v54;
                v11 = v83;
                sub_1AD003F24(v58, v55);
                swift_release();
                v59 = v56;
                v14 = v82;
                sub_1AD003F24(v59, v57);
                sub_1AD2918B8(v77, v79, v80, v81, v78, v41, v42, v75);
                sub_1AD0D3D2C(a1, (uint64_t)v14, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                sub_1AD0D3D2C(v91, (uint64_t)v11, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                if ((v76 & 1) != 0)
                  goto LABEL_34;
LABEL_24:
                sub_1AD066230((uint64_t)v11, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                sub_1AD066230((uint64_t)v14, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                goto LABEL_25;
              }
              v82 = (char *)v50;
              v75 = v48;
              v76 = v51;
              v73 = v47;
              v74 = v49;
              v71 = v44;
              v72 = v46;
              swift_retain();
              sub_1AD003E48(v80, v81);
              swift_retain();
              sub_1AD003E48(v42, v43);
              swift_retain();
              sub_1AD003E48(v80, v81);
              swift_retain();
              sub_1AD003E48(v42, v43);
              v90 = v41;
              sub_1AD066230((uint64_t)v17, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
              v61 = v79;
              v60 = v90;
              sub_1AD066230((uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
              swift_release();
              sub_1AD003F24(v80, v81);
              swift_release();
              sub_1AD003F24(v42, v43);
            }
            else
            {
              v71 = v44;
              v72 = v46;
              v73 = v47;
              v74 = v49;
              v75 = v48;
              v76 = v51;
              v82 = (char *)v50;
              sub_1AD291C00(v45, v44, v46, v47, v49, v48, v51, v50);
              sub_1AD066230((uint64_t)v17, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
              v60 = v41;
              v61 = v79;
              sub_1AD066230((uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
              if (!v45)
              {
                sub_1AD2918B8(0, v61, v80, v81, v78, v60, v42, v43);
                sub_1AD0D3D2C(a1, (uint64_t)v14, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                sub_1AD0D3D2C(v91, (uint64_t)v11, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
LABEL_34:
                v62 = *(int *)(v86 + 28);
                v63 = (uint64_t)&v11[v62];
                v64 = v90;
                v65 = v90 + *(int *)(v87 + 48);
                v66 = (uint64_t)v11;
                sub_1ACFF64C0((uint64_t)&v14[v62], v90, &qword_1EECD2408);
                sub_1ACFF64C0(v63, v65, &qword_1EECD2408);
                v67 = v89;
                v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
                if (v68(v64, 1, v89) == 1)
                {
                  sub_1AD066230(v66, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                  sub_1AD066230((uint64_t)v14, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                  if (v68(v65, 1, v67) == 1)
                  {
                    sub_1AD009758(v64, &qword_1EECD2408);
                    v33 = 1;
                    return v33 & 1;
                  }
                }
                else
                {
                  v69 = v85;
                  sub_1ACFF64C0(v64, (uint64_t)v85, &qword_1EECD2408);
                  if (v68(v65, 1, v67) != 1)
                  {
                    v70 = v84;
                    sub_1AD2A5214(v65, (uint64_t)v84, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
                    v33 = sub_1AD4580EC(v69, v70);
                    sub_1AD066230((uint64_t)v70, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
                    sub_1AD066230((uint64_t)v83, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                    sub_1AD066230((uint64_t)v14, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                    sub_1AD066230((uint64_t)v69, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
                    sub_1AD009758(v64, &qword_1EECD2408);
                    return v33 & 1;
                  }
                  sub_1AD066230((uint64_t)v83, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                  sub_1AD066230((uint64_t)v14, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
                  sub_1AD066230((uint64_t)v69, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
                }
                sub_1AD009758(v64, &qword_1EECDC720);
LABEL_25:
                v33 = 0;
                return v33 & 1;
              }
            }
            v97 = v77;
            v98 = v61;
            v99 = v80;
            v100 = v81;
            v101 = v78;
            v102 = v60;
            v103 = v42;
            v104 = v43;
            v105 = v45;
            v106 = v71;
            v107 = v72;
            v108 = v73;
            v109 = v74;
            v110 = v75;
            v111 = v76;
            v112 = v82;
            sub_1AD45DED8(&v97);
LABEL_23:
            sub_1AD0D3D2C(a1, (uint64_t)v14, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
            sub_1AD0D3D2C(v91, (uint64_t)v11, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
            goto LABEL_24;
          }
          v35 = sub_1AD63C2A8();
          swift_bridgeObjectRetain();
          sub_1AD066230((uint64_t)v23, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
          sub_1AD066230((uint64_t)v25, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
          sub_1AD003F24(v29, v27);
          sub_1AD0D3D2C(a1, (uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
          sub_1AD0D3D2C(v91, (uint64_t)v17, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
          v14 = v82;
          v11 = v83;
          if ((v35 & 1) != 0)
            goto LABEL_28;
LABEL_22:
          sub_1AD066230((uint64_t)v17, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
          sub_1AD066230((uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
          goto LABEL_23;
        }
        sub_1AD003E48(*((_QWORD *)v25 + 50), v27);
        sub_1AD003E48(v30, 0);
        sub_1AD066230((uint64_t)v23, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
        sub_1AD066230((uint64_t)v25, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
        sub_1AD003F24(v29, v27);
        v31 = v30;
        v32 = 0;
      }
      else
      {
        sub_1AD003E48(*((_QWORD *)v25 + 50), 0);
        sub_1AD003E48(v30, v28);
        sub_1AD066230((uint64_t)v23, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
        sub_1AD066230((uint64_t)v25, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
        if (!v28)
          goto LABEL_18;
        sub_1AD003F24(v29, 0);
        v31 = v30;
        v32 = v28;
      }
      sub_1AD003F24(v31, v32);
      v14 = v82;
      v11 = v83;
LABEL_21:
      sub_1AD0D3D2C(a1, (uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      sub_1AD0D3D2C(v91, (uint64_t)v17, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      goto LABEL_22;
    }
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD4594C0(uint64_t a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  double v39;
  double *v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  double *v100;

  v4 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo(0);
  v95 = *(_QWORD *)(v4 - 8);
  v96 = v4;
  MEMORY[0x1E0C80A78](v4);
  v92 = (uint64_t)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2410);
  MEMORY[0x1E0C80A78](v6);
  v93 = (uint64_t)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC728);
  MEMORY[0x1E0C80A78](v94);
  v9 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v87 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v98 = (char *)&v87 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v87 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v99 = (uint64_t)&v87 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v97 = (uint64_t)&v87 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v87 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v87 - v30;
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v87 - v33;
  v35 = MEMORY[0x1E0C80A78](v32);
  v37 = (char *)&v87 - v36;
  v38 = *(_BYTE *)(a1 + 8);
  v100 = a2;
  if ((v38 & 1) == 0)
  {
    if (((_BYTE)a2[1] & 1) == 0)
    {
      v88 = v9;
      v89 = v35;
      v39 = *(double *)a1;
      v40 = v100;
      v41 = *v100;
      sub_1AD0D3D2C(a1, (uint64_t)&v87 - v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      sub_1AD0D3D2C((uint64_t)v40, (uint64_t)v34, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      if (v39 == v41)
        goto LABEL_8;
LABEL_6:
      sub_1AD066230((uint64_t)v34, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      sub_1AD066230((uint64_t)v37, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
LABEL_20:
      v48 = v100;
      sub_1AD0D3D2C(a1, (uint64_t)v31, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      sub_1AD0D3D2C((uint64_t)v48, (uint64_t)v28, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      goto LABEL_21;
    }
LABEL_5:
    sub_1AD0D3D2C(a1, (uint64_t)&v87 - v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD0D3D2C((uint64_t)v100, (uint64_t)v34, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    goto LABEL_6;
  }
  if (((_BYTE)a2[1] & 1) == 0)
    goto LABEL_5;
  v88 = v9;
  v89 = v35;
  sub_1AD0D3D2C(a1, (uint64_t)&v87 - v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD0D3D2C((uint64_t)v100, (uint64_t)v34, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
LABEL_8:
  v91 = v16;
  v42 = *((_QWORD *)v37 + 5);
  if (v42 == 1)
    goto LABEL_72;
  v90 = v13;
  v43 = *((_QWORD *)v34 + 5);
  if (v43 == 1)
    goto LABEL_72;
  v44 = *((_QWORD *)v37 + 4);
  v45 = *((_QWORD *)v34 + 4);
  if (!v42)
  {
    sub_1AD003E48(*((_QWORD *)v37 + 4), 0);
    sub_1AD003E48(v45, v43);
    sub_1AD066230((uint64_t)v34, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230((uint64_t)v37, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    if (!v43)
      goto LABEL_17;
    sub_1AD003F24(v44, 0);
    v46 = v45;
    v47 = v43;
    goto LABEL_19;
  }
  if (!v43)
  {
    sub_1AD003E48(*((_QWORD *)v37 + 4), v42);
    sub_1AD003E48(v45, 0);
    sub_1AD066230((uint64_t)v34, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230((uint64_t)v37, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD003F24(v44, v42);
    v46 = v45;
    v47 = 0;
LABEL_19:
    sub_1AD003F24(v46, v47);
    v13 = v90;
    v16 = v91;
    goto LABEL_20;
  }
  if (v44 != v45 || v42 != v43)
  {
    v54 = sub_1AD63C2A8();
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v34, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230((uint64_t)v37, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD003F24(v44, v42);
    sub_1AD0D3D2C(a1, (uint64_t)v31, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    v48 = v100;
    sub_1AD0D3D2C((uint64_t)v100, (uint64_t)v28, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    v13 = v90;
    v16 = v91;
    if ((v54 & 1) != 0)
      goto LABEL_29;
LABEL_21:
    sub_1AD066230((uint64_t)v28, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230((uint64_t)v31, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    v49 = (uint64_t)v21;
    v50 = (uint64_t)v98;
LABEL_22:
    v51 = v97;
    v52 = v99;
    sub_1AD0D3D2C(a1, v97, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD0D3D2C((uint64_t)v48, v52, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v34, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD066230((uint64_t)v37, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD003F24(v44, v42);
LABEL_17:
  sub_1AD0D3D2C(a1, (uint64_t)v31, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD0D3D2C((uint64_t)v100, (uint64_t)v28, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  v13 = v90;
LABEL_29:
  v55 = *((_QWORD *)v31 + 9);
  if (v55 == 1)
    goto LABEL_72;
  v56 = *((_QWORD *)v28 + 9);
  if (v56 == 1)
    goto LABEL_72;
  v57 = *((_QWORD *)v31 + 8);
  v58 = *((_QWORD *)v28 + 8);
  v49 = (uint64_t)v21;
  if (!v55)
  {
    sub_1AD003E48(*((_QWORD *)v31 + 8), 0);
    sub_1AD003E48(v58, v56);
    sub_1AD066230((uint64_t)v28, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230((uint64_t)v31, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    v50 = (uint64_t)v98;
    if (!v56)
      goto LABEL_38;
    sub_1AD003F24(v57, 0);
    v59 = v58;
    v60 = v56;
    goto LABEL_40;
  }
  v50 = (uint64_t)v98;
  if (!v56)
  {
    sub_1AD003E48(*((_QWORD *)v31 + 8), *((_QWORD *)v31 + 9));
    sub_1AD003E48(v58, 0);
    sub_1AD066230((uint64_t)v28, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230((uint64_t)v31, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD003F24(v57, v55);
    v59 = v58;
    v60 = 0;
LABEL_40:
    sub_1AD003F24(v59, v60);
    v16 = v91;
    v48 = v100;
    goto LABEL_22;
  }
  if (v57 != v58 || v55 != v56)
  {
    v61 = sub_1AD63C2A8();
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v28, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230((uint64_t)v31, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD003F24(v57, v55);
    v51 = v97;
    sub_1AD0D3D2C(a1, v97, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    v52 = v99;
    v48 = v100;
    sub_1AD0D3D2C((uint64_t)v100, v99, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    v16 = v91;
    if ((v61 & 1) != 0)
      goto LABEL_42;
LABEL_23:
    sub_1AD066230(v52, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230(v51, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
LABEL_24:
    sub_1AD0D3D2C(a1, v49, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD0D3D2C((uint64_t)v48, v50, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v28, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD066230((uint64_t)v31, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD003F24(v57, v55);
LABEL_38:
  v51 = v97;
  sub_1AD0D3D2C(a1, v97, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  v52 = v99;
  sub_1AD0D3D2C((uint64_t)v100, v99, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
LABEL_42:
  v62 = *(_QWORD *)(v51 + 104);
  if (v62 == 1)
    goto LABEL_72;
  v63 = *(_QWORD *)(v52 + 104);
  if (v63 == 1)
    goto LABEL_72;
  v64 = *(_QWORD *)(v51 + 96);
  v65 = *(_QWORD *)(v52 + 96);
  if (!v62)
  {
    sub_1AD003E48(*(_QWORD *)(v51 + 96), 0);
    sub_1AD003E48(v65, v63);
    sub_1AD066230(v52, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230(v51, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    if (!v63)
      goto LABEL_51;
    sub_1AD003F24(v64, 0);
    v66 = v65;
    v67 = v63;
    goto LABEL_53;
  }
  if (!v63)
  {
    sub_1AD003E48(*(_QWORD *)(v51 + 96), *(_QWORD *)(v51 + 104));
    sub_1AD003E48(v65, 0);
    sub_1AD066230(v99, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230(v51, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD003F24(v64, v62);
    v66 = v65;
    v67 = 0;
LABEL_53:
    sub_1AD003F24(v66, v67);
    v16 = v91;
    v48 = v100;
    goto LABEL_24;
  }
  if (v64 == v65 && v62 == v63)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230(v99, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230(v51, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD003F24(v64, v62);
LABEL_51:
    sub_1AD0D3D2C(a1, v49, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD0D3D2C((uint64_t)v100, v50, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    v16 = v91;
    goto LABEL_55;
  }
  v68 = sub_1AD63C2A8();
  swift_bridgeObjectRetain();
  sub_1AD066230(v99, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD066230(v51, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD003F24(v64, v62);
  sub_1AD0D3D2C(a1, v49, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  v48 = v100;
  sub_1AD0D3D2C((uint64_t)v100, v50, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  v16 = v91;
  if ((v68 & 1) == 0)
  {
LABEL_25:
    sub_1AD066230(v50, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230(v49, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
LABEL_26:
    sub_1AD0D3D2C(a1, (uint64_t)v16, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD0D3D2C((uint64_t)v48, (uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    goto LABEL_27;
  }
LABEL_55:
  v69 = (uint64_t)v88;
  v70 = *(int *)(v89 + 32);
  v71 = v50 + v70;
  v72 = (uint64_t)&v88[*(int *)(v94 + 48)];
  sub_1ACFF64C0(v49 + v70, (uint64_t)v88, &qword_1EECD2410);
  sub_1ACFF64C0(v71, v72, &qword_1EECD2410);
  v73 = v96;
  v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
  if (v74(v69, 1, v96) != 1)
  {
    v75 = v93;
    sub_1ACFF64C0(v69, v93, &qword_1EECD2410);
    if (v74(v72, 1, v73) != 1)
    {
      v76 = v92;
      sub_1AD2A5214(v72, v92, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      v77 = sub_1AD458920(v75, v76);
      sub_1AD066230(v76, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      sub_1AD066230(v50, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      sub_1AD066230(v49, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      sub_1AD066230(v75, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      sub_1AD009758(v69, &qword_1EECD2410);
      sub_1AD0D3D2C(a1, (uint64_t)v16, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      sub_1AD0D3D2C((uint64_t)v100, (uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      if ((v77 & 1) != 0)
        goto LABEL_62;
LABEL_27:
      sub_1AD066230((uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      sub_1AD066230((uint64_t)v16, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
      return 0;
    }
    sub_1AD066230(v50, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230(v49, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    sub_1AD066230(v75, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
    goto LABEL_60;
  }
  sub_1AD066230(v50, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD066230(v49, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  if (v74(v72, 1, v73) != 1)
  {
LABEL_60:
    sub_1AD009758(v69, &qword_1EECDC728);
    v48 = v100;
    goto LABEL_26;
  }
  sub_1AD009758(v69, &qword_1EECD2410);
  sub_1AD0D3D2C(a1, (uint64_t)v16, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD0D3D2C((uint64_t)v100, (uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
LABEL_62:
  v78 = v89;
  v79 = &v16[*(int *)(v89 + 36)];
  if ((v79[21] & 1) != 0
    || (v80 = v79[20],
        v81 = *((unsigned int *)v79 + 4),
        sub_1AD066230((uint64_t)v16, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest),
        v82 = &v13[*(int *)(v78 + 36)],
        (v82[21] & 1) != 0))
  {
LABEL_72:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  v83 = v81 | (v80 << 32);
  v84 = v82[20];
  v85 = *((unsigned int *)v82 + 4);
  sub_1AD066230((uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  if ((v83 & 0x100000000) != 0)
    return v84 & 1;
  return ((v85 | (v84 << 32)) & 0x100000000) == 0 && (_DWORD)v81 == (_DWORD)v85;
}

uint64_t sub_1AD45A11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v4 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo(0);
  v107 = *(_QWORD *)(v4 - 8);
  v108 = v4;
  MEMORY[0x1E0C80A78](v4);
  v105 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2410);
  MEMORY[0x1E0C80A78](v6);
  v109 = (uint64_t)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC728);
  MEMORY[0x1E0C80A78](v106);
  v9 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v99 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v99 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v112 = (uint64_t)&v99 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v114 = (uint64_t)&v99 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v26 = MEMORY[0x1E0C80A78](v25);
  v113 = (uint64_t)&v99 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v99 - v29;
  v31 = MEMORY[0x1E0C80A78](v28);
  v33 = (char *)&v99 - v32;
  v34 = MEMORY[0x1E0C80A78](v31);
  v36 = (char *)&v99 - v35;
  v37 = MEMORY[0x1E0C80A78](v34);
  v39 = (char *)&v99 - v38;
  v40 = *(_BYTE *)(a1 + 8);
  v41 = *(_BYTE *)(a2 + 8);
  v110 = v43;
  v111 = v42;
  if ((v40 & 1) == 0)
  {
    if ((v41 & 1) == 0)
    {
      v100 = v37;
      v101 = v9;
      v44 = *(double *)a1;
      v45 = *(double *)a2;
      sub_1AD0D3D2C(a1, (uint64_t)&v99 - v38, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      sub_1AD0D3D2C(a2, (uint64_t)v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      if (v44 == v45)
        goto LABEL_8;
LABEL_6:
      sub_1AD066230((uint64_t)v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      sub_1AD066230((uint64_t)v39, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
LABEL_20:
      v52 = v114;
      sub_1AD0D3D2C(a1, (uint64_t)v33, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      sub_1AD0D3D2C(a2, (uint64_t)v30, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      goto LABEL_21;
    }
LABEL_5:
    sub_1AD0D3D2C(a1, (uint64_t)&v99 - v38, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD0D3D2C(a2, (uint64_t)v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    goto LABEL_6;
  }
  if ((v41 & 1) == 0)
    goto LABEL_5;
  v100 = v37;
  v101 = v9;
  sub_1AD0D3D2C(a1, (uint64_t)&v99 - v38, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD0D3D2C(a2, (uint64_t)v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
LABEL_8:
  v102 = v16;
  v46 = *((_QWORD *)v39 + 5);
  if (v46 == 1)
    goto LABEL_79;
  v103 = v13;
  v104 = v20;
  v47 = *((_QWORD *)v36 + 5);
  if (v47 == 1)
    goto LABEL_79;
  v48 = *((_QWORD *)v39 + 4);
  v49 = *((_QWORD *)v36 + 4);
  if (!v46)
  {
    sub_1AD003E48(*((_QWORD *)v39 + 4), 0);
    sub_1AD003E48(v49, v47);
    sub_1AD066230((uint64_t)v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230((uint64_t)v39, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    if (!v47)
      goto LABEL_17;
    sub_1AD003F24(v48, 0);
    v50 = v49;
    v51 = v47;
    goto LABEL_19;
  }
  if (!v47)
  {
    sub_1AD003E48(*((_QWORD *)v39 + 4), v46);
    sub_1AD003E48(v49, 0);
    sub_1AD066230((uint64_t)v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230((uint64_t)v39, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD003F24(v48, v46);
    v50 = v49;
    v51 = 0;
LABEL_19:
    sub_1AD003F24(v50, v51);
    v16 = v102;
    v13 = v103;
    v20 = v104;
    goto LABEL_20;
  }
  if (v48 != v49 || v46 != v47)
  {
    v58 = sub_1AD63C2A8();
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230((uint64_t)v39, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD003F24(v48, v46);
    sub_1AD0D3D2C(a1, (uint64_t)v33, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD0D3D2C(a2, (uint64_t)v30, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    v16 = v102;
    v13 = v103;
    v20 = v104;
    v52 = v114;
    if ((v58 & 1) != 0)
      goto LABEL_31;
LABEL_21:
    sub_1AD066230((uint64_t)v30, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230((uint64_t)v33, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    v53 = v112;
LABEL_22:
    v54 = v113;
    sub_1AD0D3D2C(a1, v113, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    v55 = v110;
    sub_1AD0D3D2C(a2, v110, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD066230((uint64_t)v39, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD003F24(v48, v46);
LABEL_17:
  sub_1AD0D3D2C(a1, (uint64_t)v33, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD0D3D2C(a2, (uint64_t)v30, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  v16 = v102;
  v13 = v103;
LABEL_31:
  v59 = *((_QWORD *)v33 + 9);
  if (v59 == 1)
    goto LABEL_79;
  v60 = *((_QWORD *)v30 + 9);
  if (v60 == 1)
    goto LABEL_79;
  v61 = *((_QWORD *)v33 + 8);
  v62 = *((_QWORD *)v30 + 8);
  if (!v59)
  {
    sub_1AD003E48(*((_QWORD *)v33 + 8), 0);
    sub_1AD003E48(v62, v60);
    sub_1AD066230((uint64_t)v30, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230((uint64_t)v33, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    if (!v60)
      goto LABEL_40;
    sub_1AD003F24(v61, 0);
    v63 = v62;
    v64 = v60;
    goto LABEL_42;
  }
  if (!v60)
  {
    sub_1AD003E48(*((_QWORD *)v33 + 8), *((_QWORD *)v33 + 9));
    sub_1AD003E48(v62, 0);
    sub_1AD066230((uint64_t)v30, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230((uint64_t)v33, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD003F24(v61, v59);
    v63 = v62;
    v64 = 0;
LABEL_42:
    sub_1AD003F24(v63, v64);
    v20 = v104;
    v53 = v112;
    v52 = v114;
    goto LABEL_22;
  }
  if (v61 != v62 || v59 != v60)
  {
    v65 = sub_1AD63C2A8();
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v30, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230((uint64_t)v33, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD003F24(v61, v59);
    v54 = v113;
    sub_1AD0D3D2C(a1, v113, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    v55 = v110;
    sub_1AD0D3D2C(a2, v110, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    v20 = v104;
    v53 = v112;
    v52 = v114;
    if ((v65 & 1) != 0)
      goto LABEL_44;
LABEL_23:
    sub_1AD066230(v55, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230(v54, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    v56 = v111;
LABEL_24:
    sub_1AD0D3D2C(a1, v52, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD0D3D2C(a2, v53, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v30, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD066230((uint64_t)v33, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD003F24(v61, v59);
LABEL_40:
  v54 = v113;
  sub_1AD0D3D2C(a1, v113, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  v55 = v110;
  sub_1AD0D3D2C(a2, v110, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  v20 = v104;
LABEL_44:
  v66 = *(_QWORD *)(v54 + 104);
  if (v66 == 1)
    goto LABEL_79;
  v67 = *(_QWORD *)(v55 + 104);
  if (v67 == 1)
    goto LABEL_79;
  v68 = *(_QWORD *)(v54 + 96);
  v69 = *(_QWORD *)(v55 + 96);
  v56 = v111;
  if (!v66)
  {
    v104 = *(char **)(v54 + 96);
    v71 = v69;
    sub_1AD003E48((uint64_t)v104, 0);
    v113 = v71;
    sub_1AD003E48(v71, v67);
    sub_1AD066230(v55, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230(v54, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    if (!v67)
      goto LABEL_53;
    sub_1AD003F24((uint64_t)v104, 0);
    v72 = v113;
    v73 = v67;
    goto LABEL_55;
  }
  if (!v67)
  {
    v74 = *(_QWORD *)(v54 + 96);
    v75 = *(_QWORD *)(v55 + 96);
    sub_1AD003E48(v68, v66);
    sub_1AD003E48(v75, 0);
    sub_1AD066230(v55, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230(v113, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD003F24(v74, v66);
    v72 = v75;
    v73 = 0;
LABEL_55:
    sub_1AD003F24(v72, v73);
    v53 = v112;
    v52 = v114;
    goto LABEL_24;
  }
  if (v68 == v69 && v66 == v67)
  {
    v70 = *(_QWORD *)(v54 + 96);
    swift_bridgeObjectRetain();
    sub_1AD066230(v55, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230(v113, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD003F24(v70, v66);
LABEL_53:
    v52 = v114;
    sub_1AD0D3D2C(a1, v114, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    v53 = v112;
    sub_1AD0D3D2C(a2, v112, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    goto LABEL_57;
  }
  v76 = *(_QWORD *)(v54 + 96);
  LODWORD(v104) = sub_1AD63C2A8();
  swift_bridgeObjectRetain();
  sub_1AD066230(v55, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD066230(v113, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD003F24(v76, v66);
  v77 = v114;
  sub_1AD0D3D2C(a1, v114, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  v53 = v112;
  v52 = v77;
  sub_1AD0D3D2C(a2, v112, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  if ((v104 & 1) == 0)
  {
LABEL_25:
    sub_1AD066230(v53, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230(v52, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    goto LABEL_26;
  }
LABEL_57:
  v78 = v52;
  v79 = v53;
  v80 = *(unsigned __int8 *)(v78 + 112);
  sub_1AD066230(v78, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  v81 = *(unsigned __int8 *)(v79 + 112);
  sub_1AD066230(v79, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  if (v80 == 5)
  {
    if (v81 == 5)
    {
      sub_1AD0D3D2C(a1, (uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      sub_1AD0D3D2C(a2, v56, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      goto LABEL_62;
    }
    goto LABEL_26;
  }
  if (v81 == 5)
  {
LABEL_26:
    sub_1AD0D3D2C(a1, (uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD0D3D2C(a2, v56, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
LABEL_27:
    sub_1AD066230(v56, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230((uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
LABEL_28:
    sub_1AD0D3D2C(a1, (uint64_t)v16, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD0D3D2C(a2, (uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    goto LABEL_29;
  }
  sub_1AD0D3D2C(a1, (uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD0D3D2C(a2, v56, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  if (v80 != v81)
    goto LABEL_27;
LABEL_62:
  v82 = (uint64_t)v101;
  v83 = *(int *)(v100 + 36);
  v84 = v56 + v83;
  v85 = (uint64_t)&v101[*(int *)(v106 + 48)];
  sub_1ACFF64C0((uint64_t)&v20[v83], (uint64_t)v101, &qword_1EECD2410);
  sub_1ACFF64C0(v84, v85, &qword_1EECD2410);
  v86 = v108;
  v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
  if (v87(v82, 1, v108) != 1)
  {
    sub_1ACFF64C0(v82, v109, &qword_1EECD2410);
    if (v87(v85, 1, v86) != 1)
    {
      v88 = v109;
      v89 = v105;
      sub_1AD2A5214(v85, v105, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      LODWORD(v114) = sub_1AD458920(v88, v89);
      sub_1AD066230(v89, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      sub_1AD066230(v56, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      sub_1AD066230((uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      sub_1AD066230(v88, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
      sub_1AD009758(v82, &qword_1EECD2410);
      sub_1AD0D3D2C(a1, (uint64_t)v16, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      sub_1AD0D3D2C(a2, (uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      if ((v114 & 1) != 0)
        goto LABEL_69;
LABEL_29:
      sub_1AD066230((uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      sub_1AD066230((uint64_t)v16, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
      return 0;
    }
    v101 = (char *)v82;
    sub_1AD066230(v56, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230((uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    sub_1AD066230(v109, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteUserInfo);
    goto LABEL_67;
  }
  v101 = (char *)v82;
  sub_1AD066230(v56, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD066230((uint64_t)v20, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  if (v87(v85, 1, v86) != 1)
  {
LABEL_67:
    sub_1AD009758((uint64_t)v101, &qword_1EECDC728);
    goto LABEL_28;
  }
  sub_1AD009758((uint64_t)v101, &qword_1EECD2410);
  sub_1AD0D3D2C(a1, (uint64_t)v16, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD0D3D2C(a2, (uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
LABEL_69:
  v90 = v100;
  v91 = &v16[*(int *)(v100 + 40)];
  if ((v91[21] & 1) != 0
    || (v92 = v91[20],
        v93 = *((unsigned int *)v91 + 4),
        sub_1AD066230((uint64_t)v16, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse),
        v94 = &v13[*(int *)(v90 + 40)],
        (v94[21] & 1) != 0))
  {
LABEL_79:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  v95 = v93 | (v92 << 32);
  v96 = v94[20];
  v97 = *((unsigned int *)v94 + 4);
  sub_1AD066230((uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  if ((v95 & 0x100000000) != 0)
    return v96 & 1;
  return ((v97 | (v96 << 32)) & 0x100000000) == 0 && (_DWORD)v93 == (_DWORD)v97;
}

uint64_t sub_1AD45AEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  uint64_t v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  double v52;
  char v53;
  double v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int *v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v4 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem(0);
  v97 = *(_QWORD *)(v4 - 8);
  v98 = v4;
  MEMORY[0x1E0C80A78](v4);
  v95 = (int **)((char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2408);
  MEMORY[0x1E0C80A78](v6);
  v99 = (int **)((char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC720);
  MEMORY[0x1E0C80A78](v96);
  v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v106 = (uint64_t)&v93 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v103 = (char *)&v93 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v104 = (uint64_t)&v93 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v105 = (uint64_t)&v93 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v102 = (char *)&v93 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v101 = (char *)&v93 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v93 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v93 - v31;
  v33 = MEMORY[0x1E0C80A78](v30);
  v35 = (double *)((char *)&v93 - v34);
  MEMORY[0x1E0C80A78](v33);
  v38 = (double *)((char *)&v93 - v36);
  v39 = *(_QWORD *)(a1 + 24);
  if (v39 == 1)
    goto LABEL_76;
  v40 = *(_QWORD *)(a2 + 24);
  if (v40 == 1)
    goto LABEL_76;
  v100 = v37;
  if (!v39)
  {
    if (!v40)
    {
LABEL_22:
      v94 = v9;
      sub_1AD0D3D2C(a1, (uint64_t)&v93 - v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      sub_1AD0D3D2C(a2, (uint64_t)v35, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      goto LABEL_23;
    }
LABEL_10:
    sub_1AD0D3D2C(a1, (uint64_t)&v93 - v36, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD0D3D2C(a2, (uint64_t)v35, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    goto LABEL_11;
  }
  if (!v40)
    goto LABEL_10;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v39 == v40)
    goto LABEL_22;
  v94 = v9;
  v41 = sub_1AD63C2A8();
  sub_1AD0D3D2C(a1, (uint64_t)v38, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD0D3D2C(a2, (uint64_t)v35, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  if ((v41 & 1) == 0)
  {
LABEL_11:
    sub_1AD066230((uint64_t)v35, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230((uint64_t)v38, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    goto LABEL_12;
  }
LABEL_23:
  v93 = (int *)v10;
  v49 = a1;
  v50 = a2;
  v51 = v13;
  v52 = v38[4];
  v53 = *((_BYTE *)v38 + 40);
  sub_1AD066230((uint64_t)v38, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  v54 = v35[4];
  v55 = *((_BYTE *)v35 + 40);
  sub_1AD066230((uint64_t)v35, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  if ((v53 & 1) == 0)
  {
    v13 = v51;
    a2 = v50;
    a1 = v49;
    if ((v55 & 1) == 0)
    {
      sub_1AD0D3D2C(v49, (uint64_t)v32, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      sub_1AD0D3D2C(a2, (uint64_t)v29, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      v42 = (uint64_t)v101;
      if (v52 == v54)
        goto LABEL_28;
LABEL_13:
      sub_1AD066230((uint64_t)v29, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      sub_1AD066230((uint64_t)v32, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
LABEL_14:
      v44 = (uint64_t)v103;
      v43 = v104;
      v45 = (uint64_t)v102;
      v46 = v100;
      sub_1AD0D3D2C(a1, v100, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      sub_1AD0D3D2C(a2, v42, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      goto LABEL_15;
    }
LABEL_12:
    sub_1AD0D3D2C(a1, (uint64_t)v32, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD0D3D2C(a2, (uint64_t)v29, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    v42 = (uint64_t)v101;
    goto LABEL_13;
  }
  v13 = v51;
  a2 = v50;
  a1 = v49;
  if ((v55 & 1) == 0)
    goto LABEL_12;
  sub_1AD0D3D2C(v49, (uint64_t)v32, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD0D3D2C(a2, (uint64_t)v29, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  v42 = (uint64_t)v101;
LABEL_28:
  v56 = *((_QWORD *)v32 + 9);
  if (v56 == 1)
    goto LABEL_76;
  v57 = *((_QWORD *)v29 + 9);
  if (v57 == 1)
    goto LABEL_76;
  v58 = *((_QWORD *)v32 + 8);
  if (!v56)
  {
    v59 = *((_QWORD *)v29 + 8);
    sub_1AD003E48(*((_QWORD *)v32 + 8), 0);
    sub_1AD003E48(v59, v57);
    sub_1AD066230((uint64_t)v29, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230((uint64_t)v32, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    if (!v57)
      goto LABEL_37;
    sub_1AD003F24(v58, 0);
    v60 = v59;
    v61 = v57;
    goto LABEL_39;
  }
  if (!v57)
  {
    v62 = *((_QWORD *)v29 + 8);
    sub_1AD003E48(*((_QWORD *)v32 + 8), *((_QWORD *)v32 + 9));
    sub_1AD003E48(v62, 0);
    sub_1AD066230((uint64_t)v29, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230((uint64_t)v32, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD003F24(v58, v56);
    v60 = v62;
    v61 = 0;
LABEL_39:
    sub_1AD003F24(v60, v61);
    goto LABEL_14;
  }
  if (v58 == *((_QWORD *)v29 + 8) && v56 == v57)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v29, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230((uint64_t)v32, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD003F24(v58, v56);
LABEL_37:
    v46 = v100;
    sub_1AD0D3D2C(a1, v100, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD0D3D2C(a2, v42, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    v44 = (uint64_t)v103;
    v43 = v104;
    v45 = (uint64_t)v102;
    goto LABEL_41;
  }
  LODWORD(v101) = sub_1AD63C2A8();
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v29, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD066230((uint64_t)v32, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD003F24(v58, v56);
  v46 = v100;
  sub_1AD0D3D2C(a1, v100, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD0D3D2C(a2, v42, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  v44 = (uint64_t)v103;
  v43 = v104;
  v45 = (uint64_t)v102;
  if ((v101 & 1) == 0)
  {
LABEL_15:
    sub_1AD066230(v42, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230(v46, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    goto LABEL_16;
  }
LABEL_41:
  v63 = *(unsigned __int8 *)(v46 + 80);
  sub_1AD066230(v46, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  v64 = v42;
  v65 = *(unsigned __int8 *)(v42 + 80);
  sub_1AD066230(v64, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  if (v63 == 2)
  {
    if (v65 == 2)
    {
      sub_1AD0D3D2C(a1, v45, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      v47 = v105;
      sub_1AD0D3D2C(a2, v105, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      goto LABEL_46;
    }
    goto LABEL_16;
  }
  if (v65 == 2)
  {
LABEL_16:
    sub_1AD0D3D2C(a1, v45, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    v47 = v105;
    sub_1AD0D3D2C(a2, v105, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
LABEL_17:
    sub_1AD066230(v47, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230(v45, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
LABEL_18:
    sub_1AD0D3D2C(a1, v43, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD0D3D2C(a2, v44, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    goto LABEL_19;
  }
  sub_1AD0D3D2C(a1, v45, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  v47 = v105;
  sub_1AD0D3D2C(a2, v105, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  if (((v65 ^ v63) & 1) != 0)
    goto LABEL_17;
LABEL_46:
  v66 = (uint64_t)v94;
  v67 = v93[8];
  v104 = v47 + v67;
  v68 = (uint64_t)&v94[*(int *)(v96 + 48)];
  sub_1ACFF64C0(v45 + v67, (uint64_t)v94, &qword_1EECD2408);
  v69 = v104;
  v104 = v68;
  sub_1ACFF64C0(v69, v68, &qword_1EECD2408);
  v70 = v98;
  v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
  if (v71(v66, 1, v98) != 1)
  {
    sub_1ACFF64C0(v66, (uint64_t)v99, &qword_1EECD2408);
    if (v71(v104, 1, v70) != 1)
    {
      v72 = v95;
      sub_1AD2A5214(v104, (uint64_t)v95, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
      v73 = v99;
      LODWORD(v104) = sub_1AD4580EC(v99, v72);
      sub_1AD066230((uint64_t)v72, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
      sub_1AD066230(v105, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      sub_1AD066230(v45, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      sub_1AD066230((uint64_t)v73, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
      sub_1AD009758(v66, &qword_1EECD2408);
      sub_1AD0D3D2C(a1, v43, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      sub_1AD0D3D2C(a2, v44, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      if ((v104 & 1) != 0)
        goto LABEL_53;
LABEL_19:
      sub_1AD066230(v44, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      sub_1AD066230(v43, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
LABEL_20:
      sub_1AD0D3D2C(a1, v106, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      sub_1AD0D3D2C(a2, (uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
      goto LABEL_21;
    }
    v94 = (char *)v66;
    sub_1AD066230(v105, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230(v45, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230((uint64_t)v99, type metadata accessor for IDSActivitySharingInvitation.SecureCloudShareItem);
    goto LABEL_51;
  }
  v94 = (char *)v66;
  sub_1AD066230(v105, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD066230(v45, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  if (v71(v104, 1, v70) != 1)
  {
LABEL_51:
    sub_1AD009758((uint64_t)v94, &qword_1EECDC720);
    goto LABEL_18;
  }
  sub_1AD009758((uint64_t)v94, &qword_1EECD2408);
  sub_1AD0D3D2C(a1, v43, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD0D3D2C(a2, v44, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
LABEL_53:
  v74 = v93[9];
  v75 = v43 + v74;
  v76 = *(_QWORD *)(v43 + v74 + 24);
  if (v76 == 1)
    goto LABEL_76;
  v77 = v44 + v74;
  v78 = *(_QWORD *)(v77 + 24);
  if (v78 == 1)
    goto LABEL_76;
  v79 = *(_QWORD *)(v75 + 16);
  v80 = *(_QWORD *)(v77 + 16);
  if (!v76)
  {
    sub_1AD003E48(*(_QWORD *)(v75 + 16), 0);
    sub_1AD003E48(v80, v78);
    sub_1AD066230(v44, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230(v43, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    if (!v78)
      goto LABEL_62;
    sub_1AD003F24(v79, 0);
    v81 = v80;
    v82 = v78;
    goto LABEL_64;
  }
  if (!v78)
  {
    sub_1AD003E48(*(_QWORD *)(v75 + 16), v76);
    sub_1AD003E48(v80, 0);
    sub_1AD066230(v44, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230(v43, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD003F24(v79, v76);
    v81 = v80;
    v82 = 0;
LABEL_64:
    sub_1AD003F24(v81, v82);
    goto LABEL_20;
  }
  if (v79 != v80 || v76 != v78)
  {
    v83 = sub_1AD63C2A8();
    swift_bridgeObjectRetain();
    sub_1AD066230(v44, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230(v43, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD003F24(v79, v76);
    sub_1AD0D3D2C(a1, v106, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD0D3D2C(a2, (uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    if ((v83 & 1) != 0)
      goto LABEL_66;
LABEL_21:
    sub_1AD066230((uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    sub_1AD066230(v106, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_1AD066230(v44, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD066230(v43, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD003F24(v79, v76);
LABEL_62:
  sub_1AD0D3D2C(a1, v106, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD0D3D2C(a2, (uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
LABEL_66:
  v84 = v93;
  v85 = v106 + v93[10];
  if ((*(_BYTE *)(v85 + 21) & 1) != 0
    || (v86 = *(unsigned __int8 *)(v85 + 20),
        v87 = *(unsigned int *)(v85 + 16),
        sub_1AD066230(v106, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage),
        v88 = &v13[v84[10]],
        (v88[21] & 1) != 0))
  {
LABEL_76:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  v89 = v87 | (v86 << 32);
  v90 = v88[20];
  v91 = *((unsigned int *)v88 + 4);
  sub_1AD066230((uint64_t)v13, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  if ((v89 & 0x100000000) != 0)
    return v90 & 1;
  return ((v91 | (v90 << 32)) & 0x100000000) == 0 && (_DWORD)v87 == (_DWORD)v91;
}

uint64_t sub_1AD45BB68(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t result;
  char v10;

  v4 = *(_BYTE *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a2 + 40);
  if ((v4 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 == *(double *)a2)
      v10 = *(_BYTE *)(a2 + 8);
    else
      v10 = 1;
    if ((v10 & 1) != 0)
      return 0;
  }
  if (v6 == 1 || v7 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v8 = (v6 | v7) == 0;
    if (!v6 || !v7)
      return v8;
    if (v5 == *(_QWORD *)(a2 + 32) && v6 == v7)
      return 1;
    return sub_1AD63C2A8();
  }
  return result;
}

uint64_t sub_1AD45BC48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unsigned __int8 *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t result;
  double *v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(unsigned __int8 *, uint64_t, uint64_t);
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  double *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  unsigned __int8 *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unsigned __int8 *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;

  v163 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage(0);
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v158 = (uint64_t)&v155 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2428);
  MEMORY[0x1E0C80A78](v5);
  v159 = (uint64_t)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC730);
  MEMORY[0x1E0C80A78](v161);
  v8 = (char *)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse(0);
  v167 = *(_QWORD *)(v168 - 8);
  MEMORY[0x1E0C80A78](v168);
  v160 = (uint64_t)&v155 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2420);
  MEMORY[0x1E0C80A78](v10);
  v164 = (uint64_t)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC738);
  MEMORY[0x1E0C80A78](v166);
  v169 = (uint64_t)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest(0);
  v171 = *(_QWORD *)(v172 - 8);
  MEMORY[0x1E0C80A78](v172);
  v165 = (double *)((char *)&v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2418);
  MEMORY[0x1E0C80A78](v14);
  v170 = (uint64_t)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC740);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v155 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = (int *)type metadata accessor for IDSActivitySharingInvitation(0);
  v19 = MEMORY[0x1E0C80A78](v173);
  v21 = (char *)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v155 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v178 = (uint64_t)&v155 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v174 = (uint64_t)&v155 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v176 = (uint64_t)&v155 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v177 = (uint64_t)&v155 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v34 = MEMORY[0x1E0C80A78](v33);
  v182 = (uint64_t)&v155 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v37 = MEMORY[0x1E0C80A78](v36);
  v183 = (unsigned __int8 *)&v155 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v41 = (char *)&v155 - v40;
  MEMORY[0x1E0C80A78](v39);
  v43 = (char *)&v155 - v42;
  v44 = *a1;
  v175 = a2;
  v45 = *a2;
  v179 = v21;
  v180 = v46;
  v181 = v47;
  if (v44 == 8)
  {
    if (v45 == 8)
    {
      v156 = v8;
      sub_1AD0D3D2C((uint64_t)a1, (uint64_t)&v155 - v42, type metadata accessor for IDSActivitySharingInvitation);
      v48 = (uint64_t)v175;
      sub_1AD0D3D2C((uint64_t)v175, (uint64_t)v41, type metadata accessor for IDSActivitySharingInvitation);
      goto LABEL_9;
    }
    goto LABEL_5;
  }
  if (v45 == 8)
  {
LABEL_5:
    sub_1AD0D3D2C((uint64_t)a1, (uint64_t)&v155 - v42, type metadata accessor for IDSActivitySharingInvitation);
    v48 = (uint64_t)v175;
    sub_1AD0D3D2C((uint64_t)v175, (uint64_t)v41, type metadata accessor for IDSActivitySharingInvitation);
LABEL_6:
    sub_1AD066230((uint64_t)v41, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230((uint64_t)v43, type metadata accessor for IDSActivitySharingInvitation);
LABEL_15:
    v61 = v177;
    v62 = v176;
    v64 = v182;
    v59 = (uint64_t)v183;
    sub_1AD0D3D2C((uint64_t)a1, (uint64_t)v183, type metadata accessor for IDSActivitySharingInvitation);
    v60 = v181;
    sub_1AD0D3D2C(v48, v181, type metadata accessor for IDSActivitySharingInvitation);
LABEL_16:
    sub_1AD066230(v60, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230(v59, type metadata accessor for IDSActivitySharingInvitation);
    v65 = v178;
LABEL_17:
    v66 = (uint64_t)v179;
    sub_1AD0D3D2C((uint64_t)a1, v64, type metadata accessor for IDSActivitySharingInvitation);
    v67 = v180;
    sub_1AD0D3D2C(v48, v180, type metadata accessor for IDSActivitySharingInvitation);
LABEL_18:
    sub_1AD066230(v67, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230(v64, type metadata accessor for IDSActivitySharingInvitation);
LABEL_19:
    sub_1AD0D3D2C((uint64_t)a1, v61, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD0D3D2C(v48, v62, type metadata accessor for IDSActivitySharingInvitation);
LABEL_20:
    sub_1AD066230(v62, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230(v61, type metadata accessor for IDSActivitySharingInvitation);
    v68 = v174;
LABEL_21:
    sub_1AD0D3D2C((uint64_t)a1, v68, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD0D3D2C(v48, v65, type metadata accessor for IDSActivitySharingInvitation);
    goto LABEL_22;
  }
  v156 = v8;
  sub_1AD0D3D2C((uint64_t)a1, (uint64_t)&v155 - v42, type metadata accessor for IDSActivitySharingInvitation);
  v49 = v24;
  v50 = a1;
  v51 = (uint64_t)v175;
  sub_1AD0D3D2C((uint64_t)v175, (uint64_t)v41, type metadata accessor for IDSActivitySharingInvitation);
  v52 = v44 == v45;
  v48 = v51;
  a1 = v50;
  v24 = v49;
  if (!v52)
    goto LABEL_6;
LABEL_9:
  v157 = v24;
  v53 = v173[5];
  v54 = (uint64_t)&v41[v53];
  v55 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_1ACFF64C0((uint64_t)&v43[v53], (uint64_t)v18, &qword_1EECD2418);
  sub_1ACFF64C0(v54, v55, &qword_1EECD2418);
  v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
  v57 = v172;
  if (v56((uint64_t)v18, 1, v172) == 1)
  {
    sub_1AD066230((uint64_t)v41, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230((uint64_t)v43, type metadata accessor for IDSActivitySharingInvitation);
    v58 = v56(v55, 1, v57);
    v24 = v157;
    if (v58 == 1)
    {
      sub_1AD009758((uint64_t)v18, &qword_1EECD2418);
      v59 = (uint64_t)v183;
      sub_1AD0D3D2C((uint64_t)a1, (uint64_t)v183, type metadata accessor for IDSActivitySharingInvitation);
      v60 = v181;
      sub_1AD0D3D2C(v48, v181, type metadata accessor for IDSActivitySharingInvitation);
      v61 = v177;
      v62 = v176;
      goto LABEL_28;
    }
    goto LABEL_14;
  }
  v63 = v170;
  sub_1ACFF64C0((uint64_t)v18, v170, &qword_1EECD2418);
  if (v56(v55, 1, v57) == 1)
  {
    sub_1AD066230((uint64_t)v41, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230((uint64_t)v43, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230(v63, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
    v24 = v157;
LABEL_14:
    sub_1AD009758((uint64_t)v18, &qword_1EECDC740);
    goto LABEL_15;
  }
  v71 = v165;
  sub_1AD2A5214(v55, (uint64_t)v165, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  v72 = sub_1AD4594C0(v63, v71);
  sub_1AD066230((uint64_t)v71, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD066230((uint64_t)v41, type metadata accessor for IDSActivitySharingInvitation);
  sub_1AD066230((uint64_t)v43, type metadata accessor for IDSActivitySharingInvitation);
  sub_1AD066230(v63, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteRequest);
  sub_1AD009758((uint64_t)v18, &qword_1EECD2418);
  v59 = (uint64_t)v183;
  sub_1AD0D3D2C((uint64_t)a1, (uint64_t)v183, type metadata accessor for IDSActivitySharingInvitation);
  v60 = v181;
  sub_1AD0D3D2C(v48, v181, type metadata accessor for IDSActivitySharingInvitation);
  v61 = v177;
  v62 = v176;
  v64 = v182;
  v24 = v157;
  if ((v72 & 1) == 0)
    goto LABEL_16;
LABEL_28:
  v73 = v173[6];
  v74 = v59 + v73;
  v75 = v60 + v73;
  v76 = v169;
  v77 = v169 + *(int *)(v166 + 48);
  sub_1ACFF64C0(v74, v169, &qword_1EECD2420);
  sub_1ACFF64C0(v75, v77, &qword_1EECD2420);
  v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
  v79 = v168;
  if (v78(v76, 1, v168) == 1)
  {
    sub_1AD066230(v60, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230((uint64_t)v183, type metadata accessor for IDSActivitySharingInvitation);
    v80 = v78(v77, 1, v79);
    v65 = v178;
    if (v80 == 1)
    {
      sub_1AD009758(v76, &qword_1EECD2420);
      v64 = v182;
      sub_1AD0D3D2C((uint64_t)a1, v182, type metadata accessor for IDSActivitySharingInvitation);
      v67 = v180;
      sub_1AD0D3D2C(v48, v180, type metadata accessor for IDSActivitySharingInvitation);
      v66 = (uint64_t)v179;
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  v81 = v164;
  sub_1ACFF64C0(v76, v164, &qword_1EECD2420);
  if (v78(v77, 1, v79) == 1)
  {
    sub_1AD066230(v181, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230((uint64_t)v183, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230(v81, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
    v65 = v178;
LABEL_33:
    sub_1AD009758(v76, &qword_1EECDC738);
    v64 = v182;
    goto LABEL_17;
  }
  v82 = v160;
  sub_1AD2A5214(v77, v160, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  v83 = sub_1AD45A11C(v81, v82);
  sub_1AD066230(v82, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD066230(v181, type metadata accessor for IDSActivitySharingInvitation);
  sub_1AD066230((uint64_t)v183, type metadata accessor for IDSActivitySharingInvitation);
  sub_1AD066230(v81, type metadata accessor for IDSActivitySharingInvitation.SecureCloudInviteResponse);
  sub_1AD009758(v76, &qword_1EECD2420);
  v64 = v182;
  sub_1AD0D3D2C((uint64_t)a1, v182, type metadata accessor for IDSActivitySharingInvitation);
  v67 = v180;
  sub_1AD0D3D2C(v48, v180, type metadata accessor for IDSActivitySharingInvitation);
  v65 = v178;
  v66 = (uint64_t)v179;
  if ((v83 & 1) == 0)
    goto LABEL_18;
LABEL_35:
  v84 = v173[7];
  v85 = v64 + v84;
  v86 = v67 + v84;
  v87 = (uint64_t)v156;
  v88 = (uint64_t)&v156[*(int *)(v161 + 48)];
  sub_1ACFF64C0(v85, (uint64_t)v156, &qword_1EECD2428);
  v183 = (unsigned __int8 *)v88;
  sub_1ACFF64C0(v86, v88, &qword_1EECD2428);
  v89 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v162 + 48);
  v90 = v163;
  if (v89((unsigned __int8 *)v87, 1, v163) == 1)
  {
    v156 = (char *)v87;
    sub_1AD066230(v67, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230(v182, type metadata accessor for IDSActivitySharingInvitation);
    v91 = v89(v183, 1, v90);
    v24 = v157;
    if (v91 == 1)
    {
      sub_1AD009758((uint64_t)v156, &qword_1EECD2428);
      sub_1AD0D3D2C((uint64_t)a1, v61, type metadata accessor for IDSActivitySharingInvitation);
      sub_1AD0D3D2C(v48, v62, type metadata accessor for IDSActivitySharingInvitation);
      goto LABEL_42;
    }
    goto LABEL_40;
  }
  v92 = v159;
  sub_1ACFF64C0(v87, v159, &qword_1EECD2428);
  if (v89(v183, 1, v90) == 1)
  {
    v156 = (char *)v87;
    sub_1AD066230(v180, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230(v182, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230(v92, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
    v24 = v157;
LABEL_40:
    sub_1AD009758((uint64_t)v156, &qword_1EECDC730);
    goto LABEL_19;
  }
  v93 = v158;
  sub_1AD2A5214((uint64_t)v183, v158, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  LODWORD(v183) = sub_1AD45AEBC(v92, v93);
  sub_1AD066230(v93, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD066230(v180, type metadata accessor for IDSActivitySharingInvitation);
  sub_1AD066230(v182, type metadata accessor for IDSActivitySharingInvitation);
  sub_1AD066230(v92, type metadata accessor for IDSActivitySharingInvitation.SecureCloudUpgradeMessage);
  sub_1AD009758(v87, &qword_1EECD2428);
  sub_1AD0D3D2C((uint64_t)a1, v61, type metadata accessor for IDSActivitySharingInvitation);
  sub_1AD0D3D2C(v48, v62, type metadata accessor for IDSActivitySharingInvitation);
  v24 = v157;
  if ((v183 & 1) == 0)
    goto LABEL_20;
LABEL_42:
  v183 = a1;
  v94 = v173[8];
  v95 = *(_QWORD *)(v61 + v94);
  v182 = *(_QWORD *)(v61 + v94 + 8);
  v97 = *(_QWORD *)(v61 + v94 + 16);
  v96 = *(_QWORD *)(v61 + v94 + 24);
  v98 = (uint64_t *)(v62 + v94);
  v100 = *v98;
  v99 = v98[1];
  v101 = v98[2];
  v102 = v98[3];
  if (!v95)
  {
    v105 = v61;
    v181 = 0;
    v106 = v101;
    sub_1AD45DF64(v100, v99, v101, v102);
    sub_1AD066230(v62, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230(v105, type metadata accessor for IDSActivitySharingInvitation);
    v107 = v182;
    if (!v100)
    {
      sub_1AD2889F0(0, v182, v97, v96);
      v68 = v174;
      sub_1AD0D3D2C((uint64_t)v183, v174, type metadata accessor for IDSActivitySharingInvitation);
      v65 = v178;
      sub_1AD0D3D2C(v48, v178, type metadata accessor for IDSActivitySharingInvitation);
LABEL_57:
      v109 = v173[9];
      v110 = (_QWORD *)(v68 + v109);
      v111 = v68;
      v112 = *(_QWORD *)(v68 + v109);
      v113 = *(_QWORD *)(v68 + v109 + 8);
      v115 = v110[2];
      v114 = v110[3];
      v116 = v110[4];
      v182 = v110[5];
      v118 = v110[6];
      v117 = v110[7];
      v119 = (uint64_t *)(v65 + v109);
      v121 = *v119;
      v120 = v119[1];
      v123 = v119[2];
      v122 = v119[3];
      v125 = v119[4];
      v124 = v119[5];
      v127 = v119[6];
      v126 = v119[7];
      v181 = v112;
      if (v112)
      {
        v192 = v112;
        v193 = v113;
        v194 = v115;
        v195 = v114;
        v196 = v116;
        v197 = v182;
        v198 = v118;
        v199 = v117;
        if (v121)
        {
          v184 = v121;
          v185 = v120;
          v186 = v123;
          v187 = v122;
          v188 = v125;
          v189 = v124;
          v190 = v127;
          v191 = v126;
          LODWORD(v180) = sub_1AD4587F4(&v192, &v184);
          swift_retain();
          sub_1AD003E48(v115, v114);
          v128 = v182;
          swift_retain();
          sub_1AD003E48(v118, v117);
          swift_retain();
          sub_1AD003E48(v115, v114);
          swift_retain();
          sub_1AD003E48(v118, v117);
          sub_1AD066230(v178, type metadata accessor for IDSActivitySharingInvitation);
          sub_1AD066230(v174, type metadata accessor for IDSActivitySharingInvitation);
          v129 = v194;
          v177 = v116;
          v130 = v195;
          v131 = v198;
          v178 = v118;
          v132 = v117;
          v133 = v199;
          swift_release();
          sub_1AD003F24(v129, v130);
          swift_release();
          sub_1AD003F24(v131, v133);
          sub_1AD2918B8(v181, v113, v115, v114, v177, v128, v178, v132);
          v24 = v157;
          sub_1AD0D3D2C((uint64_t)v183, (uint64_t)v157, type metadata accessor for IDSActivitySharingInvitation);
          v66 = (uint64_t)v179;
          sub_1AD0D3D2C((uint64_t)v175, (uint64_t)v179, type metadata accessor for IDSActivitySharingInvitation);
          if ((v180 & 1) != 0)
            goto LABEL_63;
LABEL_24:
          sub_1AD066230(v66, type metadata accessor for IDSActivitySharingInvitation);
          sub_1AD066230((uint64_t)v24, type metadata accessor for IDSActivitySharingInvitation);
          goto LABEL_25;
        }
        v173 = 0;
        v180 = v126;
        v169 = v127;
        v177 = v124;
        v176 = v125;
        v172 = v122;
        v171 = v123;
        v170 = v120;
        swift_retain();
        sub_1AD003E48(v115, v114);
        swift_retain();
        sub_1AD003E48(v118, v117);
        swift_retain();
        sub_1AD003E48(v115, v114);
        swift_retain();
        sub_1AD003E48(v118, v117);
        sub_1AD066230(v178, type metadata accessor for IDSActivitySharingInvitation);
        sub_1AD066230(v174, type metadata accessor for IDSActivitySharingInvitation);
        swift_release();
        v127 = v169;
        sub_1AD003F24(v115, v114);
        swift_release();
        sub_1AD003F24(v118, v117);
        v121 = (uint64_t)v173;
      }
      else
      {
        v170 = v120;
        v171 = v123;
        v172 = v122;
        v176 = v125;
        v177 = v124;
        v180 = v126;
        sub_1AD291C00(v121, v120, v123, v122, v125, v124, v127, v126);
        sub_1AD066230(v65, type metadata accessor for IDSActivitySharingInvitation);
        sub_1AD066230(v111, type metadata accessor for IDSActivitySharingInvitation);
        if (!v121)
        {
          sub_1AD2918B8(0, v113, v115, v114, v116, v182, v118, v117);
          v24 = v157;
          sub_1AD0D3D2C((uint64_t)v183, (uint64_t)v157, type metadata accessor for IDSActivitySharingInvitation);
          v66 = (uint64_t)v179;
          sub_1AD0D3D2C((uint64_t)v175, (uint64_t)v179, type metadata accessor for IDSActivitySharingInvitation);
LABEL_63:
          v134 = v173[10];
          v136 = *(_QWORD *)&v24[v134];
          v135 = *(_QWORD *)&v24[v134 + 8];
          v137 = *(_QWORD *)&v24[v134 + 16];
          v138 = *(_QWORD *)&v24[v134 + 24];
          v140 = *(_QWORD *)&v24[v134 + 32];
          v139 = *(_QWORD *)&v24[v134 + 40];
          v141 = (uint64_t *)(v66 + v134);
          v142 = v66;
          v144 = *v141;
          v143 = v141[1];
          v146 = v141[2];
          v145 = v141[3];
          v148 = v141[4];
          v147 = v141[5];
          if (v137)
          {
            v192 = v136;
            v193 = v135;
            v194 = v137;
            v195 = v138;
            v196 = v140;
            v197 = v139;
            v149 = v135;
            v150 = v136;
            if (v146)
            {
              v184 = v144;
              LOBYTE(v185) = v143 & 1;
              v186 = v146;
              v187 = v145;
              v188 = v148;
              v189 = v147;
              v69 = sub_1AD45BB68((uint64_t)&v192, (uint64_t)&v184);
              swift_retain();
              sub_1AD003E48(v140, v139);
              swift_retain();
              sub_1AD003E48(v140, v139);
              sub_1AD066230((uint64_t)v179, type metadata accessor for IDSActivitySharingInvitation);
              sub_1AD066230((uint64_t)v157, type metadata accessor for IDSActivitySharingInvitation);
              v151 = v196;
              v152 = v197;
              swift_release();
              sub_1AD003F24(v151, v152);
              sub_1AD45DEA0(v150, v149, v137, v138, v140, v139);
              return v69 & 1;
            }
            v181 = v137;
            v182 = v136;
            v183 = (unsigned __int8 *)v135;
            v154 = v147;
            v153 = v143;
            swift_retain();
            sub_1AD003E48(v140, v139);
            swift_retain();
            sub_1AD003E48(v140, v139);
            sub_1AD066230((uint64_t)v179, type metadata accessor for IDSActivitySharingInvitation);
            sub_1AD066230((uint64_t)v157, type metadata accessor for IDSActivitySharingInvitation);
            swift_release();
            sub_1AD003F24(v140, v139);
          }
          else
          {
            v181 = 0;
            v182 = v136;
            v183 = (unsigned __int8 *)v135;
            v153 = v143;
            v154 = v147;
            sub_1AD45DE68(v144, v143, v146, v145, v148, v147);
            sub_1AD066230(v142, type metadata accessor for IDSActivitySharingInvitation);
            sub_1AD066230((uint64_t)v157, type metadata accessor for IDSActivitySharingInvitation);
            if (!v146)
            {
              sub_1AD45DEA0(v182, (uint64_t)v183, 0, v138, v140, v139);
              v69 = 1;
              return v69 & 1;
            }
          }
          sub_1AD45DEA0(v182, (uint64_t)v183, v181, v138, v140, v139);
          sub_1AD45DEA0(v144, v153, v146, v145, v148, v154);
LABEL_25:
          v69 = 0;
          return v69 & 1;
        }
      }
      v192 = v181;
      v193 = v113;
      v194 = v115;
      v195 = v114;
      v196 = v116;
      v197 = v182;
      v198 = v118;
      v199 = v117;
      v200 = v121;
      v201 = v170;
      v202 = v171;
      v203 = v172;
      v204 = v176;
      v205 = v177;
      v206 = v127;
      v207 = v180;
      sub_1AD45DED8(&v192);
      v48 = (uint64_t)v175;
      a1 = v183;
      v24 = v157;
      v66 = (uint64_t)v179;
LABEL_23:
      sub_1AD0D3D2C((uint64_t)a1, (uint64_t)v24, type metadata accessor for IDSActivitySharingInvitation);
      sub_1AD0D3D2C(v48, v66, type metadata accessor for IDSActivitySharingInvitation);
      goto LABEL_24;
    }
    goto LABEL_54;
  }
  if (!v100)
  {
    v181 = v95;
    v107 = v182;
    v106 = v101;
    swift_retain();
    sub_1AD003E48(v97, v96);
    swift_retain();
    sub_1AD003E48(v97, v96);
    sub_1AD066230(v176, type metadata accessor for IDSActivitySharingInvitation);
    sub_1AD066230(v177, type metadata accessor for IDSActivitySharingInvitation);
    swift_release();
    sub_1AD003F24(v97, v96);
LABEL_54:
    sub_1AD2889F0(v181, v107, v97, v96);
    sub_1AD2889F0(v100, v99, v106, v102);
    a1 = v183;
    v24 = v157;
    v66 = (uint64_t)v179;
    v68 = v174;
    v65 = v178;
    goto LABEL_21;
  }
  if (v96 != 1)
  {
    v103 = v176;
    v68 = v174;
    if (v102 != 1)
    {
      v104 = (v96 | v102) == 0;
      if (v96 && v102)
      {
        if (v97 == v101 && v96 == v102)
          v104 = 1;
        else
          v104 = sub_1AD63C2A8();
      }
      v108 = v182;
      swift_retain();
      sub_1AD003E48(v97, v96);
      swift_retain();
      sub_1AD003E48(v97, v96);
      sub_1AD066230(v103, type metadata accessor for IDSActivitySharingInvitation);
      sub_1AD066230(v177, type metadata accessor for IDSActivitySharingInvitation);
      swift_release();
      sub_1AD003F24(v97, v96);
      sub_1AD2889F0(v95, v108, v97, v96);
      a1 = v183;
      sub_1AD0D3D2C((uint64_t)v183, v68, type metadata accessor for IDSActivitySharingInvitation);
      v65 = v178;
      sub_1AD0D3D2C(v48, v178, type metadata accessor for IDSActivitySharingInvitation);
      v24 = v157;
      v66 = (uint64_t)v179;
      if ((v104 & 1) != 0)
        goto LABEL_57;
LABEL_22:
      sub_1AD066230(v65, type metadata accessor for IDSActivitySharingInvitation);
      sub_1AD066230(v68, type metadata accessor for IDSActivitySharingInvitation);
      goto LABEL_23;
    }
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

unint64_t sub_1AD45D468()
{
  unint64_t result;

  result = qword_1EECDC708;
  if (!qword_1EECDC708)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD685E88, &type metadata for ActivitySharingInvitationError);
    atomic_store(result, (unint64_t *)&qword_1EECDC708);
  }
  return result;
}

unint64_t sub_1AD45D4B0()
{
  unint64_t result;

  result = qword_1EECDC710;
  if (!qword_1EECDC710)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD685F68, &type metadata for ActivitySharingRawTransportItem);
    atomic_store(result, (unint64_t *)&qword_1EECDC710);
  }
  return result;
}

unint64_t sub_1AD45D4F8()
{
  unint64_t result;

  result = qword_1EECDC718;
  if (!qword_1EECDC718)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD686008, &type metadata for ActivitySharingRawSeymourMediaType);
    atomic_store(result, (unint64_t *)&qword_1EECDC718);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivitySharingInvitationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD45D588 + 4 * byte_1AD685E6E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD45D5BC + 4 * byte_1AD685E69[v4]))();
}

uint64_t sub_1AD45D5BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD45D5C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD45D5CCLL);
  return result;
}

uint64_t sub_1AD45D5D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD45D5E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD45D5E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD45D5EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingInvitationError()
{
  return &type metadata for ActivitySharingInvitationError;
}

uint64_t storeEnumTagSinglePayload for ActivitySharingRawTransportItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AD45D654 + 4 * byte_1AD685E78[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AD45D688 + 4 * byte_1AD685E73[v4]))();
}

uint64_t sub_1AD45D688(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD45D690(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD45D698);
  return result;
}

uint64_t sub_1AD45D6A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD45D6ACLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AD45D6B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD45D6B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingRawTransportItem()
{
  return &type metadata for ActivitySharingRawTransportItem;
}

uint64_t storeEnumTagSinglePayload for ActivitySharingRawSeymourMediaType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD45D720 + 4 * byte_1AD685E82[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD45D754 + 4 * byte_1AD685E7D[v4]))();
}

uint64_t sub_1AD45D754(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD45D75C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD45D764);
  return result;
}

uint64_t sub_1AD45D770(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD45D778);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD45D77C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD45D784(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingRawSeymourMediaType()
{
  return &type metadata for ActivitySharingRawSeymourMediaType;
}

uint64_t *sub_1AD45D7A0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  sub_1AD2917C0(*a1, a1[1], a1[2], a1[3]);
  sub_1AD2917C0(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_1AD45D830(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1AD45D848(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 360);
  v12 = *(_QWORD *)(a1 + 352);
  v3 = *(_QWORD *)(a1 + 368);
  v4 = *(_QWORD *)(a1 + 376);
  v5 = *(_QWORD *)(a1 + 384);
  v6 = *(_QWORD *)(a1 + 392);
  v7 = *(_QWORD *)(a1 + 400);
  v8 = *(_QWORD *)(a1 + 408);
  v10 = *(_OWORD *)(a1 + 432);
  v11 = *(_OWORD *)(a1 + 416);
  sub_1AD291754(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  sub_1AD291754(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10, *((unint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_1AD45DA38(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;

  v10 = *(_BYTE *)(a1 + 344);
  v8 = *(_OWORD *)(a1 + 304);
  v9 = *(_OWORD *)(a1 + 320);
  v6 = *(_OWORD *)(a1 + 272);
  v7 = *(_OWORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    *(_QWORD *)(a1 + 336),
    v10);
  return a1;
}

uint64_t sub_1AD45DAD4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 352);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1AD45DAEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v2 = *(_QWORD *)(a1 + 392);
  v36 = *(_QWORD *)(a1 + 384);
  v3 = *(_QWORD *)(a1 + 400);
  v4 = *(_QWORD *)(a1 + 408);
  v5 = *(_QWORD *)(a1 + 416);
  v6 = *(_QWORD *)(a1 + 424);
  v7 = *(_QWORD *)(a1 + 432);
  v8 = *(_QWORD *)(a1 + 440);
  v34 = *(_OWORD *)(a1 + 464);
  v35 = *(_OWORD *)(a1 + 448);
  v32 = *(_OWORD *)(a1 + 496);
  v33 = *(_OWORD *)(a1 + 480);
  v30 = *(_OWORD *)(a1 + 528);
  v31 = *(_OWORD *)(a1 + 512);
  v28 = *(_OWORD *)(a1 + 560);
  v29 = *(_OWORD *)(a1 + 544);
  v26 = *(_OWORD *)(a1 + 592);
  v27 = *(_OWORD *)(a1 + 576);
  v24 = *(_OWORD *)(a1 + 624);
  v25 = *(_OWORD *)(a1 + 608);
  v22 = *(_OWORD *)(a1 + 656);
  v23 = *(_OWORD *)(a1 + 640);
  v20 = *(_OWORD *)(a1 + 688);
  v21 = *(_OWORD *)(a1 + 672);
  v18 = *(_OWORD *)(a1 + 720);
  v19 = *(_OWORD *)(a1 + 704);
  v17 = *(_OWORD *)(a1 + 736);
  v16 = *(_OWORD *)(a1 + 336);
  v14 = *(_OWORD *)(a1 + 304);
  v15 = *(_OWORD *)(a1 + 320);
  v12 = *(_OWORD *)(a1 + 272);
  v13 = *(_OWORD *)(a1 + 288);
  v10 = *(_OWORD *)(a1 + 240);
  v11 = *(_OWORD *)(a1 + 256);
  sub_1AD2915BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    *(_QWORD *)(a1 + 352));
  sub_1AD2915BC(v36, v2, v3, v4, v5, v6, v7, v8, v35, *((uint64_t *)&v35 + 1), v34, *((unint64_t *)&v34 + 1), v33, *((uint64_t *)&v33 + 1), v32, *((uint64_t *)&v32 + 1), v31, *((uint64_t *)&v31 + 1), v30,
    *((uint64_t *)&v30 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17);
  return a1;
}

uint64_t sub_1AD45DD00(uint64_t a1)
{
  sub_1AD291B5C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD45DDB4(uint64_t a1)
{
  sub_1AD291754(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD45DE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a3)
  {
    swift_retain();
    return sub_1AD003E48(a5, a6);
  }
  return result;
}

uint64_t sub_1AD45DEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a3)
  {
    swift_release();
    return sub_1AD003F24(a5, a6);
  }
  return result;
}

uint64_t *sub_1AD45DED8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  v9 = a1[15];
  sub_1AD2918B8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  sub_1AD2918B8(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1AD45DF64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_retain();
    return sub_1AD003E48(a3, a4);
  }
  return result;
}

uint64_t sub_1AD45DF9C@<X0>(void *__src@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v7[288];

  memcpy(v7, __src, 0x119uLL);
  result = sub_1AD455CD0((uint64_t)v7);
  if (v3)
    *a2 = v3;
  else
    *a3 = result;
  return result;
}

id sub_1AD45E00C@<X0>(_OWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  id result;
  _OWORD v12[10];

  v6 = a1[7];
  v12[6] = a1[6];
  v12[7] = v6;
  v7 = a1[9];
  v12[8] = a1[8];
  v12[9] = v7;
  v8 = a1[3];
  v12[2] = a1[2];
  v12[3] = v8;
  v9 = a1[5];
  v12[4] = a1[4];
  v12[5] = v9;
  v10 = a1[1];
  v12[0] = *a1;
  v12[1] = v10;
  result = sub_1AD456270((uint64_t)v12);
  if (v3)
    *a2 = v3;
  else
    *a3 = result;
  return result;
}

uint64_t sub_1AD45E084(uint64_t a1)
{
  sub_1AD291BC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD45E0DC(uint64_t a1)
{
  sub_1AD2917C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD45E134(uint64_t a1)
{
  sub_1AD291BC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

double sub_1AD45E1B8(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[21] = 0u;
  a1[22] = 0u;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  *(_OWORD *)((char *)a1 + 361) = 0u;
  return result;
}

double sub_1AD45E1F8(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  *(_OWORD *)((char *)a1 + 329) = 0u;
  return result;
}

void sub_1AD45E234(void **a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1AD4524F4(*a1, a3);
  if (v3)
    *a2 = v3;
}

void sub_1AD45E268(void **a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1AD451F40(*a1, a3);
  if (v3)
    *a2 = v3;
}

uint64_t sub_1AD45E29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for MessagesAppBalloon() + 48);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t type metadata accessor for MessagesAppBalloon()
{
  uint64_t result;

  result = qword_1ED2E1FF8;
  if (!qword_1ED2E1FF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD45E364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(v1, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a1 + 192) = v23;
    *(_OWORD *)(a1 + 208) = v4;
    *(_OWORD *)(a1 + 224) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a1 + 128) = v19;
    *(_OWORD *)(a1 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a1 + 160) = v21;
    *(_OWORD *)(a1 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a1 + 64) = v15;
    *(_OWORD *)(a1 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD45E3F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MessagesAppBalloon() + 48));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 sub_1AD45E440(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for MessagesAppBalloon() + 48));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

_QWORD *sub_1AD45E4A4(_QWORD *a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[15];
  uint64_t v12;

  sub_1AD0CFB8C((uint64_t)a1, (uint64_t)v11);
  sub_1AD009758(v1, &qword_1ED2E2680);
  v3 = v11[13];
  *(_OWORD *)(v1 + 192) = v11[12];
  *(_OWORD *)(v1 + 208) = v3;
  *(_OWORD *)(v1 + 224) = v11[14];
  *(_QWORD *)(v1 + 240) = v12;
  v4 = v11[9];
  *(_OWORD *)(v1 + 128) = v11[8];
  *(_OWORD *)(v1 + 144) = v4;
  v5 = v11[11];
  *(_OWORD *)(v1 + 160) = v11[10];
  *(_OWORD *)(v1 + 176) = v5;
  v6 = v11[5];
  *(_OWORD *)(v1 + 64) = v11[4];
  *(_OWORD *)(v1 + 80) = v6;
  v7 = v11[7];
  *(_OWORD *)(v1 + 96) = v11[6];
  *(_OWORD *)(v1 + 112) = v7;
  v8 = v11[1];
  *(_OWORD *)v1 = v11[0];
  *(_OWORD *)(v1 + 16) = v8;
  v9 = v11[3];
  *(_OWORD *)(v1 + 32) = v11[2];
  *(_OWORD *)(v1 + 48) = v9;
  return sub_1AD046A30(a1);
}

uint64_t sub_1AD45E530(uint64_t a1)
{
  void *v1;
  _BYTE __src[440];

  sub_1ACFF64C0(a1, (uint64_t)__src, &qword_1ED2E2FE8);
  sub_1AD009758((uint64_t)v1, &qword_1ED2E2FE8);
  memcpy(v1, __src, 0x1B8uLL);
  return sub_1AD009758(a1, &qword_1ED2E2FE8);
}

uint64_t sub_1AD45E598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, &qword_1ED2E2FE8);
}

uint64_t sub_1AD45E5BC()
{
  return 0x69742D6567616D69;
}

uint64_t sub_1AD45E5DC()
{
  return 0x75732D6567616D69;
}

uint64_t sub_1AD45E600()
{
  return 0x6E6F6974706163;
}

uint64_t sub_1AD45E618()
{
  return 0x6974706163627573;
}

unint64_t sub_1AD45E634()
{
  return 0xD000000000000014;
}

unint64_t sub_1AD45E650()
{
  return 0xD000000000000013;
}

uint64_t sub_1AD45E66C()
{
  return 0x74786574646CLL;
}

unint64_t sub_1AD45E680()
{
  return 0xD000000000000011;
}

uint64_t sub_1AD45E69C()
{
  return 0x6F666E4972657375;
}

uint64_t sub_1AD45E6B4()
{
  return 0x6F79614C6576696CLL;
}

uint64_t sub_1AD45E6D8()
{
  return 0x6C4374756F79616CLL;
}

uint64_t sub_1AD45E6F8()
{
  return 5001813;
}

uint64_t sub_1AD45E708()
{
  return 0x656C694661746164;
}

unint64_t sub_1AD45E728()
{
  return 0xD000000000000012;
}

uint64_t sub_1AD45E744()
{
  return 26977;
}

uint64_t sub_1AD45E750()
{
  return 28257;
}

uint64_t sub_1AD45E75C()
{
  return 0x6469707061;
}

uint64_t sub_1AD45E770()
{
  return 0x7478657473;
}

uint64_t sub_1AD45E784()
{
  return 29793;
}

uint64_t sub_1AD45E790()
{
  return 0x697463612D706174;
}

uint64_t sub_1AD45E7AC()
{
  return 1635017060;
}

unint64_t sub_1AD45E7BC()
{
  return 0xD000000000000043;
}

unint64_t sub_1AD45E7D8()
{
  return 0xD000000000000031;
}

void sub_1AD45E7F4()
{
  qword_1EECDC748 = (uint64_t)&unk_1E5CC0698;
}

uint64_t sub_1AD45E808()
{
  if (qword_1EECD1558 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD45E848()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45E874(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD45E8A8())()
{
  return nullsub_1;
}

uint64_t sub_1AD45E8B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45E8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD45E918())()
{
  return nullsub_1;
}

uint64_t sub_1AD45E928()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45E954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1AD45E988())()
{
  return nullsub_1;
}

uint64_t sub_1AD45E998()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45E9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*sub_1AD45E9F8())()
{
  return nullsub_1;
}

uint64_t sub_1AD45EA08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45EA34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*sub_1AD45EA68())()
{
  return nullsub_1;
}

uint64_t sub_1AD45EA78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45EAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*sub_1AD45EAD8())()
{
  return nullsub_1;
}

uint64_t sub_1AD45EAE8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t sub_1AD45EAF4(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_BYTE *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD45EB04())()
{
  return nullsub_1;
}

uint64_t sub_1AD45EB14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v2 = v1;
  v4 = (char *)malloc(0x1F8uLL);
  *a1 = v4;
  *((_QWORD *)v4 + 62) = v2;
  result = sub_1ACFF64C0(v2, (uint64_t)(v4 + 248), &qword_1ED2E2680);
  if (*((_QWORD *)v4 + 34))
  {
    v6 = *(_OWORD *)(v4 + 456);
    *((_OWORD *)v4 + 12) = *(_OWORD *)(v4 + 440);
    *((_OWORD *)v4 + 13) = v6;
    *((_OWORD *)v4 + 14) = *(_OWORD *)(v4 + 472);
    *((_QWORD *)v4 + 30) = *((_QWORD *)v4 + 61);
    v7 = *(_OWORD *)(v4 + 392);
    *((_OWORD *)v4 + 8) = *(_OWORD *)(v4 + 376);
    *((_OWORD *)v4 + 9) = v7;
    v8 = *(_OWORD *)(v4 + 424);
    *((_OWORD *)v4 + 10) = *(_OWORD *)(v4 + 408);
    *((_OWORD *)v4 + 11) = v8;
    v9 = *(_OWORD *)(v4 + 328);
    *((_OWORD *)v4 + 4) = *(_OWORD *)(v4 + 312);
    *((_OWORD *)v4 + 5) = v9;
    v10 = *(_OWORD *)(v4 + 360);
    *((_OWORD *)v4 + 6) = *(_OWORD *)(v4 + 344);
    *((_OWORD *)v4 + 7) = v10;
    v11 = *(_OWORD *)(v4 + 264);
    *(_OWORD *)v4 = *(_OWORD *)(v4 + 248);
    *((_OWORD *)v4 + 1) = v11;
    v12 = *(_OWORD *)(v4 + 296);
    result = (uint64_t)sub_1AD146614;
    *((_OWORD *)v4 + 2) = *(_OWORD *)(v4 + 280);
    *((_OWORD *)v4 + 3) = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void (*sub_1AD45EBC8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x530uLL);
  *a1 = v3;
  v3[165] = v1;
  sub_1ACFF64C0(v1, (uint64_t)v3, &qword_1ED2E2FE8);
  return sub_1AD146874;
}

uint64_t sub_1AD45EC20()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45EC4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD45EC80())()
{
  return nullsub_1;
}

uint64_t sub_1AD45EC90()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45ECBC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD45ECF0())()
{
  return nullsub_1;
}

uint64_t sub_1AD45ED00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessagesAppBalloon();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 20), a1, &qword_1ED2E7140);
}

uint64_t sub_1AD45ED3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessagesAppBalloon();
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 20), &qword_1ED2E7140);
}

uint64_t (*sub_1AD45ED78())(_QWORD)
{
  type metadata accessor for MessagesAppBalloon();
  return nullsub_1;
}

uint64_t sub_1AD45EDA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessagesAppBalloon() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45EDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MessagesAppBalloon() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1AD45EE20())(_QWORD)
{
  type metadata accessor for MessagesAppBalloon();
  return nullsub_1;
}

uint64_t sub_1AD45EE48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessagesAppBalloon();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 28), a1, &qword_1ED2E1A40);
}

uint64_t sub_1AD45EE84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessagesAppBalloon();
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 28), &qword_1ED2E1A40);
}

uint64_t (*sub_1AD45EEC0())(_QWORD)
{
  type metadata accessor for MessagesAppBalloon();
  return nullsub_1;
}

uint64_t sub_1AD45EEE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v1 + *(int *)(type metadata accessor for MessagesAppBalloon() + 32);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_QWORD *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v15 = *(_QWORD *)(v3 + 88);
  v16 = *(_QWORD *)(v3 + 96);
  LOBYTE(v3) = *(_BYTE *)(v3 + 104);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_BYTE *)(a1 + 104) = v3;
  return sub_1AD45EF70(v4, v5);
}

uint64_t sub_1AD45EF70(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 sub_1AD45EFE4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v10 = a1[1];
  v11 = *a1;
  v9 = a1[2];
  v7 = a1[4];
  v8 = a1[3];
  v6 = (__n128)a1[5];
  v2 = *((_QWORD *)a1 + 12);
  v3 = *((_BYTE *)a1 + 104);
  v4 = v1 + *(int *)(type metadata accessor for MessagesAppBalloon() + 32);
  sub_1AD281F18(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_OWORD *)v4 = v11;
  *(_OWORD *)(v4 + 16) = v10;
  *(_OWORD *)(v4 + 32) = v9;
  *(_OWORD *)(v4 + 48) = v8;
  result = v6;
  *(_OWORD *)(v4 + 64) = v7;
  *(__n128 *)(v4 + 80) = v6;
  *(_QWORD *)(v4 + 96) = v2;
  *(_BYTE *)(v4 + 104) = v3;
  return result;
}

uint64_t (*sub_1AD45F0A4())(_QWORD)
{
  type metadata accessor for MessagesAppBalloon();
  return nullsub_1;
}

uint64_t sub_1AD45F0CC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessagesAppBalloon() + 36));
}

uint64_t sub_1AD45F0F4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MessagesAppBalloon();
  v6 = v2 + *(int *)(result + 36);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD45F138())(_QWORD)
{
  type metadata accessor for MessagesAppBalloon();
  return nullsub_1;
}

uint64_t sub_1AD45F160()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessagesAppBalloon() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45F19C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MessagesAppBalloon() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1AD45F1E0())(_QWORD)
{
  type metadata accessor for MessagesAppBalloon();
  return nullsub_1;
}

uint64_t sub_1AD45F208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessagesAppBalloon();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 44), a1, &qword_1EECD1D10);
}

uint64_t sub_1AD45F244(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessagesAppBalloon();
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 44), &qword_1EECD1D10);
}

uint64_t (*sub_1AD45F280())(_QWORD)
{
  type metadata accessor for MessagesAppBalloon();
  return nullsub_1;
}

uint64_t sub_1AD45F2A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for MessagesAppBalloon() + 48);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD45F330(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for MessagesAppBalloon();
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD45F37C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MessagesAppBalloon();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD45F3C0(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for MessagesAppBalloon() + 48);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD012C64;
  }
  return result;
}

uint64_t sub_1AD45F460@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for MessagesAppBalloon() + 48));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD45F4B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for MessagesAppBalloon() + 48));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD45F538(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for MessagesAppBalloon() + 48);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD012ED0;
}

uint64_t sub_1AD45F5B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MessagesAppBalloon() + 52));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1AD003E48(v4, v5);
}

uint64_t sub_1AD45F5E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MessagesAppBalloon() + 52));
  result = sub_1AD003F24(*v4, v4[1]);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*sub_1AD45F624())(_QWORD)
{
  type metadata accessor for MessagesAppBalloon();
  return nullsub_1;
}

uint64_t sub_1AD45F64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MessagesAppBalloon() + 56);
  v2 = *(_QWORD *)v1;
  sub_1AD00408C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1AD45F68C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for MessagesAppBalloon() + 56);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD45F6D0())(_QWORD)
{
  type metadata accessor for MessagesAppBalloon();
  return nullsub_1;
}

uint64_t sub_1AD45F6F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MessagesAppBalloon() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD45F734(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MessagesAppBalloon() + 60));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1AD45F778())(_QWORD)
{
  type metadata accessor for MessagesAppBalloon();
  return nullsub_1;
}

uint64_t sub_1AD45F7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28A3BC, (uint64_t (*)(void))sub_1AD28A504);
}

uint64_t sub_1AD45F7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28A400, (uint64_t (*)(void))sub_1AD28A548);
}

uint64_t sub_1AD45F7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28A444, (uint64_t (*)(void))sub_1AD28A58C);
}

uint64_t sub_1AD45F7DC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD45F828(&qword_1EECD72B0, (uint64_t)&unk_1AD651358);
  result = sub_1AD45F828(&qword_1EECD7288, (uint64_t)&unk_1AD651380);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD45F828(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MessagesAppBalloon();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD45F868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(a1, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a2 + 192) = v23;
    *(_OWORD *)(a2 + 208) = v4;
    *(_OWORD *)(a2 + 224) = v25;
    *(_QWORD *)(a2 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a2 + 128) = v19;
    *(_OWORD *)(a2 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a2 + 160) = v21;
    *(_OWORD *)(a2 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD45F910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACFF64C0(a1, a2, &qword_1ED2E2FE8);
}

_QWORD *sub_1AD45F944(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  uint64_t v95;
  _OWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  int *v144;
  _QWORD *v145;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1AD63B084();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (_QWORD *)((char *)v4 + v16);
    v19 = (_QWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (char *)v4 + v17;
    v22 = (char *)a2 + v17;
    v23 = sub_1AD63AF28();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v27 = a3[8];
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v30 = *((_QWORD *)v29 + 1);
    if (v30 == 1)
    {
      v31 = *((_OWORD *)v29 + 5);
      *((_OWORD *)v28 + 4) = *((_OWORD *)v29 + 4);
      *((_OWORD *)v28 + 5) = v31;
      *(_OWORD *)(v28 + 89) = *(_OWORD *)(v29 + 89);
      v32 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v32;
      v33 = *((_OWORD *)v29 + 3);
      *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
      *((_OWORD *)v28 + 3) = v33;
    }
    else
    {
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *((_QWORD *)v28 + 1) = v30;
      v34 = *((_QWORD *)v29 + 3);
      *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
      *((_QWORD *)v28 + 3) = v34;
      v35 = *((_QWORD *)v29 + 5);
      *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
      *((_QWORD *)v28 + 5) = v35;
      v36 = *((_QWORD *)v29 + 7);
      *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
      *((_QWORD *)v28 + 7) = v36;
      v37 = *((_QWORD *)v29 + 9);
      *((_QWORD *)v28 + 8) = *((_QWORD *)v29 + 8);
      *((_QWORD *)v28 + 9) = v37;
      v38 = *((_QWORD *)v29 + 11);
      *((_QWORD *)v28 + 10) = *((_QWORD *)v29 + 10);
      *((_QWORD *)v28 + 11) = v38;
      v28[104] = v29[104];
      *((_QWORD *)v28 + 12) = *((_QWORD *)v29 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v39 = a3[9];
    v40 = a3[10];
    v41 = (char *)v4 + v39;
    v42 = (char *)a2 + v39;
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v41[8] = v42[8];
    v43 = (_QWORD *)((char *)v4 + v40);
    v44 = (_QWORD *)((char *)a2 + v40);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v144 = a3;
    v145 = a2;
    v46 = a3[11];
    v47 = (char *)v4 + v46;
    v48 = (_QWORD *)((char *)a2 + v46);
    v49 = *(_QWORD *)((char *)a2 + v46 + 272);
    v50 = v48[36];
    v51 = v48[38];
    v52 = v48[40];
    v53 = v48[44];
    v54 = v48[46];
    v55 = v48[48];
    swift_bridgeObjectRetain();
    if (v49 >> 1 != 0xFFFFFFFF
      || (v51 | v50) > 1
      || v53 & 0xFFFFFFFFFFFFFEFELL | v52 & 0xFFFFFFFFFFFF00FELL
      || (v55 | v54) >= 2)
    {
      v56 = v48[3];
      if (v56)
      {
        v57 = v48[4];
        *((_QWORD *)v47 + 3) = v56;
        *((_QWORD *)v47 + 4) = v57;
        (**(void (***)(void *, const void *))(v56 - 8))(v47, v48);
        *((_QWORD *)v47 + 5) = v48[5];
        v47[48] = *((_BYTE *)v48 + 48);
        v58 = v48[10];
        v59 = v48[12];
        v60 = v48[14];
        v61 = v48[20];
        v62 = v48[22];
        v63 = v48[24];
        if (v58 >> 1 != 0xFFFFFFFF
          || (v60 | (unint64_t)v59) > 1
          || v61 & 0xFFFFFFFFFFFFFEFELL | v48[16] & 0xFFFFFFFFFFFF00FELL
          || (v63 | v62) >= 2)
        {
          v78 = v48[7];
          v77 = v48[8];
          v112 = v48[13];
          v118 = v48[15];
          v122 = v48[17];
          v124 = v48[18];
          v126 = v48[19];
          v128 = v48[21];
          v130 = v48[23];
          v132 = v48[25];
          v134 = v48[26];
          v136 = v48[27];
          v138 = v48[28];
          v140 = v48[29];
          v142 = v48[30];
          v79 = v48[9];
          v113 = v48[16];
          v80 = v48[11];
          v116 = v48[22];
          v120 = v48[24];
          v81 = v48[12];
          v82 = v48[10];
          v83 = v48[14];
          sub_1AD00FEAC(v78, v77, v79, v58, v80, v59, v112, v60, v118, v113, v122, v124, v126, v61, v128, v62, v130, v63, v132,
            v134,
            v136,
            v138,
            v140,
            v142);
          *((_QWORD *)v47 + 7) = v78;
          *((_QWORD *)v47 + 8) = v77;
          *((_QWORD *)v47 + 9) = v79;
          *((_QWORD *)v47 + 10) = v82;
          *((_QWORD *)v47 + 11) = v80;
          *((_QWORD *)v47 + 12) = v81;
          *((_QWORD *)v47 + 13) = v112;
          *((_QWORD *)v47 + 14) = v83;
          *((_QWORD *)v47 + 15) = v118;
          *((_QWORD *)v47 + 16) = v113;
          *((_QWORD *)v47 + 17) = v122;
          *((_QWORD *)v47 + 18) = v124;
          *((_QWORD *)v47 + 19) = v126;
          *((_QWORD *)v47 + 20) = v61;
          *((_QWORD *)v47 + 21) = v128;
          *((_QWORD *)v47 + 22) = v116;
          *((_QWORD *)v47 + 23) = v130;
          *((_QWORD *)v47 + 24) = v120;
          *((_QWORD *)v47 + 25) = v132;
          *((_QWORD *)v47 + 26) = v134;
          *((_QWORD *)v47 + 27) = v136;
          *((_QWORD *)v47 + 28) = v138;
          *((_QWORD *)v47 + 29) = v140;
          *((_QWORD *)v47 + 30) = v142;
        }
        else
        {
          v64 = *(_OWORD *)(v48 + 25);
          *(_OWORD *)(v47 + 184) = *(_OWORD *)(v48 + 23);
          *(_OWORD *)(v47 + 200) = v64;
          v65 = *(_OWORD *)(v48 + 29);
          *(_OWORD *)(v47 + 216) = *(_OWORD *)(v48 + 27);
          *(_OWORD *)(v47 + 232) = v65;
          v66 = *(_OWORD *)(v48 + 17);
          *(_OWORD *)(v47 + 120) = *(_OWORD *)(v48 + 15);
          *(_OWORD *)(v47 + 136) = v66;
          v67 = *(_OWORD *)(v48 + 21);
          *(_OWORD *)(v47 + 152) = *(_OWORD *)(v48 + 19);
          *(_OWORD *)(v47 + 168) = v67;
          v68 = *(_OWORD *)(v48 + 9);
          *(_OWORD *)(v47 + 56) = *(_OWORD *)(v48 + 7);
          *(_OWORD *)(v47 + 72) = v68;
          v69 = *(_OWORD *)(v48 + 13);
          *(_OWORD *)(v47 + 88) = *(_OWORD *)(v48 + 11);
          *(_OWORD *)(v47 + 104) = v69;
        }
      }
      else
      {
        v70 = *((_OWORD *)v48 + 13);
        *((_OWORD *)v47 + 12) = *((_OWORD *)v48 + 12);
        *((_OWORD *)v47 + 13) = v70;
        *((_OWORD *)v47 + 14) = *((_OWORD *)v48 + 14);
        *((_QWORD *)v47 + 30) = v48[30];
        v71 = *((_OWORD *)v48 + 9);
        *((_OWORD *)v47 + 8) = *((_OWORD *)v48 + 8);
        *((_OWORD *)v47 + 9) = v71;
        v72 = *((_OWORD *)v48 + 11);
        *((_OWORD *)v47 + 10) = *((_OWORD *)v48 + 10);
        *((_OWORD *)v47 + 11) = v72;
        v73 = *((_OWORD *)v48 + 5);
        *((_OWORD *)v47 + 4) = *((_OWORD *)v48 + 4);
        *((_OWORD *)v47 + 5) = v73;
        v74 = *((_OWORD *)v48 + 7);
        *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
        *((_OWORD *)v47 + 7) = v74;
        v75 = *((_OWORD *)v48 + 1);
        *(_OWORD *)v47 = *(_OWORD *)v48;
        *((_OWORD *)v47 + 1) = v75;
        v76 = *((_OWORD *)v48 + 3);
        *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
        *((_OWORD *)v47 + 3) = v76;
      }
      v84 = v48[33];
      v85 = v48[34];
      v114 = v48[39];
      v115 = v48[40];
      v117 = v48[41];
      v119 = v48[42];
      v121 = v48[43];
      v123 = v48[44];
      v125 = v48[45];
      v127 = v48[46];
      v129 = v48[47];
      v131 = v48[48];
      v133 = v48[49];
      v135 = v48[50];
      v137 = v48[51];
      v139 = v48[52];
      v141 = v48[53];
      v143 = v48[54];
      v86 = v48[31];
      v87 = v48[32];
      v88 = v48[35];
      v89 = v48[36];
      v90 = v48[37];
      v91 = v48[38];
      sub_1AD00FEAC(v86, v87, v84, v85, v88, v89, v90, v91, v114, v115, v117, v119, v121, v123, v125, v127, v129, v131, v133,
        v135,
        v137,
        v139,
        v141,
        v143);
      *((_QWORD *)v47 + 31) = v86;
      *((_QWORD *)v47 + 32) = v87;
      *((_QWORD *)v47 + 33) = v84;
      *((_QWORD *)v47 + 34) = v85;
      *((_QWORD *)v47 + 35) = v88;
      *((_QWORD *)v47 + 36) = v89;
      *((_QWORD *)v47 + 37) = v90;
      *((_QWORD *)v47 + 38) = v91;
      *((_QWORD *)v47 + 39) = v114;
      *((_QWORD *)v47 + 40) = v115;
      *((_QWORD *)v47 + 41) = v117;
      *((_QWORD *)v47 + 42) = v119;
      *((_QWORD *)v47 + 43) = v121;
      *((_QWORD *)v47 + 44) = v123;
      *((_QWORD *)v47 + 45) = v125;
      *((_QWORD *)v47 + 46) = v127;
      *((_QWORD *)v47 + 47) = v129;
      *((_QWORD *)v47 + 48) = v131;
      *((_QWORD *)v47 + 49) = v133;
      *((_QWORD *)v47 + 50) = v135;
      *((_QWORD *)v47 + 51) = v137;
      *((_QWORD *)v47 + 52) = v139;
      *((_QWORD *)v47 + 53) = v141;
      *((_QWORD *)v47 + 54) = v143;
    }
    else
    {
      memcpy(v47, v48, 0x1B8uLL);
    }
    v92 = v144[12];
    v93 = (char *)v4 + v92;
    v94 = (_QWORD *)((char *)v145 + v92);
    v95 = v94[1];
    *(_QWORD *)v93 = *v94;
    *((_QWORD *)v93 + 1) = v95;
    v96 = v94 + 2;
    v97 = v94[3];
    swift_retain();
    if (v97 == 1)
    {
      *((_OWORD *)v93 + 1) = *v96;
    }
    else
    {
      *((_QWORD *)v93 + 2) = *(_QWORD *)v96;
      *((_QWORD *)v93 + 3) = v97;
      swift_bridgeObjectRetain();
    }
    v98 = v144[13];
    v99 = (char *)v4 + v98;
    v100 = (char *)v145 + v98;
    v101 = *((_QWORD *)v100 + 1);
    if (v101 == 1)
    {
      *(_OWORD *)v99 = *(_OWORD *)v100;
    }
    else
    {
      *(_QWORD *)v99 = *(_QWORD *)v100;
      *((_QWORD *)v99 + 1) = v101;
      swift_bridgeObjectRetain();
    }
    v102 = v144[14];
    v103 = (char *)v4 + v102;
    v104 = (char *)v145 + v102;
    v105 = *((_QWORD *)v104 + 1);
    if (v105 >> 60 == 15)
    {
      *(_OWORD *)v103 = *(_OWORD *)v104;
    }
    else
    {
      v106 = *(_QWORD *)v104;
      sub_1AD0040A0(*(_QWORD *)v104, *((_QWORD *)v104 + 1));
      *(_QWORD *)v103 = v106;
      *((_QWORD *)v103 + 1) = v105;
    }
    v107 = v144[15];
    v108 = (_QWORD *)((char *)v4 + v107);
    v109 = (_QWORD *)((char *)v145 + v107);
    v110 = v109[1];
    *v108 = *v109;
    v108[1] = v110;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1AD460060(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1AD63B084();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[7];
  v8 = sub_1AD63AF28();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  if (*(_QWORD *)(a1 + a2[8] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(a1 + a2[11]);
  if (v10[34] >> 1 != 0xFFFFFFFFLL
    || (v10[38] | v10[36]) > 1
    || v10[44] & 0xFFFFFFFFFFFFFEFELL | v10[40] & 0xFFFFFFFFFFFF00FELL
    || (v10[48] | v10[46]) >= 2)
  {
    if (v10[3])
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + a2[11]);
      v11 = v10[10];
      v12 = v10[12];
      v13 = v10[14];
      v14 = v10[16];
      v15 = v10[20];
      v16 = v10[22];
      v17 = v10[24];
      if (v11 >> 1 != 0xFFFFFFFF
        || (v13 | (unint64_t)v12) > 1
        || v15 & 0xFFFFFFFFFFFFFEFELL | v14 & 0xFFFFFFFFFFFF00FELL
        || (v17 | v16) >= 2)
      {
        sub_1AD00E8B0(v10[7], v10[8], v10[9], v11, v10[11], v12, v10[13], v13, v10[15], v14, v10[17], v10[18], v10[19], v15, v10[21], v16, v10[23], v17, v10[25],
          v10[26],
          v10[27],
          v10[28],
          v10[29],
          v10[30]);
      }
    }
    v18 = v10[31];
    v19 = v10[32];
    v20 = v10 + 31;
    sub_1AD00E8B0(v18, v19, v20[2], v20[3], v20[4], v20[5], v20[6], v20[7], v20[8], v20[9], v20[10], v20[11], v20[12], v20[13], v20[14], v20[15], v20[16], v20[17], v20[18],
      v20[19],
      v20[20],
      v20[21],
      v20[22],
      v20[23]);
  }
  v21 = a1 + a2[12];
  swift_release();
  if (*(_QWORD *)(v21 + 24) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[13] + 8) != 1)
    swift_bridgeObjectRelease();
  v22 = (uint64_t *)(a1 + a2[14]);
  v23 = v22[1];
  if (v23 >> 60 != 15)
    sub_1AD00412C(*v22, v23);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1AD460338(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  _OWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  _QWORD *v139;
  int *v140;
  _QWORD *v141;

  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63B084();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = (_QWORD *)((char *)v5 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (char *)v5 + v15;
  v20 = (char *)a2 + v15;
  v21 = sub_1AD63AF28();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v25 = a3[8];
  v26 = (char *)v5 + v25;
  v27 = (char *)a2 + v25;
  v28 = *((_QWORD *)v27 + 1);
  if (v28 == 1)
  {
    v29 = *((_OWORD *)v27 + 5);
    *((_OWORD *)v26 + 4) = *((_OWORD *)v27 + 4);
    *((_OWORD *)v26 + 5) = v29;
    *(_OWORD *)(v26 + 89) = *(_OWORD *)(v27 + 89);
    v30 = *((_OWORD *)v27 + 1);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v30;
    v31 = *((_OWORD *)v27 + 3);
    *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    *((_OWORD *)v26 + 3) = v31;
  }
  else
  {
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v32 = *((_QWORD *)v27 + 3);
    *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 3) = v32;
    v33 = *((_QWORD *)v27 + 5);
    *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
    *((_QWORD *)v26 + 5) = v33;
    v34 = *((_QWORD *)v27 + 7);
    *((_QWORD *)v26 + 6) = *((_QWORD *)v27 + 6);
    *((_QWORD *)v26 + 7) = v34;
    v35 = *((_QWORD *)v27 + 9);
    *((_QWORD *)v26 + 8) = *((_QWORD *)v27 + 8);
    *((_QWORD *)v26 + 9) = v35;
    v36 = *((_QWORD *)v27 + 11);
    *((_QWORD *)v26 + 10) = *((_QWORD *)v27 + 10);
    *((_QWORD *)v26 + 11) = v36;
    v26[104] = v27[104];
    *((_QWORD *)v26 + 12) = *((_QWORD *)v27 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v37 = a3[9];
  v38 = a3[10];
  v39 = (char *)v5 + v37;
  v40 = (char *)a2 + v37;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = v40[8];
  v41 = (_QWORD *)((char *)v5 + v38);
  v42 = (_QWORD *)((char *)a2 + v38);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v140 = a3;
  v141 = a2;
  v44 = a3[11];
  v45 = (char *)v5 + v44;
  v46 = (_QWORD *)((char *)a2 + v44);
  v47 = *(_QWORD *)((char *)a2 + v44 + 272);
  v48 = v46[36];
  v49 = v46[38];
  v50 = v46[40];
  v51 = v46[44];
  v52 = v46[46];
  v53 = v46[48];
  swift_bridgeObjectRetain();
  if (v47 >> 1 != 0xFFFFFFFF
    || (v49 | v48) > 1
    || v51 & 0xFFFFFFFFFFFFFEFELL | v50 & 0xFFFFFFFFFFFF00FELL
    || (v53 | v52) >= 2)
  {
    v54 = v46[3];
    v139 = v5;
    if (v54)
    {
      v55 = v46[4];
      *((_QWORD *)v45 + 3) = v54;
      *((_QWORD *)v45 + 4) = v55;
      (**(void (***)(void *, const void *))(v54 - 8))(v45, v46);
      *((_QWORD *)v45 + 5) = v46[5];
      v45[48] = *((_BYTE *)v46 + 48);
      v56 = v46[10];
      v57 = v46[12];
      v58 = v46[14];
      v59 = v46[22];
      v60 = v46[24];
      if (v56 >> 1 != 0xFFFFFFFF
        || (v58 | (unint64_t)v57) > 1
        || v46[20] & 0xFFFFFFFFFFFFFEFELL | v46[16] & 0xFFFFFFFFFFFF00FELL
        || (v60 | v59) >= 2)
      {
        v75 = v46[7];
        v74 = v46[8];
        v111 = v46[15];
        v117 = v46[17];
        v119 = v46[18];
        v121 = v46[19];
        v123 = v46[21];
        v125 = v46[23];
        v127 = v46[25];
        v129 = v46[26];
        v131 = v46[27];
        v133 = v46[28];
        v135 = v46[29];
        v137 = v46[30];
        v108 = v46[16];
        v109 = v46[22];
        v76 = v46[9];
        v113 = v46[20];
        v115 = v46[24];
        v77 = v46[11];
        v78 = v46[13];
        sub_1AD00FEAC(v75, v74, v76, v56, v77, v57, v78, v58, v111, v108, v117, v119, v121, v113, v123, v59, v125, v60, v127,
          v129,
          v131,
          v133,
          v135,
          v137);
        *((_QWORD *)v45 + 7) = v75;
        *((_QWORD *)v45 + 8) = v74;
        *((_QWORD *)v45 + 9) = v76;
        *((_QWORD *)v45 + 10) = v56;
        *((_QWORD *)v45 + 11) = v77;
        *((_QWORD *)v45 + 12) = v57;
        *((_QWORD *)v45 + 13) = v78;
        *((_QWORD *)v45 + 14) = v58;
        *((_QWORD *)v45 + 15) = v111;
        *((_QWORD *)v45 + 16) = v108;
        *((_QWORD *)v45 + 17) = v117;
        *((_QWORD *)v45 + 18) = v119;
        *((_QWORD *)v45 + 19) = v121;
        *((_QWORD *)v45 + 20) = v113;
        *((_QWORD *)v45 + 21) = v123;
        *((_QWORD *)v45 + 22) = v109;
        *((_QWORD *)v45 + 23) = v125;
        *((_QWORD *)v45 + 24) = v115;
        *((_QWORD *)v45 + 25) = v127;
        *((_QWORD *)v45 + 26) = v129;
        *((_QWORD *)v45 + 27) = v131;
        *((_QWORD *)v45 + 28) = v133;
        *((_QWORD *)v45 + 29) = v135;
        *((_QWORD *)v45 + 30) = v137;
      }
      else
      {
        v61 = *(_OWORD *)(v46 + 25);
        *(_OWORD *)(v45 + 184) = *(_OWORD *)(v46 + 23);
        *(_OWORD *)(v45 + 200) = v61;
        v62 = *(_OWORD *)(v46 + 29);
        *(_OWORD *)(v45 + 216) = *(_OWORD *)(v46 + 27);
        *(_OWORD *)(v45 + 232) = v62;
        v63 = *(_OWORD *)(v46 + 17);
        *(_OWORD *)(v45 + 120) = *(_OWORD *)(v46 + 15);
        *(_OWORD *)(v45 + 136) = v63;
        v64 = *(_OWORD *)(v46 + 21);
        *(_OWORD *)(v45 + 152) = *(_OWORD *)(v46 + 19);
        *(_OWORD *)(v45 + 168) = v64;
        v65 = *(_OWORD *)(v46 + 9);
        *(_OWORD *)(v45 + 56) = *(_OWORD *)(v46 + 7);
        *(_OWORD *)(v45 + 72) = v65;
        v66 = *(_OWORD *)(v46 + 13);
        *(_OWORD *)(v45 + 88) = *(_OWORD *)(v46 + 11);
        *(_OWORD *)(v45 + 104) = v66;
      }
    }
    else
    {
      v67 = *((_OWORD *)v46 + 13);
      *((_OWORD *)v45 + 12) = *((_OWORD *)v46 + 12);
      *((_OWORD *)v45 + 13) = v67;
      *((_OWORD *)v45 + 14) = *((_OWORD *)v46 + 14);
      *((_QWORD *)v45 + 30) = v46[30];
      v68 = *((_OWORD *)v46 + 9);
      *((_OWORD *)v45 + 8) = *((_OWORD *)v46 + 8);
      *((_OWORD *)v45 + 9) = v68;
      v69 = *((_OWORD *)v46 + 11);
      *((_OWORD *)v45 + 10) = *((_OWORD *)v46 + 10);
      *((_OWORD *)v45 + 11) = v69;
      v70 = *((_OWORD *)v46 + 5);
      *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
      *((_OWORD *)v45 + 5) = v70;
      v71 = *((_OWORD *)v46 + 7);
      *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
      *((_OWORD *)v45 + 7) = v71;
      v72 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v72;
      v73 = *((_OWORD *)v46 + 3);
      *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
      *((_OWORD *)v45 + 3) = v73;
    }
    v79 = v46[32];
    v80 = v46[33];
    v81 = v46[34];
    v110 = v46[40];
    v112 = v46[41];
    v114 = v46[42];
    v116 = v46[43];
    v118 = v46[44];
    v120 = v46[45];
    v122 = v46[46];
    v124 = v46[47];
    v126 = v46[48];
    v128 = v46[49];
    v130 = v46[50];
    v132 = v46[51];
    v134 = v46[52];
    v136 = v46[53];
    v138 = v46[54];
    v82 = v46[39];
    v83 = v46[31];
    v84 = v46[35];
    v85 = v46[36];
    v86 = v46[37];
    v87 = v46[38];
    sub_1AD00FEAC(v83, v79, v80, v81, v84, v85, v86, v87, v82, v110, v112, v114, v116, v118, v120, v122, v124, v126, v128,
      v130,
      v132,
      v134,
      v136,
      v138);
    *((_QWORD *)v45 + 31) = v83;
    *((_QWORD *)v45 + 32) = v79;
    *((_QWORD *)v45 + 33) = v80;
    *((_QWORD *)v45 + 34) = v81;
    *((_QWORD *)v45 + 35) = v84;
    *((_QWORD *)v45 + 36) = v85;
    *((_QWORD *)v45 + 37) = v86;
    *((_QWORD *)v45 + 38) = v87;
    *((_QWORD *)v45 + 39) = v82;
    *((_QWORD *)v45 + 40) = v110;
    *((_QWORD *)v45 + 41) = v112;
    *((_QWORD *)v45 + 42) = v114;
    *((_QWORD *)v45 + 43) = v116;
    *((_QWORD *)v45 + 44) = v118;
    *((_QWORD *)v45 + 45) = v120;
    *((_QWORD *)v45 + 46) = v122;
    *((_QWORD *)v45 + 47) = v124;
    *((_QWORD *)v45 + 48) = v126;
    *((_QWORD *)v45 + 49) = v128;
    *((_QWORD *)v45 + 50) = v130;
    *((_QWORD *)v45 + 51) = v132;
    *((_QWORD *)v45 + 52) = v134;
    *((_QWORD *)v45 + 53) = v136;
    v5 = v139;
    *((_QWORD *)v45 + 54) = v138;
  }
  else
  {
    memcpy(v45, v46, 0x1B8uLL);
  }
  v88 = v140[12];
  v89 = (char *)v5 + v88;
  v90 = (_QWORD *)((char *)v141 + v88);
  v91 = v90[1];
  *(_QWORD *)v89 = *v90;
  *((_QWORD *)v89 + 1) = v91;
  v92 = v90 + 2;
  v93 = v90[3];
  swift_retain();
  if (v93 == 1)
  {
    *((_OWORD *)v89 + 1) = *v92;
  }
  else
  {
    *((_QWORD *)v89 + 2) = *(_QWORD *)v92;
    *((_QWORD *)v89 + 3) = v93;
    swift_bridgeObjectRetain();
  }
  v94 = v140[13];
  v95 = (char *)v5 + v94;
  v96 = (char *)v141 + v94;
  v97 = *((_QWORD *)v96 + 1);
  if (v97 == 1)
  {
    *(_OWORD *)v95 = *(_OWORD *)v96;
  }
  else
  {
    *(_QWORD *)v95 = *(_QWORD *)v96;
    *((_QWORD *)v95 + 1) = v97;
    swift_bridgeObjectRetain();
  }
  v98 = v140[14];
  v99 = (char *)v5 + v98;
  v100 = (char *)v141 + v98;
  v101 = *((_QWORD *)v100 + 1);
  if (v101 >> 60 == 15)
  {
    *(_OWORD *)v99 = *(_OWORD *)v100;
  }
  else
  {
    v102 = *(_QWORD *)v100;
    sub_1AD0040A0(*(_QWORD *)v100, *((_QWORD *)v100 + 1));
    *(_QWORD *)v99 = v102;
    *((_QWORD *)v99 + 1) = v101;
  }
  v103 = v140[15];
  v104 = (_QWORD *)((char *)v5 + v103);
  v105 = (_QWORD *)((char *)v141 + v103);
  v106 = v105[1];
  *v104 = *v105;
  v104[1] = v106;
  swift_bridgeObjectRetain();
  return v5;
}

_QWORD *sub_1AD460A3C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  __int128 *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  BOOL v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  uint64_t v232;
  unint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  _QWORD *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t *v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  uint64_t v252;
  _QWORD *v253;
  _QWORD *v254;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  unint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  unint64_t v339;
  unint64_t v340;
  uint64_t v341;
  unint64_t v342;
  unint64_t v343;
  unint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  int *v348;
  _QWORD *v349;
  _QWORD *v350;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)v5 + v6;
  v8 = (char *)v4 + v6;
  v9 = sub_1AD63B084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)((char *)v5 + v15);
  v17 = (_QWORD *)((char *)v4 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (char *)v5 + v18;
  v20 = (char *)v4 + v18;
  v21 = sub_1AD63AF28();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_13:
  v27 = a3[8];
  v28 = (uint64_t)v5 + v27;
  v29 = (char *)v4 + v27;
  v30 = *(_QWORD *)((char *)v5 + v27 + 8);
  v31 = *(_QWORD *)((char *)v4 + v27 + 8);
  if (v30 == 1)
  {
    if (v31 == 1)
    {
      v32 = *(_OWORD *)v29;
      v33 = *((_OWORD *)v29 + 2);
      *(_OWORD *)(v28 + 16) = *((_OWORD *)v29 + 1);
      *(_OWORD *)(v28 + 32) = v33;
      *(_OWORD *)v28 = v32;
      v34 = *((_OWORD *)v29 + 3);
      v35 = *((_OWORD *)v29 + 4);
      v36 = *((_OWORD *)v29 + 5);
      *(_OWORD *)(v28 + 89) = *(_OWORD *)(v29 + 89);
      *(_OWORD *)(v28 + 64) = v35;
      *(_OWORD *)(v28 + 80) = v36;
      *(_OWORD *)(v28 + 48) = v34;
    }
    else
    {
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *(_QWORD *)(v28 + 8) = *((_QWORD *)v29 + 1);
      *(_QWORD *)(v28 + 16) = *((_QWORD *)v29 + 2);
      *(_QWORD *)(v28 + 24) = *((_QWORD *)v29 + 3);
      *(_QWORD *)(v28 + 32) = *((_QWORD *)v29 + 4);
      *(_QWORD *)(v28 + 40) = *((_QWORD *)v29 + 5);
      *(_QWORD *)(v28 + 48) = *((_QWORD *)v29 + 6);
      *(_QWORD *)(v28 + 56) = *((_QWORD *)v29 + 7);
      *(_QWORD *)(v28 + 64) = *((_QWORD *)v29 + 8);
      *(_QWORD *)(v28 + 72) = *((_QWORD *)v29 + 9);
      *(_QWORD *)(v28 + 80) = *((_QWORD *)v29 + 10);
      *(_QWORD *)(v28 + 88) = *((_QWORD *)v29 + 11);
      v42 = *((_QWORD *)v29 + 12);
      *(_BYTE *)(v28 + 104) = v29[104];
      *(_QWORD *)(v28 + 96) = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v31 == 1)
  {
    sub_1AD461C68(v28);
    v38 = *((_OWORD *)v29 + 1);
    v37 = *((_OWORD *)v29 + 2);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v38;
    *(_OWORD *)(v28 + 32) = v37;
    v40 = *((_OWORD *)v29 + 4);
    v39 = *((_OWORD *)v29 + 5);
    v41 = *((_OWORD *)v29 + 3);
    *(_OWORD *)(v28 + 89) = *(_OWORD *)(v29 + 89);
    *(_OWORD *)(v28 + 64) = v40;
    *(_OWORD *)(v28 + 80) = v39;
    *(_OWORD *)(v28 + 48) = v41;
  }
  else
  {
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_QWORD *)(v28 + 8) = *((_QWORD *)v29 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 16) = *((_QWORD *)v29 + 2);
    *(_QWORD *)(v28 + 24) = *((_QWORD *)v29 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 32) = *((_QWORD *)v29 + 4);
    *(_QWORD *)(v28 + 40) = *((_QWORD *)v29 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 48) = *((_QWORD *)v29 + 6);
    *(_QWORD *)(v28 + 56) = *((_QWORD *)v29 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 64) = *((_QWORD *)v29 + 8);
    *(_QWORD *)(v28 + 72) = *((_QWORD *)v29 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 80) = *((_QWORD *)v29 + 10);
    *(_QWORD *)(v28 + 88) = *((_QWORD *)v29 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v43 = *((_QWORD *)v29 + 12);
    *(_BYTE *)(v28 + 104) = v29[104];
    *(_QWORD *)(v28 + 96) = v43;
  }
  v44 = a3[9];
  v45 = (char *)v5 + v44;
  v46 = (char *)v4 + v44;
  v47 = *(_QWORD *)v46;
  v45[8] = v46[8];
  *(_QWORD *)v45 = v47;
  v48 = a3[10];
  v49 = (_QWORD *)((char *)v5 + v48);
  v50 = (_QWORD *)((char *)v4 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = a3[11];
  v52 = (char *)v5 + v51;
  v53 = (char *)v4 + v51;
  v57 = *(_QWORD *)((char *)v4 + v51 + 272) >> 1 == 0xFFFFFFFFLL
     && (*((_QWORD *)v53 + 38) | *((_QWORD *)v53 + 36)) < 2uLL
     && (*(_QWORD *)((char *)v4 + v51 + 352) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)v53 + 40) & 0xFFFFFFFFFFFF00FELL) == 0
     && (*((_QWORD *)v53 + 48) | *((_QWORD *)v53 + 46)) < 2uLL;
  if (*(_QWORD *)((char *)v5 + v51 + 272) >> 1 != 0xFFFFFFFFLL
    || (*((_QWORD *)v52 + 38) | *((_QWORD *)v52 + 36)) > 1
    || *((_QWORD *)v52 + 44) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)v52 + 40) & 0xFFFFFFFFFFFF00FELL
    || (*((_QWORD *)v52 + 48) | *((_QWORD *)v52 + 46)) >= 2)
  {
    if (!v57)
    {
      v74 = *((_QWORD *)v53 + 3);
      v349 = v4;
      v350 = v5;
      v348 = a3;
      if (*((_QWORD *)v52 + 3))
      {
        if (v74)
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)v52, (uint64_t *)v53);
          v75 = *((_QWORD *)v53 + 5);
          v52[48] = v53[48];
          *((_QWORD *)v52 + 5) = v75;
          v76 = v52 + 56;
          v77 = (__int128 *)(v53 + 56);
          v78 = *((_QWORD *)v53 + 10);
          v79 = *((_QWORD *)v53 + 12);
          v80 = *((_QWORD *)v53 + 14);
          v81 = *((_QWORD *)v53 + 16);
          v82 = *((_QWORD *)v53 + 20);
          v83 = *((_QWORD *)v53 + 22);
          v84 = *((_QWORD *)v53 + 24);
          v88 = v78 >> 1 == 0xFFFFFFFF
             && (v80 | (unint64_t)v79) < 2
             && (v82 & 0xFFFFFFFFFFFFFEFELL | v81 & 0xFFFFFFFFFFFF00FELL) == 0
             && (v84 | v83) < 2;
          if (*((_QWORD *)v52 + 10) >> 1 != 0xFFFFFFFFLL
            || (*((_QWORD *)v52 + 14) | *((_QWORD *)v52 + 12)) > 1
            || *((_QWORD *)v52 + 20) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)v52 + 16) & 0xFFFFFFFFFFFF00FELL
            || (*((_QWORD *)v52 + 24) | *((_QWORD *)v52 + 22)) >= 2)
          {
            if (v88)
            {
              sub_1AD148B34((uint64_t)(v52 + 56));
              v156 = *(_OWORD *)(v53 + 104);
              v158 = *v77;
              v157 = *(_OWORD *)(v53 + 72);
              *(_OWORD *)(v52 + 88) = *(_OWORD *)(v53 + 88);
              *(_OWORD *)(v52 + 104) = v156;
              *v76 = v158;
              *(_OWORD *)(v52 + 72) = v157;
              v159 = *(_OWORD *)(v53 + 168);
              v161 = *(_OWORD *)(v53 + 120);
              v160 = *(_OWORD *)(v53 + 136);
              *(_OWORD *)(v52 + 152) = *(_OWORD *)(v53 + 152);
              *(_OWORD *)(v52 + 168) = v159;
              *(_OWORD *)(v52 + 120) = v161;
              *(_OWORD *)(v52 + 136) = v160;
              v162 = *(_OWORD *)(v53 + 232);
              v164 = *(_OWORD *)(v53 + 184);
              v163 = *(_OWORD *)(v53 + 200);
              *(_OWORD *)(v52 + 216) = *(_OWORD *)(v53 + 216);
              *(_OWORD *)(v52 + 232) = v162;
              *(_OWORD *)(v52 + 184) = v164;
              *(_OWORD *)(v52 + 200) = v163;
            }
            else
            {
              v264 = *((_QWORD *)v53 + 8);
              v270 = *((_QWORD *)v53 + 7);
              v259 = *((_QWORD *)v53 + 9);
              v186 = *((_QWORD *)v53 + 11);
              v187 = *((_QWORD *)v53 + 13);
              v276 = *((_QWORD *)v53 + 15);
              v282 = *((_QWORD *)v53 + 17);
              v288 = *((_QWORD *)v53 + 18);
              v292 = *((_QWORD *)v53 + 19);
              v298 = *((_QWORD *)v53 + 21);
              v304 = *((_QWORD *)v53 + 23);
              v310 = *((_QWORD *)v53 + 25);
              v316 = *((_QWORD *)v53 + 26);
              v322 = *((_QWORD *)v53 + 27);
              v328 = *((_QWORD *)v53 + 28);
              v334 = *((_QWORD *)v53 + 29);
              v340 = *((_QWORD *)v53 + 30);
              v346 = *((_QWORD *)v53 + 24);
              sub_1AD00FEAC(v270, v264, v259, v78, v186, v79, v187, v80, v276, v81, v282, v288, v292, v82, v298, v83, v304, v84, v310,
                v316,
                v322,
                v328,
                v334,
                v340);
              v188 = *((_QWORD *)v52 + 7);
              v189 = *((_QWORD *)v52 + 8);
              *((_QWORD *)v52 + 7) = v270;
              *((_QWORD *)v52 + 8) = v264;
              v190 = *((_QWORD *)v52 + 9);
              v191 = *((_QWORD *)v52 + 10);
              *((_QWORD *)v52 + 9) = v259;
              *((_QWORD *)v52 + 10) = v78;
              v192 = *((_QWORD *)v52 + 11);
              v193 = *((_QWORD *)v52 + 12);
              *((_QWORD *)v52 + 11) = v186;
              *((_QWORD *)v52 + 12) = v79;
              v194 = *((_QWORD *)v52 + 13);
              v195 = *((_QWORD *)v52 + 14);
              *((_QWORD *)v52 + 13) = v187;
              *((_QWORD *)v52 + 14) = v80;
              v196 = *(_OWORD *)(v52 + 120);
              *((_QWORD *)v52 + 15) = v276;
              *((_QWORD *)v52 + 16) = v81;
              v197 = *(_OWORD *)(v52 + 136);
              *((_QWORD *)v52 + 17) = v282;
              *((_QWORD *)v52 + 18) = v288;
              v198 = *(_OWORD *)(v52 + 152);
              *((_QWORD *)v52 + 19) = v292;
              *((_QWORD *)v52 + 20) = v82;
              v199 = *(_OWORD *)(v52 + 168);
              *((_QWORD *)v52 + 21) = v298;
              *((_QWORD *)v52 + 22) = v83;
              v200 = *(_OWORD *)(v52 + 184);
              *((_QWORD *)v52 + 23) = v304;
              *((_QWORD *)v52 + 24) = v346;
              v201 = *(_OWORD *)(v52 + 200);
              *((_QWORD *)v52 + 25) = v310;
              *((_QWORD *)v52 + 26) = v316;
              v202 = *(_OWORD *)(v52 + 216);
              *((_QWORD *)v52 + 27) = v322;
              *((_QWORD *)v52 + 28) = v328;
              v203 = *((_QWORD *)v52 + 29);
              v204 = *((_QWORD *)v52 + 30);
              *((_QWORD *)v52 + 29) = v334;
              *((_QWORD *)v52 + 30) = v340;
              sub_1AD00E8B0(v188, v189, v190, v191, v192, v193, v194, v195, v196, *((uint64_t *)&v196 + 1), v197, *((uint64_t *)&v197 + 1), v198, *((uint64_t *)&v198 + 1), v199, *((uint64_t *)&v199 + 1), v200, *((unint64_t *)&v200 + 1), v201,
                *((uint64_t *)&v201 + 1),
                v202,
                *((uint64_t *)&v202 + 1),
                v203,
                v204);
            }
          }
          else if (v88)
          {
            v89 = *v77;
            v90 = *(_OWORD *)(v53 + 72);
            v91 = *(_OWORD *)(v53 + 104);
            *(_OWORD *)(v52 + 88) = *(_OWORD *)(v53 + 88);
            *(_OWORD *)(v52 + 104) = v91;
            *v76 = v89;
            *(_OWORD *)(v52 + 72) = v90;
            v92 = *(_OWORD *)(v53 + 120);
            v93 = *(_OWORD *)(v53 + 136);
            v94 = *(_OWORD *)(v53 + 168);
            *(_OWORD *)(v52 + 152) = *(_OWORD *)(v53 + 152);
            *(_OWORD *)(v52 + 168) = v94;
            *(_OWORD *)(v52 + 120) = v92;
            *(_OWORD *)(v52 + 136) = v93;
            v95 = *(_OWORD *)(v53 + 184);
            v96 = *(_OWORD *)(v53 + 200);
            v97 = *(_OWORD *)(v53 + 232);
            *(_OWORD *)(v52 + 216) = *(_OWORD *)(v53 + 216);
            *(_OWORD *)(v52 + 232) = v97;
            *(_OWORD *)(v52 + 184) = v95;
            *(_OWORD *)(v52 + 200) = v96;
          }
          else
          {
            v182 = *((_QWORD *)v53 + 11);
            v183 = *((_QWORD *)v53 + 13);
            v258 = *((_QWORD *)v53 + 9);
            v263 = *((_QWORD *)v53 + 15);
            v275 = *((_QWORD *)v53 + 17);
            v281 = *((_QWORD *)v53 + 18);
            v291 = *((_QWORD *)v53 + 19);
            v297 = *((_QWORD *)v53 + 21);
            v303 = *((_QWORD *)v53 + 23);
            v309 = *((_QWORD *)v53 + 25);
            v315 = *((_QWORD *)v53 + 26);
            v321 = *((_QWORD *)v53 + 27);
            v327 = *((_QWORD *)v53 + 28);
            v333 = *((_QWORD *)v53 + 29);
            v339 = *((_QWORD *)v53 + 30);
            v287 = *((_QWORD *)v53 + 22);
            v184 = *((_QWORD *)v53 + 7);
            v269 = *((_QWORD *)v53 + 20);
            v185 = *((_QWORD *)v53 + 8);
            v345 = *((_QWORD *)v53 + 24);
            sub_1AD00FEAC(v184, v185, v258, v78, v182, v79, v183, v80, v263, v81, v275, v281, v291, v269, v297, v287, v303, v84, v309,
              v315,
              v321,
              v327,
              v333,
              v339);
            *((_QWORD *)v52 + 7) = v184;
            *((_QWORD *)v52 + 8) = v185;
            *((_QWORD *)v52 + 9) = v258;
            *((_QWORD *)v52 + 10) = v78;
            *((_QWORD *)v52 + 11) = v182;
            *((_QWORD *)v52 + 12) = v79;
            *((_QWORD *)v52 + 13) = v183;
            *((_QWORD *)v52 + 14) = v80;
            *((_QWORD *)v52 + 15) = v263;
            *((_QWORD *)v52 + 16) = v81;
            *((_QWORD *)v52 + 17) = v275;
            *((_QWORD *)v52 + 18) = v281;
            *((_QWORD *)v52 + 19) = v291;
            *((_QWORD *)v52 + 20) = v269;
            *((_QWORD *)v52 + 21) = v297;
            *((_QWORD *)v52 + 22) = v287;
            *((_QWORD *)v52 + 23) = v303;
            *((_QWORD *)v52 + 24) = v345;
            *((_QWORD *)v52 + 25) = v309;
            *((_QWORD *)v52 + 26) = v315;
            *((_QWORD *)v52 + 27) = v321;
            *((_QWORD *)v52 + 28) = v327;
            *((_QWORD *)v52 + 29) = v333;
            *((_QWORD *)v52 + 30) = v339;
          }
        }
        else
        {
          sub_1AD046A30(v52);
          v144 = *((_OWORD *)v53 + 3);
          v146 = *(_OWORD *)v53;
          v145 = *((_OWORD *)v53 + 1);
          *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
          *((_OWORD *)v52 + 3) = v144;
          *(_OWORD *)v52 = v146;
          *((_OWORD *)v52 + 1) = v145;
          v147 = *((_OWORD *)v53 + 7);
          v149 = *((_OWORD *)v53 + 4);
          v148 = *((_OWORD *)v53 + 5);
          *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
          *((_OWORD *)v52 + 7) = v147;
          *((_OWORD *)v52 + 4) = v149;
          *((_OWORD *)v52 + 5) = v148;
          v150 = *((_OWORD *)v53 + 11);
          v152 = *((_OWORD *)v53 + 8);
          v151 = *((_OWORD *)v53 + 9);
          *((_OWORD *)v52 + 10) = *((_OWORD *)v53 + 10);
          *((_OWORD *)v52 + 11) = v150;
          *((_OWORD *)v52 + 8) = v152;
          *((_OWORD *)v52 + 9) = v151;
          v154 = *((_OWORD *)v53 + 13);
          v153 = *((_OWORD *)v53 + 14);
          v155 = *((_OWORD *)v53 + 12);
          *((_QWORD *)v52 + 30) = *((_QWORD *)v53 + 30);
          *((_OWORD *)v52 + 13) = v154;
          *((_OWORD *)v52 + 14) = v153;
          *((_OWORD *)v52 + 12) = v155;
        }
      }
      else if (v74)
      {
        *((_QWORD *)v52 + 3) = v74;
        *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
        (**(void (***)(char *, char *))(v74 - 8))(v52, v53);
        v110 = *((_QWORD *)v53 + 5);
        v52[48] = v53[48];
        *((_QWORD *)v52 + 5) = v110;
        v111 = *((_QWORD *)v53 + 10);
        v112 = *((_QWORD *)v53 + 12);
        v113 = *((_QWORD *)v53 + 14);
        v114 = *((_QWORD *)v53 + 22);
        v115 = *((_QWORD *)v53 + 24);
        if (v111 >> 1 != 0xFFFFFFFF
          || (v113 | (unint64_t)v112) > 1
          || *((_QWORD *)v53 + 20) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)v53 + 16) & 0xFFFFFFFFFFFF00FELL
          || (v115 | v114) >= 2)
        {
          v177 = *((_QWORD *)v53 + 8);
          v178 = *((_QWORD *)v53 + 9);
          v179 = *((_QWORD *)v53 + 13);
          v257 = *((_QWORD *)v53 + 15);
          v280 = *((_QWORD *)v53 + 17);
          v286 = *((_QWORD *)v53 + 18);
          v296 = *((_QWORD *)v53 + 19);
          v302 = *((_QWORD *)v53 + 21);
          v308 = *((_QWORD *)v53 + 23);
          v314 = *((_QWORD *)v53 + 25);
          v320 = *((_QWORD *)v53 + 26);
          v326 = *((_QWORD *)v53 + 27);
          v332 = *((_QWORD *)v53 + 28);
          v338 = *((_QWORD *)v53 + 29);
          v344 = *((_QWORD *)v53 + 30);
          v262 = *((_QWORD *)v53 + 16);
          v268 = *((_QWORD *)v53 + 20);
          v180 = *((_QWORD *)v53 + 7);
          v181 = *((_QWORD *)v53 + 11);
          v274 = *((_QWORD *)v53 + 22);
          sub_1AD00FEAC(v180, v177, v178, v111, v181, v112, v179, v113, v257, v262, v280, v286, v296, v268, v302, v114, v308, v115, v314,
            v320,
            v326,
            v332,
            v338,
            v344);
          *((_QWORD *)v52 + 7) = v180;
          *((_QWORD *)v52 + 8) = v177;
          *((_QWORD *)v52 + 9) = v178;
          *((_QWORD *)v52 + 10) = v111;
          *((_QWORD *)v52 + 11) = v181;
          *((_QWORD *)v52 + 12) = v112;
          *((_QWORD *)v52 + 13) = v179;
          *((_QWORD *)v52 + 14) = v113;
          *((_QWORD *)v52 + 15) = v257;
          *((_QWORD *)v52 + 16) = v262;
          *((_QWORD *)v52 + 17) = v280;
          *((_QWORD *)v52 + 18) = v286;
          *((_QWORD *)v52 + 19) = v296;
          *((_QWORD *)v52 + 20) = v268;
          *((_QWORD *)v52 + 21) = v302;
          *((_QWORD *)v52 + 22) = v274;
          *((_QWORD *)v52 + 23) = v308;
          *((_QWORD *)v52 + 24) = v115;
          *((_QWORD *)v52 + 25) = v314;
          *((_QWORD *)v52 + 26) = v320;
          *((_QWORD *)v52 + 27) = v326;
          *((_QWORD *)v52 + 28) = v332;
          *((_QWORD *)v52 + 29) = v338;
          *((_QWORD *)v52 + 30) = v344;
        }
        else
        {
          v116 = *(_OWORD *)(v53 + 56);
          v117 = *(_OWORD *)(v53 + 72);
          v118 = *(_OWORD *)(v53 + 104);
          *(_OWORD *)(v52 + 88) = *(_OWORD *)(v53 + 88);
          *(_OWORD *)(v52 + 104) = v118;
          *(_OWORD *)(v52 + 56) = v116;
          *(_OWORD *)(v52 + 72) = v117;
          v119 = *(_OWORD *)(v53 + 120);
          v120 = *(_OWORD *)(v53 + 136);
          v121 = *(_OWORD *)(v53 + 168);
          *(_OWORD *)(v52 + 152) = *(_OWORD *)(v53 + 152);
          *(_OWORD *)(v52 + 168) = v121;
          *(_OWORD *)(v52 + 120) = v119;
          *(_OWORD *)(v52 + 136) = v120;
          v122 = *(_OWORD *)(v53 + 184);
          v123 = *(_OWORD *)(v53 + 200);
          v124 = *(_OWORD *)(v53 + 232);
          *(_OWORD *)(v52 + 216) = *(_OWORD *)(v53 + 216);
          *(_OWORD *)(v52 + 232) = v124;
          *(_OWORD *)(v52 + 184) = v122;
          *(_OWORD *)(v52 + 200) = v123;
        }
      }
      else
      {
        v165 = *(_OWORD *)v53;
        v166 = *((_OWORD *)v53 + 1);
        v167 = *((_OWORD *)v53 + 3);
        *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
        *((_OWORD *)v52 + 3) = v167;
        *(_OWORD *)v52 = v165;
        *((_OWORD *)v52 + 1) = v166;
        v168 = *((_OWORD *)v53 + 4);
        v169 = *((_OWORD *)v53 + 5);
        v170 = *((_OWORD *)v53 + 7);
        *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
        *((_OWORD *)v52 + 7) = v170;
        *((_OWORD *)v52 + 4) = v168;
        *((_OWORD *)v52 + 5) = v169;
        v171 = *((_OWORD *)v53 + 8);
        v172 = *((_OWORD *)v53 + 9);
        v173 = *((_OWORD *)v53 + 11);
        *((_OWORD *)v52 + 10) = *((_OWORD *)v53 + 10);
        *((_OWORD *)v52 + 11) = v173;
        *((_OWORD *)v52 + 8) = v171;
        *((_OWORD *)v52 + 9) = v172;
        v174 = *((_OWORD *)v53 + 12);
        v175 = *((_OWORD *)v53 + 13);
        v176 = *((_OWORD *)v53 + 14);
        *((_QWORD *)v52 + 30) = *((_QWORD *)v53 + 30);
        *((_OWORD *)v52 + 13) = v175;
        *((_OWORD *)v52 + 14) = v176;
        *((_OWORD *)v52 + 12) = v174;
      }
      v205 = *((_QWORD *)v53 + 31);
      v206 = *((_QWORD *)v53 + 32);
      v207 = *((_QWORD *)v53 + 33);
      v208 = *((_QWORD *)v53 + 34);
      v209 = *((_QWORD *)v53 + 35);
      v210 = *((_QWORD *)v53 + 36);
      v212 = *((_QWORD *)v53 + 37);
      v211 = *((_QWORD *)v53 + 38);
      v265 = *((_QWORD *)v53 + 39);
      v271 = *((_QWORD *)v53 + 40);
      v277 = *((_QWORD *)v53 + 41);
      v283 = *((_QWORD *)v53 + 42);
      v289 = *((_QWORD *)v53 + 43);
      v293 = *((_QWORD *)v53 + 44);
      v299 = *((_QWORD *)v53 + 45);
      v305 = *((_QWORD *)v53 + 46);
      v311 = *((_QWORD *)v53 + 47);
      v317 = *((_QWORD *)v53 + 48);
      v323 = *((_QWORD *)v53 + 49);
      v213 = *((_QWORD *)v53 + 52);
      v329 = *((_QWORD *)v53 + 50);
      v335 = *((_QWORD *)v53 + 51);
      v214 = *((_QWORD *)v53 + 53);
      v215 = *((_QWORD *)v53 + 54);
      v341 = v213;
      v347 = v214;
      sub_1AD00FEAC(v205, v206, v207, v208, v209, v210, v212, v211, v265, v271, v277, v283, v289, v293, v299, v305, v311, v317, v323,
        v329,
        v335,
        v213,
        v214,
        v215);
      v216 = *((_QWORD *)v52 + 31);
      v217 = *((_QWORD *)v52 + 32);
      v218 = v52 + 248;
      v219 = *((_QWORD *)v218 + 2);
      v220 = *((_QWORD *)v218 + 3);
      *(_QWORD *)v218 = v205;
      *((_QWORD *)v218 + 1) = v206;
      v221 = *((_QWORD *)v218 + 4);
      v222 = *((_QWORD *)v218 + 5);
      *((_QWORD *)v218 + 2) = v207;
      *((_QWORD *)v218 + 3) = v208;
      v223 = *((_QWORD *)v218 + 6);
      v224 = *((_QWORD *)v218 + 7);
      *((_QWORD *)v218 + 4) = v209;
      *((_QWORD *)v218 + 5) = v210;
      *((_QWORD *)v218 + 6) = v212;
      *((_QWORD *)v218 + 7) = v211;
      v225 = *((_OWORD *)v218 + 4);
      v226 = *((_OWORD *)v218 + 5);
      v227 = *((_OWORD *)v218 + 6);
      v228 = *((_OWORD *)v218 + 7);
      v229 = *((_OWORD *)v218 + 8);
      v230 = *((_OWORD *)v218 + 9);
      v231 = *((_OWORD *)v218 + 10);
      *((_QWORD *)v218 + 8) = v265;
      *((_QWORD *)v218 + 9) = v271;
      v232 = *((_QWORD *)v218 + 22);
      v233 = *((_QWORD *)v218 + 23);
      *((_QWORD *)v218 + 10) = v277;
      *((_QWORD *)v218 + 11) = v283;
      *((_QWORD *)v218 + 12) = v289;
      *((_QWORD *)v218 + 13) = v293;
      *((_QWORD *)v218 + 14) = v299;
      *((_QWORD *)v218 + 15) = v305;
      *((_QWORD *)v218 + 16) = v311;
      *((_QWORD *)v218 + 17) = v317;
      *((_QWORD *)v218 + 18) = v323;
      *((_QWORD *)v218 + 19) = v329;
      *((_QWORD *)v218 + 20) = v335;
      *((_QWORD *)v218 + 21) = v341;
      *((_QWORD *)v218 + 22) = v347;
      *((_QWORD *)v218 + 23) = v215;
      sub_1AD00E8B0(v216, v217, v219, v220, v221, v222, v223, v224, v225, *((uint64_t *)&v225 + 1), v226, *((uint64_t *)&v226 + 1), v227, *((uint64_t *)&v227 + 1), v228, *((uint64_t *)&v228 + 1), v229, *((unint64_t *)&v229 + 1), v230,
        *((uint64_t *)&v230 + 1),
        v231,
        *((uint64_t *)&v231 + 1),
        v232,
        v233);
      goto LABEL_85;
    }
    sub_1AD0469FC(v52);
LABEL_45:
    memcpy(v52, v53, 0x1B8uLL);
    goto LABEL_86;
  }
  if (v57)
    goto LABEL_45;
  v348 = a3;
  v349 = v4;
  v58 = *((_QWORD *)v53 + 3);
  v350 = v5;
  if (v58)
  {
    *((_QWORD *)v52 + 3) = v58;
    *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
    (**(void (***)(char *, char *))(v58 - 8))(v52, v53);
    v59 = *((_QWORD *)v53 + 5);
    v52[48] = v53[48];
    *((_QWORD *)v52 + 5) = v59;
    v60 = *((_QWORD *)v53 + 10);
    v61 = *((_QWORD *)v53 + 12);
    v62 = *((_QWORD *)v53 + 14);
    v63 = *((_QWORD *)v53 + 22);
    v64 = *((_QWORD *)v53 + 24);
    if (v60 >> 1 != 0xFFFFFFFF
      || (v62 | (unint64_t)v61) > 1
      || *((_QWORD *)v53 + 20) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)v53 + 16) & 0xFFFFFFFFFFFF00FELL
      || (v64 | v63) >= 2)
    {
      v125 = *((_QWORD *)v53 + 8);
      v126 = *((_QWORD *)v53 + 9);
      v127 = *((_QWORD *)v53 + 13);
      v256 = *((_QWORD *)v53 + 15);
      v278 = *((_QWORD *)v53 + 17);
      v284 = *((_QWORD *)v53 + 18);
      v294 = *((_QWORD *)v53 + 19);
      v300 = *((_QWORD *)v53 + 21);
      v306 = *((_QWORD *)v53 + 23);
      v312 = *((_QWORD *)v53 + 25);
      v318 = *((_QWORD *)v53 + 26);
      v324 = *((_QWORD *)v53 + 27);
      v330 = *((_QWORD *)v53 + 28);
      v336 = *((_QWORD *)v53 + 29);
      v342 = *((_QWORD *)v53 + 30);
      v260 = *((_QWORD *)v53 + 16);
      v266 = *((_QWORD *)v53 + 20);
      v128 = *((_QWORD *)v53 + 7);
      v129 = *((_QWORD *)v53 + 11);
      v272 = *((_QWORD *)v53 + 22);
      sub_1AD00FEAC(v128, v125, v126, v60, v129, v61, v127, v62, v256, v260, v278, v284, v294, v266, v300, v63, v306, v64, v312,
        v318,
        v324,
        v330,
        v336,
        v342);
      *((_QWORD *)v52 + 7) = v128;
      *((_QWORD *)v52 + 8) = v125;
      *((_QWORD *)v52 + 9) = v126;
      *((_QWORD *)v52 + 10) = v60;
      *((_QWORD *)v52 + 11) = v129;
      *((_QWORD *)v52 + 12) = v61;
      *((_QWORD *)v52 + 13) = v127;
      *((_QWORD *)v52 + 14) = v62;
      *((_QWORD *)v52 + 15) = v256;
      *((_QWORD *)v52 + 16) = v260;
      *((_QWORD *)v52 + 17) = v278;
      *((_QWORD *)v52 + 18) = v284;
      *((_QWORD *)v52 + 19) = v294;
      *((_QWORD *)v52 + 20) = v266;
      *((_QWORD *)v52 + 21) = v300;
      *((_QWORD *)v52 + 22) = v272;
      *((_QWORD *)v52 + 23) = v306;
      *((_QWORD *)v52 + 24) = v64;
      *((_QWORD *)v52 + 25) = v312;
      *((_QWORD *)v52 + 26) = v318;
      *((_QWORD *)v52 + 27) = v324;
      *((_QWORD *)v52 + 28) = v330;
      *((_QWORD *)v52 + 29) = v336;
      *((_QWORD *)v52 + 30) = v342;
    }
    else
    {
      v65 = *(_OWORD *)(v53 + 56);
      v66 = *(_OWORD *)(v53 + 72);
      v67 = *(_OWORD *)(v53 + 104);
      *(_OWORD *)(v52 + 88) = *(_OWORD *)(v53 + 88);
      *(_OWORD *)(v52 + 104) = v67;
      *(_OWORD *)(v52 + 56) = v65;
      *(_OWORD *)(v52 + 72) = v66;
      v68 = *(_OWORD *)(v53 + 120);
      v69 = *(_OWORD *)(v53 + 136);
      v70 = *(_OWORD *)(v53 + 168);
      *(_OWORD *)(v52 + 152) = *(_OWORD *)(v53 + 152);
      *(_OWORD *)(v52 + 168) = v70;
      *(_OWORD *)(v52 + 120) = v68;
      *(_OWORD *)(v52 + 136) = v69;
      v71 = *(_OWORD *)(v53 + 184);
      v72 = *(_OWORD *)(v53 + 200);
      v73 = *(_OWORD *)(v53 + 232);
      *(_OWORD *)(v52 + 216) = *(_OWORD *)(v53 + 216);
      *(_OWORD *)(v52 + 232) = v73;
      *(_OWORD *)(v52 + 184) = v71;
      *(_OWORD *)(v52 + 200) = v72;
    }
  }
  else
  {
    v98 = *(_OWORD *)v53;
    v99 = *((_OWORD *)v53 + 1);
    v100 = *((_OWORD *)v53 + 3);
    *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
    *((_OWORD *)v52 + 3) = v100;
    *(_OWORD *)v52 = v98;
    *((_OWORD *)v52 + 1) = v99;
    v101 = *((_OWORD *)v53 + 4);
    v102 = *((_OWORD *)v53 + 5);
    v103 = *((_OWORD *)v53 + 7);
    *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
    *((_OWORD *)v52 + 7) = v103;
    *((_OWORD *)v52 + 4) = v101;
    *((_OWORD *)v52 + 5) = v102;
    v104 = *((_OWORD *)v53 + 8);
    v105 = *((_OWORD *)v53 + 9);
    v106 = *((_OWORD *)v53 + 11);
    *((_OWORD *)v52 + 10) = *((_OWORD *)v53 + 10);
    *((_OWORD *)v52 + 11) = v106;
    *((_OWORD *)v52 + 8) = v104;
    *((_OWORD *)v52 + 9) = v105;
    v107 = *((_OWORD *)v53 + 12);
    v108 = *((_OWORD *)v53 + 13);
    v109 = *((_OWORD *)v53 + 14);
    *((_QWORD *)v52 + 30) = *((_QWORD *)v53 + 30);
    *((_OWORD *)v52 + 13) = v108;
    *((_OWORD *)v52 + 14) = v109;
    *((_OWORD *)v52 + 12) = v107;
  }
  v130 = *((_QWORD *)v53 + 31);
  v131 = *((_QWORD *)v53 + 32);
  v132 = *((_QWORD *)v53 + 33);
  v133 = *((_QWORD *)v53 + 34);
  v135 = *((_QWORD *)v53 + 35);
  v134 = *((_QWORD *)v53 + 36);
  v136 = *((_QWORD *)v53 + 37);
  v137 = *((_QWORD *)v53 + 38);
  v261 = *((_QWORD *)v53 + 40);
  v267 = *((_QWORD *)v53 + 41);
  v273 = *((_QWORD *)v53 + 42);
  v279 = *((_QWORD *)v53 + 43);
  v285 = *((_QWORD *)v53 + 44);
  v290 = *((_QWORD *)v53 + 45);
  v295 = *((_QWORD *)v53 + 46);
  v301 = *((_QWORD *)v53 + 47);
  v307 = *((_QWORD *)v53 + 48);
  v313 = *((_QWORD *)v53 + 49);
  v319 = *((_QWORD *)v53 + 50);
  v325 = *((_QWORD *)v53 + 51);
  v331 = *((_QWORD *)v53 + 52);
  v337 = *((_QWORD *)v53 + 53);
  v343 = *((_QWORD *)v53 + 54);
  v138 = *((_QWORD *)v53 + 39);
  v139 = v130;
  v140 = v131;
  v141 = v134;
  v142 = v136;
  v143 = v137;
  sub_1AD00FEAC(v130, v131, v132, v133, v135, v134, v136, v137, v138, v261, v267, v273, v279, v285, v290, v295, v301, v307, v313,
    v319,
    v325,
    v331,
    v337,
    v343);
  *((_QWORD *)v52 + 31) = v139;
  *((_QWORD *)v52 + 32) = v140;
  *((_QWORD *)v52 + 33) = v132;
  *((_QWORD *)v52 + 34) = v133;
  *((_QWORD *)v52 + 35) = v135;
  *((_QWORD *)v52 + 36) = v141;
  *((_QWORD *)v52 + 37) = v142;
  *((_QWORD *)v52 + 38) = v143;
  *((_QWORD *)v52 + 39) = v138;
  *((_QWORD *)v52 + 40) = v261;
  *((_QWORD *)v52 + 41) = v267;
  *((_QWORD *)v52 + 42) = v273;
  *((_QWORD *)v52 + 43) = v279;
  *((_QWORD *)v52 + 44) = v285;
  *((_QWORD *)v52 + 45) = v290;
  *((_QWORD *)v52 + 46) = v295;
  *((_QWORD *)v52 + 47) = v301;
  *((_QWORD *)v52 + 48) = v307;
  *((_QWORD *)v52 + 49) = v313;
  *((_QWORD *)v52 + 50) = v319;
  *((_QWORD *)v52 + 51) = v325;
  *((_QWORD *)v52 + 52) = v331;
  *((_QWORD *)v52 + 53) = v337;
  *((_QWORD *)v52 + 54) = v343;
LABEL_85:
  v4 = v349;
  v5 = v350;
  a3 = v348;
LABEL_86:
  v234 = a3[12];
  v235 = (_QWORD *)((char *)v5 + v234);
  v236 = (char *)v4 + v234;
  v237 = *(_QWORD *)((char *)v4 + v234 + 8);
  *v235 = *(_QWORD *)((char *)v4 + v234);
  v235[1] = v237;
  swift_retain();
  swift_release();
  v238 = *((_QWORD *)v236 + 3);
  if (v235[3] == 1)
  {
    if (v238 != 1)
    {
      v235[2] = *((_QWORD *)v236 + 2);
      v235[3] = *((_QWORD *)v236 + 3);
      swift_bridgeObjectRetain();
      goto LABEL_93;
    }
    goto LABEL_91;
  }
  if (v238 == 1)
  {
    sub_1AD009758((uint64_t)(v235 + 2), &qword_1ED2E3198);
LABEL_91:
    *((_OWORD *)v235 + 1) = *((_OWORD *)v236 + 1);
    goto LABEL_93;
  }
  v235[2] = *((_QWORD *)v236 + 2);
  v235[3] = *((_QWORD *)v236 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_93:
  v239 = a3[13];
  v240 = (_QWORD *)((char *)v5 + v239);
  v241 = (_QWORD *)((char *)v4 + v239);
  v242 = *(_QWORD *)((char *)v5 + v239 + 8);
  v243 = *(_QWORD *)((char *)v4 + v239 + 8);
  if (v242 == 1)
  {
    if (v243 != 1)
    {
      *v240 = *v241;
      v240[1] = v241[1];
      swift_bridgeObjectRetain();
      goto LABEL_100;
    }
    goto LABEL_98;
  }
  if (v243 == 1)
  {
    sub_1AD461C94((uint64_t)v240);
LABEL_98:
    *(_OWORD *)v240 = *(_OWORD *)v241;
    goto LABEL_100;
  }
  *v240 = *v241;
  v240[1] = v241[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_100:
  v244 = a3[14];
  v245 = (_QWORD *)((char *)v5 + v244);
  v246 = (_QWORD *)((char *)v4 + v244);
  v247 = *(_QWORD *)((char *)v4 + v244 + 8);
  if (*(_QWORD *)((char *)v5 + v244 + 8) >> 60 != 15)
  {
    if (v247 >> 60 != 15)
    {
      v249 = *v246;
      sub_1AD0040A0(v249, v247);
      v250 = *v245;
      v251 = v245[1];
      *v245 = v249;
      v245[1] = v247;
      sub_1AD00412C(v250, v251);
      goto LABEL_107;
    }
    sub_1AD007EC0((uint64_t)v245);
    goto LABEL_105;
  }
  if (v247 >> 60 == 15)
  {
LABEL_105:
    *(_OWORD *)v245 = *(_OWORD *)v246;
    goto LABEL_107;
  }
  v248 = *v246;
  sub_1AD0040A0(v248, v247);
  *v245 = v248;
  v245[1] = v247;
LABEL_107:
  v252 = a3[15];
  v253 = (_QWORD *)((char *)v5 + v252);
  v254 = (_QWORD *)((char *)v4 + v252);
  *v253 = *v254;
  v253[1] = v254[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1AD461C68(uint64_t a1)
{
  destroy for MessagesAppBalloon.Layout();
  return a1;
}

uint64_t sub_1AD461C94(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AD461CBC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  _OWORD *v32;
  uint64_t v33;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63B084();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1AD63AF28();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[8];
  v19 = a3[9];
  v20 = (_OWORD *)((char *)a1 + v18);
  v21 = (_OWORD *)((char *)a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  *(_OWORD *)((char *)v20 + 89) = *(_OWORD *)((char *)v21 + 89);
  v23 = v21[5];
  v20[4] = v21[4];
  v20[5] = v23;
  v24 = v21[3];
  v20[2] = v21[2];
  v20[3] = v24;
  v25 = (char *)a1 + v19;
  v26 = (char *)a2 + v19;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  v27 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  memcpy((char *)a1 + v27, (char *)a2 + v27, 0x1B8uLL);
  v28 = a3[12];
  v29 = a3[13];
  v30 = *(_OWORD *)((char *)a2 + v28);
  v31 = *(_OWORD *)((char *)a2 + v28 + 16);
  v32 = (_OWORD *)((char *)a1 + v28);
  *v32 = v30;
  v32[1] = v31;
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  v33 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v33) = *(_OWORD *)((char *)a2 + v33);
  return a1;
}

_QWORD *sub_1AD461EA4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _OWORD *v98;
  __int128 v99;
  uint64_t v100;
  unint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  _OWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t *v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63B084();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_1AD63AF28();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_13:
  v30 = a3[8];
  v31 = (uint64_t)a1 + v30;
  v32 = (char *)a2 + v30;
  if (*(_QWORD *)((char *)a1 + v30 + 8) != 1)
  {
    v33 = *((_QWORD *)v32 + 1);
    if (v33 != 1)
    {
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *(_QWORD *)(v31 + 8) = v33;
      swift_bridgeObjectRelease();
      v37 = *((_QWORD *)v32 + 3);
      *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
      *(_QWORD *)(v31 + 24) = v37;
      swift_bridgeObjectRelease();
      v38 = *((_QWORD *)v32 + 5);
      *(_QWORD *)(v31 + 32) = *((_QWORD *)v32 + 4);
      *(_QWORD *)(v31 + 40) = v38;
      swift_bridgeObjectRelease();
      v39 = *((_QWORD *)v32 + 7);
      *(_QWORD *)(v31 + 48) = *((_QWORD *)v32 + 6);
      *(_QWORD *)(v31 + 56) = v39;
      swift_bridgeObjectRelease();
      v40 = *((_QWORD *)v32 + 9);
      *(_QWORD *)(v31 + 64) = *((_QWORD *)v32 + 8);
      *(_QWORD *)(v31 + 72) = v40;
      swift_bridgeObjectRelease();
      v41 = *((_QWORD *)v32 + 11);
      *(_QWORD *)(v31 + 80) = *((_QWORD *)v32 + 10);
      *(_QWORD *)(v31 + 88) = v41;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 96) = *((_QWORD *)v32 + 12);
      *(_BYTE *)(v31 + 104) = v32[104];
      goto LABEL_18;
    }
    sub_1AD461C68(v31);
  }
  v34 = *((_OWORD *)v32 + 5);
  *(_OWORD *)(v31 + 64) = *((_OWORD *)v32 + 4);
  *(_OWORD *)(v31 + 80) = v34;
  *(_OWORD *)(v31 + 89) = *(_OWORD *)(v32 + 89);
  v35 = *((_OWORD *)v32 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v35;
  v36 = *((_OWORD *)v32 + 3);
  *(_OWORD *)(v31 + 32) = *((_OWORD *)v32 + 2);
  *(_OWORD *)(v31 + 48) = v36;
LABEL_18:
  v42 = a3[9];
  v43 = a3[10];
  v44 = (char *)a1 + v42;
  v45 = (char *)a2 + v42;
  *(_QWORD *)v44 = *(_QWORD *)v45;
  v44[8] = v45[8];
  v46 = (_QWORD *)((char *)a1 + v43);
  v47 = (_QWORD *)((char *)a2 + v43);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  v50 = a3[11];
  v51 = (uint64_t)a1 + v50;
  v52 = (_OWORD *)((char *)a2 + v50);
  if (*(_QWORD *)((char *)a1 + v50 + 272) >> 1 == 0xFFFFFFFFLL
    && (*(_QWORD *)(v51 + 304) | *(_QWORD *)(v51 + 288)) <= 1
    && !(*(_QWORD *)(v51 + 352) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(v51 + 320) & 0xFFFFFFFFFFFF00FELL)
    && (*(_QWORD *)(v51 + 384) | *(_QWORD *)(v51 + 368)) < 2)
  {
    goto LABEL_27;
  }
  if (*((_QWORD *)v52 + 34) >> 1 == 0xFFFFFFFFLL
    && (*((_QWORD *)v52 + 38) | *((_QWORD *)v52 + 36)) <= 1
    && !(v52[22] & 0xFFFFFFFFFFFFFEFELL | v52[20] & 0xFFFFFFFFFFFF00FELL)
    && (*((_QWORD *)v52 + 48) | *((_QWORD *)v52 + 46)) < 2)
  {
    sub_1AD0469FC((_QWORD *)v51);
LABEL_27:
    memcpy((void *)v51, v52, 0x1B8uLL);
    goto LABEL_45;
  }
  if (!*(_QWORD *)(v51 + 24))
    goto LABEL_43;
  if (!*((_QWORD *)v52 + 3))
  {
    sub_1AD046A30((_QWORD *)v51);
LABEL_43:
    v75 = v52[13];
    *(_OWORD *)(v51 + 192) = v52[12];
    *(_OWORD *)(v51 + 208) = v75;
    *(_OWORD *)(v51 + 224) = v52[14];
    *(_QWORD *)(v51 + 240) = *((_QWORD *)v52 + 30);
    v76 = v52[9];
    *(_OWORD *)(v51 + 128) = v52[8];
    *(_OWORD *)(v51 + 144) = v76;
    v77 = v52[11];
    *(_OWORD *)(v51 + 160) = v52[10];
    *(_OWORD *)(v51 + 176) = v77;
    v78 = v52[5];
    *(_OWORD *)(v51 + 64) = v52[4];
    *(_OWORD *)(v51 + 80) = v78;
    v79 = v52[7];
    *(_OWORD *)(v51 + 96) = v52[6];
    *(_OWORD *)(v51 + 112) = v79;
    v80 = v52[1];
    *(_OWORD *)v51 = *v52;
    *(_OWORD *)(v51 + 16) = v80;
    v81 = v52[3];
    *(_OWORD *)(v51 + 32) = v52[2];
    *(_OWORD *)(v51 + 48) = v81;
    goto LABEL_44;
  }
  __swift_destroy_boxed_opaque_existential_1(v51);
  v53 = v52[1];
  *(_OWORD *)v51 = *v52;
  *(_OWORD *)(v51 + 16) = v53;
  v54 = *((_QWORD *)v52 + 5);
  *(_QWORD *)(v51 + 32) = *((_QWORD *)v52 + 4);
  *(_QWORD *)(v51 + 40) = v54;
  *(_BYTE *)(v51 + 48) = *((_BYTE *)v52 + 48);
  v55 = *(_QWORD *)(v51 + 80);
  v56 = *(_QWORD *)(v51 + 96);
  v57 = *(_QWORD *)(v51 + 112);
  v58 = *(_QWORD *)(v51 + 128);
  v59 = *(_QWORD *)(v51 + 160);
  v60 = *(_QWORD *)(v51 + 176);
  v61 = *(_QWORD *)(v51 + 192);
  v62 = *((_QWORD *)v52 + 10);
  v63 = *((_QWORD *)v52 + 12);
  v64 = *((_QWORD *)v52 + 14);
  v65 = *((_QWORD *)v52 + 16);
  v66 = *((_QWORD *)v52 + 20);
  v67 = *((_QWORD *)v52 + 22);
  v68 = *((_QWORD *)v52 + 24);
  if (v55 >> 1 != 0xFFFFFFFF
    || (v57 | (unint64_t)v56) > 1
    || v59 & 0xFFFFFFFFFFFFFEFELL | v58 & 0xFFFFFFFFFFFF00FELL
    || (v61 | v60) >= 2)
  {
    if (v62 >> 1 != 0xFFFFFFFF
      || (v64 | v63) > 1
      || v66 & 0xFFFFFFFFFFFFFEFELL | v65 & 0xFFFFFFFFFFFF00FELL
      || (v68 | v67) >= 2)
    {
      v134 = *((_QWORD *)v52 + 9);
      v135 = *((_QWORD *)v52 + 11);
      v136 = *((_QWORD *)v52 + 13);
      v137 = *((_QWORD *)v52 + 15);
      v138 = *((_QWORD *)v52 + 19);
      v139 = *((_QWORD *)v52 + 21);
      v140 = *((_QWORD *)v52 + 23);
      v151 = *(_QWORD *)(v51 + 64);
      v152 = *(_QWORD *)(v51 + 56);
      v153 = *(_QWORD *)(v51 + 88);
      v154 = *(_QWORD *)(v51 + 104);
      v149 = *(_QWORD *)(v51 + 120);
      v150 = *(_QWORD *)(v51 + 72);
      v141 = *(_OWORD *)(v51 + 136);
      v147 = *(_QWORD *)(v51 + 168);
      v148 = *(_QWORD *)(v51 + 152);
      v142 = *(_QWORD *)(v51 + 184);
      v143 = *(_OWORD *)(v51 + 200);
      v144 = *(_OWORD *)(v51 + 216);
      v146 = *(_QWORD *)(v51 + 232);
      v145 = *(_QWORD *)(v51 + 240);
      *(_OWORD *)(v51 + 56) = *(_OWORD *)((char *)v52 + 56);
      *(_QWORD *)(v51 + 72) = v134;
      *(_QWORD *)(v51 + 80) = v62;
      *(_QWORD *)(v51 + 88) = v135;
      *(_QWORD *)(v51 + 96) = v63;
      *(_QWORD *)(v51 + 104) = v136;
      *(_QWORD *)(v51 + 112) = v64;
      *(_QWORD *)(v51 + 120) = v137;
      *(_QWORD *)(v51 + 128) = v65;
      *(_OWORD *)(v51 + 136) = *(_OWORD *)((char *)v52 + 136);
      *(_QWORD *)(v51 + 152) = v138;
      *(_QWORD *)(v51 + 160) = v66;
      *(_QWORD *)(v51 + 168) = v139;
      *(_QWORD *)(v51 + 176) = v67;
      *(_QWORD *)(v51 + 184) = v140;
      *(_QWORD *)(v51 + 192) = v68;
      *(_OWORD *)(v51 + 200) = *(_OWORD *)((char *)v52 + 200);
      *(_OWORD *)(v51 + 216) = *(_OWORD *)((char *)v52 + 216);
      *(_OWORD *)(v51 + 232) = *(_OWORD *)((char *)v52 + 232);
      sub_1AD00E8B0(v152, v151, v150, v55, v153, v56, v154, v57, v149, v58, v141, *((uint64_t *)&v141 + 1), v148, v59, v147, v60, v142, v61, v143,
        *((uint64_t *)&v143 + 1),
        v144,
        *((uint64_t *)&v144 + 1),
        v146,
        v145);
      goto LABEL_44;
    }
    sub_1AD148B34(v51 + 56);
  }
  v69 = *(_OWORD *)((char *)v52 + 200);
  *(_OWORD *)(v51 + 184) = *(_OWORD *)((char *)v52 + 184);
  *(_OWORD *)(v51 + 200) = v69;
  v70 = *(_OWORD *)((char *)v52 + 232);
  *(_OWORD *)(v51 + 216) = *(_OWORD *)((char *)v52 + 216);
  *(_OWORD *)(v51 + 232) = v70;
  v71 = *(_OWORD *)((char *)v52 + 136);
  *(_OWORD *)(v51 + 120) = *(_OWORD *)((char *)v52 + 120);
  *(_OWORD *)(v51 + 136) = v71;
  v72 = *(_OWORD *)((char *)v52 + 168);
  *(_OWORD *)(v51 + 152) = *(_OWORD *)((char *)v52 + 152);
  *(_OWORD *)(v51 + 168) = v72;
  v73 = *(_OWORD *)((char *)v52 + 72);
  *(_OWORD *)(v51 + 56) = *(_OWORD *)((char *)v52 + 56);
  *(_OWORD *)(v51 + 72) = v73;
  v74 = *(_OWORD *)((char *)v52 + 104);
  *(_OWORD *)(v51 + 88) = *(_OWORD *)((char *)v52 + 88);
  *(_OWORD *)(v51 + 104) = v74;
LABEL_44:
  v82 = *(_QWORD *)(v51 + 248);
  v83 = *(_QWORD *)(v51 + 256);
  v84 = v51 + 248;
  v85 = *(_QWORD *)(v84 + 16);
  v86 = *(_QWORD *)(v84 + 24);
  v87 = *(_QWORD *)(v84 + 32);
  v88 = *(_QWORD *)(v84 + 40);
  v89 = *(_QWORD *)(v84 + 48);
  v90 = *(_QWORD *)(v84 + 56);
  v91 = *(_OWORD *)(v84 + 64);
  v92 = *(_OWORD *)(v84 + 80);
  v93 = *(_OWORD *)(v84 + 96);
  v94 = *(_OWORD *)(v84 + 112);
  v95 = *(_OWORD *)(v84 + 128);
  v96 = *(_OWORD *)(v84 + 144);
  v97 = *(_OWORD *)(v84 + 160);
  v99 = *(_OWORD *)((char *)v52 + 248);
  v98 = (_OWORD *)((char *)v52 + 248);
  v100 = *(_QWORD *)(v84 + 176);
  v101 = *(_QWORD *)(v84 + 184);
  v102 = v98[1];
  v103 = v98[2];
  *(_OWORD *)v84 = v99;
  *(_OWORD *)(v84 + 16) = v102;
  v104 = v98[3];
  v105 = v98[4];
  *(_OWORD *)(v84 + 32) = v103;
  *(_OWORD *)(v84 + 48) = v104;
  v106 = v98[5];
  v107 = v98[6];
  *(_OWORD *)(v84 + 64) = v105;
  *(_OWORD *)(v84 + 80) = v106;
  v108 = v98[7];
  v109 = v98[8];
  *(_OWORD *)(v84 + 96) = v107;
  *(_OWORD *)(v84 + 112) = v108;
  v110 = v98[9];
  v111 = v98[10];
  *(_OWORD *)(v84 + 128) = v109;
  *(_OWORD *)(v84 + 144) = v110;
  v112 = v98[11];
  *(_OWORD *)(v84 + 160) = v111;
  *(_OWORD *)(v84 + 176) = v112;
  sub_1AD00E8B0(v82, v83, v85, v86, v87, v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92, *((uint64_t *)&v92 + 1), v93, *((uint64_t *)&v93 + 1), v94, *((uint64_t *)&v94 + 1), v95, *((unint64_t *)&v95 + 1), v96,
    *((uint64_t *)&v96 + 1),
    v97,
    *((uint64_t *)&v97 + 1),
    v100,
    v101);
LABEL_45:
  v113 = a3[12];
  v114 = (char *)a1 + v113;
  v115 = (char *)a2 + v113;
  *(_OWORD *)((char *)a1 + v113) = *(_OWORD *)((char *)a2 + v113);
  swift_release();
  v116 = v115 + 16;
  if (*((_QWORD *)v114 + 3) == 1)
  {
LABEL_48:
    *((_OWORD *)v114 + 1) = *v116;
    goto LABEL_50;
  }
  v117 = *((_QWORD *)v115 + 3);
  if (v117 == 1)
  {
    sub_1AD009758((uint64_t)(v114 + 16), &qword_1ED2E3198);
    goto LABEL_48;
  }
  *((_QWORD *)v114 + 2) = *(_QWORD *)v116;
  *((_QWORD *)v114 + 3) = v117;
  swift_bridgeObjectRelease();
LABEL_50:
  v118 = a3[13];
  v119 = (uint64_t)a1 + v118;
  v120 = (char *)a2 + v118;
  if (*(_QWORD *)((char *)a1 + v118 + 8) == 1)
  {
LABEL_53:
    *(_OWORD *)v119 = *(_OWORD *)v120;
    goto LABEL_55;
  }
  v121 = *((_QWORD *)v120 + 1);
  if (v121 == 1)
  {
    sub_1AD461C94(v119);
    goto LABEL_53;
  }
  *(_QWORD *)v119 = *(_QWORD *)v120;
  *(_QWORD *)(v119 + 8) = v121;
  swift_bridgeObjectRelease();
LABEL_55:
  v122 = a3[14];
  v123 = (_QWORD *)((char *)a1 + v122);
  v124 = (_QWORD *)((char *)a2 + v122);
  v125 = *(_QWORD *)((char *)a1 + v122 + 8);
  if (v125 >> 60 != 15)
  {
    v126 = v124[1];
    if (v126 >> 60 != 15)
    {
      v127 = *v123;
      *v123 = *v124;
      v123[1] = v126;
      sub_1AD00412C(v127, v125);
      goto LABEL_60;
    }
    sub_1AD007EC0((uint64_t)v123);
  }
  *(_OWORD *)v123 = *(_OWORD *)v124;
LABEL_60:
  v128 = a3[15];
  v129 = (_QWORD *)((char *)a1 + v128);
  v130 = (_QWORD *)((char *)a2 + v128);
  v132 = *v130;
  v131 = v130[1];
  *v129 = v132;
  v129[1] = v131;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD462648()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD462654(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[12]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t sub_1AD462700()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD46270C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[12]) = (a2 - 1);
  return result;
}

void sub_1AD4627B4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1ACFFECF8(319, qword_1ED2E7158, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t destroy for MessagesAppBalloon.Layout()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagesAppBalloon.Layout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagesAppBalloon.Layout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v4;
  return a1;
}

uint64_t assignWithTake for MessagesAppBalloon.Layout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesAppBalloon.Layout(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 105))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesAppBalloon.Layout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 105) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesAppBalloon.Layout()
{
  return &type metadata for MessagesAppBalloon.Layout;
}

ValueMetadata *type metadata accessor for MessagesAppBalloon.AppIconImage()
{
  return &type metadata for MessagesAppBalloon.AppIconImage;
}

ValueMetadata *type metadata accessor for MessagesAppBalloon.LiveLayout()
{
  return &type metadata for MessagesAppBalloon.LiveLayout;
}

uint64_t sub_1AD462C1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD00B904(v1, a1);
}

uint64_t sub_1AD462C28(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD00B950(a1, v1);
}

uint64_t (*sub_1AD462C30())()
{
  return nullsub_1;
}

uint64_t sub_1AD462C40(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD462CC8(&qword_1EECDC750, (uint64_t)&unk_1AD651948);
  result = sub_1AD462CC8(&qword_1EECDC758, (uint64_t)&unk_1AD651970);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for RecoverJunkCommand()
{
  uint64_t result;

  result = qword_1ED2E2658;
  if (!qword_1ED2E2658)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD462CC8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RecoverJunkCommand();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD462D08()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD462D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1AD462D50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD462D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1AD462D9C(uint64_t a1, uint64_t a2)
{
  if ((sub_1AD63B888() & 1) == 0 && (a1 || a2 != 0xE000000000000000) && (sub_1AD63C2A8() & 1) == 0)
  {
    sub_1AD63BB7C();
    if (qword_1ED2E7540[0] == -1)
      goto LABEL_10;
LABEL_11:
    swift_once();
    goto LABEL_10;
  }
  sub_1AD0442F4();
  if ((sub_1AD63BC9C() & 1) == 0)
    return 1;
  sub_1AD63BB7C();
  if (qword_1ED2E7540[0] != -1)
    goto LABEL_11;
LABEL_10:
  sub_1AD63B48C();
  return 0;
}

uint64_t XPCCodable.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t XPCCodable.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t XPCCodable.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*XPCCodable.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t XPCCodable.init(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1AD63BD8C();
  swift_allocError();
  v6 = v5;
  sub_1AD63BD38();
  type metadata accessor for XPCCodable(0, a2, v7, v8);
  sub_1AD63C578();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63BD68();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v6, *MEMORY[0x1E0DEC458], v4);
  swift_willThrow();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t type metadata accessor for XPCCodable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCCodable);
}

uint64_t XPCCodable.encode(to:)(uint64_t a1, uint64_t a2)
{
  return sub_1AD4630D0(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_1AD4630A0(uint64_t a1, uint64_t a2)
{
  return XPCCodable.init(from:)(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_1AD4630B8(uint64_t a1, uint64_t a2)
{
  return sub_1AD4630D0(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_1AD4630D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_1AD63BDA4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEA40);
  v8 = type metadata accessor for XPCCodable(0, a2, v6, v7);
  v5[3] = swift_getMetatypeMetadata();
  *v5 = v8;
  sub_1AD63BD38();
  sub_1AD63C578();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63BD68();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x1E0DEC4B0], v3);
  return swift_willThrow();
}

uint64_t sub_1AD463200()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AD46326C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1AD4632DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1AD4632EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1AD46331C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1AD46334C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1AD46337C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1AD4633AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AD46345C + 4 * byte_1AD6866C8[(v7 - 1)]))();
}

void sub_1AD4634AC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1AD46365C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD00B904(v1, a1);
}

uint64_t sub_1AD463668(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD00B950(a1, v1);
}

uint64_t (*sub_1AD463670())()
{
  return nullsub_1;
}

uint64_t sub_1AD463680@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CrossServiceAssociationMessage() + 20);
  v4 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for CrossServiceAssociationMessage()
{
  uint64_t result;

  result = qword_1ED2DAE28;
  if (!qword_1ED2DAE28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD463704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CrossServiceAssociationMessage() + 20);
  v4 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*sub_1AD46374C())(_QWORD)
{
  type metadata accessor for CrossServiceAssociationMessage();
  return nullsub_1;
}

uint64_t sub_1AD463774(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD4637C0(&qword_1EECDC760, (uint64_t)&unk_1AD6503B8);
  result = sub_1AD4637C0((unint64_t *)&unk_1EECDC768, (uint64_t)&unk_1AD6503E0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD4637C0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CrossServiceAssociationMessage();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1AD463800(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B084();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Metadata();
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    *((_BYTE *)a1 + v9[6]) = *((_BYTE *)a2 + v9[6]);
    *((_BYTE *)a1 + v9[7]) = *((_BYTE *)a2 + v9[7]);
    *(_WORD *)((char *)a1 + v9[8]) = *(_WORD *)((char *)a2 + v9[8]);
    v8((_QWORD *)((char *)a1 + *(int *)(a3 + 20)), (_QWORD *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_1AD4638E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1AD63B084();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_1AD46394C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1AD63B084();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_BYTE *)(a1 + v8[6]) = *(_BYTE *)(a2 + v8[6]);
  *(_BYTE *)(a1 + v8[7]) = *(_BYTE *)(a2 + v8[7]);
  *(_WORD *)(a1 + v8[8]) = *(_WORD *)(a2 + v8[8]);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1AD463A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;

  v6 = sub_1AD63B084();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = v12;
  *(_BYTE *)(a1 + v8[6]) = *(_BYTE *)(a2 + v8[6]);
  *(_BYTE *)(a1 + v8[7]) = *(_BYTE *)(a2 + v8[7]);
  v13 = v8[8];
  v14 = (_BYTE *)(a1 + v13);
  v15 = (_BYTE *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1AD463ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1AD63B084();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_BYTE *)(a1 + v8[6]) = *(_BYTE *)(a2 + v8[6]);
  *(_BYTE *)(a1 + v8[7]) = *(_BYTE *)(a2 + v8[7]);
  *(_WORD *)(a1 + v8[8]) = *(_WORD *)(a2 + v8[8]);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1AD463B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;

  v6 = sub_1AD63B084();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_BYTE *)(a1 + v8[6]) = *(_BYTE *)(a2 + v8[6]);
  *(_BYTE *)(a1 + v8[7]) = *(_BYTE *)(a2 + v8[7]);
  v12 = v8[8];
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1AD463C4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD463C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Metadata();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1AD63B084();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1AD463CCC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD463CD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Metadata();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1AD63B084();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1AD463D54()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Metadata();
  if (v1 <= 0x3F)
  {
    result = sub_1AD63B084();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AD463DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t XPCDecoder.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_WORD *)(result + 16) = 0;
  return result;
}

BOOL static XPCDecoder.DataDecodingStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t XPCDecoder.DataDecodingStrategy.hash(into:)()
{
  return sub_1AD63C4B8();
}

uint64_t XPCDecoder.DataDecodingStrategy.hashValue.getter()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

BOOL static XPCDecoder.UUIDDecodingStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t XPCDecoder.UUIDDecodingStrategy.hash(into:)()
{
  return sub_1AD63C4B8();
}

uint64_t XPCDecoder.UUIDDecodingStrategy.hashValue.getter()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t XPCDecoder.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_WORD *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_1AD463F24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 16);
  return result;
}

uint64_t sub_1AD463F64(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t (*sub_1AD463FA0())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t sub_1AD463FDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 17);
  return result;
}

uint64_t sub_1AD46401C(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 17) = v2;
  return result;
}

uint64_t (*sub_1AD464058())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_1AD464094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *(*v12)(uint64_t *__return_ptr, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a4;
  v30 = a5;
  v29 = sub_1AD63BC48();
  v9 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v11 = (char *)&v29 - v10;
  v12 = *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v5 + 104);
  v13 = swift_unknownObjectRetain();
  v14 = v12((uint64_t *)((char *)&v33 + 1), v13);
  v15 = BYTE1(v33);
  (*(void (**)(uint64_t *__return_ptr, _QWORD *))(*(_QWORD *)v5 + 128))(&v33, v14);
  v16 = v33;
  type metadata accessor for _XPCDecoder();
  v17 = swift_allocObject();
  v18 = MEMORY[0x1E0DEE9D8];
  v19 = sub_1AD4391D4(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = v19;
  *(_QWORD *)(v17 + 24) = v18;
  *(_BYTE *)(v17 + 16) = v15;
  *(_BYTE *)(v17 + 17) = v16;
  v20 = v32;
  sub_1AD46495C(a3, (uint64_t)v11);
  if (v20)
    return swift_release();
  v21 = v9;
  v23 = v29;
  v22 = v30;
  v24 = *(_QWORD *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v23);
    v25 = sub_1AD63BD8C();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v27 = a1;
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x1E0DEC460], v25);
    swift_willThrow();
    return swift_release();
  }
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v22, v11, a3);
}

uint64_t type metadata accessor for _XPCDecoder()
{
  return objc_opt_self();
}

uint64_t XPCDecoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t XPCDecoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1AD4642D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = v3;
  v7 = *(_QWORD *)(v3 + 32);
  swift_getObjectType();
  if (sub_1AD0E2144())
  {
    v8 = sub_1AD63BD8C();
    swift_allocError();
    v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v10 = sub_1AD63BFA8();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, *MEMORY[0x1E0DEC460], v8);
  }
  else
  {
    if (sub_1AD0E1E64() == 7)
    {
      swift_retain();
      swift_unknownObjectRetain();
      sub_1AD464640(v4);
      v12 = type metadata accessor for _XPCKeyedDecodingContainer(0, a2, a3, v11);
      MEMORY[0x1AF44BDF0](&unk_1AD686B20, v12);
      return sub_1AD63BFB4();
    }
    swift_beginAccess();
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1D18);
    sub_1AD63BD8C();
    swift_allocError();
    v16 = v15;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(v14, v7, v16);
    swift_bridgeObjectRelease();
  }
  return swift_willThrow();
}

uint64_t sub_1AD4644E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  sub_1AD63BD38();
  swift_bridgeObjectRelease();
  sub_1AD63C578();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD46D928(a2);
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
  *a3 = a1;
  swift_bridgeObjectRetain();
  sub_1AD63BD68();
  v6 = *MEMORY[0x1E0DEC450];
  v7 = sub_1AD63BD8C();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a3, v6, v7);
}

uint64_t sub_1AD464640(uint64_t a1)
{
  uint64_t result;

  swift_getObjectType();
  if (sub_1AD0E1E64() == 7)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    return a1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD464700@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 32);
  swift_getObjectType();
  if (sub_1AD0E2144())
  {
    v5 = sub_1AD63BD8C();
    swift_allocError();
    v7 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC7A0);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0DEC460], v5);
    return swift_willThrow();
  }
  if (sub_1AD0E1E64() != 6)
  {
    swift_beginAccess();
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDC790);
    sub_1AD63BD8C();
    swift_allocError();
    v13 = v12;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(v11, v4, v13);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  swift_retain();
  swift_unknownObjectRetain();
  if (sub_1AD0E1E64() == 6)
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(v2 + 24);
    a1[3] = &type metadata for _XPCUnkeyedDecodingContainer;
    a1[4] = sub_1AD46EF64();
    v9 = (_QWORD *)swift_allocObject();
    *a1 = v9;
    v9[2] = v2;
    v9[3] = v4;
    v9[4] = v8;
    v9[5] = 0;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD46495C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  type metadata accessor for _XPCDecoder();
  sub_1AD46EFE8(qword_1ED2E73F8, (uint64_t)&unk_1AD686A68);
  swift_retain();
  result = sub_1AD63BB10();
  if (!v2)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 0, 1, a1);
  return result;
}

unint64_t sub_1AD464A18()
{
  unint64_t result;

  result = qword_1EECDC778;
  if (!qword_1EECDC778)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for XPCDecoder.DataDecodingStrategy, &type metadata for XPCDecoder.DataDecodingStrategy);
    atomic_store(result, (unint64_t *)&qword_1EECDC778);
  }
  return result;
}

unint64_t sub_1AD464A60()
{
  unint64_t result;

  result = qword_1EECDC780;
  if (!qword_1EECDC780)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for XPCDecoder.UUIDDecodingStrategy, &type metadata for XPCDecoder.UUIDDecodingStrategy);
    atomic_store(result, (unint64_t *)&qword_1EECDC780);
  }
  return result;
}

_QWORD *sub_1AD464AA4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(**(_QWORD **)a1 + 104))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1AD464AE4(char *a1, uint64_t *a2)
{
  uint64_t v2;
  char v4;

  v2 = *a2;
  v4 = *a1;
  return (*(uint64_t (**)(char *))(*(_QWORD *)v2 + 112))(&v4);
}

_QWORD *sub_1AD464B20@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(**(_QWORD **)a1 + 128))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1AD464B60(char *a1, uint64_t *a2)
{
  uint64_t v2;
  char v4;

  v2 = *a2;
  v4 = *a1;
  return (*(uint64_t (**)(char *))(*(_QWORD *)v2 + 136))(&v4);
}

uint64_t type metadata accessor for XPCDecoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCDecoder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of XPCDecoder.dataDecodingStrategy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of XPCDecoder.dataDecodingStrategy.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of XPCDecoder.dataDecodingStrategy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of XPCDecoder.uuidDecodingStrategy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of XPCDecoder.uuidDecodingStrategy.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of XPCDecoder.uuidDecodingStrategy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of XPCDecoder.decode<A>(_:from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t storeEnumTagSinglePayload for XPCDecoder.DataDecodingStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD464C80 + 4 * byte_1AD6867F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD464CB4 + 4 * asc_1AD6867F0[v4]))();
}

uint64_t sub_1AD464CB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD464CBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD464CC4);
  return result;
}

uint64_t sub_1AD464CD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD464CD8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD464CDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD464CE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCDecoder.DataDecodingStrategy()
{
  return &type metadata for XPCDecoder.DataDecodingStrategy;
}

uint64_t storeEnumTagSinglePayload for XPCDecoder.UUIDDecodingStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD464D4C + 4 * byte_1AD6867FF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD464D80 + 4 * byte_1AD6867FA[v4]))();
}

uint64_t sub_1AD464D80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD464D88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD464D90);
  return result;
}

uint64_t sub_1AD464D9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD464DA4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD464DA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD464DB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCDecoder.UUIDDecodingStrategy()
{
  return &type metadata for XPCDecoder.UUIDDecodingStrategy;
}

uint64_t sub_1AD464DCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  unint64_t v17;
  int v18;
  uint64_t v19[3];
  uint64_t v20;

  if (a2 == MEMORY[0x1E0CB0338])
  {
    result = sub_1AD464FCC(a1);
    if (v5)
      return result;
    if (v17 >> 60 != 15)
    {
      v19[0] = result;
      v19[1] = v17;
LABEL_13:
      v18 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v18 ^ 1u, 1, a3);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
  }
  if (__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7148) == a2)
  {
    result = sub_1AD465220(a1, (uint64_t)v19);
    if (v5)
      return result;
    if ((v19[0] & 0x100000000) == 0)
      goto LABEL_13;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
  }
  if (__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7150) != a2)
  {
    swift_beginAccess();
    v10 = *(_QWORD *)(v4 + 24);
    v20 = a3;
    v11 = a4;
    v12 = *(_BYTE *)(v4 + 16);
    v13 = *(_BYTE *)(v4 + 17);
    type metadata accessor for _XPCDecoder();
    v14 = swift_allocObject();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1AD4391D4(MEMORY[0x1E0DEE9D8]);
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)(v14 + 40) = v15;
    *(_QWORD *)(v14 + 24) = v10;
    *(_BYTE *)(v14 + 16) = v12;
    *(_BYTE *)(v14 + 17) = v13;
    sub_1AD46495C(v20, v11);
    return swift_release();
  }
  result = sub_1AD4653D0(a1, v19);
  if (!v5)
  {
    if (v19[0])
      goto LABEL_13;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
  }
  return result;
}

uint64_t sub_1AD464FCC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t length;
  uint64_t v5;
  _BYTE *bytes_ptr;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v2 = v1;
  swift_getObjectType();
  if (sub_1AD0E2144())
    return 0;
  if (!*(_BYTE *)(v2 + 16))
  {
    a1 = (_QWORD *)sub_1AD63BD8C();
    swift_allocError();
    v8 = v7;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, _QWORD *))(*(a1 - 1) + 104))(v8, *MEMORY[0x1E0DEC458], a1);
LABEL_18:
    swift_willThrow();
    return (uint64_t)a1;
  }
  if (*(_BYTE *)(v2 + 16) != 1)
  {
    if (sub_1AD0E2144())
      return 0;
    if (sub_1AD0E1E64() == 3)
    {
      if (xpc_string_get_string_ptr(a1))
      {
        sub_1AD63B81C();
        a1 = (_QWORD *)sub_1AD63AF7C();
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
      return 0;
    }
    swift_beginAccess();
    sub_1AD63BD8C();
    swift_allocError();
    v10 = v12;
    swift_bridgeObjectRetain();
    v11 = MEMORY[0x1E0DEA968];
    goto LABEL_17;
  }
  if (sub_1AD0E1E64() != 5)
  {
    swift_beginAccess();
    sub_1AD63BD8C();
    swift_allocError();
    v10 = v9;
    swift_bridgeObjectRetain();
    v11 = MEMORY[0x1E0CB0338];
LABEL_17:
    sub_1AD4644E8(v11, (uint64_t)a1, v10);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  length = xpc_data_get_length(a1);
  if (length >= 1 && (v5 = length, (bytes_ptr = xpc_data_get_bytes_ptr(a1)) != 0))
    return sub_1AD3DB9F0(bytes_ptr, v5);
  else
    return 0;
}

uint64_t sub_1AD465220@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    *(_DWORD *)a2 = 0;
    *(_BYTE *)(a2 + 4) = 1;
    return result;
  }
  if (sub_1AD0E1E64() == 7)
  {
    if (xpc_dictionary_get_value(a1, "mpr_p"))
    {
      v5 = xpc_mach_send_copy_right();
      result = swift_unknownObjectRelease();
      *(_DWORD *)a2 = v5;
      *(_BYTE *)(a2 + 4) = 0;
      return result;
    }
    v9 = sub_1AD63BD8C();
    swift_allocError();
    v11 = v10;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x1E0DEC458], v9);
  }
  else
  {
    swift_beginAccess();
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1D18);
    sub_1AD63BD8C();
    swift_allocError();
    v8 = v7;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(v6, (uint64_t)a1, v8);
    swift_bridgeObjectRelease();
  }
  return swift_willThrow();
}

uint64_t sub_1AD4653D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  xpc_object_t v6;
  _QWORD *v7;
  char v8;
  vm_size_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  mem_entry_name_port_t v20;
  char v21;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    *a2 = 0;
    return result;
  }
  if (sub_1AD0E1E64() != 7)
  {
    swift_beginAccess();
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1D18);
    sub_1AD63BD8C();
    swift_allocError();
    v15 = v14;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(v13, (uint64_t)a1, v15);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  v6 = xpc_dictionary_get_value(a1, "mpr_s");
  if (!v6)
  {
    v16 = sub_1AD63BD8C();
    swift_allocError();
    v18 = v17;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x1E0DEC458], v16);
    return swift_willThrow();
  }
  v7 = sub_1AD46E140(v6, 7630409, 0xE300000000000000, MEMORY[0x1E0DEB418]);
  if (v2)
    return swift_unknownObjectRelease();
  if ((v8 & 1) != 0 || (v9 = (vm_size_t)v7, sub_1AD465220(a1, (uint64_t)&v20), (v21 & 1) != 0))
  {
    swift_beginAccess();
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1D18);
    sub_1AD63BD8C();
    swift_allocError();
    v12 = v11;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(v10, (uint64_t)a1, v12);
    swift_bridgeObjectRelease();
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  type metadata accessor for MachImage();
  swift_allocObject();
  v19 = sub_1AD59CB44(&v20, v9);
  result = swift_unknownObjectRelease();
  *a2 = v19;
  return result;
}

uint64_t sub_1AD46568C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t getEnumTagSinglePayload for XPCDecoder.Options(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCDecoder.Options(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD4657A0 + 4 * byte_1AD686809[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1AD4657D4 + 4 * byte_1AD686804[v4]))();
}

uint64_t sub_1AD4657D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AD4657DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1AD4657E4);
  return result;
}

uint64_t sub_1AD4657F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1AD4657F8);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_1AD4657FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AD465804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCDecoder.Options()
{
  return &type metadata for XPCDecoder.Options;
}

uint64_t sub_1AD465824()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD465830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD4642D8(a1, a2, a3);
}

uint64_t sub_1AD465850@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AD464700(a1);
}

uint64_t sub_1AD465870@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  a1[3] = type metadata accessor for _XPCDecoder();
  a1[4] = sub_1AD46EFE8(&qword_1ED2E61F0, (uint64_t)&unk_1AD6869B0);
  *a1 = v3;
  return swift_retain();
}

uint64_t sub_1AD4658D0()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEA968];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD4659F4()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEAFA0];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD465B18()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEB418];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD465C3C()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEDA70];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD465D60()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEDB58];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD465E84()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEDBC8];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD465FA8()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEDC60];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD4660CC()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEBB98];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD4661F0()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEDE70];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD466314()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEE068];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD466438()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEE0F8];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD46655C()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEE190];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD466680()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEB188];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD4667A4()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v1 = sub_1AD63BD8C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v3 = MEMORY[0x1E0DEB070];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC460], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD4668C8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  swift_getObjectType();
  result = sub_1AD0E2144();
  if ((result & 1) != 0)
  {
    v3 = sub_1AD63BD8C();
    swift_allocError();
    v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v5 = a1;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63C578();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x1E0DEC460], v3);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD466A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  _QWORD *v4;
  _QWORD *v5;

  result = sub_1AD4658D0();
  if (!v1)
  {
    v3 = *(void **)(v0 + 32);
    swift_getObjectType();
    result = sub_1AD0E2144();
    if ((result & 1) != 0)
    {
      __break(1u);
LABEL_9:
      __break(1u);
      return result;
    }
    if (sub_1AD0E1E64() == 3)
    {
      result = (uint64_t)xpc_string_get_string_ptr(v3);
      if (result)
        return sub_1AD63B81C();
      goto LABEL_9;
    }
    swift_beginAccess();
    sub_1AD63BD8C();
    swift_allocError();
    v5 = v4;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(MEMORY[0x1E0DEA968], (uint64_t)v3, v5);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD466B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v8 = sub_1AD63BC48();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - v9;
  result = sub_1AD4668C8(a1);
  if (!v4)
  {
    sub_1AD464DCC(*(_QWORD **)(v3 + 32), a1, a2, (uint64_t)v10);
    v12 = *(_QWORD *)(a2 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, a2);
    if ((_DWORD)result == 1)
      __break(1u);
    else
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a3, v10, a2);
  }
  return result;
}

uint64_t sub_1AD466C14()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

BOOL sub_1AD466C54()
{
  swift_getObjectType();
  return sub_1AD0E2144();
}

BOOL sub_1AD466C84()
{
  return sub_1AD46ECC0();
}

uint64_t sub_1AD466CA8()
{
  return sub_1AD466A38();
}

void sub_1AD466CC8()
{
  sub_1AD46EE84();
}

void sub_1AD466CE8()
{
  sub_1AD46EDA0();
}

uint64_t sub_1AD466D08()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = *v0;
  result = sub_1AD465B18();
  if (!v1)
  {
    result = (uint64_t)sub_1AD46E140(*(void **)(v2 + 32), 7630409, 0xE300000000000000, MEMORY[0x1E0DEB418]);
    if ((v4 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1AD466D54(uint64_t a1, uint64_t a2)
{
  return sub_1AD466E94(a1, a2, sub_1AD465C3C, (uint64_t (*)(_QWORD))sub_1AD46DA6C);
}

uint64_t sub_1AD466D78(uint64_t a1, uint64_t a2)
{
  return sub_1AD466EF4(a1, a2, sub_1AD465D60, (uint64_t (*)(_QWORD))sub_1AD46DCAC);
}

uint64_t sub_1AD466D9C(uint64_t a1, uint64_t a2)
{
  return sub_1AD466F54(a1, a2, sub_1AD465E84, (uint64_t (*)(_QWORD))sub_1AD46DEF0);
}

uint64_t sub_1AD466DC0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = *v0;
  result = sub_1AD465FA8();
  if (!v1)
  {
    result = (uint64_t)sub_1AD46E140(*(void **)(v2 + 32), 0x3436746E49, 0xE500000000000000, MEMORY[0x1E0DEDC60]);
    if ((v4 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1AD466E10()
{
  return sub_1AD63C2C0();
}

uint64_t sub_1AD466E24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = *v0;
  result = sub_1AD4660CC();
  if (!v1)
  {
    result = (uint64_t)sub_1AD46EA6C(*(void **)(v2 + 32), 1953384789, 0xE400000000000000, MEMORY[0x1E0DEBB98]);
    if ((v4 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1AD466E70(uint64_t a1, uint64_t a2)
{
  return sub_1AD466E94(a1, a2, sub_1AD4661F0, (uint64_t (*)(_QWORD))sub_1AD46E394);
}

uint64_t sub_1AD466E94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;

  v7 = *v4;
  result = a3();
  if (!v5)
  {
    result = a4(*(_QWORD *)(v7 + 32));
    if ((result & 0x100) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1AD466ED0(uint64_t a1, uint64_t a2)
{
  return sub_1AD466EF4(a1, a2, sub_1AD466314, (uint64_t (*)(_QWORD))sub_1AD46E5D8);
}

uint64_t sub_1AD466EF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;

  v7 = *v4;
  result = a3();
  if (!v5)
  {
    result = a4(*(_QWORD *)(v7 + 32));
    if ((result & 0x10000) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1AD466F30(uint64_t a1, uint64_t a2)
{
  return sub_1AD466F54(a1, a2, sub_1AD466438, (uint64_t (*)(_QWORD))sub_1AD46E81C);
}

uint64_t sub_1AD466F54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;

  v7 = *v4;
  result = a3();
  if (!v5)
  {
    result = a4(*(_QWORD *)(v7 + 32));
    if ((result & 0x100000000) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1AD466F90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = *v0;
  result = sub_1AD46655C();
  if (!v1)
  {
    result = (uint64_t)sub_1AD46EA6C(*(void **)(v2 + 32), 0x3436746E4955, 0xE600000000000000, MEMORY[0x1E0DEE190]);
    if ((v4 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1AD466FE0()
{
  return sub_1AD63C2CC();
}

uint64_t sub_1AD466FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AD466B24(a1, a2, a3);
}

uint64_t sub_1AD467014()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int64_t v3;
  id v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(_QWORD *)(v1 + 24);
  if (v3 >= (uint64_t)xpc_array_get_count(v2))
  {
    v7 = sub_1AD63BD8C();
    swift_allocError();
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC5F0);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v11 = *(_QWORD *)(v1 + 24);
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v12 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(v12 + 16) = 0x207865646E49;
    *(_QWORD *)(v12 + 24) = 0xE600000000000000;
    *(_QWORD *)(v12 + 32) = v11;
    *(_BYTE *)(v12 + 40) = 0;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v9, *MEMORY[0x1E0DEC460], v7);
    swift_willThrow();
  }
  else
  {
    v4 = xpc_array_get_value(v2, v3);
    swift_getObjectType();
    v5 = sub_1AD0E1E64();
    swift_unknownObjectRelease();
    if (v5 == 11)
    {
      *(_QWORD *)(v1 + 24) = v3 + 1;
      v6 = 1;
    }
    else
    {
      v6 = 0;
    }
  }
  return v6 & 1;
}

_QWORD *sub_1AD46726C()
{
  uint64_t *v0;
  uint64_t *v1;
  void *v2;
  int64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  xpc_object_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v32;
  unint64_t v33;
  __int128 v34;
  ValueMetadata *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v1 = v0;
  v39 = *MEMORY[0x1E0C80C00];
  v2 = (void *)v0[1];
  v3 = v0[3];
  if (v3 >= (uint64_t)xpc_array_get_count(v2))
  {
    v22 = sub_1AD63BD8C();
    swift_allocError();
    v5 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v5 = MEMORY[0x1E0DEA968];
    v24 = *v0;
    swift_beginAccess();
    v25 = *(_QWORD *)(v24 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v27 = v1[3];
    v38 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v28 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(v28 + 16) = 0x207865646E49;
    *(_QWORD *)(v28 + 24) = 0xE600000000000000;
    *(_QWORD *)(v28 + 32) = v27;
    *(_BYTE *)(v28 + 40) = 0;
    v37 = v25;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v5, *MEMORY[0x1E0DEC460], v22);
    swift_willThrow();
  }
  else
  {
    v4 = *v0;
    *(_QWORD *)&v34 = 0x207865646E49;
    *((_QWORD *)&v34 + 1) = 0xE600000000000000;
    v37 = v3;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v5 = (_QWORD *)0xE600000000000000;
    swift_beginAccess();
    v6 = *(_QWORD **)(v4 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v4 + 24) = v6;
    v32 = (_QWORD *)(v4 + 24);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1AD3CACBC(0, v6[2] + 1, 1, v6);
      *(_QWORD *)(v4 + 24) = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1AD3CACBC((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v32 = v6;
    }
    v35 = &type metadata for XPCCodingKey;
    v33 = sub_1AD46F2A0();
    v36 = v33;
    v10 = swift_allocObject();
    *(_QWORD *)&v34 = v10;
    *(_QWORD *)(v10 + 16) = 0x207865646E49;
    *(_QWORD *)(v10 + 24) = 0xE600000000000000;
    *(_QWORD *)(v10 + 32) = v3;
    *(_BYTE *)(v10 + 40) = 0;
    v6[2] = v9 + 1;
    sub_1AD00FA24(&v34, (uint64_t)&v6[5 * v9 + 4]);
    swift_endAccess();
    v11 = xpc_array_get_value(v2, v3);
    swift_getObjectType();
    if (sub_1AD0E2144())
      goto LABEL_7;
    if (sub_1AD0E1E64() != 3)
    {
      sub_1AD63BD8C();
      swift_allocError();
      v30 = v29;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEA968], (uint64_t)v11, v30);
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_unknownObjectRelease();
      goto LABEL_13;
    }
    if (!xpc_string_get_string_ptr(v11))
    {
LABEL_7:
      swift_unknownObjectRelease();
      v12 = sub_1AD63BD8C();
      swift_allocError();
      v14 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v14 = MEMORY[0x1E0DEA968];
      v15 = *v1;
      swift_beginAccess();
      v16 = *(_QWORD *)(v15 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v17 = swift_initStackObject();
      *(_OWORD *)(v17 + 16) = xmmword_1AD648160;
      v18 = v1[3];
      v37 = 0x207865646E49;
      v38 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v19 = v37;
      v20 = v38;
      *(_QWORD *)(v17 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v17 + 64) = v33;
      v21 = swift_allocObject();
      *(_QWORD *)(v17 + 32) = v21;
      *(_QWORD *)(v21 + 16) = v19;
      *(_QWORD *)(v21 + 24) = v20;
      *(_QWORD *)(v21 + 32) = v18;
      *(_BYTE *)(v21 + 40) = 0;
      v37 = v16;
      sub_1AD6034C8(v17);
      v5 = (_QWORD *)v37;
      v37 = 0;
      v38 = 0xE000000000000000;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x1E0DEC460], v12);
      swift_willThrow();
LABEL_13:
      sub_1AD468728(v1);
      return v5;
    }
    v5 = (_QWORD *)sub_1AD63B81C();
    swift_unknownObjectRelease();
    v1[3] = v3 + 1;
    sub_1AD468728(v1);
  }
  return v5;
}

uint64_t sub_1AD467830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t inited;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  int v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  ValueMetadata *v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;

  v60 = a3;
  v68 = *MEMORY[0x1E0C80C00];
  v8 = sub_1AD63BC48();
  v58 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v51 - v9;
  v11 = (void *)v4[1];
  v12 = v4[3];
  if (v12 >= (uint64_t)xpc_array_get_count(v11))
  {
    v27 = sub_1AD63BD8C();
    swift_allocError();
    v29 = v28;
    v61 = (uint64_t)v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0) + 48);
    *v29 = a1;
    v30 = *v4;
    swift_beginAccess();
    v31 = *(_QWORD *)(v30 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v33 = v4[3];
    v66 = 0x207865646E49;
    v67 = 0xE600000000000000;
    v62 = v33;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v34 = v66;
    v35 = v67;
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v36 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v36;
    *(_QWORD *)(v36 + 16) = v34;
    *(_QWORD *)(v36 + 24) = v35;
    *(_QWORD *)(v36 + 32) = v33;
    *(_BYTE *)(v36 + 40) = 0;
    v66 = v31;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x1E0DEC460], v27);
    return swift_willThrow();
  }
  else
  {
    v52 = v8;
    v57 = v4;
    v13 = *v4;
    *(_QWORD *)&v63 = 0x207865646E49;
    *((_QWORD *)&v63 + 1) = 0xE600000000000000;
    v66 = v12;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v54 = *((_QWORD *)&v63 + 1);
    v55 = v63;
    v14 = (_QWORD *)(v13 + 24);
    swift_beginAccess();
    v15 = *(_QWORD **)(v13 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v13 + 24) = v15;
    v59 = a1;
    v53 = a4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_1AD3CACBC(0, v15[2] + 1, 1, v15);
      *v14 = v15;
    }
    v18 = v15[2];
    v17 = v15[3];
    v56 = a2;
    if (v18 >= v17 >> 1)
    {
      v15 = sub_1AD3CACBC((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
      *v14 = v15;
    }
    v64 = &type metadata for XPCCodingKey;
    v19 = sub_1AD46F2A0();
    v65 = v19;
    v20 = swift_allocObject();
    *(_QWORD *)&v63 = v20;
    v21 = v54;
    *(_QWORD *)(v20 + 16) = v55;
    *(_QWORD *)(v20 + 24) = v21;
    *(_QWORD *)(v20 + 32) = v12;
    *(_BYTE *)(v20 + 40) = 0;
    v15[2] = v18 + 1;
    sub_1AD00FA24(&v63, (uint64_t)&v15[5 * v18 + 4]);
    swift_endAccess();
    v22 = xpc_array_get_value(v11, v12);
    v23 = v59;
    v24 = v56;
    v25 = v61;
    sub_1AD464DCC(v22, v59, v56, (uint64_t)v10);
    if (v25)
    {
      swift_unknownObjectRelease();
      v26 = v57;
    }
    else
    {
      swift_unknownObjectRelease();
      v38 = *(_QWORD *)(v24 - 8);
      v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v10, 1, v24);
      v40 = v57;
      if (v39 == 1)
      {
        (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v52);
        v41 = sub_1AD63BD8C();
        v61 = swift_allocError();
        v43 = v42;
        v60 = (char *)v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0) + 48);
        *v43 = v23;
        v44 = *v40;
        swift_beginAccess();
        v45 = *(_QWORD *)(v44 + 24);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
        v46 = swift_initStackObject();
        *(_OWORD *)(v46 + 16) = xmmword_1AD648160;
        v47 = v40[3];
        v66 = 0x207865646E49;
        v67 = 0xE600000000000000;
        v62 = v47;
        swift_bridgeObjectRetain();
        sub_1AD63C0D4();
        sub_1AD63B810();
        swift_bridgeObjectRelease();
        v48 = v66;
        v49 = v67;
        *(_QWORD *)(v46 + 56) = &type metadata for XPCCodingKey;
        *(_QWORD *)(v46 + 64) = v19;
        v50 = swift_allocObject();
        *(_QWORD *)(v46 + 32) = v50;
        *(_QWORD *)(v50 + 16) = v48;
        *(_QWORD *)(v50 + 24) = v49;
        *(_QWORD *)(v50 + 32) = v47;
        *(_BYTE *)(v50 + 40) = 0;
        v66 = v45;
        sub_1AD6034C8(v46);
        v66 = 0;
        v67 = 0xE000000000000000;
        sub_1AD63BD38();
        swift_bridgeObjectRelease();
        v66 = 0x6465746365707845;
        v67 = 0xE900000000000020;
        sub_1AD63C578();
        sub_1AD63B810();
        swift_bridgeObjectRelease();
        sub_1AD63B810();
        sub_1AD63BD68();
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *MEMORY[0x1E0DEC460], v41);
        swift_willThrow();
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v53, v10, v24);
        v40[3] = v12 + 1;
      }
      v26 = v40;
    }
    return sub_1AD468728(v26);
  }
}

uint64_t sub_1AD467EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  int64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  xpc_object_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  _QWORD *v28;
  __int128 v30;
  uint64_t v31;
  ValueMetadata *v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;

  v4 = v3;
  v35 = a2;
  v5 = *v3;
  v6 = v3[3];
  *(_QWORD *)&v30 = 0x207865646E49;
  *((_QWORD *)&v30 + 1) = 0xE600000000000000;
  v34 = v6;
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(v5 + 24);
  swift_beginAccess();
  v8 = *(_QWORD **)(v5 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v5 + 24) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_1AD3CACBC(0, v8[2] + 1, 1, v8);
    *v7 = v8;
  }
  v11 = v8[2];
  v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    v8 = sub_1AD3CACBC((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
    *v7 = v8;
  }
  v32 = &type metadata for XPCCodingKey;
  v33 = sub_1AD46F2A0();
  v12 = swift_allocObject();
  *(_QWORD *)&v30 = v12;
  *(_QWORD *)(v12 + 16) = 0x207865646E49;
  *(_QWORD *)(v12 + 24) = 0xE600000000000000;
  *(_QWORD *)(v12 + 32) = v6;
  *(_BYTE *)(v12 + 40) = 0;
  v8[2] = v11 + 1;
  sub_1AD00FA24(&v30, (uint64_t)&v8[5 * v11 + 4]);
  swift_endAccess();
  v13 = (void *)v4[1];
  if (v6 >= (uint64_t)xpc_array_get_count(v13))
  {
    v18 = sub_1AD63BD8C();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v20 = sub_1AD63BFA8();
    swift_bridgeObjectRetain();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC460], v18);
    swift_willThrow();
  }
  else
  {
    v14 = xpc_array_get_value(v13, v6);
    swift_getObjectType();
    if (sub_1AD0E2144())
    {
      v15 = sub_1AD63BD8C();
      swift_allocError();
      v17 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v17 = sub_1AD63BFA8();
      swift_bridgeObjectRetain();
      sub_1AD63BD68();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
    }
    else
    {
      if (sub_1AD0E1E64() == 7)
      {
        v4[3] = v6 + 1;
        swift_retain();
        swift_unknownObjectRetain();
        v21 = v35;
        *(_QWORD *)&v30 = sub_1AD464640(v5);
        *((_QWORD *)&v30 + 1) = v22;
        v31 = v23;
        v25 = type metadata accessor for _XPCKeyedDecodingContainer(0, v21, a3, v24);
        MEMORY[0x1AF44BDF0](&unk_1AD686B20, v25);
        sub_1AD63BFB4();
        swift_unknownObjectRelease();
        return sub_1AD468728(v4);
      }
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1D18);
      sub_1AD63BD8C();
      swift_allocError();
      sub_1AD4644E8(v27, (uint64_t)v14, v28);
    }
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  return sub_1AD468728(v4);
}

uint64_t sub_1AD4682D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  int64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  xpc_object_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t result;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  ValueMetadata *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;

  v3 = v1;
  v5 = *v1;
  v6 = v1[3];
  *(_QWORD *)&v26 = 0x207865646E49;
  *((_QWORD *)&v26 + 1) = 0xE600000000000000;
  v29 = v6;
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(v5 + 24);
  swift_beginAccess();
  v8 = *(_QWORD **)(v5 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v5 + 24) = v8;
  v30 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_1AD3CACBC(0, v8[2] + 1, 1, v8);
    *v7 = v8;
  }
  v11 = v8[2];
  v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    v8 = sub_1AD3CACBC((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
    *v7 = v8;
  }
  v27 = &type metadata for XPCCodingKey;
  v28 = sub_1AD46F2A0();
  v12 = swift_allocObject();
  *(_QWORD *)&v26 = v12;
  *(_QWORD *)(v12 + 16) = 0x207865646E49;
  *(_QWORD *)(v12 + 24) = 0xE600000000000000;
  *(_QWORD *)(v12 + 32) = v6;
  *(_BYTE *)(v12 + 40) = 0;
  v8[2] = v11 + 1;
  sub_1AD00FA24(&v26, (uint64_t)&v8[5 * v11 + 4]);
  swift_endAccess();
  v13 = (void *)v3[1];
  if (v6 >= (uint64_t)xpc_array_get_count(v13))
  {
    v18 = sub_1AD63BD8C();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC7A0);
    swift_bridgeObjectRetain();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC460], v18);
    swift_willThrow();
    return sub_1AD468728(v3);
  }
  v14 = xpc_array_get_value(v13, v6);
  swift_getObjectType();
  if (sub_1AD0E2144())
  {
    v15 = sub_1AD63BD8C();
    swift_allocError();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC7A0);
    swift_bridgeObjectRetain();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
LABEL_13:
    swift_willThrow();
    swift_unknownObjectRelease();
    return sub_1AD468728(v3);
  }
  if (sub_1AD0E1E64() != 6)
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDC790);
    sub_1AD63BD8C();
    swift_allocError();
    sub_1AD4644E8(v24, (uint64_t)v14, v25);
    goto LABEL_13;
  }
  v3[3] = v6 + 1;
  swift_retain();
  swift_unknownObjectRetain();
  if (sub_1AD0E1E64() == 6)
  {
    v21 = *(_QWORD *)(v5 + 24);
    a1[3] = &type metadata for _XPCUnkeyedDecodingContainer;
    a1[4] = sub_1AD46EF64();
    v22 = (_QWORD *)swift_allocObject();
    *a1 = v22;
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    v22[2] = v5;
    v22[3] = v14;
    v22[4] = v21;
    v22[5] = 0;
    return sub_1AD468728(v3);
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD468728(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v1 = *a1;
  swift_beginAccess();
  v2 = *(_QWORD **)(v1 + 24);
  if (!v2[2])
  {
    __break(1u);
LABEL_6:
    result = (uint64_t)sub_1AD48AD3C(v2);
    v2 = (_QWORD *)result;
    v4 = *(_QWORD *)(result + 16);
    if (v4)
      goto LABEL_4;
    goto LABEL_7;
  }
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_6;
  v4 = v2[2];
  if (v4)
  {
LABEL_4:
    v5 = v4 - 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v2[5 * v4 - 1]);
    v2[2] = v5;
    *(_QWORD *)(v1 + 24) = v2;
    swift_endAccess();
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1AD4687D8()
{
  return swift_bridgeObjectRetain();
}

size_t sub_1AD4687E0()
{
  uint64_t v0;

  return xpc_array_get_count(*(xpc_object_t *)(v0 + 8));
}

BOOL sub_1AD4687FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  return v1 >= (uint64_t)xpc_array_get_count(*(xpc_object_t *)(v0 + 8));
}

uint64_t sub_1AD468828()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1AD468830()
{
  return sub_1AD467014() & 1;
}

unint64_t sub_1AD468848()
{
  return sub_1AD46F308() & 1;
}

_QWORD *sub_1AD468860()
{
  return sub_1AD46726C();
}

double sub_1AD468874()
{
  return sub_1AD472324();
}

float sub_1AD468888()
{
  return sub_1AD471D70();
}

uint64_t *sub_1AD46889C()
{
  return sub_1AD46F8AC();
}

_QWORD *sub_1AD4688B0()
{
  return sub_1AD470890((uint64_t (*)(void))sub_1AD46DA6C, MEMORY[0x1E0DEDA70]);
}

_QWORD *sub_1AD4688EC()
{
  return sub_1AD470DC0((uint64_t (*)(void))sub_1AD46DCAC, MEMORY[0x1E0DEDB58]);
}

unint64_t sub_1AD468928()
{
  return sub_1AD4712F0((uint64_t (*)(void))sub_1AD46DEF0, MEMORY[0x1E0DEDBC8]);
}

uint64_t *sub_1AD468964()
{
  return sub_1AD46FDF4();
}

uint64_t sub_1AD468978()
{
  return sub_1AD63C188();
}

uint64_t *sub_1AD46898C()
{
  return sub_1AD470344();
}

_QWORD *sub_1AD4689A0()
{
  return sub_1AD470890((uint64_t (*)(void))sub_1AD46E394, MEMORY[0x1E0DEDE70]);
}

_QWORD *sub_1AD4689DC()
{
  return sub_1AD470DC0((uint64_t (*)(void))sub_1AD46E5D8, MEMORY[0x1E0DEE068]);
}

unint64_t sub_1AD468A18()
{
  return sub_1AD4712F0((uint64_t (*)(void))sub_1AD46E81C, MEMORY[0x1E0DEE0F8]);
}

uint64_t *sub_1AD468A54()
{
  return sub_1AD471820();
}

uint64_t sub_1AD468A68()
{
  return sub_1AD63C194();
}

uint64_t sub_1AD468A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1AD467830(a1, a2, a3, a4);
}

uint64_t sub_1AD468A90()
{
  return sub_1AD63C134();
}

uint64_t sub_1AD468AA4()
{
  return sub_1AD63C128();
}

uint64_t sub_1AD468AB8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD63C140();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AD468AD8(uint64_t a1, uint64_t a2)
{
  return sub_1AD468C68(a1, a2, MEMORY[0x1E0DED2E0]);
}

uint64_t sub_1AD468AF4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD63C14C();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AD468B14(uint64_t a1, uint64_t a2)
{
  return sub_1AD468BE0(a1, a2, MEMORY[0x1E0DED300]);
}

uint64_t sub_1AD468B30(uint64_t a1, uint64_t a2)
{
  return sub_1AD468C24(a1, a2, MEMORY[0x1E0DED308]);
}

uint64_t sub_1AD468B4C(uint64_t a1, uint64_t a2)
{
  return sub_1AD468C68(a1, a2, MEMORY[0x1E0DED310]);
}

uint64_t sub_1AD468B68()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD63C170();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AD468B88(uint64_t a1, uint64_t a2)
{
  return sub_1AD468CD4(a1, a2, MEMORY[0x1E0DED328]);
}

uint64_t sub_1AD468BA4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD63C158();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AD468BC4(uint64_t a1, uint64_t a2)
{
  return sub_1AD468BE0(a1, a2, MEMORY[0x1E0DED320]);
}

uint64_t sub_1AD468BE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_1AD468C08(uint64_t a1, uint64_t a2)
{
  return sub_1AD468C24(a1, a2, MEMORY[0x1E0DED330]);
}

uint64_t sub_1AD468C24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_1AD468C4C(uint64_t a1, uint64_t a2)
{
  return sub_1AD468C68(a1, a2, MEMORY[0x1E0DED338]);
}

uint64_t sub_1AD468C68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3;

  v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_1AD468C98()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD63C17C();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AD468CB8(uint64_t a1, uint64_t a2)
{
  return sub_1AD468CD4(a1, a2, MEMORY[0x1E0DED348]);
}

uint64_t sub_1AD468CD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = a3();
  if (v3)
    return v5;
  return result;
}

uint64_t sub_1AD468CF8()
{
  return sub_1AD63C164();
}

uint64_t sub_1AD468D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD467EC0(a1, a2, a3);
}

uint64_t sub_1AD468D34@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AD4682D4(a1);
}

void sub_1AD468D48()
{
  sub_1AD63BE28();
  __break(1u);
}

uint64_t sub_1AD468D90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t result;
  uint64_t v12;
  _QWORD aBlock[6];
  uint64_t v14;

  v14 = sub_1AD63B9E4();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a4;
  v8[3] = a5;
  v8[4] = &v14;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1AD4728E4;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1AD2F502C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AD468FA0;
  aBlock[3] = &block_descriptor_1;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_dictionary_apply(a2, v10);
  _Block_release(v10);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = v14;
    swift_release();
    return v12;
  }
  return result;
}

uint64_t sub_1AD468ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v5 = sub_1AD63BC48();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1AD63B81C();
  sub_1AD63C554();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 48))(v7, 1, a4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1AD63BA08();
    sub_1AD63B9FC();
    return 1;
  }
  return result;
}

uint64_t sub_1AD468FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  char v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

BOOL sub_1AD468FF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  xpc_object_t v5;

  sub_1AD63C548();
  v4 = sub_1AD63B7B0();
  swift_bridgeObjectRelease();
  v5 = xpc_dictionary_get_value(a3, (const char *)(v4 + 32));
  swift_release();
  if (v5)
    swift_unknownObjectRelease();
  return v5 != 0;
}

BOOL sub_1AD46906C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  xpc_object_t v9;
  BOOL v10;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *boxed_opaque_existential_0;

  swift_getObjectType();
  sub_1AD63C548();
  v9 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_getObjectType();
    v10 = sub_1AD0E2144();
    swift_unknownObjectRelease();
    return v10;
  }
  else
  {
    v12 = sub_1AD63BD8C();
    swift_allocError();
    v14 = v13;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8);
    v14[3] = a5;
    v14[4] = a6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v14);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_0, a1, a5);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x1E0DEC448], v12);
    swift_willThrow();
    return 0;
  }
}

uint64_t sub_1AD469244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  xpc_object_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  xpc_object_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v41 = a4;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v42 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v38 - v14;
  swift_getObjectType();
  v49 = a1;
  v16 = a6;
  sub_1AD63C548();
  v40 = a3;
  v17 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  v43 = v17;
  if (v17)
  {
    v39 = a6;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v19 = v49;
    v49 = a5;
    v18(v15, v19, a5);
    v20 = (_QWORD *)(a2 + 24);
    swift_beginAccess();
    v21 = *(_QWORD **)(a2 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 24) = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v21 = sub_1AD3CACBC(0, v21[2] + 1, 1, v21);
      *v20 = v21;
    }
    v24 = v21[2];
    v23 = v21[3];
    if (v24 >= v23 >> 1)
      *v20 = sub_1AD3CACBC((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    v25 = (uint64_t)v42;
    v26 = v49;
    v18(v42, (uint64_t)v15, v49);
    sub_1AD5FA2F8(v24, v25, (uint64_t *)(a2 + 24), v26, v39);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v26);
    swift_endAccess();
    v27 = v43;
    swift_getObjectType();
    if (sub_1AD0E2144())
    {
      v16 = sub_1AD63BD8C();
      v44 = swift_allocError();
      v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v29 = MEMORY[0x1E0DEAFA0];
      v47 = 0;
      v48 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v29, *MEMORY[0x1E0DEC460], v16);
      swift_willThrow();
      v30 = a2;
    }
    else
    {
      if (!sub_1AD0E1E64())
      {
        LOBYTE(v16) = xpc_BOOL_get_value(v27);
        sub_1AD46CC40(a2);
        swift_unknownObjectRelease();
        return v16 & 1;
      }
      v16 = *(_QWORD *)(a2 + 24);
      sub_1AD63BD8C();
      swift_allocError();
      v36 = v35;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEAFA0], (uint64_t)v27, v36);
      swift_bridgeObjectRelease();
      swift_willThrow();
      v30 = a2;
    }
    sub_1AD46CC40(v30);
    swift_unknownObjectRelease();
  }
  else
  {
    v31 = sub_1AD63BD8C();
    swift_allocError();
    v33 = v32;
    v44 = (uint64_t)v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v33[3] = a5;
    v33[4] = v16;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v33);
    LOBYTE(v16) = v49;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v49, a5);
    swift_beginAccess();
    v45 = 0;
    v46 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC448], v31);
    swift_willThrow();
  }
  return v16 & 1;
}

_QWORD *sub_1AD4696F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  xpc_object_t v17;
  void (*v18)(char *, void *, uint64_t);
  _QWORD *v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD v47[2];
  _QWORD v48[3];
  void *v49;

  v44 = a4;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v45 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v40 - v14;
  swift_getObjectType();
  v49 = a1;
  v16 = a6;
  sub_1AD63C548();
  v43 = a3;
  v17 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (v17)
  {
    v41 = v11;
    v42 = a6;
    v18 = *(void (**)(char *, void *, uint64_t))(v11 + 16);
    v18(v15, v49, a5);
    v19 = (_QWORD *)(a2 + 24);
    swift_beginAccess();
    v20 = *(_QWORD **)(a2 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 24) = v20;
    v22 = a5;
    v23 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v20 = sub_1AD3CACBC(0, v20[2] + 1, 1, v20);
      *v19 = v20;
    }
    v25 = v20[2];
    v24 = v20[3];
    if (v25 >= v24 >> 1)
      *v19 = sub_1AD3CACBC((_QWORD *)(v24 > 1), v25 + 1, 1, v20);
    v26 = (uint64_t)v45;
    v18(v45, v15, v22);
    sub_1AD5FA2F8(v25, v26, (uint64_t *)(a2 + 24), v22, v42);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v22);
    swift_endAccess();
    v27 = MEMORY[0x1E0DEB418];
    v28 = v23;
    v29 = (_QWORD *)a2;
    v30 = v46;
    v31 = sub_1AD46E140(v23, 7630409, 0xE300000000000000, MEMORY[0x1E0DEB418]);
    if (v30)
    {
      sub_1AD46CC40(a2);
LABEL_12:
      swift_unknownObjectRelease();
      return v29;
    }
    if ((v32 & 1) != 0)
    {
      v36 = sub_1AD63BD8C();
      swift_allocError();
      v49 = v28;
      v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v38 = v27;
      v48[0] = 0;
      v48[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v29 = v48;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *MEMORY[0x1E0DEC460], v36);
      swift_willThrow();
      sub_1AD46CC40(a2);
      goto LABEL_12;
    }
    v29 = v31;
    sub_1AD46CC40(a2);
    swift_unknownObjectRelease();
  }
  else
  {
    v46 = sub_1AD63BD8C();
    swift_allocError();
    v34 = v33;
    v45 = (char *)v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v34[3] = a5;
    v34[4] = v16;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v34);
    (*(void (**)(uint64_t *, void *, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v49, a5);
    swift_beginAccess();
    v47[0] = 0;
    v47[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v29 = v47;
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v46 - 8) + 104))(v34, *MEMORY[0x1E0DEC448]);
    swift_willThrow();
  }
  return v29;
}

_QWORD *sub_1AD469B38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  xpc_object_t v17;
  void (*v18)(char *, void *, uint64_t);
  _QWORD *v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD v47[2];
  _QWORD v48[3];
  void *v49;

  v44 = a4;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v45 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v40 - v14;
  swift_getObjectType();
  v49 = a1;
  v16 = a6;
  sub_1AD63C548();
  v43 = a3;
  v17 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (v17)
  {
    v41 = v11;
    v42 = a6;
    v18 = *(void (**)(char *, void *, uint64_t))(v11 + 16);
    v18(v15, v49, a5);
    v19 = (_QWORD *)(a2 + 24);
    swift_beginAccess();
    v20 = *(_QWORD **)(a2 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 24) = v20;
    v22 = a5;
    v23 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v20 = sub_1AD3CACBC(0, v20[2] + 1, 1, v20);
      *v19 = v20;
    }
    v25 = v20[2];
    v24 = v20[3];
    if (v25 >= v24 >> 1)
      *v19 = sub_1AD3CACBC((_QWORD *)(v24 > 1), v25 + 1, 1, v20);
    v26 = (uint64_t)v45;
    v18(v45, v15, v22);
    sub_1AD5FA2F8(v25, v26, (uint64_t *)(a2 + 24), v22, v42);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v22);
    swift_endAccess();
    v27 = MEMORY[0x1E0DEDC60];
    v28 = v23;
    v29 = (_QWORD *)a2;
    v30 = v46;
    v31 = sub_1AD46E140(v23, 0x3436746E49, 0xE500000000000000, MEMORY[0x1E0DEDC60]);
    if (v30)
    {
      sub_1AD46CC40(a2);
LABEL_12:
      swift_unknownObjectRelease();
      return v29;
    }
    if ((v32 & 1) != 0)
    {
      v36 = sub_1AD63BD8C();
      swift_allocError();
      v49 = v28;
      v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v38 = v27;
      v48[0] = 0;
      v48[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v29 = v48;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *MEMORY[0x1E0DEC460], v36);
      swift_willThrow();
      sub_1AD46CC40(a2);
      goto LABEL_12;
    }
    v29 = v31;
    sub_1AD46CC40(a2);
    swift_unknownObjectRelease();
  }
  else
  {
    v46 = sub_1AD63BD8C();
    swift_allocError();
    v34 = v33;
    v45 = (char *)v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v34[3] = a5;
    v34[4] = v16;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v34);
    (*(void (**)(uint64_t *, void *, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v49, a5);
    swift_beginAccess();
    v47[0] = 0;
    v47[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v29 = v47;
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v46 - 8) + 104))(v34, *MEMORY[0x1E0DEC448]);
    swift_willThrow();
  }
  return v29;
}

_QWORD *sub_1AD469F84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  xpc_object_t v17;
  void (*v18)(char *, void *, uint64_t);
  _QWORD *v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD v47[2];
  _QWORD v48[3];
  void *v49;

  v44 = a4;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v45 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v40 - v14;
  swift_getObjectType();
  v49 = a1;
  v16 = a6;
  sub_1AD63C548();
  v43 = a3;
  v17 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (v17)
  {
    v41 = v11;
    v42 = a6;
    v18 = *(void (**)(char *, void *, uint64_t))(v11 + 16);
    v18(v15, v49, a5);
    v19 = (_QWORD *)(a2 + 24);
    swift_beginAccess();
    v20 = *(_QWORD **)(a2 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 24) = v20;
    v22 = a5;
    v23 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v20 = sub_1AD3CACBC(0, v20[2] + 1, 1, v20);
      *v19 = v20;
    }
    v25 = v20[2];
    v24 = v20[3];
    if (v25 >= v24 >> 1)
      *v19 = sub_1AD3CACBC((_QWORD *)(v24 > 1), v25 + 1, 1, v20);
    v26 = (uint64_t)v45;
    v18(v45, v15, v22);
    sub_1AD5FA2F8(v25, v26, (uint64_t *)(a2 + 24), v22, v42);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v22);
    swift_endAccess();
    v27 = MEMORY[0x1E0DEBB98];
    v28 = v23;
    v29 = (_QWORD *)a2;
    v30 = v46;
    v31 = sub_1AD46EA6C(v23, 1953384789, 0xE400000000000000, MEMORY[0x1E0DEBB98]);
    if (v30)
    {
      sub_1AD46CC40(a2);
LABEL_12:
      swift_unknownObjectRelease();
      return v29;
    }
    if ((v32 & 1) != 0)
    {
      v36 = sub_1AD63BD8C();
      swift_allocError();
      v49 = v28;
      v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v38 = v27;
      v48[0] = 0;
      v48[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v29 = v48;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *MEMORY[0x1E0DEC460], v36);
      swift_willThrow();
      sub_1AD46CC40(a2);
      goto LABEL_12;
    }
    v29 = v31;
    sub_1AD46CC40(a2);
    swift_unknownObjectRelease();
  }
  else
  {
    v46 = sub_1AD63BD8C();
    swift_allocError();
    v34 = v33;
    v45 = (char *)v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v34[3] = a5;
    v34[4] = v16;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v34);
    (*(void (**)(uint64_t *, void *, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v49, a5);
    swift_beginAccess();
    v47[0] = 0;
    v47[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v29 = v47;
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v46 - 8) + 104))(v34, *MEMORY[0x1E0DEC448]);
    swift_willThrow();
  }
  return v29;
}

_QWORD *sub_1AD46A3CC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(char *), uint64_t a8, char *a9, uint64_t (*a10)(char *))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t *v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t (*v53)(char *);
  _QWORD v54[2];
  _QWORD v55[3];
  _QWORD *v56;

  v46 = a8;
  v53 = a7;
  v50 = a4;
  v15 = *(_QWORD *)(a5 - 8);
  v16 = MEMORY[0x1E0C80A78](a1);
  v51 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v45 - v18;
  swift_getObjectType();
  v56 = a1;
  v20 = a6;
  sub_1AD63C548();
  v49 = a3;
  v21 = (char *)sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (v21)
  {
    v47 = v15;
    v48 = a6;
    v22 = *(void (**)(char *, _QWORD *, uint64_t))(v15 + 16);
    v22(v19, v56, a5);
    v23 = a2 + 3;
    swift_beginAccess();
    v24 = (_QWORD *)a2[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56 = a2;
    a2[3] = v24;
    v26 = a5;
    v27 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v24 = sub_1AD3CACBC(0, v24[2] + 1, 1, v24);
      *v23 = (uint64_t)v24;
    }
    v29 = v24[2];
    v28 = v24[3];
    v30 = v47;
    if (v29 >= v28 >> 1)
      *v23 = (uint64_t)sub_1AD3CACBC((_QWORD *)(v28 > 1), v29 + 1, 1, v24);
    v31 = (uint64_t)v51;
    v22(v51, v19, v26);
    sub_1AD5FA2F8(v29, v31, v23, v26, v48);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v26);
    swift_endAccess();
    v32 = v27;
    v33 = v27;
    v34 = (uint64_t)v56;
    v35 = v56;
    v36 = v52;
    v37 = v53(v33);
    if (v36)
    {
      sub_1AD46CC40(v34);
LABEL_12:
      swift_unknownObjectRelease();
      return v35;
    }
    v35 = (_QWORD *)v37;
    if ((v37 & 0x100) != 0)
    {
      v53 = a10;
      v51 = a9;
      v41 = sub_1AD63BD8C();
      swift_allocError();
      v43 = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      v52 = v32;
      *v43 = v46;
      v55[0] = 0;
      v55[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v35 = v55;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *MEMORY[0x1E0DEC460], v41);
      swift_willThrow();
      sub_1AD46CC40(v34);
      goto LABEL_12;
    }
    sub_1AD46CC40(v34);
    swift_unknownObjectRelease();
  }
  else
  {
    v53 = (uint64_t (*)(char *))sub_1AD63BD8C();
    swift_allocError();
    v39 = v38;
    v52 = (char *)v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v39[3] = a5;
    v39[4] = v20;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v39);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(v15 + 16))(boxed_opaque_existential_0, v56, a5);
    swift_beginAccess();
    v54[0] = 0;
    v54[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v35 = v54;
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD))(*((_QWORD *)v53 - 1) + 104))(v39, *MEMORY[0x1E0DEC448]);
    swift_willThrow();
  }
  return v35;
}

_QWORD *sub_1AD46A808(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(char *), uint64_t a8, char *a9, uint64_t (*a10)(char *))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t *v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t (*v53)(char *);
  _QWORD v54[2];
  _QWORD v55[3];
  _QWORD *v56;

  v46 = a8;
  v53 = a7;
  v50 = a4;
  v15 = *(_QWORD *)(a5 - 8);
  v16 = MEMORY[0x1E0C80A78](a1);
  v51 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v45 - v18;
  swift_getObjectType();
  v56 = a1;
  v20 = a6;
  sub_1AD63C548();
  v49 = a3;
  v21 = (char *)sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (v21)
  {
    v47 = v15;
    v48 = a6;
    v22 = *(void (**)(char *, _QWORD *, uint64_t))(v15 + 16);
    v22(v19, v56, a5);
    v23 = a2 + 3;
    swift_beginAccess();
    v24 = (_QWORD *)a2[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56 = a2;
    a2[3] = v24;
    v26 = a5;
    v27 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v24 = sub_1AD3CACBC(0, v24[2] + 1, 1, v24);
      *v23 = (uint64_t)v24;
    }
    v29 = v24[2];
    v28 = v24[3];
    v30 = v47;
    if (v29 >= v28 >> 1)
      *v23 = (uint64_t)sub_1AD3CACBC((_QWORD *)(v28 > 1), v29 + 1, 1, v24);
    v31 = (uint64_t)v51;
    v22(v51, v19, v26);
    sub_1AD5FA2F8(v29, v31, v23, v26, v48);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v26);
    swift_endAccess();
    v32 = v27;
    v33 = v27;
    v34 = (uint64_t)v56;
    v35 = v56;
    v36 = v52;
    v37 = v53(v33);
    if (v36)
    {
      sub_1AD46CC40(v34);
LABEL_12:
      swift_unknownObjectRelease();
      return v35;
    }
    v35 = (_QWORD *)v37;
    if ((v37 & 0x10000) != 0)
    {
      v53 = a10;
      v51 = a9;
      v41 = sub_1AD63BD8C();
      swift_allocError();
      v43 = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      v52 = v32;
      *v43 = v46;
      v55[0] = 0;
      v55[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v35 = v55;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *MEMORY[0x1E0DEC460], v41);
      swift_willThrow();
      sub_1AD46CC40(v34);
      goto LABEL_12;
    }
    sub_1AD46CC40(v34);
    swift_unknownObjectRelease();
  }
  else
  {
    v53 = (uint64_t (*)(char *))sub_1AD63BD8C();
    swift_allocError();
    v39 = v38;
    v52 = (char *)v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v39[3] = a5;
    v39[4] = v20;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v39);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(v15 + 16))(boxed_opaque_existential_0, v56, a5);
    swift_beginAccess();
    v54[0] = 0;
    v54[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v35 = v54;
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD))(*((_QWORD *)v53 - 1) + 104))(v39, *MEMORY[0x1E0DEC448]);
    swift_willThrow();
  }
  return v35;
}

_QWORD *sub_1AD46AC44(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(char *), uint64_t a8, char *a9, uint64_t (*a10)(char *))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t *v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t (*v53)(char *);
  _QWORD v54[2];
  _QWORD v55[3];
  _QWORD *v56;

  v46 = a8;
  v53 = a7;
  v50 = a4;
  v15 = *(_QWORD *)(a5 - 8);
  v16 = MEMORY[0x1E0C80A78](a1);
  v51 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v45 - v18;
  swift_getObjectType();
  v56 = a1;
  v20 = a6;
  sub_1AD63C548();
  v49 = a3;
  v21 = (char *)sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (v21)
  {
    v47 = v15;
    v48 = a6;
    v22 = *(void (**)(char *, _QWORD *, uint64_t))(v15 + 16);
    v22(v19, v56, a5);
    v23 = a2 + 3;
    swift_beginAccess();
    v24 = (_QWORD *)a2[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56 = a2;
    a2[3] = v24;
    v26 = a5;
    v27 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v24 = sub_1AD3CACBC(0, v24[2] + 1, 1, v24);
      *v23 = (uint64_t)v24;
    }
    v29 = v24[2];
    v28 = v24[3];
    v30 = v47;
    if (v29 >= v28 >> 1)
      *v23 = (uint64_t)sub_1AD3CACBC((_QWORD *)(v28 > 1), v29 + 1, 1, v24);
    v31 = (uint64_t)v51;
    v22(v51, v19, v26);
    sub_1AD5FA2F8(v29, v31, v23, v26, v48);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v26);
    swift_endAccess();
    v32 = v27;
    v33 = v27;
    v34 = (uint64_t)v56;
    v35 = v56;
    v36 = v52;
    v37 = v53(v33);
    if (v36)
    {
      sub_1AD46CC40(v34);
LABEL_12:
      swift_unknownObjectRelease();
      return v35;
    }
    v35 = (_QWORD *)v37;
    if ((v37 & 0x100000000) != 0)
    {
      v53 = a10;
      v51 = a9;
      v41 = sub_1AD63BD8C();
      swift_allocError();
      v43 = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      v52 = v32;
      *v43 = v46;
      v55[0] = 0;
      v55[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v35 = v55;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *MEMORY[0x1E0DEC460], v41);
      swift_willThrow();
      sub_1AD46CC40(v34);
      goto LABEL_12;
    }
    sub_1AD46CC40(v34);
    swift_unknownObjectRelease();
  }
  else
  {
    v53 = (uint64_t (*)(char *))sub_1AD63BD8C();
    swift_allocError();
    v39 = v38;
    v52 = (char *)v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v39[3] = a5;
    v39[4] = v20;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v39);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(v15 + 16))(boxed_opaque_existential_0, v56, a5);
    swift_beginAccess();
    v54[0] = 0;
    v54[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v35 = v54;
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD))(*((_QWORD *)v53 - 1) + 104))(v39, *MEMORY[0x1E0DEC448]);
    swift_willThrow();
  }
  return v35;
}

_QWORD *sub_1AD46B080(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  xpc_object_t v17;
  void (*v18)(char *, void *, uint64_t);
  _QWORD *v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD v47[2];
  _QWORD v48[3];
  void *v49;

  v44 = a4;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v45 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v40 - v14;
  swift_getObjectType();
  v49 = a1;
  v16 = a6;
  sub_1AD63C548();
  v43 = a3;
  v17 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (v17)
  {
    v41 = v11;
    v42 = a6;
    v18 = *(void (**)(char *, void *, uint64_t))(v11 + 16);
    v18(v15, v49, a5);
    v19 = (_QWORD *)(a2 + 24);
    swift_beginAccess();
    v20 = *(_QWORD **)(a2 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 24) = v20;
    v22 = a5;
    v23 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v20 = sub_1AD3CACBC(0, v20[2] + 1, 1, v20);
      *v19 = v20;
    }
    v25 = v20[2];
    v24 = v20[3];
    if (v25 >= v24 >> 1)
      *v19 = sub_1AD3CACBC((_QWORD *)(v24 > 1), v25 + 1, 1, v20);
    v26 = (uint64_t)v45;
    v18(v45, v15, v22);
    sub_1AD5FA2F8(v25, v26, (uint64_t *)(a2 + 24), v22, v42);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v22);
    swift_endAccess();
    v27 = MEMORY[0x1E0DEE190];
    v28 = v23;
    v29 = (_QWORD *)a2;
    v30 = v46;
    v31 = sub_1AD46EA6C(v23, 0x3436746E4955, 0xE600000000000000, MEMORY[0x1E0DEE190]);
    if (v30)
    {
      sub_1AD46CC40(a2);
LABEL_12:
      swift_unknownObjectRelease();
      return v29;
    }
    if ((v32 & 1) != 0)
    {
      v36 = sub_1AD63BD8C();
      swift_allocError();
      v49 = v28;
      v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v38 = v27;
      v48[0] = 0;
      v48[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v29 = v48;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *MEMORY[0x1E0DEC460], v36);
      swift_willThrow();
      sub_1AD46CC40(a2);
      goto LABEL_12;
    }
    v29 = v31;
    sub_1AD46CC40(a2);
    swift_unknownObjectRelease();
  }
  else
  {
    v46 = sub_1AD63BD8C();
    swift_allocError();
    v34 = v33;
    v45 = (char *)v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v34[3] = a5;
    v34[4] = v16;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v34);
    (*(void (**)(uint64_t *, void *, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v49, a5);
    swift_beginAccess();
    v47[0] = 0;
    v47[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v29 = v47;
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v46 - 8) + 104))(v34, *MEMORY[0x1E0DEC448]);
    swift_willThrow();
  }
  return v29;
}

float sub_1AD46B4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  float value;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  xpc_object_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v40;
  char *v41;
  xpc_object_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v44 = a4;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v41 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v40 - v15;
  swift_getObjectType();
  v46 = a1;
  v17 = a6;
  sub_1AD63C548();
  v43 = a3;
  v18 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  v42 = v18;
  if (v18)
  {
    v40 = a6;
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v20 = v46;
    v46 = a5;
    v19(v16, v20, a5);
    v21 = (_QWORD *)(a2 + 24);
    swift_beginAccess();
    v22 = *(_QWORD **)(a2 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 24) = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v22 = sub_1AD3CACBC(0, v22[2] + 1, 1, v22);
      *v21 = v22;
    }
    v25 = v22[2];
    v24 = v22[3];
    if (v25 >= v24 >> 1)
      *v21 = sub_1AD3CACBC((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
    v26 = (uint64_t)v41;
    v27 = v46;
    v19(v41, (uint64_t)v16, v46);
    sub_1AD5FA2F8(v25, v26, (uint64_t *)(a2 + 24), v27, v40);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v27);
    swift_endAccess();
    v28 = v42;
    swift_getObjectType();
    if (sub_1AD0E2144())
    {
      v29 = sub_1AD63BD8C();
      v45 = swift_allocError();
      v31 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v31 = MEMORY[0x1E0DEB188];
      v49 = 0;
      v50 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x1E0DEC460], v29);
      swift_willThrow();
      v32 = a2;
LABEL_12:
      sub_1AD46CC40(v32);
      swift_unknownObjectRelease();
      return value;
    }
    if (sub_1AD0E1E64() != 4)
    {
      sub_1AD63BD8C();
      swift_allocError();
      v38 = v37;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEB188], (uint64_t)v28, v38);
      swift_bridgeObjectRelease();
      swift_willThrow();
      v32 = a2;
      goto LABEL_12;
    }
    value = xpc_double_get_value(v28);
    sub_1AD46CC40(a2);
    swift_unknownObjectRelease();
  }
  else
  {
    v33 = sub_1AD63BD8C();
    swift_allocError();
    v35 = v34;
    v45 = (uint64_t)v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v35[3] = a5;
    v35[4] = v17;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(boxed_opaque_existential_0, v46, a5);
    swift_beginAccess();
    v47 = 0;
    v48 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x1E0DEC448], v33);
    swift_willThrow();
  }
  return value;
}

double sub_1AD46B980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double value;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  xpc_object_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v40;
  char *v41;
  xpc_object_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v44 = a4;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v41 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v40 - v15;
  swift_getObjectType();
  v46 = a1;
  v17 = a6;
  sub_1AD63C548();
  v43 = a3;
  v18 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  v42 = v18;
  if (v18)
  {
    v40 = a6;
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v20 = v46;
    v46 = a5;
    v19(v16, v20, a5);
    v21 = (_QWORD *)(a2 + 24);
    swift_beginAccess();
    v22 = *(_QWORD **)(a2 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 24) = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v22 = sub_1AD3CACBC(0, v22[2] + 1, 1, v22);
      *v21 = v22;
    }
    v25 = v22[2];
    v24 = v22[3];
    if (v25 >= v24 >> 1)
      *v21 = sub_1AD3CACBC((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
    v26 = (uint64_t)v41;
    v27 = v46;
    v19(v41, (uint64_t)v16, v46);
    sub_1AD5FA2F8(v25, v26, (uint64_t *)(a2 + 24), v27, v40);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v27);
    swift_endAccess();
    v28 = v42;
    swift_getObjectType();
    if (sub_1AD0E2144())
    {
      v29 = sub_1AD63BD8C();
      v45 = swift_allocError();
      v31 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v31 = MEMORY[0x1E0DEB070];
      v49 = 0;
      v50 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x1E0DEC460], v29);
      swift_willThrow();
      v32 = a2;
LABEL_12:
      sub_1AD46CC40(v32);
      swift_unknownObjectRelease();
      return value;
    }
    if (sub_1AD0E1E64() != 4)
    {
      sub_1AD63BD8C();
      swift_allocError();
      v38 = v37;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEB070], (uint64_t)v28, v38);
      swift_bridgeObjectRelease();
      swift_willThrow();
      v32 = a2;
      goto LABEL_12;
    }
    value = xpc_double_get_value(v28);
    sub_1AD46CC40(a2);
    swift_unknownObjectRelease();
  }
  else
  {
    v33 = sub_1AD63BD8C();
    swift_allocError();
    v35 = v34;
    v45 = (uint64_t)v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v35[3] = a5;
    v35[4] = v17;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(boxed_opaque_existential_0, v46, a5);
    swift_beginAccess();
    v47 = 0;
    v48 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x1E0DEC448], v33);
    swift_willThrow();
  }
  return value;
}

uint64_t sub_1AD46BE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  xpc_object_t v17;
  xpc_object_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v46 = a4;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v47 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v41 - v14;
  swift_getObjectType();
  v52 = a1;
  v16 = a6;
  sub_1AD63C548();
  v45 = a3;
  v17 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (v17)
  {
    v18 = v17;
    v43 = v11;
    v44 = a6;
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v20 = a5;
    v19(v15, v52, a5);
    v21 = (_QWORD *)(a2 + 24);
    swift_beginAccess();
    v22 = *(_QWORD **)(a2 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 24) = v22;
    v42 = a2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v22 = sub_1AD3CACBC(0, v22[2] + 1, 1, v22);
      *v21 = v22;
    }
    v24 = v18;
    v26 = v22[2];
    v25 = v22[3];
    if (v26 >= v25 >> 1)
      *v21 = sub_1AD3CACBC((_QWORD *)(v25 > 1), v26 + 1, 1, v22);
    v27 = (uint64_t)v47;
    v19(v47, (uint64_t)v15, v20);
    sub_1AD5FA2F8(v26, v27, (uint64_t *)(a2 + 24), v20, v44);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v20);
    swift_endAccess();
    swift_getObjectType();
    if (sub_1AD0E2144())
      goto LABEL_7;
    if (sub_1AD0E1E64() != 3)
    {
      v37 = v42;
      v28 = *(_QWORD *)(v42 + 24);
      sub_1AD63BD8C();
      swift_allocError();
      v39 = v38;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEA968], (uint64_t)v24, v39);
      swift_bridgeObjectRelease();
      swift_willThrow();
      v32 = v37;
      goto LABEL_13;
    }
    if (!xpc_string_get_string_ptr(v24))
    {
LABEL_7:
      v28 = sub_1AD63BD8C();
      swift_allocError();
      v30 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v30 = MEMORY[0x1E0DEA968];
      v31 = v42;
      v50 = 0;
      v51 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x1E0DEC460], v28);
      swift_willThrow();
      v32 = v31;
LABEL_13:
      sub_1AD46CC40(v32);
      swift_unknownObjectRelease();
      return v28;
    }
    v28 = sub_1AD63B81C();
    sub_1AD46CC40(v42);
    swift_unknownObjectRelease();
  }
  else
  {
    v33 = sub_1AD63BD8C();
    swift_allocError();
    v35 = v34;
    v47 = (char *)v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v35[3] = a5;
    v35[4] = v16;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    v28 = v52;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v52, a5);
    swift_beginAccess();
    v48 = 0;
    v49 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x1E0DEC448], v33);
    swift_willThrow();
  }
  return v28;
}

uint64_t sub_1AD46C2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  _QWORD *v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v54 = a5;
  v47 = a9;
  v48 = a1;
  v58 = a7;
  v15 = sub_1AD63BC48();
  v45 = *(_QWORD *)(v15 - 8);
  v46 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v57 = (uint64_t)&v44 - v17;
  v18 = *(_QWORD *)(a6 - 8);
  v19 = MEMORY[0x1E0C80A78](v16);
  v55 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v44 - v21;
  swift_getObjectType();
  v63 = a2;
  v23 = a8;
  sub_1AD63C548();
  v53 = a4;
  v24 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (!v24)
  {
    v39 = sub_1AD63BD8C();
    swift_allocError();
    v41 = v40;
    v58 = (uint64_t)v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v41[3] = a6;
    v41[4] = v23;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v41);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 16))(boxed_opaque_existential_0, v63, a6);
    swift_beginAccess();
    v59 = 0;
    v60 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v41, *MEMORY[0x1E0DEC448], v39);
    return swift_willThrow();
  }
  v51 = v24;
  v52 = a8;
  v49 = v18;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v25(v22, v63, a6);
  v26 = (_QWORD *)(a3 + 24);
  swift_beginAccess();
  v27 = *(_QWORD **)(a3 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 24) = v27;
  v50 = a10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v27 = sub_1AD3CACBC(0, v27[2] + 1, 1, v27);
    *v26 = v27;
  }
  v30 = v27[2];
  v29 = v27[3];
  if (v30 >= v29 >> 1)
    *v26 = sub_1AD3CACBC((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
  v31 = (uint64_t)v55;
  v25(v55, (uint64_t)v22, a6);
  sub_1AD5FA2F8(v30, v31, (uint64_t *)(a3 + 24), a6, v52);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v22, a6);
  swift_endAccess();
  v33 = v57;
  v32 = v58;
  v34 = v56;
  sub_1AD464DCC(v51, v58, v58, v57);
  if (v34)
    goto LABEL_11;
  v35 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v32) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v47, v33, v32);
LABEL_11:
    sub_1AD46CC40(a3);
    return swift_unknownObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v33, v46);
  v36 = sub_1AD63BD8C();
  swift_allocError();
  v63 = a6;
  v38 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
  *v38 = v48;
  v61 = 0;
  v62 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1AD63BD38();
  swift_bridgeObjectRelease();
  v61 = 0x6465746365707845;
  v62 = 0xE900000000000020;
  sub_1AD63C578();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63BD68();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *MEMORY[0x1E0DEC460], v36);
  swift_willThrow();
  sub_1AD46CC40(a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD46C7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *);
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  xpc_object_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v38;
  _QWORD *v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v44 = a6;
  v45 = a7;
  v46 = a3;
  v47 = a4;
  v41 = a8;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v40 - v15;
  v17 = *(void (**)(char *))(v11 + 16);
  v19 = v18;
  v17((char *)v40 - v15);
  v20 = (uint64_t *)(a2 + 24);
  swift_beginAccess();
  v21 = *(_QWORD **)(a2 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v43 = a2;
  *(_QWORD *)(a2 + 24) = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_1AD3CACBC(0, v21[2] + 1, 1, v21);
    *v20 = (uint64_t)v21;
  }
  v42 = a9;
  v24 = v21[2];
  v23 = v21[3];
  if (v24 >= v23 >> 1)
    *v20 = (uint64_t)sub_1AD3CACBC((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
  ((void (*)(char *, char *, uint64_t))v17)(v14, v16, a5);
  v25 = v45;
  sub_1AD5FA2F8(v24, (uint64_t)v14, v20, a5, v45);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, a5);
  swift_endAccess();
  swift_getObjectType();
  sub_1AD63C548();
  v26 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (v26)
  {
    swift_getObjectType();
    if (sub_1AD0E1E64() == 7)
    {
      v27 = v43;
      swift_retain();
      swift_unknownObjectRetain();
      v28 = v44;
      v29 = v42;
      v48 = sub_1AD464640(v27);
      v49 = v30;
      v50 = v31;
      v33 = type metadata accessor for _XPCKeyedDecodingContainer(0, v28, v29, v32);
      MEMORY[0x1AF44BDF0](&unk_1AD686B20, v33);
      sub_1AD63BFB4();
      swift_unknownObjectRelease();
      return sub_1AD46CC40(v27);
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1D18);
    sub_1AD63BD8C();
    swift_allocError();
    sub_1AD4644E8(v38, (uint64_t)v26, v39);
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  else
  {
    v41 = sub_1AD63BD8C();
    v51 = swift_allocError();
    v36 = v35;
    v40[1] = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v36[3] = a5;
    v36[4] = v25;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    ((void (*)(uint64_t *, uint64_t, uint64_t))v17)(boxed_opaque_existential_0, v19, a5);
    v48 = 0;
    v49 = 0xE000000000000000;
    v40[0] = v19;
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63BFA8();
    sub_1AD63C578();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v41 - 8) + 104))(v36, *MEMORY[0x1E0DEC448]);
    swift_willThrow();
  }
  return sub_1AD46CC40(v43);
}

uint64_t sub_1AD46CC40(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)(a1 + 24);
  swift_beginAccess();
  v3 = *(_QWORD **)(a1 + 24);
  if (!v3[2])
  {
    __break(1u);
LABEL_6:
    result = (uint64_t)sub_1AD48AD3C(v3);
    v3 = (_QWORD *)result;
    v5 = *(_QWORD *)(result + 16);
    if (v5)
      goto LABEL_4;
    goto LABEL_7;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_6;
  v5 = v3[2];
  if (v5)
  {
LABEL_4:
    v6 = v5 - 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3[5 * v5 - 1]);
    v3[2] = v6;
    *v2 = v3;
    return swift_endAccess();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1AD46CCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t *, uint64_t, uint64_t);
  uint64_t v25;
  xpc_object_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  void (*v41)(char *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v39 = a7;
  v47 = a6;
  v43 = a3;
  v10 = *(_QWORD *)(a5 - 8);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v38 - v14;
  v17 = v16;
  v41 = *(void (**)(char *))(v10 + 16);
  v41((char *)&v38 - v14);
  v18 = (uint64_t *)(a2 + 24);
  swift_beginAccess();
  v19 = *(_QWORD **)(a2 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v42 = a2;
  *(_QWORD *)(a2 + 24) = v19;
  v44 = a4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v19 = sub_1AD3CACBC(0, v19[2] + 1, 1, v19);
    *v18 = (uint64_t)v19;
  }
  v22 = v19[2];
  v21 = v19[3];
  v23 = v17;
  if (v22 >= v21 >> 1)
    *v18 = (uint64_t)sub_1AD3CACBC((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
  v24 = (void (*)(uint64_t *, uint64_t, uint64_t))v41;
  ((void (*)(char *, char *, uint64_t))v41)(v13, v15, a5);
  v25 = v47;
  sub_1AD5FA2F8(v22, (uint64_t)v13, v18, a5, v47);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, a5);
  swift_endAccess();
  swift_getObjectType();
  sub_1AD63C548();
  v26 = sub_1AD0E2164();
  swift_bridgeObjectRelease();
  if (!v26)
  {
    v32 = sub_1AD63BD8C();
    swift_allocError();
    v34 = v33;
    v40 = (char *)v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    v34[3] = a5;
    v34[4] = v25;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v34);
    v24(boxed_opaque_existential_0, v23, a5);
    v45 = 0;
    v46 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C29C();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x1E0DEC448], v32);
    swift_willThrow();
    return sub_1AD46CC40(v42);
  }
  swift_getObjectType();
  if (sub_1AD0E1E64() != 6)
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDC790);
    sub_1AD63BD8C();
    swift_allocError();
    sub_1AD4644E8(v36, (uint64_t)v26, v37);
    swift_willThrow();
    swift_unknownObjectRelease();
    return sub_1AD46CC40(v42);
  }
  v27 = v42;
  swift_retain();
  swift_unknownObjectRetain();
  if (sub_1AD0E1E64() == 6)
  {
    v28 = *(_QWORD *)(v27 + 24);
    v29 = v39;
    v39[3] = &type metadata for _XPCUnkeyedDecodingContainer;
    v29[4] = sub_1AD46EF64();
    v30 = (_QWORD *)swift_allocObject();
    *v29 = v30;
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    v30[2] = v27;
    v30[3] = v26;
    v30[4] = v28;
    v30[5] = 0;
    return sub_1AD46CC40(v27);
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void sub_1AD46D128()
{
  sub_1AD63BE28();
  __break(1u);
}

void sub_1AD46D170()
{
  sub_1AD63BE28();
  __break(1u);
}

uint64_t sub_1AD46D1B8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD468D90(*(_QWORD *)v1, *(void **)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

BOOL sub_1AD46D1CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD468FF0(a1, *(_QWORD *)v1, *(void **)(v1 + 8));
}

uint64_t sub_1AD46D1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D220(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD46906C) & 1;
}

uint64_t sub_1AD46D200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D220(a1, a2, a3, sub_1AD469244) & 1;
}

uint64_t sub_1AD46D220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, *v4, v4[1], v4[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24)) & 1;
}

uint64_t sub_1AD46D24C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AD46BE34(a1, *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

double sub_1AD46D270(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AD46B980(a1, *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

float sub_1AD46D294(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AD46B4CC(a1, *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1AD46D2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D564(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD4696F0);
}

_QWORD *sub_1AD46D2D4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D410(a1, a2, a3, (uint64_t (*)(char *))sub_1AD46DA6C, MEMORY[0x1E0DEDA70], (char *)0xD00000000000002BLL, (uint64_t (*)(char *))0x80000001AD6AAF60);
}

_QWORD *sub_1AD46D310(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D48C(a1, a2, a3, (uint64_t (*)(char *))sub_1AD46DCAC, MEMORY[0x1E0DEDB58], (char *)0xD00000000000002CLL, (uint64_t (*)(char *))0x80000001AD6AAF30);
}

_QWORD *sub_1AD46D34C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D508(a1, a2, a3, (uint64_t (*)(char *))sub_1AD46DEF0, MEMORY[0x1E0DEDBC8], (char *)0xD00000000000002CLL, (uint64_t (*)(char *))0x80000001AD6AAF00);
}

uint64_t sub_1AD46D388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D564(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD469B38);
}

uint64_t sub_1AD46D3A4()
{
  return sub_1AD63C380();
}

uint64_t sub_1AD46D3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D564(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD469F84);
}

_QWORD *sub_1AD46D3D4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D410(a1, a2, a3, (uint64_t (*)(char *))sub_1AD46E394, MEMORY[0x1E0DEDE70], (char *)0xD00000000000002CLL, (uint64_t (*)(char *))0x80000001AD6AAE70);
}

_QWORD *sub_1AD46D410(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *), uint64_t a5, char *a6, uint64_t (*a7)(char *))
{
  uint64_t v7;

  return sub_1AD46A3CC(a1, *(_QWORD **)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4, a5, a6, a7);
}

_QWORD *sub_1AD46D450(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D48C(a1, a2, a3, (uint64_t (*)(char *))sub_1AD46E5D8, MEMORY[0x1E0DEE068], (char *)0xD00000000000002DLL, (uint64_t (*)(char *))0x80000001AD6AAE40);
}

_QWORD *sub_1AD46D48C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *), uint64_t a5, char *a6, uint64_t (*a7)(char *))
{
  uint64_t v7;

  return sub_1AD46A808(a1, *(_QWORD **)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4, a5, a6, a7);
}

_QWORD *sub_1AD46D4CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D508(a1, a2, a3, (uint64_t (*)(char *))sub_1AD46E81C, MEMORY[0x1E0DEE0F8], (char *)0xD00000000000002DLL, (uint64_t (*)(char *))0x80000001AD6AAE10);
}

_QWORD *sub_1AD46D508(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *), uint64_t a5, char *a6, uint64_t (*a7)(char *))
{
  uint64_t v7;

  return sub_1AD46AC44(a1, *(_QWORD **)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4, a5, a6, a7);
}

uint64_t sub_1AD46D548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D564(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD46B080);
}

uint64_t sub_1AD46D564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, *v4, v4[1], v4[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1AD46D58C()
{
  return sub_1AD63C38C();
}

uint64_t sub_1AD46D5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1AD46D868(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))sub_1AD46C2F8);
}

uint64_t sub_1AD46D5BC()
{
  return sub_1AD63C32C();
}

uint64_t sub_1AD46D5D0()
{
  return sub_1AD63C320();
}

uint64_t sub_1AD46D5E4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD63C338();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AD46D604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D794(a1, a2, a3, MEMORY[0x1E0DED7E8]);
}

uint64_t sub_1AD46D620()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD63C344();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AD46D640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D70C(a1, a2, a3, MEMORY[0x1E0DED808]);
}

uint64_t sub_1AD46D65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D750(a1, a2, a3, MEMORY[0x1E0DED810]);
}

uint64_t sub_1AD46D678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D794(a1, a2, a3, MEMORY[0x1E0DED818]);
}

uint64_t sub_1AD46D694()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD63C368();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AD46D6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D800(a1, a2, a3, MEMORY[0x1E0DED830]);
}

uint64_t sub_1AD46D6D0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD63C350();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AD46D6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D70C(a1, a2, a3, MEMORY[0x1E0DED828]);
}

uint64_t sub_1AD46D70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_1AD46D734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D750(a1, a2, a3, MEMORY[0x1E0DED838]);
}

uint64_t sub_1AD46D750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_1AD46D778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D794(a1, a2, a3, MEMORY[0x1E0DED840]);
}

uint64_t sub_1AD46D794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4;

  v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_1AD46D7C4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD63C374();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AD46D7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D800(a1, a2, a3, MEMORY[0x1E0DED850]);
}

uint64_t sub_1AD46D800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = a4();
  if (v4)
    return v6;
  return result;
}

uint64_t sub_1AD46D824()
{
  return sub_1AD63C35C();
}

uint64_t sub_1AD46D84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1AD46D868(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))sub_1AD46C7FC);
}

uint64_t sub_1AD46D868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))
{
  _QWORD *v7;

  return a7(a1, a2, *v7, v7[1], v7[2], *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24), a4);
}

uint64_t sub_1AD46D8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D900(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD46CCE4);
}

void sub_1AD46D8C0()
{
  sub_1AD46D128();
}

uint64_t sub_1AD46D8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD46D900(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD46D170);
}

uint64_t sub_1AD46D900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, *v4, v4[1], v4[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1AD46D928(uint64_t a1)
{
  uint64_t v2;
  const _xpc_type_s *v4;

  swift_getObjectType();
  if (sub_1AD0E2144())
    return 0x76206C6C756E2061;
  v2 = 0x7265626D756E2061;
  if (sub_1AD0E1E64() != 1 && sub_1AD0E1E64() != 2)
  {
    if (sub_1AD0E1E64() == 3)
    {
      return 0x676E697274732061;
    }
    else if (sub_1AD0E1E64() == 6)
    {
      return 0x7961727261206E61;
    }
    else if (sub_1AD0E1E64() == 7)
    {
      return 0x6F69746369642061;
    }
    else
    {
      v4 = (const _xpc_type_s *)MEMORY[0x1AF44C168](a1);
      xpc_type_get_name(v4);
      return sub_1AD63B81C();
    }
  }
  return v2;
}

uint64_t sub_1AD46DA6C(void *a1)
{
  BOOL v2;
  unsigned __int8 value;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  swift_getObjectType();
  v2 = sub_1AD0E2144();
  if (v2)
  {
    value = 0;
    return value | (v2 << 8);
  }
  if (sub_1AD0E1E64() == 1)
  {
    value = xpc_int64_get_value(a1);
    if (xpc_int64_get_value(a1) == (char)value)
      return value | (v2 << 8);
    v5 = sub_1AD63BD8C();
    swift_allocError();
    v7 = v6;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    xpc_int64_get_value(a1);
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0DEC458], v5);
  }
  else
  {
    swift_beginAccess();
    sub_1AD63BD8C();
    swift_allocError();
    v9 = v8;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(MEMORY[0x1E0DEDA70], (uint64_t)a1, v9);
    swift_bridgeObjectRelease();
  }
  return swift_willThrow();
}

uint64_t sub_1AD46DCAC(void *a1)
{
  BOOL v2;
  unsigned __int16 value;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  swift_getObjectType();
  v2 = sub_1AD0E2144();
  if (v2)
  {
    value = 0;
    return value | (v2 << 16);
  }
  if (sub_1AD0E1E64() == 1)
  {
    value = xpc_int64_get_value(a1);
    if (xpc_int64_get_value(a1) == (__int16)value)
      return value | (v2 << 16);
    v5 = sub_1AD63BD8C();
    swift_allocError();
    v7 = v6;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    xpc_int64_get_value(a1);
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0DEC458], v5);
  }
  else
  {
    swift_beginAccess();
    sub_1AD63BD8C();
    swift_allocError();
    v9 = v8;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(MEMORY[0x1E0DEDB58], (uint64_t)a1, v9);
    swift_bridgeObjectRelease();
  }
  return swift_willThrow();
}

uint64_t sub_1AD46DEF0(void *a1)
{
  BOOL v2;
  unsigned int value;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  swift_getObjectType();
  v2 = sub_1AD0E2144();
  if (v2)
  {
    value = 0;
    return value | ((unint64_t)v2 << 32);
  }
  if (sub_1AD0E1E64() == 1)
  {
    value = xpc_int64_get_value(a1);
    if (xpc_int64_get_value(a1) == value)
      return value | ((unint64_t)v2 << 32);
    v5 = sub_1AD63BD8C();
    swift_allocError();
    v7 = v6;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    xpc_int64_get_value(a1);
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0DEC458], v5);
  }
  else
  {
    swift_beginAccess();
    sub_1AD63BD8C();
    swift_allocError();
    v9 = v8;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(MEMORY[0x1E0DEDBC8], (uint64_t)a1, v9);
    swift_bridgeObjectRelease();
  }
  return swift_willThrow();
}

_QWORD *sub_1AD46E140(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *value;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD v14[7];

  swift_getObjectType();
  if (sub_1AD0E2144())
    return 0;
  if (sub_1AD0E1E64() == 1)
  {
    value = (_QWORD *)xpc_int64_get_value(a1);
    if (value == (_QWORD *)xpc_int64_get_value(a1))
      return value;
    v8 = sub_1AD63BD8C();
    swift_allocError();
    v10 = v9;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    v14[0] = 0x206465646F636544;
    v14[1] = 0xEF207265626D756ELL;
    v14[6] = xpc_int64_get_value(a1);
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    sub_1AD63B810();
    value = v14;
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, *MEMORY[0x1E0DEC458], v8);
  }
  else
  {
    swift_beginAccess();
    value = *(_QWORD **)(v4 + 24);
    sub_1AD63BD8C();
    swift_allocError();
    v12 = v11;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(a4, (uint64_t)a1, v12);
    swift_bridgeObjectRelease();
  }
  swift_willThrow();
  return value;
}

uint64_t sub_1AD46E394(void *a1)
{
  BOOL v2;
  unsigned __int8 value;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  swift_getObjectType();
  v2 = sub_1AD0E2144();
  if (v2)
  {
    value = 0;
    return value | (v2 << 8);
  }
  if (sub_1AD0E1E64() == 2)
  {
    value = xpc_uint64_get_value(a1);
    if (xpc_uint64_get_value(a1) == value)
      return value | (v2 << 8);
    v5 = sub_1AD63BD8C();
    swift_allocError();
    v7 = v6;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    xpc_uint64_get_value(a1);
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0DEC458], v5);
  }
  else
  {
    swift_beginAccess();
    sub_1AD63BD8C();
    swift_allocError();
    v9 = v8;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(MEMORY[0x1E0DEDE70], (uint64_t)a1, v9);
    swift_bridgeObjectRelease();
  }
  return swift_willThrow();
}

uint64_t sub_1AD46E5D8(void *a1)
{
  BOOL v2;
  unsigned __int16 value;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  swift_getObjectType();
  v2 = sub_1AD0E2144();
  if (v2)
  {
    value = 0;
    return value | (v2 << 16);
  }
  if (sub_1AD0E1E64() == 2)
  {
    value = xpc_uint64_get_value(a1);
    if (xpc_uint64_get_value(a1) == value)
      return value | (v2 << 16);
    v5 = sub_1AD63BD8C();
    swift_allocError();
    v7 = v6;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    xpc_uint64_get_value(a1);
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0DEC458], v5);
  }
  else
  {
    swift_beginAccess();
    sub_1AD63BD8C();
    swift_allocError();
    v9 = v8;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(MEMORY[0x1E0DEE068], (uint64_t)a1, v9);
    swift_bridgeObjectRelease();
  }
  return swift_willThrow();
}

uint64_t sub_1AD46E81C(void *a1)
{
  BOOL v2;
  unsigned int value;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  swift_getObjectType();
  v2 = sub_1AD0E2144();
  if (v2)
  {
    value = 0;
    return value | ((unint64_t)v2 << 32);
  }
  if (sub_1AD0E1E64() == 2)
  {
    value = xpc_uint64_get_value(a1);
    if (xpc_uint64_get_value(a1) == value)
      return value | ((unint64_t)v2 << 32);
    v5 = sub_1AD63BD8C();
    swift_allocError();
    v7 = v6;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    xpc_uint64_get_value(a1);
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0DEC458], v5);
  }
  else
  {
    swift_beginAccess();
    sub_1AD63BD8C();
    swift_allocError();
    v9 = v8;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(MEMORY[0x1E0DEE0F8], (uint64_t)a1, v9);
    swift_bridgeObjectRelease();
  }
  return swift_willThrow();
}

_QWORD *sub_1AD46EA6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *value;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD v14[7];

  swift_getObjectType();
  if (sub_1AD0E2144())
    return 0;
  if (sub_1AD0E1E64() == 2)
  {
    value = (_QWORD *)xpc_uint64_get_value(a1);
    if (value == (_QWORD *)xpc_uint64_get_value(a1))
      return value;
    v8 = sub_1AD63BD8C();
    swift_allocError();
    v10 = v9;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    v14[0] = 0x206465646F636544;
    v14[1] = 0xEF207265626D756ELL;
    v14[6] = xpc_uint64_get_value(a1);
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    sub_1AD63B810();
    value = v14;
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, *MEMORY[0x1E0DEC458], v8);
  }
  else
  {
    swift_beginAccess();
    value = *(_QWORD **)(v4 + 24);
    sub_1AD63BD8C();
    swift_allocError();
    v12 = v11;
    swift_bridgeObjectRetain();
    sub_1AD4644E8(a4, (uint64_t)a1, v12);
    swift_bridgeObjectRelease();
  }
  swift_willThrow();
  return value;
}

BOOL sub_1AD46ECC0()
{
  uint64_t v0;
  uint64_t v1;
  char value;
  void *v3;
  _BOOL8 result;
  _QWORD *v5;
  _QWORD *v6;

  value = sub_1AD4659F4();
  if (v1)
    return value & 1;
  v3 = *(void **)(v0 + 32);
  swift_getObjectType();
  result = sub_1AD0E2144();
  if (!result)
  {
    if (sub_1AD0E1E64())
    {
      swift_beginAccess();
      sub_1AD63BD8C();
      swift_allocError();
      v6 = v5;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEAFA0], (uint64_t)v3, v6);
      swift_bridgeObjectRelease();
      value = swift_willThrow();
    }
    else
    {
      value = xpc_BOOL_get_value(v3);
    }
    return value & 1;
  }
  __break(1u);
  return result;
}

void sub_1AD46EDA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1AD466680();
  if (!v1)
  {
    v2 = *(void **)(v0 + 32);
    swift_getObjectType();
    if (sub_1AD0E2144())
    {
      __break(1u);
    }
    else if (sub_1AD0E1E64() == 4)
    {
      xpc_double_get_value(v2);
    }
    else
    {
      swift_beginAccess();
      sub_1AD63BD8C();
      swift_allocError();
      v4 = v3;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEB188], (uint64_t)v2, v4);
      swift_bridgeObjectRelease();
      swift_willThrow();
    }
  }
}

void sub_1AD46EE84()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1AD4667A4();
  if (!v1)
  {
    v2 = *(void **)(v0 + 32);
    swift_getObjectType();
    if (sub_1AD0E2144())
    {
      __break(1u);
    }
    else if (sub_1AD0E1E64() == 4)
    {
      xpc_double_get_value(v2);
    }
    else
    {
      swift_beginAccess();
      sub_1AD63BD8C();
      swift_allocError();
      v4 = v3;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEB070], (uint64_t)v2, v4);
      swift_bridgeObjectRelease();
      swift_willThrow();
    }
  }
}

unint64_t sub_1AD46EF64()
{
  unint64_t result;

  result = qword_1ED2E3068;
  if (!qword_1ED2E3068)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD686CA0, &type metadata for _XPCUnkeyedDecodingContainer);
    atomic_store(result, (unint64_t *)&qword_1ED2E3068);
  }
  return result;
}

uint64_t sub_1AD46EFA8()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t type metadata accessor for _XPCKeyedDecodingContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _XPCKeyedDecodingContainer);
}

uint64_t sub_1AD46EFE8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for _XPCDecoder();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *_s9BlastDoor28_XPCUnkeyedEncodingContainerVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s9BlastDoor28_XPCUnkeyedEncodingContainerVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9BlastDoor28_XPCUnkeyedEncodingContainerVwta_0(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9BlastDoor28_XPCUnkeyedDecodingContainerVwxx_0()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for _XPCUnkeyedDecodingContainer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for _XPCUnkeyedDecodingContainer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for _XPCUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for _XPCUnkeyedDecodingContainer()
{
  return &type metadata for _XPCUnkeyedDecodingContainer;
}

uint64_t sub_1AD46F298(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

unint64_t sub_1AD46F2A0()
{
  unint64_t result;

  result = qword_1ED2E3070;
  if (!qword_1ED2E3070)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6913F4, &type metadata for XPCCodingKey);
    atomic_store(result, (unint64_t *)&qword_1ED2E3070);
  }
  return result;
}

uint64_t sub_1AD46F2E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1AD46F308()
{
  uint64_t *v0;
  uint64_t *v1;
  void *v2;
  int64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  xpc_object_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  __int128 v33;
  ValueMetadata *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v1 = v0;
  v38 = *MEMORY[0x1E0C80C00];
  v2 = (void *)v0[1];
  v3 = v0[3];
  if (v3 >= (uint64_t)xpc_array_get_count(v2))
  {
    v23 = sub_1AD63BD8C();
    swift_allocError();
    v10 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *(_QWORD *)v10 = MEMORY[0x1E0DEAFA0];
    v25 = *v0;
    swift_beginAccess();
    v26 = *(_QWORD *)(v25 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v28 = v0[3];
    v37 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v29 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v29;
    *(_QWORD *)(v29 + 16) = 0x207865646E49;
    *(_QWORD *)(v29 + 24) = 0xE600000000000000;
    *(_QWORD *)(v29 + 32) = v28;
    *(_BYTE *)(v29 + 40) = 0;
    v36 = v26;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(unint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v10, *MEMORY[0x1E0DEC460], v23);
    swift_willThrow();
  }
  else
  {
    v4 = *v0;
    *(_QWORD *)&v33 = 0x207865646E49;
    *((_QWORD *)&v33 + 1) = 0xE600000000000000;
    v36 = v3;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v5 = (_QWORD *)(v4 + 24);
    swift_beginAccess();
    v6 = *(_QWORD **)(v4 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v4 + 24) = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1AD3CACBC(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1AD3CACBC((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v34 = &type metadata for XPCCodingKey;
    v10 = sub_1AD46F2A0();
    v35 = v10;
    v11 = swift_allocObject();
    *(_QWORD *)&v33 = v11;
    *(_QWORD *)(v11 + 16) = 0x207865646E49;
    *(_QWORD *)(v11 + 24) = 0xE600000000000000;
    *(_QWORD *)(v11 + 32) = v3;
    *(_BYTE *)(v11 + 40) = 0;
    v6[2] = v9 + 1;
    sub_1AD00FA24(&v33, (uint64_t)&v6[5 * v9 + 4]);
    swift_endAccess();
    v12 = xpc_array_get_value(v2, v3);
    swift_getObjectType();
    if (sub_1AD0E2144())
    {
      swift_unknownObjectRelease();
      v13 = sub_1AD63BD8C();
      swift_allocError();
      v15 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v15 = MEMORY[0x1E0DEAFA0];
      v16 = *v1;
      swift_beginAccess();
      v17 = *(_QWORD *)(v16 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_1AD648160;
      v19 = v1[3];
      v36 = 0x207865646E49;
      v37 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v20 = v36;
      v21 = v37;
      *(_QWORD *)(v18 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v18 + 64) = v10;
      v22 = swift_allocObject();
      *(_QWORD *)(v18 + 32) = v22;
      *(_QWORD *)(v22 + 16) = v20;
      *(_QWORD *)(v22 + 24) = v21;
      *(_QWORD *)(v22 + 32) = v19;
      *(_BYTE *)(v22 + 40) = 0;
      v36 = v17;
      sub_1AD6034C8(v18);
      LOBYTE(v10) = v36;
      v36 = 0;
      v37 = 0xE000000000000000;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DEC460], v13);
      swift_willThrow();
    }
    else
    {
      if (!sub_1AD0E1E64())
      {
        LOBYTE(v10) = xpc_BOOL_get_value(v12);
        swift_unknownObjectRelease();
        v1[3] = v3 + 1;
        sub_1AD468728(v1);
        return v10 & 1;
      }
      sub_1AD63BD8C();
      swift_allocError();
      v31 = v30;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEAFA0], (uint64_t)v12, v31);
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_unknownObjectRelease();
    }
    sub_1AD468728(v1);
  }
  return v10 & 1;
}

uint64_t *sub_1AD46F8AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  void *v3;
  int64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  __int128 v38;
  ValueMetadata *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = v0;
  v43 = *MEMORY[0x1E0C80C00];
  v3 = (void *)v0[1];
  v4 = v0[3];
  if (v4 >= (uint64_t)xpc_array_get_count(v3))
  {
    v18 = sub_1AD63BD8C();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v20 = MEMORY[0x1E0DEB418];
    v21 = *v0;
    swift_beginAccess();
    v22 = *(_QWORD *)(v21 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v24 = v2[3];
    v42 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v25 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v25;
    *(_QWORD *)(v25 + 16) = 0x207865646E49;
    *(_QWORD *)(v25 + 24) = 0xE600000000000000;
    *(_QWORD *)(v25 + 32) = v24;
    *(_BYTE *)(v25 + 40) = 0;
    v41 = v22;
    v15 = &v41;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC460], v18);
    swift_willThrow();
  }
  else
  {
    v5 = (uint64_t *)*v0;
    *(_QWORD *)&v38 = 0x207865646E49;
    *((_QWORD *)&v38 + 1) = 0xE600000000000000;
    v41 = v4;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v6 = v5 + 3;
    swift_beginAccess();
    v7 = (_QWORD *)v5[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v5[3] = (uint64_t)v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1AD3CACBC(0, v7[2] + 1, 1, v7);
      *v6 = v7;
    }
    v10 = v7[2];
    v9 = v7[3];
    if (v10 >= v9 >> 1)
    {
      v7 = sub_1AD3CACBC((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
      *v6 = v7;
    }
    v39 = &type metadata for XPCCodingKey;
    v11 = sub_1AD46F2A0();
    v40 = v11;
    v12 = swift_allocObject();
    *(_QWORD *)&v38 = v12;
    *(_QWORD *)(v12 + 16) = 0x207865646E49;
    *(_QWORD *)(v12 + 24) = 0xE600000000000000;
    *(_QWORD *)(v12 + 32) = v4;
    *(_BYTE *)(v12 + 40) = 0;
    v7[2] = v10 + 1;
    sub_1AD00FA24(&v38, (uint64_t)&v7[5 * v10 + 4]);
    swift_endAccess();
    v13 = xpc_array_get_value(v3, v4);
    v14 = MEMORY[0x1E0DEB418];
    v15 = v5;
    v16 = sub_1AD46E140(v13, 7630409, 0xE300000000000000, MEMORY[0x1E0DEB418]);
    if (v1)
    {
      swift_unknownObjectRelease();
LABEL_12:
      sub_1AD468728(v2);
      return v15;
    }
    v15 = v16;
    v26 = v17;
    swift_unknownObjectRelease();
    if ((v26 & 1) != 0)
    {
      v37 = sub_1AD63BD8C();
      swift_allocError();
      v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v28 = v14;
      v29 = *v2;
      swift_beginAccess();
      v30 = *(_QWORD *)(v29 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v31 = swift_initStackObject();
      *(_OWORD *)(v31 + 16) = xmmword_1AD648160;
      v32 = v2[3];
      v41 = 0x207865646E49;
      v42 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v33 = v41;
      v34 = v42;
      *(_QWORD *)(v31 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v31 + 64) = v11;
      v35 = swift_allocObject();
      *(_QWORD *)(v31 + 32) = v35;
      *(_QWORD *)(v35 + 16) = v33;
      *(_QWORD *)(v35 + 24) = v34;
      *(_QWORD *)(v35 + 32) = v32;
      *(_BYTE *)(v35 + 40) = 0;
      v41 = v30;
      sub_1AD6034C8(v31);
      v41 = 0;
      v42 = 0xE000000000000000;
      v15 = &v41;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v37 - 8) + 104))(v28, *MEMORY[0x1E0DEC460]);
      swift_willThrow();
      goto LABEL_12;
    }
    v2[3] = v4 + 1;
    sub_1AD468728(v2);
  }
  return v15;
}

uint64_t *sub_1AD46FDF4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  void *v3;
  int64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  __int128 v38;
  ValueMetadata *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = v0;
  v43 = *MEMORY[0x1E0C80C00];
  v3 = (void *)v0[1];
  v4 = v0[3];
  if (v4 >= (uint64_t)xpc_array_get_count(v3))
  {
    v18 = sub_1AD63BD8C();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v20 = MEMORY[0x1E0DEDC60];
    v21 = *v0;
    swift_beginAccess();
    v22 = *(_QWORD *)(v21 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v24 = v2[3];
    v42 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v25 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v25;
    *(_QWORD *)(v25 + 16) = 0x207865646E49;
    *(_QWORD *)(v25 + 24) = 0xE600000000000000;
    *(_QWORD *)(v25 + 32) = v24;
    *(_BYTE *)(v25 + 40) = 0;
    v41 = v22;
    v15 = &v41;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC460], v18);
    swift_willThrow();
  }
  else
  {
    v5 = (uint64_t *)*v0;
    *(_QWORD *)&v38 = 0x207865646E49;
    *((_QWORD *)&v38 + 1) = 0xE600000000000000;
    v41 = v4;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v6 = v5 + 3;
    swift_beginAccess();
    v7 = (_QWORD *)v5[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v5[3] = (uint64_t)v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1AD3CACBC(0, v7[2] + 1, 1, v7);
      *v6 = v7;
    }
    v10 = v7[2];
    v9 = v7[3];
    if (v10 >= v9 >> 1)
    {
      v7 = sub_1AD3CACBC((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
      *v6 = v7;
    }
    v39 = &type metadata for XPCCodingKey;
    v11 = sub_1AD46F2A0();
    v40 = v11;
    v12 = swift_allocObject();
    *(_QWORD *)&v38 = v12;
    *(_QWORD *)(v12 + 16) = 0x207865646E49;
    *(_QWORD *)(v12 + 24) = 0xE600000000000000;
    *(_QWORD *)(v12 + 32) = v4;
    *(_BYTE *)(v12 + 40) = 0;
    v7[2] = v10 + 1;
    sub_1AD00FA24(&v38, (uint64_t)&v7[5 * v10 + 4]);
    swift_endAccess();
    v13 = xpc_array_get_value(v3, v4);
    v14 = MEMORY[0x1E0DEDC60];
    v15 = v5;
    v16 = sub_1AD46E140(v13, 0x3436746E49, 0xE500000000000000, MEMORY[0x1E0DEDC60]);
    if (v1)
    {
      swift_unknownObjectRelease();
LABEL_12:
      sub_1AD468728(v2);
      return v15;
    }
    v15 = v16;
    v26 = v17;
    swift_unknownObjectRelease();
    if ((v26 & 1) != 0)
    {
      v37 = sub_1AD63BD8C();
      swift_allocError();
      v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v28 = v14;
      v29 = *v2;
      swift_beginAccess();
      v30 = *(_QWORD *)(v29 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v31 = swift_initStackObject();
      *(_OWORD *)(v31 + 16) = xmmword_1AD648160;
      v32 = v2[3];
      v41 = 0x207865646E49;
      v42 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v33 = v41;
      v34 = v42;
      *(_QWORD *)(v31 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v31 + 64) = v11;
      v35 = swift_allocObject();
      *(_QWORD *)(v31 + 32) = v35;
      *(_QWORD *)(v35 + 16) = v33;
      *(_QWORD *)(v35 + 24) = v34;
      *(_QWORD *)(v35 + 32) = v32;
      *(_BYTE *)(v35 + 40) = 0;
      v41 = v30;
      sub_1AD6034C8(v31);
      v41 = 0;
      v42 = 0xE000000000000000;
      v15 = &v41;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v37 - 8) + 104))(v28, *MEMORY[0x1E0DEC460]);
      swift_willThrow();
      goto LABEL_12;
    }
    v2[3] = v4 + 1;
    sub_1AD468728(v2);
  }
  return v15;
}

uint64_t *sub_1AD470344()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  void *v3;
  int64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  __int128 v38;
  ValueMetadata *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = v0;
  v43 = *MEMORY[0x1E0C80C00];
  v3 = (void *)v0[1];
  v4 = v0[3];
  if (v4 >= (uint64_t)xpc_array_get_count(v3))
  {
    v18 = sub_1AD63BD8C();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v20 = MEMORY[0x1E0DEBB98];
    v21 = *v0;
    swift_beginAccess();
    v22 = *(_QWORD *)(v21 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v24 = v2[3];
    v42 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v25 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v25;
    *(_QWORD *)(v25 + 16) = 0x207865646E49;
    *(_QWORD *)(v25 + 24) = 0xE600000000000000;
    *(_QWORD *)(v25 + 32) = v24;
    *(_BYTE *)(v25 + 40) = 0;
    v41 = v22;
    v15 = &v41;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC460], v18);
    swift_willThrow();
  }
  else
  {
    v5 = (uint64_t *)*v0;
    *(_QWORD *)&v38 = 0x207865646E49;
    *((_QWORD *)&v38 + 1) = 0xE600000000000000;
    v41 = v4;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v6 = v5 + 3;
    swift_beginAccess();
    v7 = (_QWORD *)v5[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v5[3] = (uint64_t)v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1AD3CACBC(0, v7[2] + 1, 1, v7);
      *v6 = v7;
    }
    v10 = v7[2];
    v9 = v7[3];
    if (v10 >= v9 >> 1)
    {
      v7 = sub_1AD3CACBC((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
      *v6 = v7;
    }
    v39 = &type metadata for XPCCodingKey;
    v11 = sub_1AD46F2A0();
    v40 = v11;
    v12 = swift_allocObject();
    *(_QWORD *)&v38 = v12;
    *(_QWORD *)(v12 + 16) = 0x207865646E49;
    *(_QWORD *)(v12 + 24) = 0xE600000000000000;
    *(_QWORD *)(v12 + 32) = v4;
    *(_BYTE *)(v12 + 40) = 0;
    v7[2] = v10 + 1;
    sub_1AD00FA24(&v38, (uint64_t)&v7[5 * v10 + 4]);
    swift_endAccess();
    v13 = xpc_array_get_value(v3, v4);
    v14 = MEMORY[0x1E0DEBB98];
    v15 = v5;
    v16 = sub_1AD46EA6C(v13, 1953384789, 0xE400000000000000, MEMORY[0x1E0DEBB98]);
    if (v1)
    {
      swift_unknownObjectRelease();
LABEL_12:
      sub_1AD468728(v2);
      return v15;
    }
    v15 = v16;
    v26 = v17;
    swift_unknownObjectRelease();
    if ((v26 & 1) != 0)
    {
      v37 = sub_1AD63BD8C();
      swift_allocError();
      v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v28 = v14;
      v29 = *v2;
      swift_beginAccess();
      v30 = *(_QWORD *)(v29 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v31 = swift_initStackObject();
      *(_OWORD *)(v31 + 16) = xmmword_1AD648160;
      v32 = v2[3];
      v41 = 0x207865646E49;
      v42 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v33 = v41;
      v34 = v42;
      *(_QWORD *)(v31 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v31 + 64) = v11;
      v35 = swift_allocObject();
      *(_QWORD *)(v31 + 32) = v35;
      *(_QWORD *)(v35 + 16) = v33;
      *(_QWORD *)(v35 + 24) = v34;
      *(_QWORD *)(v35 + 32) = v32;
      *(_BYTE *)(v35 + 40) = 0;
      v41 = v30;
      sub_1AD6034C8(v31);
      v41 = 0;
      v42 = 0xE000000000000000;
      v15 = &v41;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v37 - 8) + 104))(v28, *MEMORY[0x1E0DEC460]);
      swift_willThrow();
      goto LABEL_12;
    }
    v2[3] = v4 + 1;
    sub_1AD468728(v2);
  }
  return v15;
}

_QWORD *sub_1AD470890(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v6;
  void *v7;
  int64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  __int128 v39;
  ValueMetadata *v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v6 = v2;
  v44 = *MEMORY[0x1E0C80C00];
  v7 = (void *)v2[1];
  v8 = v2[3];
  if (v8 >= (uint64_t)xpc_array_get_count(v7))
  {
    v20 = sub_1AD63BD8C();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v22 = a2;
    v23 = *v2;
    swift_beginAccess();
    v24 = *(_QWORD *)(v23 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v26 = v6[3];
    v43 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v27 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(v27 + 16) = 0x207865646E49;
    *(_QWORD *)(v27 + 24) = 0xE600000000000000;
    *(_QWORD *)(v27 + 32) = v26;
    *(_BYTE *)(v27 + 40) = 0;
    v42 = v24;
    v18 = &v42;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC460], v20);
    swift_willThrow();
  }
  else
  {
    v9 = (_QWORD *)*v2;
    *(_QWORD *)&v39 = 0x207865646E49;
    *((_QWORD *)&v39 + 1) = 0xE600000000000000;
    v42 = v8;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v10 = v9 + 3;
    swift_beginAccess();
    v11 = (_QWORD *)v9[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9[3] = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = sub_1AD3CACBC(0, v11[2] + 1, 1, v11);
      *v10 = v11;
    }
    v14 = v11[2];
    v13 = v11[3];
    if (v14 >= v13 >> 1)
    {
      v11 = sub_1AD3CACBC((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      *v10 = v11;
    }
    v40 = &type metadata for XPCCodingKey;
    v15 = sub_1AD46F2A0();
    v41 = v15;
    v16 = swift_allocObject();
    *(_QWORD *)&v39 = v16;
    *(_QWORD *)(v16 + 16) = 0x207865646E49;
    *(_QWORD *)(v16 + 24) = 0xE600000000000000;
    *(_QWORD *)(v16 + 32) = v8;
    *(_BYTE *)(v16 + 40) = 0;
    v11[2] = v14 + 1;
    sub_1AD00FA24(&v39, (uint64_t)&v11[5 * v14 + 4]);
    swift_endAccess();
    v17 = xpc_array_get_value(v7, v8);
    v18 = v9;
    v19 = a1();
    if (v3)
    {
      swift_unknownObjectRelease();
LABEL_12:
      sub_1AD468728(v6);
      return v18;
    }
    v18 = (_QWORD *)v19;
    swift_unknownObjectRelease();
    if (((unsigned __int16)v18 & 0x100) != 0)
    {
      v38 = sub_1AD63BD8C();
      swift_allocError();
      v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v29 = a2;
      v30 = *v6;
      swift_beginAccess();
      v31 = *(_QWORD *)(v30 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = xmmword_1AD648160;
      v33 = v6[3];
      v42 = 0x207865646E49;
      v43 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v34 = v42;
      v35 = v43;
      *(_QWORD *)(v32 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v32 + 64) = v15;
      v36 = swift_allocObject();
      *(_QWORD *)(v32 + 32) = v36;
      *(_QWORD *)(v36 + 16) = v34;
      *(_QWORD *)(v36 + 24) = v35;
      *(_QWORD *)(v36 + 32) = v33;
      *(_BYTE *)(v36 + 40) = 0;
      v42 = v31;
      sub_1AD6034C8(v32);
      v42 = 0;
      v43 = 0xE000000000000000;
      v18 = &v42;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v38 - 8) + 104))(v29, *MEMORY[0x1E0DEC460]);
      swift_willThrow();
      goto LABEL_12;
    }
    v6[3] = v8 + 1;
    sub_1AD468728(v6);
  }
  return v18;
}

_QWORD *sub_1AD470DC0(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v6;
  void *v7;
  int64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  __int128 v39;
  ValueMetadata *v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v6 = v2;
  v44 = *MEMORY[0x1E0C80C00];
  v7 = (void *)v2[1];
  v8 = v2[3];
  if (v8 >= (uint64_t)xpc_array_get_count(v7))
  {
    v20 = sub_1AD63BD8C();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v22 = a2;
    v23 = *v2;
    swift_beginAccess();
    v24 = *(_QWORD *)(v23 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v26 = v6[3];
    v43 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v27 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(v27 + 16) = 0x207865646E49;
    *(_QWORD *)(v27 + 24) = 0xE600000000000000;
    *(_QWORD *)(v27 + 32) = v26;
    *(_BYTE *)(v27 + 40) = 0;
    v42 = v24;
    v18 = &v42;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC460], v20);
    swift_willThrow();
  }
  else
  {
    v9 = (_QWORD *)*v2;
    *(_QWORD *)&v39 = 0x207865646E49;
    *((_QWORD *)&v39 + 1) = 0xE600000000000000;
    v42 = v8;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v10 = v9 + 3;
    swift_beginAccess();
    v11 = (_QWORD *)v9[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9[3] = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = sub_1AD3CACBC(0, v11[2] + 1, 1, v11);
      *v10 = v11;
    }
    v14 = v11[2];
    v13 = v11[3];
    if (v14 >= v13 >> 1)
    {
      v11 = sub_1AD3CACBC((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      *v10 = v11;
    }
    v40 = &type metadata for XPCCodingKey;
    v15 = sub_1AD46F2A0();
    v41 = v15;
    v16 = swift_allocObject();
    *(_QWORD *)&v39 = v16;
    *(_QWORD *)(v16 + 16) = 0x207865646E49;
    *(_QWORD *)(v16 + 24) = 0xE600000000000000;
    *(_QWORD *)(v16 + 32) = v8;
    *(_BYTE *)(v16 + 40) = 0;
    v11[2] = v14 + 1;
    sub_1AD00FA24(&v39, (uint64_t)&v11[5 * v14 + 4]);
    swift_endAccess();
    v17 = xpc_array_get_value(v7, v8);
    v18 = v9;
    v19 = a1();
    if (v3)
    {
      swift_unknownObjectRelease();
LABEL_12:
      sub_1AD468728(v6);
      return v18;
    }
    v18 = (_QWORD *)v19;
    swift_unknownObjectRelease();
    if ((v18 & 0x10000) != 0)
    {
      v38 = sub_1AD63BD8C();
      swift_allocError();
      v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v29 = a2;
      v30 = *v6;
      swift_beginAccess();
      v31 = *(_QWORD *)(v30 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = xmmword_1AD648160;
      v33 = v6[3];
      v42 = 0x207865646E49;
      v43 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v34 = v42;
      v35 = v43;
      *(_QWORD *)(v32 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v32 + 64) = v15;
      v36 = swift_allocObject();
      *(_QWORD *)(v32 + 32) = v36;
      *(_QWORD *)(v36 + 16) = v34;
      *(_QWORD *)(v36 + 24) = v35;
      *(_QWORD *)(v36 + 32) = v33;
      *(_BYTE *)(v36 + 40) = 0;
      v42 = v31;
      sub_1AD6034C8(v32);
      v42 = 0;
      v43 = 0xE000000000000000;
      v18 = &v42;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v38 - 8) + 104))(v29, *MEMORY[0x1E0DEC460]);
      swift_willThrow();
      goto LABEL_12;
    }
    v6[3] = v8 + 1;
    sub_1AD468728(v6);
  }
  return v18;
}

unint64_t sub_1AD4712F0(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v6;
  void *v7;
  int64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  __int128 v39;
  ValueMetadata *v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v6 = v2;
  v44 = *MEMORY[0x1E0C80C00];
  v7 = (void *)v2[1];
  v8 = v2[3];
  if (v8 >= (uint64_t)xpc_array_get_count(v7))
  {
    v20 = sub_1AD63BD8C();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v22 = a2;
    v23 = *v2;
    swift_beginAccess();
    v24 = *(_QWORD *)(v23 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v26 = v6[3];
    v43 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v27 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(v27 + 16) = 0x207865646E49;
    *(_QWORD *)(v27 + 24) = 0xE600000000000000;
    *(_QWORD *)(v27 + 32) = v26;
    *(_BYTE *)(v27 + 40) = 0;
    v42 = v24;
    v18 = (unint64_t)&v42;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC460], v20);
    swift_willThrow();
  }
  else
  {
    v9 = (_QWORD *)*v2;
    *(_QWORD *)&v39 = 0x207865646E49;
    *((_QWORD *)&v39 + 1) = 0xE600000000000000;
    v42 = v8;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v10 = v9 + 3;
    swift_beginAccess();
    v11 = (_QWORD *)v9[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9[3] = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = sub_1AD3CACBC(0, v11[2] + 1, 1, v11);
      *v10 = v11;
    }
    v14 = v11[2];
    v13 = v11[3];
    if (v14 >= v13 >> 1)
    {
      v11 = sub_1AD3CACBC((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      *v10 = v11;
    }
    v40 = &type metadata for XPCCodingKey;
    v15 = sub_1AD46F2A0();
    v41 = v15;
    v16 = swift_allocObject();
    *(_QWORD *)&v39 = v16;
    *(_QWORD *)(v16 + 16) = 0x207865646E49;
    *(_QWORD *)(v16 + 24) = 0xE600000000000000;
    *(_QWORD *)(v16 + 32) = v8;
    *(_BYTE *)(v16 + 40) = 0;
    v11[2] = v14 + 1;
    sub_1AD00FA24(&v39, (uint64_t)&v11[5 * v14 + 4]);
    swift_endAccess();
    v17 = xpc_array_get_value(v7, v8);
    v18 = (unint64_t)v9;
    v19 = a1();
    if (v3)
    {
      swift_unknownObjectRelease();
LABEL_12:
      sub_1AD468728(v6);
      return v18;
    }
    v18 = v19;
    swift_unknownObjectRelease();
    if ((v18 & 0x100000000) != 0)
    {
      v38 = sub_1AD63BD8C();
      swift_allocError();
      v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v29 = a2;
      v30 = *v6;
      swift_beginAccess();
      v31 = *(_QWORD *)(v30 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = xmmword_1AD648160;
      v33 = v6[3];
      v42 = 0x207865646E49;
      v43 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v34 = v42;
      v35 = v43;
      *(_QWORD *)(v32 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v32 + 64) = v15;
      v36 = swift_allocObject();
      *(_QWORD *)(v32 + 32) = v36;
      *(_QWORD *)(v36 + 16) = v34;
      *(_QWORD *)(v36 + 24) = v35;
      *(_QWORD *)(v36 + 32) = v33;
      *(_BYTE *)(v36 + 40) = 0;
      v42 = v31;
      sub_1AD6034C8(v32);
      v42 = 0;
      v43 = 0xE000000000000000;
      v18 = (unint64_t)&v42;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v38 - 8) + 104))(v29, *MEMORY[0x1E0DEC460]);
      swift_willThrow();
      goto LABEL_12;
    }
    v6[3] = v8 + 1;
    sub_1AD468728(v6);
  }
  return v18;
}

uint64_t *sub_1AD471820()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  void *v3;
  int64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  __int128 v38;
  ValueMetadata *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = v0;
  v43 = *MEMORY[0x1E0C80C00];
  v3 = (void *)v0[1];
  v4 = v0[3];
  if (v4 >= (uint64_t)xpc_array_get_count(v3))
  {
    v18 = sub_1AD63BD8C();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v20 = MEMORY[0x1E0DEE190];
    v21 = *v0;
    swift_beginAccess();
    v22 = *(_QWORD *)(v21 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v24 = v2[3];
    v42 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v25 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v25;
    *(_QWORD *)(v25 + 16) = 0x207865646E49;
    *(_QWORD *)(v25 + 24) = 0xE600000000000000;
    *(_QWORD *)(v25 + 32) = v24;
    *(_BYTE *)(v25 + 40) = 0;
    v41 = v22;
    v15 = &v41;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC460], v18);
    swift_willThrow();
  }
  else
  {
    v5 = (uint64_t *)*v0;
    *(_QWORD *)&v38 = 0x207865646E49;
    *((_QWORD *)&v38 + 1) = 0xE600000000000000;
    v41 = v4;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v6 = v5 + 3;
    swift_beginAccess();
    v7 = (_QWORD *)v5[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v5[3] = (uint64_t)v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1AD3CACBC(0, v7[2] + 1, 1, v7);
      *v6 = v7;
    }
    v10 = v7[2];
    v9 = v7[3];
    if (v10 >= v9 >> 1)
    {
      v7 = sub_1AD3CACBC((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
      *v6 = v7;
    }
    v39 = &type metadata for XPCCodingKey;
    v11 = sub_1AD46F2A0();
    v40 = v11;
    v12 = swift_allocObject();
    *(_QWORD *)&v38 = v12;
    *(_QWORD *)(v12 + 16) = 0x207865646E49;
    *(_QWORD *)(v12 + 24) = 0xE600000000000000;
    *(_QWORD *)(v12 + 32) = v4;
    *(_BYTE *)(v12 + 40) = 0;
    v7[2] = v10 + 1;
    sub_1AD00FA24(&v38, (uint64_t)&v7[5 * v10 + 4]);
    swift_endAccess();
    v13 = xpc_array_get_value(v3, v4);
    v14 = MEMORY[0x1E0DEE190];
    v15 = v5;
    v16 = sub_1AD46EA6C(v13, 0x3436746E4955, 0xE600000000000000, MEMORY[0x1E0DEE190]);
    if (v1)
    {
      swift_unknownObjectRelease();
LABEL_12:
      sub_1AD468728(v2);
      return v15;
    }
    v15 = v16;
    v26 = v17;
    swift_unknownObjectRelease();
    if ((v26 & 1) != 0)
    {
      v37 = sub_1AD63BD8C();
      swift_allocError();
      v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v28 = v14;
      v29 = *v2;
      swift_beginAccess();
      v30 = *(_QWORD *)(v29 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v31 = swift_initStackObject();
      *(_OWORD *)(v31 + 16) = xmmword_1AD648160;
      v32 = v2[3];
      v41 = 0x207865646E49;
      v42 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v33 = v41;
      v34 = v42;
      *(_QWORD *)(v31 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v31 + 64) = v11;
      v35 = swift_allocObject();
      *(_QWORD *)(v31 + 32) = v35;
      *(_QWORD *)(v35 + 16) = v33;
      *(_QWORD *)(v35 + 24) = v34;
      *(_QWORD *)(v35 + 32) = v32;
      *(_BYTE *)(v35 + 40) = 0;
      v41 = v30;
      sub_1AD6034C8(v31);
      v41 = 0;
      v42 = 0xE000000000000000;
      v15 = &v41;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v37 - 8) + 104))(v28, *MEMORY[0x1E0DEC460]);
      swift_willThrow();
      goto LABEL_12;
    }
    v2[3] = v4 + 1;
    sub_1AD468728(v2);
  }
  return v15;
}

float sub_1AD471D70()
{
  uint64_t *v0;
  float v1;
  uint64_t *v2;
  void *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  xpc_object_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  double value;
  _QWORD *v33;
  _QWORD *v34;
  __int128 v36;
  ValueMetadata *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v2 = v0;
  v41 = *MEMORY[0x1E0C80C00];
  v3 = (void *)v0[1];
  v4 = v0[3];
  if (v4 >= (uint64_t)xpc_array_get_count(v3))
  {
    v24 = sub_1AD63BD8C();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v26 = MEMORY[0x1E0DEB188];
    v27 = *v0;
    swift_beginAccess();
    v28 = *(_QWORD *)(v27 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v30 = v0[3];
    v40 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v31 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v31;
    *(_QWORD *)(v31 + 16) = 0x207865646E49;
    *(_QWORD *)(v31 + 24) = 0xE600000000000000;
    *(_QWORD *)(v31 + 32) = v30;
    *(_BYTE *)(v31 + 40) = 0;
    v39 = v28;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x1E0DEC460], v24);
    swift_willThrow();
  }
  else
  {
    v5 = *v0;
    *(_QWORD *)&v36 = 0x207865646E49;
    *((_QWORD *)&v36 + 1) = 0xE600000000000000;
    v39 = v4;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v6 = (_QWORD *)(v5 + 24);
    swift_beginAccess();
    v7 = *(_QWORD **)(v5 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v5 + 24) = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1AD3CACBC(0, v7[2] + 1, 1, v7);
      *v6 = v7;
    }
    v10 = v7[2];
    v9 = v7[3];
    if (v10 >= v9 >> 1)
    {
      v7 = sub_1AD3CACBC((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
      *v6 = v7;
    }
    v37 = &type metadata for XPCCodingKey;
    v11 = sub_1AD46F2A0();
    v38 = v11;
    v12 = swift_allocObject();
    *(_QWORD *)&v36 = v12;
    *(_QWORD *)(v12 + 16) = 0x207865646E49;
    *(_QWORD *)(v12 + 24) = 0xE600000000000000;
    *(_QWORD *)(v12 + 32) = v4;
    *(_BYTE *)(v12 + 40) = 0;
    v7[2] = v10 + 1;
    sub_1AD00FA24(&v36, (uint64_t)&v7[5 * v10 + 4]);
    swift_endAccess();
    v13 = xpc_array_get_value(v3, v4);
    swift_getObjectType();
    if (sub_1AD0E2144())
    {
      swift_unknownObjectRelease();
      v14 = sub_1AD63BD8C();
      swift_allocError();
      v16 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v16 = MEMORY[0x1E0DEB188];
      v17 = *v2;
      swift_beginAccess();
      v18 = *(_QWORD *)(v17 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v19 = swift_initStackObject();
      *(_OWORD *)(v19 + 16) = xmmword_1AD648160;
      v20 = v2[3];
      v39 = 0x207865646E49;
      v40 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v21 = v39;
      v22 = v40;
      *(_QWORD *)(v19 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v19 + 64) = v11;
      v23 = swift_allocObject();
      *(_QWORD *)(v19 + 32) = v23;
      *(_QWORD *)(v23 + 16) = v21;
      *(_QWORD *)(v23 + 24) = v22;
      *(_QWORD *)(v23 + 32) = v20;
      *(_BYTE *)(v23 + 40) = 0;
      v39 = v18;
      sub_1AD6034C8(v19);
      v39 = 0;
      v40 = 0xE000000000000000;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x1E0DEC460], v14);
      swift_willThrow();
LABEL_12:
      sub_1AD468728(v2);
      return v1;
    }
    if (sub_1AD0E1E64() != 4)
    {
      sub_1AD63BD8C();
      swift_allocError();
      v34 = v33;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEB188], (uint64_t)v13, v34);
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_unknownObjectRelease();
      goto LABEL_12;
    }
    value = xpc_double_get_value(v13);
    swift_unknownObjectRelease();
    v1 = value;
    v2[3] = v4 + 1;
    sub_1AD468728(v2);
  }
  return v1;
}

double sub_1AD472324()
{
  uint64_t *v0;
  double value;
  uint64_t *v2;
  void *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  xpc_object_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  __int128 v35;
  ValueMetadata *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v2 = v0;
  v40 = *MEMORY[0x1E0C80C00];
  v3 = (void *)v0[1];
  v4 = v0[3];
  if (v4 >= (uint64_t)xpc_array_get_count(v3))
  {
    v24 = sub_1AD63BD8C();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v26 = MEMORY[0x1E0DEB070];
    v27 = *v0;
    swift_beginAccess();
    v28 = *(_QWORD *)(v27 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648160;
    v30 = v0[3];
    v39 = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for XPCCodingKey;
    *(_QWORD *)(inited + 64) = sub_1AD46F2A0();
    v31 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v31;
    *(_QWORD *)(v31 + 16) = 0x207865646E49;
    *(_QWORD *)(v31 + 24) = 0xE600000000000000;
    *(_QWORD *)(v31 + 32) = v30;
    *(_BYTE *)(v31 + 40) = 0;
    v38 = v28;
    sub_1AD6034C8(inited);
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x1E0DEC460], v24);
    swift_willThrow();
  }
  else
  {
    v5 = *v0;
    *(_QWORD *)&v35 = 0x207865646E49;
    *((_QWORD *)&v35 + 1) = 0xE600000000000000;
    v38 = v4;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v6 = (_QWORD *)(v5 + 24);
    swift_beginAccess();
    v7 = *(_QWORD **)(v5 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v5 + 24) = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1AD3CACBC(0, v7[2] + 1, 1, v7);
      *v6 = v7;
    }
    v10 = v7[2];
    v9 = v7[3];
    if (v10 >= v9 >> 1)
    {
      v7 = sub_1AD3CACBC((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
      *v6 = v7;
    }
    v36 = &type metadata for XPCCodingKey;
    v11 = sub_1AD46F2A0();
    v37 = v11;
    v12 = swift_allocObject();
    *(_QWORD *)&v35 = v12;
    *(_QWORD *)(v12 + 16) = 0x207865646E49;
    *(_QWORD *)(v12 + 24) = 0xE600000000000000;
    *(_QWORD *)(v12 + 32) = v4;
    *(_BYTE *)(v12 + 40) = 0;
    v7[2] = v10 + 1;
    sub_1AD00FA24(&v35, (uint64_t)&v7[5 * v10 + 4]);
    swift_endAccess();
    v13 = xpc_array_get_value(v3, v4);
    swift_getObjectType();
    if (sub_1AD0E2144())
    {
      swift_unknownObjectRelease();
      v14 = sub_1AD63BD8C();
      swift_allocError();
      v16 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
      *v16 = MEMORY[0x1E0DEB070];
      v17 = *v2;
      swift_beginAccess();
      v18 = *(_QWORD *)(v17 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7488);
      v19 = swift_initStackObject();
      *(_OWORD *)(v19 + 16) = xmmword_1AD648160;
      v20 = v2[3];
      v38 = 0x207865646E49;
      v39 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v21 = v38;
      v22 = v39;
      *(_QWORD *)(v19 + 56) = &type metadata for XPCCodingKey;
      *(_QWORD *)(v19 + 64) = v11;
      v23 = swift_allocObject();
      *(_QWORD *)(v19 + 32) = v23;
      *(_QWORD *)(v23 + 16) = v21;
      *(_QWORD *)(v23 + 24) = v22;
      *(_QWORD *)(v23 + 32) = v20;
      *(_BYTE *)(v23 + 40) = 0;
      v38 = v18;
      sub_1AD6034C8(v19);
      v38 = 0;
      v39 = 0xE000000000000000;
      sub_1AD63BD38();
      swift_bridgeObjectRelease();
      sub_1AD63BD68();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x1E0DEC460], v14);
      swift_willThrow();
LABEL_12:
      sub_1AD468728(v2);
      return value;
    }
    if (sub_1AD0E1E64() != 4)
    {
      sub_1AD63BD8C();
      swift_allocError();
      v33 = v32;
      swift_bridgeObjectRetain();
      sub_1AD4644E8(MEMORY[0x1E0DEB070], (uint64_t)v13, v33);
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_unknownObjectRelease();
      goto LABEL_12;
    }
    value = xpc_double_get_value(v13);
    swift_unknownObjectRelease();
    v2[3] = v4 + 1;
    sub_1AD468728(v2);
  }
  return value;
}

uint64_t sub_1AD4728D4()
{
  return swift_deallocObject();
}

uint64_t sub_1AD4728E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AD468ED4(a1, a2, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16));
}

uint64_t sub_1AD4728F0()
{
  return swift_deallocObject();
}

uint64_t sub_1AD472900()
{
  return sub_1AD472EE4();
}

uint64_t *sub_1AD47290C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
    *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1AD4729D4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1AD472A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1AD472A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  return a1;
}

uint64_t sub_1AD472B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_BYTE *)(v7 + 16) = v9;
  return a1;
}

uint64_t sub_1AD472B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  swift_release();
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  return a1;
}

uint64_t sub_1AD472C00(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((v7 + 7) & 0xFFFFFFF8) + 17;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1AD472C88 + 4 * byte_1AD686E10[v12]))();
  }
}

void sub_1AD472D1C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v6 >= a3)
  {
    v10 = 0u;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_1AD472E38()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1AD472EB4);
}

void sub_1AD472E40(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1AD472E48);
  JUMPOUT(0x1AD472EB4);
}

void sub_1AD472E88()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1AD472EB4);
}

void sub_1AD472E90()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1AD472EB4);
}

uint64_t sub_1AD472E98(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1AD472EB4);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1AD472EB0);
    JUMPOUT(0x1AD472EA4);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for ContextualUnpackFileRequestMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContextualUnpackFileRequestMessage);
}

uint64_t sub_1AD472ED8()
{
  return sub_1AD472EE4();
}

uint64_t sub_1AD472EE4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AD472F54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (uint64_t *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v12 = *v11;
    v13 = v11[1];
    sub_1AD0040A0(*v11, v13);
    *v10 = v12;
    v10[1] = v13;
  }
  return v4;
}

uint64_t sub_1AD473010(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1AD00412C(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
}

uint64_t sub_1AD473050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  v10 = v8[1];
  sub_1AD0040A0(*v8, v10);
  *v7 = v9;
  v7[1] = v10;
  return a1;
}

uint64_t sub_1AD4730B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  v10 = v8[1];
  sub_1AD0040A0(*v8, v10);
  v11 = *v7;
  v12 = v7[1];
  *v7 = v9;
  v7[1] = v10;
  sub_1AD00412C(v11, v12);
  return a1;
}

uint64_t sub_1AD473128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1AD473184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  v9 = v7[1];
  *(_OWORD *)v7 = *(_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  sub_1AD00412C(v8, v9);
  return a1;
}

uint64_t sub_1AD4731E8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xC)
    v6 = 12;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0xC)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8) >> 60;
      if (((4 * (_DWORD)v12) & 0xC) != 0)
        return 16 - ((4 * (_DWORD)v12) & 0xC | (v12 >> 2));
      else
        return 0;
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1AD473264 + 4 * byte_1AD686E1F[v10]))();
  }
}

void sub_1AD4732F4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xCu)
    v6 = 12;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1AD4733E8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1AD47346CLL);
}

void sub_1AD4733F0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1AD4733F8);
  JUMPOUT(0x1AD47346CLL);
}

void sub_1AD473448()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1AD47346CLL);
}

void sub_1AD473450()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1AD47346CLL);
}

uint64_t sub_1AD473458(uint64_t a1, unsigned int a2, unsigned int a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_WORD *)(v7 + v8) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0xC)
  {
    v4 = (_QWORD *)((v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (a2 > 0xC)
      JUMPOUT(0x1AD473464);
    *v4 = 0;
    v4[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
LABEL_6:
    JUMPOUT(0x1AD47346CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 56))(v7);
}

uint64_t type metadata accessor for ContextualUnpackRequestMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContextualUnpackRequestMessage);
}

ValueMetadata *type metadata accessor for UnpackFileRequestMessage()
{
  return &type metadata for UnpackFileRequestMessage;
}

ValueMetadata *type metadata accessor for UnpackRequestMessage()
{
  return &type metadata for UnpackRequestMessage;
}

uint64_t sub_1AD4734B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result;
  _QWORD *v14;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a7, a1, a4);
  result = type metadata accessor for ContextualUnpackRequestMessage(0, a4, a5, a6);
  v14 = (_QWORD *)(a7 + *(int *)(result + 44));
  *v14 = a2;
  v14[1] = a3;
  return result;
}

uint64_t sub_1AD473528@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;

  v10 = *a2;
  v11 = a2[1];
  v12 = *((_BYTE *)a2 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a6, a1);
  result = type metadata accessor for ContextualUnpackFileRequestMessage(0, a3, a4, a5);
  v14 = a6 + *(int *)(result + 44);
  *(_QWORD *)v14 = v10;
  *(_QWORD *)(v14 + 8) = v11;
  *(_BYTE *)(v14 + 16) = v12;
  return result;
}

uint64_t sub_1AD4735AC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2008);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD47478C();
  sub_1AD63C53C();
  v11[0] = a2;
  v11[1] = a3;
  sub_1AD00FDFC();
  sub_1AD63C068();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1AD4736B0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v10[3];
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC830);
  v10[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD4747D0();
  sub_1AD63C53C();
  v10[1] = v7;
  v10[2] = v6;
  v11 = v8;
  sub_1AD2F75DC();
  sub_1AD63C068();
  return (*(uint64_t (**)(char *, uint64_t))(v10[0] + 8))(v5, v3);
}

uint64_t sub_1AD4737C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  _QWORD v12[3];
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EECDC840);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD4747D0();
  sub_1AD63C524();
  if (!v2)
  {
    sub_1AD00F8A8();
    sub_1AD63BF54();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v12[2];
    v10 = v13;
    *(_QWORD *)a2 = v12[1];
    *(_QWORD *)(a2 + 8) = v9;
    *(_BYTE *)(a2 + 16) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AD4738E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x747865746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AD4739C8(char a1)
{
  if ((a1 & 1) != 0)
    return 1635017060;
  else
    return 0x747865746E6F63;
}

uint64_t sub_1AD4739F8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[4];
  __int128 v15;
  char v16;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v14[0] = *(_QWORD *)(a2 + 32);
  v14[1] = v4;
  v6 = type metadata accessor for ContextualUnpackRequestMessage.CodingKeys(255, v4, v5, v14[0]);
  MEMORY[0x1AF44BDF0](&unk_1AD6873C8, v6);
  v7 = sub_1AD63C0B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = v14[2];
  sub_1AD63C53C();
  LOBYTE(v15) = 0;
  v12 = v14[3];
  sub_1AD63C068();
  if (!v12)
  {
    v15 = *(_OWORD *)(v11 + *(int *)(a2 + 44));
    v16 = 1;
    sub_1AD00FDFC();
    sub_1AD63C068();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1AD473B5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  char v39;

  v28 = a5;
  v30 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v36 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ContextualUnpackRequestMessage.CodingKeys(255, v10, v11, v12);
  MEMORY[0x1AF44BDF0](&unk_1AD6873C8, v13);
  v35 = sub_1AD63BFA8();
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v15 = (char *)&v28 - v14;
  v34 = a2;
  v31 = a3;
  v29 = type metadata accessor for ContextualUnpackRequestMessage(0, a2, a3, a4);
  v16 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v18 = (char *)&v28 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v32 = v15;
  v19 = v37;
  sub_1AD63C524();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = v16;
  v21 = v29;
  v22 = v30;
  v23 = v18;
  LOBYTE(v38) = 0;
  v24 = v35;
  v25 = v34;
  v26 = v32;
  sub_1AD63BF54();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v23, v36, v25);
  v39 = 1;
  sub_1AD00F97C();
  sub_1AD63BF54();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v24);
  *(_OWORD *)&v23[*(int *)(v21 + 44)] = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v28, v23, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v21);
}

uint64_t sub_1AD473DF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x747865746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701603686 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AD473ED8(char a1)
{
  if ((a1 & 1) != 0)
    return 1701603686;
  else
    return 0x747865746E6F63;
}

uint64_t sub_1AD473F08(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 32);
  v19 = v4;
  v6 = type metadata accessor for ContextualUnpackFileRequestMessage.CodingKeys(255, v4, v5, v18);
  MEMORY[0x1AF44BDF0](&unk_1AD687378, v6);
  v7 = sub_1AD63C0B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = v20;
  sub_1AD63C53C();
  LOBYTE(v22) = 0;
  v12 = v21;
  sub_1AD63C068();
  if (!v12)
  {
    v13 = (uint64_t *)(v11 + *(int *)(a2 + 44));
    v14 = *v13;
    v15 = v13[1];
    LOBYTE(v13) = *((_BYTE *)v13 + 16);
    v22 = v14;
    v23 = v15;
    v24 = (char)v13;
    v25 = 1;
    sub_1AD2F75DC();
    sub_1AD63C068();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1AD474078@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;

  v33 = a5;
  v35 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v37 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ContextualUnpackFileRequestMessage.CodingKeys(255, v10, v11, v12);
  MEMORY[0x1AF44BDF0](&unk_1AD687378, v13);
  v41 = sub_1AD63BFA8();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v15 = (char *)&v32 - v14;
  v40 = a2;
  v36 = a3;
  v34 = type metadata accessor for ContextualUnpackFileRequestMessage(0, a2, a3, a4);
  v16 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v18 = (char *)&v32 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v38 = v15;
  v19 = (uint64_t)v42;
  sub_1AD63C524();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v32 = v16;
  v20 = v34;
  v21 = v35;
  v42 = a1;
  v22 = v18;
  LOBYTE(v43) = 0;
  v23 = v37;
  v24 = v40;
  v25 = v41;
  v26 = v38;
  sub_1AD63BF54();
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v22, v23, v24);
  v46 = 1;
  sub_1AD00F8A8();
  sub_1AD63BF54();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v25);
  v27 = v44;
  v28 = v45;
  v29 = &v22[*(int *)(v20 + 44)];
  *(_QWORD *)v29 = v43;
  *((_QWORD *)v29 + 1) = v27;
  v29[16] = v28;
  v30 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v33, v22, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v22, v20);
}

uint64_t sub_1AD474328()
{
  sub_1AD47478C();
  return sub_1AD63C560();
}

uint64_t sub_1AD474350()
{
  sub_1AD47478C();
  return sub_1AD63C56C();
}

_QWORD *sub_1AD474378@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_1AD47482C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1AD4743A0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1AD4735AC(a1, *v1, v1[1]);
}

uint64_t sub_1AD4743B8()
{
  return 1701603686;
}

uint64_t sub_1AD4743C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701603686 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AD47444C()
{
  sub_1AD4747D0();
  return sub_1AD63C560();
}

uint64_t sub_1AD474474()
{
  sub_1AD4747D0();
  return sub_1AD63C56C();
}

uint64_t sub_1AD47449C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD4737C0(a1, a2);
}

uint64_t sub_1AD4744B0(_QWORD *a1)
{
  return sub_1AD4736B0(a1);
}

uint64_t sub_1AD4744C4(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1AD474630(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD348530);
}

uint64_t sub_1AD4744D0()
{
  return sub_1AD34866C();
}

uint64_t sub_1AD4744F4()
{
  return sub_1AD348540();
}

uint64_t sub_1AD474508(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1AD474658(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD348540);
}

uint64_t sub_1AD474514()
{
  char *v0;

  return sub_1AD4739C8(*v0);
}

uint64_t sub_1AD474528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD4738E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD474558@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AD349E4C();
  *a1 = result;
  return result;
}

uint64_t sub_1AD474588(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD6873C8, a1);
  return sub_1AD63C560();
}

uint64_t sub_1AD4745BC(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD6873C8, a1);
  return sub_1AD63C56C();
}

uint64_t sub_1AD4745F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AD473B5C(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1AD474610(_QWORD *a1, uint64_t a2)
{
  return sub_1AD4739F8(a1, a2);
}

uint64_t sub_1AD474624(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1AD474630(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD474CDC);
}

uint64_t sub_1AD474630(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_1AD47464C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1AD474658(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD474CD0);
}

uint64_t sub_1AD474658(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_1AD63C4AC();
  a4(v8, *v4, a2[2], a2[3], a2[4]);
  return sub_1AD63C4F4();
}

uint64_t sub_1AD4746AC()
{
  char *v0;

  return sub_1AD473ED8(*v0);
}

uint64_t sub_1AD4746C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD473DF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD4746F0(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD687378, a1);
  return sub_1AD63C560();
}

uint64_t sub_1AD474724(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD687378, a1);
  return sub_1AD63C56C();
}

uint64_t sub_1AD474758@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AD474078(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1AD474778(_QWORD *a1, uint64_t a2)
{
  return sub_1AD473F08(a1, a2);
}

unint64_t sub_1AD47478C()
{
  unint64_t result;

  result = qword_1ED2E31B8;
  if (!qword_1ED2E31B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687468, &type metadata for UnpackRequestMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E31B8);
  }
  return result;
}

unint64_t sub_1AD4747D0()
{
  unint64_t result;

  result = qword_1EECDC838;
  if (!qword_1EECDC838)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687418, &type metadata for UnpackFileRequestMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC838);
  }
  return result;
}

uint64_t type metadata accessor for ContextualUnpackRequestMessage.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContextualUnpackRequestMessage.CodingKeys);
}

uint64_t type metadata accessor for ContextualUnpackFileRequestMessage.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContextualUnpackFileRequestMessage.CodingKeys);
}

_QWORD *sub_1AD47482C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2D80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD47478C();
  sub_1AD63C524();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1AD00F97C();
    sub_1AD63BF54();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1AD474954(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD4749A0 + 4 * byte_1AD686E33[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD4749D4 + 4 * byte_1AD686E2E[v4]))();
}

uint64_t sub_1AD4749D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD4749DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD4749E4);
  return result;
}

uint64_t sub_1AD4749F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD4749F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD4749FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD474A04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnpackFileRequestMessage.CodingKeys()
{
  return &type metadata for UnpackFileRequestMessage.CodingKeys;
}

uint64_t _s9BlastDoor24UnpackFileRequestMessageV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AD474A64 + 4 * byte_1AD686E38[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AD474A84 + 4 * byte_1AD686E3D[v4]))();
}

_BYTE *sub_1AD474A64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AD474A84(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD474A8C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD474A94(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD474A9C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD474AA4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UnpackRequestMessage.CodingKeys()
{
  return &type metadata for UnpackRequestMessage.CodingKeys;
}

unint64_t sub_1AD474AC4()
{
  unint64_t result;

  result = qword_1EECDC8C8;
  if (!qword_1EECDC8C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687128, &type metadata for UnpackRequestMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC8C8);
  }
  return result;
}

unint64_t sub_1AD474B0C()
{
  unint64_t result;

  result = qword_1EECDC8D0;
  if (!qword_1EECDC8D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6871E0, &type metadata for UnpackFileRequestMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC8D0);
  }
  return result;
}

void sub_1AD474B50()
{
  JUMPOUT(0x1AF44BDF0);
}

void sub_1AD474B60()
{
  JUMPOUT(0x1AF44BDF0);
}

void sub_1AD474B70()
{
  JUMPOUT(0x1AF44BDF0);
}

void sub_1AD474B80()
{
  JUMPOUT(0x1AF44BDF0);
}

void sub_1AD474B90()
{
  JUMPOUT(0x1AF44BDF0);
}

void sub_1AD474BA0()
{
  JUMPOUT(0x1AF44BDF0);
}

unint64_t sub_1AD474BB4()
{
  unint64_t result;

  result = qword_1EECDC8D8;
  if (!qword_1EECDC8D8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687150, &type metadata for UnpackFileRequestMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC8D8);
  }
  return result;
}

unint64_t sub_1AD474BFC()
{
  unint64_t result;

  result = qword_1EECDC8E0;
  if (!qword_1EECDC8E0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687178, &type metadata for UnpackFileRequestMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDC8E0);
  }
  return result;
}

unint64_t sub_1AD474C44()
{
  unint64_t result;

  result = qword_1ED2E31C0;
  if (!qword_1ED2E31C0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687098, &type metadata for UnpackRequestMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E31C0);
  }
  return result;
}

unint64_t sub_1AD474C8C()
{
  unint64_t result;

  result = qword_1ED2E31C8[0];
  if (!qword_1ED2E31C8[0])
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6870C0, &type metadata for UnpackRequestMessage.CodingKeys);
    atomic_store(result, qword_1ED2E31C8);
  }
  return result;
}

double sub_1AD474CE4@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648170;
  *(_QWORD *)(v3 + 32) = sub_1AD2F5F88;
  *(_QWORD *)(v3 + 40) = 0;
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = sub_1AD32DFE4;
  v4[3] = 0;
  v4[4] = 255;
  *(_QWORD *)(v3 + 48) = sub_1AD324618;
  *(_QWORD *)(v3 + 56) = v4;
  v5 = sub_1AD281264(v3);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2020);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD0097FC;
  *(_QWORD *)(inited + 40) = v6;
  return sub_1AD2807A4((_QWORD *)inited, a1);
}

uint64_t sub_1AD474E10@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD474E40(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD474E90@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[4];
  v2 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD474EC4(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[3].n128_i64[0];
  v6 = v1[3].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD474F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD474F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 56) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD47500C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD475040(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[1].n128_i64[0];
  v6 = v1[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD475094@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[4];
  v2 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD4750C8(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[3].n128_i64[0];
  v6 = v1[3].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD47511C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD475198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 56) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD475214@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD475244(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD475294@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[5];
  v4 = v1[6];
  v3 = v1[7];
  *a1 = v1[4];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD4752C4(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD475314@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[9];
  v4 = v1[10];
  v3 = v1[11];
  *a1 = v1[8];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD475344(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  v1[4] = *a1;
  v1[5].n128_u64[0] = v3;
  v1[5].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD475394@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[12];
  v2 = v1[13];
  v4 = v1[14];
  v5 = v1[15];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD4753C8(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[7].n128_i64[0];
  v6 = v1[7].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  v1[6] = *a1;
  v1[7].n128_u64[0] = v3;
  v1[7].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD47541C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD475494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD47550C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 88))
  {
    v1 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD475584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 120) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t (*sub_1AD475604(_QWORD *a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A4C30;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD47568C(_QWORD *a1))(uint64_t **, char)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD3A4C98;
}

uint64_t sub_1AD4756F0(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD475710(_QWORD *a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 56);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 48);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD47579C;
  }
  return result;
}

void (*sub_1AD4757A0(_QWORD *a1))(uint64_t **, char)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[4];
  v4 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD475804;
}

uint64_t sub_1AD475808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 24);
  return sub_1AD47584C(v3, a1);
}

uint64_t type metadata accessor for CloudKitShareParticipant(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDC8E8);
}

uint64_t sub_1AD47584C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CloudKitUserIdentity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CloudKitUserIdentity(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDC8F8);
}

uint64_t sub_1AD4758A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 24);
  return sub_1AD4758D4(a1, v3);
}

uint64_t sub_1AD4758D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CloudKitUserIdentity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD475918())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475940()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 28));
}

uint64_t sub_1AD475960(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_1AD47598C())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD4759B4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 32));
}

uint64_t sub_1AD4759D4(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*sub_1AD475A00())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475A28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t sub_1AD475A58(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*sub_1AD475A84())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475AAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t sub_1AD475ADC(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*sub_1AD475B08())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475B30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t sub_1AD475B60(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 44)) = v2;
  return result;
}

uint64_t (*sub_1AD475B8C())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475BB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t sub_1AD475BE4(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 48)) = v2;
  return result;
}

uint64_t (*sub_1AD475C10())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475C38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t sub_1AD475C68(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = v2;
  return result;
}

uint64_t (*sub_1AD475C94())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475CBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t sub_1AD475CEC(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 56)) = v2;
  return result;
}

uint64_t (*sub_1AD475D18())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 60);
  v2 = *(_QWORD *)v1;
  sub_1AD00408C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1AD475D80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 60);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD475DC4())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 64);
  v2 = *(_QWORD *)v1;
  sub_1AD00408C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1AD475E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 64);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD475E70())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475E98()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 68));
}

uint64_t sub_1AD475EB8(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*sub_1AD475EE4())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475F0C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 72));
}

uint64_t sub_1AD475F2C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 72)) = a1;
  return result;
}

uint64_t (*sub_1AD475F58())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD475F80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CloudKitShareParticipant(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 76), a1, (uint64_t *)&unk_1EECDB370);
}

uint64_t sub_1AD475FBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CloudKitShareParticipant(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 76), (uint64_t *)&unk_1EECDB370);
}

uint64_t (*sub_1AD475FF8())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD476020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 80);
  v2 = *(_QWORD *)v1;
  sub_1AD00408C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1AD476060(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 80);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD4760A4())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD4760CC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 84));
}

uint64_t sub_1AD4760EC(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 84)) = a1;
  return result;
}

uint64_t (*sub_1AD476118())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD476140()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CloudKitShareParticipant(0) + 88));
}

uint64_t sub_1AD476160(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*sub_1AD47618C())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

uint64_t sub_1AD4761B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitShareParticipant(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 92));
  return result;
}

uint64_t sub_1AD4761E4(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for CloudKitShareParticipant(0);
  *(_BYTE *)(v1 + *(int *)(result + 92)) = v2;
  return result;
}

uint64_t (*sub_1AD476210())(_QWORD)
{
  type metadata accessor for CloudKitShareParticipant(0);
  return nullsub_1;
}

_QWORD *sub_1AD476238@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[17];

  sub_1AD00FF28(v1, (uint64_t)v4, (uint64_t *)&unk_1EECDE780);
  sub_1AD00FF28((uint64_t)v4, a1, (uint64_t *)&unk_1EECDE780);
  return sub_1AD2850C8(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD285124);
}

uint64_t sub_1AD476294(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[136];
  _QWORD v4[18];

  sub_1AD00FF28(a1, (uint64_t)v3, (uint64_t *)&unk_1EECDE780);
  sub_1AD00FF28(v1, (uint64_t)v4, (uint64_t *)&unk_1EECDE780);
  sub_1AD2850C8(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284BE4);
  return sub_1AD00FF28((uint64_t)v3, v1, (uint64_t *)&unk_1EECDE780);
}

uint64_t (*sub_1AD4762F8())()
{
  return nullsub_1;
}

uint64_t sub_1AD476308@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CloudKitUserIdentity(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 20), a1, &qword_1EECD23F8);
}

uint64_t sub_1AD476344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CloudKitUserIdentity(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 20), &qword_1EECD23F8);
}

uint64_t (*sub_1AD476380())(_QWORD)
{
  type metadata accessor for CloudKitUserIdentity(0);
  return nullsub_1;
}

_QWORD *sub_1AD4763A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[28];

  v3 = type metadata accessor for CloudKitUserIdentity(0);
  sub_1AD00FF28(v1 + *(int *)(v3 + 24), (uint64_t)v5, &qword_1EECD2A20);
  sub_1AD00FF28((uint64_t)v5, a1, &qword_1EECD2A20);
  return sub_1AD4765E4(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD476418);
}

uint64_t sub_1AD476418(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28)
{
  if (result)
  {
    swift_retain();
    sub_1AD003E48(a3, a4);
    swift_retain();
    sub_1AD003E48(a7, a8);
    sub_1AD285124(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24);
    return sub_1AD00408C(a27, a28);
  }
  return result;
}

uint64_t sub_1AD476568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[224];
  _QWORD v5[28];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD2A20);
  v2 = v1 + *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 24);
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD2A20);
  sub_1AD4765E4(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284D2C);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD2A20);
}

_QWORD *sub_1AD4765E4(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27]);
  return a1;
}

uint64_t (*sub_1AD476658())(_QWORD)
{
  type metadata accessor for CloudKitUserIdentity(0);
  return nullsub_1;
}

uint64_t sub_1AD476680()
{
  type metadata accessor for CloudKitUserIdentity(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD4766A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_1AD4766DC())(_QWORD)
{
  type metadata accessor for CloudKitUserIdentity(0);
  return nullsub_1;
}

uint64_t sub_1AD476704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 32);
  v2 = *(_QWORD *)v1;
  sub_1AD00408C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1AD476744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 32);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD476788())(_QWORD)
{
  type metadata accessor for CloudKitUserIdentity(0);
  return nullsub_1;
}

uint64_t sub_1AD4767B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 36);
  v2 = *(_QWORD *)v1;
  sub_1AD00408C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1AD4767F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 36);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD476834())(_QWORD)
{
  type metadata accessor for CloudKitUserIdentity(0);
  return nullsub_1;
}

uint64_t sub_1AD47685C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 40));
}

uint64_t sub_1AD47687C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitUserIdentity(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*sub_1AD4768A8())(_QWORD)
{
  type metadata accessor for CloudKitUserIdentity(0);
  return nullsub_1;
}

uint64_t sub_1AD4768D0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 44));
}

uint64_t sub_1AD4768F0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitUserIdentity(0);
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*sub_1AD47691C())(_QWORD)
{
  type metadata accessor for CloudKitUserIdentity(0);
  return nullsub_1;
}

uint64_t sub_1AD476944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 48);
  v2 = *(_QWORD *)v1;
  sub_1AD00408C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1AD476984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 48);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD4769C8())(_QWORD)
{
  type metadata accessor for CloudKitUserIdentity(0);
  return nullsub_1;
}

uint64_t sub_1AD4769F0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CloudKitUserIdentity(0) + 52));
}

uint64_t sub_1AD476A10(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudKitUserIdentity(0);
  *(_QWORD *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*sub_1AD476A3C())(_QWORD)
{
  type metadata accessor for CloudKitUserIdentity(0);
  return nullsub_1;
}

uint64_t (*sub_1AD476A68(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3019A4;
  }
  return result;
}

void (*sub_1AD476AF4(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v7 = v1[3];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD301A68;
}

uint64_t sub_1AD476B58(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD476B78(_QWORD *a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 56);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 48);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD47579C;
  }
  return result;
}

void (*sub_1AD476C04(_QWORD *a1))(uint64_t **, char)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[4];
  v4 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD475804;
}

_QWORD *sub_1AD476C68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[17];

  sub_1AD00FF28(v1 + 64, (uint64_t)v4, (uint64_t *)&unk_1EECDE780);
  sub_1AD00FF28((uint64_t)v4, a1, (uint64_t *)&unk_1EECDE780);
  return sub_1AD2850C8(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD285124);
}

uint64_t sub_1AD476CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[136];
  _QWORD v5[17];

  sub_1AD00FF28(a1, (uint64_t)v4, (uint64_t *)&unk_1EECDE780);
  v2 = v1 + 64;
  sub_1AD00FF28(v2, (uint64_t)v5, (uint64_t *)&unk_1EECDE780);
  sub_1AD2850C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284BE4);
  return sub_1AD00FF28((uint64_t)v4, v2, (uint64_t *)&unk_1EECDE780);
}

uint64_t (*sub_1AD476D34())()
{
  return nullsub_1;
}

uint64_t sub_1AD476D44()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t sub_1AD476D4C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 200) = result;
  return result;
}

uint64_t (*sub_1AD476D54())()
{
  return nullsub_1;
}

uint64_t sub_1AD476D64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + 216));
  return v1;
}

uint64_t sub_1AD476D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD004118(*(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = a2;
  return result;
}

uint64_t (*sub_1AD476DC8())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD476DDC(_QWORD *a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A4C30;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD476E64(_QWORD *a1))(uint64_t **, char)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD3A4C98;
}

uint64_t sub_1AD476EC8(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD476EE8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 56);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 48);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3EE5A4;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD476F70(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[5];
  v6 = v1[6];
  v5 = v1[7];
  *v3 = v1[4];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD3EE66C;
}

uint64_t sub_1AD476FD4(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD476FF4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 88);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 80);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3EE7BC;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD47707C(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[9];
  v6 = v1[10];
  v5 = v1[11];
  *v3 = v1[8];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD3EE884;
}

uint64_t sub_1AD4770E0(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD477100(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 120);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 112);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3EEA44;
  }
  return result;
}

void (*sub_1AD47718C(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[12];
  v4 = v1[13];
  v6 = v1[14];
  v7 = v1[15];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD3EEB80;
}

uint64_t sub_1AD4771F0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t sub_1AD4771F8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = result;
  return result;
}

uint64_t (*sub_1AD477200())()
{
  return nullsub_1;
}

uint64_t sub_1AD477210(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD3488, type metadata accessor for CloudKitShareParticipant, (uint64_t)&unk_1AD64FAF8);
  result = sub_1ACFF9724(&qword_1EECD3528, type metadata accessor for CloudKitShareParticipant, (uint64_t)&unk_1AD64FB20);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD47726C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD29A8, type metadata accessor for CloudKitUserIdentity, (uint64_t)&unk_1AD64FB48);
  result = sub_1ACFF9724(&qword_1EECD29E8, type metadata accessor for CloudKitUserIdentity, (uint64_t)&unk_1AD64FB70);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD4772C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD284C78, (uint64_t (*)(void))sub_1AD284F3C);
}

uint64_t sub_1AD4772DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD284B24, (uint64_t (*)(void))sub_1AD284E7C);
}

uint64_t sub_1AD4772F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD477330@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD477368(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD4773A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[5];
  v3 = a1[6];
  v4 = a1[7];
  *a2 = a1[4];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD4773E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD477420@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD477460(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD47749C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[5];
  v3 = a1[6];
  v4 = a1[7];
  *a2 = a1[4];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD4774DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD477518@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD477550(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD47758C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[4];
  v3 = a1[5];
  v5 = a1[6];
  v4 = a1[7];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD4775C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD477600@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[8];
  v3 = a1[9];
  v5 = a1[10];
  v4 = a1[11];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD477638(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD477674@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[13];
  v3 = a1[14];
  v4 = a1[15];
  *a2 = a1[12];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD4776B0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int *v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  unint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _OWORD *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  unint64_t v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  _OWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _OWORD *v159;
  uint64_t v160;
  int *v161;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return a1;
  }
  v8 = a2[1];
  v9 = a2[2];
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  v10 = a2[5];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_QWORD *)(a1 + 40) = v10;
  v11 = a2 + 6;
  v12 = a2[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v12 == 1)
  {
    *(_OWORD *)(a1 + 48) = *v11;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)v11;
    *(_QWORD *)(a1 + 56) = v12;
    swift_bridgeObjectRetain();
  }
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = (uint64_t)a2 + v13;
  v16 = *(uint64_t *)((char *)a2 + v13);
  if (v16)
  {
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_QWORD *)(v15 + 16);
    *(_QWORD *)v14 = v16;
    *(_QWORD *)(v14 + 8) = v17;
    *(_QWORD *)(v14 + 16) = v18;
    *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
    v19 = *(_QWORD *)(v15 + 48);
    *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
    *(_QWORD *)(v14 + 48) = v19;
    *(_OWORD *)(v14 + 56) = *(_OWORD *)(v15 + 56);
    v20 = *(_QWORD *)(v15 + 80);
    *(_QWORD *)(v14 + 72) = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + 80) = v20;
    v21 = *(_QWORD *)(v15 + 104);
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *(_QWORD *)(v14 + 104) = v21;
    v22 = (_OWORD *)(v15 + 112);
    v23 = *(_QWORD *)(v15 + 120);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v23 == 1)
    {
      *(_OWORD *)(v14 + 112) = *v22;
    }
    else
    {
      *(_QWORD *)(v14 + 112) = *(_QWORD *)v22;
      *(_QWORD *)(v14 + 120) = v23;
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(v14 + 128) = *(_QWORD *)(v15 + 128);
  }
  else
  {
    v24 = *(_OWORD *)(v15 + 112);
    *(_OWORD *)(v14 + 96) = *(_OWORD *)(v15 + 96);
    *(_OWORD *)(v14 + 112) = v24;
    *(_QWORD *)(v14 + 128) = *(_QWORD *)(v15 + 128);
    v25 = *(_OWORD *)(v15 + 48);
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
    *(_OWORD *)(v14 + 48) = v25;
    v26 = *(_OWORD *)(v15 + 80);
    *(_OWORD *)(v14 + 64) = *(_OWORD *)(v15 + 64);
    *(_OWORD *)(v14 + 80) = v26;
    v27 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v27;
  }
  v28 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v29 = v28[5];
  v30 = (void *)(v14 + v29);
  v31 = (const void *)(v15 + v29);
  v32 = sub_1AD63AE2C();
  v33 = *(_QWORD *)(v32 - 8);
  v161 = a3;
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v35 = v28[6];
  v36 = v14 + v35;
  v37 = v15 + v35;
  v38 = *(_QWORD *)(v15 + v35);
  if (v38)
  {
    v39 = *(_QWORD *)(v37 + 8);
    *(_QWORD *)v36 = v38;
    *(_QWORD *)(v36 + 8) = v39;
    v40 = (_OWORD *)(v37 + 16);
    v41 = *(_QWORD *)(v37 + 24);
    swift_retain();
    if (v41 == 1)
    {
      *(_OWORD *)(v36 + 16) = *v40;
    }
    else
    {
      *(_QWORD *)(v36 + 16) = *(_QWORD *)v40;
      *(_QWORD *)(v36 + 24) = v41;
      swift_bridgeObjectRetain();
    }
    v49 = *(_QWORD *)(v37 + 40);
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
    *(_QWORD *)(v36 + 40) = v49;
    v50 = (_OWORD *)(v37 + 48);
    v51 = *(_QWORD *)(v37 + 56);
    swift_retain();
    if (v51 == 1)
    {
      *(_OWORD *)(v36 + 48) = *v50;
    }
    else
    {
      *(_QWORD *)(v36 + 48) = *(_QWORD *)v50;
      *(_QWORD *)(v36 + 56) = v51;
      swift_bridgeObjectRetain();
    }
    v52 = *(_QWORD *)(v37 + 64);
    if (v52)
    {
      v53 = *(_QWORD *)(v37 + 72);
      v54 = *(_QWORD *)(v37 + 80);
      *(_QWORD *)(v36 + 64) = v52;
      *(_QWORD *)(v36 + 72) = v53;
      *(_QWORD *)(v36 + 80) = v54;
      *(_OWORD *)(v36 + 88) = *(_OWORD *)(v37 + 88);
      v55 = *(_QWORD *)(v37 + 112);
      *(_QWORD *)(v36 + 104) = *(_QWORD *)(v37 + 104);
      *(_QWORD *)(v36 + 112) = v55;
      *(_OWORD *)(v36 + 120) = *(_OWORD *)(v37 + 120);
      v56 = *(_QWORD *)(v37 + 144);
      *(_QWORD *)(v36 + 136) = *(_QWORD *)(v37 + 136);
      *(_QWORD *)(v36 + 144) = v56;
      v57 = *(_QWORD *)(v37 + 168);
      *(_OWORD *)(v36 + 152) = *(_OWORD *)(v37 + 152);
      *(_QWORD *)(v36 + 168) = v57;
      v159 = (_OWORD *)(v37 + 176);
      v160 = *(_QWORD *)(v37 + 184);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v160 == 1)
      {
        *(_OWORD *)(v36 + 176) = *v159;
      }
      else
      {
        *(_QWORD *)(v36 + 176) = *(_QWORD *)v159;
        *(_QWORD *)(v36 + 184) = v160;
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(v36 + 192) = *(_QWORD *)(v37 + 192);
    }
    else
    {
      v58 = *(_OWORD *)(v37 + 176);
      *(_OWORD *)(v36 + 160) = *(_OWORD *)(v37 + 160);
      *(_OWORD *)(v36 + 176) = v58;
      *(_QWORD *)(v36 + 192) = *(_QWORD *)(v37 + 192);
      v59 = *(_OWORD *)(v37 + 112);
      *(_OWORD *)(v36 + 96) = *(_OWORD *)(v37 + 96);
      *(_OWORD *)(v36 + 112) = v59;
      v60 = *(_OWORD *)(v37 + 144);
      *(_OWORD *)(v36 + 128) = *(_OWORD *)(v37 + 128);
      *(_OWORD *)(v36 + 144) = v60;
      v61 = *(_OWORD *)(v37 + 80);
      *(_OWORD *)(v36 + 64) = *(_OWORD *)(v37 + 64);
      *(_OWORD *)(v36 + 80) = v61;
    }
    *(_BYTE *)(v36 + 200) = *(_BYTE *)(v37 + 200);
    v62 = (uint64_t *)(v37 + 208);
    v63 = *(_QWORD *)(v37 + 216);
    if (v63 >> 60 == 15)
    {
      *(_OWORD *)(v36 + 208) = *(_OWORD *)v62;
    }
    else
    {
      v64 = *v62;
      sub_1AD0040A0(*v62, *(_QWORD *)(v37 + 216));
      *(_QWORD *)(v36 + 208) = v64;
      *(_QWORD *)(v36 + 216) = v63;
    }
  }
  else
  {
    v42 = *(_OWORD *)(v37 + 176);
    *(_OWORD *)(v36 + 160) = *(_OWORD *)(v37 + 160);
    *(_OWORD *)(v36 + 176) = v42;
    v43 = *(_OWORD *)(v37 + 208);
    *(_OWORD *)(v36 + 192) = *(_OWORD *)(v37 + 192);
    *(_OWORD *)(v36 + 208) = v43;
    v44 = *(_OWORD *)(v37 + 112);
    *(_OWORD *)(v36 + 96) = *(_OWORD *)(v37 + 96);
    *(_OWORD *)(v36 + 112) = v44;
    v45 = *(_OWORD *)(v37 + 144);
    *(_OWORD *)(v36 + 128) = *(_OWORD *)(v37 + 128);
    *(_OWORD *)(v36 + 144) = v45;
    v46 = *(_OWORD *)(v37 + 48);
    *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
    *(_OWORD *)(v36 + 48) = v46;
    v47 = *(_OWORD *)(v37 + 80);
    *(_OWORD *)(v36 + 64) = *(_OWORD *)(v37 + 64);
    *(_OWORD *)(v36 + 80) = v47;
    v48 = *(_OWORD *)(v37 + 16);
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *(_OWORD *)(v36 + 16) = v48;
  }
  v65 = v161;
  *(_QWORD *)(v14 + v28[7]) = *(_QWORD *)(v15 + v28[7]);
  v66 = v28[8];
  v67 = v14 + v66;
  v68 = (_OWORD *)(v15 + v66);
  v69 = *(_QWORD *)(v15 + v66 + 8);
  swift_bridgeObjectRetain();
  if (v69 >> 60 == 15)
  {
    *(_OWORD *)v67 = *v68;
  }
  else
  {
    v70 = *(_QWORD *)v68;
    sub_1AD0040A0(v70, v69);
    *(_QWORD *)v67 = v70;
    *(_QWORD *)(v67 + 8) = v69;
  }
  v71 = v28[9];
  v72 = v14 + v71;
  v73 = (uint64_t *)(v15 + v71);
  v74 = v73[1];
  if (v74 >> 60 == 15)
  {
    *(_OWORD *)v72 = *(_OWORD *)v73;
  }
  else
  {
    v75 = *v73;
    sub_1AD0040A0(*v73, v73[1]);
    *(_QWORD *)v72 = v75;
    *(_QWORD *)(v72 + 8) = v74;
  }
  *(_BYTE *)(v14 + v28[10]) = *(_BYTE *)(v15 + v28[10]);
  *(_BYTE *)(v14 + v28[11]) = *(_BYTE *)(v15 + v28[11]);
  v76 = v28[12];
  v77 = v14 + v76;
  v78 = (uint64_t *)(v15 + v76);
  v79 = v78[1];
  if (v79 >> 60 == 15)
  {
    *(_OWORD *)v77 = *(_OWORD *)v78;
  }
  else
  {
    v80 = *v78;
    sub_1AD0040A0(*v78, v78[1]);
    *(_QWORD *)v77 = v80;
    *(_QWORD *)(v77 + 8) = v79;
  }
  *(_QWORD *)(v14 + v28[13]) = *(_QWORD *)(v15 + v28[13]);
  v81 = v161[8];
  *(_BYTE *)(a1 + v161[7]) = *((_BYTE *)a2 + v161[7]);
  *(_BYTE *)(a1 + v81) = *((_BYTE *)a2 + v81);
  v82 = v161[10];
  *(_BYTE *)(a1 + v161[9]) = *((_BYTE *)a2 + v161[9]);
  *(_BYTE *)(a1 + v82) = *((_BYTE *)a2 + v82);
  v83 = v161[12];
  *(_BYTE *)(a1 + v161[11]) = *((_BYTE *)a2 + v161[11]);
  *(_BYTE *)(a1 + v83) = *((_BYTE *)a2 + v83);
  v84 = v161[14];
  *(_BYTE *)(a1 + v161[13]) = *((_BYTE *)a2 + v161[13]);
  v85 = v161[15];
  v86 = a1 + v85;
  v87 = (uint64_t *)((char *)a2 + v85);
  *(_BYTE *)(a1 + v84) = *((_BYTE *)a2 + v84);
  v88 = v87[1];
  if (v88 >> 60 == 15)
  {
    *(_OWORD *)v86 = *(_OWORD *)v87;
  }
  else
  {
    v89 = *v87;
    sub_1AD0040A0(*v87, v87[1]);
    *(_QWORD *)v86 = v89;
    *(_QWORD *)(v86 + 8) = v88;
  }
  v90 = v161[16];
  v91 = a1 + v90;
  v92 = (uint64_t *)((char *)a2 + v90);
  v93 = v92[1];
  if (v93 >> 60 == 15)
  {
    *(_OWORD *)v91 = *(_OWORD *)v92;
  }
  else
  {
    v94 = *v92;
    sub_1AD0040A0(*v92, v92[1]);
    *(_QWORD *)v91 = v94;
    *(_QWORD *)(v91 + 8) = v93;
  }
  v95 = v161[18];
  *(_BYTE *)(a1 + v161[17]) = *((_BYTE *)a2 + v161[17]);
  *(_BYTE *)(a1 + v95) = *((_BYTE *)a2 + v95);
  v96 = v161[19];
  v97 = (char *)(a1 + v96);
  v98 = (char *)a2 + v96;
  v99 = type metadata accessor for CloudKitSharingToken();
  v100 = *(_QWORD *)(v99 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
  {
    *(_DWORD *)v97 = *(_DWORD *)v98;
    *((_QWORD *)v97 + 1) = *((_QWORD *)v98 + 1);
    v102 = *((_QWORD *)v98 + 4);
    *((_OWORD *)v97 + 1) = *((_OWORD *)v98 + 1);
    *((_QWORD *)v97 + 4) = v102;
    v103 = (uint64_t *)(v98 + 40);
    v104 = *((_QWORD *)v98 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v104 >> 60 == 11 || v104 >> 60 == 15)
    {
      *(_OWORD *)(v97 + 40) = *(_OWORD *)v103;
      v105 = *((_QWORD *)v98 + 9);
      if (v105)
        goto LABEL_52;
    }
    else
    {
      v111 = *v103;
      sub_1AD0040A0(*v103, v104);
      *((_QWORD *)v97 + 5) = v111;
      *((_QWORD *)v97 + 6) = v104;
      v105 = *((_QWORD *)v98 + 9);
      if (v105)
      {
LABEL_52:
        v106 = *((_DWORD *)v98 + 15);
        *((_DWORD *)v97 + 14) = *((_DWORD *)v98 + 14);
        *((_DWORD *)v97 + 15) = v106;
        v97[64] = v98[64];
        v107 = *((_QWORD *)v98 + 10);
        *((_QWORD *)v97 + 9) = v105;
        *((_QWORD *)v97 + 10) = v107;
        v108 = (uint64_t *)(v98 + 88);
        v109 = *((_QWORD *)v98 + 12);
        swift_retain();
        if (v109 >> 60 == 15)
        {
          *(_OWORD *)(v97 + 88) = *(_OWORD *)v108;
        }
        else
        {
          v110 = *v108;
          sub_1AD0040A0(*v108, v109);
          *((_QWORD *)v97 + 11) = v110;
          *((_QWORD *)v97 + 12) = v109;
        }
LABEL_57:
        v113 = *((_QWORD *)v98 + 14);
        *((_QWORD *)v97 + 13) = *((_QWORD *)v98 + 13);
        *((_QWORD *)v97 + 14) = v113;
        v114 = (uint64_t *)(v98 + 120);
        v115 = *((_QWORD *)v98 + 16);
        swift_retain();
        if (v115 >> 60 == 15)
        {
          *(_OWORD *)(v97 + 120) = *(_OWORD *)v114;
        }
        else
        {
          v116 = *v114;
          sub_1AD0040A0(*v114, v115);
          *((_QWORD *)v97 + 15) = v116;
          *((_QWORD *)v97 + 16) = v115;
        }
        v117 = *((_QWORD *)v98 + 18);
        *((_QWORD *)v97 + 17) = *((_QWORD *)v98 + 17);
        *((_QWORD *)v97 + 18) = v117;
        v118 = v98 + 152;
        v119 = *((_QWORD *)v98 + 20);
        swift_retain();
        if (v119 >> 60 == 11 || v119 >> 60 == 15)
        {
          *(_OWORD *)(v97 + 152) = *v118;
        }
        else
        {
          v120 = *(_QWORD *)v118;
          sub_1AD0040A0(v120, v119);
          *((_QWORD *)v97 + 19) = v120;
          *((_QWORD *)v97 + 20) = v119;
        }
        v121 = *((_QWORD *)v98 + 21);
        if (v121)
        {
          v122 = *((_QWORD *)v98 + 22);
          *((_QWORD *)v97 + 21) = v121;
          *((_QWORD *)v97 + 22) = v122;
          v123 = (uint64_t *)(v98 + 184);
          v124 = *((_QWORD *)v98 + 24);
          swift_retain();
          if (v124 >> 60 == 15)
          {
            *(_OWORD *)(v97 + 184) = *(_OWORD *)v123;
          }
          else
          {
            v127 = *v123;
            sub_1AD0040A0(*v123, v124);
            *((_QWORD *)v97 + 23) = v127;
            *((_QWORD *)v97 + 24) = v124;
          }
          *((_DWORD *)v97 + 50) = *((_DWORD *)v98 + 50);
          v128 = *((_QWORD *)v98 + 27);
          *((_QWORD *)v97 + 26) = *((_QWORD *)v98 + 26);
          *((_QWORD *)v97 + 27) = v128;
          v129 = (uint64_t *)(v98 + 224);
          v130 = *((_QWORD *)v98 + 29);
          swift_retain();
          if (v130 >> 60 == 15)
          {
            *((_OWORD *)v97 + 14) = *(_OWORD *)v129;
          }
          else
          {
            v131 = *v129;
            sub_1AD0040A0(*v129, v130);
            *((_QWORD *)v97 + 28) = v131;
            *((_QWORD *)v97 + 29) = v130;
          }
        }
        else
        {
          v125 = *(_OWORD *)(v98 + 216);
          *(_OWORD *)(v97 + 200) = *(_OWORD *)(v98 + 200);
          *(_OWORD *)(v97 + 216) = v125;
          *((_QWORD *)v97 + 29) = *((_QWORD *)v98 + 29);
          v126 = *(_OWORD *)(v98 + 184);
          *(_OWORD *)(v97 + 168) = *(_OWORD *)(v98 + 168);
          *(_OWORD *)(v97 + 184) = v126;
        }
        v132 = *((_QWORD *)v98 + 32);
        *((_OWORD *)v97 + 15) = *((_OWORD *)v98 + 15);
        *((_QWORD *)v97 + 32) = v132;
        v133 = (uint64_t *)(v98 + 264);
        v134 = *((_QWORD *)v98 + 34);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v134 >> 60 == 11 || v134 >> 60 == 15)
        {
          *(_OWORD *)(v97 + 264) = *(_OWORD *)v133;
        }
        else
        {
          v135 = *v133;
          sub_1AD0040A0(*v133, v134);
          *((_QWORD *)v97 + 33) = v135;
          *((_QWORD *)v97 + 34) = v134;
        }
        v136 = *(int *)(v99 + 24);
        v137 = &v97[v136];
        v138 = &v98[v136];
        v139 = *(_QWORD *)&v98[v136 + 8];
        *(_QWORD *)v137 = *(_QWORD *)&v98[v136];
        *((_QWORD *)v137 + 1) = v139;
        swift_retain();
        v140 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v141 = &v137[v140];
        v142 = &v138[v140];
        v143 = sub_1AD63AF28();
        v144 = *(_QWORD *)(v143 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143))
        {
          v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v141, v142, v143);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
        }
        v65 = v161;
        v146 = *(int *)(v99 + 28);
        v147 = &v97[v146];
        v148 = &v98[v146];
        v149 = *((_QWORD *)v148 + 1);
        *(_QWORD *)v147 = *(_QWORD *)v148;
        *((_QWORD *)v147 + 1) = v149;
        v150 = v148 + 16;
        v151 = *((_QWORD *)v148 + 3);
        swift_retain();
        if (v151 == 1)
        {
          *((_OWORD *)v147 + 1) = *v150;
        }
        else
        {
          *((_QWORD *)v147 + 2) = *(_QWORD *)v150;
          *((_QWORD *)v147 + 3) = v151;
          swift_bridgeObjectRetain();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
        goto LABEL_83;
      }
    }
    v112 = *(_OWORD *)(v98 + 72);
    *(_OWORD *)(v97 + 56) = *(_OWORD *)(v98 + 56);
    *(_OWORD *)(v97 + 72) = v112;
    *(_OWORD *)(v97 + 88) = *(_OWORD *)(v98 + 88);
    goto LABEL_57;
  }
  v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
LABEL_83:
  v152 = v65[20];
  v153 = a1 + v152;
  v154 = (uint64_t *)((char *)a2 + v152);
  v155 = v154[1];
  if (v155 >> 60 == 15)
  {
    *(_OWORD *)v153 = *(_OWORD *)v154;
  }
  else
  {
    v156 = *v154;
    sub_1AD0040A0(*v154, v154[1]);
    *(_QWORD *)v153 = v156;
    *(_QWORD *)(v153 + 8) = v155;
  }
  v157 = v65[22];
  *(_BYTE *)(a1 + v65[21]) = *((_BYTE *)a2 + v65[21]);
  *(_BYTE *)(a1 + v157) = *((_BYTE *)a2 + v157);
  *(_BYTE *)(a1 + v65[23]) = *((_BYTE *)a2 + v65[23]);
  return a1;
}

uint64_t sub_1AD47816C(uint64_t a1, int *a2)
{
  _QWORD *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  unint64_t v37;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 56) != 1)
    swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + a2[6]);
  if (*v4)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (v4[15] != 1)
      swift_bridgeObjectRelease();
  }
  v5 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v6 = (char *)v4 + v5[5];
  v7 = sub_1AD63AE2C();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  v9 = (_QWORD *)((char *)v4 + v5[6]);
  if (*v9)
  {
    swift_release();
    if (v9[3] != 1)
      swift_bridgeObjectRelease();
    swift_release();
    if (v9[7] != 1)
      swift_bridgeObjectRelease();
    if (v9[8])
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if (v9[23] != 1)
        swift_bridgeObjectRelease();
    }
    v10 = v9[27];
    if (v10 >> 60 != 15)
      sub_1AD00412C(v9[26], v10);
  }
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)((char *)v4 + v5[8]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_1AD00412C(*v11, v12);
  v13 = (_QWORD *)((char *)v4 + v5[9]);
  v14 = v13[1];
  if (v14 >> 60 != 15)
    sub_1AD00412C(*v13, v14);
  v15 = (_QWORD *)((char *)v4 + v5[12]);
  v16 = v15[1];
  if (v16 >> 60 != 15)
    sub_1AD00412C(*v15, v16);
  v17 = (uint64_t *)(a1 + a2[15]);
  v18 = v17[1];
  if (v18 >> 60 != 15)
    sub_1AD00412C(*v17, v18);
  v19 = (uint64_t *)(a1 + a2[16]);
  v20 = v19[1];
  if (v20 >> 60 != 15)
    sub_1AD00412C(*v19, v20);
  v21 = (uint64_t *)(a1 + a2[19]);
  v22 = type metadata accessor for CloudKitSharingToken();
  result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v24 = v21[6];
    if (v24 >> 60 != 15 && (v24 & 0xF000000000000000) != 0xB000000000000000)
      sub_1AD00412C(v21[5], v24);
    if (v21[9])
    {
      swift_release();
      v25 = v21[12];
      if (v25 >> 60 != 15)
        sub_1AD00412C(v21[11], v25);
    }
    swift_release();
    v26 = v21[16];
    if (v26 >> 60 != 15)
      sub_1AD00412C(v21[15], v26);
    swift_release();
    v27 = v21[20];
    if (v27 >> 60 != 15 && (v27 & 0xF000000000000000) != 0xB000000000000000)
      sub_1AD00412C(v21[19], v27);
    if (v21[21])
    {
      swift_release();
      v28 = v21[24];
      if (v28 >> 60 != 15)
        sub_1AD00412C(v21[23], v28);
      swift_release();
      v29 = v21[29];
      if (v29 >> 60 != 15)
        sub_1AD00412C(v21[28], v29);
    }
    swift_bridgeObjectRelease();
    swift_release();
    v30 = v21[34];
    if (v30 >> 60 != 15 && (v30 & 0xF000000000000000) != 0xB000000000000000)
      sub_1AD00412C(v21[33], v30);
    v31 = (char *)v21 + *(int *)(v22 + 24);
    swift_release();
    v32 = &v31[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28)];
    v33 = sub_1AD63AF28();
    v34 = *(_QWORD *)(v33 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
    v35 = (char *)v21 + *(int *)(v22 + 28);
    swift_release();
    result = *((_QWORD *)v35 + 3);
    if (result != 1)
      result = swift_bridgeObjectRelease();
  }
  v36 = (uint64_t *)(a1 + a2[20]);
  v37 = v36[1];
  if (v37 >> 60 != 15)
    return sub_1AD00412C(*v36, v37);
  return result;
}

uint64_t sub_1AD4785DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int *v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _DWORD *v94;
  _DWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _OWORD *v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  unint64_t v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  _QWORD *v145;
  uint64_t v146;
  _OWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _OWORD *v156;
  uint64_t v157;
  int *v158;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = (_OWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v9 == 1)
  {
    *(_OWORD *)(a1 + 48) = *v8;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)v8;
    *(_QWORD *)(a1 + 56) = v9;
    swift_bridgeObjectRetain();
  }
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a2 + v10);
  if (v13)
  {
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_QWORD *)(v12 + 16);
    *(_QWORD *)v11 = v13;
    *(_QWORD *)(v11 + 8) = v14;
    *(_QWORD *)(v11 + 16) = v15;
    *(_OWORD *)(v11 + 24) = *(_OWORD *)(v12 + 24);
    v16 = *(_QWORD *)(v12 + 48);
    *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
    *(_QWORD *)(v11 + 48) = v16;
    *(_OWORD *)(v11 + 56) = *(_OWORD *)(v12 + 56);
    v17 = *(_QWORD *)(v12 + 80);
    *(_QWORD *)(v11 + 72) = *(_QWORD *)(v12 + 72);
    *(_QWORD *)(v11 + 80) = v17;
    v18 = *(_QWORD *)(v12 + 104);
    *(_OWORD *)(v11 + 88) = *(_OWORD *)(v12 + 88);
    *(_QWORD *)(v11 + 104) = v18;
    v19 = (_OWORD *)(v12 + 112);
    v20 = *(_QWORD *)(v12 + 120);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v20 == 1)
    {
      *(_OWORD *)(v11 + 112) = *v19;
    }
    else
    {
      *(_QWORD *)(v11 + 112) = *(_QWORD *)v19;
      *(_QWORD *)(v11 + 120) = v20;
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(v11 + 128) = *(_QWORD *)(v12 + 128);
  }
  else
  {
    v21 = *(_OWORD *)(v12 + 112);
    *(_OWORD *)(v11 + 96) = *(_OWORD *)(v12 + 96);
    *(_OWORD *)(v11 + 112) = v21;
    *(_QWORD *)(v11 + 128) = *(_QWORD *)(v12 + 128);
    v22 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(v11 + 48) = v22;
    v23 = *(_OWORD *)(v12 + 80);
    *(_OWORD *)(v11 + 64) = *(_OWORD *)(v12 + 64);
    *(_OWORD *)(v11 + 80) = v23;
    v24 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *(_OWORD *)(v11 + 16) = v24;
  }
  v25 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v26 = v25[5];
  v27 = (void *)(v11 + v26);
  v28 = (const void *)(v12 + v26);
  v29 = sub_1AD63AE2C();
  v30 = *(_QWORD *)(v29 - 8);
  v158 = a3;
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = v25[6];
  v33 = v11 + v32;
  v34 = v12 + v32;
  v35 = *(_QWORD *)(v12 + v32);
  if (v35)
  {
    v36 = *(_QWORD *)(v34 + 8);
    *(_QWORD *)v33 = v35;
    *(_QWORD *)(v33 + 8) = v36;
    v37 = (_OWORD *)(v34 + 16);
    v38 = *(_QWORD *)(v34 + 24);
    swift_retain();
    if (v38 == 1)
    {
      *(_OWORD *)(v33 + 16) = *v37;
    }
    else
    {
      *(_QWORD *)(v33 + 16) = *(_QWORD *)v37;
      *(_QWORD *)(v33 + 24) = v38;
      swift_bridgeObjectRetain();
    }
    v46 = *(_QWORD *)(v34 + 40);
    *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
    *(_QWORD *)(v33 + 40) = v46;
    v47 = (_OWORD *)(v34 + 48);
    v48 = *(_QWORD *)(v34 + 56);
    swift_retain();
    if (v48 == 1)
    {
      *(_OWORD *)(v33 + 48) = *v47;
    }
    else
    {
      *(_QWORD *)(v33 + 48) = *(_QWORD *)v47;
      *(_QWORD *)(v33 + 56) = v48;
      swift_bridgeObjectRetain();
    }
    v49 = *(_QWORD *)(v34 + 64);
    if (v49)
    {
      v50 = *(_QWORD *)(v34 + 72);
      v51 = *(_QWORD *)(v34 + 80);
      *(_QWORD *)(v33 + 64) = v49;
      *(_QWORD *)(v33 + 72) = v50;
      *(_QWORD *)(v33 + 80) = v51;
      *(_OWORD *)(v33 + 88) = *(_OWORD *)(v34 + 88);
      v52 = *(_QWORD *)(v34 + 112);
      *(_QWORD *)(v33 + 104) = *(_QWORD *)(v34 + 104);
      *(_QWORD *)(v33 + 112) = v52;
      *(_OWORD *)(v33 + 120) = *(_OWORD *)(v34 + 120);
      v53 = *(_QWORD *)(v34 + 144);
      *(_QWORD *)(v33 + 136) = *(_QWORD *)(v34 + 136);
      *(_QWORD *)(v33 + 144) = v53;
      v54 = *(_QWORD *)(v34 + 168);
      *(_OWORD *)(v33 + 152) = *(_OWORD *)(v34 + 152);
      *(_QWORD *)(v33 + 168) = v54;
      v156 = (_OWORD *)(v34 + 176);
      v157 = *(_QWORD *)(v34 + 184);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v157 == 1)
      {
        *(_OWORD *)(v33 + 176) = *v156;
      }
      else
      {
        *(_QWORD *)(v33 + 176) = *(_QWORD *)v156;
        *(_QWORD *)(v33 + 184) = v157;
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(v33 + 192) = *(_QWORD *)(v34 + 192);
    }
    else
    {
      v55 = *(_OWORD *)(v34 + 176);
      *(_OWORD *)(v33 + 160) = *(_OWORD *)(v34 + 160);
      *(_OWORD *)(v33 + 176) = v55;
      *(_QWORD *)(v33 + 192) = *(_QWORD *)(v34 + 192);
      v56 = *(_OWORD *)(v34 + 112);
      *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
      *(_OWORD *)(v33 + 112) = v56;
      v57 = *(_OWORD *)(v34 + 144);
      *(_OWORD *)(v33 + 128) = *(_OWORD *)(v34 + 128);
      *(_OWORD *)(v33 + 144) = v57;
      v58 = *(_OWORD *)(v34 + 80);
      *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
      *(_OWORD *)(v33 + 80) = v58;
    }
    *(_BYTE *)(v33 + 200) = *(_BYTE *)(v34 + 200);
    v59 = (uint64_t *)(v34 + 208);
    v60 = *(_QWORD *)(v34 + 216);
    if (v60 >> 60 == 15)
    {
      *(_OWORD *)(v33 + 208) = *(_OWORD *)v59;
    }
    else
    {
      v61 = *v59;
      sub_1AD0040A0(*v59, *(_QWORD *)(v34 + 216));
      *(_QWORD *)(v33 + 208) = v61;
      *(_QWORD *)(v33 + 216) = v60;
    }
  }
  else
  {
    v39 = *(_OWORD *)(v34 + 176);
    *(_OWORD *)(v33 + 160) = *(_OWORD *)(v34 + 160);
    *(_OWORD *)(v33 + 176) = v39;
    v40 = *(_OWORD *)(v34 + 208);
    *(_OWORD *)(v33 + 192) = *(_OWORD *)(v34 + 192);
    *(_OWORD *)(v33 + 208) = v40;
    v41 = *(_OWORD *)(v34 + 112);
    *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
    *(_OWORD *)(v33 + 112) = v41;
    v42 = *(_OWORD *)(v34 + 144);
    *(_OWORD *)(v33 + 128) = *(_OWORD *)(v34 + 128);
    *(_OWORD *)(v33 + 144) = v42;
    v43 = *(_OWORD *)(v34 + 48);
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
    *(_OWORD *)(v33 + 48) = v43;
    v44 = *(_OWORD *)(v34 + 80);
    *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
    *(_OWORD *)(v33 + 80) = v44;
    v45 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v45;
  }
  v62 = v158;
  *(_QWORD *)(v11 + v25[7]) = *(_QWORD *)(v12 + v25[7]);
  v63 = v25[8];
  v64 = v11 + v63;
  v65 = (_OWORD *)(v12 + v63);
  v66 = *(_QWORD *)(v12 + v63 + 8);
  swift_bridgeObjectRetain();
  if (v66 >> 60 == 15)
  {
    *(_OWORD *)v64 = *v65;
  }
  else
  {
    v67 = *(_QWORD *)v65;
    sub_1AD0040A0(v67, v66);
    *(_QWORD *)v64 = v67;
    *(_QWORD *)(v64 + 8) = v66;
  }
  v68 = v25[9];
  v69 = v11 + v68;
  v70 = (uint64_t *)(v12 + v68);
  v71 = v70[1];
  if (v71 >> 60 == 15)
  {
    *(_OWORD *)v69 = *(_OWORD *)v70;
  }
  else
  {
    v72 = *v70;
    sub_1AD0040A0(*v70, v70[1]);
    *(_QWORD *)v69 = v72;
    *(_QWORD *)(v69 + 8) = v71;
  }
  *(_BYTE *)(v11 + v25[10]) = *(_BYTE *)(v12 + v25[10]);
  *(_BYTE *)(v11 + v25[11]) = *(_BYTE *)(v12 + v25[11]);
  v73 = v25[12];
  v74 = v11 + v73;
  v75 = (uint64_t *)(v12 + v73);
  v76 = v75[1];
  if (v76 >> 60 == 15)
  {
    *(_OWORD *)v74 = *(_OWORD *)v75;
  }
  else
  {
    v77 = *v75;
    sub_1AD0040A0(*v75, v75[1]);
    *(_QWORD *)v74 = v77;
    *(_QWORD *)(v74 + 8) = v76;
  }
  *(_QWORD *)(v11 + v25[13]) = *(_QWORD *)(v12 + v25[13]);
  v78 = v158[8];
  *(_BYTE *)(a1 + v158[7]) = *(_BYTE *)(a2 + v158[7]);
  *(_BYTE *)(a1 + v78) = *(_BYTE *)(a2 + v78);
  v79 = v158[10];
  *(_BYTE *)(a1 + v158[9]) = *(_BYTE *)(a2 + v158[9]);
  *(_BYTE *)(a1 + v79) = *(_BYTE *)(a2 + v79);
  v80 = v158[12];
  *(_BYTE *)(a1 + v158[11]) = *(_BYTE *)(a2 + v158[11]);
  *(_BYTE *)(a1 + v80) = *(_BYTE *)(a2 + v80);
  v81 = v158[14];
  *(_BYTE *)(a1 + v158[13]) = *(_BYTE *)(a2 + v158[13]);
  v82 = v158[15];
  v83 = a1 + v82;
  v84 = (uint64_t *)(a2 + v82);
  *(_BYTE *)(a1 + v81) = *(_BYTE *)(a2 + v81);
  v85 = v84[1];
  if (v85 >> 60 == 15)
  {
    *(_OWORD *)v83 = *(_OWORD *)v84;
  }
  else
  {
    v86 = *v84;
    sub_1AD0040A0(*v84, v84[1]);
    *(_QWORD *)v83 = v86;
    *(_QWORD *)(v83 + 8) = v85;
  }
  v87 = v158[16];
  v88 = a1 + v87;
  v89 = (uint64_t *)(a2 + v87);
  v90 = v89[1];
  if (v90 >> 60 == 15)
  {
    *(_OWORD *)v88 = *(_OWORD *)v89;
  }
  else
  {
    v91 = *v89;
    sub_1AD0040A0(*v89, v89[1]);
    *(_QWORD *)v88 = v91;
    *(_QWORD *)(v88 + 8) = v90;
  }
  v92 = v158[18];
  *(_BYTE *)(a1 + v158[17]) = *(_BYTE *)(a2 + v158[17]);
  *(_BYTE *)(a1 + v92) = *(_BYTE *)(a2 + v92);
  v93 = v158[19];
  v94 = (_DWORD *)(a1 + v93);
  v95 = (_DWORD *)(a2 + v93);
  v96 = type metadata accessor for CloudKitSharingToken();
  v97 = *(_QWORD *)(v96 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
  {
    v98 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    goto LABEL_81;
  }
  *v94 = *v95;
  *((_QWORD *)v94 + 1) = *((_QWORD *)v95 + 1);
  v99 = *((_QWORD *)v95 + 4);
  *((_OWORD *)v94 + 1) = *((_OWORD *)v95 + 1);
  *((_QWORD *)v94 + 4) = v99;
  v100 = (uint64_t *)(v95 + 10);
  v101 = *((_QWORD *)v95 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v101 >> 60 == 11 || v101 >> 60 == 15)
  {
    *(_OWORD *)(v94 + 10) = *(_OWORD *)v100;
    v102 = *((_QWORD *)v95 + 9);
    if (v102)
      goto LABEL_50;
LABEL_54:
    v109 = *(_OWORD *)(v95 + 18);
    *(_OWORD *)(v94 + 14) = *(_OWORD *)(v95 + 14);
    *(_OWORD *)(v94 + 18) = v109;
    *(_OWORD *)(v94 + 22) = *(_OWORD *)(v95 + 22);
    goto LABEL_55;
  }
  v108 = *v100;
  sub_1AD0040A0(*v100, v101);
  *((_QWORD *)v94 + 5) = v108;
  *((_QWORD *)v94 + 6) = v101;
  v102 = *((_QWORD *)v95 + 9);
  if (!v102)
    goto LABEL_54;
LABEL_50:
  v103 = v95[15];
  v94[14] = v95[14];
  v94[15] = v103;
  *((_BYTE *)v94 + 64) = *((_BYTE *)v95 + 64);
  v104 = *((_QWORD *)v95 + 10);
  *((_QWORD *)v94 + 9) = v102;
  *((_QWORD *)v94 + 10) = v104;
  v105 = (uint64_t *)(v95 + 22);
  v106 = *((_QWORD *)v95 + 12);
  swift_retain();
  if (v106 >> 60 == 15)
  {
    *(_OWORD *)(v94 + 22) = *(_OWORD *)v105;
  }
  else
  {
    v107 = *v105;
    sub_1AD0040A0(*v105, v106);
    *((_QWORD *)v94 + 11) = v107;
    *((_QWORD *)v94 + 12) = v106;
  }
LABEL_55:
  v110 = *((_QWORD *)v95 + 14);
  *((_QWORD *)v94 + 13) = *((_QWORD *)v95 + 13);
  *((_QWORD *)v94 + 14) = v110;
  v111 = (uint64_t *)(v95 + 30);
  v112 = *((_QWORD *)v95 + 16);
  swift_retain();
  if (v112 >> 60 == 15)
  {
    *(_OWORD *)(v94 + 30) = *(_OWORD *)v111;
  }
  else
  {
    v113 = *v111;
    sub_1AD0040A0(*v111, v112);
    *((_QWORD *)v94 + 15) = v113;
    *((_QWORD *)v94 + 16) = v112;
  }
  v114 = *((_QWORD *)v95 + 18);
  *((_QWORD *)v94 + 17) = *((_QWORD *)v95 + 17);
  *((_QWORD *)v94 + 18) = v114;
  v115 = v95 + 38;
  v116 = *((_QWORD *)v95 + 20);
  swift_retain();
  if (v116 >> 60 == 11 || v116 >> 60 == 15)
  {
    *(_OWORD *)(v94 + 38) = *v115;
  }
  else
  {
    v117 = *(_QWORD *)v115;
    sub_1AD0040A0(v117, v116);
    *((_QWORD *)v94 + 19) = v117;
    *((_QWORD *)v94 + 20) = v116;
  }
  v118 = *((_QWORD *)v95 + 21);
  if (v118)
  {
    v119 = *((_QWORD *)v95 + 22);
    *((_QWORD *)v94 + 21) = v118;
    *((_QWORD *)v94 + 22) = v119;
    v120 = (uint64_t *)(v95 + 46);
    v121 = *((_QWORD *)v95 + 24);
    swift_retain();
    if (v121 >> 60 == 15)
    {
      *(_OWORD *)(v94 + 46) = *(_OWORD *)v120;
    }
    else
    {
      v124 = *v120;
      sub_1AD0040A0(*v120, v121);
      *((_QWORD *)v94 + 23) = v124;
      *((_QWORD *)v94 + 24) = v121;
    }
    v94[50] = v95[50];
    v125 = *((_QWORD *)v95 + 27);
    *((_QWORD *)v94 + 26) = *((_QWORD *)v95 + 26);
    *((_QWORD *)v94 + 27) = v125;
    v126 = (uint64_t *)(v95 + 56);
    v127 = *((_QWORD *)v95 + 29);
    swift_retain();
    if (v127 >> 60 == 15)
    {
      *((_OWORD *)v94 + 14) = *(_OWORD *)v126;
    }
    else
    {
      v128 = *v126;
      sub_1AD0040A0(*v126, v127);
      *((_QWORD *)v94 + 28) = v128;
      *((_QWORD *)v94 + 29) = v127;
    }
  }
  else
  {
    v122 = *(_OWORD *)(v95 + 54);
    *(_OWORD *)(v94 + 50) = *(_OWORD *)(v95 + 50);
    *(_OWORD *)(v94 + 54) = v122;
    *((_QWORD *)v94 + 29) = *((_QWORD *)v95 + 29);
    v123 = *(_OWORD *)(v95 + 46);
    *(_OWORD *)(v94 + 42) = *(_OWORD *)(v95 + 42);
    *(_OWORD *)(v94 + 46) = v123;
  }
  v129 = *((_QWORD *)v95 + 32);
  *((_OWORD *)v94 + 15) = *((_OWORD *)v95 + 15);
  *((_QWORD *)v94 + 32) = v129;
  v130 = (uint64_t *)(v95 + 66);
  v131 = *((_QWORD *)v95 + 34);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v131 >> 60 == 11 || v131 >> 60 == 15)
  {
    *(_OWORD *)(v94 + 66) = *(_OWORD *)v130;
  }
  else
  {
    v132 = *v130;
    sub_1AD0040A0(*v130, v131);
    *((_QWORD *)v94 + 33) = v132;
    *((_QWORD *)v94 + 34) = v131;
  }
  v133 = *(int *)(v96 + 24);
  v134 = (_QWORD *)((char *)v94 + v133);
  v135 = (char *)v95 + v133;
  v136 = *(_QWORD *)((char *)v95 + v133 + 8);
  *v134 = *(_QWORD *)((char *)v95 + v133);
  v134[1] = v136;
  swift_retain();
  v137 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v138 = (char *)v134 + v137;
  v139 = &v135[v137];
  v140 = sub_1AD63AF28();
  v141 = *(_QWORD *)(v140 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48))(v139, 1, v140))
  {
    v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v138, v139, v140);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
  }
  v62 = v158;
  v143 = *(int *)(v96 + 28);
  v144 = (char *)v94 + v143;
  v145 = (_QWORD *)((char *)v95 + v143);
  v146 = v145[1];
  *(_QWORD *)v144 = *v145;
  *((_QWORD *)v144 + 1) = v146;
  v147 = v145 + 2;
  v148 = v145[3];
  swift_retain();
  if (v148 == 1)
  {
    *((_OWORD *)v144 + 1) = *v147;
  }
  else
  {
    *((_QWORD *)v144 + 2) = *(_QWORD *)v147;
    *((_QWORD *)v144 + 3) = v148;
    swift_bridgeObjectRetain();
  }
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
LABEL_81:
  v149 = v62[20];
  v150 = a1 + v149;
  v151 = (uint64_t *)(a2 + v149);
  v152 = v151[1];
  if (v152 >> 60 == 15)
  {
    *(_OWORD *)v150 = *(_OWORD *)v151;
  }
  else
  {
    v153 = *v151;
    sub_1AD0040A0(*v151, v151[1]);
    *(_QWORD *)v150 = v153;
    *(_QWORD *)(v150 + 8) = v152;
  }
  v154 = v62[22];
  *(_BYTE *)(a1 + v62[21]) = *(_BYTE *)(a2 + v62[21]);
  *(_BYTE *)(a1 + v154) = *(_BYTE *)(a2 + v154);
  *(_BYTE *)(a1 + v62[23]) = *(_BYTE *)(a2 + v62[23]);
  return a1;
}

_QWORD *sub_1AD47906C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int *v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD *v85;
  uint64_t v86;
  _OWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t *v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t (*v170)(uint64_t, uint64_t, uint64_t);
  int v171;
  int v172;
  uint64_t v173;
  uint64_t *v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  uint64_t *v184;
  unint64_t v185;
  _OWORD *v186;
  __int128 v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  _OWORD *v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _OWORD *v200;
  unint64_t v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  uint64_t v205;
  uint64_t v206;
  _OWORD *v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t *v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _OWORD *v230;
  _OWORD *v231;
  uint64_t v232;
  int v233;
  uint64_t v234;
  uint64_t *v235;
  unint64_t v236;
  int v237;
  uint64_t v238;
  __int128 v239;
  __int128 v240;
  uint64_t v241;
  __int128 v242;
  __int128 v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t *v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t *v255;
  unint64_t v256;
  unint64_t v257;
  uint64_t v258;
  _OWORD *v259;
  uint64_t v260;
  _OWORD *v261;
  uint64_t v262;
  uint64_t *v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t *v267;
  unint64_t v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t *v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t *v288;
  unint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  _QWORD *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t (*v301)(char *, uint64_t, uint64_t);
  int v302;
  int v303;
  uint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t *v311;
  uint64_t *v312;
  unint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unint64_t v317;
  uint64_t v319;
  uint64_t v320;
  unint64_t v321;
  uint64_t v322;
  uint64_t v323;
  unint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  _QWORD *v330;
  int *v331;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_retain();
  swift_release();
  v8 = a2[7];
  if (a1[7] == 1)
  {
    if (v8 != 1)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 == 1)
  {
    sub_1AD009758((uint64_t)(a1 + 6), &qword_1ED2E3198);
LABEL_6:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    goto LABEL_8;
  }
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v9 = a3[6];
  v10 = (uint64_t)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = *(_QWORD *)((char *)a1 + v9);
  v13 = *(_QWORD *)((char *)a2 + v9);
  v330 = a2;
  v331 = a3;
  if (v12)
  {
    if (!v13)
    {
      sub_1AD311474(v10);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      v24 = *((_OWORD *)v11 + 4);
      v26 = *((_OWORD *)v11 + 1);
      v25 = *((_OWORD *)v11 + 2);
      *(_OWORD *)(v10 + 48) = *((_OWORD *)v11 + 3);
      *(_OWORD *)(v10 + 64) = v24;
      *(_OWORD *)(v10 + 16) = v26;
      *(_OWORD *)(v10 + 32) = v25;
      v28 = *((_OWORD *)v11 + 6);
      v27 = *((_OWORD *)v11 + 7);
      v29 = *((_OWORD *)v11 + 5);
      *(_QWORD *)(v10 + 128) = *((_QWORD *)v11 + 16);
      *(_OWORD *)(v10 + 96) = v28;
      *(_OWORD *)(v10 + 112) = v27;
      *(_OWORD *)(v10 + 80) = v29;
      goto LABEL_24;
    }
    v14 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = v13;
    *(_QWORD *)(v10 + 8) = v14;
    swift_retain();
    swift_release();
    *(_QWORD *)(v10 + 16) = *((_QWORD *)v11 + 2);
    *(_QWORD *)(v10 + 24) = *((_QWORD *)v11 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v15 = *((_QWORD *)v11 + 5);
    *(_QWORD *)(v10 + 32) = *((_QWORD *)v11 + 4);
    *(_QWORD *)(v10 + 40) = v15;
    swift_retain();
    swift_release();
    *(_QWORD *)(v10 + 48) = *((_QWORD *)v11 + 6);
    *(_QWORD *)(v10 + 56) = *((_QWORD *)v11 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v16 = *((_QWORD *)v11 + 9);
    *(_QWORD *)(v10 + 64) = *((_QWORD *)v11 + 8);
    *(_QWORD *)(v10 + 72) = v16;
    swift_retain();
    swift_release();
    *(_QWORD *)(v10 + 80) = *((_QWORD *)v11 + 10);
    *(_QWORD *)(v10 + 88) = *((_QWORD *)v11 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17 = *((_QWORD *)v11 + 13);
    *(_QWORD *)(v10 + 96) = *((_QWORD *)v11 + 12);
    *(_QWORD *)(v10 + 104) = v17;
    swift_retain();
    swift_release();
    v18 = *((_QWORD *)v11 + 15);
    if (*(_QWORD *)(v10 + 120) != 1)
    {
      if (v18 != 1)
      {
        *(_QWORD *)(v10 + 112) = *((_QWORD *)v11 + 14);
        *(_QWORD *)(v10 + 120) = *((_QWORD *)v11 + 15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      sub_1AD009758(v10 + 112, &qword_1ED2E3198);
      goto LABEL_20;
    }
    if (v18 == 1)
    {
LABEL_20:
      *(_OWORD *)(v10 + 112) = *((_OWORD *)v11 + 7);
      goto LABEL_23;
    }
    goto LABEL_17;
  }
  if (!v13)
  {
    *(_OWORD *)v10 = *(_OWORD *)v11;
    v30 = *((_OWORD *)v11 + 1);
    v31 = *((_OWORD *)v11 + 2);
    v32 = *((_OWORD *)v11 + 4);
    *(_OWORD *)(v10 + 48) = *((_OWORD *)v11 + 3);
    *(_OWORD *)(v10 + 64) = v32;
    *(_OWORD *)(v10 + 16) = v30;
    *(_OWORD *)(v10 + 32) = v31;
    v33 = *((_OWORD *)v11 + 5);
    v34 = *((_OWORD *)v11 + 6);
    v35 = *((_OWORD *)v11 + 7);
    *(_QWORD *)(v10 + 128) = *((_QWORD *)v11 + 16);
    *(_OWORD *)(v10 + 96) = v34;
    *(_OWORD *)(v10 + 112) = v35;
    *(_OWORD *)(v10 + 80) = v33;
    goto LABEL_24;
  }
  v19 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = v13;
  *(_QWORD *)(v10 + 8) = v19;
  *(_QWORD *)(v10 + 16) = *((_QWORD *)v11 + 2);
  *(_QWORD *)(v10 + 24) = *((_QWORD *)v11 + 3);
  v20 = *((_QWORD *)v11 + 5);
  *(_QWORD *)(v10 + 32) = *((_QWORD *)v11 + 4);
  *(_QWORD *)(v10 + 40) = v20;
  *(_QWORD *)(v10 + 48) = *((_QWORD *)v11 + 6);
  *(_QWORD *)(v10 + 56) = *((_QWORD *)v11 + 7);
  v21 = *((_QWORD *)v11 + 9);
  *(_QWORD *)(v10 + 64) = *((_QWORD *)v11 + 8);
  *(_QWORD *)(v10 + 72) = v21;
  *(_QWORD *)(v10 + 80) = *((_QWORD *)v11 + 10);
  *(_QWORD *)(v10 + 88) = *((_QWORD *)v11 + 11);
  v22 = *((_QWORD *)v11 + 13);
  *(_QWORD *)(v10 + 96) = *((_QWORD *)v11 + 12);
  *(_QWORD *)(v10 + 104) = v22;
  v23 = *((_QWORD *)v11 + 15);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v23 != 1)
  {
LABEL_17:
    *(_QWORD *)(v10 + 112) = *((_QWORD *)v11 + 14);
    *(_QWORD *)(v10 + 120) = *((_QWORD *)v11 + 15);
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  *(_OWORD *)(v10 + 112) = *((_OWORD *)v11 + 7);
LABEL_23:
  *(_QWORD *)(v10 + 128) = *((_QWORD *)v11 + 16);
LABEL_24:
  v36 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v37 = v36[5];
  v38 = (void *)(v10 + v37);
  v39 = &v11[v37];
  v40 = sub_1AD63AE2C();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v38, v40);
LABEL_29:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, char *, uint64_t))(v41 + 24))(v38, v39, v40);
LABEL_30:
  v46 = v331;
  v47 = v36[6];
  v48 = v10 + v47;
  v49 = &v11[v47];
  v50 = *(_QWORD *)(v10 + v47);
  v51 = *(_QWORD *)&v11[v47];
  if (!v50)
  {
    if (v51)
    {
      v54 = *((_QWORD *)v49 + 1);
      *(_QWORD *)v48 = v51;
      *(_QWORD *)(v48 + 8) = v54;
      v55 = *((_QWORD *)v49 + 3);
      swift_retain();
      if (v55 == 1)
      {
        *(_OWORD *)(v48 + 16) = *((_OWORD *)v49 + 1);
      }
      else
      {
        *(_QWORD *)(v48 + 16) = *((_QWORD *)v49 + 2);
        *(_QWORD *)(v48 + 24) = *((_QWORD *)v49 + 3);
        swift_bridgeObjectRetain();
      }
      v76 = *((_QWORD *)v49 + 5);
      *(_QWORD *)(v48 + 32) = *((_QWORD *)v49 + 4);
      *(_QWORD *)(v48 + 40) = v76;
      v77 = *((_QWORD *)v49 + 7);
      swift_retain();
      if (v77 == 1)
      {
        *(_OWORD *)(v48 + 48) = *((_OWORD *)v49 + 3);
      }
      else
      {
        *(_QWORD *)(v48 + 48) = *((_QWORD *)v49 + 6);
        *(_QWORD *)(v48 + 56) = *((_QWORD *)v49 + 7);
        swift_bridgeObjectRetain();
      }
      v78 = *((_QWORD *)v49 + 8);
      if (v78)
      {
        v79 = *((_QWORD *)v49 + 9);
        *(_QWORD *)(v48 + 64) = v78;
        *(_QWORD *)(v48 + 72) = v79;
        *(_QWORD *)(v48 + 80) = *((_QWORD *)v49 + 10);
        *(_QWORD *)(v48 + 88) = *((_QWORD *)v49 + 11);
        v80 = *((_QWORD *)v49 + 13);
        *(_QWORD *)(v48 + 96) = *((_QWORD *)v49 + 12);
        *(_QWORD *)(v48 + 104) = v80;
        *(_QWORD *)(v48 + 112) = *((_QWORD *)v49 + 14);
        *(_QWORD *)(v48 + 120) = *((_QWORD *)v49 + 15);
        v81 = *((_QWORD *)v49 + 17);
        *(_QWORD *)(v48 + 128) = *((_QWORD *)v49 + 16);
        *(_QWORD *)(v48 + 136) = v81;
        *(_QWORD *)(v48 + 144) = *((_QWORD *)v49 + 18);
        *(_QWORD *)(v48 + 152) = *((_QWORD *)v49 + 19);
        v82 = *((_QWORD *)v49 + 21);
        *(_QWORD *)(v48 + 160) = *((_QWORD *)v49 + 20);
        *(_QWORD *)(v48 + 168) = v82;
        v328 = *((_QWORD *)v49 + 23);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v328 == 1)
        {
          *(_OWORD *)(v48 + 176) = *((_OWORD *)v49 + 11);
        }
        else
        {
          *(_QWORD *)(v48 + 176) = *((_QWORD *)v49 + 22);
          *(_QWORD *)(v48 + 184) = *((_QWORD *)v49 + 23);
          swift_bridgeObjectRetain();
        }
        v46 = v331;
        *(_QWORD *)(v48 + 192) = *((_QWORD *)v49 + 24);
      }
      else
      {
        *(_OWORD *)(v48 + 64) = *((_OWORD *)v49 + 4);
        v103 = *((_OWORD *)v49 + 5);
        v104 = *((_OWORD *)v49 + 6);
        v105 = *((_OWORD *)v49 + 8);
        *(_OWORD *)(v48 + 112) = *((_OWORD *)v49 + 7);
        *(_OWORD *)(v48 + 128) = v105;
        *(_OWORD *)(v48 + 80) = v103;
        *(_OWORD *)(v48 + 96) = v104;
        v106 = *((_OWORD *)v49 + 9);
        v107 = *((_OWORD *)v49 + 10);
        v108 = *((_OWORD *)v49 + 11);
        *(_QWORD *)(v48 + 192) = *((_QWORD *)v49 + 24);
        *(_OWORD *)(v48 + 160) = v107;
        *(_OWORD *)(v48 + 176) = v108;
        *(_OWORD *)(v48 + 144) = v106;
        v46 = v331;
      }
      *(_BYTE *)(v48 + 200) = v49[200];
      v109 = (uint64_t *)(v49 + 208);
      v110 = *((_QWORD *)v49 + 27);
      if (v110 >> 60 == 15)
      {
        *(_OWORD *)(v48 + 208) = *(_OWORD *)v109;
      }
      else
      {
        v111 = *v109;
        sub_1AD0040A0(*v109, *((_QWORD *)v49 + 27));
        *(_QWORD *)(v48 + 208) = v111;
        *(_QWORD *)(v48 + 216) = v110;
      }
    }
    else
    {
      v66 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *(_OWORD *)(v48 + 16) = v66;
      v67 = *((_OWORD *)v49 + 2);
      v68 = *((_OWORD *)v49 + 3);
      v69 = *((_OWORD *)v49 + 5);
      *(_OWORD *)(v48 + 64) = *((_OWORD *)v49 + 4);
      *(_OWORD *)(v48 + 80) = v69;
      *(_OWORD *)(v48 + 32) = v67;
      *(_OWORD *)(v48 + 48) = v68;
      v70 = *((_OWORD *)v49 + 6);
      v71 = *((_OWORD *)v49 + 7);
      v72 = *((_OWORD *)v49 + 9);
      *(_OWORD *)(v48 + 128) = *((_OWORD *)v49 + 8);
      *(_OWORD *)(v48 + 144) = v72;
      *(_OWORD *)(v48 + 96) = v70;
      *(_OWORD *)(v48 + 112) = v71;
      v73 = *((_OWORD *)v49 + 10);
      v74 = *((_OWORD *)v49 + 11);
      v75 = *((_OWORD *)v49 + 13);
      *(_OWORD *)(v48 + 192) = *((_OWORD *)v49 + 12);
      *(_OWORD *)(v48 + 208) = v75;
      *(_OWORD *)(v48 + 160) = v73;
      *(_OWORD *)(v48 + 176) = v74;
    }
    goto LABEL_89;
  }
  if (!v51)
  {
    sub_1AD3114A8((_QWORD *)v48);
    v56 = *((_OWORD *)v49 + 1);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *(_OWORD *)(v48 + 16) = v56;
    v57 = *((_OWORD *)v49 + 5);
    v59 = *((_OWORD *)v49 + 2);
    v58 = *((_OWORD *)v49 + 3);
    *(_OWORD *)(v48 + 64) = *((_OWORD *)v49 + 4);
    *(_OWORD *)(v48 + 80) = v57;
    *(_OWORD *)(v48 + 32) = v59;
    *(_OWORD *)(v48 + 48) = v58;
    v60 = *((_OWORD *)v49 + 9);
    v62 = *((_OWORD *)v49 + 6);
    v61 = *((_OWORD *)v49 + 7);
    *(_OWORD *)(v48 + 128) = *((_OWORD *)v49 + 8);
    *(_OWORD *)(v48 + 144) = v60;
    *(_OWORD *)(v48 + 96) = v62;
    *(_OWORD *)(v48 + 112) = v61;
    v63 = *((_OWORD *)v49 + 13);
    v65 = *((_OWORD *)v49 + 10);
    v64 = *((_OWORD *)v49 + 11);
    *(_OWORD *)(v48 + 192) = *((_OWORD *)v49 + 12);
    *(_OWORD *)(v48 + 208) = v63;
    *(_OWORD *)(v48 + 160) = v65;
    *(_OWORD *)(v48 + 176) = v64;
    goto LABEL_89;
  }
  v52 = *((_QWORD *)v49 + 1);
  *(_QWORD *)v48 = v51;
  *(_QWORD *)(v48 + 8) = v52;
  swift_retain();
  swift_release();
  v53 = *((_QWORD *)v49 + 3);
  if (*(_QWORD *)(v48 + 24) == 1)
  {
    if (v53 != 1)
    {
      *(_QWORD *)(v48 + 16) = *((_QWORD *)v49 + 2);
      *(_QWORD *)(v48 + 24) = *((_QWORD *)v49 + 3);
      swift_bridgeObjectRetain();
      goto LABEL_52;
    }
    goto LABEL_41;
  }
  if (v53 == 1)
  {
    sub_1AD009758(v48 + 16, &qword_1ED2E3198);
LABEL_41:
    *(_OWORD *)(v48 + 16) = *((_OWORD *)v49 + 1);
    goto LABEL_52;
  }
  *(_QWORD *)(v48 + 16) = *((_QWORD *)v49 + 2);
  *(_QWORD *)(v48 + 24) = *((_QWORD *)v49 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_52:
  v83 = *((_QWORD *)v49 + 5);
  *(_QWORD *)(v48 + 32) = *((_QWORD *)v49 + 4);
  *(_QWORD *)(v48 + 40) = v83;
  swift_retain();
  swift_release();
  v84 = *((_QWORD *)v49 + 7);
  if (*(_QWORD *)(v48 + 56) == 1)
  {
    if (v84 != 1)
    {
      *(_QWORD *)(v48 + 48) = *((_QWORD *)v49 + 6);
      *(_QWORD *)(v48 + 56) = *((_QWORD *)v49 + 7);
      swift_bridgeObjectRetain();
      goto LABEL_59;
    }
    goto LABEL_57;
  }
  if (v84 == 1)
  {
    sub_1AD009758(v48 + 48, &qword_1ED2E3198);
LABEL_57:
    *(_OWORD *)(v48 + 48) = *((_OWORD *)v49 + 3);
    goto LABEL_59;
  }
  *(_QWORD *)(v48 + 48) = *((_QWORD *)v49 + 6);
  *(_QWORD *)(v48 + 56) = *((_QWORD *)v49 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_59:
  v85 = (_OWORD *)(v48 + 64);
  v87 = v49 + 64;
  v86 = *((_QWORD *)v49 + 8);
  if (*(_QWORD *)(v48 + 64))
  {
    if (v86)
    {
      v88 = *((_QWORD *)v49 + 9);
      *(_QWORD *)(v48 + 64) = v86;
      *(_QWORD *)(v48 + 72) = v88;
      swift_retain();
      swift_release();
      *(_QWORD *)(v48 + 80) = *((_QWORD *)v49 + 10);
      *(_QWORD *)(v48 + 88) = *((_QWORD *)v49 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v89 = *((_QWORD *)v49 + 13);
      *(_QWORD *)(v48 + 96) = *((_QWORD *)v49 + 12);
      *(_QWORD *)(v48 + 104) = v89;
      swift_retain();
      swift_release();
      *(_QWORD *)(v48 + 112) = *((_QWORD *)v49 + 14);
      *(_QWORD *)(v48 + 120) = *((_QWORD *)v49 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v90 = *((_QWORD *)v49 + 17);
      *(_QWORD *)(v48 + 128) = *((_QWORD *)v49 + 16);
      *(_QWORD *)(v48 + 136) = v90;
      swift_retain();
      swift_release();
      *(_QWORD *)(v48 + 144) = *((_QWORD *)v49 + 18);
      *(_QWORD *)(v48 + 152) = *((_QWORD *)v49 + 19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v91 = *((_QWORD *)v49 + 21);
      *(_QWORD *)(v48 + 160) = *((_QWORD *)v49 + 20);
      *(_QWORD *)(v48 + 168) = v91;
      swift_retain();
      swift_release();
      v92 = *((_QWORD *)v49 + 23);
      if (*(_QWORD *)(v48 + 184) == 1)
      {
        if (v92 != 1)
        {
          *(_QWORD *)(v48 + 176) = *((_QWORD *)v49 + 22);
          *(_QWORD *)(v48 + 184) = *((_QWORD *)v49 + 23);
          swift_bridgeObjectRetain();
LABEL_81:
          *(_QWORD *)(v48 + 192) = *((_QWORD *)v49 + 24);
          goto LABEL_82;
        }
      }
      else
      {
        if (v92 != 1)
        {
          *(_QWORD *)(v48 + 176) = *((_QWORD *)v49 + 22);
          *(_QWORD *)(v48 + 184) = *((_QWORD *)v49 + 23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_81;
        }
        sub_1AD009758(v48 + 176, &qword_1ED2E3198);
      }
      *(_OWORD *)(v48 + 176) = *((_OWORD *)v49 + 11);
      goto LABEL_81;
    }
    sub_1AD311474(v48 + 64);
    *v85 = *v87;
    v97 = *((_OWORD *)v49 + 8);
    v99 = *((_OWORD *)v49 + 5);
    v98 = *((_OWORD *)v49 + 6);
    *(_OWORD *)(v48 + 112) = *((_OWORD *)v49 + 7);
    *(_OWORD *)(v48 + 128) = v97;
    *(_OWORD *)(v48 + 80) = v99;
    *(_OWORD *)(v48 + 96) = v98;
    v101 = *((_OWORD *)v49 + 10);
    v100 = *((_OWORD *)v49 + 11);
    v102 = *((_OWORD *)v49 + 9);
    *(_QWORD *)(v48 + 192) = *((_QWORD *)v49 + 24);
    *(_OWORD *)(v48 + 160) = v101;
    *(_OWORD *)(v48 + 176) = v100;
    *(_OWORD *)(v48 + 144) = v102;
  }
  else
  {
    if (v86)
    {
      v93 = *((_QWORD *)v49 + 9);
      *(_QWORD *)(v48 + 64) = v86;
      *(_QWORD *)(v48 + 72) = v93;
      *(_QWORD *)(v48 + 80) = *((_QWORD *)v49 + 10);
      *(_QWORD *)(v48 + 88) = *((_QWORD *)v49 + 11);
      v94 = *((_QWORD *)v49 + 13);
      *(_QWORD *)(v48 + 96) = *((_QWORD *)v49 + 12);
      *(_QWORD *)(v48 + 104) = v94;
      *(_QWORD *)(v48 + 112) = *((_QWORD *)v49 + 14);
      *(_QWORD *)(v48 + 120) = *((_QWORD *)v49 + 15);
      v95 = *((_QWORD *)v49 + 17);
      *(_QWORD *)(v48 + 128) = *((_QWORD *)v49 + 16);
      *(_QWORD *)(v48 + 136) = v95;
      *(_QWORD *)(v48 + 144) = *((_QWORD *)v49 + 18);
      *(_QWORD *)(v48 + 152) = *((_QWORD *)v49 + 19);
      v96 = *((_QWORD *)v49 + 21);
      *(_QWORD *)(v48 + 160) = *((_QWORD *)v49 + 20);
      *(_QWORD *)(v48 + 168) = v96;
      v329 = *((_QWORD *)v49 + 23);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v329 == 1)
      {
        *(_OWORD *)(v48 + 176) = *((_OWORD *)v49 + 11);
      }
      else
      {
        *(_QWORD *)(v48 + 176) = *((_QWORD *)v49 + 22);
        *(_QWORD *)(v48 + 184) = *((_QWORD *)v49 + 23);
        swift_bridgeObjectRetain();
      }
      v46 = v331;
      goto LABEL_81;
    }
    *v85 = *v87;
    v112 = *((_OWORD *)v49 + 5);
    v113 = *((_OWORD *)v49 + 6);
    v114 = *((_OWORD *)v49 + 8);
    *(_OWORD *)(v48 + 112) = *((_OWORD *)v49 + 7);
    *(_OWORD *)(v48 + 128) = v114;
    *(_OWORD *)(v48 + 80) = v112;
    *(_OWORD *)(v48 + 96) = v113;
    v115 = *((_OWORD *)v49 + 9);
    v116 = *((_OWORD *)v49 + 10);
    v117 = *((_OWORD *)v49 + 11);
    *(_QWORD *)(v48 + 192) = *((_QWORD *)v49 + 24);
    *(_OWORD *)(v48 + 160) = v116;
    *(_OWORD *)(v48 + 176) = v117;
    *(_OWORD *)(v48 + 144) = v115;
  }
LABEL_82:
  *(_BYTE *)(v48 + 200) = v49[200];
  v118 = (uint64_t *)(v49 + 208);
  v119 = *((_QWORD *)v49 + 27);
  if (*(_QWORD *)(v48 + 216) >> 60 == 15)
  {
    if (v119 >> 60 != 15)
    {
      v120 = *v118;
      sub_1AD0040A0(*v118, *((_QWORD *)v49 + 27));
      *(_QWORD *)(v48 + 208) = v120;
      *(_QWORD *)(v48 + 216) = v119;
      goto LABEL_89;
    }
    goto LABEL_87;
  }
  if (v119 >> 60 == 15)
  {
    sub_1AD007EC0(v48 + 208);
LABEL_87:
    *(_OWORD *)(v48 + 208) = *(_OWORD *)v118;
    goto LABEL_89;
  }
  v121 = *v118;
  sub_1AD0040A0(*v118, *((_QWORD *)v49 + 27));
  v122 = *(_QWORD *)(v48 + 208);
  v123 = *(_QWORD *)(v48 + 216);
  *(_QWORD *)(v48 + 208) = v121;
  *(_QWORD *)(v48 + 216) = v119;
  sub_1AD00412C(v122, v123);
LABEL_89:
  v124 = v330;
  *(_QWORD *)(v10 + v36[7]) = *(_QWORD *)&v11[v36[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v125 = v36[8];
  v126 = (uint64_t *)(v10 + v125);
  v127 = (uint64_t *)&v11[v125];
  v128 = *(_QWORD *)&v11[v125 + 8];
  if (*(_QWORD *)(v10 + v125 + 8) >> 60 == 15)
  {
    if (v128 >> 60 != 15)
    {
      v129 = *v127;
      sub_1AD0040A0(v129, v128);
      *v126 = v129;
      v126[1] = v128;
      goto LABEL_96;
    }
    goto LABEL_94;
  }
  if (v128 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v126);
LABEL_94:
    *(_OWORD *)v126 = *(_OWORD *)v127;
    goto LABEL_96;
  }
  v130 = *v127;
  sub_1AD0040A0(v130, v128);
  v131 = *v126;
  v132 = v126[1];
  *v126 = v130;
  v126[1] = v128;
  sub_1AD00412C(v131, v132);
LABEL_96:
  v133 = v36[9];
  v134 = (uint64_t *)(v10 + v133);
  v135 = (uint64_t *)&v11[v133];
  v136 = *(_QWORD *)&v11[v133 + 8];
  if (*(_QWORD *)(v10 + v133 + 8) >> 60 == 15)
  {
    if (v136 >> 60 != 15)
    {
      v137 = *v135;
      sub_1AD0040A0(v137, v136);
      *v134 = v137;
      v134[1] = v136;
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  if (v136 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v134);
LABEL_101:
    *(_OWORD *)v134 = *(_OWORD *)v135;
    goto LABEL_103;
  }
  v138 = *v135;
  sub_1AD0040A0(v138, v136);
  v139 = *v134;
  v140 = v134[1];
  *v134 = v138;
  v134[1] = v136;
  sub_1AD00412C(v139, v140);
LABEL_103:
  *(_BYTE *)(v10 + v36[10]) = v11[v36[10]];
  *(_BYTE *)(v10 + v36[11]) = v11[v36[11]];
  v141 = v36[12];
  v142 = (uint64_t *)(v10 + v141);
  v143 = (uint64_t *)&v11[v141];
  v144 = *(_QWORD *)&v11[v141 + 8];
  if (*(_QWORD *)(v10 + v141 + 8) >> 60 == 15)
  {
    if (v144 >> 60 != 15)
    {
      v145 = *v143;
      sub_1AD0040A0(v145, v144);
      *v142 = v145;
      v142[1] = v144;
      goto LABEL_110;
    }
    goto LABEL_108;
  }
  if (v144 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v142);
LABEL_108:
    *(_OWORD *)v142 = *(_OWORD *)v143;
    goto LABEL_110;
  }
  v146 = *v143;
  sub_1AD0040A0(v146, v144);
  v147 = *v142;
  v148 = v142[1];
  *v142 = v146;
  v142[1] = v144;
  sub_1AD00412C(v147, v148);
LABEL_110:
  *(_QWORD *)(v10 + v36[13]) = *(_QWORD *)&v11[v36[13]];
  *((_BYTE *)a1 + v46[7]) = *((_BYTE *)v330 + v46[7]);
  *((_BYTE *)a1 + v46[8]) = *((_BYTE *)v330 + v46[8]);
  *((_BYTE *)a1 + v46[9]) = *((_BYTE *)v330 + v46[9]);
  *((_BYTE *)a1 + v46[10]) = *((_BYTE *)v330 + v46[10]);
  *((_BYTE *)a1 + v46[11]) = *((_BYTE *)v330 + v46[11]);
  *((_BYTE *)a1 + v46[12]) = *((_BYTE *)v330 + v46[12]);
  *((_BYTE *)a1 + v46[13]) = *((_BYTE *)v330 + v46[13]);
  *((_BYTE *)a1 + v46[14]) = *((_BYTE *)v330 + v46[14]);
  v149 = v46[15];
  v150 = (_QWORD *)((char *)a1 + v149);
  v151 = (_QWORD *)((char *)v330 + v149);
  v152 = *(_QWORD *)((char *)v330 + v149 + 8);
  if (*(_QWORD *)((char *)a1 + v149 + 8) >> 60 == 15)
  {
    if (v152 >> 60 != 15)
    {
      v153 = *v151;
      sub_1AD0040A0(*v151, v152);
      *v150 = v153;
      v150[1] = v152;
      goto LABEL_117;
    }
    goto LABEL_115;
  }
  if (v152 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v150);
LABEL_115:
    *(_OWORD *)v150 = *(_OWORD *)v151;
    goto LABEL_117;
  }
  v154 = *v151;
  sub_1AD0040A0(*v151, v152);
  v155 = *v150;
  v156 = v150[1];
  *v150 = v154;
  v150[1] = v152;
  sub_1AD00412C(v155, v156);
LABEL_117:
  v157 = v46[16];
  v158 = (_QWORD *)((char *)a1 + v157);
  v159 = (_QWORD *)((char *)v330 + v157);
  v160 = *(_QWORD *)((char *)v330 + v157 + 8);
  if (*(_QWORD *)((char *)a1 + v157 + 8) >> 60 == 15)
  {
    if (v160 >> 60 != 15)
    {
      v161 = *v159;
      sub_1AD0040A0(*v159, v160);
      *v158 = v161;
      v158[1] = v160;
      goto LABEL_124;
    }
    goto LABEL_122;
  }
  if (v160 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v158);
LABEL_122:
    *(_OWORD *)v158 = *(_OWORD *)v159;
    goto LABEL_124;
  }
  v162 = *v159;
  sub_1AD0040A0(*v159, v160);
  v163 = *v158;
  v164 = v158[1];
  *v158 = v162;
  v158[1] = v160;
  sub_1AD00412C(v163, v164);
LABEL_124:
  *((_BYTE *)a1 + v46[17]) = *((_BYTE *)v330 + v46[17]);
  *((_BYTE *)a1 + v46[18]) = *((_BYTE *)v330 + v46[18]);
  v165 = v46[19];
  v166 = (uint64_t)a1 + v165;
  v167 = (char *)v330 + v165;
  v168 = type metadata accessor for CloudKitSharingToken();
  v169 = *(_QWORD *)(v168 - 8);
  v170 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v169 + 48);
  v171 = v170(v166, 1, v168);
  v172 = v170((uint64_t)v167, 1, v168);
  if (!v171)
  {
    if (v172)
    {
      sub_1AD47ABE4(v166);
      goto LABEL_131;
    }
    *(_DWORD *)v166 = *(_DWORD *)v167;
    *(_QWORD *)(v166 + 8) = *((_QWORD *)v167 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v166 + 16) = *((_QWORD *)v167 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v177 = *((_QWORD *)v167 + 4);
    *(_QWORD *)(v166 + 24) = *((_QWORD *)v167 + 3);
    *(_QWORD *)(v166 + 32) = v177;
    swift_retain();
    swift_release();
    v178 = (uint64_t *)(v167 + 40);
    v179 = *((_QWORD *)v167 + 6);
    v180 = v179 & 0xF000000000000000;
    if (*(_QWORD *)(v166 + 48) >> 60 == 11)
    {
      if (v180 == 0xB000000000000000)
        goto LABEL_175;
LABEL_171:
      if (v179 >> 60 != 15)
      {
        v229 = *v178;
        sub_1AD0040A0(*v178, *((_QWORD *)v167 + 6));
        *(_QWORD *)(v166 + 40) = v229;
        *(_QWORD *)(v166 + 48) = v179;
        goto LABEL_176;
      }
      goto LABEL_175;
    }
    if (v180 == 0xB000000000000000)
    {
      sub_1AD009758(v166 + 40, &qword_1ED2E3250);
    }
    else
    {
      if (*(_QWORD *)(v166 + 48) >> 60 == 15)
        goto LABEL_171;
      if (v179 >> 60 != 15)
      {
        v319 = *v178;
        sub_1AD0040A0(*v178, *((_QWORD *)v167 + 6));
        v320 = *(_QWORD *)(v166 + 40);
        v321 = *(_QWORD *)(v166 + 48);
        *(_QWORD *)(v166 + 40) = v319;
        *(_QWORD *)(v166 + 48) = v179;
        sub_1AD00412C(v320, v321);
LABEL_176:
        v230 = (_OWORD *)(v166 + 56);
        v231 = v167 + 56;
        v232 = *((_QWORD *)v167 + 9);
        if (*(_QWORD *)(v166 + 72))
        {
          if (!v232)
          {
            sub_1AD0AEC58(v166 + 56);
            v240 = *(_OWORD *)(v167 + 72);
            v239 = *(_OWORD *)(v167 + 88);
            *v230 = *v231;
            *(_OWORD *)(v166 + 72) = v240;
            *(_OWORD *)(v166 + 88) = v239;
            goto LABEL_191;
          }
          *(_DWORD *)(v166 + 56) = *((_DWORD *)v167 + 14);
          v233 = *((_DWORD *)v167 + 15);
          *(_BYTE *)(v166 + 64) = v167[64];
          *(_DWORD *)(v166 + 60) = v233;
          v234 = *((_QWORD *)v167 + 10);
          *(_QWORD *)(v166 + 72) = *((_QWORD *)v167 + 9);
          *(_QWORD *)(v166 + 80) = v234;
          swift_retain();
          swift_release();
          v235 = (uint64_t *)(v167 + 88);
          v236 = *((_QWORD *)v167 + 12);
          if (*(_QWORD *)(v166 + 96) >> 60 == 15)
          {
            if (v236 >> 60 == 15)
              goto LABEL_188;
LABEL_185:
            v241 = *v235;
            sub_1AD0040A0(*v235, v236);
            *(_QWORD *)(v166 + 88) = v241;
            *(_QWORD *)(v166 + 96) = v236;
            goto LABEL_191;
          }
          if (v236 >> 60 == 15)
          {
            sub_1AD007EC0(v166 + 88);
LABEL_188:
            *(_OWORD *)(v166 + 88) = *(_OWORD *)v235;
            goto LABEL_191;
          }
          v244 = *v235;
          sub_1AD0040A0(*v235, *((_QWORD *)v167 + 12));
          v245 = *(_QWORD *)(v166 + 88);
          v246 = *(_QWORD *)(v166 + 96);
          *(_QWORD *)(v166 + 88) = v244;
          *(_QWORD *)(v166 + 96) = v236;
          sub_1AD00412C(v245, v246);
        }
        else
        {
          if (v232)
          {
            *(_DWORD *)(v166 + 56) = *((_DWORD *)v167 + 14);
            v237 = *((_DWORD *)v167 + 15);
            *(_BYTE *)(v166 + 64) = v167[64];
            *(_DWORD *)(v166 + 60) = v237;
            v238 = *((_QWORD *)v167 + 10);
            *(_QWORD *)(v166 + 72) = *((_QWORD *)v167 + 9);
            *(_QWORD *)(v166 + 80) = v238;
            v235 = (uint64_t *)(v167 + 88);
            v236 = *((_QWORD *)v167 + 12);
            swift_retain();
            if (v236 >> 60 == 15)
            {
              *(_OWORD *)(v166 + 88) = *(_OWORD *)v235;
              goto LABEL_191;
            }
            goto LABEL_185;
          }
          v242 = *v231;
          v243 = *(_OWORD *)(v167 + 88);
          *(_OWORD *)(v166 + 72) = *(_OWORD *)(v167 + 72);
          *(_OWORD *)(v166 + 88) = v243;
          *v230 = v242;
        }
LABEL_191:
        v247 = *((_QWORD *)v167 + 14);
        *(_QWORD *)(v166 + 104) = *((_QWORD *)v167 + 13);
        *(_QWORD *)(v166 + 112) = v247;
        swift_retain();
        swift_release();
        v248 = (uint64_t *)(v167 + 120);
        v249 = *((_QWORD *)v167 + 16);
        if (*(_QWORD *)(v166 + 128) >> 60 == 15)
        {
          if (v249 >> 60 != 15)
          {
            v250 = *v248;
            sub_1AD0040A0(*v248, *((_QWORD *)v167 + 16));
            *(_QWORD *)(v166 + 120) = v250;
            *(_QWORD *)(v166 + 128) = v249;
            goto LABEL_198;
          }
        }
        else
        {
          if (v249 >> 60 != 15)
          {
            v251 = *v248;
            sub_1AD0040A0(*v248, *((_QWORD *)v167 + 16));
            v252 = *(_QWORD *)(v166 + 120);
            v253 = *(_QWORD *)(v166 + 128);
            *(_QWORD *)(v166 + 120) = v251;
            *(_QWORD *)(v166 + 128) = v249;
            sub_1AD00412C(v252, v253);
LABEL_198:
            v254 = *((_QWORD *)v167 + 18);
            *(_QWORD *)(v166 + 136) = *((_QWORD *)v167 + 17);
            *(_QWORD *)(v166 + 144) = v254;
            swift_retain();
            swift_release();
            v255 = (uint64_t *)(v167 + 152);
            v256 = *((_QWORD *)v167 + 20);
            v257 = v256 & 0xF000000000000000;
            if (*(_QWORD *)(v166 + 160) >> 60 == 11)
            {
              if (v257 == 0xB000000000000000)
                goto LABEL_208;
LABEL_204:
              if (v256 >> 60 != 15)
              {
                v258 = *v255;
                sub_1AD0040A0(*v255, *((_QWORD *)v167 + 20));
                *(_QWORD *)(v166 + 152) = v258;
                *(_QWORD *)(v166 + 160) = v256;
                goto LABEL_209;
              }
              goto LABEL_208;
            }
            if (v257 == 0xB000000000000000)
            {
              sub_1AD009758(v166 + 152, &qword_1ED2E3250);
            }
            else
            {
              if (*(_QWORD *)(v166 + 160) >> 60 == 15)
                goto LABEL_204;
              if (v256 >> 60 != 15)
              {
                v322 = *v255;
                sub_1AD0040A0(*v255, *((_QWORD *)v167 + 20));
                v323 = *(_QWORD *)(v166 + 152);
                v324 = *(_QWORD *)(v166 + 160);
                *(_QWORD *)(v166 + 152) = v322;
                *(_QWORD *)(v166 + 160) = v256;
                sub_1AD00412C(v323, v324);
LABEL_209:
                v259 = (_OWORD *)(v166 + 168);
                v261 = v167 + 168;
                v260 = *((_QWORD *)v167 + 21);
                if (!*(_QWORD *)(v166 + 168))
                {
                  if (!v260)
                  {
                    *v259 = *v261;
                    v272 = *(_OWORD *)(v167 + 184);
                    v273 = *(_OWORD *)(v167 + 200);
                    v274 = *(_OWORD *)(v167 + 216);
                    *(_QWORD *)(v166 + 232) = *((_QWORD *)v167 + 29);
                    *(_OWORD *)(v166 + 200) = v273;
                    *(_OWORD *)(v166 + 216) = v274;
                    *(_OWORD *)(v166 + 184) = v272;
                    goto LABEL_233;
                  }
                  v266 = *((_QWORD *)v167 + 22);
                  *(_QWORD *)(v166 + 168) = v260;
                  *(_QWORD *)(v166 + 176) = v266;
                  v267 = (uint64_t *)(v167 + 184);
                  v268 = *((_QWORD *)v167 + 24);
                  swift_retain();
                  if (v268 >> 60 == 15)
                  {
                    *(_OWORD *)(v166 + 184) = *(_OWORD *)v267;
                  }
                  else
                  {
                    v275 = *v267;
                    sub_1AD0040A0(*v267, v268);
                    *(_QWORD *)(v166 + 184) = v275;
                    *(_QWORD *)(v166 + 192) = v268;
                  }
                  *(_DWORD *)(v166 + 200) = *((_DWORD *)v167 + 50);
                  v276 = *((_QWORD *)v167 + 27);
                  *(_QWORD *)(v166 + 208) = *((_QWORD *)v167 + 26);
                  *(_QWORD *)(v166 + 216) = v276;
                  v277 = (uint64_t *)(v167 + 224);
                  v278 = *((_QWORD *)v167 + 29);
                  swift_retain();
                  if (v278 >> 60 == 15)
                  {
                    *(_OWORD *)(v166 + 224) = *(_OWORD *)v277;
                    goto LABEL_233;
                  }
                  goto LABEL_228;
                }
                if (!v260)
                {
                  sub_1AD0AEC8C((uint64_t *)(v166 + 168));
                  *v259 = *v261;
                  v270 = *(_OWORD *)(v167 + 200);
                  v269 = *(_OWORD *)(v167 + 216);
                  v271 = *(_OWORD *)(v167 + 184);
                  *(_QWORD *)(v166 + 232) = *((_QWORD *)v167 + 29);
                  *(_OWORD *)(v166 + 200) = v270;
                  *(_OWORD *)(v166 + 216) = v269;
                  *(_OWORD *)(v166 + 184) = v271;
                  goto LABEL_233;
                }
                v262 = *((_QWORD *)v167 + 22);
                *(_QWORD *)(v166 + 168) = v260;
                *(_QWORD *)(v166 + 176) = v262;
                swift_retain();
                swift_release();
                v263 = (uint64_t *)(v167 + 184);
                v264 = *((_QWORD *)v167 + 24);
                if (*(_QWORD *)(v166 + 192) >> 60 == 15)
                {
                  if (v264 >> 60 != 15)
                  {
                    v265 = *v263;
                    sub_1AD0040A0(*v263, *((_QWORD *)v167 + 24));
                    *(_QWORD *)(v166 + 184) = v265;
                    *(_QWORD *)(v166 + 192) = v264;
                    goto LABEL_226;
                  }
                }
                else
                {
                  if (v264 >> 60 != 15)
                  {
                    v279 = *v263;
                    sub_1AD0040A0(*v263, *((_QWORD *)v167 + 24));
                    v280 = *(_QWORD *)(v166 + 184);
                    v281 = *(_QWORD *)(v166 + 192);
                    *(_QWORD *)(v166 + 184) = v279;
                    *(_QWORD *)(v166 + 192) = v264;
                    sub_1AD00412C(v280, v281);
LABEL_226:
                    *(_DWORD *)(v166 + 200) = *((_DWORD *)v167 + 50);
                    v282 = *((_QWORD *)v167 + 27);
                    *(_QWORD *)(v166 + 208) = *((_QWORD *)v167 + 26);
                    *(_QWORD *)(v166 + 216) = v282;
                    swift_retain();
                    swift_release();
                    v277 = (uint64_t *)(v167 + 224);
                    v278 = *((_QWORD *)v167 + 29);
                    if (*(_QWORD *)(v166 + 232) >> 60 == 15)
                    {
                      if (v278 >> 60 != 15)
                      {
LABEL_228:
                        v283 = *v277;
                        sub_1AD0040A0(*v277, v278);
                        *(_QWORD *)(v166 + 224) = v283;
                        *(_QWORD *)(v166 + 232) = v278;
                        goto LABEL_233;
                      }
                    }
                    else
                    {
                      if (v278 >> 60 != 15)
                      {
                        v284 = *v277;
                        sub_1AD0040A0(*v277, *((_QWORD *)v167 + 29));
                        v285 = *(_QWORD *)(v166 + 224);
                        v286 = *(_QWORD *)(v166 + 232);
                        *(_QWORD *)(v166 + 224) = v284;
                        *(_QWORD *)(v166 + 232) = v278;
                        sub_1AD00412C(v285, v286);
LABEL_233:
                        *(_QWORD *)(v166 + 240) = *((_QWORD *)v167 + 30);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        v287 = *((_QWORD *)v167 + 32);
                        *(_QWORD *)(v166 + 248) = *((_QWORD *)v167 + 31);
                        *(_QWORD *)(v166 + 256) = v287;
                        swift_retain();
                        swift_release();
                        v288 = (uint64_t *)(v167 + 264);
                        v289 = *((_QWORD *)v167 + 34);
                        v290 = v289 & 0xF000000000000000;
                        if (*(_QWORD *)(v166 + 272) >> 60 == 11)
                        {
                          if (v290 == 0xB000000000000000)
                            goto LABEL_243;
LABEL_239:
                          if (v289 >> 60 != 15)
                          {
                            v291 = *v288;
                            sub_1AD0040A0(*v288, *((_QWORD *)v167 + 34));
                            *(_QWORD *)(v166 + 264) = v291;
                            *(_QWORD *)(v166 + 272) = v289;
                            goto LABEL_244;
                          }
                          goto LABEL_243;
                        }
                        if (v290 == 0xB000000000000000)
                        {
                          sub_1AD009758(v166 + 264, &qword_1ED2E3250);
                        }
                        else
                        {
                          if (*(_QWORD *)(v166 + 272) >> 60 == 15)
                            goto LABEL_239;
                          if (v289 >> 60 != 15)
                          {
                            v325 = *v288;
                            sub_1AD0040A0(*v288, *((_QWORD *)v167 + 34));
                            v326 = *(_QWORD *)(v166 + 264);
                            v327 = *(_QWORD *)(v166 + 272);
                            *(_QWORD *)(v166 + 264) = v325;
                            *(_QWORD *)(v166 + 272) = v289;
                            sub_1AD00412C(v326, v327);
LABEL_244:
                            v292 = *(int *)(v168 + 24);
                            v293 = (_QWORD *)(v166 + v292);
                            v294 = &v167[v292];
                            v295 = *(_QWORD *)&v167[v292 + 8];
                            *v293 = *(_QWORD *)&v167[v292];
                            v293[1] = v295;
                            swift_retain();
                            swift_release();
                            v296 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                          + 28);
                            v297 = (char *)v293 + v296;
                            v298 = &v294[v296];
                            v299 = sub_1AD63AF28();
                            v300 = *(_QWORD *)(v299 - 8);
                            v301 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v300 + 48);
                            v302 = v301(v297, 1, v299);
                            v303 = v301(v298, 1, v299);
                            if (v302)
                            {
                              if (!v303)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v300 + 16))(v297, v298, v299);
                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v300 + 56))(v297, 0, 1, v299);
                                goto LABEL_250;
                              }
                            }
                            else
                            {
                              if (!v303)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v300 + 24))(v297, v298, v299);
LABEL_250:
                                v124 = v330;
                                v46 = v331;
                                v305 = *(int *)(v168 + 28);
                                v306 = (_QWORD *)(v166 + v305);
                                v307 = &v167[v305];
                                v308 = *((_QWORD *)v307 + 1);
                                *v306 = *(_QWORD *)v307;
                                v306[1] = v308;
                                swift_retain();
                                swift_release();
                                v309 = *((_QWORD *)v307 + 3);
                                if (v306[3] == 1)
                                {
                                  if (v309 != 1)
                                  {
                                    v306[2] = *((_QWORD *)v307 + 2);
                                    v306[3] = *((_QWORD *)v307 + 3);
                                    swift_bridgeObjectRetain();
                                    goto LABEL_257;
                                  }
                                }
                                else
                                {
                                  if (v309 != 1)
                                  {
                                    v306[2] = *((_QWORD *)v307 + 2);
                                    v306[3] = *((_QWORD *)v307 + 3);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    goto LABEL_257;
                                  }
                                  sub_1AD009758((uint64_t)(v306 + 2), &qword_1ED2E3198);
                                }
                                *((_OWORD *)v306 + 1) = *((_OWORD *)v307 + 1);
                                goto LABEL_257;
                              }
                              (*(void (**)(char *, uint64_t))(v300 + 8))(v297, v299);
                            }
                            v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                            memcpy(v297, v298, *(_QWORD *)(*(_QWORD *)(v304 - 8) + 64));
                            goto LABEL_250;
                          }
                          sub_1AD007EC0(v166 + 264);
                        }
LABEL_243:
                        *(_OWORD *)(v166 + 264) = *(_OWORD *)v288;
                        goto LABEL_244;
                      }
                      sub_1AD007EC0(v166 + 224);
                    }
                    *(_OWORD *)(v166 + 224) = *(_OWORD *)v277;
                    goto LABEL_233;
                  }
                  sub_1AD007EC0(v166 + 184);
                }
                *(_OWORD *)(v166 + 184) = *(_OWORD *)v263;
                goto LABEL_226;
              }
              sub_1AD007EC0(v166 + 152);
            }
LABEL_208:
            *(_OWORD *)(v166 + 152) = *(_OWORD *)v255;
            goto LABEL_209;
          }
          sub_1AD007EC0(v166 + 120);
        }
        *(_OWORD *)(v166 + 120) = *(_OWORD *)v248;
        goto LABEL_198;
      }
      sub_1AD007EC0(v166 + 40);
    }
LABEL_175:
    *(_OWORD *)(v166 + 40) = *(_OWORD *)v178;
    goto LABEL_176;
  }
  if (v172)
  {
LABEL_131:
    v176 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy((void *)v166, v167, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
    goto LABEL_257;
  }
  *(_DWORD *)v166 = *(_DWORD *)v167;
  *(_QWORD *)(v166 + 8) = *((_QWORD *)v167 + 1);
  *(_QWORD *)(v166 + 16) = *((_QWORD *)v167 + 2);
  v173 = *((_QWORD *)v167 + 4);
  *(_QWORD *)(v166 + 24) = *((_QWORD *)v167 + 3);
  *(_QWORD *)(v166 + 32) = v173;
  v174 = (uint64_t *)(v167 + 40);
  v175 = *((_QWORD *)v167 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v175 >> 60 == 11 || v175 >> 60 == 15)
  {
    *(_OWORD *)(v166 + 40) = *(_OWORD *)v174;
  }
  else
  {
    v181 = *v174;
    sub_1AD0040A0(*v174, v175);
    *(_QWORD *)(v166 + 40) = v181;
    *(_QWORD *)(v166 + 48) = v175;
  }
  v124 = v330;
  if (*((_QWORD *)v167 + 9))
  {
    *(_DWORD *)(v166 + 56) = *((_DWORD *)v167 + 14);
    v182 = *((_DWORD *)v167 + 15);
    *(_BYTE *)(v166 + 64) = v167[64];
    *(_DWORD *)(v166 + 60) = v182;
    v183 = *((_QWORD *)v167 + 10);
    *(_QWORD *)(v166 + 72) = *((_QWORD *)v167 + 9);
    *(_QWORD *)(v166 + 80) = v183;
    v184 = (uint64_t *)(v167 + 88);
    v185 = *((_QWORD *)v167 + 12);
    swift_retain();
    if (v185 >> 60 != 15)
    {
      v189 = *v184;
      sub_1AD0040A0(v189, v185);
      *(_QWORD *)(v166 + 88) = v189;
      *(_QWORD *)(v166 + 96) = v185;
      goto LABEL_144;
    }
    v186 = (_OWORD *)(v166 + 88);
    v187 = *(_OWORD *)v184;
  }
  else
  {
    v186 = (_OWORD *)(v166 + 56);
    v187 = *(_OWORD *)(v167 + 56);
    v188 = *(_OWORD *)(v167 + 88);
    *(_OWORD *)(v166 + 72) = *(_OWORD *)(v167 + 72);
    *(_OWORD *)(v166 + 88) = v188;
  }
  *v186 = v187;
LABEL_144:
  v190 = *((_QWORD *)v167 + 14);
  *(_QWORD *)(v166 + 104) = *((_QWORD *)v167 + 13);
  *(_QWORD *)(v166 + 112) = v190;
  v191 = v167 + 120;
  v192 = *((_QWORD *)v167 + 16);
  swift_retain();
  if (v192 >> 60 == 15)
  {
    *(_OWORD *)(v166 + 120) = *v191;
  }
  else
  {
    v193 = *(_QWORD *)v191;
    sub_1AD0040A0(v193, v192);
    *(_QWORD *)(v166 + 120) = v193;
    *(_QWORD *)(v166 + 128) = v192;
  }
  v194 = *((_QWORD *)v167 + 18);
  *(_QWORD *)(v166 + 136) = *((_QWORD *)v167 + 17);
  *(_QWORD *)(v166 + 144) = v194;
  v195 = (uint64_t *)(v167 + 152);
  v196 = *((_QWORD *)v167 + 20);
  swift_retain();
  if (v196 >> 60 == 11 || v196 >> 60 == 15)
  {
    *(_OWORD *)(v166 + 152) = *(_OWORD *)v195;
  }
  else
  {
    v197 = *v195;
    sub_1AD0040A0(*v195, v196);
    *(_QWORD *)(v166 + 152) = v197;
    *(_QWORD *)(v166 + 160) = v196;
  }
  v198 = *((_QWORD *)v167 + 21);
  if (v198)
  {
    v199 = *((_QWORD *)v167 + 22);
    *(_QWORD *)(v166 + 168) = v198;
    *(_QWORD *)(v166 + 176) = v199;
    v200 = v167 + 184;
    v201 = *((_QWORD *)v167 + 24);
    swift_retain();
    if (v201 >> 60 == 15)
    {
      *(_OWORD *)(v166 + 184) = *v200;
    }
    else
    {
      v205 = *(_QWORD *)v200;
      sub_1AD0040A0(v205, v201);
      *(_QWORD *)(v166 + 184) = v205;
      *(_QWORD *)(v166 + 192) = v201;
    }
    *(_DWORD *)(v166 + 200) = *((_DWORD *)v167 + 50);
    v206 = *((_QWORD *)v167 + 27);
    *(_QWORD *)(v166 + 208) = *((_QWORD *)v167 + 26);
    *(_QWORD *)(v166 + 216) = v206;
    v207 = v167 + 224;
    v208 = *((_QWORD *)v167 + 29);
    swift_retain();
    if (v208 >> 60 == 15)
    {
      *(_OWORD *)(v166 + 224) = *v207;
    }
    else
    {
      v209 = *(_QWORD *)v207;
      sub_1AD0040A0(v209, v208);
      *(_QWORD *)(v166 + 224) = v209;
      *(_QWORD *)(v166 + 232) = v208;
    }
  }
  else
  {
    *(_OWORD *)(v166 + 168) = *(_OWORD *)(v167 + 168);
    v202 = *(_OWORD *)(v167 + 184);
    v203 = *(_OWORD *)(v167 + 200);
    v204 = *(_OWORD *)(v167 + 216);
    *(_QWORD *)(v166 + 232) = *((_QWORD *)v167 + 29);
    *(_OWORD *)(v166 + 200) = v203;
    *(_OWORD *)(v166 + 216) = v204;
    *(_OWORD *)(v166 + 184) = v202;
  }
  *(_QWORD *)(v166 + 240) = *((_QWORD *)v167 + 30);
  v210 = *((_QWORD *)v167 + 32);
  *(_QWORD *)(v166 + 248) = *((_QWORD *)v167 + 31);
  *(_QWORD *)(v166 + 256) = v210;
  v211 = (uint64_t *)(v167 + 264);
  v212 = *((_QWORD *)v167 + 34);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v212 >> 60 == 11 || v212 >> 60 == 15)
  {
    *(_OWORD *)(v166 + 264) = *(_OWORD *)v211;
  }
  else
  {
    v213 = *v211;
    sub_1AD0040A0(*v211, v212);
    *(_QWORD *)(v166 + 264) = v213;
    *(_QWORD *)(v166 + 272) = v212;
  }
  v214 = *(int *)(v168 + 24);
  v215 = (_QWORD *)(v166 + v214);
  v216 = &v167[v214];
  v217 = *(_QWORD *)&v167[v214 + 8];
  *v215 = *(_QWORD *)&v167[v214];
  v215[1] = v217;
  swift_retain();
  v218 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v219 = (char *)v215 + v218;
  v220 = &v216[v218];
  v221 = sub_1AD63AF28();
  v222 = *(_QWORD *)(v221 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v220, 1, v221))
  {
    v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v222 + 16))(v219, v220, v221);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v222 + 56))(v219, 0, 1, v221);
  }
  v46 = v331;
  v224 = *(int *)(v168 + 28);
  v225 = v166 + v224;
  v226 = &v167[v224];
  v227 = *((_QWORD *)v226 + 1);
  *(_QWORD *)v225 = *(_QWORD *)v226;
  *(_QWORD *)(v225 + 8) = v227;
  v228 = *((_QWORD *)v226 + 3);
  swift_retain();
  if (v228 == 1)
  {
    *(_OWORD *)(v225 + 16) = *((_OWORD *)v226 + 1);
  }
  else
  {
    *(_QWORD *)(v225 + 16) = *((_QWORD *)v226 + 2);
    *(_QWORD *)(v225 + 24) = *((_QWORD *)v226 + 3);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v169 + 56))(v166, 0, 1, v168);
LABEL_257:
  v310 = v46[20];
  v311 = (_QWORD *)((char *)a1 + v310);
  v312 = (_QWORD *)((char *)v124 + v310);
  v313 = *(_QWORD *)((char *)v124 + v310 + 8);
  if (*(_QWORD *)((char *)a1 + v310 + 8) >> 60 != 15)
  {
    if (v313 >> 60 != 15)
    {
      v315 = *v312;
      sub_1AD0040A0(*v312, v313);
      v316 = *v311;
      v317 = v311[1];
      *v311 = v315;
      v311[1] = v313;
      sub_1AD00412C(v316, v317);
      goto LABEL_264;
    }
    sub_1AD007EC0((uint64_t)v311);
    goto LABEL_262;
  }
  if (v313 >> 60 == 15)
  {
LABEL_262:
    *(_OWORD *)v311 = *(_OWORD *)v312;
    goto LABEL_264;
  }
  v314 = *v312;
  sub_1AD0040A0(*v312, v313);
  *v311 = v314;
  v311[1] = v313;
LABEL_264:
  *((_BYTE *)a1 + v46[21]) = *((_BYTE *)v124 + v46[21]);
  *((_BYTE *)a1 + v46[22]) = *((_BYTE *)v124 + v46[22]);
  *((_BYTE *)a1 + v46[23]) = *((_BYTE *)v124 + v46[23]);
  return a1;
}

uint64_t sub_1AD47ABE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CloudKitSharingToken();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1AD47AC20(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_OWORD *)((char *)a2 + v8 + 112);
  *((_OWORD *)v9 + 6) = *(_OWORD *)((char *)a2 + v8 + 96);
  *((_OWORD *)v9 + 7) = v11;
  *((_QWORD *)v9 + 16) = *(_QWORD *)((char *)a2 + v8 + 128);
  v12 = *(_OWORD *)((char *)a2 + v8 + 48);
  *((_OWORD *)v9 + 2) = *(_OWORD *)((char *)a2 + v8 + 32);
  *((_OWORD *)v9 + 3) = v12;
  v13 = *(_OWORD *)((char *)a2 + v8 + 80);
  *((_OWORD *)v9 + 4) = *(_OWORD *)((char *)a2 + v8 + 64);
  *((_OWORD *)v9 + 5) = v13;
  v14 = *(_OWORD *)((char *)a2 + v8 + 16);
  *(_OWORD *)v9 = *(_OWORD *)((char *)a2 + v8);
  *((_OWORD *)v9 + 1) = v14;
  v15 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v16 = v15[5];
  v17 = &v9[v16];
  v18 = &v10[v16];
  v19 = sub_1AD63AE2C();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = v15[6];
  v23 = &v9[v22];
  v24 = &v10[v22];
  v25 = *((_OWORD *)v24 + 5);
  *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
  *((_OWORD *)v23 + 5) = v25;
  v26 = *((_OWORD *)v24 + 3);
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  *((_OWORD *)v23 + 3) = v26;
  v27 = *((_OWORD *)v24 + 9);
  *((_OWORD *)v23 + 8) = *((_OWORD *)v24 + 8);
  *((_OWORD *)v23 + 9) = v27;
  v28 = *((_OWORD *)v24 + 7);
  *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
  *((_OWORD *)v23 + 7) = v28;
  v29 = *((_OWORD *)v24 + 13);
  *((_OWORD *)v23 + 12) = *((_OWORD *)v24 + 12);
  *((_OWORD *)v23 + 13) = v29;
  v30 = *((_OWORD *)v24 + 11);
  *((_OWORD *)v23 + 10) = *((_OWORD *)v24 + 10);
  *((_OWORD *)v23 + 11) = v30;
  v31 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v31;
  *(_QWORD *)&v9[v15[7]] = *(_QWORD *)&v10[v15[7]];
  *(_OWORD *)&v9[v15[8]] = *(_OWORD *)&v10[v15[8]];
  *(_OWORD *)&v9[v15[9]] = *(_OWORD *)&v10[v15[9]];
  v9[v15[10]] = v10[v15[10]];
  v9[v15[11]] = v10[v15[11]];
  *(_OWORD *)&v9[v15[12]] = *(_OWORD *)&v10[v15[12]];
  *(_QWORD *)&v9[v15[13]] = *(_QWORD *)&v10[v15[13]];
  v32 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v32) = *((_BYTE *)a2 + v32);
  v33 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
  v34 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v34) = *((_BYTE *)a2 + v34);
  v35 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + v35) = *((_BYTE *)a2 + v35);
  v36 = a3[16];
  *(_OWORD *)((char *)a1 + a3[15]) = *(_OWORD *)((char *)a2 + a3[15]);
  *(_OWORD *)((char *)a1 + v36) = *(_OWORD *)((char *)a2 + v36);
  v37 = a3[18];
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  *((_BYTE *)a1 + v37) = *((_BYTE *)a2 + v37);
  v38 = a3[19];
  v39 = (_OWORD *)((char *)a1 + v38);
  v40 = (_OWORD *)((char *)a2 + v38);
  v41 = type metadata accessor for CloudKitSharingToken();
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v44 = v40[13];
    v39[12] = v40[12];
    v39[13] = v44;
    v39[14] = v40[14];
    *((_QWORD *)v39 + 30) = *((_QWORD *)v40 + 30);
    v45 = v40[9];
    v39[8] = v40[8];
    v39[9] = v45;
    v46 = v40[11];
    v39[10] = v40[10];
    v39[11] = v46;
    v47 = v40[5];
    v39[4] = v40[4];
    v39[5] = v47;
    v48 = v40[7];
    v39[6] = v40[6];
    v39[7] = v48;
    v49 = v40[1];
    *v39 = *v40;
    v39[1] = v49;
    v50 = v40[3];
    v39[2] = v40[2];
    v39[3] = v50;
    *(_OWORD *)((char *)v39 + 248) = *(_OWORD *)((char *)v40 + 248);
    *(_OWORD *)((char *)v39 + 264) = *(_OWORD *)((char *)v40 + 264);
    v51 = *(int *)(v41 + 24);
    v52 = (char *)v39 + v51;
    v53 = (char *)v40 + v51;
    *(_OWORD *)((char *)v39 + v51) = *(_OWORD *)((char *)v40 + v51);
    v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    __dst = &v52[v54];
    v55 = &v53[v54];
    v56 = sub_1AD63AF28();
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(__dst, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v56);
    }
    v59 = *(int *)(v41 + 28);
    v60 = (_OWORD *)((char *)v39 + v59);
    v61 = (_OWORD *)((char *)v40 + v59);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v63 = a3[21];
  *(_OWORD *)((char *)a1 + a3[20]) = *(_OWORD *)((char *)a2 + a3[20]);
  *((_BYTE *)a1 + v63) = *((_BYTE *)a2 + v63);
  v64 = a3[23];
  *((_BYTE *)a1 + a3[22]) = *((_BYTE *)a2 + a3[22]);
  *((_BYTE *)a1 + v64) = *((_BYTE *)a2 + v64);
  return a1;
}

uint64_t sub_1AD47B008(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  _OWORD *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t, uint64_t);
  int v106;
  int v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  const void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  _OWORD *v129;
  _OWORD *v130;
  __int128 v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  _OWORD *v135;
  unint64_t v136;
  unint64_t v137;
  __int128 v138;
  _QWORD *v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  unint64_t v149;
  unint64_t v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t (*v170)(void *, uint64_t, uint64_t);
  int v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t *v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int *v191;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v7 = (_OWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 56) == 1)
    goto LABEL_4;
  v8 = *(_QWORD *)(a2 + 56);
  if (v8 == 1)
  {
    sub_1AD009758(a1 + 48, &qword_1ED2E3198);
LABEL_4:
    *(_OWORD *)(a1 + 48) = *v7;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)v7;
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v190 = a2;
  v191 = a3;
  if (!*(_QWORD *)(a1 + v9))
  {
LABEL_13:
    v18 = *(_OWORD *)(v11 + 112);
    *(_OWORD *)(v10 + 96) = *(_OWORD *)(v11 + 96);
    *(_OWORD *)(v10 + 112) = v18;
    *(_QWORD *)(v10 + 128) = *(_QWORD *)(v11 + 128);
    v19 = *(_OWORD *)(v11 + 48);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
    *(_OWORD *)(v10 + 48) = v19;
    v20 = *(_OWORD *)(v11 + 80);
    *(_OWORD *)(v10 + 64) = *(_OWORD *)(v11 + 64);
    *(_OWORD *)(v10 + 80) = v20;
    v21 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = v21;
    goto LABEL_16;
  }
  if (!*(_QWORD *)v11)
  {
    sub_1AD311474(v10);
    goto LABEL_13;
  }
  v12 = *(_QWORD *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = v12;
  swift_release();
  v13 = *(_QWORD *)(v11 + 24);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v10 + 24) = v13;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
  swift_release();
  v14 = *(_QWORD *)(v11 + 56);
  *(_QWORD *)(v10 + 48) = *(_QWORD *)(v11 + 48);
  *(_QWORD *)(v10 + 56) = v14;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v10 + 64) = *(_OWORD *)(v11 + 64);
  swift_release();
  v15 = *(_QWORD *)(v11 + 88);
  *(_QWORD *)(v10 + 80) = *(_QWORD *)(v11 + 80);
  *(_QWORD *)(v10 + 88) = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v10 + 96) = *(_OWORD *)(v11 + 96);
  swift_release();
  v16 = (_QWORD *)(v11 + 112);
  if (*(_QWORD *)(v10 + 120) != 1)
  {
    v17 = *(_QWORD *)(v11 + 120);
    if (v17 != 1)
    {
      *(_QWORD *)(v10 + 112) = *v16;
      *(_QWORD *)(v10 + 120) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_1AD009758(v10 + 112, &qword_1ED2E3198);
  }
  *(_OWORD *)(v10 + 112) = *(_OWORD *)v16;
LABEL_15:
  *(_QWORD *)(v10 + 128) = *(_QWORD *)(v11 + 128);
LABEL_16:
  v22 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v23 = v22[5];
  v24 = (void *)(v10 + v23);
  v25 = (void *)(v11 + v23);
  v26 = sub_1AD63AE2C();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
LABEL_21:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
LABEL_22:
  v32 = v191;
  v33 = v22[6];
  v34 = v10 + v33;
  v35 = v11 + v33;
  if (!*(_QWORD *)(v10 + v33))
  {
LABEL_29:
    v39 = *(_OWORD *)(v35 + 176);
    *(_OWORD *)(v34 + 160) = *(_OWORD *)(v35 + 160);
    *(_OWORD *)(v34 + 176) = v39;
    v40 = *(_OWORD *)(v35 + 208);
    *(_OWORD *)(v34 + 192) = *(_OWORD *)(v35 + 192);
    *(_OWORD *)(v34 + 208) = v40;
    v41 = *(_OWORD *)(v35 + 112);
    *(_OWORD *)(v34 + 96) = *(_OWORD *)(v35 + 96);
    *(_OWORD *)(v34 + 112) = v41;
    v42 = *(_OWORD *)(v35 + 144);
    *(_OWORD *)(v34 + 128) = *(_OWORD *)(v35 + 128);
    *(_OWORD *)(v34 + 144) = v42;
    v43 = *(_OWORD *)(v35 + 48);
    *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
    *(_OWORD *)(v34 + 48) = v43;
    v44 = *(_OWORD *)(v35 + 80);
    *(_OWORD *)(v34 + 64) = *(_OWORD *)(v35 + 64);
    *(_OWORD *)(v34 + 80) = v44;
    v45 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v45;
    goto LABEL_52;
  }
  if (!*(_QWORD *)v35)
  {
    sub_1AD3114A8((_QWORD *)v34);
    goto LABEL_29;
  }
  v36 = *(_QWORD *)(v35 + 8);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = v36;
  swift_release();
  v37 = (_OWORD *)(v35 + 16);
  if (*(_QWORD *)(v34 + 24) == 1)
  {
LABEL_27:
    *(_OWORD *)(v34 + 16) = *v37;
    goto LABEL_32;
  }
  v38 = *(_QWORD *)(v35 + 24);
  if (v38 == 1)
  {
    sub_1AD009758(v34 + 16, &qword_1ED2E3198);
    goto LABEL_27;
  }
  *(_QWORD *)(v34 + 16) = *(_QWORD *)v37;
  *(_QWORD *)(v34 + 24) = v38;
  swift_bridgeObjectRelease();
LABEL_32:
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
  swift_release();
  v46 = (_OWORD *)(v35 + 48);
  if (*(_QWORD *)(v34 + 56) == 1)
  {
LABEL_35:
    *(_OWORD *)(v34 + 48) = *v46;
    goto LABEL_37;
  }
  v47 = *(_QWORD *)(v35 + 56);
  if (v47 == 1)
  {
    sub_1AD009758(v34 + 48, &qword_1ED2E3198);
    goto LABEL_35;
  }
  *(_QWORD *)(v34 + 48) = *(_QWORD *)v46;
  *(_QWORD *)(v34 + 56) = v47;
  swift_bridgeObjectRelease();
LABEL_37:
  v48 = *(_QWORD *)(v35 + 64);
  if (!*(_QWORD *)(v34 + 64))
  {
LABEL_42:
    v55 = *(_OWORD *)(v35 + 176);
    *(_OWORD *)(v34 + 160) = *(_OWORD *)(v35 + 160);
    *(_OWORD *)(v34 + 176) = v55;
    *(_QWORD *)(v34 + 192) = *(_QWORD *)(v35 + 192);
    v56 = *(_OWORD *)(v35 + 112);
    *(_OWORD *)(v34 + 96) = *(_OWORD *)(v35 + 96);
    *(_OWORD *)(v34 + 112) = v56;
    v57 = *(_OWORD *)(v35 + 144);
    *(_OWORD *)(v34 + 128) = *(_OWORD *)(v35 + 128);
    *(_OWORD *)(v34 + 144) = v57;
    v58 = *(_OWORD *)(v35 + 80);
    *(_OWORD *)(v34 + 64) = *(_OWORD *)(v35 + 64);
    *(_OWORD *)(v34 + 80) = v58;
    v32 = v191;
    goto LABEL_47;
  }
  if (!v48)
  {
    sub_1AD311474(v34 + 64);
    goto LABEL_42;
  }
  v49 = *(_QWORD *)(v35 + 72);
  *(_QWORD *)(v34 + 64) = v48;
  *(_QWORD *)(v34 + 72) = v49;
  swift_release();
  v50 = *(_QWORD *)(v35 + 88);
  *(_QWORD *)(v34 + 80) = *(_QWORD *)(v35 + 80);
  *(_QWORD *)(v34 + 88) = v50;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v34 + 96) = *(_OWORD *)(v35 + 96);
  swift_release();
  v51 = *(_QWORD *)(v35 + 120);
  *(_QWORD *)(v34 + 112) = *(_QWORD *)(v35 + 112);
  *(_QWORD *)(v34 + 120) = v51;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v34 + 128) = *(_OWORD *)(v35 + 128);
  swift_release();
  v52 = *(_QWORD *)(v35 + 152);
  *(_QWORD *)(v34 + 144) = *(_QWORD *)(v35 + 144);
  *(_QWORD *)(v34 + 152) = v52;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v34 + 160) = *(_OWORD *)(v35 + 160);
  swift_release();
  v53 = (_OWORD *)(v34 + 176);
  v54 = (_OWORD *)(v35 + 176);
  if (*(_QWORD *)(v34 + 184) == 1)
  {
    *v53 = *v54;
    v32 = v191;
  }
  else
  {
    v59 = *(_QWORD *)(v35 + 184);
    v32 = v191;
    if (v59 == 1)
    {
      sub_1AD009758(v34 + 176, &qword_1ED2E3198);
      *v53 = *v54;
    }
    else
    {
      *(_QWORD *)(v34 + 176) = *(_QWORD *)v54;
      *(_QWORD *)(v34 + 184) = v59;
      swift_bridgeObjectRelease();
    }
  }
  *(_QWORD *)(v34 + 192) = *(_QWORD *)(v35 + 192);
LABEL_47:
  *(_BYTE *)(v34 + 200) = *(_BYTE *)(v35 + 200);
  v60 = (_OWORD *)(v35 + 208);
  v61 = *(_QWORD *)(v34 + 216);
  if (v61 >> 60 == 15)
  {
LABEL_50:
    *(_OWORD *)(v34 + 208) = *v60;
    goto LABEL_52;
  }
  v62 = *(_QWORD *)(v35 + 216);
  if (v62 >> 60 == 15)
  {
    sub_1AD007EC0(v34 + 208);
    goto LABEL_50;
  }
  v63 = *(_QWORD *)(v34 + 208);
  *(_QWORD *)(v34 + 208) = *(_QWORD *)v60;
  *(_QWORD *)(v34 + 216) = v62;
  sub_1AD00412C(v63, v61);
LABEL_52:
  v64 = v190;
  *(_QWORD *)(v10 + v22[7]) = *(_QWORD *)(v11 + v22[7]);
  swift_bridgeObjectRelease();
  v65 = v22[8];
  v66 = v10 + v65;
  v67 = v11 + v65;
  v68 = *(_QWORD *)(v10 + v65 + 8);
  if (v68 >> 60 == 15)
  {
LABEL_55:
    *(_OWORD *)v66 = *(_OWORD *)v67;
    goto LABEL_57;
  }
  v69 = *(_QWORD *)(v67 + 8);
  if (v69 >> 60 == 15)
  {
    sub_1AD007EC0(v66);
    goto LABEL_55;
  }
  v70 = *(_QWORD *)v66;
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *(_QWORD *)(v66 + 8) = v69;
  sub_1AD00412C(v70, v68);
LABEL_57:
  v71 = v22[9];
  v72 = v10 + v71;
  v73 = v11 + v71;
  v74 = *(_QWORD *)(v10 + v71 + 8);
  if (v74 >> 60 == 15)
  {
LABEL_60:
    *(_OWORD *)v72 = *(_OWORD *)v73;
    goto LABEL_62;
  }
  v75 = *(_QWORD *)(v73 + 8);
  if (v75 >> 60 == 15)
  {
    sub_1AD007EC0(v72);
    goto LABEL_60;
  }
  v76 = *(_QWORD *)v72;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *(_QWORD *)(v72 + 8) = v75;
  sub_1AD00412C(v76, v74);
LABEL_62:
  *(_BYTE *)(v10 + v22[10]) = *(_BYTE *)(v11 + v22[10]);
  *(_BYTE *)(v10 + v22[11]) = *(_BYTE *)(v11 + v22[11]);
  v77 = v22[12];
  v78 = v10 + v77;
  v79 = v11 + v77;
  v80 = *(_QWORD *)(v10 + v77 + 8);
  if (v80 >> 60 == 15)
  {
LABEL_65:
    *(_OWORD *)v78 = *(_OWORD *)v79;
    goto LABEL_67;
  }
  v81 = *(_QWORD *)(v79 + 8);
  if (v81 >> 60 == 15)
  {
    sub_1AD007EC0(v78);
    goto LABEL_65;
  }
  v82 = *(_QWORD *)v78;
  *(_QWORD *)v78 = *(_QWORD *)v79;
  *(_QWORD *)(v78 + 8) = v81;
  sub_1AD00412C(v82, v80);
LABEL_67:
  *(_QWORD *)(v10 + v22[13]) = *(_QWORD *)(v11 + v22[13]);
  v83 = v32[8];
  *(_BYTE *)(a1 + v32[7]) = *(_BYTE *)(v190 + v32[7]);
  *(_BYTE *)(a1 + v83) = *(_BYTE *)(v190 + v83);
  v84 = v32[10];
  *(_BYTE *)(a1 + v32[9]) = *(_BYTE *)(v190 + v32[9]);
  *(_BYTE *)(a1 + v84) = *(_BYTE *)(v190 + v84);
  v85 = v32[12];
  *(_BYTE *)(a1 + v32[11]) = *(_BYTE *)(v190 + v32[11]);
  *(_BYTE *)(a1 + v85) = *(_BYTE *)(v190 + v85);
  v86 = v32[14];
  *(_BYTE *)(a1 + v32[13]) = *(_BYTE *)(v190 + v32[13]);
  *(_BYTE *)(a1 + v86) = *(_BYTE *)(v190 + v86);
  v87 = v32[15];
  v88 = a1 + v87;
  v89 = v190 + v87;
  v90 = *(_QWORD *)(a1 + v87 + 8);
  if (v90 >> 60 == 15)
  {
LABEL_70:
    *(_OWORD *)v88 = *(_OWORD *)v89;
    goto LABEL_72;
  }
  v91 = *(_QWORD *)(v89 + 8);
  if (v91 >> 60 == 15)
  {
    sub_1AD007EC0(v88);
    goto LABEL_70;
  }
  v92 = *(_QWORD *)v88;
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *(_QWORD *)(v88 + 8) = v91;
  sub_1AD00412C(v92, v90);
LABEL_72:
  v93 = v32[16];
  v94 = a1 + v93;
  v95 = v190 + v93;
  v96 = *(_QWORD *)(a1 + v93 + 8);
  if (v96 >> 60 == 15)
  {
LABEL_75:
    *(_OWORD *)v94 = *(_OWORD *)v95;
    goto LABEL_77;
  }
  v97 = *(_QWORD *)(v95 + 8);
  if (v97 >> 60 == 15)
  {
    sub_1AD007EC0(v94);
    goto LABEL_75;
  }
  v98 = *(_QWORD *)v94;
  *(_QWORD *)v94 = *(_QWORD *)v95;
  *(_QWORD *)(v94 + 8) = v97;
  sub_1AD00412C(v98, v96);
LABEL_77:
  v99 = v32[18];
  *(_BYTE *)(a1 + v32[17]) = *(_BYTE *)(v190 + v32[17]);
  *(_BYTE *)(a1 + v99) = *(_BYTE *)(v190 + v99);
  v100 = v32[19];
  v101 = a1 + v100;
  v102 = v190 + v100;
  v103 = type metadata accessor for CloudKitSharingToken();
  v104 = *(_QWORD *)(v103 - 8);
  v105 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
  v106 = v105(v101, 1, v103);
  v107 = v105(v102, 1, v103);
  if (!v106)
  {
    if (v107)
    {
      sub_1AD47ABE4(v101);
      goto LABEL_83;
    }
    *(_DWORD *)v101 = *(_DWORD *)v102;
    *(_QWORD *)(v101 + 8) = *(_QWORD *)(v102 + 8);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v101 + 16) = *(_QWORD *)(v102 + 16);
    swift_bridgeObjectRelease();
    *(_OWORD *)(v101 + 24) = *(_OWORD *)(v102 + 24);
    swift_release();
    v125 = (_QWORD *)(v102 + 40);
    v126 = *(_QWORD *)(v101 + 48);
    if (v126 >> 60 != 11)
    {
      v127 = *(_QWORD *)(v102 + 48);
      if (v127 >> 60 == 11)
      {
        sub_1AD009758(v101 + 40, &qword_1ED2E3250);
      }
      else if (v126 >> 60 != 15)
      {
        if (v127 >> 60 != 15)
        {
          v187 = *(_QWORD *)(v101 + 40);
          *(_QWORD *)(v101 + 40) = *v125;
          *(_QWORD *)(v101 + 48) = v127;
          sub_1AD00412C(v187, v126);
LABEL_93:
          if (*(_QWORD *)(v101 + 72))
          {
            v132 = *(_QWORD *)(v102 + 72);
            if (v132)
            {
              v133 = *(_DWORD *)(v102 + 60);
              *(_DWORD *)(v101 + 56) = *(_DWORD *)(v102 + 56);
              *(_DWORD *)(v101 + 60) = v133;
              *(_BYTE *)(v101 + 64) = *(_BYTE *)(v102 + 64);
              v134 = *(_QWORD *)(v102 + 80);
              *(_QWORD *)(v101 + 72) = v132;
              *(_QWORD *)(v101 + 80) = v134;
              swift_release();
              v135 = (_OWORD *)(v102 + 88);
              v136 = *(_QWORD *)(v101 + 96);
              if (v136 >> 60 == 15)
              {
LABEL_98:
                *(_OWORD *)(v101 + 88) = *v135;
                goto LABEL_101;
              }
              v137 = *(_QWORD *)(v102 + 96);
              if (v137 >> 60 == 15)
              {
                sub_1AD007EC0(v101 + 88);
                goto LABEL_98;
              }
              v153 = *(_QWORD *)(v101 + 88);
              *(_QWORD *)(v101 + 88) = *(_QWORD *)v135;
              *(_QWORD *)(v101 + 96) = v137;
              sub_1AD00412C(v153, v136);
LABEL_101:
              *(_OWORD *)(v101 + 104) = *(_OWORD *)(v102 + 104);
              swift_release();
              v139 = (_QWORD *)(v102 + 120);
              v140 = *(_QWORD *)(v101 + 128);
              if (v140 >> 60 != 15)
              {
                v141 = *(_QWORD *)(v102 + 128);
                if (v141 >> 60 != 15)
                {
                  v142 = *(_QWORD *)(v101 + 120);
                  *(_QWORD *)(v101 + 120) = *v139;
                  *(_QWORD *)(v101 + 128) = v141;
                  sub_1AD00412C(v142, v140);
LABEL_106:
                  *(_OWORD *)(v101 + 136) = *(_OWORD *)(v102 + 136);
                  swift_release();
                  v143 = (_QWORD *)(v102 + 152);
                  v144 = *(_QWORD *)(v101 + 160);
                  if (v144 >> 60 != 11)
                  {
                    v145 = *(_QWORD *)(v102 + 160);
                    if (v145 >> 60 == 11)
                    {
                      sub_1AD009758(v101 + 152, &qword_1ED2E3250);
                    }
                    else if (v144 >> 60 != 15)
                    {
                      if (v145 >> 60 != 15)
                      {
                        v188 = *(_QWORD *)(v101 + 152);
                        *(_QWORD *)(v101 + 152) = *v143;
                        *(_QWORD *)(v101 + 160) = v145;
                        sub_1AD00412C(v188, v144);
LABEL_113:
                        v146 = *(_QWORD *)(v102 + 168);
                        if (*(_QWORD *)(v101 + 168))
                        {
                          if (v146)
                          {
                            v147 = *(_QWORD *)(v102 + 176);
                            *(_QWORD *)(v101 + 168) = v146;
                            *(_QWORD *)(v101 + 176) = v147;
                            swift_release();
                            v148 = (_QWORD *)(v102 + 184);
                            v149 = *(_QWORD *)(v101 + 192);
                            if (v149 >> 60 != 15)
                            {
                              v150 = *(_QWORD *)(v102 + 192);
                              if (v150 >> 60 != 15)
                              {
                                v154 = *(_QWORD *)(v101 + 184);
                                *(_QWORD *)(v101 + 184) = *v148;
                                *(_QWORD *)(v101 + 192) = v150;
                                sub_1AD00412C(v154, v149);
LABEL_123:
                                *(_DWORD *)(v101 + 200) = *(_DWORD *)(v102 + 200);
                                *(_OWORD *)(v101 + 208) = *(_OWORD *)(v102 + 208);
                                swift_release();
                                v155 = (_QWORD *)(v102 + 224);
                                v156 = *(_QWORD *)(v101 + 232);
                                if (v156 >> 60 != 15)
                                {
                                  v157 = *(_QWORD *)(v102 + 232);
                                  if (v157 >> 60 != 15)
                                  {
                                    v158 = *(_QWORD *)(v101 + 224);
                                    *(_QWORD *)(v101 + 224) = *v155;
                                    *(_QWORD *)(v101 + 232) = v157;
                                    sub_1AD00412C(v158, v156);
LABEL_128:
                                    *(_QWORD *)(v101 + 240) = *(_QWORD *)(v102 + 240);
                                    swift_bridgeObjectRelease();
                                    *(_OWORD *)(v101 + 248) = *(_OWORD *)(v102 + 248);
                                    swift_release();
                                    v159 = (_QWORD *)(v102 + 264);
                                    v160 = *(_QWORD *)(v101 + 272);
                                    if (v160 >> 60 != 11)
                                    {
                                      v161 = *(_QWORD *)(v102 + 272);
                                      if (v161 >> 60 == 11)
                                      {
                                        sub_1AD009758(v101 + 264, &qword_1ED2E3250);
                                      }
                                      else if (v160 >> 60 != 15)
                                      {
                                        if (v161 >> 60 != 15)
                                        {
                                          v189 = *(_QWORD *)(v101 + 264);
                                          *(_QWORD *)(v101 + 264) = *v159;
                                          *(_QWORD *)(v101 + 272) = v161;
                                          sub_1AD00412C(v189, v160);
LABEL_135:
                                          v162 = *(int *)(v103 + 24);
                                          v163 = v101 + v162;
                                          v164 = v102 + v162;
                                          *(_OWORD *)(v101 + v162) = *(_OWORD *)(v102 + v162);
                                          swift_release();
                                          v165 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                        + 28);
                                          v166 = (void *)(v163 + v165);
                                          v167 = (void *)(v164 + v165);
                                          v168 = sub_1AD63AF28();
                                          v169 = *(_QWORD *)(v168 - 8);
                                          v170 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v169 + 48);
                                          v171 = v170(v166, 1, v168);
                                          v172 = v170(v167, 1, v168);
                                          if (v171)
                                          {
                                            if (!v172)
                                            {
                                              (*(void (**)(void *, void *, uint64_t))(v169 + 32))(v166, v167, v168);
                                              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v166, 0, 1, v168);
                                              goto LABEL_141;
                                            }
                                          }
                                          else
                                          {
                                            if (!v172)
                                            {
                                              (*(void (**)(void *, void *, uint64_t))(v169 + 40))(v166, v167, v168);
LABEL_141:
                                              v64 = v190;
                                              v32 = v191;
                                              v174 = *(int *)(v103 + 28);
                                              v175 = v101 + v174;
                                              v176 = v102 + v174;
                                              *(_OWORD *)(v101 + v174) = *(_OWORD *)(v102 + v174);
                                              swift_release();
                                              v177 = (_QWORD *)(v176 + 16);
                                              if (*(_QWORD *)(v175 + 24) != 1)
                                              {
                                                v178 = *(_QWORD *)(v176 + 24);
                                                if (v178 != 1)
                                                {
                                                  *(_QWORD *)(v175 + 16) = *v177;
                                                  *(_QWORD *)(v175 + 24) = v178;
                                                  swift_bridgeObjectRelease();
                                                  goto LABEL_146;
                                                }
                                                sub_1AD009758(v175 + 16, &qword_1ED2E3198);
                                              }
                                              *(_OWORD *)(v175 + 16) = *(_OWORD *)v177;
                                              goto LABEL_146;
                                            }
                                            (*(void (**)(void *, uint64_t))(v169 + 8))(v166, v168);
                                          }
                                          v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                          memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
                                          goto LABEL_141;
                                        }
                                        sub_1AD007EC0(v101 + 264);
                                      }
                                    }
                                    *(_OWORD *)(v101 + 264) = *(_OWORD *)v159;
                                    goto LABEL_135;
                                  }
                                  sub_1AD007EC0(v101 + 224);
                                }
                                *(_OWORD *)(v101 + 224) = *(_OWORD *)v155;
                                goto LABEL_128;
                              }
                              sub_1AD007EC0(v101 + 184);
                            }
                            *(_OWORD *)(v101 + 184) = *(_OWORD *)v148;
                            goto LABEL_123;
                          }
                          sub_1AD0AEC8C((uint64_t *)(v101 + 168));
                        }
                        v151 = *(_OWORD *)(v102 + 216);
                        *(_OWORD *)(v101 + 200) = *(_OWORD *)(v102 + 200);
                        *(_OWORD *)(v101 + 216) = v151;
                        *(_QWORD *)(v101 + 232) = *(_QWORD *)(v102 + 232);
                        v152 = *(_OWORD *)(v102 + 184);
                        *(_OWORD *)(v101 + 168) = *(_OWORD *)(v102 + 168);
                        *(_OWORD *)(v101 + 184) = v152;
                        goto LABEL_128;
                      }
                      sub_1AD007EC0(v101 + 152);
                    }
                  }
                  *(_OWORD *)(v101 + 152) = *(_OWORD *)v143;
                  goto LABEL_113;
                }
                sub_1AD007EC0(v101 + 120);
              }
              *(_OWORD *)(v101 + 120) = *(_OWORD *)v139;
              goto LABEL_106;
            }
            sub_1AD0AEC58(v101 + 56);
          }
          v138 = *(_OWORD *)(v102 + 72);
          *(_OWORD *)(v101 + 56) = *(_OWORD *)(v102 + 56);
          *(_OWORD *)(v101 + 72) = v138;
          *(_OWORD *)(v101 + 88) = *(_OWORD *)(v102 + 88);
          goto LABEL_101;
        }
        sub_1AD007EC0(v101 + 40);
      }
    }
    *(_OWORD *)(v101 + 40) = *(_OWORD *)v125;
    goto LABEL_93;
  }
  if (v107)
  {
LABEL_83:
    v124 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy((void *)v101, (const void *)v102, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
    goto LABEL_146;
  }
  v108 = *(_OWORD *)(v102 + 208);
  *(_OWORD *)(v101 + 192) = *(_OWORD *)(v102 + 192);
  *(_OWORD *)(v101 + 208) = v108;
  *(_OWORD *)(v101 + 224) = *(_OWORD *)(v102 + 224);
  *(_QWORD *)(v101 + 240) = *(_QWORD *)(v102 + 240);
  v109 = *(_OWORD *)(v102 + 144);
  *(_OWORD *)(v101 + 128) = *(_OWORD *)(v102 + 128);
  *(_OWORD *)(v101 + 144) = v109;
  v110 = *(_OWORD *)(v102 + 176);
  *(_OWORD *)(v101 + 160) = *(_OWORD *)(v102 + 160);
  *(_OWORD *)(v101 + 176) = v110;
  v111 = *(_OWORD *)(v102 + 80);
  *(_OWORD *)(v101 + 64) = *(_OWORD *)(v102 + 64);
  *(_OWORD *)(v101 + 80) = v111;
  v112 = *(_OWORD *)(v102 + 112);
  *(_OWORD *)(v101 + 96) = *(_OWORD *)(v102 + 96);
  *(_OWORD *)(v101 + 112) = v112;
  v113 = *(_OWORD *)(v102 + 16);
  *(_OWORD *)v101 = *(_OWORD *)v102;
  *(_OWORD *)(v101 + 16) = v113;
  v114 = *(_OWORD *)(v102 + 48);
  *(_OWORD *)(v101 + 32) = *(_OWORD *)(v102 + 32);
  *(_OWORD *)(v101 + 48) = v114;
  *(_OWORD *)(v101 + 248) = *(_OWORD *)(v102 + 248);
  *(_OWORD *)(v101 + 264) = *(_OWORD *)(v102 + 264);
  v115 = *(int *)(v103 + 24);
  v116 = v101 + v115;
  v117 = v102 + v115;
  *(_OWORD *)(v101 + v115) = *(_OWORD *)(v102 + v115);
  v118 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v119 = (void *)(v116 + v118);
  v120 = (const void *)(v117 + v118);
  v121 = sub_1AD63AF28();
  v122 = *(_QWORD *)(v121 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121))
  {
    v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v122 + 32))(v119, v120, v121);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
  }
  v64 = v190;
  v32 = v191;
  v128 = *(int *)(v103 + 28);
  v129 = (_OWORD *)(v101 + v128);
  v130 = (_OWORD *)(v102 + v128);
  v131 = v130[1];
  *v129 = *v130;
  v129[1] = v131;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
LABEL_146:
  v179 = v32[20];
  v180 = (uint64_t *)(a1 + v179);
  v181 = (uint64_t *)(v64 + v179);
  v182 = *(_QWORD *)(a1 + v179 + 8);
  if (v182 >> 60 != 15)
  {
    v183 = v181[1];
    if (v183 >> 60 != 15)
    {
      v184 = *v180;
      *v180 = *v181;
      v180[1] = v183;
      sub_1AD00412C(v184, v182);
      goto LABEL_151;
    }
    sub_1AD007EC0((uint64_t)v180);
  }
  *(_OWORD *)v180 = *(_OWORD *)v181;
LABEL_151:
  v185 = v32[22];
  *(_BYTE *)(a1 + v32[21]) = *(_BYTE *)(v64 + v32[21]);
  *(_BYTE *)(a1 + v185) = *(_BYTE *)(v64 + v185);
  *(_BYTE *)(a1 + v32[23]) = *(_BYTE *)(v64 + v32[23]);
  return a1;
}

uint64_t sub_1AD47BEA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD47BEAC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for CloudKitUserIdentity(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 76);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1AD47BF50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD47BF5C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for CloudKitUserIdentity(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 76);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1AD47BFFC()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for CloudKitUserIdentity(319);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, &qword_1EECDC6F0, (void (*)(uint64_t))type metadata accessor for CloudKitSharingToken);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1AD47C0DC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  uint64_t v72;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      v7 = a2[1];
      v8 = a2[2];
      *(_QWORD *)v4 = *a2;
      *(_QWORD *)(v4 + 8) = v7;
      *(_QWORD *)(v4 + 16) = v8;
      *(_OWORD *)(v4 + 24) = *(_OWORD *)(a2 + 3);
      v9 = a2[6];
      *(_QWORD *)(v4 + 40) = a2[5];
      *(_QWORD *)(v4 + 48) = v9;
      *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
      v10 = a2[10];
      *(_QWORD *)(v4 + 72) = a2[9];
      *(_QWORD *)(v4 + 80) = v10;
      v11 = a2[13];
      *(_OWORD *)(v4 + 88) = *(_OWORD *)(a2 + 11);
      *(_QWORD *)(v4 + 104) = v11;
      v12 = a2 + 14;
      v13 = a2[15];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v13 == 1)
      {
        *(_OWORD *)(v4 + 112) = *v12;
      }
      else
      {
        *(_QWORD *)(v4 + 112) = *(_QWORD *)v12;
        *(_QWORD *)(v4 + 120) = v13;
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(v4 + 128) = a2[16];
    }
    else
    {
      v15 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v15;
      *(_QWORD *)(a1 + 128) = a2[16];
      v16 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v16;
      v17 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v17;
      v18 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v18;
    }
    v19 = a3[5];
    v20 = (void *)(v4 + v19);
    v21 = (char *)a2 + v19;
    v22 = sub_1AD63AE2C();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v25 = a3[6];
    v26 = v4 + v25;
    v27 = (uint64_t)a2 + v25;
    v28 = *(uint64_t *)((char *)a2 + v25);
    if (v28)
    {
      v29 = *(_QWORD *)(v27 + 8);
      *(_QWORD *)v26 = v28;
      *(_QWORD *)(v26 + 8) = v29;
      v30 = (_OWORD *)(v27 + 16);
      v31 = *(_QWORD *)(v27 + 24);
      swift_retain();
      if (v31 == 1)
      {
        *(_OWORD *)(v26 + 16) = *v30;
      }
      else
      {
        *(_QWORD *)(v26 + 16) = *(_QWORD *)v30;
        *(_QWORD *)(v26 + 24) = v31;
        swift_bridgeObjectRetain();
      }
      v39 = *(_QWORD *)(v27 + 40);
      *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
      *(_QWORD *)(v26 + 40) = v39;
      v40 = (_OWORD *)(v27 + 48);
      v41 = *(_QWORD *)(v27 + 56);
      swift_retain();
      if (v41 == 1)
      {
        *(_OWORD *)(v26 + 48) = *v40;
      }
      else
      {
        *(_QWORD *)(v26 + 48) = *(_QWORD *)v40;
        *(_QWORD *)(v26 + 56) = v41;
        swift_bridgeObjectRetain();
      }
      v42 = *(_QWORD *)(v27 + 64);
      if (v42)
      {
        v43 = *(_QWORD *)(v27 + 72);
        v44 = *(_QWORD *)(v27 + 80);
        *(_QWORD *)(v26 + 64) = v42;
        *(_QWORD *)(v26 + 72) = v43;
        *(_QWORD *)(v26 + 80) = v44;
        *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
        v45 = *(_QWORD *)(v27 + 112);
        *(_QWORD *)(v26 + 104) = *(_QWORD *)(v27 + 104);
        *(_QWORD *)(v26 + 112) = v45;
        *(_OWORD *)(v26 + 120) = *(_OWORD *)(v27 + 120);
        v46 = *(_QWORD *)(v27 + 144);
        *(_QWORD *)(v26 + 136) = *(_QWORD *)(v27 + 136);
        *(_QWORD *)(v26 + 144) = v46;
        v47 = *(_QWORD *)(v27 + 168);
        *(_OWORD *)(v26 + 152) = *(_OWORD *)(v27 + 152);
        *(_QWORD *)(v26 + 168) = v47;
        v48 = (_OWORD *)(v27 + 176);
        v49 = *(_QWORD *)(v27 + 184);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v49 == 1)
        {
          *(_OWORD *)(v26 + 176) = *v48;
        }
        else
        {
          *(_QWORD *)(v26 + 176) = *(_QWORD *)v48;
          *(_QWORD *)(v26 + 184) = v49;
          swift_bridgeObjectRetain();
        }
        *(_QWORD *)(v26 + 192) = *(_QWORD *)(v27 + 192);
      }
      else
      {
        v50 = *(_OWORD *)(v27 + 176);
        *(_OWORD *)(v26 + 160) = *(_OWORD *)(v27 + 160);
        *(_OWORD *)(v26 + 176) = v50;
        *(_QWORD *)(v26 + 192) = *(_QWORD *)(v27 + 192);
        v51 = *(_OWORD *)(v27 + 112);
        *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
        *(_OWORD *)(v26 + 112) = v51;
        v52 = *(_OWORD *)(v27 + 144);
        *(_OWORD *)(v26 + 128) = *(_OWORD *)(v27 + 128);
        *(_OWORD *)(v26 + 144) = v52;
        v53 = *(_OWORD *)(v27 + 80);
        *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
        *(_OWORD *)(v26 + 80) = v53;
      }
      *(_BYTE *)(v26 + 200) = *(_BYTE *)(v27 + 200);
      v54 = (uint64_t *)(v27 + 208);
      v55 = *(_QWORD *)(v27 + 216);
      if (v55 >> 60 == 15)
      {
        *(_OWORD *)(v26 + 208) = *(_OWORD *)v54;
      }
      else
      {
        v56 = *v54;
        sub_1AD0040A0(*v54, *(_QWORD *)(v27 + 216));
        *(_QWORD *)(v26 + 208) = v56;
        *(_QWORD *)(v26 + 216) = v55;
      }
    }
    else
    {
      v32 = *(_OWORD *)(v27 + 176);
      *(_OWORD *)(v26 + 160) = *(_OWORD *)(v27 + 160);
      *(_OWORD *)(v26 + 176) = v32;
      v33 = *(_OWORD *)(v27 + 208);
      *(_OWORD *)(v26 + 192) = *(_OWORD *)(v27 + 192);
      *(_OWORD *)(v26 + 208) = v33;
      v34 = *(_OWORD *)(v27 + 112);
      *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
      *(_OWORD *)(v26 + 112) = v34;
      v35 = *(_OWORD *)(v27 + 144);
      *(_OWORD *)(v26 + 128) = *(_OWORD *)(v27 + 128);
      *(_OWORD *)(v26 + 144) = v35;
      v36 = *(_OWORD *)(v27 + 48);
      *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
      *(_OWORD *)(v26 + 48) = v36;
      v37 = *(_OWORD *)(v27 + 80);
      *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
      *(_OWORD *)(v26 + 80) = v37;
      v38 = *(_OWORD *)(v27 + 16);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v38;
    }
    v57 = a3[8];
    *(_QWORD *)(v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v58 = v4 + v57;
    v59 = (_OWORD *)((char *)a2 + v57);
    v60 = *(uint64_t *)((char *)a2 + v57 + 8);
    swift_bridgeObjectRetain();
    if (v60 >> 60 == 15)
    {
      *(_OWORD *)v58 = *v59;
    }
    else
    {
      v61 = *(_QWORD *)v59;
      sub_1AD0040A0(v61, v60);
      *(_QWORD *)v58 = v61;
      *(_QWORD *)(v58 + 8) = v60;
    }
    v62 = a3[9];
    v63 = v4 + v62;
    v64 = (uint64_t *)((char *)a2 + v62);
    v65 = v64[1];
    if (v65 >> 60 == 15)
    {
      *(_OWORD *)v63 = *(_OWORD *)v64;
    }
    else
    {
      v66 = *v64;
      sub_1AD0040A0(*v64, v64[1]);
      *(_QWORD *)v63 = v66;
      *(_QWORD *)(v63 + 8) = v65;
    }
    v67 = a3[11];
    *(_BYTE *)(v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *(_BYTE *)(v4 + v67) = *((_BYTE *)a2 + v67);
    v68 = a3[12];
    v69 = v4 + v68;
    v70 = (uint64_t *)((char *)a2 + v68);
    v71 = v70[1];
    if (v71 >> 60 == 15)
    {
      *(_OWORD *)v69 = *(_OWORD *)v70;
    }
    else
    {
      v72 = *v70;
      sub_1AD0040A0(*v70, v70[1]);
      *(_QWORD *)v69 = v72;
      *(_QWORD *)(v69 + 8) = v71;
    }
    *(_QWORD *)(v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  }
  return v4;
}

uint64_t sub_1AD47C5B4(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t result;
  uint64_t *v10;
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t v15;

  if (*a1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (a1[15] != 1)
      swift_bridgeObjectRelease();
  }
  v4 = (char *)a1 + a2[5];
  v5 = sub_1AD63AE2C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v7 = (_QWORD *)((char *)a1 + a2[6]);
  if (*v7)
  {
    swift_release();
    if (v7[3] != 1)
      swift_bridgeObjectRelease();
    swift_release();
    if (v7[7] != 1)
      swift_bridgeObjectRelease();
    if (v7[8])
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if (v7[23] != 1)
        swift_bridgeObjectRelease();
    }
    v8 = v7[27];
    if (v8 >> 60 != 15)
      sub_1AD00412C(v7[26], v8);
  }
  result = swift_bridgeObjectRelease();
  v10 = (_QWORD *)((char *)a1 + a2[8]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    result = sub_1AD00412C(*v10, v11);
  v12 = (_QWORD *)((char *)a1 + a2[9]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    result = sub_1AD00412C(*v12, v13);
  v14 = (_QWORD *)((char *)a1 + a2[12]);
  v15 = v14[1];
  if (v15 >> 60 != 15)
    return sub_1AD00412C(*v14, v15);
  return result;
}

uint64_t sub_1AD47C798(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unint64_t v69;
  uint64_t v70;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    v9 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v9;
    v10 = *(_QWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = v10;
    v11 = (_OWORD *)(a2 + 112);
    v12 = *(_QWORD *)(a2 + 120);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v12 == 1)
    {
      *(_OWORD *)(a1 + 112) = *v11;
    }
    else
    {
      *(_QWORD *)(a1 + 112) = *(_QWORD *)v11;
      *(_QWORD *)(a1 + 120) = v12;
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v14;
    v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
  }
  v17 = a3[5];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_1AD63AE2C();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v23 = a3[6];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)(a2 + v23);
  if (v26)
  {
    v27 = *(_QWORD *)(v25 + 8);
    *(_QWORD *)v24 = v26;
    *(_QWORD *)(v24 + 8) = v27;
    v28 = (_OWORD *)(v25 + 16);
    v29 = *(_QWORD *)(v25 + 24);
    swift_retain();
    if (v29 == 1)
    {
      *(_OWORD *)(v24 + 16) = *v28;
    }
    else
    {
      *(_QWORD *)(v24 + 16) = *(_QWORD *)v28;
      *(_QWORD *)(v24 + 24) = v29;
      swift_bridgeObjectRetain();
    }
    v37 = *(_QWORD *)(v25 + 40);
    *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
    *(_QWORD *)(v24 + 40) = v37;
    v38 = (_OWORD *)(v25 + 48);
    v39 = *(_QWORD *)(v25 + 56);
    swift_retain();
    if (v39 == 1)
    {
      *(_OWORD *)(v24 + 48) = *v38;
    }
    else
    {
      *(_QWORD *)(v24 + 48) = *(_QWORD *)v38;
      *(_QWORD *)(v24 + 56) = v39;
      swift_bridgeObjectRetain();
    }
    v40 = *(_QWORD *)(v25 + 64);
    if (v40)
    {
      v41 = *(_QWORD *)(v25 + 72);
      v42 = *(_QWORD *)(v25 + 80);
      *(_QWORD *)(v24 + 64) = v40;
      *(_QWORD *)(v24 + 72) = v41;
      *(_QWORD *)(v24 + 80) = v42;
      *(_OWORD *)(v24 + 88) = *(_OWORD *)(v25 + 88);
      v43 = *(_QWORD *)(v25 + 112);
      *(_QWORD *)(v24 + 104) = *(_QWORD *)(v25 + 104);
      *(_QWORD *)(v24 + 112) = v43;
      *(_OWORD *)(v24 + 120) = *(_OWORD *)(v25 + 120);
      v44 = *(_QWORD *)(v25 + 144);
      *(_QWORD *)(v24 + 136) = *(_QWORD *)(v25 + 136);
      *(_QWORD *)(v24 + 144) = v44;
      v45 = *(_QWORD *)(v25 + 168);
      *(_OWORD *)(v24 + 152) = *(_OWORD *)(v25 + 152);
      *(_QWORD *)(v24 + 168) = v45;
      v46 = (_OWORD *)(v25 + 176);
      v47 = *(_QWORD *)(v25 + 184);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v47 == 1)
      {
        *(_OWORD *)(v24 + 176) = *v46;
      }
      else
      {
        *(_QWORD *)(v24 + 176) = *(_QWORD *)v46;
        *(_QWORD *)(v24 + 184) = v47;
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(v24 + 192) = *(_QWORD *)(v25 + 192);
    }
    else
    {
      v48 = *(_OWORD *)(v25 + 176);
      *(_OWORD *)(v24 + 160) = *(_OWORD *)(v25 + 160);
      *(_OWORD *)(v24 + 176) = v48;
      *(_QWORD *)(v24 + 192) = *(_QWORD *)(v25 + 192);
      v49 = *(_OWORD *)(v25 + 112);
      *(_OWORD *)(v24 + 96) = *(_OWORD *)(v25 + 96);
      *(_OWORD *)(v24 + 112) = v49;
      v50 = *(_OWORD *)(v25 + 144);
      *(_OWORD *)(v24 + 128) = *(_OWORD *)(v25 + 128);
      *(_OWORD *)(v24 + 144) = v50;
      v51 = *(_OWORD *)(v25 + 80);
      *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
      *(_OWORD *)(v24 + 80) = v51;
    }
    *(_BYTE *)(v24 + 200) = *(_BYTE *)(v25 + 200);
    v52 = (uint64_t *)(v25 + 208);
    v53 = *(_QWORD *)(v25 + 216);
    if (v53 >> 60 == 15)
    {
      *(_OWORD *)(v24 + 208) = *(_OWORD *)v52;
    }
    else
    {
      v54 = *v52;
      sub_1AD0040A0(*v52, *(_QWORD *)(v25 + 216));
      *(_QWORD *)(v24 + 208) = v54;
      *(_QWORD *)(v24 + 216) = v53;
    }
  }
  else
  {
    v30 = *(_OWORD *)(v25 + 176);
    *(_OWORD *)(v24 + 160) = *(_OWORD *)(v25 + 160);
    *(_OWORD *)(v24 + 176) = v30;
    v31 = *(_OWORD *)(v25 + 208);
    *(_OWORD *)(v24 + 192) = *(_OWORD *)(v25 + 192);
    *(_OWORD *)(v24 + 208) = v31;
    v32 = *(_OWORD *)(v25 + 112);
    *(_OWORD *)(v24 + 96) = *(_OWORD *)(v25 + 96);
    *(_OWORD *)(v24 + 112) = v32;
    v33 = *(_OWORD *)(v25 + 144);
    *(_OWORD *)(v24 + 128) = *(_OWORD *)(v25 + 128);
    *(_OWORD *)(v24 + 144) = v33;
    v34 = *(_OWORD *)(v25 + 48);
    *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
    *(_OWORD *)(v24 + 48) = v34;
    v35 = *(_OWORD *)(v25 + 80);
    *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
    *(_OWORD *)(v24 + 80) = v35;
    v36 = *(_OWORD *)(v25 + 16);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v36;
  }
  v55 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v56 = a1 + v55;
  v57 = (_OWORD *)(a2 + v55);
  v58 = *(_QWORD *)(a2 + v55 + 8);
  swift_bridgeObjectRetain();
  if (v58 >> 60 == 15)
  {
    *(_OWORD *)v56 = *v57;
  }
  else
  {
    v59 = *(_QWORD *)v57;
    sub_1AD0040A0(v59, v58);
    *(_QWORD *)v56 = v59;
    *(_QWORD *)(v56 + 8) = v58;
  }
  v60 = a3[9];
  v61 = a1 + v60;
  v62 = (uint64_t *)(a2 + v60);
  v63 = v62[1];
  if (v63 >> 60 == 15)
  {
    *(_OWORD *)v61 = *(_OWORD *)v62;
  }
  else
  {
    v64 = *v62;
    sub_1AD0040A0(*v62, v62[1]);
    *(_QWORD *)v61 = v64;
    *(_QWORD *)(v61 + 8) = v63;
  }
  v65 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v65) = *(_BYTE *)(a2 + v65);
  v66 = a3[12];
  v67 = a1 + v66;
  v68 = (uint64_t *)(a2 + v66);
  v69 = v68[1];
  if (v69 >> 60 == 15)
  {
    *(_OWORD *)v67 = *(_OWORD *)v68;
  }
  else
  {
    v70 = *v68;
    sub_1AD0040A0(*v68, v68[1]);
    *(_QWORD *)v67 = v70;
    *(_QWORD *)(v67 + 8) = v69;
  }
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1AD47CC44(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  uint64_t v77;
  _OWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  _OWORD *v100;
  unint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t *v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v138;
  uint64_t v139;
  int *v140;
  int *v141;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (!v6)
    {
      sub_1AD311474(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v17 = *((_OWORD *)a2 + 4);
      v19 = *((_OWORD *)a2 + 1);
      v18 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v17;
      *(_OWORD *)(a1 + 16) = v19;
      *(_OWORD *)(a1 + 32) = v18;
      v21 = *((_OWORD *)a2 + 6);
      v20 = *((_OWORD *)a2 + 7);
      v22 = *((_OWORD *)a2 + 5);
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_OWORD *)(a1 + 96) = v21;
      *(_OWORD *)(a1 + 112) = v20;
      *(_OWORD *)(a1 + 80) = v22;
      goto LABEL_17;
    }
    v7 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    swift_retain();
    swift_release();
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    swift_retain();
    swift_release();
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v9 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v9;
    swift_retain();
    swift_release();
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = a2[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v10 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v10;
    swift_retain();
    swift_release();
    v11 = a2[15];
    if (*(_QWORD *)(a1 + 120) != 1)
    {
      if (v11 != 1)
      {
        *(_QWORD *)(a1 + 112) = a2[14];
        *(_QWORD *)(a1 + 120) = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      sub_1AD009758(a1 + 112, &qword_1ED2E3198);
      goto LABEL_13;
    }
    if (v11 == 1)
    {
LABEL_13:
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  if (!v6)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v23 = *((_OWORD *)a2 + 1);
    v24 = *((_OWORD *)a2 + 2);
    v25 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v25;
    *(_OWORD *)(a1 + 16) = v23;
    *(_OWORD *)(a1 + 32) = v24;
    v26 = *((_OWORD *)a2 + 5);
    v27 = *((_OWORD *)a2 + 6);
    v28 = *((_OWORD *)a2 + 7);
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_OWORD *)(a1 + 96) = v27;
    *(_OWORD *)(a1 + 112) = v28;
    *(_OWORD *)(a1 + 80) = v26;
    goto LABEL_17;
  }
  v12 = a2[1];
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  v13 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  v14 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_QWORD *)(a1 + 88) = a2[11];
  v15 = a2[13];
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = v15;
  v16 = a2[15];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v16 != 1)
  {
LABEL_10:
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = a2[15];
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
LABEL_16:
  *(_QWORD *)(a1 + 128) = a2[16];
LABEL_17:
  v29 = a3[5];
  v30 = (void *)(a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = sub_1AD63AE2C();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
LABEL_22:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
LABEL_23:
  v38 = a3[6];
  v39 = a1 + v38;
  v40 = (uint64_t)a2 + v38;
  v41 = *(_QWORD *)(a1 + v38);
  v42 = *(uint64_t *)((char *)a2 + v38);
  if (!v41)
  {
    if (!v42)
    {
      v57 = *(_OWORD *)(v40 + 16);
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *(_OWORD *)(v39 + 16) = v57;
      v58 = *(_OWORD *)(v40 + 32);
      v59 = *(_OWORD *)(v40 + 48);
      v60 = *(_OWORD *)(v40 + 80);
      *(_OWORD *)(v39 + 64) = *(_OWORD *)(v40 + 64);
      *(_OWORD *)(v39 + 80) = v60;
      *(_OWORD *)(v39 + 32) = v58;
      *(_OWORD *)(v39 + 48) = v59;
      v61 = *(_OWORD *)(v40 + 96);
      v62 = *(_OWORD *)(v40 + 112);
      v63 = *(_OWORD *)(v40 + 144);
      *(_OWORD *)(v39 + 128) = *(_OWORD *)(v40 + 128);
      *(_OWORD *)(v39 + 144) = v63;
      *(_OWORD *)(v39 + 96) = v61;
      *(_OWORD *)(v39 + 112) = v62;
      v64 = *(_OWORD *)(v40 + 160);
      v65 = *(_OWORD *)(v40 + 176);
      v66 = *(_OWORD *)(v40 + 208);
      *(_OWORD *)(v39 + 192) = *(_OWORD *)(v40 + 192);
      *(_OWORD *)(v39 + 208) = v66;
      *(_OWORD *)(v39 + 160) = v64;
      *(_OWORD *)(v39 + 176) = v65;
      goto LABEL_83;
    }
    v45 = *(_QWORD *)(v40 + 8);
    *(_QWORD *)v39 = v42;
    *(_QWORD *)(v39 + 8) = v45;
    v46 = *(_QWORD *)(v40 + 24);
    swift_retain();
    if (v46 == 1)
    {
      *(_OWORD *)(v39 + 16) = *(_OWORD *)(v40 + 16);
    }
    else
    {
      *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
      *(_QWORD *)(v39 + 24) = *(_QWORD *)(v40 + 24);
      swift_bridgeObjectRetain();
    }
    v67 = *(_QWORD *)(v40 + 40);
    *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
    *(_QWORD *)(v39 + 40) = v67;
    v68 = *(_QWORD *)(v40 + 56);
    swift_retain();
    v140 = a3;
    if (v68 == 1)
    {
      *(_OWORD *)(v39 + 48) = *(_OWORD *)(v40 + 48);
    }
    else
    {
      *(_QWORD *)(v39 + 48) = *(_QWORD *)(v40 + 48);
      *(_QWORD *)(v39 + 56) = *(_QWORD *)(v40 + 56);
      swift_bridgeObjectRetain();
    }
    v69 = *(_QWORD *)(v40 + 64);
    if (v69)
    {
      v70 = *(_QWORD *)(v40 + 72);
      *(_QWORD *)(v39 + 64) = v69;
      *(_QWORD *)(v39 + 72) = v70;
      *(_QWORD *)(v39 + 80) = *(_QWORD *)(v40 + 80);
      *(_QWORD *)(v39 + 88) = *(_QWORD *)(v40 + 88);
      v71 = *(_QWORD *)(v40 + 104);
      *(_QWORD *)(v39 + 96) = *(_QWORD *)(v40 + 96);
      *(_QWORD *)(v39 + 104) = v71;
      *(_QWORD *)(v39 + 112) = *(_QWORD *)(v40 + 112);
      *(_QWORD *)(v39 + 120) = *(_QWORD *)(v40 + 120);
      v72 = *(_QWORD *)(v40 + 136);
      *(_QWORD *)(v39 + 128) = *(_QWORD *)(v40 + 128);
      *(_QWORD *)(v39 + 136) = v72;
      *(_QWORD *)(v39 + 144) = *(_QWORD *)(v40 + 144);
      *(_QWORD *)(v39 + 152) = *(_QWORD *)(v40 + 152);
      v73 = *(_QWORD *)(v40 + 168);
      *(_QWORD *)(v39 + 160) = *(_QWORD *)(v40 + 160);
      *(_QWORD *)(v39 + 168) = v73;
      v138 = *(_QWORD *)(v40 + 184);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v138 == 1)
      {
        *(_OWORD *)(v39 + 176) = *(_OWORD *)(v40 + 176);
      }
      else
      {
        *(_QWORD *)(v39 + 176) = *(_QWORD *)(v40 + 176);
        *(_QWORD *)(v39 + 184) = *(_QWORD *)(v40 + 184);
        swift_bridgeObjectRetain();
      }
      a3 = v140;
      *(_QWORD *)(v39 + 192) = *(_QWORD *)(v40 + 192);
    }
    else
    {
      *(_OWORD *)(v39 + 64) = *(_OWORD *)(v40 + 64);
      v94 = *(_OWORD *)(v40 + 80);
      v95 = *(_OWORD *)(v40 + 96);
      v96 = *(_OWORD *)(v40 + 128);
      *(_OWORD *)(v39 + 112) = *(_OWORD *)(v40 + 112);
      *(_OWORD *)(v39 + 128) = v96;
      *(_OWORD *)(v39 + 80) = v94;
      *(_OWORD *)(v39 + 96) = v95;
      v97 = *(_OWORD *)(v40 + 144);
      v98 = *(_OWORD *)(v40 + 160);
      v99 = *(_OWORD *)(v40 + 176);
      *(_QWORD *)(v39 + 192) = *(_QWORD *)(v40 + 192);
      *(_OWORD *)(v39 + 160) = v98;
      *(_OWORD *)(v39 + 176) = v99;
      *(_OWORD *)(v39 + 144) = v97;
    }
    *(_BYTE *)(v39 + 200) = *(_BYTE *)(v40 + 200);
    v100 = (_OWORD *)(v40 + 208);
    v101 = *(_QWORD *)(v40 + 216);
    if (v101 >> 60 == 15)
    {
      *(_OWORD *)(v39 + 208) = *v100;
      goto LABEL_83;
    }
    v102 = *(_QWORD *)v100;
    goto LABEL_78;
  }
  if (!v42)
  {
    sub_1AD3114A8((_QWORD *)v39);
    v47 = *(_OWORD *)(v40 + 16);
    *(_OWORD *)v39 = *(_OWORD *)v40;
    *(_OWORD *)(v39 + 16) = v47;
    v48 = *(_OWORD *)(v40 + 80);
    v50 = *(_OWORD *)(v40 + 32);
    v49 = *(_OWORD *)(v40 + 48);
    *(_OWORD *)(v39 + 64) = *(_OWORD *)(v40 + 64);
    *(_OWORD *)(v39 + 80) = v48;
    *(_OWORD *)(v39 + 32) = v50;
    *(_OWORD *)(v39 + 48) = v49;
    v51 = *(_OWORD *)(v40 + 144);
    v53 = *(_OWORD *)(v40 + 96);
    v52 = *(_OWORD *)(v40 + 112);
    *(_OWORD *)(v39 + 128) = *(_OWORD *)(v40 + 128);
    *(_OWORD *)(v39 + 144) = v51;
    *(_OWORD *)(v39 + 96) = v53;
    *(_OWORD *)(v39 + 112) = v52;
    v54 = *(_OWORD *)(v40 + 208);
    v56 = *(_OWORD *)(v40 + 160);
    v55 = *(_OWORD *)(v40 + 176);
    *(_OWORD *)(v39 + 192) = *(_OWORD *)(v40 + 192);
    *(_OWORD *)(v39 + 208) = v54;
    *(_OWORD *)(v39 + 160) = v56;
    *(_OWORD *)(v39 + 176) = v55;
    goto LABEL_83;
  }
  v43 = *(_QWORD *)(v40 + 8);
  *(_QWORD *)v39 = v42;
  *(_QWORD *)(v39 + 8) = v43;
  swift_retain();
  swift_release();
  v44 = *(_QWORD *)(v40 + 24);
  if (*(_QWORD *)(v39 + 24) == 1)
  {
    if (v44 != 1)
    {
      *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
      *(_QWORD *)(v39 + 24) = *(_QWORD *)(v40 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    goto LABEL_34;
  }
  if (v44 == 1)
  {
    sub_1AD009758(v39 + 16, &qword_1ED2E3198);
LABEL_34:
    *(_OWORD *)(v39 + 16) = *(_OWORD *)(v40 + 16);
    goto LABEL_45;
  }
  *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v39 + 24) = *(_QWORD *)(v40 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_45:
  v74 = *(_QWORD *)(v40 + 40);
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  *(_QWORD *)(v39 + 40) = v74;
  swift_retain();
  swift_release();
  v75 = *(_QWORD *)(v40 + 56);
  if (*(_QWORD *)(v39 + 56) == 1)
  {
    if (v75 != 1)
    {
      *(_QWORD *)(v39 + 48) = *(_QWORD *)(v40 + 48);
      *(_QWORD *)(v39 + 56) = *(_QWORD *)(v40 + 56);
      swift_bridgeObjectRetain();
      goto LABEL_52;
    }
    goto LABEL_50;
  }
  if (v75 == 1)
  {
    sub_1AD009758(v39 + 48, &qword_1ED2E3198);
LABEL_50:
    *(_OWORD *)(v39 + 48) = *(_OWORD *)(v40 + 48);
    goto LABEL_52;
  }
  *(_QWORD *)(v39 + 48) = *(_QWORD *)(v40 + 48);
  *(_QWORD *)(v39 + 56) = *(_QWORD *)(v40 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_52:
  v76 = (_OWORD *)(v39 + 64);
  v78 = (_OWORD *)(v40 + 64);
  v77 = *(_QWORD *)(v40 + 64);
  if (*(_QWORD *)(v39 + 64))
  {
    if (!v77)
    {
      sub_1AD311474(v39 + 64);
      *v76 = *v78;
      v88 = *(_OWORD *)(v40 + 128);
      v90 = *(_OWORD *)(v40 + 80);
      v89 = *(_OWORD *)(v40 + 96);
      *(_OWORD *)(v39 + 112) = *(_OWORD *)(v40 + 112);
      *(_OWORD *)(v39 + 128) = v88;
      *(_OWORD *)(v39 + 80) = v90;
      *(_OWORD *)(v39 + 96) = v89;
      v92 = *(_OWORD *)(v40 + 160);
      v91 = *(_OWORD *)(v40 + 176);
      v93 = *(_OWORD *)(v40 + 144);
      *(_QWORD *)(v39 + 192) = *(_QWORD *)(v40 + 192);
      *(_OWORD *)(v39 + 160) = v92;
      *(_OWORD *)(v39 + 176) = v91;
      *(_OWORD *)(v39 + 144) = v93;
      goto LABEL_75;
    }
    v79 = *(_QWORD *)(v40 + 72);
    *(_QWORD *)(v39 + 64) = v77;
    *(_QWORD *)(v39 + 72) = v79;
    swift_retain();
    swift_release();
    *(_QWORD *)(v39 + 80) = *(_QWORD *)(v40 + 80);
    *(_QWORD *)(v39 + 88) = *(_QWORD *)(v40 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v80 = *(_QWORD *)(v40 + 104);
    *(_QWORD *)(v39 + 96) = *(_QWORD *)(v40 + 96);
    *(_QWORD *)(v39 + 104) = v80;
    swift_retain();
    swift_release();
    *(_QWORD *)(v39 + 112) = *(_QWORD *)(v40 + 112);
    *(_QWORD *)(v39 + 120) = *(_QWORD *)(v40 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v81 = *(_QWORD *)(v40 + 136);
    *(_QWORD *)(v39 + 128) = *(_QWORD *)(v40 + 128);
    *(_QWORD *)(v39 + 136) = v81;
    swift_retain();
    swift_release();
    *(_QWORD *)(v39 + 144) = *(_QWORD *)(v40 + 144);
    *(_QWORD *)(v39 + 152) = *(_QWORD *)(v40 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v82 = *(_QWORD *)(v40 + 168);
    *(_QWORD *)(v39 + 160) = *(_QWORD *)(v40 + 160);
    *(_QWORD *)(v39 + 168) = v82;
    swift_retain();
    swift_release();
    v83 = *(_QWORD *)(v40 + 184);
    if (*(_QWORD *)(v39 + 184) == 1)
    {
      if (v83 != 1)
      {
        *(_QWORD *)(v39 + 176) = *(_QWORD *)(v40 + 176);
        *(_QWORD *)(v39 + 184) = *(_QWORD *)(v40 + 184);
        swift_bridgeObjectRetain();
        goto LABEL_74;
      }
    }
    else
    {
      if (v83 != 1)
      {
        *(_QWORD *)(v39 + 176) = *(_QWORD *)(v40 + 176);
        *(_QWORD *)(v39 + 184) = *(_QWORD *)(v40 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_74;
      }
      sub_1AD009758(v39 + 176, &qword_1ED2E3198);
    }
    *(_OWORD *)(v39 + 176) = *(_OWORD *)(v40 + 176);
    goto LABEL_74;
  }
  if (!v77)
  {
    *v76 = *v78;
    v103 = *(_OWORD *)(v40 + 80);
    v104 = *(_OWORD *)(v40 + 96);
    v105 = *(_OWORD *)(v40 + 128);
    *(_OWORD *)(v39 + 112) = *(_OWORD *)(v40 + 112);
    *(_OWORD *)(v39 + 128) = v105;
    *(_OWORD *)(v39 + 80) = v103;
    *(_OWORD *)(v39 + 96) = v104;
    v106 = *(_OWORD *)(v40 + 144);
    v107 = *(_OWORD *)(v40 + 160);
    v108 = *(_OWORD *)(v40 + 176);
    *(_QWORD *)(v39 + 192) = *(_QWORD *)(v40 + 192);
    *(_OWORD *)(v39 + 160) = v107;
    *(_OWORD *)(v39 + 176) = v108;
    *(_OWORD *)(v39 + 144) = v106;
    goto LABEL_75;
  }
  v141 = a3;
  v84 = *(_QWORD *)(v40 + 72);
  *(_QWORD *)(v39 + 64) = v77;
  *(_QWORD *)(v39 + 72) = v84;
  *(_QWORD *)(v39 + 80) = *(_QWORD *)(v40 + 80);
  *(_QWORD *)(v39 + 88) = *(_QWORD *)(v40 + 88);
  v85 = *(_QWORD *)(v40 + 104);
  *(_QWORD *)(v39 + 96) = *(_QWORD *)(v40 + 96);
  *(_QWORD *)(v39 + 104) = v85;
  *(_QWORD *)(v39 + 112) = *(_QWORD *)(v40 + 112);
  *(_QWORD *)(v39 + 120) = *(_QWORD *)(v40 + 120);
  v86 = *(_QWORD *)(v40 + 136);
  *(_QWORD *)(v39 + 128) = *(_QWORD *)(v40 + 128);
  *(_QWORD *)(v39 + 136) = v86;
  *(_QWORD *)(v39 + 144) = *(_QWORD *)(v40 + 144);
  *(_QWORD *)(v39 + 152) = *(_QWORD *)(v40 + 152);
  v87 = *(_QWORD *)(v40 + 168);
  *(_QWORD *)(v39 + 160) = *(_QWORD *)(v40 + 160);
  *(_QWORD *)(v39 + 168) = v87;
  v139 = *(_QWORD *)(v40 + 184);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v139 == 1)
  {
    *(_OWORD *)(v39 + 176) = *(_OWORD *)(v40 + 176);
  }
  else
  {
    *(_QWORD *)(v39 + 176) = *(_QWORD *)(v40 + 176);
    *(_QWORD *)(v39 + 184) = *(_QWORD *)(v40 + 184);
    swift_bridgeObjectRetain();
  }
  a3 = v141;
LABEL_74:
  *(_QWORD *)(v39 + 192) = *(_QWORD *)(v40 + 192);
LABEL_75:
  *(_BYTE *)(v39 + 200) = *(_BYTE *)(v40 + 200);
  v109 = (uint64_t *)(v40 + 208);
  v101 = *(_QWORD *)(v40 + 216);
  if (*(_QWORD *)(v39 + 216) >> 60 == 15)
  {
    if (v101 >> 60 != 15)
    {
      v102 = *v109;
LABEL_78:
      sub_1AD0040A0(v102, v101);
      *(_QWORD *)(v39 + 208) = v102;
      *(_QWORD *)(v39 + 216) = v101;
      goto LABEL_83;
    }
    goto LABEL_81;
  }
  if (v101 >> 60 == 15)
  {
    sub_1AD007EC0(v39 + 208);
LABEL_81:
    *(_OWORD *)(v39 + 208) = *(_OWORD *)v109;
    goto LABEL_83;
  }
  v110 = *v109;
  sub_1AD0040A0(*v109, *(_QWORD *)(v40 + 216));
  v111 = *(_QWORD *)(v39 + 208);
  v112 = *(_QWORD *)(v39 + 216);
  *(_QWORD *)(v39 + 208) = v110;
  *(_QWORD *)(v39 + 216) = v101;
  sub_1AD00412C(v111, v112);
LABEL_83:
  *(_QWORD *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v113 = a3[8];
  v114 = (uint64_t *)(a1 + v113);
  v115 = (uint64_t *)((char *)a2 + v113);
  v116 = *(uint64_t *)((char *)a2 + v113 + 8);
  if (*(_QWORD *)(a1 + v113 + 8) >> 60 == 15)
  {
    if (v116 >> 60 != 15)
    {
      v117 = *v115;
      sub_1AD0040A0(*v115, v116);
      *v114 = v117;
      v114[1] = v116;
      goto LABEL_90;
    }
    goto LABEL_88;
  }
  if (v116 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v114);
LABEL_88:
    *(_OWORD *)v114 = *(_OWORD *)v115;
    goto LABEL_90;
  }
  v118 = *v115;
  sub_1AD0040A0(*v115, v116);
  v119 = *v114;
  v120 = v114[1];
  *v114 = v118;
  v114[1] = v116;
  sub_1AD00412C(v119, v120);
LABEL_90:
  v121 = a3[9];
  v122 = (uint64_t *)(a1 + v121);
  v123 = (uint64_t *)((char *)a2 + v121);
  v124 = *(uint64_t *)((char *)a2 + v121 + 8);
  if (*(_QWORD *)(a1 + v121 + 8) >> 60 == 15)
  {
    if (v124 >> 60 != 15)
    {
      v125 = *v123;
      sub_1AD0040A0(*v123, v124);
      *v122 = v125;
      v122[1] = v124;
      goto LABEL_97;
    }
    goto LABEL_95;
  }
  if (v124 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v122);
LABEL_95:
    *(_OWORD *)v122 = *(_OWORD *)v123;
    goto LABEL_97;
  }
  v126 = *v123;
  sub_1AD0040A0(*v123, v124);
  v127 = *v122;
  v128 = v122[1];
  *v122 = v126;
  v122[1] = v124;
  sub_1AD00412C(v127, v128);
LABEL_97:
  *(_BYTE *)(a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v129 = a3[12];
  v130 = (uint64_t *)(a1 + v129);
  v131 = (uint64_t *)((char *)a2 + v129);
  v132 = *(uint64_t *)((char *)a2 + v129 + 8);
  if (*(_QWORD *)(a1 + v129 + 8) >> 60 != 15)
  {
    if (v132 >> 60 != 15)
    {
      v134 = *v131;
      sub_1AD0040A0(*v131, v132);
      v135 = *v130;
      v136 = v130[1];
      *v130 = v134;
      v130[1] = v132;
      sub_1AD00412C(v135, v136);
      goto LABEL_104;
    }
    sub_1AD007EC0((uint64_t)v130);
    goto LABEL_102;
  }
  if (v132 >> 60 == 15)
  {
LABEL_102:
    *(_OWORD *)v130 = *(_OWORD *)v131;
    goto LABEL_104;
  }
  v133 = *v131;
  sub_1AD0040A0(*v131, v132);
  *v130 = v133;
  v130[1] = v132;
LABEL_104:
  *(_QWORD *)(a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  return a1;
}

uint64_t sub_1AD47D834(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 16);
  v10 = a3[5];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v13 = sub_1AD63AE2C();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[6];
  v17 = a3[7];
  v18 = (_OWORD *)(a1 + v16);
  v19 = (_OWORD *)(a2 + v16);
  v20 = v19[5];
  v18[4] = v19[4];
  v18[5] = v20;
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  v22 = v19[9];
  v18[8] = v19[8];
  v18[9] = v22;
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  v24 = v19[13];
  v18[12] = v19[12];
  v18[13] = v24;
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  v26 = v19[1];
  *v18 = *v19;
  v18[1] = v26;
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v27 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  v28 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  return a1;
}

uint64_t sub_1AD47D9A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;

  if (!*(_QWORD *)a1)
    goto LABEL_8;
  if (!*(_QWORD *)a2)
  {
    sub_1AD311474(a1);
LABEL_8:
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    goto LABEL_11;
  }
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  v10 = (_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 120) != 1)
  {
    v11 = *(_QWORD *)(a2 + 120);
    if (v11 != 1)
    {
      *(_QWORD *)(a1 + 112) = *v10;
      *(_QWORD *)(a1 + 120) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1AD009758(a1 + 112, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)v10;
LABEL_10:
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
LABEL_11:
  v16 = a3[5];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = sub_1AD63AE2C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_16:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_17:
  v25 = a3[6];
  v26 = a1 + v25;
  v27 = a2 + v25;
  if (!*(_QWORD *)(a1 + v25))
  {
LABEL_24:
    v31 = *(_OWORD *)(v27 + 176);
    *(_OWORD *)(v26 + 160) = *(_OWORD *)(v27 + 160);
    *(_OWORD *)(v26 + 176) = v31;
    v32 = *(_OWORD *)(v27 + 208);
    *(_OWORD *)(v26 + 192) = *(_OWORD *)(v27 + 192);
    *(_OWORD *)(v26 + 208) = v32;
    v33 = *(_OWORD *)(v27 + 112);
    *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
    *(_OWORD *)(v26 + 112) = v33;
    v34 = *(_OWORD *)(v27 + 144);
    *(_OWORD *)(v26 + 128) = *(_OWORD *)(v27 + 128);
    *(_OWORD *)(v26 + 144) = v34;
    v35 = *(_OWORD *)(v27 + 48);
    *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
    *(_OWORD *)(v26 + 48) = v35;
    v36 = *(_OWORD *)(v27 + 80);
    *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
    *(_OWORD *)(v26 + 80) = v36;
    v37 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v37;
    goto LABEL_47;
  }
  if (!*(_QWORD *)v27)
  {
    sub_1AD3114A8((_QWORD *)v26);
    goto LABEL_24;
  }
  v28 = *(_QWORD *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_QWORD *)(v26 + 8) = v28;
  swift_release();
  v29 = (_OWORD *)(v27 + 16);
  if (*(_QWORD *)(v26 + 24) == 1)
  {
LABEL_22:
    *(_OWORD *)(v26 + 16) = *v29;
    goto LABEL_27;
  }
  v30 = *(_QWORD *)(v27 + 24);
  if (v30 == 1)
  {
    sub_1AD009758(v26 + 16, &qword_1ED2E3198);
    goto LABEL_22;
  }
  *(_QWORD *)(v26 + 16) = *(_QWORD *)v29;
  *(_QWORD *)(v26 + 24) = v30;
  swift_bridgeObjectRelease();
LABEL_27:
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  swift_release();
  v38 = (_OWORD *)(v27 + 48);
  if (*(_QWORD *)(v26 + 56) == 1)
  {
LABEL_30:
    *(_OWORD *)(v26 + 48) = *v38;
    goto LABEL_32;
  }
  v39 = *(_QWORD *)(v27 + 56);
  if (v39 == 1)
  {
    sub_1AD009758(v26 + 48, &qword_1ED2E3198);
    goto LABEL_30;
  }
  *(_QWORD *)(v26 + 48) = *(_QWORD *)v38;
  *(_QWORD *)(v26 + 56) = v39;
  swift_bridgeObjectRelease();
LABEL_32:
  v40 = *(_QWORD *)(v27 + 64);
  if (!*(_QWORD *)(v26 + 64))
  {
LABEL_39:
    v47 = *(_OWORD *)(v27 + 176);
    *(_OWORD *)(v26 + 160) = *(_OWORD *)(v27 + 160);
    *(_OWORD *)(v26 + 176) = v47;
    *(_QWORD *)(v26 + 192) = *(_QWORD *)(v27 + 192);
    v48 = *(_OWORD *)(v27 + 112);
    *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
    *(_OWORD *)(v26 + 112) = v48;
    v49 = *(_OWORD *)(v27 + 144);
    *(_OWORD *)(v26 + 128) = *(_OWORD *)(v27 + 128);
    *(_OWORD *)(v26 + 144) = v49;
    v50 = *(_OWORD *)(v27 + 80);
    *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
    *(_OWORD *)(v26 + 80) = v50;
    goto LABEL_42;
  }
  if (!v40)
  {
    sub_1AD311474(v26 + 64);
    goto LABEL_39;
  }
  v41 = *(_QWORD *)(v27 + 72);
  *(_QWORD *)(v26 + 64) = v40;
  *(_QWORD *)(v26 + 72) = v41;
  swift_release();
  v42 = *(_QWORD *)(v27 + 88);
  *(_QWORD *)(v26 + 80) = *(_QWORD *)(v27 + 80);
  *(_QWORD *)(v26 + 88) = v42;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
  swift_release();
  v43 = *(_QWORD *)(v27 + 120);
  *(_QWORD *)(v26 + 112) = *(_QWORD *)(v27 + 112);
  *(_QWORD *)(v26 + 120) = v43;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v26 + 128) = *(_OWORD *)(v27 + 128);
  swift_release();
  v44 = *(_QWORD *)(v27 + 152);
  *(_QWORD *)(v26 + 144) = *(_QWORD *)(v27 + 144);
  *(_QWORD *)(v26 + 152) = v44;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v26 + 160) = *(_OWORD *)(v27 + 160);
  swift_release();
  v45 = (_QWORD *)(v27 + 176);
  if (*(_QWORD *)(v26 + 184) != 1)
  {
    v46 = *(_QWORD *)(v27 + 184);
    if (v46 != 1)
    {
      *(_QWORD *)(v26 + 176) = *v45;
      *(_QWORD *)(v26 + 184) = v46;
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    sub_1AD009758(v26 + 176, &qword_1ED2E3198);
  }
  *(_OWORD *)(v26 + 176) = *(_OWORD *)v45;
LABEL_41:
  *(_QWORD *)(v26 + 192) = *(_QWORD *)(v27 + 192);
LABEL_42:
  *(_BYTE *)(v26 + 200) = *(_BYTE *)(v27 + 200);
  v51 = (_OWORD *)(v27 + 208);
  v52 = *(_QWORD *)(v26 + 216);
  if (v52 >> 60 == 15)
  {
LABEL_45:
    *(_OWORD *)(v26 + 208) = *v51;
    goto LABEL_47;
  }
  v53 = *(_QWORD *)(v27 + 216);
  if (v53 >> 60 == 15)
  {
    sub_1AD007EC0(v26 + 208);
    goto LABEL_45;
  }
  v54 = *(_QWORD *)(v26 + 208);
  *(_QWORD *)(v26 + 208) = *(_QWORD *)v51;
  *(_QWORD *)(v26 + 216) = v53;
  sub_1AD00412C(v54, v52);
LABEL_47:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v55 = a3[8];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = *(_QWORD *)(a1 + v55 + 8);
  if (v58 >> 60 == 15)
  {
LABEL_50:
    *(_OWORD *)v56 = *(_OWORD *)v57;
    goto LABEL_52;
  }
  v59 = *(_QWORD *)(v57 + 8);
  if (v59 >> 60 == 15)
  {
    sub_1AD007EC0(v56);
    goto LABEL_50;
  }
  v60 = *(_QWORD *)v56;
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_QWORD *)(v56 + 8) = v59;
  sub_1AD00412C(v60, v58);
LABEL_52:
  v61 = a3[9];
  v62 = a1 + v61;
  v63 = a2 + v61;
  v64 = *(_QWORD *)(a1 + v61 + 8);
  if (v64 >> 60 == 15)
  {
LABEL_55:
    *(_OWORD *)v62 = *(_OWORD *)v63;
    goto LABEL_57;
  }
  v65 = *(_QWORD *)(v63 + 8);
  if (v65 >> 60 == 15)
  {
    sub_1AD007EC0(v62);
    goto LABEL_55;
  }
  v66 = *(_QWORD *)v62;
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *(_QWORD *)(v62 + 8) = v65;
  sub_1AD00412C(v66, v64);
LABEL_57:
  v67 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v67) = *(_BYTE *)(a2 + v67);
  v68 = a3[12];
  v69 = (uint64_t *)(a1 + v68);
  v70 = (uint64_t *)(a2 + v68);
  v71 = *(_QWORD *)(a1 + v68 + 8);
  if (v71 >> 60 != 15)
  {
    v72 = v70[1];
    if (v72 >> 60 != 15)
    {
      v73 = *v69;
      *v69 = *v70;
      v69[1] = v72;
      sub_1AD00412C(v73, v71);
      goto LABEL_62;
    }
    sub_1AD007EC0((uint64_t)v69);
  }
  *(_OWORD *)v69 = *(_OWORD *)v70;
LABEL_62:
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1AD47DF50()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD47DF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1AD47DFE0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD47DFEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_1AD47E06C()
{
  unint64_t v0;

  sub_1ACFFECF8(319, &qword_1EECDC908, (void (*)(uint64_t))MEMORY[0x1E0CAF790]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for CloudKitUserIdentityLookupInfo(_QWORD *a1)
{
  uint64_t result;
  unint64_t v3;

  swift_release();
  if (a1[3] != 1)
    swift_bridgeObjectRelease();
  swift_release();
  result = a1[7];
  if (result != 1)
    result = swift_bridgeObjectRelease();
  if (a1[8])
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    result = a1[23];
    if (result != 1)
      result = swift_bridgeObjectRelease();
  }
  v3 = a1[27];
  if (v3 >> 60 != 15)
    return sub_1AD00412C(a1[26], v3);
  return result;
}

uint64_t initializeWithCopy for CloudKitUserIdentityLookupInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  swift_retain();
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v5;
    *(_QWORD *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
  }
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = (_OWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  swift_retain();
  if (v9 == 1)
  {
    *(_OWORD *)(a1 + 48) = *v8;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)v8;
    *(_QWORD *)(a1 + 56) = v9;
    swift_bridgeObjectRetain();
  }
  v10 = *(_QWORD *)(a2 + 64);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 72);
    v12 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v11;
    *(_QWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    v13 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v13;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    v14 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v14;
    v15 = *(_QWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 168) = v15;
    v16 = (_OWORD *)(a2 + 176);
    v17 = *(_QWORD *)(a2 + 184);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v17 == 1)
    {
      *(_OWORD *)(a1 + 176) = *v16;
    }
    else
    {
      *(_QWORD *)(a1 + 176) = *(_QWORD *)v16;
      *(_QWORD *)(a1 + 184) = v17;
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v18;
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    v19 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v19;
    v20 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v20;
    v21 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v21;
  }
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  v22 = (uint64_t *)(a2 + 208);
  v23 = *(_QWORD *)(a2 + 216);
  if (v23 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 208) = *(_OWORD *)v22;
  }
  else
  {
    v24 = *v22;
    sub_1AD0040A0(*v22, v23);
    *(_QWORD *)(a1 + 208) = v24;
    *(_QWORD *)(a1 + 216) = v23;
  }
  return a1;
}

uint64_t assignWithCopy for CloudKitUserIdentityLookupInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 == 1)
  {
    sub_1AD009758(a1 + 16, &qword_1ED2E3198);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56) == 1)
  {
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v7 == 1)
  {
    sub_1AD009758(a1 + 48, &qword_1ED2E3198);
LABEL_13:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_15:
  v8 = (_OWORD *)(a1 + 64);
  v10 = (_OWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (!v9)
    {
      sub_1AD311474(a1 + 64);
      *v8 = *v10;
      v21 = *(_OWORD *)(a2 + 128);
      v23 = *(_OWORD *)(a2 + 80);
      v22 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v21;
      *(_OWORD *)(a1 + 80) = v23;
      *(_OWORD *)(a1 + 96) = v22;
      v25 = *(_OWORD *)(a2 + 160);
      v24 = *(_OWORD *)(a2 + 176);
      v26 = *(_OWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 160) = v25;
      *(_OWORD *)(a1 + 176) = v24;
      *(_OWORD *)(a1 + 144) = v26;
      goto LABEL_31;
    }
    v11 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v11;
    swift_retain();
    swift_release();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v12;
    swift_retain();
    swift_release();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v13;
    swift_retain();
    swift_release();
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v14;
    swift_retain();
    swift_release();
    v15 = *(_QWORD *)(a2 + 184);
    if (*(_QWORD *)(a1 + 184) != 1)
    {
      if (v15 != 1)
      {
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      sub_1AD009758(a1 + 176, &qword_1ED2E3198);
      goto LABEL_27;
    }
    if (v15 == 1)
    {
LABEL_27:
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      goto LABEL_30;
    }
    goto LABEL_24;
  }
  if (!v9)
  {
    *v8 = *v10;
    v27 = *(_OWORD *)(a2 + 80);
    v28 = *(_OWORD *)(a2 + 96);
    v29 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v29;
    *(_OWORD *)(a1 + 80) = v27;
    *(_OWORD *)(a1 + 96) = v28;
    v30 = *(_OWORD *)(a2 + 144);
    v31 = *(_OWORD *)(a2 + 160);
    v32 = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v31;
    *(_OWORD *)(a1 + 176) = v32;
    *(_OWORD *)(a1 + 144) = v30;
    goto LABEL_31;
  }
  v16 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v16;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v18 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v19 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v19;
  v20 = *(_QWORD *)(a2 + 184);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v20 != 1)
  {
LABEL_24:
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    goto LABEL_30;
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
LABEL_30:
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
LABEL_31:
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  v33 = (uint64_t *)(a2 + 208);
  v34 = *(_QWORD *)(a2 + 216);
  if (*(_QWORD *)(a1 + 216) >> 60 != 15)
  {
    if (v34 >> 60 != 15)
    {
      v36 = *v33;
      sub_1AD0040A0(*v33, v34);
      v37 = *(_QWORD *)(a1 + 208);
      v38 = *(_QWORD *)(a1 + 216);
      *(_QWORD *)(a1 + 208) = v36;
      *(_QWORD *)(a1 + 216) = v34;
      sub_1AD00412C(v37, v38);
      return a1;
    }
    sub_1AD007EC0(a1 + 208);
    goto LABEL_36;
  }
  if (v34 >> 60 == 15)
  {
LABEL_36:
    *(_OWORD *)(a1 + 208) = *(_OWORD *)v33;
    return a1;
  }
  v35 = *v33;
  sub_1AD0040A0(*v33, v34);
  *(_QWORD *)(a1 + 208) = v35;
  *(_QWORD *)(a1 + 216) = v34;
  return a1;
}

uint64_t assignWithTake for CloudKitUserIdentityLookupInfo(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = (_OWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) == 1)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 24);
  if (v5 == 1)
  {
    sub_1AD009758(a1 + 16, &qword_1ED2E3198);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v4;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v4;
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v6 = (_OWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 56) == 1)
  {
LABEL_9:
    *(_OWORD *)(a1 + 48) = *v6;
    goto LABEL_11;
  }
  v7 = *(_QWORD *)(a2 + 56);
  if (v7 == 1)
  {
    sub_1AD009758(a1 + 48, &qword_1ED2E3198);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
LABEL_11:
  v8 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
LABEL_18:
    v15 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v15;
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    v16 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v16;
    v17 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v17;
    v18 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v18;
    goto LABEL_21;
  }
  if (!v8)
  {
    sub_1AD311474(a1 + 64);
    goto LABEL_18;
  }
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  swift_release();
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_release();
  v13 = (_QWORD *)(a2 + 176);
  if (*(_QWORD *)(a1 + 184) != 1)
  {
    v14 = *(_QWORD *)(a2 + 184);
    if (v14 != 1)
    {
      *(_QWORD *)(a1 + 176) = *v13;
      *(_QWORD *)(a1 + 184) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    sub_1AD009758(a1 + 176, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)v13;
LABEL_20:
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
LABEL_21:
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  v19 = (_QWORD *)(a2 + 208);
  v20 = *(_QWORD *)(a1 + 216);
  if (v20 >> 60 != 15)
  {
    v21 = *(_QWORD *)(a2 + 216);
    if (v21 >> 60 != 15)
    {
      v22 = *(_QWORD *)(a1 + 208);
      *(_QWORD *)(a1 + 208) = *v19;
      *(_QWORD *)(a1 + 216) = v21;
      sub_1AD00412C(v22, v20);
      return a1;
    }
    sub_1AD007EC0(a1 + 208);
  }
  *(_OWORD *)(a1 + 208) = *(_OWORD *)v19;
  return a1;
}

ValueMetadata *type metadata accessor for CloudKitUserIdentityLookupInfo()
{
  return &type metadata for CloudKitUserIdentityLookupInfo;
}

uint64_t destroy for CloudKitRecordID(uint64_t a1)
{
  uint64_t result;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  result = *(_QWORD *)(a1 + 120);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for CloudKitRecordID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = (_OWORD *)(a2 + 112);
  v9 = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v9 == 1)
  {
    *(_OWORD *)(a1 + 112) = *v8;
  }
  else
  {
    *(_QWORD *)(a1 + 112) = *(_QWORD *)v8;
    *(_QWORD *)(a1 + 120) = v9;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

_QWORD *assignWithCopy for CloudKitRecordID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[9];
  a1[8] = a2[8];
  a1[9] = v6;
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a2[13];
  a1[12] = a2[12];
  a1[13] = v7;
  swift_retain();
  swift_release();
  v8 = a2[15];
  if (a1[15] != 1)
  {
    if (v8 != 1)
    {
      a1[14] = a2[14];
      a1[15] = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1AD009758((uint64_t)(a1 + 14), &qword_1ED2E3198);
    goto LABEL_6;
  }
  if (v8 == 1)
  {
LABEL_6:
    *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
    goto LABEL_8;
  }
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
LABEL_8:
  a1[16] = a2[16];
  return a1;
}

uint64_t assignWithTake for CloudKitRecordID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  v7 = (_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 120) != 1)
  {
    v8 = *(_QWORD *)(a2 + 120);
    if (v8 != 1)
    {
      *(_QWORD *)(a1 + 112) = *v7;
      *(_QWORD *)(a1 + 120) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AD009758(a1 + 112, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)v7;
LABEL_6:
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudKitRecordID(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudKitRecordID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudKitRecordID()
{
  return &type metadata for CloudKitRecordID;
}

uint64_t sub_1AD47EF18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD47EF3C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD47EF60()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1AD63B108();
  v1 = MEMORY[0x1E0C80A78](v0);
  __swift_allocate_value_buffer(v1, qword_1EECDC910);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDC910);
  sub_1AD63B1D4();
  return sub_1AD63B1EC();
}

uint64_t sub_1AD47F020(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83AB0);
}

uint64_t sub_1AD47F034()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD47F040@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v34 = a1;
  v1 = sub_1AD63B1C8();
  v32 = *(_QWORD *)(v1 - 8);
  v33 = v1;
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1AD63B108();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v29 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v25 - v17;
  if (qword_1EECD15D8 != -1)
    swift_once();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EED83B58);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v26 = v18;
  sub_1AD63B0B4();
  v35 = 0x28272A7E212E5F2DLL;
  v36 = 0xE900000000000029;
  sub_1AD63B1D4();
  sub_1AD63B1EC();
  sub_1AD486250();
  sub_1AD63B0B4();
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v10, v5);
  v20 = v27;
  sub_1AD63B0C0();
  v21 = v28;
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v22 = MEMORY[0x1E0DEBAF0];
  v23 = v31;
  sub_1AD63B18C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v33);
  MEMORY[0x1AF449E1C](v16, v22);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v23);
  v19(v12, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v26, v13);
}

uint64_t sub_1AD47F388(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EECDC928);
}

uint64_t sub_1AD47F39C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  return sub_1AD63B210();
}

uint64_t sub_1AD47F428@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD47F6F8(a1);
}

uint64_t sub_1AD47F434@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1AD63B1C8();
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v21 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1AD63B108();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v21 - v16;
  sub_1AD63B1E0();
  sub_1AD63B1EC();
  sub_1AD486250();
  sub_1AD63B0B4();
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v15, v10);
  if (qword_1EECD1560 != -1)
    swift_once();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EECDC910);
  sub_1AD63B0B4();
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v19 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B18C();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
  MEMORY[0x1AF449E1C](v3, v19);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
  v18(v15, v10);
  return ((uint64_t (*)(char *, uint64_t))v18)(v17, v10);
}

uint64_t sub_1AD47F6D8(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EECDC940);
}

uint64_t sub_1AD47F6EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD47F6F8(a1);
}

uint64_t sub_1AD47F6F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  _QWORD v11[2];

  v11[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9D8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  sub_1AD63B138();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B114();
  sub_1AD426054(&qword_1EECDC9E0, &qword_1EECDC9D8, MEMORY[0x1E0DEFE58]);
  sub_1AD63B0B4();
  v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v6, v2);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v9)(v8, v2);
}

uint64_t sub_1AD47F888@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v41 = a1;
  v36 = sub_1AD63B1C8();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v40 = *(_QWORD *)(v33 - 8);
  v3 = MEMORY[0x1E0C80A78](v33);
  v39 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v28 - v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - v7;
  v9 = sub_1AD63B108();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v35 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v28 - v15;
  if (qword_1EECD15E8 != -1)
    swift_once();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EED83B88);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v45 = 42;
  v46 = 0xE100000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  v43 = 35;
  v44 = 0xE100000000000000;
  sub_1AD63B0B4();
  if (qword_1EECD1560 != -1)
    swift_once();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EECDC910);
  v29 = v9;
  v30 = sub_1AD486250();
  sub_1AD63B0B4();
  v31 = v11;
  v32 = v16;
  sub_1AD63B0C0();
  v43 = v47;
  v44 = v48;
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v17 = MEMORY[0x1E0DEBAF0];
  v18 = v33;
  sub_1AD63B18C();
  v28 = v8;
  v19 = *(void (**)(char *, uint64_t))(v34 + 8);
  v20 = v36;
  v19(v2, v36);
  v21 = v38;
  MEMORY[0x1AF449E1C](v14, v17);
  swift_bridgeObjectRelease();
  v43 = v45;
  v44 = v46;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v19(v2, v20);
  v22 = v39;
  MEMORY[0x1AF449E1C](v14, v17);
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  v23 = v14;
  v24 = v42;
  v25 = v29;
  sub_1AD63B18C();
  v19(v2, v20);
  MEMORY[0x1AF449E1C](v23, MEMORY[0x1E0DEBAF0]);
  v26 = *(void (**)(char *, uint64_t))(v40 + 8);
  v26(v22, v18);
  v26(v21, v18);
  v26(v28, v18);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v32, v31);
}

uint64_t sub_1AD47FCF8(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EECDC958);
}

uint64_t sub_1AD47FD0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t);
  _QWORD v49[2];
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  char *v51;
  char *v52;
  unint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;

  v62 = a1;
  v70 = sub_1AD63B108();
  v58 = *(_QWORD *)(v70 - 8);
  v1 = MEMORY[0x1E0C80A78](v70);
  v56 = (char *)v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x1E0C80A78](v1);
  v57 = (char *)v49 - v4;
  MEMORY[0x1E0C80A78](v3);
  v69 = (char *)v49 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v59 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v61 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v55 = (char *)v49 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v60 = (char *)v49 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v65 = (char *)v49 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v49 - v15;
  v68 = sub_1AD63B1C8();
  v17 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v23 = *(_QWORD *)(v66 - 8);
  v24 = MEMORY[0x1E0C80A78](v66);
  v54 = (char *)v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)v49 - v27;
  MEMORY[0x1E0C80A78](v26);
  v67 = (char *)v49 - v29;
  v71 = 43;
  v72 = 0xE100000000000000;
  v53 = sub_1AD486320();
  sub_1AD63B0B4();
  if (qword_1EECD1570 != -1)
    swift_once();
  v49[1] = __swift_project_value_buffer(v6, (uint64_t)qword_1EECDC928);
  v30 = sub_1AD63B1F8();
  v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v50(v22, 1, 1, v30);
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v31 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v22);
  v49[0] = *(_QWORD *)(v17 + 8);
  ((void (*)(char *, uint64_t))v49[0])(v19, v68);
  MEMORY[0x1AF449DE0](v16, v31);
  v63 = sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  v32 = v66;
  sub_1AD63B0B4();
  v64 = *(void (**)(char *, uint64_t))(v23 + 8);
  v51 = v28;
  v64(v28, v32);
  sub_1AD63B1E0();
  v33 = v57;
  sub_1AD63B1EC();
  v56 = (char *)sub_1AD486250();
  v34 = v70;
  sub_1AD63B0B4();
  v58 = *(_QWORD *)(v58 + 8);
  ((void (*)(char *, uint64_t))v58)(v33, v34);
  v50(v22, 1, 1, v30);
  sub_1AD63B0FC();
  v35 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v22);
  v36 = v68;
  v37 = (void (*)(char *, uint64_t))v49[0];
  ((void (*)(char *, uint64_t))v49[0])(v19, v68);
  v38 = v54;
  MEMORY[0x1AF449DE0](v16, v35);
  v39 = v66;
  sub_1AD63B0B4();
  v64(v38, v39);
  v71 = v73;
  v72 = v74;
  v52 = v16;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  v40 = v60;
  sub_1AD63B198();
  v41 = v55;
  sub_1AD63B198();
  sub_1AD63B174();
  v42 = *(void (**)(char *, uint64_t))(v59 + 8);
  v42(v41, v6);
  v42(v40, v6);
  v43 = v36;
  v37(v19, v36);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v44 = v61;
  sub_1AD63B198();
  sub_1AD63B174();
  v42(v44, v6);
  v42(v41, v6);
  v37(v19, v43);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v45 = v51;
  v46 = v66;
  sub_1AD63B198();
  sub_1AD63B174();
  v42(v44, v6);
  v42(v41, v6);
  v37(v19, v68);
  v42(v40, v6);
  v42(v65, v6);
  v42(v52, v6);
  v47 = (uint64_t (*)(char *, uint64_t))v64;
  v64(v45, v46);
  ((void (*)(char *, uint64_t))v58)(v69, v70);
  return v47(v67, v46);
}

uint64_t sub_1AD480414(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83AC8);
}

uint64_t sub_1AD480428()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD480434@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;

  v45 = a1;
  v1 = sub_1AD63B1C8();
  v41 = *(_QWORD *)(v1 - 8);
  v42 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v44 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x1E0C80A78](v39);
  v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v43 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v34 - v12;
  MEMORY[0x1E0C80A78](v11);
  v46 = (char *)&v34 - v13;
  v14 = sub_1AD63B108();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v34 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v34 - v20;
  v48 = 0x242B263A2F5D5BLL;
  v49 = 0xE700000000000000;
  sub_1AD63B1D4();
  sub_1AD63B1EC();
  sub_1AD486250();
  v22 = v21;
  sub_1AD63B0B4();
  v23 = v14;
  v38 = *(void (**)(char *, uint64_t))(v15 + 8);
  v38(v19, v14);
  if (qword_1EECD1568 != -1)
    swift_once();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EED83AB0);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v24 = v8;
  if (qword_1EECD15F0 != -1)
    swift_once();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EED83BA0);
  sub_1AD63B0B4();
  v36 = v23;
  v37 = v22;
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v25 = MEMORY[0x1E0DEBAF0];
  v26 = v35;
  v27 = v39;
  sub_1AD63B18C();
  v34 = v7;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t))(v41 + 8);
  v29(v3, v42);
  v30 = v40;
  MEMORY[0x1AF449E1C](v26, v25);
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v29(v3, v28);
  MEMORY[0x1AF449E1C](v26, v25);
  v31 = *(void (**)(char *, uint64_t))(v44 + 8);
  v31(v30, v27);
  v31(v34, v27);
  v32 = *(void (**)(char *, uint64_t))(v43 + 8);
  v32(v47, v24);
  v32(v46, v24);
  return ((uint64_t (*)(char *, uint64_t))v38)(v37, v36);
}

uint64_t sub_1AD480874(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83AE0);
}

uint64_t sub_1AD480888@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1AD63B1C8();
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9B0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - v15;
  if (qword_1EECD1588 != -1)
    swift_once();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EED83AC8);
  v17 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v18 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B1A4();
  sub_1AD486298((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
  MEMORY[0x1AF449E34](v3, v18);
  sub_1AD426054(&qword_1EECDC9B8, &qword_1EECDC9B0, MEMORY[0x1E0DEFEE8]);
  sub_1AD63B0B4();
  v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

uint64_t sub_1AD480B08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1AD63B1C8();
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9B0);
  v24 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v24 - v18;
  v20 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B138();
  v21 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 1, 1, v21);
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B1A4();
  sub_1AD486298((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  MEMORY[0x1AF449E34](v3, v20);
  sub_1AD426054(&qword_1EECDC9B8, &qword_1EECDC9B0, MEMORY[0x1E0DEFEE8]);
  sub_1AD63B0B4();
  v22 = *(void (**)(char *, uint64_t))(v24 + 8);
  v22(v17, v14);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v22)(v19, v14);
}

uint64_t sub_1AD480DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  _QWORD v34[2];
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v42 = a1;
  v44 = sub_1AD63B1C8();
  v41 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v2 = (char *)v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9E8);
  v40 = *(_QWORD *)(v43 - 8);
  v6 = MEMORY[0x1E0C80A78](v43);
  v39 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)v34 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v38 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v37 = (char *)v34 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v34 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v34 - v19;
  MEMORY[0x1E0C80A78](v18);
  v45 = (char *)v34 - v21;
  v47 = 59;
  v48 = 0xE100000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B210();
  sub_1AD63B0B4();
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v20, v9);
  v23 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 1, 1, v23);
  sub_1AD63B0FC();
  sub_1AD48127C((uint64_t)v17);
  v24 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B1BC();
  sub_1AD486298((uint64_t)v5);
  v22(v17, v9);
  v35 = *(void (**)(char *, uint64_t))(v41 + 8);
  v35(v2, v44);
  v25 = v39;
  MEMORY[0x1AF449DD4](v20, v24);
  v34[1] = sub_1AD426054((unint64_t *)&unk_1EECDC9F0, &qword_1EECDC9E8, MEMORY[0x1E0DEFDF0]);
  v26 = v43;
  sub_1AD63B0B4();
  v41 = *(_QWORD *)(v40 + 8);
  ((void (*)(char *, uint64_t))v41)(v25, v26);
  v47 = v49;
  v48 = v50;
  v36 = v20;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  v27 = v37;
  sub_1AD63B198();
  v28 = v38;
  sub_1AD63B198();
  v34[0] = v17;
  sub_1AD63B174();
  v22(v28, v9);
  v22(v27, v9);
  v29 = v44;
  v30 = v35;
  v35(v2, v44);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v31 = v46;
  v32 = v43;
  sub_1AD63B198();
  sub_1AD63B174();
  v22(v28, v9);
  v22(v27, v9);
  v30(v2, v29);
  v22((char *)v34[0], v9);
  v22(v36, v9);
  ((void (*)(char *, uint64_t))v41)(v31, v32);
  return ((uint64_t (*)(char *, uint64_t))v22)(v45, v9);
}

uint64_t sub_1AD48127C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v19[1] = a1;
  v1 = sub_1AD63B1C8();
  v20 = *(_QWORD *)(v1 - 8);
  v21 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v19 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v19 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v19 - v15;
  v22 = 61;
  v23 = 0xE100000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  if (qword_1EECD1590 != -1)
    swift_once();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EED83AE0);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v22 = v24;
  v23 = v25;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v11, v4);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v21);
  v17(v14, v4);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v4);
}

uint64_t sub_1AD4814E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v36 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v37 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v34 = (char *)&v28 - v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - v6;
  v8 = sub_1AD63B1C8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9B0);
  v32 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v33 = (char *)&v28 - v19;
  v38 = 0x3D7478653BLL;
  v39 = 0xE500000000000000;
  v31 = sub_1AD486320();
  sub_1AD63B0B4();
  if (qword_1EECD1570 != -1)
    swift_once();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EECDC928);
  v20 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v21 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B1A4();
  sub_1AD486298((uint64_t)v14);
  v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  v30(v11, v8);
  MEMORY[0x1AF449E34](v7, v21);
  sub_1AD426054(&qword_1EECDC9B8, &qword_1EECDC9B0, MEMORY[0x1E0DEFEE8]);
  v22 = v33;
  sub_1AD63B0B4();
  v29 = v8;
  v23 = *(void (**)(char *, uint64_t))(v32 + 8);
  v23(v18, v15);
  v38 = v40;
  v39 = v41;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  v24 = v34;
  sub_1AD63B198();
  v25 = v35;
  sub_1AD63B198();
  sub_1AD63B174();
  v26 = *(void (**)(char *, uint64_t))(v37 + 8);
  v26(v25, v1);
  v26(v24, v1);
  v30(v11, v29);
  v26(v7, v1);
  return ((uint64_t (*)(char *, uint64_t))v23)(v22, v15);
}

uint64_t sub_1AD4818A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v36 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v37 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v34 = (char *)&v29 - v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - v6;
  v38 = sub_1AD63B1C8();
  v33 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v30 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9B0);
  v32 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v29 - v20;
  v39 = 0x3D627573693BLL;
  v40 = 0xE600000000000000;
  v31 = sub_1AD486320();
  sub_1AD63B0B4();
  v22 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B138();
  v23 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v12, 1, 1, v23);
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B1A4();
  sub_1AD486298((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v13);
  v33 = *(_QWORD *)(v33 + 8);
  ((void (*)(char *, uint64_t))v33)(v9, v38);
  MEMORY[0x1AF449E34](v7, v22);
  sub_1AD426054(&qword_1EECDC9B8, &qword_1EECDC9B0, MEMORY[0x1E0DEFEE8]);
  sub_1AD63B0B4();
  v24 = *(void (**)(char *, uint64_t))(v32 + 8);
  v24(v19, v16);
  v39 = v41;
  v40 = v42;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v25 = v34;
  sub_1AD63B198();
  v26 = v35;
  sub_1AD63B198();
  sub_1AD63B174();
  v27 = *(void (**)(char *, uint64_t))(v37 + 8);
  v27(v26, v1);
  v27(v25, v1);
  ((void (*)(char *, uint64_t))v33)(v9, v38);
  v27(v7, v1);
  return ((uint64_t (*)(char *, uint64_t))v24)(v21, v16);
}

uint64_t sub_1AD481CAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;

  v45 = a1;
  v1 = sub_1AD63B1C8();
  v41 = *(_QWORD *)(v1 - 8);
  v42 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v44 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x1E0C80A78](v39);
  v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v43 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v34 - v12;
  MEMORY[0x1E0C80A78](v11);
  v46 = (char *)&v34 - v13;
  v14 = sub_1AD63B108();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v34 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v34 - v20;
  v48 = 0x2B3D26403A3F2F3BLL;
  v49 = 0xE900000000000024;
  sub_1AD63B1D4();
  sub_1AD63B1EC();
  sub_1AD486250();
  v22 = v21;
  sub_1AD63B0B4();
  v23 = v14;
  v38 = *(void (**)(char *, uint64_t))(v15 + 8);
  v38(v19, v14);
  if (qword_1EECD1568 != -1)
    swift_once();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EED83AB0);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v24 = v8;
  if (qword_1EECD15F0 != -1)
    swift_once();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EED83BA0);
  sub_1AD63B0B4();
  v36 = v23;
  v37 = v22;
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v25 = MEMORY[0x1E0DEBAF0];
  v26 = v35;
  v27 = v39;
  sub_1AD63B18C();
  v34 = v7;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t))(v41 + 8);
  v29(v3, v42);
  v30 = v40;
  MEMORY[0x1AF449E1C](v26, v25);
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v29(v3, v28);
  MEMORY[0x1AF449E1C](v26, v25);
  v31 = *(void (**)(char *, uint64_t))(v44 + 8);
  v31(v30, v27);
  v31(v34, v27);
  v32 = *(void (**)(char *, uint64_t))(v43 + 8);
  v32(v47, v24);
  v32(v46, v24);
  return ((uint64_t (*)(char *, uint64_t))v38)(v37, v36);
}

uint64_t sub_1AD4820F0(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EECDC970);
}

uint64_t sub_1AD482104()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD482110@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  v40 = a1;
  v1 = sub_1AD63B1C8();
  v37 = *(_QWORD *)(v1 - 8);
  v38 = v1;
  MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v39 = *(_QWORD *)(v36 - 8);
  v3 = MEMORY[0x1E0C80A78](v36);
  v41 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v30 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v30 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v30 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v30 - v18;
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v20 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  v34 = v19;
  sub_1AD63B0B4();
  v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v17, v7);
  sub_1AD63B210();
  v32 = v17;
  sub_1AD63B0B4();
  v31 = v14;
  v33 = v21;
  v21(v14, v7);
  sub_1AD63B210();
  sub_1AD63B0B4();
  v21(v11, v7);
  v30 = v6;
  sub_1AD63B0C0();
  v22 = v35;
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v23 = v36;
  sub_1AD63B18C();
  v24 = v38;
  v25 = *(void (**)(char *, uint64_t))(v37 + 8);
  v25(v22, v38);
  MEMORY[0x1AF449E1C](v11, v20);
  sub_1AD63B0FC();
  v26 = v31;
  sub_1AD63B18C();
  v25(v22, v24);
  MEMORY[0x1AF449E1C](v11, MEMORY[0x1E0DEBAF0]);
  v27 = *(void (**)(char *, uint64_t))(v39 + 8);
  v27(v41, v23);
  v27(v30, v23);
  v28 = v33;
  v33(v26, v7);
  v28(v32, v7);
  return ((uint64_t (*)(char *, uint64_t))v28)(v34, v7);
}

uint64_t sub_1AD4824C0()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD4824CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD482CE8(&qword_1EECD15D8, (uint64_t)qword_1EED83B58, (uint64_t)sub_1AD4824F0, (uint64_t)sub_1AD49DB20, a1);
}

uint64_t sub_1AD4824F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v50 = a1;
  v54 = sub_1AD63B1C8();
  v47 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v7 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  v44 = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v46 = *(_QWORD *)(v55 - 8);
  v10 = MEMORY[0x1E0C80A78](v55);
  v45 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v53 = (char *)&v40 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v48 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v42 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v40 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v49 = (char *)&v40 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v52 = (char *)&v40 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v40 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v40 - v26;
  if (qword_1EECD15D8 != -1)
    swift_once();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EED83B58);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v51 = v27;
  sub_1AD63B0B4();
  v28 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B138();
  v29 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v5, 1, 1, v29);
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v30 = v43;
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v30);
  v44 = *(_QWORD *)(v47 + 8);
  ((void (*)(char *, uint64_t))v44)(v2, v54);
  v31 = v45;
  v41 = v25;
  MEMORY[0x1AF449DE0](v25, v28);
  sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  v32 = v55;
  sub_1AD63B0B4();
  v47 = *(_QWORD *)(v46 + 8);
  ((void (*)(char *, uint64_t))v47)(v31, v32);
  sub_1AD63B0B4();
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  sub_1AD63B198();
  v33 = v42;
  sub_1AD63B198();
  v34 = v49;
  sub_1AD63B174();
  v35 = *(void (**)(char *, uint64_t))(v48 + 8);
  v35(v33, v13);
  v35(v18, v13);
  v36 = v54;
  v37 = (void (*)(char *, uint64_t))v44;
  ((void (*)(char *, uint64_t))v44)(v2, v54);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v38 = v41;
  sub_1AD63B198();
  sub_1AD63B174();
  v35(v33, v13);
  v35(v18, v13);
  v37(v2, v36);
  v35(v34, v13);
  v35(v52, v13);
  v35(v38, v13);
  ((void (*)(char *, uint64_t))v47)(v53, v55);
  return ((uint64_t (*)(char *, uint64_t))v35)(v51, v13);
}

uint64_t sub_1AD482A44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v20 = a1;
  v1 = sub_1AD63B1C8();
  v18 = *(_QWORD *)(v1 - 8);
  v19 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v16 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v15 - v11;
  if (qword_1EECD15D8 != -1)
    swift_once();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EED83B58);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v21 = 45;
  v22 = 0xE100000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD63B0C0();
  v21 = v23;
  v22 = v24;
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v13 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B18C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v19);
  MEMORY[0x1AF449E1C](v10, v13);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v12, v7);
}

uint64_t sub_1AD482CB8()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD482CC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD482CE8(&qword_1EECD15E0, (uint64_t)qword_1EED83B70, (uint64_t)sub_1AD482F74, (uint64_t)sub_1AD49DB4C, a1);
}

uint64_t sub_1AD482CE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v26[0] = a4;
  v26[1] = a3;
  v30 = a5;
  v7 = sub_1AD63B1C8();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v27 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v26 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v26 - v21;
  if (*a1 != -1)
    swift_once();
  __swift_project_value_buffer(v13, a2);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v23 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  sub_1AD63B0B4();
  v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  v24(v17, v13);
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B18C();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  MEMORY[0x1AF449E1C](v17, v23);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v10);
  v24(v20, v13);
  return ((uint64_t (*)(char *, uint64_t))v24)(v22, v13);
}

uint64_t sub_1AD482F74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;

  v42 = a1;
  v45 = sub_1AD63B1C8();
  v39 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v38 = *(_QWORD *)(v43 - 8);
  v9 = MEMORY[0x1E0C80A78](v43);
  v37 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v36 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v40 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v36 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v41 = (char *)&v36 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v44 = (char *)&v36 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v36 - v24;
  MEMORY[0x1E0C80A78](v23);
  v46 = (char *)&v36 - v26;
  if (qword_1EECD15E0 != -1)
    swift_once();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EED83B70);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v27 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B138();
  v28 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v5, 1, 1, v28);
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
  v39 = *(_QWORD *)(v39 + 8);
  ((void (*)(char *, uint64_t))v39)(v2, v45);
  v29 = v37;
  MEMORY[0x1AF449DE0](v25, v27);
  sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  v30 = v43;
  sub_1AD63B0B4();
  v38 = *(_QWORD *)(v38 + 8);
  ((void (*)(char *, uint64_t))v38)(v29, v30);
  if (qword_1EECD15D8 != -1)
    swift_once();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EED83B58);
  sub_1AD63B0B4();
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  sub_1AD63B198();
  sub_1AD63B198();
  v31 = v41;
  sub_1AD63B174();
  v32 = *(void (**)(char *, uint64_t))(v40 + 8);
  v32(v15, v12);
  v32(v18, v12);
  v33 = v45;
  v34 = (void (*)(char *, uint64_t))v39;
  ((void (*)(char *, uint64_t))v39)(v2, v45);
  sub_1AD63B0FC();
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v32(v15, v12);
  v32(v18, v12);
  v34(v2, v33);
  v32(v31, v12);
  v32(v44, v12);
  v32(v25, v12);
  ((void (*)(char *, uint64_t))v38)(v47, v43);
  return ((uint64_t (*)(char *, uint64_t))v32)(v46, v12);
}

uint64_t sub_1AD4834E8(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83AF8);
}

uint64_t sub_1AD4834FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;

  v48 = a1;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9E8);
  v47 = *(_QWORD *)(v52 - 8);
  v1 = MEMORY[0x1E0C80A78](v52);
  v46 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v51 = (char *)&v40 - v3;
  v55 = sub_1AD63B1C8();
  v49 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v41 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v45 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v43 = (char *)&v40 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v44 = (char *)&v40 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v40 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v40 - v19;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v42 = *(_QWORD *)(v53 - 8);
  v21 = MEMORY[0x1E0C80A78](v53);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v54 = (char *)&v40 - v24;
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v25 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  v26 = sub_1AD63B1F8();
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v40(v8, 1, 1, v26);
  sub_1AD63B0FC();
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v8);
  v27 = *(void (**)(char *, uint64_t))(v41 + 8);
  v50 = v20;
  v27(v20, v9);
  v49 = *(_QWORD *)(v49 + 8);
  ((void (*)(char *, uint64_t))v49)(v5, v55);
  MEMORY[0x1AF449DE0](v18, v25);
  v41 = sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  v28 = v53;
  sub_1AD63B0B4();
  v42 = *(_QWORD *)(v42 + 8);
  ((void (*)(char *, uint64_t))v42)(v23, v28);
  v29 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  sub_1AD63B0B4();
  v27(v18, v9);
  v40(v8, 1, 1, v26);
  v56 = 46;
  v57 = 0xE100000000000000;
  sub_1AD63B0FC();
  sub_1AD486320();
  sub_1AD63B1BC();
  sub_1AD486298((uint64_t)v8);
  swift_bridgeObjectRelease();
  v30 = v55;
  ((void (*)(char *, uint64_t))v49)(v5, v55);
  v31 = v46;
  MEMORY[0x1AF449DD4](v18, v29);
  v40 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1AD426054((unint64_t *)&unk_1EECDC9F0, &qword_1EECDC9E8, MEMORY[0x1E0DEFDF0]);
  v32 = v52;
  sub_1AD63B0B4();
  v47 = *(_QWORD *)(v47 + 8);
  ((void (*)(char *, uint64_t))v47)(v31, v32);
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  v33 = v43;
  sub_1AD63B198();
  v34 = v45;
  sub_1AD63B198();
  v35 = v44;
  sub_1AD63B174();
  v27(v34, v9);
  v27(v33, v9);
  v36 = v30;
  v37 = (void (*)(char *, uint64_t))v49;
  ((void (*)(char *, uint64_t))v49)(v5, v36);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v38 = v52;
  sub_1AD63B198();
  sub_1AD63B174();
  v27(v34, v9);
  v27(v33, v9);
  v37(v5, v55);
  v27(v35, v9);
  v27(v18, v9);
  ((void (*)(char *, uint64_t))v47)(v51, v38);
  v27(v50, v9);
  return ((uint64_t (*)(char *, uint64_t))v42)(v54, v53);
}

uint64_t sub_1AD483ADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  unint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v21[1] = a1;
  v1 = sub_1AD63B1C8();
  v22 = *(_QWORD *)(v1 - 8);
  v23 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v21 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v21 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v21 - v15;
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B210();
  v21[0] = v16;
  sub_1AD63B0B4();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v14, v4);
  v24 = 46;
  v25 = 0xE100000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD63B0D8();
  v19 = v26;
  v18 = v27;
  sub_1AD63B0FC();
  v24 = v19;
  v25 = v18;
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v17(v8, v4);
  v17(v11, v4);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v23);
  swift_bridgeObjectRelease();
  v17(v14, v4);
  return ((uint64_t (*)(_QWORD, uint64_t))v17)(v21[0], v4);
}

uint64_t sub_1AD483D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  sub_1AD63B138();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B0B4();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t sub_1AD483E48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v1 = sub_1AD63B1C8();
  v21 = *(_QWORD *)(v1 - 8);
  v22 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v20 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v20 - v15;
  if (qword_1EECD15A0 != -1)
    swift_once();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EED83AF8);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  if (qword_1EECD1580 != -1)
    swift_once();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EECDC958);
  sub_1AD63B0B4();
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v17 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B18C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v22);
  MEMORY[0x1AF449E1C](v11, v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v14, v7);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v7);
}

uint64_t sub_1AD4840E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a1;
  v1 = sub_1AD63B1C8();
  v35 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v34 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v38 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v37 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v36 = (char *)&v30 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v30 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v30 - v20;
  if (qword_1EECD1580 != -1)
    swift_once();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EECDC958);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v32 = v21;
  if (qword_1EECD1598 != -1)
    swift_once();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EECDC970);
  v22 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 1, 1, v22);
  sub_1AD63B0FC();
  v23 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v6);
  v35 = *(_QWORD *)(v35 + 8);
  ((void (*)(char *, uint64_t))v35)(v3, v1);
  v24 = v33;
  MEMORY[0x1AF449DE0](v19, v23);
  sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  sub_1AD63B0B4();
  v31 = v1;
  v34 = *(_QWORD *)(v34 + 8);
  ((void (*)(char *, uint64_t))v34)(v24, v7);
  v25 = v32;
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  v26 = v36;
  sub_1AD63B198();
  v27 = v37;
  sub_1AD63B198();
  sub_1AD63B174();
  v28 = *(void (**)(char *, uint64_t))(v38 + 8);
  v28(v27, v12);
  v28(v26, v12);
  ((void (*)(char *, uint64_t))v35)(v3, v31);
  v28(v19, v12);
  ((void (*)(char *, uint64_t))v34)(v11, v7);
  return ((uint64_t (*)(char *, uint64_t))v28)(v25, v12);
}

uint64_t sub_1AD4844EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t (*v42)(char *, uint64_t);
  _QWORD v44[2];
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;

  v57 = a1;
  v52 = (void (*)(char *, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  MEMORY[0x1E0C80A78](v52);
  v49 = (char *)v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9D8);
  v51 = *(_QWORD *)(v61 - 8);
  v2 = MEMORY[0x1E0C80A78](v61);
  v50 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v65 = (char *)v44 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v53 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v56 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v54 = (char *)v44 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v55 = (char *)v44 - v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v44 - v12;
  v64 = sub_1AD63B1C8();
  v60 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v48 = (char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v62 = (char *)v44 - v24;
  MEMORY[0x1E0C80A78](v23);
  v63 = (char *)v44 - v25;
  if (qword_1EECD1578 != -1)
    swift_once();
  v46 = __swift_project_value_buffer(v5, (uint64_t)qword_1EECDC940);
  v26 = sub_1AD63B1F8();
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v47(v18, 1, 1, v26);
  sub_1AD63B0FC();
  v27 = sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v28 = MEMORY[0x1E0DEBAF0];
  v44[1] = v27;
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v18);
  v59 = *(void (**)(char *, uint64_t))(v60 + 8);
  v59(v15, v64);
  v29 = v62;
  MEMORY[0x1AF449DE0](v13, v28);
  v58 = sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  sub_1AD63B0B4();
  v60 = *(_QWORD *)(v20 + 8);
  ((void (*)(char *, uint64_t))v60)(v29, v19);
  sub_1AD63B138();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v30 = v50;
  sub_1AD63B114();
  v49 = (char *)sub_1AD426054(&qword_1EECDC9E0, &qword_1EECDC9D8, MEMORY[0x1E0DEFE58]);
  v31 = v61;
  sub_1AD63B0B4();
  v52 = *(void (**)(char *, uint64_t))(v51 + 8);
  v52(v30, v31);
  v47(v18, 1, 1, v26);
  sub_1AD63B0FC();
  v32 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v18);
  v33 = v59;
  v59(v15, v64);
  v34 = v48;
  MEMORY[0x1AF449DE0](v13, v32);
  sub_1AD63B0B4();
  ((void (*)(char *, uint64_t))v60)(v34, v19);
  v45 = v13;
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  v35 = v54;
  sub_1AD63B198();
  v36 = v56;
  sub_1AD63B198();
  v37 = v55;
  sub_1AD63B174();
  v38 = *(void (**)(char *, uint64_t))(v53 + 8);
  v38(v36, v5);
  v38(v35, v5);
  v39 = v64;
  v33(v15, v64);
  sub_1AD63B0FC();
  v40 = v37;
  sub_1AD63B198();
  v41 = v62;
  sub_1AD63B198();
  sub_1AD63B174();
  v38(v36, v5);
  v38(v35, v5);
  v59(v15, v39);
  v38(v40, v5);
  v38(v45, v5);
  v42 = (uint64_t (*)(char *, uint64_t))v60;
  ((void (*)(char *, uint64_t))v60)(v41, v19);
  v52(v65, v61);
  return v42(v63, v19);
}

uint64_t sub_1AD484B68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v29 = a1;
  v26 = sub_1AD63B1C8();
  v22 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v28 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v27 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - v12;
  if (qword_1EECD15E8 != -1)
    swift_once();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EED83B88);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v24 = v8;
  sub_1AD63B0B4();
  v32 = 42;
  v33 = 0xE100000000000000;
  sub_1AD486320();
  v23 = v13;
  sub_1AD63B0B4();
  v30 = 35;
  v31 = 0xE100000000000000;
  sub_1AD63B0B4();
  sub_1AD63B0C0();
  v30 = v34;
  v31 = v35;
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v21 = v7;
  v14 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B18C();
  v15 = *(void (**)(char *, uint64_t))(v22 + 8);
  v16 = v26;
  v15(v2, v26);
  v17 = v25;
  MEMORY[0x1AF449E1C](v11, v14);
  swift_bridgeObjectRelease();
  v30 = v32;
  v31 = v33;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v15(v2, v16);
  MEMORY[0x1AF449E1C](v11, v14);
  swift_bridgeObjectRelease();
  v18 = *(void (**)(char *, uint64_t))(v28 + 8);
  v18(v17, v3);
  v18(v21, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v23, v24);
}

uint64_t sub_1AD484EA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  _QWORD v49[2];
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;

  v55 = a1;
  v66 = sub_1AD63B1C8();
  v59 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v2 = (char *)v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v49[0] = *(_QWORD *)(v63 - 8);
  v6 = MEMORY[0x1E0C80A78](v63);
  v52 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v64 = (char *)v49 - v9;
  MEMORY[0x1E0C80A78](v8);
  v65 = (char *)v49 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v54 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v51 = (char *)v49 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v53 = (char *)v49 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v61 = (char *)v49 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v60 = (char *)v49 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v49 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v49 - v26;
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B210();
  v62 = v27;
  sub_1AD63B0B4();
  v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29 = v25;
  v28(v25, v11);
  if (qword_1EECD1598 != -1)
    swift_once();
  v49[1] = __swift_project_value_buffer(v11, (uint64_t)qword_1EECDC970);
  v30 = sub_1AD63B1F8();
  v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v50(v5, 1, 1, v30);
  sub_1AD63B0FC();
  v31 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v5);
  v57 = *(void (**)(char *, uint64_t))(v59 + 8);
  v57(v2, v66);
  v32 = v64;
  v58 = v29;
  MEMORY[0x1AF449DE0](v29, v31);
  v56 = sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  v33 = v63;
  sub_1AD63B0B4();
  v59 = *(_QWORD *)(v49[0] + 8);
  ((void (*)(char *, uint64_t))v59)(v32, v33);
  v34 = v60;
  sub_1AD63B210();
  sub_1AD63B0B4();
  v35 = v34;
  v28(v34, v11);
  v50(v5, 1, 1, v30);
  sub_1AD63B0FC();
  v36 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v5);
  v37 = v66;
  v57(v2, v66);
  v38 = v52;
  MEMORY[0x1AF449DE0](v35, v36);
  sub_1AD63B0B4();
  ((void (*)(char *, uint64_t))v59)(v38, v33);
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  v39 = v53;
  sub_1AD63B198();
  v40 = v51;
  sub_1AD63B198();
  sub_1AD63B174();
  v28(v40, v11);
  v28(v39, v11);
  v41 = v37;
  v42 = v37;
  v43 = v57;
  v57(v2, v41);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v44 = v54;
  sub_1AD63B198();
  sub_1AD63B174();
  v28(v44, v11);
  v28(v40, v11);
  v43(v2, v42);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v46 = v63;
  v45 = v64;
  sub_1AD63B198();
  sub_1AD63B174();
  v28(v44, v11);
  v28(v40, v11);
  v43(v2, v66);
  v28(v39, v11);
  v28(v61, v11);
  v28(v60, v11);
  v47 = (void (*)(char *, uint64_t))v59;
  ((void (*)(char *, uint64_t))v59)(v45, v46);
  v28(v58, v11);
  v47(v65, v46);
  return ((uint64_t (*)(char *, uint64_t))v28)(v62, v11);
}

uint64_t sub_1AD485548(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83B10);
}

uint64_t sub_1AD48555C()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD485568@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v1 = sub_1AD63B1C8();
  v21 = *(_QWORD *)(v1 - 8);
  v22 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v20 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v20 - v15;
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v17 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  sub_1AD63B0B4();
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v14, v7);
  sub_1AD63B210();
  sub_1AD63B0B4();
  v18(v11, v7);
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B18C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v22);
  MEMORY[0x1AF449E1C](v11, v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  v18(v14, v7);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v7);
}

uint64_t sub_1AD4857EC(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83B28);
}

uint64_t sub_1AD485800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v19[1] = a1;
  v1 = sub_1AD63B1C8();
  v20 = *(_QWORD *)(v1 - 8);
  v21 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v19 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v19 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v19 - v15;
  v22 = 980182388;
  v23 = 0xE400000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  if (qword_1EECD15A8 != -1)
    swift_once();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EED83B10);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v22 = v24;
  v23 = v25;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v11, v4);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v21);
  v17(v14, v4);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v4);
}

uint64_t sub_1AD485A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v24[0] = a3;
  v24[1] = a4;
  v6 = sub_1AD63B1C8();
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v24 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)v24 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v24 - v20;
  v27 = a1;
  v28 = a2;
  sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B210();
  sub_1AD63B0B4();
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v19, v9);
  v27 = v29;
  v28 = v30;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v22(v13, v9);
  v22(v16, v9);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  v22(v19, v9);
  return ((uint64_t (*)(char *, uint64_t))v22)(v21, v9);
}

uint64_t sub_1AD485CCC()
{
  sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD63B0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD485D64(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83B40);
}

uint64_t sub_1AD485D78()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD485D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  sub_1AD63B138();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B0B4();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t sub_1AD485E94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  _QWORD v32[2];
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a1;
  v42 = sub_1AD63B1C8();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v35 = (char *)v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v43 = *(_QWORD *)(v39 - 8);
  v2 = MEMORY[0x1E0C80A78](v39);
  v41 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v32 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v32 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v32 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v32 - v17;
  if (qword_1EECD15B0 != -1)
    swift_once();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EED83B28);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v38 = v18;
  sub_1AD63B0B4();
  v19 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  v36 = v16;
  sub_1AD63B0B4();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v34 = v13;
  v20(v13, v6);
  v37 = v20;
  sub_1AD63B210();
  sub_1AD63B0B4();
  v20(v10, v6);
  sub_1AD63B0C0();
  v21 = v35;
  sub_1AD63B0FC();
  v32[1] = sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v33 = v5;
  v22 = v19;
  v23 = v39;
  v24 = v21;
  sub_1AD63B18C();
  v25 = *(void (**)(char *, uint64_t))(v40 + 8);
  v26 = v42;
  v25(v21, v42);
  v27 = v41;
  MEMORY[0x1AF449E1C](v10, v22);
  sub_1AD63B0FC();
  v28 = v34;
  sub_1AD63B18C();
  v25(v24, v26);
  MEMORY[0x1AF449E1C](v10, v22);
  v29 = *(void (**)(char *, uint64_t))(v43 + 8);
  v29(v27, v23);
  v29(v33, v23);
  v30 = v37;
  v37(v28, v6);
  v30(v36, v6);
  return ((uint64_t (*)(char *, uint64_t))v30)(v38, v6);
}

unint64_t sub_1AD486250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EECDC9A0;
  if (!qword_1EECDC9A0)
  {
    v1 = sub_1AD63B108();
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0DEFE38], v1);
    atomic_store(result, (unint64_t *)&qword_1EECDC9A0);
  }
  return result;
}

uint64_t sub_1AD486298(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD4862E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD485A70(0x632D656E6F68703BLL, 0xEF3D747865746E6FLL, (uint64_t)sub_1AD486364, a1);
}

unint64_t sub_1AD486320()
{
  unint64_t result;

  result = qword_1EECDC9D0;
  if (!qword_1EECDC9D0)
  {
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0DEFF48], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EECDC9D0);
  }
  return result;
}

uint64_t sub_1AD48637C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD485A70(980182388, 0xE400000000000000, (uint64_t)sub_1AD4862E0, a1);
}

uint64_t sub_1AD4863A4()
{
  return sub_1AD63C0D4();
}

uint64_t sub_1AD4863E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1918);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = &unk_1EECDCA48;
    *(_QWORD *)(v9 + 24) = v8;
    v10[1] = &unk_1EECDCA50;
    v10[2] = v9;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
    sub_1AD63BA38();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AD486530(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  xpc_object_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for UnpackResponseSessionFinishedMessage(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v25 - v8;
  v10 = sub_1AD63B084();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  v9[*(int *)(v4 + 20)] = 1;
  type metadata accessor for XPCEncoder();
  v11 = swift_allocObject();
  *(_WORD *)(v11 + 16) = 0;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  v12 = sub_1AD608804((uint64_t)v9);
  v13 = xpc_connection_send_message_with_reply_sync(*(xpc_connection_t *)(v2 + 24), v12);
  swift_getObjectType();
  v14 = sub_1AD0E1E64();
  if (v14 == 7)
  {
    type metadata accessor for XPCDecoder();
    *(_WORD *)(swift_allocObject() + 16) = 0;
    sub_1AD6372D8((uint64_t)v13);
    if ((sub_1AD63B06C() & 1) != 0 && v7[*(int *)(v4 + 20)] == 1)
    {
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      sub_1AD066230((uint64_t)v7, type metadata accessor for UnpackResponseSessionFinishedMessage);
      v15 = (uint64_t)v9;
      return sub_1AD066230(v15, type metadata accessor for UnpackResponseSessionFinishedMessage);
    }
  }
  else if (v14 == 13)
  {
    if (qword_1ED2E32E8[0] != -1)
      swift_once();
    v16 = sub_1AD63B4B0();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED2E3090);
    swift_unknownObjectRetain_n();
    v17 = sub_1AD63B498();
    v18 = sub_1AD63BB7C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v25[2] = v12;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc();
      v27 = v21;
      *(_DWORD *)v20 = 136315138;
      v25[1] = v20 + 4;
      LOBYTE(v26) = sub_1AD0E2098();
      v22 = sub_1AD63B7A4();
      v26 = sub_1AD43D1D0(v22, v23, &v27);
      sub_1AD63BC60();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1ACFC8000, v17, v18, "Got an XPC Error: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF44BED4](v21, -1, -1);
      MEMORY[0x1AF44BED4](v20, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease_n();
    }

    swift_release();
    swift_unknownObjectRelease();
    v15 = (uint64_t)v9;
    return sub_1AD066230(v15, type metadata accessor for UnpackResponseSessionFinishedMessage);
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48698C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_task_switch();
}

uint64_t sub_1AD4869A4()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  os_log_type_t v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  os_log_type_t v26;
  NSObject *v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;

  v1 = (_QWORD *)(v0 + 56);
  swift_getObjectType();
  v2 = sub_1AD0E1E64();
  if (v2 == 13)
  {
    v5 = *v1;
    v6 = sub_1AD63B5B8();
    swift_unknownObjectRelease();
    if (v6 == v5)
    {
      v19 = sub_1AD63BB64();
      if (qword_1ED2E7540[0] != -1)
        swift_once();
      v20 = qword_1ED2E7530;
      if (os_log_type_enabled((os_log_t)qword_1ED2E7530, v19))
      {
        v21 = *(_QWORD *)(v0 + 64);
        swift_retain_n();
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        v34 = v23;
        *(_DWORD *)v22 = 136315138;
        *(_QWORD *)(v0 + 40) = *(_QWORD *)(v21 + 24);
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2CE0);
        v24 = sub_1AD63B7A4();
        *(_QWORD *)(v0 + 48) = sub_1AD43D1D0(v24, v25, &v34);
        sub_1AD63BC60();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_1ACFC8000, v20, v19, "XPC client %s closed connection.", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF44BED4](v23, -1, -1);
        MEMORY[0x1AF44BED4](v22, -1, -1);
      }
      if (swift_weakLoadStrong())
      {
        sub_1AD3F9538(*(_QWORD *)(v0 + 64));
        swift_release();
      }
    }
    else
    {
      v7 = *v1;
      v8 = sub_1AD63B5C4();
      swift_unknownObjectRelease();
      if (v8 == v7)
      {
        v26 = sub_1AD63BB64();
        if (qword_1ED2E7540[0] != -1)
          swift_once();
        v27 = qword_1ED2E7530;
        if (os_log_type_enabled((os_log_t)qword_1ED2E7530, v26))
        {
          v28 = *(_QWORD *)(v0 + 64);
          swift_retain_n();
          v29 = (uint8_t *)swift_slowAlloc();
          v30 = swift_slowAlloc();
          v34 = v30;
          *(_DWORD *)v29 = 136315138;
          *(_QWORD *)(v0 + 24) = *(_QWORD *)(v28 + 24);
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2CE0);
          v31 = sub_1AD63B7A4();
          *(_QWORD *)(v0 + 32) = sub_1AD43D1D0(v31, v32, &v34);
          sub_1AD63BC60();
          swift_bridgeObjectRelease();
          swift_release_n();
          _os_log_impl(&dword_1ACFC8000, v27, v26, "XPC client %s interrupted connection.", v29, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AF44BED4](v30, -1, -1);
          MEMORY[0x1AF44BED4](v29, -1, -1);
        }
      }
      else
      {
        v9 = (void *)MEMORY[0x1AF44C0A8](*v1);
        v10 = sub_1AD63B81C();
        v12 = v11;
        v13 = sub_1AD63BB64();
        if (qword_1ED2E7540[0] != -1)
          swift_once();
        v14 = qword_1ED2E7530;
        if (os_log_type_enabled((os_log_t)qword_1ED2E7530, v13))
        {
          swift_bridgeObjectRetain();
          v33 = v9;
          v15 = v10;
          v16 = (uint8_t *)swift_slowAlloc();
          v17 = swift_slowAlloc();
          v34 = v17;
          *(_DWORD *)v16 = 136315138;
          swift_bridgeObjectRetain();
          v18 = v15;
          v9 = v33;
          *(_QWORD *)(v0 + 16) = sub_1AD43D1D0(v18, v12, &v34);
          sub_1AD63BC60();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1ACFC8000, v14, v13, "XPC connection triggered error: %s.", v16, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AF44BED4](v17, -1, -1);
          MEMORY[0x1AF44BED4](v16, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        if (swift_weakLoadStrong())
        {
          sub_1AD3F9538(*(_QWORD *)(v0 + 64));
          swift_release();
        }
        free(v9);
      }
    }
  }
  else if (v2 == 7)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_1AD486F00;
    return sub_1AD486F48(*(_QWORD *)(v0 + 56));
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD486F00()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1AD486F48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[117] = v1;
  v2[116] = a1;
  v2[118] = type metadata accessor for EncoderErrorResponseMessage(0);
  v2[119] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1958);
  v2[120] = v3;
  v2[121] = *(_QWORD *)(v3 - 8);
  v2[122] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1950);
  v2[123] = v4;
  v2[124] = *(_QWORD *)(v4 - 8);
  v2[125] = swift_task_alloc();
  v5 = sub_1AD63B084();
  v2[126] = v5;
  v2[127] = *(_QWORD *)(v5 - 8);
  v2[128] = swift_task_alloc();
  v2[129] = swift_task_alloc();
  v2[130] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  v2[131] = swift_task_alloc();
  v2[132] = swift_task_alloc();
  v2[133] = swift_task_alloc();
  if (qword_1ED2E1820 != -1)
    swift_once();
  v2[134] = qword_1ED2E1810;
  return swift_task_switch();
}

_xpc_connection_s *sub_1AD4870B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  xpc_object_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  NSObject *v13;
  id v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  _OWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _xpc_connection_s *result;
  uint64_t v32;
  uint64_t v33;
  int v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  _xpc_connection_s *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  _xpc_connection_s *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  _BYTE *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  char isUniquelyReferenced_nonNull_native;
  void (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v125;

  swift_getObjectType();
  if (sub_1AD0E1E64() != 7)
  {
    __break(1u);
    goto LABEL_52;
  }
  v1 = *(_QWORD *)(v0 + 936) + 72;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 1080) = Strong;
  if (!Strong)
  {
    sub_1AD63BB7C();
    if (qword_1ED2E7328 != -1)
      swift_once();
    v24 = *(_QWORD *)(v0 + 936);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1AD648160;
    v26 = *(_DWORD *)(v24 + 64);
    v27 = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v0 + 1256) = *(_OWORD *)(v24 + 32);
    *(_OWORD *)(v0 + 1272) = v27;
    *(_DWORD *)(v0 + 1288) = v26;
    v28 = sub_1AD63B7A4();
    v30 = v29;
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 64) = sub_1AD0469B8();
    *(_QWORD *)(v25 + 32) = v28;
    *(_QWORD *)(v25 + 40) = v30;
    sub_1AD63B48C();
    swift_bridgeObjectRelease();
    return (_xpc_connection_s *)sub_1AD63BE28();
  }
  v3 = Strong;
  v4 = (xpc_object_t *)(v0 + 928);
  sub_1AD0E21A8(0);
  if (!v6)
  {
LABEL_19:
    sub_1AD63BB7C();
    if (qword_1ED2E7328 == -1)
    {
LABEL_20:
      sub_1AD63B48C();
      return (_xpc_connection_s *)sub_1AD63BE28();
    }
LABEL_53:
    swift_once();
    goto LABEL_20;
  }
  v7 = v5;
  v8 = v6;
  sub_1AD0E228C(1);
  *(_QWORD *)(v0 + 1088) = v9;
  if (!v9)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v10 = v9;
  v122 = v7;
  sub_1AD0E21A8(3);
  if (!v11)
  {
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  sub_1AD0E2374(2);
  v120 = (void *)sub_1AD63B744();
  *(_QWORD *)(v0 + 1096) = v120;
  swift_bridgeObjectRelease();
  v12 = sub_1AD63BB64();
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  v13 = qword_1ED2E7530;
  v119 = v10;
  if (os_log_type_enabled((os_log_t)qword_1ED2E7530, v12))
  {
    v14 = v120;
    v117 = v1;
    v15 = (uint8_t *)swift_slowAlloc();
    v115 = swift_slowAlloc();
    v125 = v115;
    *(_DWORD *)v15 = 136446210;
    *(_QWORD *)(v0 + 912) = v14;
    type metadata accessor for BlastDoorInstanceType(0);
    v16 = v14;
    v4 = (xpc_object_t *)(v0 + 928);
    v17 = sub_1AD63B7A4();
    *(_QWORD *)(v0 + 920) = sub_1AD43D1D0(v17, v18, &v125);
    sub_1AD63BC60();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1ACFC8000, v13, v12, "Unpacking with instance type: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF44BED4](v115, -1, -1);
    v19 = v15;
    v1 = v117;
    MEMORY[0x1AF44BED4](v19, -1, -1);
  }
  v20 = (_OWORD *)(v0 + 176);
  swift_beginAccess();
  v21 = *(_QWORD *)(v3 + 48);
  if (!*(_QWORD *)(v21 + 16))
  {
    *(_QWORD *)(v0 + 208) = 0;
    *v20 = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
LABEL_29:
    sub_1AD009758(v0 + 176, &qword_1ED2E2D20);
    sub_1AD63BB7C();
    if (qword_1ED2E7328 != -1)
      swift_once();
    v116 = *(_QWORD *)(v0 + 1064);
    v43 = *(_QWORD **)(v0 + 952);
    v44 = *(_QWORD *)(v0 + 936);
    v113 = *(_QWORD *)(v0 + 944);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1AD648170;
    v46 = *(_DWORD *)(v44 + 64);
    v47 = *(_OWORD *)(v44 + 48);
    *(_OWORD *)(v0 + 1220) = *(_OWORD *)(v44 + 32);
    *(_OWORD *)(v0 + 1236) = v47;
    *(_DWORD *)(v0 + 1252) = v46;
    v48 = sub_1AD63B7A4();
    v50 = v49;
    v51 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
    v52 = sub_1AD0469B8();
    *(_QWORD *)(v45 + 64) = v52;
    *(_QWORD *)(v45 + 32) = v48;
    *(_QWORD *)(v45 + 40) = v50;
    *(_QWORD *)(v0 + 880) = v122;
    *(_QWORD *)(v0 + 888) = v8;
    swift_bridgeObjectRetain();
    v53 = sub_1AD63B7A4();
    *(_QWORD *)(v45 + 96) = v51;
    *(_QWORD *)(v45 + 104) = v52;
    *(_QWORD *)(v45 + 72) = v53;
    *(_QWORD *)(v45 + 80) = v54;
    sub_1AD63B48C();
    swift_bridgeObjectRelease();
    sub_1ACFF64C0(v116, (uint64_t)v43 + *(int *)(v113 + 20), &qword_1ED2E7140);
    *v43 = 0xD000000000000013;
    v43[1] = 0x80000001AD6AB1D0;
    v43[2] = 0xD000000000000018;
    v43[3] = 0x80000001AD6AB1F0;
    v43[4] = v122;
    v43[5] = v8;
    type metadata accessor for XPCEncoder();
    v55 = swift_allocObject();
    *(_WORD *)(v55 + 16) = 0;
    *(_OWORD *)(v55 + 24) = 0u;
    *(_OWORD *)(v55 + 40) = 0u;
    *(_QWORD *)(v55 + 56) = 0;
    v56 = (void *)swift_unknownObjectRetain();
    result = (_xpc_connection_s *)xpc_dictionary_create_reply(v56);
    if (result)
    {
      v57 = result;
      v58 = *(_QWORD *)(v0 + 952);
      swift_unknownObjectRelease();
      *(_QWORD *)(v55 + 64) = v57;
      swift_beginAccess();
      *(_BYTE *)(v55 + 16) = 0;
      v59 = sub_1AD608840(v58);
      result = xpc_dictionary_get_remote_connection(*v4);
      if (result)
      {
        v60 = *(_QWORD *)(v0 + 1064);
        v61 = *(_QWORD *)(v0 + 952);
        xpc_connection_send_message(result, v59);
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release();

        sub_1AD066230(v61, type metadata accessor for EncoderErrorResponseMessage);
        v62 = v60;
LABEL_48:
        sub_1AD009758(v62, &qword_1ED2E7140);
        goto LABEL_49;
      }
      goto LABEL_56;
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_1AD0DFB48(v7, v8);
  if ((v23 & 1) != 0)
  {
    sub_1AD0CFC4C(*(_QWORD *)(v21 + 56) + 40 * v22, v0 + 176);
  }
  else
  {
    *(_QWORD *)(v0 + 208) = 0;
    *v20 = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 200))
    goto LABEL_29;
  v118 = (uint64_t *)v1;
  swift_bridgeObjectRelease();
  sub_1AD00FA24((__int128 *)(v0 + 176), v0 + 96);
  sub_1AD63BB64();
  if (qword_1ED2E7328 != -1)
    swift_once();
  v32 = *(_QWORD *)(v0 + 936);
  *(_QWORD *)(v0 + 1104) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1AD648170;
  v34 = *(_DWORD *)(v32 + 64);
  v35 = *(_OWORD *)(v32 + 48);
  *(_OWORD *)(v0 + 1184) = *(_OWORD *)(v32 + 32);
  *(_OWORD *)(v0 + 1200) = v35;
  *(_DWORD *)(v0 + 1216) = v34;
  v36 = sub_1AD63B7A4();
  v38 = v37;
  *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
  v39 = sub_1AD0469B8();
  *(_QWORD *)(v0 + 1112) = v39;
  *(_QWORD *)(v33 + 64) = v39;
  *(_QWORD *)(v33 + 32) = v36;
  *(_QWORD *)(v33 + 40) = v38;
  v123 = v0 + 96;
  sub_1AD0CFC4C(v0 + 96, v0 + 376);
  sub_1ACFF64C0(v0 + 376, v0 + 456, &qword_1ED2E2D20);
  if (*(_QWORD *)(v0 + 480))
  {
    sub_1AD00FA24((__int128 *)(v0 + 456), v0 + 416);
    sub_1AD0CFC4C(v0 + 416, v0 + 136);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2D18);
    v40 = sub_1AD63B7A4();
    v42 = v41;
    __swift_destroy_boxed_opaque_existential_1(v0 + 416);
  }
  else
  {
    v40 = 7104878;
    sub_1AD009758(v0 + 456, &qword_1ED2E2D20);
    v42 = 0xE300000000000000;
  }
  sub_1AD009758(v0 + 376, &qword_1ED2E2D20);
  *(_QWORD *)(v33 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v33 + 104) = v39;
  *(_QWORD *)(v33 + 72) = v40;
  *(_QWORD *)(v33 + 80) = v42;
  sub_1AD63B48C();
  swift_bridgeObjectRelease();
  type metadata accessor for XPCEncoder();
  v63 = swift_allocObject();
  *(_QWORD *)(v0 + 1120) = v63;
  *(_WORD *)(v63 + 16) = 0;
  *(_OWORD *)(v63 + 24) = 0u;
  *(_OWORD *)(v63 + 40) = 0u;
  *(_QWORD *)(v63 + 56) = 0;
  v64 = (void *)swift_unknownObjectRetain();
  result = (_xpc_connection_s *)xpc_dictionary_create_reply(v64);
  if (!result)
    goto LABEL_55;
  v65 = result;
  v66 = *(_QWORD *)(v0 + 1064);
  v67 = *(_QWORD *)(v0 + 1056);
  swift_unknownObjectRelease();
  *(_QWORD *)(v63 + 64) = v65;
  swift_beginAccess();
  *(_BYTE *)(v63 + 16) = 1;
  v114 = v0 + 536;
  sub_1AD0CFC4C(v123, v0 + 536);
  sub_1ACFF64C0(v66, v67, &qword_1ED2E7140);
  sub_1AD0CFC4C(v123, v0 + 576);
  swift_retain();
  *(_QWORD *)(v0 + 1128) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2D18);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2E1890);
  if (swift_dynamicCast())
  {
    sub_1AD00FA24((__int128 *)(v0 + 616), v0 + 256);
    v68 = *(_QWORD *)(v0 + 280);
    v69 = *(_QWORD *)(v0 + 288);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 256), v68);
    v82 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 16))(v119, v63, v68, v69);
    v83 = *(_QWORD *)(v0 + 936);
    sub_1AD009758(*(_QWORD *)(v0 + 1056), &qword_1ED2E7140);
    __swift_destroy_boxed_opaque_existential_1(v114);
    xpc_connection_send_message(*(xpc_connection_t *)(v83 + 24), v82);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 256);
    v84 = *(_QWORD *)(v0 + 1112);
    v85 = *(_QWORD *)(v0 + 936);
    __swift_destroy_boxed_opaque_existential_1(v0 + 576);
    sub_1AD63BB94();
    v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = xmmword_1AD648170;
    v87 = *(_DWORD *)(v85 + 64);
    v88 = *(_OWORD *)(v85 + 48);
    *(_OWORD *)(v0 + 1292) = *(_OWORD *)(v85 + 32);
    *(_OWORD *)(v0 + 1308) = v88;
    *(_DWORD *)(v0 + 1324) = v87;
    v89 = sub_1AD63B7A4();
    *(_QWORD *)(v86 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v86 + 64) = v84;
    *(_QWORD *)(v86 + 32) = v89;
    *(_QWORD *)(v86 + 40) = v90;
    sub_1AD0CFC4C(v123, v0 + 56);
    sub_1ACFF64C0(v0 + 56, v0 + 656, &qword_1ED2E2D20);
    if (*(_QWORD *)(v0 + 680))
    {
      sub_1AD00FA24((__int128 *)(v0 + 656), v0 + 216);
      sub_1AD0CFC4C(v0 + 216, v0 + 496);
      v91 = sub_1AD63B7A4();
      v93 = v92;
      __swift_destroy_boxed_opaque_existential_1(v0 + 216);
    }
    else
    {
      v91 = 7104878;
      sub_1AD009758(v0 + 656, &qword_1ED2E2D20);
      v93 = 0xE300000000000000;
    }
    v95 = *(_QWORD *)(v0 + 1112);
    v96 = *(void **)(v0 + 1096);
    sub_1AD009758(v0 + 56, &qword_1ED2E2D20);
    *(_QWORD *)(v86 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v86 + 104) = v95;
    *(_QWORD *)(v86 + 72) = v91;
    *(_QWORD *)(v86 + 80) = v93;
    sub_1AD63B48C();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    v97 = *(_QWORD *)(v0 + 1064);
    __swift_destroy_boxed_opaque_existential_1(v123);
    v62 = v97;
    goto LABEL_48;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDCA08);
  if (swift_dynamicCast())
  {
    sub_1AD00FA24((__int128 *)(v0 + 16), v0 + 296);
    v70 = *(_QWORD *)(v0 + 320);
    v71 = *(_QWORD *)(v0 + 328);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 296), v70);
    v124 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v71 + 16) + *(_QWORD *)(v71 + 16));
    v72 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1136) = v72;
    *v72 = v0;
    v72[1] = sub_1AD4882C0;
    return (_xpc_connection_s *)v124(v119, v63, v70, v71);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDCA10);
  if (!swift_dynamicCast())
  {
    v94 = *(_QWORD *)(v0 + 1056);
    swift_release();
    sub_1AD009758(v94, &qword_1ED2E7140);
    __swift_destroy_boxed_opaque_existential_1(v114);
    return (_xpc_connection_s *)sub_1AD63BE28();
  }
  v121 = v63;
  v73 = *(_QWORD *)(v0 + 1064);
  v74 = *(_QWORD *)(v0 + 1048);
  v75 = *(_QWORD *)(v0 + 1016);
  v76 = *(_QWORD *)(v0 + 1008);
  sub_1AD00FA24((__int128 *)(v0 + 696), v0 + 336);
  sub_1ACFF64C0(v73, v74, &qword_1ED2E7140);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v74, 1, v76) == 1)
  {
    v77 = *(_QWORD *)(v0 + 1064);
    v78 = *(_QWORD *)(v0 + 1056);
    v79 = *(_QWORD *)(v0 + 936);
    sub_1AD009758(*(_QWORD *)(v0 + 1048), &qword_1ED2E7140);
    sub_1AD489600();
    v80 = (void *)swift_allocError();
    *v81 = 1;
    sub_1AD488E88(v80, v79, v114, v78, v121);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    sub_1AD009758(v78, &qword_1ED2E7140);
    __swift_destroy_boxed_opaque_existential_1(v114);
    __swift_destroy_boxed_opaque_existential_1(v123);
    sub_1AD009758(v77, &qword_1ED2E7140);

    __swift_destroy_boxed_opaque_existential_1(v0 + 336);
    __swift_destroy_boxed_opaque_existential_1(v0 + 576);
LABEL_49:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (_xpc_connection_s *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v98 = *(_QWORD *)(v0 + 1040);
  v99 = *(_QWORD *)(v0 + 1032);
  v100 = *(_QWORD *)(v0 + 1016);
  v101 = *(_QWORD *)(v0 + 1008);
  v102 = *(_QWORD *)(v0 + 936);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v100 + 32))(v98, *(_QWORD *)(v0 + 1048), v101);
  v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16);
  *(_QWORD *)(v0 + 1160) = v103;
  v103(v99, v98, v101);
  v104 = swift_allocObject();
  *(_QWORD *)(v104 + 16) = sub_1AD4895F4;
  *(_QWORD *)(v104 + 24) = v102;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v125 = *v118;
  *v118 = 0x8000000000000000;
  sub_1AD43F7D0((uint64_t)sub_1AD489668, v104, v99, isUniquelyReferenced_nonNull_native);
  *v118 = v125;
  swift_bridgeObjectRelease();
  v106 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  *(_QWORD *)(v0 + 1168) = v106;
  v106(v99, v101);
  swift_endAccess();
  v107 = *(_QWORD *)(v0 + 360);
  v108 = *(_QWORD *)(v0 + 368);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 336), v107);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 16))(v119, v98, v121, v107, v108);
  v109 = *(_QWORD *)(v0 + 976);
  v110 = *(_QWORD *)(v0 + 968);
  v111 = *(_QWORD *)(v0 + 960);
  sub_1AD63BA50();
  (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v109, v111);
  sub_1ACFF9724((unint64_t *)&qword_1EECDCA20, (uint64_t (*)(uint64_t))type metadata accessor for UnpackerActor, (uint64_t)&protocol conformance descriptor for UnpackerActor);
  v112 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1176) = v112;
  *v112 = v0;
  v112[1] = sub_1AD4885F4;
  return (_xpc_connection_s *)sub_1AD63BAC8();
}

uint64_t sub_1AD4882C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 1144) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = *(_QWORD *)(v4 + 1056);
    *(_QWORD *)(v4 + 1152) = a1;
    sub_1AD009758(v5, &qword_1ED2E7140);
    __swift_destroy_boxed_opaque_existential_1(v4 + 536);
  }
  return swift_task_switch();
}

uint64_t sub_1AD488358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  xpc_connection_send_message(*(xpc_connection_t *)(*(_QWORD *)(v0 + 936) + 24), *(xpc_object_t *)(v0 + 1152));
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  v1 = *(_QWORD *)(v0 + 1112);
  v2 = *(_QWORD *)(v0 + 936);
  __swift_destroy_boxed_opaque_existential_1(v0 + 576);
  sub_1AD63BB94();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648170;
  v4 = *(_DWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v0 + 1292) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v0 + 1308) = v5;
  *(_DWORD *)(v0 + 1324) = v4;
  v6 = sub_1AD63B7A4();
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 64) = v1;
  *(_QWORD *)(v3 + 32) = v6;
  *(_QWORD *)(v3 + 40) = v7;
  sub_1AD0CFC4C(v0 + 96, v0 + 56);
  sub_1ACFF64C0(v0 + 56, v0 + 656, &qword_1ED2E2D20);
  if (*(_QWORD *)(v0 + 680))
  {
    sub_1AD00FA24((__int128 *)(v0 + 656), v0 + 216);
    sub_1AD0CFC4C(v0 + 216, v0 + 496);
    v8 = sub_1AD63B7A4();
    v10 = v9;
    __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  }
  else
  {
    sub_1AD009758(v0 + 656, &qword_1ED2E2D20);
    v10 = 0xE300000000000000;
    v8 = 7104878;
  }
  v11 = *(_QWORD *)(v0 + 1112);
  v12 = *(void **)(v0 + 1096);
  sub_1AD009758(v0 + 56, &qword_1ED2E2D20);
  *(_QWORD *)(v3 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 104) = v11;
  *(_QWORD *)(v3 + 72) = v8;
  *(_QWORD *)(v3 + 80) = v10;
  sub_1AD63B48C();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  v13 = *(_QWORD *)(v0 + 1064);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  sub_1AD009758(v13, &qword_1ED2E7140);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD4885F4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1AD488658()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;

  v1 = *(void **)(v0 + 904);
  if (v1)
  {
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 936) + 72) + 16) == 1)
    {
      v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
      v3 = *(_QWORD *)(v0 + 1040);
      v4 = *(_QWORD *)(v0 + 1024);
      v5 = *(_QWORD *)(v0 + 1008);
      v6 = sub_1AD63BB64();
      v7 = qword_1ED2E7530;
      v2(v4, v3, v5);
      v8 = v6;
      v9 = os_log_type_enabled(v7, v6);
      v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1168);
      v11 = *(_QWORD *)(v0 + 1024);
      v12 = *(_QWORD *)(v0 + 1008);
      if (v9)
      {
        v13 = swift_slowAlloc();
        v36 = swift_slowAlloc();
        v14 = v36;
        *(_DWORD *)v13 = 136315138;
        sub_1ACFF9724((unint64_t *)&unk_1EECDEDA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v15 = sub_1AD63C0D4();
        *(_QWORD *)(v13 + 4) = sub_1AD43D1D0(v15, v16, &v36);
        swift_bridgeObjectRelease();
        v10(v11, v12);
        _os_log_impl(&dword_1ACFC8000, v7, v8, "Sending frame update over xpc %s", (uint8_t *)v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF44BED4](v14, -1, -1);
        MEMORY[0x1AF44BED4](v13, -1, -1);
      }
      else
      {
        v10(*(_QWORD *)(v0 + 1024), *(_QWORD *)(v0 + 1008));
      }
      xpc_connection_send_message(*(xpc_connection_t *)(*(_QWORD *)(v0 + 936) + 24), v1);
      swift_unknownObjectRelease();
      sub_1ACFF9724((unint64_t *)&qword_1EECDCA20, (uint64_t (*)(uint64_t))type metadata accessor for UnpackerActor, (uint64_t)&protocol conformance descriptor for UnpackerActor);
      v30 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1176) = v30;
      *v30 = v0;
      v30[1] = sub_1AD4885F4;
      sub_1AD63BAC8();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v35 = *(void (**)(uint64_t, uint64_t))(v0 + 1168);
    v17 = *(_QWORD *)(v0 + 1056);
    v18 = *(_QWORD *)(v0 + 1040);
    v34 = *(_QWORD *)(v0 + 1008);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 992) + 8))(*(_QWORD *)(v0 + 1000), *(_QWORD *)(v0 + 984));
    sub_1AD009758(v17, &qword_1ED2E7140);
    __swift_destroy_boxed_opaque_existential_1(v0 + 536);
    sub_1AD486530(v18);
    swift_beginAccess();
    v19 = sub_1AD43D95C(v18);
    swift_endAccess();
    sub_1AD28D974(v19);
    v35(v18, v34);
    __swift_destroy_boxed_opaque_existential_1(v0 + 336);
    v20 = *(_QWORD *)(v0 + 1112);
    v21 = *(_QWORD *)(v0 + 936);
    __swift_destroy_boxed_opaque_existential_1(v0 + 576);
    sub_1AD63BB94();
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1AD648170;
    v23 = *(_DWORD *)(v21 + 64);
    v24 = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v0 + 1292) = *(_OWORD *)(v21 + 32);
    *(_OWORD *)(v0 + 1308) = v24;
    *(_DWORD *)(v0 + 1324) = v23;
    v25 = sub_1AD63B7A4();
    *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v22 + 64) = v20;
    *(_QWORD *)(v22 + 32) = v25;
    *(_QWORD *)(v22 + 40) = v26;
    sub_1AD0CFC4C(v0 + 96, v0 + 56);
    sub_1ACFF64C0(v0 + 56, v0 + 656, &qword_1ED2E2D20);
    if (*(_QWORD *)(v0 + 680))
    {
      sub_1AD00FA24((__int128 *)(v0 + 656), v0 + 216);
      sub_1AD0CFC4C(v0 + 216, v0 + 496);
      v27 = sub_1AD63B7A4();
      v29 = v28;
      __swift_destroy_boxed_opaque_existential_1(v0 + 216);
    }
    else
    {
      sub_1AD009758(v0 + 656, &qword_1ED2E2D20);
      v29 = 0xE300000000000000;
      v27 = 7104878;
    }
    v31 = *(_QWORD *)(v0 + 1112);
    v32 = *(void **)(v0 + 1096);
    sub_1AD009758(v0 + 56, &qword_1ED2E2D20);
    *(_QWORD *)(v22 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v22 + 104) = v31;
    *(_QWORD *)(v22 + 72) = v27;
    *(_QWORD *)(v22 + 80) = v29;
    sub_1AD63B48C();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    v33 = *(_QWORD *)(v0 + 1064);
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
    sub_1AD009758(v33, &qword_1ED2E7140);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1AD488B84()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  v1 = *(void **)(v0 + 1144);
  v2 = *(_QWORD *)(v0 + 1120);
  v3 = *(void **)(v0 + 1096);
  v4 = *(_QWORD *)(v0 + 1056);
  v5 = *(_QWORD *)(v0 + 936);
  __swift_destroy_boxed_opaque_existential_1(v0 + 576);
  sub_1AD488E88(v1, v5, v0 + 536, v4, v2);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  sub_1AD009758(v4, &qword_1ED2E7140);
  __swift_destroy_boxed_opaque_existential_1(v0 + 536);
  v6 = *(_QWORD *)(v0 + 1064);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  sub_1AD009758(v6, &qword_1ED2E7140);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD488CEC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1168);
  v2 = *(_QWORD *)(v0 + 1040);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 1000);
  v5 = *(_QWORD *)(v0 + 992);
  v6 = *(_QWORD *)(v0 + 984);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  v7 = *(void **)(v0 + 896);
  __swift_destroy_boxed_opaque_existential_1(v0 + 336);
  v8 = *(_QWORD *)(v0 + 1120);
  v9 = *(void **)(v0 + 1096);
  v10 = *(_QWORD *)(v0 + 1056);
  v11 = *(_QWORD *)(v0 + 936);
  __swift_destroy_boxed_opaque_existential_1(v0 + 576);
  sub_1AD488E88(v7, v11, v0 + 536, v10, v8);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  sub_1AD009758(v10, &qword_1ED2E7140);
  __swift_destroy_boxed_opaque_existential_1(v0 + 536);
  v12 = *(_QWORD *)(v0 + 1064);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  sub_1AD009758(v12, &qword_1ED2E7140);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD488E88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _xpc_connection_s *v36;
  uint64_t (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  _BYTE v61[40];
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;

  v53 = a5;
  v54 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  MEMORY[0x1E0C80A78](v8);
  v55 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1AD63B084();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x1E0C80A78](v10);
  v47 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for EncoderErrorResponseMessage(0);
  MEMORY[0x1E0C80A78](v50);
  v13 = (uint64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = a1;
  sub_1AD6015CC(a1, 0, 0, (unint64_t *)&v62);
  v15 = *((_QWORD *)&v62 + 1);
  v52 = v62;
  v16 = *((_QWORD *)&v63 + 1);
  v51 = v63;
  v17 = v64;
  v18 = v65;
  v49 = sub_1AD63BB7C();
  if (qword_1ED2E7328 != -1)
    swift_once();
  v48 = qword_1ED2E7528;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1AD64CE50;
  v20 = *(_DWORD *)(a2 + 64);
  v21 = *(_OWORD *)(a2 + 32);
  v22 = *(_OWORD *)(a2 + 48);
  v58 = a2;
  v62 = v21;
  v63 = v22;
  LODWORD(v64) = v20;
  v23 = sub_1AD63B7A4();
  v25 = v24;
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  v26 = sub_1AD0469B8();
  *(_QWORD *)(v19 + 64) = v26;
  *(_QWORD *)(v19 + 32) = v23;
  *(_QWORD *)(v19 + 40) = v25;
  sub_1AD0CFC4C(a3, (uint64_t)&v62);
  sub_1ACFF64C0((uint64_t)&v62, (uint64_t)&v59, &qword_1ED2E2D20);
  if (v60)
  {
    sub_1AD00FA24(&v59, (uint64_t)v61);
    sub_1AD0CFC4C((uint64_t)v61, (uint64_t)&v59);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2D18);
    v27 = sub_1AD63B7A4();
    v29 = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  }
  else
  {
    sub_1AD009758((uint64_t)&v59, &qword_1ED2E2D20);
    v29 = 0xE300000000000000;
    v27 = 7104878;
  }
  sub_1AD009758((uint64_t)&v62, &qword_1ED2E2D20);
  *(_QWORD *)(v19 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 104) = v26;
  *(_QWORD *)(v19 + 72) = v27;
  *(_QWORD *)(v19 + 80) = v29;
  v30 = v52;
  *(_QWORD *)&v62 = v52;
  *((_QWORD *)&v62 + 1) = v15;
  v31 = v51;
  *(_QWORD *)&v63 = v51;
  *((_QWORD *)&v63 + 1) = v16;
  v64 = v17;
  v65 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = sub_1AD63B7A4();
  *(_QWORD *)(v19 + 136) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 144) = v26;
  *(_QWORD *)(v19 + 112) = v32;
  *(_QWORD *)(v19 + 120) = v33;
  sub_1AD63B48C();
  swift_bridgeObjectRelease();
  v34 = v50;
  v35 = v54;
  sub_1ACFF64C0(v54, (uint64_t)v13 + *(int *)(v50 + 20), &qword_1ED2E7140);
  *v13 = v30;
  v13[1] = v15;
  v13[2] = v31;
  v13[3] = v16;
  v13[4] = v17;
  v13[5] = v18;
  v36 = *(_xpc_connection_s **)(v58 + 24);
  v37 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)v53 + 200);
  v38 = sub_1ACFF9724((unint64_t *)&unk_1EECDCA30, type metadata accessor for EncoderErrorResponseMessage, (uint64_t)&unk_1AD64C3A8);
  v39 = (void *)v37(v13, v34, v38);
  xpc_connection_send_message(v36, v39);
  swift_unknownObjectRelease();
  v40 = v55;
  sub_1ACFF64C0(v35, v55, &qword_1ED2E7140);
  v42 = v56;
  v41 = v57;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v40, 1, v57) == 1)
  {
    sub_1AD066230((uint64_t)v13, type metadata accessor for EncoderErrorResponseMessage);
    return sub_1AD009758(v40, &qword_1ED2E7140);
  }
  else
  {
    v44 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v47, v40, v41);
    swift_beginAccess();
    v45 = sub_1AD43D95C(v44);
    swift_endAccess();
    sub_1AD28D974(v45);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v41);
    return sub_1AD066230((uint64_t)v13, type metadata accessor for EncoderErrorResponseMessage);
  }
}

uint64_t sub_1AD489354()
{
  uint64_t v0;

  swift_weakDestroy();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD066230(v0 + OBJC_IVAR____TtC9BlastDoor16ClientConnection_clientConnectionQueue, (uint64_t (*)(_QWORD))type metadata accessor for AsyncSerialQueue);
  return v0;
}

uint64_t sub_1AD489398()
{
  uint64_t v0;

  swift_weakDestroy();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD066230(v0 + OBJC_IVAR____TtC9BlastDoor16ClientConnection_clientConnectionQueue, (uint64_t (*)(_QWORD))type metadata accessor for AsyncSerialQueue);
  return swift_deallocClassInstance();
}

__n128 sub_1AD4893E8@<Q0>(__n128 *a1@<X8>)
{
  __n128 **v1;
  unsigned __int32 v2;
  __n128 result;
  __n128 v4;

  v2 = (*v1)[4].n128_u32[0];
  result = (*v1)[2];
  v4 = (*v1)[3];
  *a1 = result;
  a1[1] = v4;
  a1[2].n128_u32[0] = v2;
  return result;
}

void sub_1AD489400()
{
  uint64_t v0;
  _xpc_connection_s *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(_xpc_connection_s **)(*(_QWORD *)v0 + 24);
  v2 = swift_allocObject();
  swift_weakInit();
  v4[4] = sub_1AD3FA570;
  v4[5] = v2;
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 1107296256;
  v4[2] = sub_1AD608798;
  v4[3] = &block_descriptor_2;
  v3 = _Block_copy(v4);
  swift_release();
  xpc_connection_set_event_handler(v1, v3);
  _Block_release(v3);
  xpc_connection_activate(v1);
}

uint64_t sub_1AD4894BC()
{
  return sub_1AD63C0D4();
}

uint64_t sub_1AD489500()
{
  return type metadata accessor for ClientConnection();
}

uint64_t type metadata accessor for ClientConnection()
{
  uint64_t result;

  result = qword_1ED2E1850;
  if (!qword_1ED2E1850)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1AD489544()
{
  unint64_t v0;

  sub_1AD39DFA8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1AD4895DC()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD4895E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

void sub_1AD4895F4(xpc_object_t message)
{
  uint64_t v1;

  xpc_connection_send_message(*(xpc_connection_t *)(v1 + 24), message);
}

unint64_t sub_1AD489600()
{
  unint64_t result;

  result = qword_1EECDCA18;
  if (!qword_1EECDCA18)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD68E2D0, &type metadata for SessionUnpackerError);
    atomic_store(result, (unint64_t *)&qword_1EECDCA18);
  }
  return result;
}

uint64_t sub_1AD489644()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD489668(_QWORD *a1)
{
  uint64_t v1;

  return sub_1AD6087E0(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_1AD489670()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1AD489694()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD4896C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1AD13F52C;
  *(_OWORD *)(v2 + 56) = v3;
  return swift_task_switch();
}

uint64_t sub_1AD489724@<X0>(_QWORD *a1@<X8>)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  swift_getObjectType();
  v2 = sub_1AD0E2098();
  v3 = 0xEE00646568736172;
  v4 = 0x4365636976726553;
  v5 = 0xEC000000726F7272;
  v6 = 0x456E776F6E6B6E55;
  if (!v2)
  {
    v6 = 0xD000000000000011;
    v5 = 0x80000001AD6AB3A0;
  }
  if (v2 != 1)
  {
    v4 = v6;
    v3 = v5;
  }
  if (v2 == 2)
    v7 = 0xD000000000000013;
  else
    v7 = v4;
  if (v2 == 2)
    v8 = 0x80000001AD6AB380;
  else
    v8 = v3;
  result = swift_unknownObjectRelease();
  *a1 = 0xD000000000000017;
  a1[1] = 0x80000001AD6AB360;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = 0;
  a1[5] = 0;
  return result;
}

uint64_t sub_1AD489810()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7330);
  sub_1AD00F8EC();
  sub_1AD63B720();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD63AE8C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD4898B8()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7330);
  sub_1AD00F8EC();
  sub_1AD63B720();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  return 47;
}

uint64_t sub_1AD489954(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_1AD63B894();
  else
    return 0;
}

uint64_t sub_1AD489994()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1AD48999C@<X0>(unint64_t result@<X0>, char a2@<W2>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if ((a2 & 1) == 0)
  {
    if (result)
      goto LABEL_9;
    __break(1u);
  }
  if (HIDWORD(result))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (result >> 11 == 27)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (WORD1(result) > 0x10u)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if ((result & 0xFFFFFF80) == 0 && result > 0xFF)
  {
    __break(1u);
    goto LABEL_27;
  }
LABEL_9:
  while (1)
  {
    v4 = sub_1AD63B7E0();
    v6 = v5;
    swift_bridgeObjectRetain();
    v7 = sub_1AD489954(v4, v6);
    v9 = v8;
    result = swift_bridgeObjectRelease();
    if (!v9)
      break;
    if (v7 == 47 && v9 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_14:
      sub_1AD0442F4();
      v11 = sub_1AD63BCA8();
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v11 + 16);
      if (v12)
      {
        v25 = MEMORY[0x1E0DEE9D8];
        sub_1AD1474DC(0, v12, 0);
        v13 = v25;
        v14 = (uint64_t *)(v11 + 56);
        do
        {
          v15 = *(v14 - 3);
          v16 = *(v14 - 2);
          v17 = *(v14 - 1);
          v18 = *v14;
          swift_bridgeObjectRetain();
          v19 = MEMORY[0x1AF44A4AC](v15, v16, v17, v18);
          v21 = v20;
          swift_bridgeObjectRelease();
          v23 = *(_QWORD *)(v25 + 16);
          v22 = *(_QWORD *)(v25 + 24);
          if (v23 >= v22 >> 1)
            sub_1AD1474DC(v22 > 1, v23 + 1, 1);
          *(_QWORD *)(v25 + 16) = v23 + 1;
          v24 = v25 + 16 * v23;
          *(_QWORD *)(v24 + 32) = v19;
          *(_QWORD *)(v24 + 40) = v21;
          v14 += 4;
          --v12;
        }
        while (v12);
        result = swift_bridgeObjectRelease();
      }
      else
      {
        result = swift_bridgeObjectRelease();
        v13 = MEMORY[0x1E0DEE9D8];
      }
      *a3 = v13;
      return result;
    }
    v10 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_14;
LABEL_24:
    __break(1u);
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1AD489C60@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  __int128 v31;
  uint64_t v32;

  v4 = v3;
  sub_1AD0442F4();
  v5 = sub_1AD63BCA8();
  v6 = *(_QWORD *)(v5 + 16);
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v8 = (_QWORD *)(v5 + 56);
    do
    {
      v13 = *(v8 - 3);
      if ((*(v8 - 2) ^ v13) >= 0x4000)
      {
        v31 = *((_OWORD *)v8 - 1);
        v14 = *v8;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1AD14781C(0, v7[2] + 1, 1);
        v10 = v7[2];
        v9 = v7[3];
        v11 = v31;
        if (v10 >= v9 >> 1)
        {
          sub_1AD14781C(v9 > 1, v10 + 1, 1);
          v11 = v31;
        }
        v7[2] = v10 + 1;
        v12 = &v7[4 * v10];
        v12[4] = v13;
        *(_OWORD *)(v12 + 5) = v11;
        v12[7] = v14;
      }
      v8 += 4;
      --v6;
    }
    while (v6);
  }
  swift_bridgeObjectRelease();
  v15 = sub_1AD489954(a1, a2);
  v17 = v16;
  swift_bridgeObjectRelease();
  if (!v17)
  {
LABEL_19:
    sub_1AD489F68(&v32);
    v18 = v7[2];
    if (!v18)
    {
LABEL_24:
      result = swift_release();
      *a3 = v32;
      return result;
    }
    goto LABEL_20;
  }
  if ((v15 != 47 || v17 != 0xE100000000000000) && (sub_1AD63C2A8() & 1) == 0)
  {
    if (v15 == 126 && v17 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = sub_1AD63C2A8();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
        goto LABEL_19;
    }
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  v32 = MEMORY[0x1E0DEE9D8];
  v18 = v7[2];
  if (!v18)
    goto LABEL_24;
LABEL_20:
  swift_retain();
  v20 = v7 + 7;
  while (1)
  {
    v21 = *(v20 - 1);
    v22 = *v20;
    v24 = *(v20 - 3);
    v23 = *(v20 - 2);
    swift_bridgeObjectRetain();
    v25 = MEMORY[0x1AF44A4AC](v24, v23, v21, v22);
    sub_1AD48A12C(v25, v26);
    if (v4)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 += 4;
    if (!--v18)
    {
      swift_release();
      goto LABEL_24;
    }
  }
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD489F68@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v3 = objc_msgSend(v2, sel_currentDirectoryPath);

  sub_1AD63B768();
  sub_1AD0442F4();
  v4 = sub_1AD63BC78();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v15 = a1;
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1AD1474DC(0, v5, 0);
    v6 = v16;
    v7 = v4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      v8 = sub_1AD63B8A0();
      v10 = v9;
      v12 = *(_QWORD *)(v16 + 16);
      v11 = *(_QWORD *)(v16 + 24);
      if (v12 >= v11 >> 1)
        sub_1AD1474DC(v11 > 1, v12 + 1, 1);
      v7 += 16;
      *(_QWORD *)(v16 + 16) = v12 + 1;
      v13 = v16 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      --v5;
    }
    while (v5);
    result = swift_bridgeObjectRelease();
    a1 = v15;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  *a1 = v6;
  return result;
}

uint64_t sub_1AD48A12C(uint64_t a1, unint64_t a2)
{
  _QWORD **v2;
  uint64_t v3;
  _QWORD *v4;
  char *v7;
  char v8;
  uint64_t result;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;

  v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
  {
    sub_1AD48ACF8();
    swift_allocError();
    v8 = 0;
    goto LABEL_14;
  }
  v4 = v2;
  sub_1AD0442F4();
  if ((sub_1AD63BC9C() & 1) != 0)
  {
    sub_1AD48ACF8();
    swift_allocError();
    v8 = 1;
LABEL_14:
    *v7 = v8;
    return swift_willThrow();
  }
  if (a1 == 46 && a2 == 0xE100000000000000
    || (sub_1AD63C2A8() & 1) != 0
    || a1 == 11822 && a2 == 0xE200000000000000
    || (sub_1AD63C2A8() & 1) != 0)
  {
    sub_1AD48ACF8();
    swift_allocError();
    v8 = 2;
    goto LABEL_14;
  }
  v10 = *v2;
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1AD3CBA00(0, v10[2] + 1, 1, v10);
    v10 = (_QWORD *)result;
  }
  v11 = v10[2];
  v12 = v10[3];
  v13 = v11 + 1;
  if (v11 >= v12 >> 1)
  {
    v17 = v11 + 1;
    v15 = v10;
    v16 = v10[2];
    result = (uint64_t)sub_1AD3CBA00((_QWORD *)(v12 > 1), v11 + 1, 1, v15);
    v11 = v16;
    v13 = v17;
    v10 = (_QWORD *)result;
  }
  v10[2] = v13;
  v14 = &v10[2 * v11];
  v14[4] = a1;
  v14[5] = a2;
  *v4 = v10;
  return result;
}

uint64_t sub_1AD48A32C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char *v16;
  uint64_t result;
  _QWORD *v18;

  v1 = v0;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7330);
  sub_1AD00F8EC();
  sub_1AD63B720();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = sub_1AD63B7B0();
  swift_bridgeObjectRelease();
  v3 = realpath_DARWIN_EXTSN((const char *)(v2 + 32), 0);
  swift_release();
  if (!v3)
  {
    v15 = 4;
LABEL_16:
    sub_1AD48ACF8();
    swift_allocError();
    *v16 = v15;
    return swift_willThrow();
  }
  MEMORY[0x1AF44A4B8](v3);
  if (!v4)
  {
    v15 = 3;
    goto LABEL_16;
  }
  v18 = v1;
  sub_1AD0442F4();
  v5 = sub_1AD63BC78();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = (uint64_t *)(v5 + 40);
    v8 = MEMORY[0x1E0DEE9D8];
    do
    {
      v12 = *(v7 - 1);
      v13 = *v7;
      v14 = HIBYTE(*v7) & 0xF;
      if ((*v7 & 0x2000000000000000) == 0)
        v14 = v12 & 0xFFFFFFFFFFFFLL;
      if (v14)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1AD1474DC(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
          sub_1AD1474DC(v9 > 1, v10 + 1, 1);
        *(_QWORD *)(v8 + 16) = v10 + 1;
        v11 = v8 + 16 * v10;
        *(_QWORD *)(v11 + 32) = v12;
        *(_QWORD *)(v11 + 40) = v13;
      }
      v7 += 2;
      --v6;
    }
    while (v6);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v18 = v8;
  return result;
}

uint64_t sub_1AD48A574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  v5 = *v1;
  swift_bridgeObjectRetain();
  sub_1AD48A32C();
  result = v5;
  if (v2)
    return swift_bridgeObjectRelease();
  *a1 = v5;
  return result;
}

uint64_t sub_1AD48A5C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;

  v9 = *v3;
  swift_bridgeObjectRetain();
  sub_1AD48A12C(a1, a2);
  result = v9;
  if (v4)
    return swift_bridgeObjectRelease();
  *a3 = v9;
  return result;
}

uint64_t sub_1AD48A634(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *i;
  uint64_t v5;
  unint64_t v6;

  v2 = v1;
  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    for (i = (unint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      swift_bridgeObjectRetain();
      sub_1AD48A12C(v5, v6);
      if (v2)
        break;
      swift_bridgeObjectRelease();
      if (!--v3)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD48A6C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t *i;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = v3;
  v12 = *v2;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    for (i = (unint64_t *)(a1 + 40); ; i += 2)
    {
      v9 = *(i - 1);
      v10 = *i;
      swift_bridgeObjectRetain();
      sub_1AD48A12C(v9, v10);
      if (v4)
        break;
      swift_bridgeObjectRelease();
      if (!--v7)
      {
        result = swift_bridgeObjectRelease();
        *a2 = v12;
        return result;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRetain();
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AD48A79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16 * v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1AD48A7E4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD **v1;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;

  v3 = *v1;
  if (v3[2])
  {
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
    {
      v5 = v3[2];
      if (v5)
      {
LABEL_4:
        v3[2] = v5 - 1;
        result = swift_bridgeObjectRelease();
        *a1 = v3;
        return result;
      }
    }
    else
    {
      result = (uint64_t)sub_1AD48ADB8(v3);
      v3 = (_QWORD *)result;
      v5 = *(_QWORD *)(result + 16);
      if (v5)
        goto LABEL_4;
    }
    __break(1u);
  }
  else
  {
    *a1 = v3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1AD48A868(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1AD48A878@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[2];
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = sub_1AD63AF28();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v7 = objc_msgSend(v6, sel_temporaryDirectory);

  sub_1AD63AED4();
  v8 = sub_1AD63AE80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v21 = a1;
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1AD1474DC(0, v9, 0);
    v10 = v24;
    v20[1] = v8;
    v11 = (uint64_t *)(v8 + 40);
    do
    {
      v12 = *v11;
      v22 = *(v11 - 1);
      v23 = v12;
      swift_bridgeObjectRetain();
      v13 = sub_1AD63B8A0();
      v15 = v14;
      v24 = v10;
      v17 = *(_QWORD *)(v10 + 16);
      v16 = *(_QWORD *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1AD1474DC(v16 > 1, v17 + 1, 1);
        v10 = v24;
      }
      v11 += 2;
      *(_QWORD *)(v10 + 16) = v17 + 1;
      v18 = v10 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
      --v9;
    }
    while (v9);
    result = swift_bridgeObjectRelease();
    a1 = v21;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  *a1 = v10;
  return result;
}

uint64_t sub_1AD48AA48@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  if ((sub_1AD63AE5C() & 1) != 0)
  {
    v4 = sub_1AD63AEEC();
    sub_1AD489C60(v4, v5, &v10);
    v7 = sub_1AD63AF28();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    v9 = v10;
  }
  else
  {
    v6 = sub_1AD63AF28();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    v9 = 0;
  }
  *a2 = v9;
  return result;
}

uint64_t sub_1AD48AAE4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD63C518();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    v5 = sub_1AD63C2B4();
    sub_1AD489C60(v5, v6, &v9);
    v8 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    *a2 = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AD48ABB4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD63C530();
  v6 = v2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7330);
  sub_1AD00F8EC();
  sub_1AD63B720();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1AD63C2F0();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1AD48ACB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD48AAE4(a1, a2);
}

uint64_t sub_1AD48ACCC(_QWORD *a1)
{
  return sub_1AD48ABB4(a1);
}

uint64_t sub_1AD48ACE0(_QWORD **a1, _QWORD **a2)
{
  return sub_1AD350DB4(*a1, *a2);
}

uint64_t sub_1AD48ACEC(_QWORD **a1, _QWORD **a2)
{
  return sub_1AD350DB4(*a1, *a2);
}

unint64_t sub_1AD48ACF8()
{
  unint64_t result;

  result = qword_1EECDCA58;
  if (!qword_1EECDCA58)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD68793C, &type metadata for PathComponentError);
    atomic_store(result, (unint64_t *)&qword_1EECDCA58);
  }
  return result;
}

_QWORD *sub_1AD48AD3C(_QWORD *a1)
{
  return sub_1AD3CACBC(0, a1[2], 0, a1);
}

void sub_1AD48AD50(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1AD63BE34();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1AF44AA4CLL);
}

_QWORD *sub_1AD48ADB8(_QWORD *a1)
{
  return sub_1AD3CBA00(0, a1[2], 0, a1);
}

ValueMetadata *type metadata accessor for Path()
{
  return &type metadata for Path;
}

uint64_t storeEnumTagSinglePayload for PathComponentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD48AE28 + 4 * byte_1AD687825[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD48AE5C + 4 * byte_1AD687820[v4]))();
}

uint64_t sub_1AD48AE5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD48AE64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD48AE6CLL);
  return result;
}

uint64_t sub_1AD48AE78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD48AE80);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD48AE84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD48AE8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PathComponentError()
{
  return &type metadata for PathComponentError;
}

unint64_t sub_1AD48AEAC()
{
  unint64_t result;

  result = qword_1EECDCA60;
  if (!qword_1EECDCA60)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687914, &type metadata for PathComponentError);
    atomic_store(result, (unint64_t *)&qword_1EECDCA60);
  }
  return result;
}

uint64_t sub_1AD48AEF0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD48AF20(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD48AF70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD48AFE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD48B004(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD48B048()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
    return *(_QWORD *)(v0 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48B0A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48B174(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    return sub_1AD415B88;
  }
  return result;
}

void (*sub_1AD48B1E8(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  *v3 = *(_QWORD *)v1;
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD39B914;
}

uint64_t (*sub_1AD48B250(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD34BDE0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD48B2D8(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34BF10;
}

uint64_t sub_1AD48B33C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(v1 + 56);
  return sub_1AD28DA0C(v2);
}

__n128 sub_1AD48B358(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  sub_1AD28D974(*(_QWORD *)(v1 + 32));
  result = v5;
  *(__n128 *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 48) = v2;
  *(_BYTE *)(v1 + 56) = v3;
  return result;
}

uint64_t (*sub_1AD48B3B0())()
{
  return nullsub_1;
}

uint64_t sub_1AD48B3C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;

  v3 = *(_QWORD *)(v1 + 32);
  if (v3)
  {
    v7 = *(_OWORD *)(v1 + 40);
    v4 = *(_BYTE *)(v1 + 56) & 1;
    result = swift_retain();
    v6 = v7;
  }
  else
  {
    v4 = 0;
    v6 = 0uLL;
  }
  *(_QWORD *)a1 = v3;
  *(_OWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 24) = v4;
  return result;
}

uint64_t sub_1AD48B428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A24BC, (uint64_t (*)(void))sub_1AD2A2434);
}

uint64_t sub_1AD48B43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28D9C8, (uint64_t (*)(void))sub_1AD28DA20);
}

uint64_t sub_1AD48B450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD48B464, (uint64_t (*)(void))sub_1AD48B4A8);
}

unint64_t sub_1AD48B464()
{
  unint64_t result;

  result = qword_1EECDCA68;
  if (!qword_1EECDCA68)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD652348, &type metadata for CPMGroupManagement);
    atomic_store(result, (unint64_t *)&qword_1EECDCA68);
  }
  return result;
}

unint64_t sub_1AD48B4A8()
{
  unint64_t result;

  result = qword_1EECDCA70;
  if (!qword_1EECDCA70)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD652370, &type metadata for CPMGroupManagement);
    atomic_store(result, (unint64_t *)&qword_1EECDCA70);
  }
  return result;
}

uint64_t sub_1AD48B4F0(uint64_t *a1)
{
  return sub_1AD00387C(*a1);
}

uint64_t sub_1AD48B514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD48B534(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_1AD48B590(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD48B5CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t destroy for CPMGroupManagement(uint64_t a1)
{
  uint64_t result;

  swift_release();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for CPMGroupManagement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v7 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v7;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return a1;
}

uint64_t assignWithCopy for CPMGroupManagement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a1 + 32);
  v7 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v6;
      *(_QWORD *)(a1 + 40) = v8;
      swift_retain();
      swift_release();
      v9 = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v9;
    }
    else
    {
      sub_1AD48B7C8(a1 + 32);
      v12 = *(_OWORD *)(a2 + 41);
      *v5 = *v7;
      *(_OWORD *)(a1 + 41) = v12;
    }
  }
  else if (v6)
  {
    v10 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v10;
    v11 = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v11;
    swift_retain();
  }
  else
  {
    v13 = *v7;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    *v5 = v13;
  }
  return a1;
}

uint64_t sub_1AD48B7C8(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t assignWithTake for CPMGroupManagement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  if (!v5)
  {
    sub_1AD48B7C8(a1 + 32);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    return a1;
  }
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for CPMGroupManagement()
{
  return &type metadata for CPMGroupManagement;
}

uint64_t destroy for CPMGroupManagement.Response()
{
  return swift_release();
}

uint64_t assignWithTake for CPMGroupManagement.Response(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for CPMGroupManagement.Response()
{
  return &type metadata for CPMGroupManagement.Response;
}

uint64_t _s9BlastDoor18CPMGroupManagementV8ResponseVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t _s9BlastDoor18CPMGroupManagementV8ResponseVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for CPMGroupManagement.GroupData()
{
  return &type metadata for CPMGroupManagement.GroupData;
}

uint64_t sub_1AD48B9B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  LOBYTE(v3) = *((_BYTE *)v3 + 24);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = (_BYTE)v3;
  return swift_retain();
}

uint64_t type metadata accessor for MessagingCharacteristic(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDCA88);
}

__n128 sub_1AD48BA0C(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 *v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 24));
  swift_release();
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD48BA60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = (_BYTE)v3;
  return swift_retain();
}

__n128 sub_1AD48BAAC(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 *v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  v6 = (__n128 *)(v1 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 36));
  swift_release();
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v3;
  v6[1].n128_u8[8] = v4;
  v6[1].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD48BB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 24);
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48BB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 36);
  if ((*(_BYTE *)(v1 + 25) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48BBF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD48BC14(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD48BC58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 56);
  v5 = *(_BYTE *)(v1 + 57);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 25) = v5;
  return swift_retain();
}

__n128 sub_1AD48BC7C(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  swift_release();
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u8[8] = v4;
  v1[3].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD48BCD0()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
    return *(_QWORD *)(v0 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48BD30()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 57) & 1) == 0)
    return *(_QWORD *)(v0 + 48);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48BDA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  LOBYTE(v3) = *((_BYTE *)v3 + 24);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = (_BYTE)v3;
  return swift_retain();
}

uint64_t type metadata accessor for ChatCharacteristic(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDCAC8);
}

__n128 sub_1AD48BDF8(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 *v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 32));
  swift_release();
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD48BE4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  LOBYTE(v3) = *((_BYTE *)v3 + 24);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = (_BYTE)v3;
  return swift_retain();
}

__n128 sub_1AD48BE90(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 *v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 36));
  swift_release();
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD48BEE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = (_BYTE)v3;
  return swift_retain();
}

__n128 sub_1AD48BF30(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 *v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  v6 = (__n128 *)(v1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 40));
  swift_release();
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v3;
  v6[1].n128_u8[8] = v4;
  v6[1].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD48BF94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = (_BYTE)v3;
  return swift_retain();
}

__n128 sub_1AD48BFE0(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 *v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  v6 = (__n128 *)(v1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 44));
  swift_release();
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v3;
  v6[1].n128_u8[8] = v4;
  v6[1].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD48C048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 32);
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48C0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 36);
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48C128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 40);
  if ((*(_BYTE *)(v1 + 25) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48C1A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 44);
  if ((*(_BYTE *)(v1 + 25) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48C21C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 25);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 25) = v5;
  return swift_retain();
}

__n128 sub_1AD48C244(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  swift_release();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u8[8] = v4;
  v1[1].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD48C298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD48C2B4(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD48C2F8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 36));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t type metadata accessor for FileTransferCharacteristic(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDCAD8);
}

__n128 sub_1AD48C35C(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 36));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD48C3C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 40));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 sub_1AD48C410(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 40));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD48C474@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  LOBYTE(v3) = *((_BYTE *)v3 + 24);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = (_BYTE)v3;
  return swift_retain();
}

__n128 sub_1AD48C4B8(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 *v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 48));
  swift_release();
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD48C510()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 25) & 1) == 0)
    return *(_QWORD *)(v0 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48C578()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
    return *(_QWORD *)(v0 + 48);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48C5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 36);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD48C664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 40);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD48C6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 48);
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD48C760@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD48C77C()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD48C784()
{
  sub_1AD496C78();
  return sub_1AD63B930();
}

uint64_t sub_1AD48C7E0()
{
  sub_1AD496C78();
  return sub_1AD63B8D0();
}

uint64_t sub_1AD48C82C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, &qword_1EECD4800);
}

uint64_t sub_1AD48C850(uint64_t a1)
{
  uint64_t v1;

  return sub_1ACFF6540(a1, v1, &qword_1EECD4800);
}

uint64_t (*sub_1AD48C870())()
{
  return nullsub_1;
}

uint64_t sub_1AD48C880@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD48D65C(type metadata accessor for MessagingCharacteristic, &qword_1EECD47F8, a1);
}

uint64_t sub_1AD48C894(uint64_t a1)
{
  return sub_1AD48D6B8(a1, type metadata accessor for MessagingCharacteristic, &qword_1EECD47F8);
}

uint64_t (*sub_1AD48C8A8())(_QWORD)
{
  type metadata accessor for MessagingCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48C8D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = type metadata accessor for MessagingCharacteristic(0);
  v5 = a1 + *(int *)(result + 24);
  if ((*(_BYTE *)(v5 + 24) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v5 + 16);
  }
  return result;
}

uint64_t sub_1AD48C954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 24);
  v4 = *(uint64_t (**)(uint64_t *))v3;
  v7 = a1;
  result = v4(&v7);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v3 + 16) = a1;
    *(_BYTE *)(v3 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48CA2C(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*result)();

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for MessagingCharacteristic(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 24) & 1) != 0)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    return sub_1AD48CAC0;
  }
  return result;
}

uint64_t sub_1AD48CAC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = a2 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = v2;
  *(_QWORD *)(v6 + 16) = v4;
  *(_BYTE *)(v6 + 24) = v5;
  return result;
}

uint64_t (*sub_1AD48CB2C(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for MessagingCharacteristic(0) + 24);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  LOBYTE(v5) = *((_BYTE *)v5 + 24);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = (_BYTE)v5;
  swift_retain();
  return sub_1AD48CBA4;
}

uint64_t sub_1AD48CBA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MessagingCharacteristic(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t sub_1AD48CBD8(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for MessagingCharacteristic(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

uint64_t (*sub_1AD48CC04())(_QWORD)
{
  type metadata accessor for MessagingCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48CC2C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 32));
}

uint64_t sub_1AD48CC4C(char a1)
{
  return sub_1AD48F760(a1, type metadata accessor for MessagingCharacteristic);
}

uint64_t (*sub_1AD48CC58())(_QWORD)
{
  type metadata accessor for MessagingCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48CC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = type metadata accessor for MessagingCharacteristic(0);
  v5 = a1 + *(int *)(result + 36);
  if ((*(_BYTE *)(v5 + 25) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_BYTE *)(v5 + 24);
    *(_QWORD *)a2 = *(_QWORD *)(v5 + 16);
    *(_BYTE *)(a2 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_1AD48CD10(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  char v10;

  v4 = a2 & 1;
  v5 = v2 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 36);
  v6 = *(uint64_t (**)(uint64_t *))v5;
  v9 = a1;
  v10 = v4;
  result = v6(&v9);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = v4;
    *(_BYTE *)(v5 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v8 = 0x6E776F6E6B6E753CLL;
    v8[1] = 0xE90000000000003ELL;
    v8[2] = 0xD00000000000001CLL;
    v8[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48CDF4(uint64_t a1))(uint64_t *)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for MessagingCharacteristic(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_BYTE *)(v4 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_BYTE *)(a1 + 8) = v5 & 1;
    return sub_1AD443B10;
  }
  return result;
}

uint64_t sub_1AD48CE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD48CEE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *((_BYTE *)a1 + 25);
  v7 = a2 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 36);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v2;
  *(_QWORD *)(v7 + 16) = v4;
  *(_BYTE *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 25) = v6;
  return result;
}

void (*sub_1AD48CF5C(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for MessagingCharacteristic(0) + 36);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  LOBYTE(v5) = *((_BYTE *)v5 + 25);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = v9;
  *((_BYTE *)v3 + 25) = (_BYTE)v5;
  swift_retain();
  return sub_1AD443C5C;
}

uint64_t sub_1AD48CFDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessagingCharacteristic(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 40), a1, &qword_1EECD47F0);
}

uint64_t sub_1AD48D018(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessagingCharacteristic(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 40), &qword_1EECD47F0);
}

uint64_t (*sub_1AD48D054())(_QWORD)
{
  type metadata accessor for MessagingCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48D07C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessagingCharacteristic(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 44), a1, &qword_1EECD47E8);
}

uint64_t sub_1AD48D0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessagingCharacteristic(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 44), &qword_1EECD47E8);
}

uint64_t (*sub_1AD48D0F4())(_QWORD)
{
  type metadata accessor for MessagingCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48D11C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48D1E8(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    return sub_1AD415B88;
  }
  return result;
}

void (*sub_1AD48D25C(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  *v3 = *(_QWORD *)v1;
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD39B914;
}

uint64_t sub_1AD48D2C0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t *);
  char v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  char v9;

  v4 = *(uint64_t (**)(uint64_t *))(v2 + 32);
  v5 = a2 & 1;
  v8 = a1;
  v9 = a2 & 1;
  result = v4(&v8);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v2 + 48) = a1;
    *(_BYTE *)(v2 + 56) = v5;
    *(_BYTE *)(v2 + 57) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48D398(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  if ((*(_BYTE *)(v1 + 57) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(v1 + 56);
    *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
    *(_BYTE *)(a1 + 8) = v2 & 1;
    return sub_1AD445A54;
  }
  return result;
}

void (*sub_1AD48D418(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 56);
  v7 = *(_BYTE *)(v1 + 57);
  *v3 = *(_QWORD *)(v1 + 32);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  *((_BYTE *)v3 + 25) = v7;
  swift_retain();
  return sub_1AD445C00;
}

uint64_t sub_1AD48D484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StandaloneMsgCharacteristic(0) + 24);
  v4 = sub_1AD63AF28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for StandaloneMsgCharacteristic(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDCAB8);
}

uint64_t sub_1AD48D4E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StandaloneMsgCharacteristic(0) + 24);
  v4 = sub_1AD63AF28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*sub_1AD48D528())(_QWORD)
{
  type metadata accessor for StandaloneMsgCharacteristic(0);
  return nullsub_1;
}

uint64_t (*sub_1AD48D554(uint64_t a1))(uint64_t *)
{
  uint64_t v1;
  char v2;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  if ((*(_BYTE *)(v1 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(v1 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
    *(_BYTE *)(a1 + 8) = v2 & 1;
    return sub_1AD48D5D4;
  }
  return result;
}

void (*sub_1AD48D5D8(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  v7 = *(_BYTE *)(v1 + 25);
  *v3 = *(_QWORD *)v1;
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  *((_BYTE *)v3 + 25) = v7;
  swift_retain();
  return sub_1AD48D644;
}

uint64_t sub_1AD48D648@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD48D65C(type metadata accessor for ChatCharacteristic, &qword_1ED2E1A40, a1);
}

uint64_t sub_1AD48D65C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_1ACFF64C0(v3 + *(int *)(v6 + 20), a3, a2);
}

uint64_t sub_1AD48D6A4(uint64_t a1)
{
  return sub_1AD48D6B8(a1, type metadata accessor for ChatCharacteristic, &qword_1ED2E1A40);
}

uint64_t sub_1AD48D6B8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_1ACFF6540(a1, v3 + *(int *)(v6 + 20), a3);
}

uint64_t (*sub_1AD48D6FC())(_QWORD)
{
  type metadata accessor for ChatCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48D724()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 24));
}

uint64_t sub_1AD48D744(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ChatCharacteristic(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_1AD48D770())(_QWORD)
{
  type metadata accessor for ChatCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48D798()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 28));
}

uint64_t sub_1AD48D7B8(char a1)
{
  return sub_1AD48F6E0(a1, type metadata accessor for ChatCharacteristic);
}

uint64_t (*sub_1AD48D7C4())(_QWORD)
{
  type metadata accessor for ChatCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48D7EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = type metadata accessor for ChatCharacteristic(0);
  v5 = a1 + *(int *)(result + 32);
  if ((*(_BYTE *)(v5 + 24) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v5 + 16);
  }
  return result;
}

uint64_t sub_1AD48D870(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 32);
  v4 = *(uint64_t (**)(uint64_t *))v3;
  v7 = a1;
  result = v4(&v7);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v3 + 16) = a1;
    *(_BYTE *)(v3 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48D948(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*result)();

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for ChatCharacteristic(0) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 24) & 1) != 0)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    return sub_1AD48CAC0;
  }
  return result;
}

uint64_t sub_1AD48D9DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = a2 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 32);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = v2;
  *(_QWORD *)(v6 + 16) = v4;
  *(_BYTE *)(v6 + 24) = v5;
  return result;
}

uint64_t (*sub_1AD48DA44(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for ChatCharacteristic(0) + 32);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  LOBYTE(v5) = *((_BYTE *)v5 + 24);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = (_BYTE)v5;
  swift_retain();
  return sub_1AD48CBA4;
}

uint64_t sub_1AD48DABC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = type metadata accessor for ChatCharacteristic(0);
  v5 = a1 + *(int *)(result + 36);
  if ((*(_BYTE *)(v5 + 24) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v5 + 16);
  }
  return result;
}

uint64_t sub_1AD48DB40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 36);
  v4 = *(uint64_t (**)(uint64_t *))v3;
  v7 = a1;
  result = v4(&v7);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v3 + 16) = a1;
    *(_BYTE *)(v3 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48DC18(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*result)();

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for ChatCharacteristic(0) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 24) & 1) != 0)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    return sub_1AD48CAC0;
  }
  return result;
}

uint64_t sub_1AD48DCAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = a2 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 36);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = v2;
  *(_QWORD *)(v6 + 16) = v4;
  *(_BYTE *)(v6 + 24) = v5;
  return result;
}

uint64_t (*sub_1AD48DD14(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for ChatCharacteristic(0) + 36);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  LOBYTE(v5) = *((_BYTE *)v5 + 24);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = (_BYTE)v5;
  swift_retain();
  return sub_1AD48CBA4;
}

uint64_t sub_1AD48DD8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = type metadata accessor for ChatCharacteristic(0);
  v5 = a1 + *(int *)(result + 40);
  if ((*(_BYTE *)(v5 + 25) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_BYTE *)(v5 + 24);
    *(_QWORD *)a2 = *(_QWORD *)(v5 + 16);
    *(_BYTE *)(a2 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_1AD48DE1C(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  char v10;

  v4 = a2 & 1;
  v5 = v2 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 40);
  v6 = *(uint64_t (**)(uint64_t *))v5;
  v9 = a1;
  v10 = v4;
  result = v6(&v9);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = v4;
    *(_BYTE *)(v5 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v8 = 0x6E776F6E6B6E753CLL;
    v8[1] = 0xE90000000000003ELL;
    v8[2] = 0xD00000000000001CLL;
    v8[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48DF00(uint64_t a1))(uint64_t *)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for ChatCharacteristic(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_BYTE *)(v4 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_BYTE *)(a1 + 8) = v5 & 1;
    return sub_1AD443B10;
  }
  return result;
}

uint64_t sub_1AD48DFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD48DFF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *((_BYTE *)a1 + 25);
  v7 = a2 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 40);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v2;
  *(_QWORD *)(v7 + 16) = v4;
  *(_BYTE *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 25) = v6;
  return result;
}

void (*sub_1AD48E068(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for ChatCharacteristic(0) + 40);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  LOBYTE(v5) = *((_BYTE *)v5 + 25);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = v9;
  *((_BYTE *)v3 + 25) = (_BYTE)v5;
  swift_retain();
  return sub_1AD443C5C;
}

uint64_t sub_1AD48E0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = type metadata accessor for ChatCharacteristic(0);
  v5 = a1 + *(int *)(result + 44);
  if ((*(_BYTE *)(v5 + 25) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_BYTE *)(v5 + 24);
    *(_QWORD *)a2 = *(_QWORD *)(v5 + 16);
    *(_BYTE *)(a2 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_1AD48E178(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  char v10;

  v4 = a2 & 1;
  v5 = v2 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 44);
  v6 = *(uint64_t (**)(uint64_t *))v5;
  v9 = a1;
  v10 = v4;
  result = v6(&v9);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = v4;
    *(_BYTE *)(v5 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v8 = 0x6E776F6E6B6E753CLL;
    v8[1] = 0xE90000000000003ELL;
    v8[2] = 0xD00000000000001CLL;
    v8[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48E25C(uint64_t a1))(uint64_t *)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for ChatCharacteristic(0) + 44);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_BYTE *)(v4 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_BYTE *)(a1 + 8) = v5 & 1;
    return sub_1AD443B10;
  }
  return result;
}

uint64_t sub_1AD48E2FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD48E34C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *((_BYTE *)a1 + 25);
  v7 = a2 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 44);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v2;
  *(_QWORD *)(v7 + 16) = v4;
  *(_BYTE *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 25) = v6;
  return result;
}

void (*sub_1AD48E3C4(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for ChatCharacteristic(0) + 44);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  LOBYTE(v5) = *((_BYTE *)v5 + 25);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = v9;
  *((_BYTE *)v3 + 25) = (_BYTE)v5;
  swift_retain();
  return sub_1AD443C5C;
}

uint64_t sub_1AD48E444()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 48));
}

uint64_t sub_1AD48E464(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ChatCharacteristic(0);
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*sub_1AD48E490())(_QWORD)
{
  type metadata accessor for ChatCharacteristic(0);
  return nullsub_1;
}

uint64_t (*sub_1AD48E4BC(uint64_t a1))(uint64_t *)
{
  uint64_t v1;
  char v2;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  if ((*(_BYTE *)(v1 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(v1 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
    *(_BYTE *)(a1 + 8) = v2 & 1;
    return sub_1AD48D5D4;
  }
  return result;
}

void (*sub_1AD48E53C(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  v7 = *(_BYTE *)(v1 + 25);
  *v3 = *(_QWORD *)v1;
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  *((_BYTE *)v3 + 25) = v7;
  swift_retain();
  return sub_1AD48D644;
}

uint64_t sub_1AD48E5A8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 56) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(result + 48);
  }
  return result;
}

uint64_t sub_1AD48E60C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))(v1 + 32);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 48) = a1;
    *(_BYTE *)(v1 + 56) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48E6D8(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 48);
    return sub_1AD48E74C;
  }
  return result;
}

uint64_t sub_1AD48E74C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(uint64_t (**)(uint64_t *))(v1 + 32);
  v6 = *a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 48) = v2;
    *(_BYTE *)(v1 + 56) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*sub_1AD48E814(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 56);
  *v3 = *(_QWORD *)(v1 + 32);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD39BC84;
}

uint64_t sub_1AD48E878()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_1AD48E880(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 57) = result;
  return result;
}

uint64_t (*sub_1AD48E888())()
{
  return nullsub_1;
}

uint64_t sub_1AD48E898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FileTransferCharacteristic(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 28), a1, &qword_1ED2E1A40);
}

uint64_t sub_1AD48E8D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FileTransferCharacteristic(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 28), &qword_1ED2E1A40);
}

uint64_t (*sub_1AD48E910())(_QWORD)
{
  type metadata accessor for FileTransferCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48E938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FileTransferCharacteristic(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 32), a1, &qword_1ED2E1A40);
}

uint64_t sub_1AD48E974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FileTransferCharacteristic(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 32), &qword_1ED2E1A40);
}

uint64_t (*sub_1AD48E9B0())(_QWORD)
{
  type metadata accessor for FileTransferCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48E9D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 36);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD48EA60(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for FileTransferCharacteristic(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD48EAAC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FileTransferCharacteristic(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD48EAF0(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 36);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD48EB90@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 36));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD48EBE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 36));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD48EC68(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 36);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD48ECE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 40);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD48ED68(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for FileTransferCharacteristic(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD48EDB4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FileTransferCharacteristic(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD48EDF8(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 40);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD48EE98@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 40));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD48EEEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 40));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD48EF70(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 40);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD48EFE8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 44));
}

uint64_t sub_1AD48F008(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FileTransferCharacteristic(0);
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*sub_1AD48F034())(_QWORD)
{
  type metadata accessor for FileTransferCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48F05C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = type metadata accessor for FileTransferCharacteristic(0);
  v5 = a1 + *(int *)(result + 48);
  if ((*(_BYTE *)(v5 + 24) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v5 + 16);
  }
  return result;
}

uint64_t sub_1AD48F0E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 48);
  v4 = *(uint64_t (**)(uint64_t *))v3;
  v7 = a1;
  result = v4(&v7);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v3 + 16) = a1;
    *(_BYTE *)(v3 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD48F1B8(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*result)();

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 48);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 24) & 1) != 0)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    return sub_1AD48CAC0;
  }
  return result;
}

uint64_t sub_1AD48F24C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v1 = *a1;
  v2 = a1[1] + *((int *)a1 + 4);
  v3 = *(uint64_t (**)(uint64_t *))v2;
  v6 = *a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v2 + 16) = v1;
    *(_BYTE *)(v2 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD48F31C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = a2 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 48);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = v2;
  *(_QWORD *)(v6 + 16) = v4;
  *(_BYTE *)(v6 + 24) = v5;
  return result;
}

uint64_t (*sub_1AD48F384(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 48);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  LOBYTE(v5) = *((_BYTE *)v5 + 24);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = (_BYTE)v5;
  swift_retain();
  return sub_1AD48CBA4;
}

void sub_1AD48F3FC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *a1;
  v3 = (*a1)[4] + *((int *)*a1 + 7);
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v6;
    *(_BYTE *)(v3 + 24) = v7;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v6;
    *(_BYTE *)(v3 + 24) = v7;
  }
  free(v2);
}

unint64_t sub_1AD48F490@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD48F4A4()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1AD48F4AC@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD48F490(*a1, a2);
}

uint64_t sub_1AD48F4B4()
{
  sub_1AD496C34();
  return sub_1AD63B930();
}

uint64_t sub_1AD48F510()
{
  sub_1AD496C34();
  return sub_1AD63B8D0();
}

uint64_t sub_1AD48F55C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, &qword_1ED2E1A40);
}

uint64_t sub_1AD48F580(uint64_t a1)
{
  uint64_t v1;

  return sub_1ACFF6540(a1, v1, &qword_1ED2E1A40);
}

uint64_t (*sub_1AD48F5A0())()
{
  return nullsub_1;
}

uint64_t sub_1AD48F5B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD48D65C(type metadata accessor for ChatbotCharacteristic, &qword_1ED2E1A40, a1);
}

uint64_t type metadata accessor for ChatbotCharacteristic(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDCAE8);
}

uint64_t sub_1AD48F5D8(uint64_t a1)
{
  return sub_1AD48D6B8(a1, type metadata accessor for ChatbotCharacteristic, &qword_1ED2E1A40);
}

uint64_t (*sub_1AD48F5EC())(_QWORD)
{
  type metadata accessor for ChatbotCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48F614@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ChatbotCharacteristic(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 24), a1, &qword_1ED2E1A40);
}

uint64_t sub_1AD48F650(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ChatbotCharacteristic(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 24), &qword_1ED2E1A40);
}

uint64_t (*sub_1AD48F68C())(_QWORD)
{
  type metadata accessor for ChatbotCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48F6B4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ChatbotCharacteristic(0) + 28));
}

uint64_t sub_1AD48F6D4(char a1)
{
  return sub_1AD48F6E0(a1, type metadata accessor for ChatbotCharacteristic);
}

uint64_t sub_1AD48F6E0(char a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t result;

  result = a2(0);
  *(_BYTE *)(v2 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_1AD48F70C())(_QWORD)
{
  type metadata accessor for ChatbotCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48F734()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ChatbotCharacteristic(0) + 32));
}

uint64_t sub_1AD48F754(char a1)
{
  return sub_1AD48F760(a1, type metadata accessor for ChatbotCharacteristic);
}

uint64_t sub_1AD48F760(char a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t result;

  result = a2(0);
  *(_BYTE *)(v2 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*sub_1AD48F78C())(_QWORD)
{
  type metadata accessor for ChatbotCharacteristic(0);
  return nullsub_1;
}

uint64_t sub_1AD48F7B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ChatbotCharacteristic(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t sub_1AD48F7E4(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for ChatbotCharacteristic(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*sub_1AD48F810())(_QWORD)
{
  type metadata accessor for ChatbotCharacteristic(0);
  return nullsub_1;
}

unint64_t sub_1AD48F83C()
{
  unint64_t result;

  result = qword_1EECDCA78;
  if (!qword_1EECDCA78)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687A34, &type metadata for MessagingCharacteristic.OneToManyTech);
    atomic_store(result, (unint64_t *)&qword_1EECDCA78);
  }
  return result;
}

uint64_t sub_1AD48F880(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD4540, type metadata accessor for MessagingCharacteristic, (uint64_t)&unk_1AD652988);
  result = sub_1ACFF9724(&qword_1EECD4580, type metadata accessor for MessagingCharacteristic, (uint64_t)&unk_1AD6529B0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD48F8DC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD4820, type metadata accessor for StandaloneMsgCharacteristic, (uint64_t)&unk_1AD6529D8);
  result = sub_1ACFF9724(&qword_1EECD4870, type metadata accessor for StandaloneMsgCharacteristic, (uint64_t)&unk_1AD652A00);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD48F938(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD4830, type metadata accessor for ChatCharacteristic, (uint64_t)&unk_1AD652A28);
  result = sub_1ACFF9724(&qword_1EECD4880, type metadata accessor for ChatCharacteristic, (uint64_t)&unk_1AD652A50);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD48F994(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD4848, type metadata accessor for FileTransferCharacteristic, (uint64_t)&unk_1AD652A78);
  result = sub_1ACFF9724(&qword_1EECD4898, type metadata accessor for FileTransferCharacteristic, (uint64_t)&unk_1AD652AA0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD48F9F4()
{
  unint64_t result;

  result = qword_1EECDCA80;
  if (!qword_1EECDCA80)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687B94, &type metadata for ChatbotCharacteristic.ChatbotMessageTech);
    atomic_store(result, (unint64_t *)&qword_1EECDCA80);
  }
  return result;
}

uint64_t sub_1AD48FA38(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD4858, type metadata accessor for ChatbotCharacteristic, (uint64_t)&unk_1AD652AC8);
  result = sub_1ACFF9724(&qword_1EECD48A8, type metadata accessor for ChatbotCharacteristic, (uint64_t)&unk_1AD652AF0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD48FA98(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  type metadata accessor for MessagingCharacteristic(0);
  return sub_1AD00387C(v1);
}

uint64_t sub_1AD48FAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for MessagingCharacteristic(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  LOBYTE(v3) = *((_BYTE *)v3 + 24);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD48FB28(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  type metadata accessor for MessagingCharacteristic(0);
  return sub_1AD003180(v1, v2);
}

uint64_t sub_1AD48FB7C(uint64_t *a1)
{
  return sub_1AD00387C(*a1);
}

uint64_t sub_1AD48FBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD48FBC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_1AD48FC1C(uint64_t a1)
{
  return sub_1AD003180(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1AD48FC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  v5 = *(_BYTE *)(a1 + 57);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  *(_BYTE *)(a2 + 25) = v5;
  return swift_retain();
}

uint64_t sub_1AD48FC78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD445480(a1, a2);
}

uint64_t sub_1AD48FC8C(uint64_t a1)
{
  return sub_1AD003180(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1AD48FCBC(uint64_t *a1, uint64_t a2)
{
  return sub_1AD445720(a1, a2);
}

uint64_t sub_1AD48FCD4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  type metadata accessor for ChatCharacteristic(0);
  return sub_1AD00387C(v1);
}

uint64_t sub_1AD48FD14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  LOBYTE(v3) = *((_BYTE *)v3 + 24);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD48FD64(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  type metadata accessor for ChatCharacteristic(0);
  return sub_1AD00387C(v1);
}

uint64_t sub_1AD48FDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ChatCharacteristic(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  LOBYTE(v3) = *((_BYTE *)v3 + 24);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD48FDF4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  type metadata accessor for ChatCharacteristic(0);
  return sub_1AD003180(v1, v2);
}

uint64_t sub_1AD48FE48(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  type metadata accessor for ChatCharacteristic(0);
  return sub_1AD003180(v1, v2);
}

uint64_t sub_1AD48FE98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD445480(a1, a2);
}

uint64_t keypath_get_17Tm@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 25);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  *(_BYTE *)(a2 + 25) = v5;
  return swift_retain();
}

uint64_t sub_1AD48FED8(uint64_t *a1, uint64_t a2)
{
  return sub_1AD445720(a1, a2);
}

uint64_t sub_1AD48FEF0(uint64_t *a1)
{
  return sub_1AD00387C(*a1);
}

uint64_t sub_1AD48FF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD48FF34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v5;
  *(_BYTE *)(a2 + 56) = v6;
  return result;
}

uint64_t sub_1AD48FFB0(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  type metadata accessor for FileTransferCharacteristic(0);
  return sub_1AD00387C(v1);
}

uint64_t sub_1AD48FFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FileTransferCharacteristic(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  LOBYTE(v3) = *((_BYTE *)v3 + 24);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = (_BYTE)v3;
  return swift_retain();
}

uint64_t *sub_1AD49003C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  int *v59;
  uint64_t v60;
  unsigned int (*v61)(_QWORD *, uint64_t, int *);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  uint64_t v78;
  _OWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  _OWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v92;
  char *v93;
  char *v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(char *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  int *v115;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  char *v118;
  uint64_t v119;
  uint64_t v120;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for StandaloneMsgCharacteristic(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4800);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      a1[6] = a2[6];
      *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
      v13 = *(int *)(v7 + 24);
      v118 = (char *)a1 + v13;
      v14 = (char *)a2 + v13;
      v15 = sub_1AD63AF28();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_retain();
      swift_retain();
      v16(v118, v14, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v17 = v6[5];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = (int *)type metadata accessor for ChatCharacteristic(0);
    v21 = *((_QWORD *)v20 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v23 = v19[1];
      *v18 = *v19;
      v18[1] = v23;
      v18[2] = v19[2];
      *((_WORD *)v18 + 12) = *((_WORD *)v19 + 12);
      v24 = v20[5];
      __dst = (char *)v18 + v24;
      v119 = v21;
      v25 = (char *)v19 + v24;
      v26 = sub_1AD63AF28();
      v114 = *(_QWORD *)(v26 - 8);
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48);
      swift_retain();
      if (v27(v25, 1, v26))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v114 + 16))(__dst, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(__dst, 0, 1, v26);
      }
      *((_BYTE *)v18 + v20[6]) = *((_BYTE *)v19 + v20[6]);
      *((_BYTE *)v18 + v20[7]) = *((_BYTE *)v19 + v20[7]);
      v29 = v20[8];
      v30 = (char *)v18 + v29;
      v31 = (char *)v19 + v29;
      v32 = *((_QWORD *)v31 + 1);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *((_QWORD *)v30 + 1) = v32;
      *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
      v30[24] = v31[24];
      v33 = v20[9];
      v34 = (char *)v18 + v33;
      v35 = (char *)v19 + v33;
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
      v34[24] = v35[24];
      v37 = v20[10];
      v38 = (char *)v18 + v37;
      v39 = (char *)v19 + v37;
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *((_QWORD *)v38 + 1) = v40;
      *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
      *((_WORD *)v38 + 12) = *((_WORD *)v39 + 12);
      v41 = v20[11];
      v42 = (char *)v18 + v41;
      v43 = (char *)v19 + v41;
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      *((_QWORD *)v42 + 2) = *((_QWORD *)v43 + 2);
      *((_WORD *)v42 + 12) = *((_WORD *)v43 + 12);
      *((_BYTE *)v18 + v20[12]) = *((_BYTE *)v19 + v20[12]);
      v45 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v119 + 56);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v45(v18, 0, 1, v20);
    }
    v46 = v6[6];
    v47 = v6[7];
    v48 = (char *)a1 + v46;
    v49 = (char *)a2 + v46;
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
    v48[24] = v49[24];
    *((_BYTE *)a1 + v47) = *((_BYTE *)a2 + v47);
    v51 = v6[9];
    *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
    v52 = (char *)a1 + v51;
    v53 = (char *)a2 + v51;
    v54 = *(_QWORD *)v53;
    v55 = *((_QWORD *)v53 + 2);
    *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
    *((_QWORD *)v52 + 2) = v55;
    *((_WORD *)v52 + 12) = *((_WORD *)v53 + 12);
    v56 = v6[10];
    v57 = (uint64_t *)((char *)a1 + v56);
    v58 = (uint64_t *)((char *)a2 + v56);
    *(_QWORD *)v52 = v54;
    v59 = (int *)type metadata accessor for FileTransferCharacteristic(0);
    v60 = *((_QWORD *)v59 - 1);
    v61 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v60 + 48);
    swift_retain();
    swift_retain();
    if (v61(v58, 1, v59))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F0);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v115 = v6;
      v120 = v60;
      v63 = v58[1];
      *v57 = *v58;
      v57[1] = v63;
      v57[2] = v58[2];
      *((_WORD *)v57 + 12) = *((_WORD *)v58 + 12);
      v64 = v58[5];
      v57[4] = v58[4];
      v57[5] = v64;
      v57[6] = v58[6];
      *((_BYTE *)v57 + 56) = *((_BYTE *)v58 + 56);
      *((_BYTE *)v57 + 57) = *((_BYTE *)v58 + 57);
      v65 = v59[7];
      v112 = (char *)v57 + v65;
      v113 = (char *)v58 + v65;
      v66 = sub_1AD63AF28();
      v67 = *(_QWORD *)(v66 - 8);
      v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
      swift_retain();
      swift_retain();
      __dsta = v68;
      v111 = v67;
      if (v68(v113, 1, v66))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v112, v113, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v112, 0, 1, v66);
      }
      v70 = v59[8];
      v71 = (char *)v57 + v70;
      v72 = (char *)v58 + v70;
      v73 = v120;
      v6 = v115;
      if (__dsta((char *)v58 + v70, 1, v66))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v71, v72, v66);
        v73 = v120;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v71, 0, 1, v66);
      }
      v75 = v59[9];
      v76 = (char *)v57 + v75;
      v77 = (_QWORD *)((char *)v58 + v75);
      v78 = v77[1];
      *(_QWORD *)v76 = *v77;
      *((_QWORD *)v76 + 1) = v78;
      v79 = v77 + 2;
      v80 = v77[3];
      swift_retain();
      if (v80 == 1)
      {
        *((_OWORD *)v76 + 1) = *v79;
      }
      else
      {
        *((_QWORD *)v76 + 2) = *(_QWORD *)v79;
        *((_QWORD *)v76 + 3) = v80;
        swift_bridgeObjectRetain();
      }
      v81 = v59[10];
      v82 = (char *)v57 + v81;
      v83 = (_QWORD *)((char *)v58 + v81);
      v84 = v83[1];
      *(_QWORD *)v82 = *v83;
      *((_QWORD *)v82 + 1) = v84;
      v85 = v83 + 2;
      v86 = v83[3];
      swift_retain();
      if (v86 == 1)
      {
        *((_OWORD *)v82 + 1) = *v85;
      }
      else
      {
        *((_QWORD *)v82 + 2) = *(_QWORD *)v85;
        *((_QWORD *)v82 + 3) = v86;
        swift_bridgeObjectRetain();
      }
      *((_BYTE *)v57 + v59[11]) = *((_BYTE *)v58 + v59[11]);
      v87 = v59[12];
      v88 = (char *)v57 + v87;
      v89 = (char *)v58 + v87;
      v90 = *((_QWORD *)v89 + 1);
      *(_QWORD *)v88 = *(_QWORD *)v89;
      *((_QWORD *)v88 + 1) = v90;
      *((_QWORD *)v88 + 2) = *((_QWORD *)v89 + 2);
      v88[24] = v89[24];
      v91 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v73 + 56);
      swift_retain();
      v91(v57, 0, 1, v59);
    }
    v92 = v6[11];
    v93 = (char *)a1 + v92;
    v94 = (char *)a2 + v92;
    v95 = (int *)type metadata accessor for ChatbotCharacteristic(0);
    v96 = *((_QWORD *)v95 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v96 + 48))(v94, 1, v95))
    {
      v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47E8);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      v98 = sub_1AD63AF28();
      v99 = *(_QWORD *)(v98 - 8);
      v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
      if (v100(v94, 1, v98))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v93, v94, v98);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v93, 0, 1, v98);
      }
      v102 = v95[5];
      v103 = &v93[v102];
      v104 = &v94[v102];
      if (v100(&v94[v102], 1, v98))
      {
        v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v103, v104, v98);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v103, 0, 1, v98);
      }
      v106 = v95[6];
      v107 = &v93[v106];
      v108 = &v94[v106];
      if (v100(&v94[v106], 1, v98))
      {
        v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v107, v108, v98);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v107, 0, 1, v98);
      }
      v93[v95[7]] = v94[v95[7]];
      v93[v95[8]] = v94[v95[8]];
      v93[v95[9]] = v94[v95[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v96 + 56))(v93, 0, 1, v95);
    }
  }
  return a1;
}

uint64_t sub_1AD49087C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for StandaloneMsgCharacteristic(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_release();
    swift_release();
    v5 = a1 + *(int *)(v4 + 24);
    v6 = sub_1AD63AF28();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + a2[5];
  v8 = type metadata accessor for ChatCharacteristic(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_release();
    v9 = v7 + *(int *)(v8 + 20);
    v10 = sub_1AD63AF28();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  v12 = a1 + a2[10];
  v13 = (int *)type metadata accessor for FileTransferCharacteristic(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
  {
    swift_release();
    swift_release();
    v14 = v12 + v13[7];
    v15 = sub_1AD63AF28();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v17(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v18 = v12 + v13[8];
    if (!v17(v18, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
    v19 = v12 + v13[9];
    swift_release();
    if (*(_QWORD *)(v19 + 24) != 1)
      swift_bridgeObjectRelease();
    v20 = v12 + v13[10];
    swift_release();
    if (*(_QWORD *)(v20 + 24) != 1)
      swift_bridgeObjectRelease();
    swift_release();
  }
  v21 = a1 + a2[11];
  v22 = type metadata accessor for ChatbotCharacteristic(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22);
  if (!(_DWORD)result)
  {
    v24 = sub_1AD63AF28();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    if (!v26(v21, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v24);
    v27 = v21 + *(int *)(v22 + 20);
    if (!v26(v27, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
    v28 = v21 + *(int *)(v22 + 24);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v26)(v28, 1, v24);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v28, v24);
  }
  return result;
}

_QWORD *sub_1AD490BB8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  int *v61;
  uint64_t v62;
  unsigned int (*v63)(_QWORD *, uint64_t, int *);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _QWORD *v79;
  uint64_t v80;
  _OWORD *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  _OWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v94;
  char *v95;
  char *v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *__dst;
  char *__dsta;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  int *v118;
  int *v119;

  v6 = type metadata accessor for StandaloneMsgCharacteristic(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4800);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
    v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    a1[6] = a2[6];
    *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
    v11 = *(int *)(v6 + 24);
    v117 = (char *)a1 + v11;
    v12 = (char *)a2 + v11;
    v13 = a1;
    v14 = a3;
    v15 = sub_1AD63AF28();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    v17 = v15;
    a3 = v14;
    a1 = v13;
    v16(v117, v12, v17);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  }
  v18 = a3[5];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = (int *)type metadata accessor for ChatCharacteristic(0);
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v115 = v22;
    v118 = a3;
    v24 = v20[1];
    *v19 = *v20;
    v19[1] = v24;
    v19[2] = v20[2];
    *((_WORD *)v19 + 12) = *((_WORD *)v20 + 12);
    v25 = v21[5];
    __dst = (char *)v19 + v25;
    v26 = (char *)v20 + v25;
    v27 = sub_1AD63AF28();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_retain();
    if (v29(v26, 1, v27))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
    }
    *((_BYTE *)v19 + v21[6]) = *((_BYTE *)v20 + v21[6]);
    *((_BYTE *)v19 + v21[7]) = *((_BYTE *)v20 + v21[7]);
    v31 = v21[8];
    v32 = (char *)v19 + v31;
    v33 = (char *)v20 + v31;
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
    v32[24] = v33[24];
    v35 = v21[9];
    v36 = (char *)v19 + v35;
    v37 = (char *)v20 + v35;
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
    v36[24] = v37[24];
    v39 = v21[10];
    v40 = (char *)v19 + v39;
    v41 = (char *)v20 + v39;
    v42 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = v42;
    *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
    *((_WORD *)v40 + 12) = *((_WORD *)v41 + 12);
    v43 = v21[11];
    v44 = (char *)v19 + v43;
    v45 = (char *)v20 + v43;
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
    *((_WORD *)v44 + 12) = *((_WORD *)v45 + 12);
    *((_BYTE *)v19 + v21[12]) = *((_BYTE *)v20 + v21[12]);
    v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v115 + 56);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v47(v19, 0, 1, v21);
    a3 = v118;
  }
  v48 = a3[6];
  v49 = a3[7];
  v50 = (char *)a1 + v48;
  v51 = (char *)a2 + v48;
  v52 = *((_QWORD *)v51 + 1);
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *((_QWORD *)v50 + 1) = v52;
  *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
  v50[24] = v51[24];
  *((_BYTE *)a1 + v49) = *((_BYTE *)a2 + v49);
  v53 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = *(_QWORD *)v55;
  v57 = *((_QWORD *)v55 + 2);
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  *((_QWORD *)v54 + 2) = v57;
  *((_WORD *)v54 + 12) = *((_WORD *)v55 + 12);
  v58 = a3[10];
  v59 = (_QWORD *)((char *)a1 + v58);
  v60 = (_QWORD *)((char *)a2 + v58);
  *(_QWORD *)v54 = v56;
  v61 = (int *)type metadata accessor for FileTransferCharacteristic(0);
  v62 = *((_QWORD *)v61 - 1);
  v63 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v62 + 48);
  swift_retain();
  swift_retain();
  if (v63(v60, 1, v61))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F0);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    v116 = v62;
    v119 = a3;
    v65 = v60[1];
    *v59 = *v60;
    v59[1] = v65;
    v59[2] = v60[2];
    *((_WORD *)v59 + 12) = *((_WORD *)v60 + 12);
    v66 = v60[5];
    v59[4] = v60[4];
    v59[5] = v66;
    v59[6] = v60[6];
    *((_BYTE *)v59 + 56) = *((_BYTE *)v60 + 56);
    *((_BYTE *)v59 + 57) = *((_BYTE *)v60 + 57);
    v67 = v61[7];
    __dsta = (char *)v59 + v67;
    v68 = (char *)v60 + v67;
    v69 = sub_1AD63AF28();
    v70 = *(_QWORD *)(v69 - 8);
    v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
    swift_retain();
    swift_retain();
    if (v71(v68, 1, v69))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dsta, v68, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(__dsta, v68, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(__dsta, 0, 1, v69);
    }
    v73 = v61[8];
    v74 = (char *)v59 + v73;
    v75 = (char *)v60 + v73;
    if (v71((char *)v60 + v73, 1, v69))
    {
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v74, v75, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v74, 0, 1, v69);
    }
    v77 = v61[9];
    v78 = (char *)v59 + v77;
    v79 = (_QWORD *)((char *)v60 + v77);
    v80 = v79[1];
    *(_QWORD *)v78 = *v79;
    *((_QWORD *)v78 + 1) = v80;
    v81 = v79 + 2;
    v82 = v79[3];
    swift_retain();
    a3 = v119;
    if (v82 == 1)
    {
      *((_OWORD *)v78 + 1) = *v81;
    }
    else
    {
      *((_QWORD *)v78 + 2) = *(_QWORD *)v81;
      *((_QWORD *)v78 + 3) = v82;
      swift_bridgeObjectRetain();
    }
    v83 = v61[10];
    v84 = (char *)v59 + v83;
    v85 = (_QWORD *)((char *)v60 + v83);
    v86 = v85[1];
    *(_QWORD *)v84 = *v85;
    *((_QWORD *)v84 + 1) = v86;
    v87 = v85 + 2;
    v88 = v85[3];
    swift_retain();
    if (v88 == 1)
    {
      *((_OWORD *)v84 + 1) = *v87;
    }
    else
    {
      *((_QWORD *)v84 + 2) = *(_QWORD *)v87;
      *((_QWORD *)v84 + 3) = v88;
      swift_bridgeObjectRetain();
    }
    *((_BYTE *)v59 + v61[11]) = *((_BYTE *)v60 + v61[11]);
    v89 = v61[12];
    v90 = (char *)v59 + v89;
    v91 = (char *)v60 + v89;
    v92 = *((_QWORD *)v91 + 1);
    *(_QWORD *)v90 = *(_QWORD *)v91;
    *((_QWORD *)v90 + 1) = v92;
    *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
    v90[24] = v91[24];
    v93 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v116 + 56);
    swift_retain();
    v93(v59, 0, 1, v61);
  }
  v94 = a3[11];
  v95 = (char *)a1 + v94;
  v96 = (char *)a2 + v94;
  v97 = (int *)type metadata accessor for ChatbotCharacteristic(0);
  v98 = *((_QWORD *)v97 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v98 + 48))(v96, 1, v97))
  {
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47E8);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
  }
  else
  {
    v100 = sub_1AD63AF28();
    v101 = *(_QWORD *)(v100 - 8);
    v102 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48);
    if (v102(v96, 1, v100))
    {
      v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v95, v96, v100);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v95, 0, 1, v100);
    }
    v104 = v97[5];
    v105 = &v95[v104];
    v106 = &v96[v104];
    if (v102(&v96[v104], 1, v100))
    {
      v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v105, v106, v100);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v105, 0, 1, v100);
    }
    v108 = v97[6];
    v109 = &v95[v108];
    v110 = &v96[v108];
    if (v102(&v96[v108], 1, v100))
    {
      v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v109, v110, v100);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v109, 0, 1, v100);
    }
    v95[v97[7]] = v96[v97[7]];
    v95[v97[8]] = v96[v97[8]];
    v95[v97[9]] = v96[v97[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v98 + 56))(v95, 0, 1, v97);
  }
  return a1;
}

uint64_t sub_1AD4913C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, int *);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(const void *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t, int *);
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  const void *v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int (*v125)(const void *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t (*v137)(void *, uint64_t, uint64_t);
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  const void *v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v162;
  uint64_t v163;
  void *v164;
  void *v165;
  int v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  int *v187;
  uint64_t v188;
  uint64_t (*v189)(char *, uint64_t, int *);
  int v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  unsigned int (*v194)(char *, uint64_t, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t (*v199)(char *, uint64_t, uint64_t);
  int v200;
  int v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  int v214;
  int v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  int v220;
  int v221;
  uint64_t v222;
  void *__dst;
  void *__dsta;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  int *v230;

  v6 = type metadata accessor for StandaloneMsgCharacteristic(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v230 = a3;
  if (v9)
  {
    if (!v10)
    {
      v11 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v11;
      v12 = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v12;
      v13 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v13;
      v14 = *(_QWORD *)(a2 + 48);
      *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v14;
      v15 = *(int *)(v6 + 24);
      v16 = a1 + v15;
      v17 = a2 + v15;
      v18 = sub_1AD63AF28();
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_retain();
      swift_retain();
      v20 = v17;
      a3 = v230;
      v19(v16, v20, v18);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_1AD066230(a1, type metadata accessor for StandaloneMsgCharacteristic);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4800);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v39 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v39;
  swift_retain();
  swift_release();
  v40 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v40;
  v41 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v41;
  swift_retain();
  swift_release();
  v42 = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v42;
  v43 = *(int *)(v6 + 24);
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = sub_1AD63AF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
LABEL_7:
  v22 = a3[5];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = (int *)type metadata accessor for ChatCharacteristic(0);
  v26 = *((_QWORD *)v25 - 1);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      v226 = a1;
      v30 = *(_QWORD *)(v24 + 8);
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *(_QWORD *)(v23 + 8) = v30;
      v31 = *(_QWORD *)(v24 + 16);
      *(_WORD *)(v23 + 24) = *(_WORD *)(v24 + 24);
      *(_QWORD *)(v23 + 16) = v31;
      v32 = v25[5];
      __dst = (void *)(v23 + v32);
      v33 = (const void *)(v24 + v32);
      v34 = sub_1AD63AF28();
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48);
      swift_retain();
      if (v36(v33, 1, v34))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v35 + 16))(__dst, v33, v34);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
      }
      a1 = v226;
      *(_BYTE *)(v23 + v25[6]) = *(_BYTE *)(v24 + v25[6]);
      *(_BYTE *)(v23 + v25[7]) = *(_BYTE *)(v24 + v25[7]);
      v57 = v25[8];
      v58 = v23 + v57;
      v59 = v24 + v57;
      v60 = *(_QWORD *)(v59 + 8);
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *(_QWORD *)(v58 + 8) = v60;
      v61 = *(_QWORD *)(v59 + 16);
      *(_BYTE *)(v58 + 24) = *(_BYTE *)(v59 + 24);
      *(_QWORD *)(v58 + 16) = v61;
      v62 = v25[9];
      v63 = v23 + v62;
      v64 = v24 + v62;
      v65 = *(_QWORD *)(v64 + 8);
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *(_QWORD *)(v63 + 8) = v65;
      v66 = *(_QWORD *)(v64 + 16);
      *(_BYTE *)(v63 + 24) = *(_BYTE *)(v64 + 24);
      *(_QWORD *)(v63 + 16) = v66;
      v67 = v25[10];
      v68 = v23 + v67;
      v69 = v24 + v67;
      v70 = *(_QWORD *)(v69 + 8);
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *(_QWORD *)(v68 + 8) = v70;
      v71 = *(_QWORD *)(v69 + 16);
      *(_WORD *)(v68 + 24) = *(_WORD *)(v69 + 24);
      *(_QWORD *)(v68 + 16) = v71;
      v72 = v25[11];
      v73 = v23 + v72;
      v74 = v24 + v72;
      v75 = *(_QWORD *)(v74 + 8);
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *(_QWORD *)(v73 + 8) = v75;
      v76 = *(_QWORD *)(v74 + 16);
      *(_WORD *)(v73 + 24) = *(_WORD *)(v74 + 24);
      *(_QWORD *)(v73 + 16) = v76;
      *(_BYTE *)(v23 + v25[12]) = *(_BYTE *)(v24 + v25[12]);
      v77 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v26 + 56);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v77(v23, 0, 1, v25);
      goto LABEL_24;
    }
LABEL_13:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F8);
    memcpy((void *)v23, (const void *)v24, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  if (v29)
  {
    sub_1AD066230(v23, type metadata accessor for ChatCharacteristic);
    goto LABEL_13;
  }
  v227 = a1;
  v47 = *(_QWORD *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v23 + 8) = v47;
  swift_retain();
  swift_release();
  v48 = *(_QWORD *)(v24 + 16);
  *(_WORD *)(v23 + 24) = *(_WORD *)(v24 + 24);
  *(_QWORD *)(v23 + 16) = v48;
  v49 = v25[5];
  v50 = (void *)(v23 + v49);
  v51 = (void *)(v24 + v49);
  v52 = sub_1AD63AF28();
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (!v55)
  {
    if (!v56)
    {
      (*(void (**)(void *, void *, uint64_t))(v53 + 24))(v50, v51, v52);
      goto LABEL_23;
    }
    (*(void (**)(void *, uint64_t))(v53 + 8))(v50, v52);
    goto LABEL_22;
  }
  if (v56)
  {
LABEL_22:
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, void *, uint64_t))(v53 + 16))(v50, v51, v52);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
LABEL_23:
  a1 = v227;
  *(_BYTE *)(v23 + v25[6]) = *(_BYTE *)(v24 + v25[6]);
  *(_BYTE *)(v23 + v25[7]) = *(_BYTE *)(v24 + v25[7]);
  v79 = v25[8];
  v80 = v23 + v79;
  v81 = v24 + v79;
  v82 = *(_QWORD *)(v24 + v79 + 8);
  *(_QWORD *)v80 = *(_QWORD *)(v24 + v79);
  *(_QWORD *)(v80 + 8) = v82;
  swift_retain();
  swift_release();
  v83 = *(_QWORD *)(v81 + 16);
  *(_BYTE *)(v80 + 24) = *(_BYTE *)(v81 + 24);
  *(_QWORD *)(v80 + 16) = v83;
  v84 = v25[9];
  v85 = v23 + v84;
  v86 = v24 + v84;
  v87 = *(_QWORD *)(v24 + v84 + 8);
  *(_QWORD *)v85 = *(_QWORD *)(v24 + v84);
  *(_QWORD *)(v85 + 8) = v87;
  swift_retain();
  swift_release();
  v88 = *(_QWORD *)(v86 + 16);
  *(_BYTE *)(v85 + 24) = *(_BYTE *)(v86 + 24);
  *(_QWORD *)(v85 + 16) = v88;
  v89 = v25[10];
  v90 = v23 + v89;
  v91 = v24 + v89;
  v92 = *(_QWORD *)(v24 + v89 + 8);
  *(_QWORD *)v90 = *(_QWORD *)(v24 + v89);
  *(_QWORD *)(v90 + 8) = v92;
  swift_retain();
  swift_release();
  v93 = *(_QWORD *)(v91 + 16);
  *(_WORD *)(v90 + 24) = *(_WORD *)(v91 + 24);
  *(_QWORD *)(v90 + 16) = v93;
  v94 = v25[11];
  v95 = v23 + v94;
  v96 = v24 + v94;
  v97 = *(_QWORD *)(v24 + v94 + 8);
  *(_QWORD *)v95 = *(_QWORD *)(v24 + v94);
  *(_QWORD *)(v95 + 8) = v97;
  swift_retain();
  swift_release();
  v98 = *(_QWORD *)(v96 + 16);
  *(_WORD *)(v95 + 24) = *(_WORD *)(v96 + 24);
  *(_QWORD *)(v95 + 16) = v98;
  *(_BYTE *)(v23 + v25[12]) = *(_BYTE *)(v24 + v25[12]);
LABEL_24:
  a3 = v230;
LABEL_25:
  v99 = a3[6];
  v100 = a1 + v99;
  v101 = a2 + v99;
  v102 = *(_QWORD *)(a2 + v99 + 8);
  *(_QWORD *)v100 = *(_QWORD *)(a2 + v99);
  *(_QWORD *)(v100 + 8) = v102;
  swift_retain();
  swift_release();
  v103 = *(_QWORD *)(v101 + 16);
  *(_BYTE *)(v100 + 24) = *(_BYTE *)(v101 + 24);
  *(_QWORD *)(v100 + 16) = v103;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v104 = a3[9];
  v105 = a1 + v104;
  v106 = a2 + v104;
  v107 = *(_QWORD *)(a2 + v104 + 8);
  *(_QWORD *)v105 = *(_QWORD *)(a2 + v104);
  *(_QWORD *)(v105 + 8) = v107;
  swift_retain();
  swift_release();
  v108 = *(_QWORD *)(v106 + 16);
  *(_WORD *)(v105 + 24) = *(_WORD *)(v106 + 24);
  *(_QWORD *)(v105 + 16) = v108;
  v109 = a3[10];
  v110 = a1 + v109;
  v111 = a2 + v109;
  v112 = (int *)type metadata accessor for FileTransferCharacteristic(0);
  v113 = *((_QWORD *)v112 - 1);
  v114 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v113 + 48);
  v115 = v114(v110, 1, v112);
  v116 = v114(v111, 1, v112);
  if (!v115)
  {
    if (v116)
    {
      sub_1AD066230(v110, type metadata accessor for FileTransferCharacteristic);
      goto LABEL_31;
    }
    v229 = a1;
    v128 = *(_QWORD *)(v111 + 8);
    *(_QWORD *)v110 = *(_QWORD *)v111;
    *(_QWORD *)(v110 + 8) = v128;
    swift_retain();
    swift_release();
    v129 = *(_QWORD *)(v111 + 16);
    *(_WORD *)(v110 + 24) = *(_WORD *)(v111 + 24);
    *(_QWORD *)(v110 + 16) = v129;
    v130 = *(_QWORD *)(v111 + 40);
    *(_QWORD *)(v110 + 32) = *(_QWORD *)(v111 + 32);
    *(_QWORD *)(v110 + 40) = v130;
    swift_retain();
    swift_release();
    v131 = *(_QWORD *)(v111 + 48);
    *(_BYTE *)(v110 + 56) = *(_BYTE *)(v111 + 56);
    *(_QWORD *)(v110 + 48) = v131;
    *(_BYTE *)(v110 + 57) = *(_BYTE *)(v111 + 57);
    v132 = v112[7];
    v133 = (void *)(v110 + v132);
    v134 = (void *)(v111 + v132);
    v135 = sub_1AD63AF28();
    v136 = *(_QWORD *)(v135 - 8);
    v137 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v136 + 48);
    v138 = v137(v133, 1, v135);
    v139 = v137(v134, 1, v135);
    if (v138)
    {
      if (!v139)
      {
        (*(void (**)(void *, void *, uint64_t))(v136 + 16))(v133, v134, v135);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
        goto LABEL_49;
      }
    }
    else
    {
      if (!v139)
      {
        (*(void (**)(void *, void *, uint64_t))(v136 + 24))(v133, v134, v135);
LABEL_49:
        v163 = v112[8];
        v164 = (void *)(v110 + v163);
        v165 = (void *)(v111 + v163);
        v166 = v137((void *)(v110 + v163), 1, v135);
        v167 = v137(v165, 1, v135);
        if (v166)
        {
          if (!v167)
          {
            (*(void (**)(void *, void *, uint64_t))(v136 + 16))(v164, v165, v135);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v164, 0, 1, v135);
            goto LABEL_55;
          }
        }
        else
        {
          if (!v167)
          {
            (*(void (**)(void *, void *, uint64_t))(v136 + 24))(v164, v165, v135);
LABEL_55:
            a1 = v229;
            v169 = v112[9];
            v170 = (_QWORD *)(v110 + v169);
            v171 = v111 + v169;
            v172 = *(_QWORD *)(v111 + v169 + 8);
            *v170 = *(_QWORD *)(v111 + v169);
            v170[1] = v172;
            swift_retain();
            swift_release();
            v173 = *(_QWORD *)(v171 + 24);
            if (v170[3] == 1)
            {
              if (v173 != 1)
              {
                v170[2] = *(_QWORD *)(v171 + 16);
                v170[3] = *(_QWORD *)(v171 + 24);
                swift_bridgeObjectRetain();
                goto LABEL_62;
              }
            }
            else
            {
              if (v173 != 1)
              {
                v170[2] = *(_QWORD *)(v171 + 16);
                v170[3] = *(_QWORD *)(v171 + 24);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
LABEL_62:
                v174 = v112[10];
                v175 = (_QWORD *)(v110 + v174);
                v176 = v111 + v174;
                v177 = *(_QWORD *)(v111 + v174 + 8);
                *v175 = *(_QWORD *)(v111 + v174);
                v175[1] = v177;
                swift_retain();
                swift_release();
                v178 = *(_QWORD *)(v176 + 24);
                if (v175[3] == 1)
                {
                  if (v178 != 1)
                  {
                    v175[2] = *(_QWORD *)(v176 + 16);
                    v175[3] = *(_QWORD *)(v176 + 24);
                    swift_bridgeObjectRetain();
LABEL_69:
                    a3 = v230;
                    *(_BYTE *)(v110 + v112[11]) = *(_BYTE *)(v111 + v112[11]);
                    v179 = v112[12];
                    v180 = v110 + v179;
                    v181 = v111 + v179;
                    v182 = *(_QWORD *)(v111 + v179 + 8);
                    *(_QWORD *)v180 = *(_QWORD *)(v111 + v179);
                    *(_QWORD *)(v180 + 8) = v182;
                    swift_retain();
                    swift_release();
                    v183 = *(_QWORD *)(v181 + 16);
                    *(_BYTE *)(v180 + 24) = *(_BYTE *)(v181 + 24);
                    *(_QWORD *)(v180 + 16) = v183;
                    goto LABEL_70;
                  }
                }
                else
                {
                  if (v178 != 1)
                  {
                    v175[2] = *(_QWORD *)(v176 + 16);
                    v175[3] = *(_QWORD *)(v176 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    goto LABEL_69;
                  }
                  sub_1AD0256E4((uint64_t)(v175 + 2));
                }
                *((_OWORD *)v175 + 1) = *(_OWORD *)(v176 + 16);
                goto LABEL_69;
              }
              sub_1AD0256E4((uint64_t)(v170 + 2));
            }
            *((_OWORD *)v170 + 1) = *(_OWORD *)(v171 + 16);
            goto LABEL_62;
          }
          (*(void (**)(void *, uint64_t))(v136 + 8))(v164, v135);
        }
        v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
        goto LABEL_55;
      }
      (*(void (**)(void *, uint64_t))(v136 + 8))(v133, v135);
    }
    v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
    goto LABEL_49;
  }
  if (v116)
  {
LABEL_31:
    v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F0);
    memcpy((void *)v110, (const void *)v111, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    goto LABEL_70;
  }
  v228 = a1;
  v117 = *(_QWORD *)(v111 + 8);
  *(_QWORD *)v110 = *(_QWORD *)v111;
  *(_QWORD *)(v110 + 8) = v117;
  v118 = *(_QWORD *)(v111 + 16);
  *(_WORD *)(v110 + 24) = *(_WORD *)(v111 + 24);
  *(_QWORD *)(v110 + 16) = v118;
  v119 = *(_QWORD *)(v111 + 40);
  *(_QWORD *)(v110 + 32) = *(_QWORD *)(v111 + 32);
  *(_QWORD *)(v110 + 40) = v119;
  v120 = *(_QWORD *)(v111 + 48);
  *(_BYTE *)(v110 + 56) = *(_BYTE *)(v111 + 56);
  *(_QWORD *)(v110 + 48) = v120;
  *(_BYTE *)(v110 + 57) = *(_BYTE *)(v111 + 57);
  v121 = v112[7];
  __dsta = (void *)(v110 + v121);
  v122 = (const void *)(v111 + v121);
  v123 = sub_1AD63AF28();
  v124 = *(_QWORD *)(v123 - 8);
  v125 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v124 + 48);
  swift_retain();
  swift_retain();
  if (v125(v122, 1, v123))
  {
    v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(__dsta, v122, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v124 + 16))(__dsta, v122, v123);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v124 + 56))(__dsta, 0, 1, v123);
  }
  v140 = v124;
  v141 = v112[8];
  v142 = (void *)(v110 + v141);
  v143 = (const void *)(v111 + v141);
  v144 = v125((const void *)(v111 + v141), 1, v123);
  a1 = v228;
  if (v144)
  {
    v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v140 + 16))(v142, v143, v123);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v142, 0, 1, v123);
  }
  v146 = v112[9];
  v147 = v110 + v146;
  v148 = v111 + v146;
  v149 = *(_QWORD *)(v111 + v146 + 8);
  *(_QWORD *)v147 = *(_QWORD *)(v111 + v146);
  *(_QWORD *)(v147 + 8) = v149;
  v150 = *(_QWORD *)(v111 + v146 + 24);
  swift_retain();
  if (v150 == 1)
  {
    *(_OWORD *)(v147 + 16) = *(_OWORD *)(v148 + 16);
  }
  else
  {
    *(_QWORD *)(v147 + 16) = *(_QWORD *)(v148 + 16);
    *(_QWORD *)(v147 + 24) = *(_QWORD *)(v148 + 24);
    swift_bridgeObjectRetain();
  }
  v151 = v112[10];
  v152 = v110 + v151;
  v153 = v111 + v151;
  v154 = *(_QWORD *)(v111 + v151 + 8);
  *(_QWORD *)v152 = *(_QWORD *)(v111 + v151);
  *(_QWORD *)(v152 + 8) = v154;
  v155 = *(_QWORD *)(v111 + v151 + 24);
  swift_retain();
  if (v155 == 1)
  {
    *(_OWORD *)(v152 + 16) = *(_OWORD *)(v153 + 16);
  }
  else
  {
    *(_QWORD *)(v152 + 16) = *(_QWORD *)(v153 + 16);
    *(_QWORD *)(v152 + 24) = *(_QWORD *)(v153 + 24);
    swift_bridgeObjectRetain();
  }
  a3 = v230;
  *(_BYTE *)(v110 + v112[11]) = *(_BYTE *)(v111 + v112[11]);
  v156 = v112[12];
  v157 = v110 + v156;
  v158 = v111 + v156;
  v159 = *(_QWORD *)(v158 + 8);
  *(_QWORD *)v157 = *(_QWORD *)v158;
  *(_QWORD *)(v157 + 8) = v159;
  v160 = *(_QWORD *)(v158 + 16);
  *(_BYTE *)(v157 + 24) = *(_BYTE *)(v158 + 24);
  *(_QWORD *)(v157 + 16) = v160;
  v161 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v113 + 56);
  swift_retain();
  v161(v110, 0, 1, v112);
LABEL_70:
  v184 = a3[11];
  v185 = (char *)(a1 + v184);
  v186 = (char *)(a2 + v184);
  v187 = (int *)type metadata accessor for ChatbotCharacteristic(0);
  v188 = *((_QWORD *)v187 - 1);
  v189 = *(uint64_t (**)(char *, uint64_t, int *))(v188 + 48);
  v190 = v189(v185, 1, v187);
  v191 = v189(v186, 1, v187);
  if (!v190)
  {
    if (v191)
    {
      sub_1AD066230((uint64_t)v185, type metadata accessor for ChatbotCharacteristic);
      goto LABEL_76;
    }
    v197 = sub_1AD63AF28();
    v198 = *(_QWORD *)(v197 - 8);
    v199 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v198 + 48);
    v200 = v199(v185, 1, v197);
    v201 = v199(v186, 1, v197);
    if (v200)
    {
      if (!v201)
      {
        (*(void (**)(char *, char *, uint64_t))(v198 + 16))(v185, v186, v197);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v185, 0, 1, v197);
        goto LABEL_91;
      }
    }
    else
    {
      if (!v201)
      {
        (*(void (**)(char *, char *, uint64_t))(v198 + 24))(v185, v186, v197);
LABEL_91:
        v211 = v187[5];
        v212 = &v185[v211];
        v213 = &v186[v211];
        v214 = v199(&v185[v211], 1, v197);
        v215 = v199(v213, 1, v197);
        if (v214)
        {
          if (!v215)
          {
            (*(void (**)(char *, char *, uint64_t))(v198 + 16))(v212, v213, v197);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v212, 0, 1, v197);
            goto LABEL_97;
          }
        }
        else
        {
          if (!v215)
          {
            (*(void (**)(char *, char *, uint64_t))(v198 + 24))(v212, v213, v197);
LABEL_97:
            v217 = v187[6];
            v218 = &v185[v217];
            v219 = &v186[v217];
            v220 = v199(&v185[v217], 1, v197);
            v221 = v199(v219, 1, v197);
            if (v220)
            {
              if (!v221)
              {
                (*(void (**)(char *, char *, uint64_t))(v198 + 16))(v218, v219, v197);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v218, 0, 1, v197);
LABEL_103:
                v185[v187[7]] = v186[v187[7]];
                v185[v187[8]] = v186[v187[8]];
                v185[v187[9]] = v186[v187[9]];
                return a1;
              }
            }
            else
            {
              if (!v221)
              {
                (*(void (**)(char *, char *, uint64_t))(v198 + 24))(v218, v219, v197);
                goto LABEL_103;
              }
              (*(void (**)(char *, uint64_t))(v198 + 8))(v218, v197);
            }
            v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
            goto LABEL_103;
          }
          (*(void (**)(char *, uint64_t))(v198 + 8))(v212, v197);
        }
        v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
        goto LABEL_97;
      }
      (*(void (**)(char *, uint64_t))(v198 + 8))(v185, v197);
    }
    v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
    goto LABEL_91;
  }
  if (v191)
  {
LABEL_76:
    v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47E8);
    memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
    return a1;
  }
  v192 = sub_1AD63AF28();
  v193 = *(_QWORD *)(v192 - 8);
  v194 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48);
  if (v194(v186, 1, v192))
  {
    v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v185, v186, v192);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v185, 0, 1, v192);
  }
  v202 = v187[5];
  v203 = &v185[v202];
  v204 = &v186[v202];
  if (v194(&v186[v202], 1, v192))
  {
    v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v203, v204, v192);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v203, 0, 1, v192);
  }
  v206 = v187[6];
  v207 = &v185[v206];
  v208 = &v186[v206];
  if (v194(&v186[v206], 1, v192))
  {
    v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v207, v208, v192);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v207, 0, 1, v192);
  }
  v185[v187[7]] = v186[v187[7]];
  v185[v187[8]] = v186[v187[8]];
  v185[v187[9]] = v186[v187[9]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v188 + 56))(v185, 0, 1, v187);
  return a1;
}

_OWORD *sub_1AD4924A0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  __int128 v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  __int128 v66;
  uint64_t v67;
  _OWORD *v68;
  _OWORD *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  char *__dst;
  char *__dsta;

  v6 = type metadata accessor for StandaloneMsgCharacteristic(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4800);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
    a1[2] = a2[2];
    *(_OWORD *)((char *)a1 + 42) = *(_OWORD *)((char *)a2 + 42);
    v9 = *(int *)(v6 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1AD63AF28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = a3[5];
  v14 = (_OWORD *)((char *)a1 + v13);
  v15 = (_OWORD *)((char *)a2 + v13);
  v16 = (int *)type metadata accessor for ChatCharacteristic(0);
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    *(_OWORD *)((char *)v14 + 10) = *(_OWORD *)((char *)v15 + 10);
    v19 = v16[5];
    __dst = (char *)v14 + v19;
    v20 = (char *)v15 + v19;
    v21 = sub_1AD63AF28();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    *((_BYTE *)v14 + v16[6]) = *((_BYTE *)v15 + v16[6]);
    *((_BYTE *)v14 + v16[7]) = *((_BYTE *)v15 + v16[7]);
    v24 = v16[8];
    v25 = (_OWORD *)((char *)v14 + v24);
    v26 = (_OWORD *)((char *)v15 + v24);
    *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v26 + 9);
    *v25 = *v26;
    v27 = v16[9];
    v28 = (_OWORD *)((char *)v14 + v27);
    v29 = (_OWORD *)((char *)v15 + v27);
    *(_OWORD *)((char *)v28 + 9) = *(_OWORD *)((char *)v29 + 9);
    *v28 = *v29;
    v30 = v16[10];
    v31 = (_OWORD *)((char *)v14 + v30);
    v32 = (_OWORD *)((char *)v15 + v30);
    *(_OWORD *)((char *)v31 + 10) = *(_OWORD *)((char *)v32 + 10);
    *v31 = *v32;
    v33 = v16[11];
    v34 = (_OWORD *)((char *)v14 + v33);
    v35 = (_OWORD *)((char *)v15 + v33);
    *v34 = *v35;
    *(_OWORD *)((char *)v34 + 10) = *(_OWORD *)((char *)v35 + 10);
    *((_BYTE *)v14 + v16[12]) = *((_BYTE *)v15 + v16[12]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  v36 = a3[6];
  v37 = a3[7];
  v38 = (_OWORD *)((char *)a1 + v36);
  v39 = (_OWORD *)((char *)a2 + v36);
  *v38 = *v39;
  *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)((char *)v39 + 9);
  *((_BYTE *)a1 + v37) = *((_BYTE *)a2 + v37);
  v40 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v41 = (_OWORD *)((char *)a1 + v40);
  v42 = (_OWORD *)((char *)a2 + v40);
  *v41 = *v42;
  *(_OWORD *)((char *)v41 + 10) = *(_OWORD *)((char *)v42 + 10);
  v43 = a3[10];
  v44 = (_OWORD *)((char *)a1 + v43);
  v45 = (_OWORD *)((char *)a2 + v43);
  v46 = (int *)type metadata accessor for FileTransferCharacteristic(0);
  v47 = *((_QWORD *)v46 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    *v44 = *v45;
    *(_OWORD *)((char *)v44 + 10) = *(_OWORD *)((char *)v45 + 10);
    v44[2] = v45[2];
    *(_OWORD *)((char *)v44 + 41) = *(_OWORD *)((char *)v45 + 41);
    *((_BYTE *)v44 + 57) = *((_BYTE *)v45 + 57);
    v49 = v46[7];
    v90 = v47;
    __dsta = (char *)v44 + v49;
    v50 = (char *)v45 + v49;
    v51 = sub_1AD63AF28();
    v52 = *(_QWORD *)(v51 - 8);
    v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
    v89 = v52;
    if (v53(v50, 1, v51))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dsta, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(__dsta, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(__dsta, 0, 1, v51);
    }
    v55 = v46[8];
    v56 = (char *)v44 + v55;
    v57 = (char *)v45 + v55;
    if (v53((char *)v45 + v55, 1, v51))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v56, v57, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v56, 0, 1, v51);
    }
    v59 = v46[9];
    v60 = (_OWORD *)((char *)v44 + v59);
    v61 = (_OWORD *)((char *)v45 + v59);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    v63 = v46[10];
    v64 = (_OWORD *)((char *)v44 + v63);
    v65 = (_OWORD *)((char *)v45 + v63);
    v66 = v65[1];
    *v64 = *v65;
    v64[1] = v66;
    *((_BYTE *)v44 + v46[11]) = *((_BYTE *)v45 + v46[11]);
    v67 = v46[12];
    v68 = (_OWORD *)((char *)v44 + v67);
    v69 = (_OWORD *)((char *)v45 + v67);
    *v68 = *v69;
    *(_OWORD *)((char *)v68 + 9) = *(_OWORD *)((char *)v69 + 9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v90 + 56))(v44, 0, 1, v46);
  }
  v70 = a3[11];
  v71 = (char *)a1 + v70;
  v72 = (char *)a2 + v70;
  v73 = (int *)type metadata accessor for ChatbotCharacteristic(0);
  v74 = *((_QWORD *)v73 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47E8);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    v76 = sub_1AD63AF28();
    v77 = *(_QWORD *)(v76 - 8);
    v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
    if (v78(v72, 1, v76))
    {
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v71, v72, v76);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v71, 0, 1, v76);
    }
    v80 = v73[5];
    v81 = &v71[v80];
    v82 = &v72[v80];
    if (v78(&v72[v80], 1, v76))
    {
      v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v81, v82, v76);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v81, 0, 1, v76);
    }
    v84 = v73[6];
    v85 = &v71[v84];
    v86 = &v72[v84];
    if (v78(&v72[v84], 1, v76))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v85, v86, v76);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v85, 0, 1, v76);
    }
    v71[v73[7]] = v72[v73[7]];
    v71[v73[8]] = v72[v73[8]];
    v71[v73[9]] = v72[v73[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v74 + 56))(v71, 0, 1, v73);
  }
  return a1;
}

_OWORD *sub_1AD492B5C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_OWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, int *);
  int v22;
  int v23;
  _OWORD *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  _OWORD *v45;
  char *v46;
  uint64_t v47;
  _OWORD *v48;
  char *v49;
  uint64_t v50;
  _OWORD *v51;
  char *v52;
  uint64_t v53;
  _OWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  int *v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t, int *);
  int v82;
  int v83;
  uint64_t v84;
  void *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(void *, uint64_t, uint64_t);
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  _OWORD *v107;
  char *v108;
  __int128 v109;
  uint64_t v110;
  _OWORD *v111;
  char *v112;
  __int128 v113;
  uint64_t v114;
  _OWORD *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  char *v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  int *v140;
  uint64_t v141;
  uint64_t (*v142)(char *, uint64_t, int *);
  int v143;
  int v144;
  _OWORD *v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  _OWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t (*v154)(char *, uint64_t, uint64_t);
  int v155;
  int v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  int v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  int v175;
  int v176;
  uint64_t v177;
  char *__src;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  int *v183;
  int *v184;
  int *v185;
  int *v186;

  v6 = type metadata accessor for StandaloneMsgCharacteristic(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
      a1[2] = a2[2];
      *(_OWORD *)((char *)a1 + 42) = *(_OWORD *)((char *)a2 + 42);
      v11 = *(int *)(v6 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_1AD066230((uint64_t)a1, type metadata accessor for StandaloneMsgCharacteristic);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4800);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  swift_release();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  a1[2] = a2[2];
  swift_release();
  *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
  *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
  v32 = *(int *)(v6 + 24);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_1AD63AF28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
LABEL_7:
  v16 = a3[5];
  v17 = (uint64_t)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = (int *)type metadata accessor for ChatCharacteristic(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21((uint64_t)v18, 1, v19);
  if (!v22)
  {
    if (v23)
    {
      sub_1AD066230(v17, type metadata accessor for ChatCharacteristic);
      goto LABEL_13;
    }
    v180 = a1;
    v184 = a3;
    *(_OWORD *)v17 = *(_OWORD *)v18;
    swift_release();
    *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
    *(_WORD *)(v17 + 24) = *((_WORD *)v18 + 12);
    v36 = v19[5];
    v37 = (void *)(v17 + v36);
    v38 = &v18[v36];
    v39 = sub_1AD63AF28();
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
    v42 = v41(v37, 1, v39);
    v43 = v41(v38, 1, v39);
    if (v42)
    {
      if (!v43)
      {
        (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_23:
        *(_BYTE *)(v17 + v19[6]) = v18[v19[6]];
        *(_BYTE *)(v17 + v19[7]) = v18[v19[7]];
        v57 = v19[8];
        v58 = v17 + v57;
        v59 = &v18[v57];
        *(_OWORD *)(v17 + v57) = *(_OWORD *)&v18[v57];
        swift_release();
        *(_QWORD *)(v58 + 16) = *((_QWORD *)v59 + 2);
        *(_BYTE *)(v58 + 24) = v59[24];
        v60 = v19[9];
        v61 = v17 + v60;
        v62 = &v18[v60];
        *(_OWORD *)(v17 + v60) = *(_OWORD *)&v18[v60];
        swift_release();
        *(_QWORD *)(v61 + 16) = *((_QWORD *)v62 + 2);
        *(_BYTE *)(v61 + 24) = v62[24];
        v63 = v19[10];
        v64 = v17 + v63;
        v65 = &v18[v63];
        *(_OWORD *)(v17 + v63) = *(_OWORD *)&v18[v63];
        swift_release();
        *(_QWORD *)(v64 + 16) = *((_QWORD *)v65 + 2);
        *(_WORD *)(v64 + 24) = *((_WORD *)v65 + 12);
        v66 = v19[11];
        v67 = v17 + v66;
        v68 = &v18[v66];
        *(_OWORD *)(v17 + v66) = *(_OWORD *)&v18[v66];
        swift_release();
        *(_QWORD *)(v67 + 16) = *((_QWORD *)v68 + 2);
        *(_WORD *)(v67 + 24) = *((_WORD *)v68 + 12);
        *(_BYTE *)(v17 + v19[12]) = v18[v19[12]];
        a1 = v180;
        a3 = v184;
        goto LABEL_24;
      }
    }
    else
    {
      if (!v43)
      {
        (*(void (**)(void *, char *, uint64_t))(v40 + 40))(v37, v38, v39);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v40 + 8))(v37, v39);
    }
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_23;
  }
  if (v23)
  {
LABEL_13:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F8);
    memcpy((void *)v17, v18, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_24;
  }
  v183 = a3;
  v24 = a1;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 10) = *(_OWORD *)(v18 + 10);
  v25 = v19[5];
  v26 = (void *)(v17 + v25);
  v27 = &v18[v25];
  v28 = sub_1AD63AF28();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  a1 = v24;
  *(_BYTE *)(v17 + v19[6]) = v18[v19[6]];
  *(_BYTE *)(v17 + v19[7]) = v18[v19[7]];
  v44 = v19[8];
  v45 = (_OWORD *)(v17 + v44);
  v46 = &v18[v44];
  *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)(v46 + 9);
  *v45 = *(_OWORD *)v46;
  v47 = v19[9];
  v48 = (_OWORD *)(v17 + v47);
  v49 = &v18[v47];
  *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)(v49 + 9);
  *v48 = *(_OWORD *)v49;
  v50 = v19[10];
  v51 = (_OWORD *)(v17 + v50);
  v52 = &v18[v50];
  *(_OWORD *)((char *)v51 + 10) = *(_OWORD *)(v52 + 10);
  *v51 = *(_OWORD *)v52;
  v53 = v19[11];
  v54 = (_OWORD *)(v17 + v53);
  v55 = &v18[v53];
  *v54 = *(_OWORD *)v55;
  *(_OWORD *)((char *)v54 + 10) = *(_OWORD *)(v55 + 10);
  *(_BYTE *)(v17 + v19[12]) = v18[v19[12]];
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  a3 = v183;
LABEL_24:
  v69 = a3[6];
  v70 = (char *)a1 + v69;
  v71 = (char *)a2 + v69;
  *(_OWORD *)((char *)a1 + v69) = *(_OWORD *)((char *)a2 + v69);
  swift_release();
  v70[24] = v71[24];
  *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
  v72 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v72) = *((_BYTE *)a2 + v72);
  v73 = a3[9];
  v74 = (char *)a1 + v73;
  v75 = (char *)a2 + v73;
  *(_OWORD *)((char *)a1 + v73) = *(_OWORD *)((char *)a2 + v73);
  swift_release();
  *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
  *((_WORD *)v74 + 12) = *((_WORD *)v75 + 12);
  v76 = a3[10];
  v77 = (uint64_t)a1 + v76;
  v78 = (char *)a2 + v76;
  v79 = (int *)type metadata accessor for FileTransferCharacteristic(0);
  v80 = *((_QWORD *)v79 - 1);
  v81 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v80 + 48);
  v82 = v81(v77, 1, v79);
  v83 = v81((uint64_t)v78, 1, v79);
  if (!v82)
  {
    if (v83)
    {
      sub_1AD066230(v77, type metadata accessor for FileTransferCharacteristic);
      goto LABEL_30;
    }
    v182 = a1;
    v186 = a3;
    *(_OWORD *)v77 = *(_OWORD *)v78;
    swift_release();
    *(_QWORD *)(v77 + 16) = *((_QWORD *)v78 + 2);
    *(_WORD *)(v77 + 24) = *((_WORD *)v78 + 12);
    *(_OWORD *)(v77 + 32) = *((_OWORD *)v78 + 2);
    swift_release();
    *(_QWORD *)(v77 + 48) = *((_QWORD *)v78 + 6);
    *(_BYTE *)(v77 + 56) = v78[56];
    *(_BYTE *)(v77 + 57) = v78[57];
    v92 = v79[7];
    v93 = (void *)(v77 + v92);
    v94 = &v78[v92];
    v95 = sub_1AD63AF28();
    v96 = *(_QWORD *)(v95 - 8);
    v97 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v96 + 48);
    v98 = v97(v93, 1, v95);
    __src = v94;
    v99 = v97(v94, 1, v95);
    if (v98)
    {
      if (v99)
      {
        v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        v101 = v96;
      }
      else
      {
        v101 = v96;
        (*(void (**)(void *, char *, uint64_t))(v96 + 32))(v93, __src, v95);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
      }
    }
    else
    {
      v101 = v96;
      if (v99)
      {
        (*(void (**)(void *, uint64_t))(v96 + 8))(v93, v95);
        v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v93, __src, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v96 + 40))(v93, __src, v95);
      }
    }
    v118 = v79[8];
    v119 = (void *)(v77 + v118);
    v120 = &v78[v118];
    v121 = v97((void *)(v77 + v118), 1, v95);
    v122 = v97(v120, 1, v95);
    if (v121)
    {
      a1 = v182;
      if (!v122)
      {
        (*(void (**)(void *, char *, uint64_t))(v101 + 32))(v119, v120, v95);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v119, 0, 1, v95);
        goto LABEL_50;
      }
    }
    else
    {
      a1 = v182;
      if (!v122)
      {
        (*(void (**)(void *, char *, uint64_t))(v101 + 40))(v119, v120, v95);
LABEL_50:
        v124 = v79[9];
        v125 = v77 + v124;
        v126 = &v78[v124];
        *(_OWORD *)(v77 + v124) = *(_OWORD *)&v78[v124];
        swift_release();
        v127 = v126 + 16;
        if (*(_QWORD *)(v125 + 24) != 1)
        {
          v128 = *((_QWORD *)v126 + 3);
          if (v128 != 1)
          {
            *(_QWORD *)(v125 + 16) = *v127;
            *(_QWORD *)(v125 + 24) = v128;
            swift_bridgeObjectRelease();
LABEL_55:
            v129 = v79[10];
            v130 = v77 + v129;
            v131 = &v78[v129];
            *(_OWORD *)(v77 + v129) = *(_OWORD *)&v78[v129];
            swift_release();
            v132 = v131 + 16;
            if (*(_QWORD *)(v130 + 24) != 1)
            {
              v133 = *((_QWORD *)v131 + 3);
              if (v133 != 1)
              {
                *(_QWORD *)(v130 + 16) = *v132;
                *(_QWORD *)(v130 + 24) = v133;
                swift_bridgeObjectRelease();
                goto LABEL_60;
              }
              sub_1AD0256E4(v130 + 16);
            }
            *(_OWORD *)(v130 + 16) = *(_OWORD *)v132;
LABEL_60:
            a3 = v186;
            *(_BYTE *)(v77 + v79[11]) = v78[v79[11]];
            v134 = v79[12];
            v135 = v77 + v134;
            v136 = &v78[v134];
            *(_OWORD *)(v77 + v134) = *(_OWORD *)&v78[v134];
            swift_release();
            *(_QWORD *)(v135 + 16) = *((_QWORD *)v136 + 2);
            *(_BYTE *)(v135 + 24) = v136[24];
            goto LABEL_61;
          }
          sub_1AD0256E4(v125 + 16);
        }
        *(_OWORD *)(v125 + 16) = *(_OWORD *)v127;
        goto LABEL_55;
      }
      (*(void (**)(void *, uint64_t))(v101 + 8))(v119, v95);
    }
    v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    goto LABEL_50;
  }
  if (v83)
  {
LABEL_30:
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F0);
    memcpy((void *)v77, v78, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    goto LABEL_61;
  }
  v181 = a1;
  v185 = a3;
  *(_OWORD *)v77 = *(_OWORD *)v78;
  *(_OWORD *)(v77 + 10) = *(_OWORD *)(v78 + 10);
  *(_OWORD *)(v77 + 32) = *((_OWORD *)v78 + 2);
  *(_OWORD *)(v77 + 41) = *(_OWORD *)(v78 + 41);
  *(_BYTE *)(v77 + 57) = v78[57];
  v84 = v79[7];
  v85 = (void *)(v77 + v84);
  v86 = &v78[v84];
  v87 = sub_1AD63AF28();
  v88 = *(_QWORD *)(v87 - 8);
  v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
  if (v89(v86, 1, v87))
  {
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v88 + 32))(v85, v86, v87);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
  }
  v102 = v79[8];
  v103 = (void *)(v77 + v102);
  v104 = &v78[v102];
  if (v89(&v78[v102], 1, v87))
  {
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v88 + 32))(v103, v104, v87);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v103, 0, 1, v87);
  }
  v106 = v79[9];
  v107 = (_OWORD *)(v77 + v106);
  v108 = &v78[v106];
  v109 = *((_OWORD *)v108 + 1);
  *v107 = *(_OWORD *)v108;
  v107[1] = v109;
  v110 = v79[10];
  v111 = (_OWORD *)(v77 + v110);
  v112 = &v78[v110];
  v113 = *((_OWORD *)v112 + 1);
  *v111 = *(_OWORD *)v112;
  v111[1] = v113;
  *(_BYTE *)(v77 + v79[11]) = v78[v79[11]];
  v114 = v79[12];
  v115 = (_OWORD *)(v77 + v114);
  v116 = &v78[v114];
  *v115 = *(_OWORD *)v116;
  *(_OWORD *)((char *)v115 + 9) = *(_OWORD *)(v116 + 9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v80 + 56))(v77, 0, 1, v79);
  a1 = v181;
  a3 = v185;
LABEL_61:
  v137 = a3[11];
  v138 = (char *)a1 + v137;
  v139 = (char *)a2 + v137;
  v140 = (int *)type metadata accessor for ChatbotCharacteristic(0);
  v141 = *((_QWORD *)v140 - 1);
  v142 = *(uint64_t (**)(char *, uint64_t, int *))(v141 + 48);
  v143 = v142(v138, 1, v140);
  v144 = v142(v139, 1, v140);
  if (!v143)
  {
    if (v144)
    {
      sub_1AD066230((uint64_t)v138, type metadata accessor for ChatbotCharacteristic);
      goto LABEL_67;
    }
    v151 = a1;
    v152 = sub_1AD63AF28();
    v153 = *(_QWORD *)(v152 - 8);
    v154 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v153 + 48);
    v155 = v154(v138, 1, v152);
    v156 = v154(v139, 1, v152);
    if (v155)
    {
      if (!v156)
      {
        (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v138, v139, v152);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v138, 0, 1, v152);
        goto LABEL_82;
      }
    }
    else
    {
      if (!v156)
      {
        (*(void (**)(char *, char *, uint64_t))(v153 + 40))(v138, v139, v152);
LABEL_82:
        v166 = v140[5];
        v167 = &v138[v166];
        v168 = &v139[v166];
        v169 = v154(&v138[v166], 1, v152);
        v170 = v154(v168, 1, v152);
        if (v169)
        {
          if (!v170)
          {
            (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v167, v168, v152);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v167, 0, 1, v152);
            goto LABEL_88;
          }
        }
        else
        {
          if (!v170)
          {
            (*(void (**)(char *, char *, uint64_t))(v153 + 40))(v167, v168, v152);
LABEL_88:
            v172 = v140[6];
            v173 = &v138[v172];
            v174 = &v139[v172];
            v175 = v154(&v138[v172], 1, v152);
            v176 = v154(v174, 1, v152);
            if (v175)
            {
              if (!v176)
              {
                (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v173, v174, v152);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v173, 0, 1, v152);
LABEL_94:
                v138[v140[7]] = v139[v140[7]];
                v138[v140[8]] = v139[v140[8]];
                v138[v140[9]] = v139[v140[9]];
                return v151;
              }
            }
            else
            {
              if (!v176)
              {
                (*(void (**)(char *, char *, uint64_t))(v153 + 40))(v173, v174, v152);
                goto LABEL_94;
              }
              (*(void (**)(char *, uint64_t))(v153 + 8))(v173, v152);
            }
            v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
            goto LABEL_94;
          }
          (*(void (**)(char *, uint64_t))(v153 + 8))(v167, v152);
        }
        v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
        goto LABEL_88;
      }
      (*(void (**)(char *, uint64_t))(v153 + 8))(v138, v152);
    }
    v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
    goto LABEL_82;
  }
  if (v144)
  {
LABEL_67:
    v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47E8);
    memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
    return a1;
  }
  v145 = a1;
  v146 = sub_1AD63AF28();
  v147 = *(_QWORD *)(v146 - 8);
  v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48);
  if (v148(v139, 1, v146))
  {
    v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v138, v139, v146);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v138, 0, 1, v146);
  }
  v157 = v140[5];
  v158 = &v138[v157];
  v159 = &v139[v157];
  if (v148(&v139[v157], 1, v146))
  {
    v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v158, v159, v146);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v158, 0, 1, v146);
  }
  v161 = v140[6];
  v162 = &v138[v161];
  v163 = &v139[v161];
  if (v148(&v139[v161], 1, v146))
  {
    v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v162, v163, v146);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v162, 0, 1, v146);
  }
  a1 = v145;
  v138[v140[7]] = v139[v140[7]];
  v138[v140[8]] = v139[v140[8]];
  v138[v140[9]] = v139[v140[9]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v141 + 56))(v138, 0, 1, v140);
  return a1;
}

uint64_t sub_1AD493A84()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD493A90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4800);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_12:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F0);
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[10];
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47E8);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = a3[11];
    }
    goto LABEL_12;
  }
  v14 = *(_QWORD *)(a1 + a3[6]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1AD493B90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD493B9C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4800);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F8);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6]) = (a2 - 1);
        return result;
      }
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47F0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[10];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD47E8);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[11];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1AD493C98()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1ACFFECF8(319, &qword_1EECDCA98, (void (*)(uint64_t))type metadata accessor for StandaloneMsgCharacteristic);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, &qword_1EECDCAA0, (void (*)(uint64_t))type metadata accessor for ChatCharacteristic);
    if (v1 <= 0x3F)
    {
      sub_1ACFFECF8(319, &qword_1EECDCAA8, (void (*)(uint64_t))type metadata accessor for FileTransferCharacteristic);
      if (v2 <= 0x3F)
      {
        sub_1ACFFECF8(319, &qword_1EECDCAB0, (void (*)(uint64_t))type metadata accessor for ChatbotCharacteristic);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t storeEnumTagSinglePayload for MessagingCharacteristic.OneToManyTech(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD493E00 + 4 * byte_1AD687A25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD493E34 + 4 * asc_1AD687A20[v4]))();
}

uint64_t sub_1AD493E34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD493E3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD493E44);
  return result;
}

uint64_t sub_1AD493E50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD493E58);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD493E5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD493E64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessagingCharacteristic.OneToManyTech()
{
  return &type metadata for MessagingCharacteristic.OneToManyTech;
}

uint64_t sub_1AD493E80(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    v6 = a2[2];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = a2[6];
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t)a2 + v9;
    v11 = a1 + v9;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    v12 = sub_1AD63AF28();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    v13(v11, v10, v12);
  }
  return a1;
}

uint64_t sub_1AD493F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1AD63AF28();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1AD493FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(int *)(a3 + 24);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v9 = sub_1AD63AF28();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  swift_retain();
  v10(v8, v7, v9);
  return a1;
}

uint64_t sub_1AD494048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1AD63AF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_1AD4940F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  a1[2] = a2[2];
  *(_OWORD *)((char *)a1 + 42) = *(_OWORD *)((char *)a2 + 42);
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1AD63AF28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1AD494168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1AD63AF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1AD494204()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD494210(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1AD63AF28();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1AD49428C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD494298(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1AD63AF28();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AD49430C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63AF28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AD494388(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = a1;
  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    v3 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    v9 = a2[1];
    v8 = a2[2];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v8;
    *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
    v10 = a3[5];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = sub_1AD63AF28();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    swift_retain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v17 = a3[7];
    *(_BYTE *)(v3 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_BYTE *)(v3 + v17) = *((_BYTE *)a2 + v17);
    v18 = a3[8];
    v19 = a3[9];
    v20 = v3 + v18;
    v21 = (uint64_t)a2 + v18;
    v22 = *(_QWORD *)(v21 + 8);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *(_QWORD *)(v20 + 8) = v22;
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
    *(_BYTE *)(v20 + 24) = *(_BYTE *)(v21 + 24);
    v23 = v3 + v19;
    v24 = (uint64_t)a2 + v19;
    v25 = *(_QWORD *)(v24 + 8);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_QWORD *)(v23 + 8) = v25;
    *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
    *(_BYTE *)(v23 + 24) = *(_BYTE *)(v24 + 24);
    v26 = a3[10];
    v27 = a3[11];
    v28 = v3 + v26;
    v29 = (uint64_t)a2 + v26;
    v30 = *(_QWORD *)(v29 + 8);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_QWORD *)(v28 + 8) = v30;
    *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
    *(_WORD *)(v28 + 24) = *(_WORD *)(v29 + 24);
    v31 = v3 + v27;
    v32 = (uint64_t)a2 + v27;
    v33 = *(_QWORD *)(v32 + 8);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *(_QWORD *)(v31 + 8) = v33;
    *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
    *(_WORD *)(v31 + 24) = *(_WORD *)(v32 + 24);
    *(_BYTE *)(v3 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_1AD49455C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1AD63AF28();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1AD494610(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1AD63AF28();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[8];
  v16 = a3[9];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  v20 = a1 + v16;
  v21 = a2 + v16;
  v22 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  *(_BYTE *)(v20 + 24) = *(_BYTE *)(v21 + 24);
  v23 = a3[10];
  v24 = a3[11];
  v25 = a1 + v23;
  v26 = a2 + v23;
  v27 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v27;
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_WORD *)(v25 + 24) = *(_WORD *)(v26 + 24);
  v28 = a1 + v24;
  v29 = a2 + v24;
  v30 = *(_QWORD *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_QWORD *)(v28 + 8) = v30;
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  *(_WORD *)(v28 + 24) = *(_WORD *)(v29 + 24);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1AD4947C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = a3[5];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1AD63AF28();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 8);
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(v18 + 8) = v20;
  swift_retain();
  swift_release();
  v21 = *(_QWORD *)(v19 + 16);
  *(_BYTE *)(v18 + 24) = *(_BYTE *)(v19 + 24);
  *(_QWORD *)(v18 + 16) = v21;
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a2 + v22 + 8);
  *(_QWORD *)v23 = *(_QWORD *)(a2 + v22);
  *(_QWORD *)(v23 + 8) = v25;
  swift_retain();
  swift_release();
  v26 = *(_QWORD *)(v24 + 16);
  *(_BYTE *)(v23 + 24) = *(_BYTE *)(v24 + 24);
  *(_QWORD *)(v23 + 16) = v26;
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_QWORD *)(a2 + v27 + 8);
  *(_QWORD *)v28 = *(_QWORD *)(a2 + v27);
  *(_QWORD *)(v28 + 8) = v30;
  swift_retain();
  swift_release();
  v31 = *(_QWORD *)(v29 + 16);
  *(_WORD *)(v28 + 24) = *(_WORD *)(v29 + 24);
  *(_QWORD *)(v28 + 16) = v31;
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a2 + v32 + 8);
  *(_QWORD *)v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(v33 + 8) = v35;
  swift_retain();
  swift_release();
  v36 = *(_QWORD *)(v34 + 16);
  *(_WORD *)(v33 + 24) = *(_WORD *)(v34 + 24);
  *(_QWORD *)(v33 + 16) = v36;
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

_OWORD *sub_1AD4949EC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[8];
  v14 = a3[9];
  v15 = (_OWORD *)((char *)a1 + v13);
  v16 = (_OWORD *)((char *)a2 + v13);
  *v15 = *v16;
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)v16 + 9);
  v17 = (_OWORD *)((char *)a1 + v14);
  v18 = (_OWORD *)((char *)a2 + v14);
  *v17 = *v18;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v18 + 9);
  v19 = a3[10];
  v20 = a3[11];
  v21 = (_OWORD *)((char *)a1 + v19);
  v22 = (_OWORD *)((char *)a2 + v19);
  *v21 = *v22;
  *(_OWORD *)((char *)v21 + 10) = *(_OWORD *)((char *)v22 + 10);
  v23 = (_OWORD *)((char *)a1 + v20);
  v24 = (_OWORD *)((char *)a2 + v20);
  *v23 = *v24;
  *(_OWORD *)((char *)v23 + 10) = *(_OWORD *)((char *)v24 + 10);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

uint64_t sub_1AD494B48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  swift_release();
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  swift_release();
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  *(_BYTE *)(v20 + 24) = *(_BYTE *)(v21 + 24);
  v22 = a3[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  swift_release();
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  *(_WORD *)(v23 + 24) = *(_WORD *)(v24 + 24);
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  swift_release();
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  *(_WORD *)(v26 + 24) = *(_WORD *)(v27 + 24);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1AD494D48()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD494D54(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1AD494DD4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD494DE0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1AD494E58()
{
  unint64_t v0;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1AD494EF8(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    v9 = a2[1];
    v8 = a2[2];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v8;
    *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
    v10 = a2[4];
    v11 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v11;
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    v12 = a3[7];
    v13 = (void *)(a1 + v12);
    v14 = (char *)a2 + v12;
    *(_QWORD *)(a1 + 32) = v10;
    v15 = sub_1AD63AF28();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
    swift_retain();
    swift_retain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = a3[8];
    v20 = (void *)(a1 + v19);
    v21 = (char *)a2 + v19;
    if (v17((char *)a2 + v19, 1, v15))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v20, v21, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
    }
    v23 = a3[9];
    v24 = a1 + v23;
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *(_QWORD *)v24 = *v25;
    *(_QWORD *)(v24 + 8) = v26;
    v27 = v25 + 2;
    v28 = v25[3];
    swift_retain();
    if (v28 == 1)
    {
      *(_OWORD *)(v24 + 16) = *v27;
    }
    else
    {
      *(_QWORD *)(v24 + 16) = *(_QWORD *)v27;
      *(_QWORD *)(v24 + 24) = v28;
      swift_bridgeObjectRetain();
    }
    v29 = a3[10];
    v30 = a1 + v29;
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = v31[1];
    *(_QWORD *)v30 = *v31;
    *(_QWORD *)(v30 + 8) = v32;
    v33 = v31 + 2;
    v34 = v31[3];
    swift_retain();
    if (v34 == 1)
    {
      *(_OWORD *)(v30 + 16) = *v33;
    }
    else
    {
      *(_QWORD *)(v30 + 16) = *(_QWORD *)v33;
      *(_QWORD *)(v30 + 24) = v34;
      swift_bridgeObjectRetain();
    }
    v35 = a3[12];
    *(_BYTE *)(a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v36 = a1 + v35;
    v37 = (uint64_t)a2 + v35;
    v38 = *(_QWORD *)(v37 + 8);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *(_QWORD *)(v36 + 8) = v38;
    *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
    *(_BYTE *)(v36 + 24) = *(_BYTE *)(v37 + 24);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1AD495158(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_release();
  v4 = a1 + a2[7];
  v5 = sub_1AD63AF28();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[8];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = a1 + a2[9];
  swift_release();
  if (*(_QWORD *)(v9 + 24) != 1)
    swift_bridgeObjectRelease();
  v10 = a1 + a2[10];
  swift_release();
  if (*(_QWORD *)(v10 + 24) != 1)
    swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1AD495250(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v9 = a3[7];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_QWORD *)(a1 + 32) = v7;
  v12 = sub_1AD63AF28();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  swift_retain();
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = a3[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *(_QWORD *)v21 = *v22;
  *(_QWORD *)(v21 + 8) = v23;
  v24 = v22 + 2;
  v25 = v22[3];
  swift_retain();
  if (v25 == 1)
  {
    *(_OWORD *)(v21 + 16) = *v24;
  }
  else
  {
    *(_QWORD *)(v21 + 16) = *(_QWORD *)v24;
    *(_QWORD *)(v21 + 24) = v25;
    swift_bridgeObjectRetain();
  }
  v26 = a3[10];
  v27 = a1 + v26;
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *(_QWORD *)v27 = *v28;
  *(_QWORD *)(v27 + 8) = v29;
  v30 = v28 + 2;
  v31 = v28[3];
  swift_retain();
  if (v31 == 1)
  {
    *(_OWORD *)(v27 + 16) = *v30;
  }
  else
  {
    *(_QWORD *)(v27 + 16) = *(_QWORD *)v30;
    *(_QWORD *)(v27 + 24) = v31;
    swift_bridgeObjectRetain();
  }
  v32 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = v35;
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  *(_BYTE *)(v33 + 24) = *(_BYTE *)(v34 + 24);
  swift_retain();
  return a1;
}

uint64_t sub_1AD495494(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v10 = a3[7];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1AD63AF28();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = a3[8];
  v20 = (void *)(a1 + v19);
  v21 = (void *)(a2 + v19);
  v22 = v15((void *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v20, v21, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v20, v13);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v20, v21, v13);
LABEL_13:
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a2 + v25 + 8);
  *v26 = *(_QWORD *)(a2 + v25);
  v26[1] = v28;
  swift_retain();
  swift_release();
  v29 = *(_QWORD *)(v27 + 24);
  if (v26[3] == 1)
  {
    if (v29 != 1)
    {
      v26[2] = *(_QWORD *)(v27 + 16);
      v26[3] = *(_QWORD *)(v27 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v29 == 1)
  {
    sub_1AD0256E4((uint64_t)(v26 + 2));
LABEL_18:
    *((_OWORD *)v26 + 1) = *(_OWORD *)(v27 + 16);
    goto LABEL_20;
  }
  v26[2] = *(_QWORD *)(v27 + 16);
  v26[3] = *(_QWORD *)(v27 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_20:
  v30 = a3[10];
  v31 = (_QWORD *)(a1 + v30);
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a2 + v30 + 8);
  *v31 = *(_QWORD *)(a2 + v30);
  v31[1] = v33;
  swift_retain();
  swift_release();
  v34 = *(_QWORD *)(v32 + 24);
  if (v31[3] != 1)
  {
    if (v34 != 1)
    {
      v31[2] = *(_QWORD *)(v32 + 16);
      v31[3] = *(_QWORD *)(v32 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    sub_1AD0256E4((uint64_t)(v31 + 2));
    goto LABEL_25;
  }
  if (v34 == 1)
  {
LABEL_25:
    *((_OWORD *)v31 + 1) = *(_OWORD *)(v32 + 16);
    goto LABEL_27;
  }
  v31[2] = *(_QWORD *)(v32 + 16);
  v31[3] = *(_QWORD *)(v32 + 24);
  swift_bridgeObjectRetain();
LABEL_27:
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a2 + v35 + 8);
  *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
  *(_QWORD *)(v36 + 8) = v38;
  swift_retain();
  swift_release();
  v39 = *(_QWORD *)(v37 + 16);
  *(_BYTE *)(v36 + 24) = *(_BYTE *)(v37 + 24);
  *(_QWORD *)(v36 + 16) = v39;
  return a1;
}

uint64_t sub_1AD495818(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[9];
  v18 = a3[10];
  v19 = *(_OWORD *)(a2 + v17);
  v20 = *(_OWORD *)(a2 + v17 + 16);
  v21 = (_OWORD *)(a1 + v17);
  *v21 = v19;
  v21[1] = v20;
  v22 = (_OWORD *)(a1 + v18);
  v23 = (_OWORD *)(a2 + v18);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v26 = (_OWORD *)(a1 + v25);
  v27 = (_OWORD *)(a2 + v25);
  *v26 = *v27;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)v27 + 9);
  return a1;
}

uint64_t sub_1AD4959BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[8];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v16, v17, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v16, v17, v9);
LABEL_13:
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  swift_release();
  v24 = (_OWORD *)(v23 + 16);
  if (*(_QWORD *)(v22 + 24) == 1)
  {
LABEL_16:
    *(_OWORD *)(v22 + 16) = *v24;
    goto LABEL_18;
  }
  v25 = *(_QWORD *)(v23 + 24);
  if (v25 == 1)
  {
    sub_1AD0256E4(v22 + 16);
    goto LABEL_16;
  }
  *(_QWORD *)(v22 + 16) = *(_QWORD *)v24;
  *(_QWORD *)(v22 + 24) = v25;
  swift_bridgeObjectRelease();
LABEL_18:
  v26 = a3[10];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  swift_release();
  v29 = (_QWORD *)(v28 + 16);
  if (*(_QWORD *)(v27 + 24) != 1)
  {
    v30 = *(_QWORD *)(v28 + 24);
    if (v30 != 1)
    {
      *(_QWORD *)(v27 + 16) = *v29;
      *(_QWORD *)(v27 + 24) = v30;
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_1AD0256E4(v27 + 16);
  }
  *(_OWORD *)(v27 + 16) = *(_OWORD *)v29;
LABEL_23:
  v31 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_OWORD *)(a1 + v31) = *(_OWORD *)v33;
  swift_release();
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
  *(_BYTE *)(v32 + 24) = *(_BYTE *)(v33 + 24);
  return a1;
}

uint64_t sub_1AD495CB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD495CC0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1AD495D40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD495D4C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_1AD495DC4()
{
  unint64_t v0;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_1AD495E74(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63AF28();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    v20 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  }
  return a1;
}

uint64_t sub_1AD496058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_1AD63AF28();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  v8 = a1 + *(int *)(a2 + 24);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v8, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  return result;
}

char *sub_1AD496128(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v18] = a2[v18];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_1AD4962E0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;

  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_19:
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_1AD496570(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v18] = a2[v18];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_1AD496728(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_19:
  v24 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v24] = a2[v24];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t sub_1AD4969B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD4969C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1AD496A50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD496A5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  return result;
}

void sub_1AD496AD8()
{
  unint64_t v0;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for ChatbotCharacteristic.ChatbotMessageTech(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD496BB4 + 4 * byte_1AD687A2F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD496BE8 + 4 * byte_1AD687A2A[v4]))();
}

uint64_t sub_1AD496BE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD496BF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD496BF8);
  return result;
}

uint64_t sub_1AD496C04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD496C0CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD496C10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD496C18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChatbotCharacteristic.ChatbotMessageTech()
{
  return &type metadata for ChatbotCharacteristic.ChatbotMessageTech;
}

unint64_t sub_1AD496C34()
{
  unint64_t result;

  result = qword_1EECDCAF8;
  if (!qword_1EECDCAF8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687BFC, &type metadata for ChatbotCharacteristic.ChatbotMessageTech);
    atomic_store(result, (unint64_t *)&qword_1EECDCAF8);
  }
  return result;
}

unint64_t sub_1AD496C78()
{
  unint64_t result;

  result = qword_1EECDCB00;
  if (!qword_1EECDCB00)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687A9C, &type metadata for MessagingCharacteristic.OneToManyTech);
    atomic_store(result, (unint64_t *)&qword_1EECDCB00);
  }
  return result;
}

uint64_t sub_1AD496CC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496CF8(type metadata accessor for Chatbot.MenuL0, a1);
}

uint64_t sub_1AD496CCC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496DFC(type metadata accessor for Chatbot.MenuL0, type metadata accessor for Chatbot.Action, a1);
}

uint64_t sub_1AD496CE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496EFC(type metadata accessor for Chatbot.MenuL0, a1);
}

uint64_t sub_1AD496CEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496CF8(type metadata accessor for Chatbot.MenuL1.Entry, a1);
}

uint64_t sub_1AD496CF8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v2;
  v6 = a1(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  sub_1AD0D3D2C(v4, (uint64_t)&v16 - v7, a1);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    result = sub_1AD066230((uint64_t)v8, a1);
    v10 = 0;
    *(_QWORD *)a2 = 0;
    v11 = 0uLL;
    *(_OWORD *)(a2 + 8) = 0u;
    v12 = 0uLL;
    v13 = 0uLL;
    v14 = 0uLL;
  }
  else
  {
    v15 = *((_QWORD *)v8 + 2);
    v11 = *(_OWORD *)(v8 + 24);
    v12 = *(_OWORD *)(v8 + 40);
    v13 = *(_OWORD *)(v8 + 56);
    v14 = *(_OWORD *)(v8 + 72);
    v10 = *((_QWORD *)v8 + 11);
    *(_OWORD *)a2 = *(_OWORD *)v8;
    *(_QWORD *)(a2 + 16) = v15;
  }
  *(_OWORD *)(a2 + 24) = v11;
  *(_OWORD *)(a2 + 40) = v12;
  *(_OWORD *)(a2 + 56) = v13;
  *(_OWORD *)(a2 + 72) = v14;
  *(_QWORD *)(a2 + 88) = v10;
  return result;
}

uint64_t sub_1AD496DE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496DFC(type metadata accessor for Chatbot.MenuL1.Entry, type metadata accessor for Chatbot.Action, a1);
}

uint64_t sub_1AD496DFC@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v6 = v3;
  v8 = a1(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  sub_1AD0D3D2C(v6, (uint64_t)&v14 - v9, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1AD2A5214((uint64_t)v10, a3, a2);
    v11 = a2(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 0, 1, v11);
  }
  else
  {
    sub_1AD066230((uint64_t)v10, a1);
    v13 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
}

uint64_t sub_1AD496EF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496EFC(type metadata accessor for Chatbot.MenuL1.Entry, a1);
}

uint64_t sub_1AD496EFC@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v2;
  v6 = a1(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - v7;
  sub_1AD0D3D2C(v4, (uint64_t)&v13 - v7, a1);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v10 = *(_OWORD *)v8;
    v11 = *((_OWORD *)v8 + 1);
    v12 = *((_QWORD *)v8 + 4);
  }
  else
  {
    result = sub_1AD066230((uint64_t)v8, a1);
    v12 = 0;
    v10 = 0uLL;
    v11 = 0uLL;
  }
  *(_OWORD *)a2 = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  return result;
}

uint64_t sub_1AD496FB8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD497A3C(type metadata accessor for Chatbot.MenuL2.Entry, a1);
}

uint64_t sub_1AD496FC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496DFC(type metadata accessor for Chatbot.MenuL2.Entry, type metadata accessor for Chatbot.Action, a1);
}

uint64_t sub_1AD496FD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for Chatbot.Action.ActionType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Chatbot.Action(0);
  sub_1AD0D3D2C(v1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1AD066230((uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
    v7 = type metadata accessor for Chatbot.URLAction(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 1, 1, v7);
  }
  else
  {
    sub_1AD2A5214((uint64_t)v5, a1, type metadata accessor for Chatbot.URLAction);
    v9 = type metadata accessor for Chatbot.URLAction(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
}

uint64_t sub_1AD4970DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for Chatbot.Action.ActionType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Chatbot.Action(0);
  sub_1AD0D3D2C(v1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1AD2A5214((uint64_t)v5, a1, type metadata accessor for Chatbot.DialerAction);
    v7 = type metadata accessor for Chatbot.DialerAction(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  else
  {
    sub_1AD066230((uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
    v9 = type metadata accessor for Chatbot.DialerAction(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_1AD4971E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for Chatbot.Action.ActionType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Chatbot.Action(0);
  sub_1AD0D3D2C(v1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1AD2A5214((uint64_t)v5, a1, type metadata accessor for Chatbot.MapAction);
    v7 = type metadata accessor for Chatbot.MapAction(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  else
  {
    sub_1AD066230((uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
    v9 = type metadata accessor for Chatbot.MapAction(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_1AD4972EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for Chatbot.Action.ActionType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Chatbot.Action(0);
  sub_1AD0D3D2C(v1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_1AD2A5214((uint64_t)v5, a1, type metadata accessor for Chatbot.CalendarAction);
    v7 = type metadata accessor for Chatbot.CalendarAction(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  else
  {
    sub_1AD066230((uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
    v9 = type metadata accessor for Chatbot.CalendarAction(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_1AD4973F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;
  uint64_t v13;

  v3 = type metadata accessor for Chatbot.Action.ActionType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Chatbot.Action(0);
  sub_1AD0D3D2C(v1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 4)
  {
    v8 = *(_OWORD *)v5;
    v9 = *((_OWORD *)v5 + 1);
    v10 = *((_OWORD *)v5 + 2);
    v11 = *((_OWORD *)v5 + 3);
    v12 = v5[64];
  }
  else
  {
    result = sub_1AD066230((uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
    v8 = 0uLL;
    v12 = -1;
    v9 = 0uLL;
    v10 = 0uLL;
    v11 = 0uLL;
  }
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v9;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  return result;
}

uint64_t sub_1AD4974D4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  int v8;
  uint64_t v9;

  v3 = type metadata accessor for Chatbot.Action.ActionType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Chatbot.Action(0);
  sub_1AD0D3D2C(v1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
  result = swift_getEnumCaseMultiPayload();
  v8 = result;
  if ((_DWORD)result != 5)
    result = sub_1AD066230((uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
  *a1 = v8 != 5;
  return result;
}

uint64_t sub_1AD497594@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  uint64_t v9;

  v3 = type metadata accessor for Chatbot.Action.ActionType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Chatbot.Action(0);
  sub_1AD0D3D2C(v1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 6)
  {
    v8 = *v5;
  }
  else
  {
    result = sub_1AD066230((uint64_t)v5, type metadata accessor for Chatbot.Action.ActionType);
    v8 = 2;
  }
  *a1 = v8;
  return result;
}

uint64_t sub_1AD497654@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for Chatbot.DialerAction(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD0D3D2C(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1AD066230((uint64_t)v6, type metadata accessor for Chatbot.DialerAction);
    v8 = type metadata accessor for Chatbot.DialerAction.DialPhoneNumber(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  else
  {
    sub_1AD2A5214((uint64_t)v6, a1, type metadata accessor for Chatbot.DialerAction.DialPhoneNumber);
    v10 = type metadata accessor for Chatbot.DialerAction.DialPhoneNumber(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
}

uint64_t sub_1AD497744@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496DFC(type metadata accessor for Chatbot.DialerAction, type metadata accessor for Chatbot.DialerAction.DialEnrichedCall, a1);
}

uint64_t sub_1AD497758@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for Chatbot.DialerAction(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD0D3D2C(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1AD2A5214((uint64_t)v6, a1, type metadata accessor for Chatbot.DialerAction.DialVideoCall);
    v8 = type metadata accessor for Chatbot.DialerAction.DialVideoCall(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    sub_1AD066230((uint64_t)v6, type metadata accessor for Chatbot.DialerAction);
    v10 = type metadata accessor for Chatbot.DialerAction.DialVideoCall(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t sub_1AD49784C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD497E18(type metadata accessor for Chatbot.URLAction, type metadata accessor for Chatbot.URLAction.OpenURL, a1);
}

uint64_t sub_1AD497860@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD49789C(type metadata accessor for Chatbot.Message, type metadata accessor for Chatbot.GeneralPurposeCardMessage, a1);
}

uint64_t sub_1AD497874@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496DFC(type metadata accessor for Chatbot.Message, type metadata accessor for Chatbot.GeneralPurposeCardCarouselMessage, a1);
}

uint64_t sub_1AD497888@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD49789C(type metadata accessor for Chatbot.RootMessage, type metadata accessor for Chatbot.Message, a1);
}

uint64_t sub_1AD49789C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v6 = v3;
  v8 = a1(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  sub_1AD0D3D2C(v6, (uint64_t)&v14 - v9, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1AD066230((uint64_t)v10, a1);
    v11 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 1, 1, v11);
  }
  else
  {
    sub_1AD2A5214((uint64_t)v10, a3, a2);
    v13 = a2(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 0, 1, v13);
  }
}

uint64_t sub_1AD497990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v6;

  v1 = type metadata accessor for Chatbot.RootMessage(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD0D3D2C(v0, (uint64_t)v3, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
    return *(_QWORD *)v3;
  sub_1AD066230((uint64_t)v3, type metadata accessor for Chatbot.RootMessage);
  return 0;
}

uint64_t sub_1AD497A30@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD497A3C(type metadata accessor for Chatbot.Suggestion, a1);
}

uint64_t sub_1AD497A3C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v4 = v2;
  v6 = a1(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  sub_1AD0D3D2C(v4, (uint64_t)&v15 - v7, a1);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    result = sub_1AD066230((uint64_t)v8, a1);
    v10 = 0;
    v11 = 0uLL;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_QWORD *)(a2 + 48) = 0;
    v12 = 0uLL;
  }
  else
  {
    v13 = *((_QWORD *)v8 + 6);
    v11 = *(_OWORD *)(v8 + 56);
    v12 = *(_OWORD *)(v8 + 72);
    v10 = *((_QWORD *)v8 + 11);
    v14 = *((_OWORD *)v8 + 1);
    *(_OWORD *)a2 = *(_OWORD *)v8;
    *(_OWORD *)(a2 + 16) = v14;
    *(_OWORD *)(a2 + 32) = *((_OWORD *)v8 + 2);
    *(_QWORD *)(a2 + 48) = v13;
  }
  *(_OWORD *)(a2 + 56) = v11;
  *(_OWORD *)(a2 + 72) = v12;
  *(_QWORD *)(a2 + 88) = v10;
  return result;
}

uint64_t sub_1AD497B24@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496DFC(type metadata accessor for Chatbot.Suggestion, type metadata accessor for Chatbot.Action, a1);
}

uint64_t sub_1AD497B38@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD496DFC(type metadata accessor for Chatbot.GeneralPurposeCardMessage.Layout, type metadata accessor for Chatbot.GeneralPurposeCardMessage.Layout.HorizontalLayout, a1);
}

uint64_t sub_1AD497B4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD49789C(type metadata accessor for Chatbot.GeneralPurposeCardMessage.Layout, type metadata accessor for Chatbot.GeneralPurposeCardMessage.Layout.VerticalLayout, a1);
}

uint64_t sub_1AD497B60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = type metadata accessor for Chatbot.MapAction(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD0D3D2C(v1, (uint64_t)v5, v6);
  v7 = type metadata accessor for Chatbot.MapAction.ShowLocation(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_1AD066230((uint64_t)v5, type metadata accessor for Chatbot.MapAction);
    v9 = 1;
  }
  else
  {
    sub_1AD2A5214((uint64_t)v5, a1, type metadata accessor for Chatbot.MapAction.ShowLocation);
    v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v9, 1, v7);
}

BOOL sub_1AD497C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v7;

  v1 = type metadata accessor for Chatbot.MapAction(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD0D3D2C(v0, (uint64_t)v3, type metadata accessor for Chatbot.MapAction);
  v4 = type metadata accessor for Chatbot.MapAction.ShowLocation(0);
  v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) == 1;
  sub_1AD066230((uint64_t)v3, type metadata accessor for Chatbot.MapAction);
  return v5;
}

uint64_t sub_1AD497CE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;

  v3 = *((char *)v1 + 56);
  if (v3 < 0)
  {
    v10 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v7 = 0;
    v4 = 0;
    v5 = 0;
    v12 = 0;
  }
  else
  {
    v4 = v1[5];
    v5 = v1[6];
    v6 = v1[3];
    v7 = v1[4];
    v8 = v1[1];
    v9 = v1[2];
    v10 = *v1;
    v11 = v6 & 1;
    v12 = v3 & 1;
    swift_retain();
    result = swift_retain();
  }
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = v12;
  return result;
}

uint64_t sub_1AD497D8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t result;
  __int128 v7;

  if ((char)v1[7] < 0)
  {
    v4 = v1[3];
    v7 = *(_OWORD *)(v1 + 1);
    v3 = *v1;
    swift_bridgeObjectRetain();
    result = swift_retain();
    v5 = v7;
  }
  else
  {
    v3 = 0;
    v4 = 0;
    v5 = 0uLL;
  }
  *(_QWORD *)a1 = v3;
  *(_OWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  return result;
}

uint64_t sub_1AD497E04@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD497E18(type metadata accessor for Chatbot.CalendarAction, type metadata accessor for Chatbot.CalendarAction.CreateEvent, a1);
}

uint64_t sub_1AD497E18@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = a1(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - v8;
  sub_1AD0D3D2C(v3, (uint64_t)&v12 - v8, a1);
  sub_1AD2A5214((uint64_t)v9, a3, a2);
  v10 = a2(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a3, 0, 1, v10);
}

uint64_t sub_1AD497EC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  __int128 v10;

  if ((*(_BYTE *)(v1 + 64) & 1) != 0)
  {
    v3 = 0;
    v4 = 0;
    v5 = 0uLL;
    *(_OWORD *)a1 = 0u;
    v6 = 0uLL;
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 56);
    v9 = *(_OWORD *)(v1 + 24);
    v10 = *(_OWORD *)(v1 + 40);
    v7 = *(_QWORD *)(v1 + 8);
    v3 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)a1 = *(_QWORD *)v1;
    *(_QWORD *)(a1 + 8) = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    result = swift_retain();
    v5 = v9;
    v6 = v10;
  }
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 56) = v4;
  return result;
}

uint64_t sub_1AD497F70@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  uint64_t result;

  if (*((_BYTE *)v1 + 64) == 1)
  {
    v3 = *((_BYTE *)v1 + 32);
    v5 = v1[2];
    v4 = v1[3];
    v8 = v1;
    v6 = *v1;
    v7 = v8[1];
    v9 = v3 & 1;
    swift_bridgeObjectRetain();
    result = swift_retain();
  }
  else
  {
    v6 = 0;
    v7 = 0;
    v5 = 0;
    v4 = 0;
    v9 = 0;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_1AD497FEC()
{
  return 1;
}

uint64_t sub_1AD497FF4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t sub_1AD498048()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1AD498064()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD4980B8()
{
  return sub_1AD63B7F8();
}

uint64_t sub_1AD4980D4()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD498124@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1AD498174(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x80000001AD69DEE0;
}

void *sub_1AD498194()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDCB28);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD680900;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 64) = &type metadata for ATXHeaderValidator;
  *(_QWORD *)(inited + 72) = &off_1E5CB1B20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC1E8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v1 + 32) = &unk_1E5CB1B48;
  *(_BYTE *)(inited + 40) = 0;
  *(_QWORD *)(inited + 48) = v1;
  *(_BYTE *)(inited + 80) = 1;
  *(_QWORD *)(inited + 112) = &type metadata for AVCIHeaderValidator;
  *(_QWORD *)(inited + 120) = &off_1E5CB40D8;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v2 + 32) = &unk_1E5CB4100;
  *(_BYTE *)(inited + 88) = 1;
  *(_QWORD *)(inited + 96) = 4;
  *(_QWORD *)(inited + 104) = v2;
  *(_BYTE *)(inited + 128) = 2;
  *(_QWORD *)(inited + 160) = &type metadata for HEICHeaderValidator;
  *(_QWORD *)(inited + 168) = &off_1E5CB48C8;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v3 + 32) = &unk_1E5CB48F0;
  *(_BYTE *)(inited + 136) = 2;
  *(_QWORD *)(inited + 144) = 4;
  *(_QWORD *)(inited + 152) = v3;
  *(_BYTE *)(inited + 176) = 3;
  *(_QWORD *)(inited + 208) = &type metadata for MSF1HeaderValidator;
  *(_QWORD *)(inited + 216) = &off_1E5CB5738;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v4 + 32) = &unk_1E5CB5760;
  *(_BYTE *)(inited + 184) = 3;
  *(_QWORD *)(inited + 192) = 4;
  *(_QWORD *)(inited + 200) = v4;
  *(_BYTE *)(inited + 224) = 4;
  *(_QWORD *)(inited + 256) = &type metadata for MIF1HeaderValidator;
  *(_QWORD *)(inited + 264) = &off_1E5CB5660;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v5 + 32) = &unk_1E5CB5688;
  *(_BYTE *)(inited + 232) = 4;
  *(_QWORD *)(inited + 240) = 4;
  *(_QWORD *)(inited + 248) = v5;
  *(_BYTE *)(inited + 272) = 5;
  *(_QWORD *)(inited + 304) = &type metadata for AVIFHeaderValidator;
  *(_QWORD *)(inited + 312) = &off_1E5CB41B0;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v6 + 32) = &unk_1E5CB41D8;
  *(_BYTE *)(inited + 280) = 5;
  *(_QWORD *)(inited + 288) = 4;
  *(_QWORD *)(inited + 296) = v6;
  *(_BYTE *)(inited + 320) = 6;
  *(_QWORD *)(inited + 352) = &type metadata for AVISHeaderValidator;
  *(_QWORD *)(inited + 360) = &off_1E5CB4288;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v7 + 32) = &unk_1E5CB42B0;
  *(_BYTE *)(inited + 328) = 6;
  *(_QWORD *)(inited + 336) = 4;
  *(_QWORD *)(inited + 344) = v7;
  *(_BYTE *)(inited + 368) = 7;
  *(_QWORD *)(inited + 400) = &type metadata for HEIFHeaderValidator;
  *(_QWORD *)(inited + 408) = &off_1E5CB49A0;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v8 + 32) = &unk_1E5CB49C8;
  *(_BYTE *)(inited + 376) = 7;
  *(_QWORD *)(inited + 384) = 4;
  *(_QWORD *)(inited + 392) = v8;
  *(_BYTE *)(inited + 416) = 8;
  *(_QWORD *)(inited + 448) = &type metadata for HEIFJPEGHeaderValidator;
  *(_QWORD *)(inited + 456) = &off_1E5CBA9D8;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v9 + 32) = &unk_1E5CBAA00;
  *(_BYTE *)(inited + 424) = 8;
  *(_QWORD *)(inited + 432) = v9;
  *(_BYTE *)(inited + 464) = 9;
  *(_QWORD *)(inited + 496) = &type metadata for JPEGEXTHeaderValidator;
  *(_QWORD *)(inited + 504) = &off_1E5CB9BF8;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v10 + 32) = &unk_1E5CB9C20;
  *(_BYTE *)(inited + 472) = 9;
  *(_QWORD *)(inited + 480) = v10;
  *(_BYTE *)(inited + 512) = 10;
  *(_QWORD *)(inited + 544) = &type metadata for MPOHeaderValidator;
  *(_QWORD *)(inited + 552) = &off_1E5CB3148;
  sub_1AD3F8118(inited + 520);
  *(_BYTE *)(inited + 560) = 11;
  *(_QWORD *)(inited + 592) = &type metadata for JPEGHeaderValidator;
  *(_QWORD *)(inited + 600) = &off_1E5CB55B8;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v11 + 32) = &unk_1E5C9D868;
  *(_BYTE *)(inited + 568) = 11;
  *(_QWORD *)(inited + 576) = v11;
  *(_BYTE *)(inited + 608) = 12;
  *(_QWORD *)(inited + 640) = &type metadata for PNGHeaderValidator;
  *(_QWORD *)(inited + 648) = &off_1E5CB39A0;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v12 + 32) = &unk_1E5CB39C8;
  *(_BYTE *)(inited + 616) = 12;
  *(_QWORD *)(inited + 624) = v12;
  *(_BYTE *)(inited + 656) = 13;
  *(_QWORD *)(inited + 688) = &type metadata for WEBPHeaderValidator;
  *(_QWORD *)(inited + 696) = &off_1E5CB6138;
  sub_1AD3F84BC(inited + 664);
  *(_BYTE *)(inited + 704) = 14;
  *(_QWORD *)(inited + 736) = &type metadata for TIFFHeaderValidator;
  *(_QWORD *)(inited + 744) = &off_1E5CB5BB8;
  sub_1AD3F84D8(inited + 712);
  *(_BYTE *)(inited + 752) = 15;
  *(_QWORD *)(inited + 784) = &type metadata for BMPHeaderValidator;
  *(_QWORD *)(inited + 792) = &off_1E5CB1E40;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v13 + 32) = &unk_1E5C9D818;
  *(_BYTE *)(inited + 760) = 15;
  *(_QWORD *)(inited + 768) = v13;
  *(_BYTE *)(inited + 800) = 16;
  *(_QWORD *)(inited + 832) = &type metadata for GIFHeaderValidator;
  *(_QWORD *)(inited + 840) = &off_1E5CB2E60;
  sub_1AD3F8544(inited + 808);
  *(_BYTE *)(inited + 848) = 17;
  *(_QWORD *)(inited + 880) = &type metadata for JPEGXLCodeStreamHeaderValidator;
  *(_QWORD *)(inited + 888) = &off_1E5CC1120;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v14 + 32) = &unk_1E5C9D840;
  *(_BYTE *)(inited + 856) = 17;
  *(_QWORD *)(inited + 864) = v14;
  *(_BYTE *)(inited + 896) = 18;
  *(_QWORD *)(inited + 928) = &type metadata for JPEGXLContainerHeaderValidator;
  *(_QWORD *)(inited + 936) = &off_1E5CC1010;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v15 + 32) = &unk_1E5CC1038;
  *(_BYTE *)(inited + 904) = 18;
  *(_QWORD *)(inited + 912) = v15;
  result = (void *)sub_1AD43992C(inited);
  off_1EECDCB08 = result;
  return result;
}

void sub_1AD4986F4()
{
  off_1EECDCB10 = &unk_1E5C9D7E0;
}

Swift::Bool __swiftcall Data.hasValidHeader(for:)(BlastDoor::ImageHeader a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v13[2];
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v4 = v1;
  v5 = *(unsigned __int8 *)a1;
  if (qword_1EECD15C0 != -1)
    swift_once();
  v6 = off_1EECDCB08;
  if (*((_QWORD *)off_1EECDCB08 + 2) && (v7 = sub_1AD0DFD9C(v5), (v8 & 1) != 0))
  {
    sub_1AD0CFC4C(v6[7] + 40 * v7, (uint64_t)v13);
    sub_1AD00FA24(v13, (uint64_t)v14);
    v9 = v15;
    v10 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32))(v4, v3, v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

BlastDoor::ImageHeader __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Data.sniffedImageUTType()()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  unsigned __int8 *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unsigned __int8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v17;
  __int128 v18[2];
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = v1;
  v3 = v0;
  v4 = v2;
  if (qword_1EECD15C8 != -1)
    goto LABEL_16;
  while (1)
  {
    v5 = off_1EECDCB10;
    v6 = *((_QWORD *)off_1EECDCB10 + 2);
    if (!v6)
      break;
    v17 = v4;
    v7 = qword_1EECD15C0;
    swift_bridgeObjectRetain();
    if (v7 != -1)
      swift_once();
    v8 = 0;
    while (1)
    {
      v9 = v8 + 1;
      if (__OFADD__(v8, 1))
        break;
      v10 = off_1EECDCB08;
      if (!*((_QWORD *)off_1EECDCB08 + 2) || (v11 = v5[v8 + 32], v12 = sub_1AD0DFD9C(v11), (v13 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        sub_1AD499018();
        swift_allocError();
        LOBYTE(v0) = swift_willThrow();
        return (char)v0;
      }
      sub_1AD0CFC4C(v10[7] + 40 * v12, (uint64_t)v18);
      sub_1AD00FA24(v18, (uint64_t)v19);
      v14 = v20;
      v15 = v21;
      v4 = (unsigned __int8 *)__swift_project_boxed_opaque_existential_1(v19, v20);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 32))(v3, v22, v14, v15) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        *v17 = v11;
        LOBYTE(v0) = __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return (char)v0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      ++v8;
      if (v9 == v6)
      {
        LOBYTE(v0) = swift_bridgeObjectRelease();
        v4 = v17;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_16:
    LOBYTE(v0) = swift_once();
  }
LABEL_12:
  *v4 = 19;
  return (char)v0;
}

Swift::Bool __swiftcall Data.isAnimatedPNG()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::Bool result;

  v1 = v0;
  v2 = sub_1AD63B78C();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X9 }
  return result;
}

uint64_t sub_1AD498A28()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  unint64_t v12;

  if (BYTE6(v0) < 8uLL)
    return 0;
  *(_BYTE *)(v3 - 81) = 12;
  if (!Data.hasValidHeader(for:)((BlastDoor::ImageHeader)(v3 - 81)))
    return 0;
  *(_QWORD *)(v3 - 96) = 8;
  if (!v2)
  {
    *(_QWORD *)(v3 - 104) = BYTE6(v0);
    goto LABEL_10;
  }
  if (v2 == 1)
  {
    LODWORD(v4) = HIDWORD(v1) - v1;
    if (!__OFSUB__(HIDWORD(v1), (_DWORD)v1))
    {
      v4 = (int)v4;
      goto LABEL_9;
    }
    __break(1u);
LABEL_23:
    __break(1u);
    JUMPOUT(0x1AD498DB0);
  }
  v6 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = __OFSUB__(v5, v6);
  v4 = v5 - v6;
  if (v7)
    goto LABEL_23;
LABEL_9:
  *(_QWORD *)(v3 - 104) = v4;
  if (v4 < 0)
  {
    sub_1AD63BE1C();
    __break(1u);
    JUMPOUT(0x1AD498E10);
  }
LABEL_10:
  sub_1AD498E50(v3 - 96, v1, v0);
  if (v8 < 0)
    return 0;
  v9 = *(_QWORD *)(v3 - 96);
  v10 = v8 + v9;
  if (__OFADD__(v8, v9))
  {
    __break(1u);
    goto LABEL_21;
  }
  v11 = __OFSUB__(HIDWORD(v1), (_DWORD)v1);
  *(_DWORD *)(v3 - 108) = v11;
  *(_QWORD *)(v3 - 128) = BYTE6(v0);
  *(_QWORD *)(v3 - 120) = HIDWORD(v1) - (int)v1;
  v7 = __OFADD__(v10, 8);
  v12 = v10 + 8;
  if (v7)
  {
LABEL_21:
    __break(1u);
    JUMPOUT(0x1AD498D6CLL);
  }
  if ((v12 & 0x8000000000000000) != 0 || v12 < *(_QWORD *)(v3 - 104))
    __asm { BR              X9 }
  return 0;
}

void sub_1AD498E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X11 }
}

uint64_t sub_1AD498E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;

  v5 = *v4 + 4;
  if (__OFADD__(*v4, 4))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (BYTE6(a4) >= v5)
  {
    if (v5 >= *v4)
    {
      sub_1AD63AFD0();
      __asm { BR              X10 }
    }
LABEL_7:
    __break(1u);
    JUMPOUT(0x1AD498FD4);
  }
  return -1;
}

unint64_t sub_1AD499018()
{
  unint64_t result;

  result = qword_1EECDCB18;
  if (!qword_1EECDCB18)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687F5C, &type metadata for ImageHeaderError);
    atomic_store(result, (unint64_t *)&qword_1EECDCB18);
  }
  return result;
}

unint64_t sub_1AD499060()
{
  unint64_t result;

  result = qword_1EECDCB20;
  if (!qword_1EECDCB20)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD687EBC, &type metadata for ImageHeaderError);
    atomic_store(result, (unint64_t *)&qword_1EECDCB20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ImageHeaderError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AD4990E4 + 4 * byte_1AD687EB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AD499104 + 4 * byte_1AD687EB5[v4]))();
}

_BYTE *sub_1AD4990E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AD499104(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD49910C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD499114(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD49911C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD499124(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ImageHeaderError()
{
  return &type metadata for ImageHeaderError;
}

uint64_t _OSSwapInt32(unsigned int a1)
{
  return bswap32(a1);
}

uint64_t sub_1AD499148(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t j;
  id v12;
  void *v13;
  uint64_t k;
  id v15;
  void *v16;
  _QWORD v17[5];
  uint64_t v18;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1AD63BE34();
    v5 = result;
    if (!result)
      goto LABEL_10;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v5)
      goto LABEL_10;
  }
  if (v5 < 1)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x1AF44AA40](i, a1);
    else
      v8 = *(id *)(a1 + 8 * i + 32);
    v9 = v8;
    objc_msgSend(v8, sel_open);

  }
LABEL_10:
  swift_bridgeObjectRelease();
  v17[3] = type metadata accessor for _BinaryDecoder();
  v17[4] = sub_1AD499538();
  v17[0] = a2;
  swift_retain();
  result = sub_1AD13FEA8(v17);
  v10 = result;
  if (v2)
  {
    if (v5)
    {
      if (v5 >= 1)
      {
        v18 = result;
        swift_bridgeObjectRetain();
        for (j = 0; j != v5; ++j)
        {
          if ((a1 & 0xC000000000000001) != 0)
            v12 = (id)MEMORY[0x1AF44AA40](j, a1);
          else
            v12 = *(id *)(a1 + 8 * j + 32);
          v13 = v12;
          objc_msgSend(v12, sel_close);

        }
LABEL_25:
        swift_release();
        swift_bridgeObjectRelease();
        return v18;
      }
      goto LABEL_29;
    }
LABEL_26:
    swift_release();
    return v10;
  }
  if (!v5)
    goto LABEL_26;
  if (v5 >= 1)
  {
    v18 = result;
    swift_bridgeObjectRetain();
    for (k = 0; k != v5; ++k)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v15 = (id)MEMORY[0x1AF44AA40](k, a1);
      else
        v15 = *(id *)(a1 + 8 * k + 32);
      v16 = v15;
      objc_msgSend(v15, sel_close);

    }
    goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1AD49936C(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  void *v14;
  uint64_t j;
  id v16;
  void *v17;
  uint64_t v18;

  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_22:
    v18 = swift_bridgeObjectRelease();
    return a2(v18);
  }
  swift_bridgeObjectRetain();
  result = sub_1AD63BE34();
  v5 = result;
  if (!result)
    goto LABEL_22;
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    v7 = 0;
    v8 = a1 & 0xC000000000000001;
    do
    {
      if (v8)
        v9 = (id)MEMORY[0x1AF44AA40](v7, a1);
      else
        v9 = *(id *)(a1 + 8 * v7 + 32);
      v10 = v9;
      ++v7;
      objc_msgSend(v9, sel_open);

    }
    while (v5 != v7);
    v11 = swift_bridgeObjectRelease();
    a2(v11);
    if (v2)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v5; ++i)
      {
        if (v8)
          v13 = (id)MEMORY[0x1AF44AA40](i, a1);
        else
          v13 = *(id *)(a1 + 8 * i + 32);
        v14 = v13;
        objc_msgSend(v13, sel_close);

      }
    }
    else
    {
      swift_bridgeObjectRetain();
      for (j = 0; j != v5; ++j)
      {
        if (v8)
          v16 = (id)MEMORY[0x1AF44AA40](j, a1);
        else
          v16 = *(id *)(a1 + 8 * j + 32);
        v17 = v16;
        objc_msgSend(v16, sel_close);

      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1AD499538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2DA970;
  if (!qword_1ED2DA970)
  {
    v1 = type metadata accessor for _BinaryDecoder();
    result = MEMORY[0x1AF44BDF0](&unk_1AD699610, v1);
    atomic_store(result, (unint64_t *)&qword_1ED2DA970);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StreamError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD4995CC + 4 * byte_1AD687FBD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD499600 + 4 * asc_1AD687FB8[v4]))();
}

uint64_t sub_1AD499600(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD499608(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD499610);
  return result;
}

uint64_t sub_1AD49961C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD499624);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD499628(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD499630(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StreamError()
{
  return &type metadata for StreamError;
}

unint64_t sub_1AD499650()
{
  unint64_t result;

  result = qword_1EECDCB30;
  if (!qword_1EECDCB30)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD688010, &type metadata for StreamError);
    atomic_store(result, (unint64_t *)&qword_1EECDCB30);
  }
  return result;
}

_QWORD *sub_1AD499694(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *sub_1AD4996C0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1AD4996F8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for AnyValidator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyValidator);
}

uint64_t sub_1AD499734(uint64_t a1, uint64_t (*a2)(void))
{
  return a2() & 1;
}

uint64_t sub_1AD49975C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD00B904(v1, a1);
}

uint64_t sub_1AD499768(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD00B950(a1, v1);
}

uint64_t (*sub_1AD499770())()
{
  return nullsub_1;
}

uint64_t sub_1AD499780()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ChatSessionClose() + 20));
}

uint64_t type metadata accessor for ChatSessionClose()
{
  uint64_t result;

  result = qword_1ED2E2628;
  if (!qword_1ED2E2628)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD4997DC(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ChatSessionClose();
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1AD499808())(_QWORD)
{
  type metadata accessor for ChatSessionClose();
  return nullsub_1;
}

uint64_t sub_1AD499830()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ChatSessionClose() + 24));
}

uint64_t sub_1AD499850(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ChatSessionClose();
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_1AD49987C())(_QWORD)
{
  type metadata accessor for ChatSessionClose();
  return nullsub_1;
}

uint64_t sub_1AD4998A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ChatSessionClose() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4998E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ChatSessionClose() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1AD499924())(_QWORD)
{
  type metadata accessor for ChatSessionClose();
  return nullsub_1;
}

uint64_t sub_1AD49994C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ChatSessionClose() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD499988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ChatSessionClose() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1AD4999CC())(_QWORD)
{
  type metadata accessor for ChatSessionClose();
  return nullsub_1;
}

uint64_t sub_1AD4999F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ChatSessionClose() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD499A30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ChatSessionClose() + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1AD499A74())(_QWORD)
{
  type metadata accessor for ChatSessionClose();
  return nullsub_1;
}

uint64_t sub_1AD499A9C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ChatSessionClose() + 40));
}

uint64_t sub_1AD499ABC(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ChatSessionClose();
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*sub_1AD499AE8())(_QWORD)
{
  type metadata accessor for ChatSessionClose();
  return nullsub_1;
}

uint64_t sub_1AD499B10(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD499B5C(&qword_1EECDCB38, (uint64_t)&unk_1AD64FAA8);
  result = sub_1AD499B5C(&qword_1EECDCB40, (uint64_t)&unk_1AD64FAD0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD499B5C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ChatSessionClose();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1AD499B9C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B084();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for Metadata();
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    *((_BYTE *)a1 + v8[6]) = *((_BYTE *)a2 + v8[6]);
    *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
    *(_WORD *)((char *)a1 + v8[8]) = *(_WORD *)((char *)a2 + v8[8]);
    v12 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (_QWORD *)((char *)a1 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)a1 + v14);
    v19 = (_QWORD *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[9];
    v22 = a3[10];
    v23 = (_QWORD *)((char *)a1 + v21);
    v24 = (_QWORD *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD499CC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD499D30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for Metadata();
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_WORD *)(a1 + v7[8]) = *(_WORD *)(a2 + v7[8]);
  v11 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(a1 + v13);
  v18 = (_QWORD *)(a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[9];
  v21 = a3[10];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD499E30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for Metadata();
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  v12 = v7[8];
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1AD499F80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for Metadata();
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_WORD *)(a1 + v7[8]) = *(_WORD *)(a2 + v7[8]);
  v11 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  return a1;
}

uint64_t sub_1AD49A054(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for Metadata();
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  v11 = v7[8];
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v14 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1AD49A170()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD49A17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Metadata();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1AD49A1FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD49A208(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Metadata();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1AD49A284()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Metadata();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AD49A31C@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t (**v22)();

  v22 = a1;
  v1 = type metadata accessor for SwiftRegexValidator();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  if (qword_1EECD15B0 != -1)
    swift_once();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1EED83B28);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v11(v7, v10, v9);
  sub_1AD49D738((uint64_t)v7, (uint64_t)v5);
  v12 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v13 = swift_allocObject();
  sub_1AD49D780((uint64_t)v5, v13 + v12);
  sub_1AD49D7C4((uint64_t)v7);
  if (qword_1EECD1690 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v9, (uint64_t)qword_1EED83C80);
  v11(v7, v14, v9);
  sub_1AD49D738((uint64_t)v7, (uint64_t)v5);
  v15 = swift_allocObject();
  sub_1AD49D780((uint64_t)v5, v15 + v12);
  sub_1AD49D7C4((uint64_t)v7);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1AD648170;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1AD28D960;
  *(_QWORD *)(v17 + 24) = v13;
  *(_QWORD *)(v16 + 32) = sub_1AD3246BC;
  *(_QWORD *)(v16 + 40) = v17;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1AD28D960;
  *(_QWORD *)(v18 + 24) = v15;
  *(_QWORD *)(v16 + 48) = sub_1AD3246BC;
  *(_QWORD *)(v16 + 56) = v18;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v16;
  *(_QWORD *)(inited + 32) = sub_1AD3246C0;
  *(_QWORD *)(inited + 40) = v19;
  return sub_1AD280838((_QWORD *)inited, v22);
}

uint64_t sub_1AD49A5A8@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t (**v22)();

  v22 = a1;
  v1 = type metadata accessor for SwiftRegexValidator();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  if (qword_1EECD15B0 != -1)
    swift_once();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1EED83B28);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v11(v7, v10, v9);
  sub_1AD49D738((uint64_t)v7, (uint64_t)v5);
  v12 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v13 = swift_allocObject();
  sub_1AD49D780((uint64_t)v5, v13 + v12);
  sub_1AD49D7C4((uint64_t)v7);
  if (qword_1EECD1690 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v9, (uint64_t)qword_1EED83C80);
  v11(v7, v14, v9);
  sub_1AD49D738((uint64_t)v7, (uint64_t)v5);
  v15 = swift_allocObject();
  sub_1AD49D780((uint64_t)v5, v15 + v12);
  sub_1AD49D7C4((uint64_t)v7);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1AD648170;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1AD28D960;
  *(_QWORD *)(v17 + 24) = v13;
  *(_QWORD *)(v16 + 32) = sub_1AD2F5214;
  *(_QWORD *)(v16 + 40) = v17;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1AD28D960;
  *(_QWORD *)(v18 + 24) = v15;
  *(_QWORD *)(v16 + 48) = sub_1AD3246BC;
  *(_QWORD *)(v16 + 56) = v18;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v16;
  *(_QWORD *)(inited + 32) = sub_1AD32466C;
  *(_QWORD *)(inited + 40) = v19;
  return sub_1AD280838((_QWORD *)inited, v22);
}

uint64_t sub_1AD49A834@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD49A864(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD49A8B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IMRevoke();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t type metadata accessor for IMRevoke()
{
  uint64_t result;

  result = qword_1EECDCB60;
  if (!qword_1EECDCB60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD49A92C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACFF64C0(a1, (uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  v6 = type metadata accessor for IMRevoke();
  sub_1AD326FE8((uint64_t)v5, v1 + *(int *)(v6 + 24));
  return sub_1AD009758(a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t sub_1AD49A9C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IMRevoke() + 28));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD49AA08(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IMRevoke() + 28));
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD49AA68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IMRevoke();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 32), a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t sub_1AD49AAA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACFF64C0(a1, (uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  v6 = type metadata accessor for IMRevoke();
  sub_1AD326FE8((uint64_t)v5, v1 + *(int *)(v6 + 32));
  return sub_1AD009758(a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t sub_1AD49AB3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IMRevoke() + 36));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD49AB80(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IMRevoke() + 36));
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD49ABE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD49AC58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + *(int *)(type metadata accessor for IMRevoke() + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(v6 + *(int *)(v7 + 28), (uint64_t)v5, &qword_1ED2E1A40);
  v8 = sub_1AD63AF28();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD49AD80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IMRevoke() + 28);
  if (*(_QWORD *)(v1 + 24))
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD49AE08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + *(int *)(type metadata accessor for IMRevoke() + 32);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(v6 + *(int *)(v7 + 28), (uint64_t)v5, &qword_1ED2E1A40);
  v8 = sub_1AD63AF28();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD49AF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IMRevoke() + 36);
  if (*(_QWORD *)(v1 + 24))
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD49AFB8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD49B018()
{
  _BYTE *v0;

  if (*v0)
    return 0x6572756C696166;
  else
    return 0x73736563637573;
}

uint64_t sub_1AD49B04C(char *a1, char *a2)
{
  return sub_1AD431E6C(*a1, *a2);
}

uint64_t sub_1AD49B058()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD49B0CC()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD49B114()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD49B184@<X0>(char *a1@<X8>)
{
  return sub_1AD49AFB8(a1);
}

void sub_1AD49B190(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x73736563637573;
  if (*v1)
    v2 = 0x6572756C696166;
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1AD49B1C8()
{
  sub_1AD49D6F4();
  return sub_1AD63B924();
}

uint64_t sub_1AD49B224()
{
  sub_1AD49D6F4();
  return sub_1AD63B8C4();
}

uint64_t (*sub_1AD49B274(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD34BDE0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD49B2FC(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34BF10;
}

void sub_1AD49B360(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *sub_1AD49B36C(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*sub_1AD49B378())()
{
  return nullsub_1;
}

uint64_t sub_1AD49B388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + *(int *)(type metadata accessor for IMRevoke() + 24);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(v7 + *(int *)(v8 + 28), (uint64_t)v6, &qword_1ED2E1A40);
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v6, v9);
  sub_1AD009758((uint64_t)v6, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD49B4B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_1AD63AF28();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  type metadata accessor for IMRevoke();
  sub_1AD003344((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1AD49B590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t (**v8)(char *);
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;

  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, a1, v3);
  v8 = (uint64_t (**)(char *))(v1 + *(int *)(type metadata accessor for IMRevoke() + 24));
  if (((*v8)(v6) & 1) != 0)
  {
    v9 = (uint64_t)v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    sub_1AD009758(v9, &qword_1ED2E1A40);
    v7((char *)v9, (uint64_t)v6, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    v10 = *(void (**)(char *, uint64_t))(v4 + 8);
    v10(v6, v3);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v3);
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v12 = 0x6E776F6E6B6E753CLL;
    v12[1] = 0xE90000000000003ELL;
    v12[2] = 0xD00000000000001CLL;
    v12[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*sub_1AD49B720(_QWORD *a1))(uint64_t *, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*result)(uint64_t *, char);

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_1AD63AF28();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for IMRevoke() + 24);
  *((_DWORD *)v3 + 12) = v10;
  v11 = v1 + v10;
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  *((_DWORD *)v3 + 13) = v12;
  sub_1ACFF64C0(v11 + v12, (uint64_t)v5, &qword_1ED2E1A40);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
    result = (void (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    return sub_1AD49B88C;
  }
  return result;
}

uint64_t sub_1AD49B890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  sub_1ACFF64C0(a1, (uint64_t)&v12 - v8, (uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1ED2E1A30);
  v10 = type metadata accessor for IMRevoke();
  sub_1AD326FE8((uint64_t)v7, a2 + *(int *)(v10 + 24));
  return sub_1AD009758((uint64_t)v9, (uint64_t *)&unk_1ED2E1A30);
}

void (*sub_1AD49B960(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v5 = malloc(v4);
  v3[3] = v5;
  v6 = *(int *)(type metadata accessor for IMRevoke() + 24);
  *((_DWORD *)v3 + 8) = v6;
  sub_1ACFF64C0(v1 + v6, (uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  return sub_1AD49BA04;
}

uint64_t sub_1AD49BA08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IMRevoke() + 28);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD49BA8C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IMRevoke();
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v2, v1);
}

uint64_t sub_1AD49BAD8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IMRevoke();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD49BB1C(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IMRevoke() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5)
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD34AE84;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD49BBB8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IMRevoke() + 28));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD49BC00(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IMRevoke() + 28));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v5;
  v6[3] = v4;
  return result;
}

void (*sub_1AD49BC7C(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IMRevoke() + 28);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v8 = v5[2];
  v7 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v8;
  v3[3] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34AF00;
}

uint64_t sub_1AD49BCF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + *(int *)(type metadata accessor for IMRevoke() + 32);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(v7 + *(int *)(v8 + 28), (uint64_t)v6, &qword_1ED2E1A40);
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v6, v9);
  sub_1AD009758((uint64_t)v6, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD49BE20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_1AD63AF28();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  type metadata accessor for IMRevoke();
  sub_1AD003344((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1AD49BEFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t (**v8)(char *);
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;

  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, a1, v3);
  v8 = (uint64_t (**)(char *))(v1 + *(int *)(type metadata accessor for IMRevoke() + 32));
  if (((*v8)(v6) & 1) != 0)
  {
    v9 = (uint64_t)v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    sub_1AD009758(v9, &qword_1ED2E1A40);
    v7((char *)v9, (uint64_t)v6, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    v10 = *(void (**)(char *, uint64_t))(v4 + 8);
    v10(v6, v3);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v3);
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v12 = 0x6E776F6E6B6E753CLL;
    v12[1] = 0xE90000000000003ELL;
    v12[2] = 0xD00000000000001CLL;
    v12[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*sub_1AD49C08C(_QWORD *a1))(uint64_t *, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*result)(uint64_t *, char);

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_1AD63AF28();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for IMRevoke() + 32);
  *((_DWORD *)v3 + 12) = v10;
  v11 = v1 + v10;
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  *((_DWORD *)v3 + 13) = v12;
  sub_1ACFF64C0(v11 + v12, (uint64_t)v5, &qword_1ED2E1A40);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
    result = (void (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    return sub_1AD49B88C;
  }
  return result;
}

uint64_t sub_1AD49C1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  sub_1ACFF64C0(a1, (uint64_t)&v12 - v8, (uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1ED2E1A30);
  v10 = type metadata accessor for IMRevoke();
  sub_1AD326FE8((uint64_t)v7, a2 + *(int *)(v10 + 32));
  return sub_1AD009758((uint64_t)v9, (uint64_t *)&unk_1ED2E1A30);
}

void (*sub_1AD49C2C8(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v5 = malloc(v4);
  v3[3] = v5;
  v6 = *(int *)(type metadata accessor for IMRevoke() + 32);
  *((_DWORD *)v3 + 8) = v6;
  sub_1ACFF64C0(v1 + v6, (uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  return sub_1AD49BA04;
}

uint64_t sub_1AD49C36C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IMRevoke() + 36);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD49C3F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IMRevoke();
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v2, v1);
}

uint64_t sub_1AD49C43C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IMRevoke();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD49C480(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IMRevoke() + 36);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5)
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD34AE84;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD49C51C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IMRevoke() + 36));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD49C564(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IMRevoke() + 36));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v5;
  v6[3] = v4;
  return result;
}

void (*sub_1AD49C5E0(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IMRevoke() + 36);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v8 = v5[2];
  v7 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v8;
  v3[3] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34AF00;
}

unint64_t sub_1AD49C65C()
{
  unint64_t result;

  result = qword_1EECDCB48;
  if (!qword_1EECDCB48)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6881AC, &type metadata for IMRevoke.Result);
    atomic_store(result, (unint64_t *)&qword_1EECDCB48);
  }
  return result;
}

uint64_t sub_1AD49C6A0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD49C6EC(&qword_1EECDCB50, (uint64_t)&unk_1AD652438);
  result = sub_1AD49C6EC(&qword_1EECDCB58, (uint64_t)&unk_1AD652460);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD49C6EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IMRevoke();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD49C730(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD49C76C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD49C7A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for IMRevoke();
  return sub_1ACFF64C0(a1 + *(int *)(v4 + 24), a2, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t sub_1AD49C804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for IMRevoke();
  return sub_1ACFF64C0(a1 + *(int *)(v4 + 32), a2, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t sub_1AD49C858(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    v9 = a2[2];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v8;
    v10 = a2[3];
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v11 = a3[6];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (uint64_t)a2 + v11;
    v14 = *(uint64_t *)((char *)a2 + v11 + 8);
    *v12 = *(uint64_t *)((char *)a2 + v11);
    v12[1] = v14;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
    v16 = *(int *)(v15 + 28);
    v17 = (char *)v12 + v16;
    v18 = (const void *)(v13 + v16);
    v19 = sub_1AD63AF28();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
    if (v21(v18, 1, v19))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v23 = a3[7];
    v24 = a3[8];
    v25 = (_QWORD *)(a1 + v23);
    v26 = (uint64_t *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = v26[3];
    v25[2] = v26[2];
    v25[3] = v28;
    v29 = (_QWORD *)(a1 + v24);
    v30 = (uint64_t *)((char *)a2 + v24);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = *(int *)(v15 + 28);
    v33 = (char *)v29 + v32;
    v34 = (char *)v30 + v32;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v21(v34, 1, v19))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v33, v34, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v33, 0, 1, v19);
    }
    v36 = a3[9];
    v37 = (_QWORD *)(a1 + v36);
    v38 = (uint64_t *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = v38[3];
    v37[2] = v38[2];
    v37[3] = v40;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD49CA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  swift_release();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v6 = v4 + *(int *)(v5 + 28);
  v7 = sub_1AD63AF28();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 32);
  swift_release();
  v11 = v10 + *(int *)(v5 + 28);
  if (!v9(v11, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD49CB8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 8);
  *v9 = *(_QWORD *)(a2 + v8);
  v9[1] = v11;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v13 = *(int *)(v12 + 28);
  v14 = (char *)v9 + v13;
  v15 = (const void *)(v10 + v13);
  v16 = sub_1AD63AF28();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v20 = a3[7];
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v23[3];
  v22[2] = v23[2];
  v22[3] = v25;
  v26 = (_QWORD *)(a1 + v21);
  v27 = (_QWORD *)(a2 + v21);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = *(int *)(v12 + 28);
  v30 = (char *)v26 + v29;
  v31 = (char *)v27 + v29;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v18(v31, 1, v16))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v30, v31, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v30, 0, 1, v16);
  }
  v33 = a3[9];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = v35[3];
  v34[2] = v35[2];
  v34[3] = v37;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD49CD80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_release();
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v12 = *(int *)(v11 + 28);
  v13 = (char *)v8 + v12;
  v14 = (char *)(v9 + v12);
  v15 = sub_1AD63AF28();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  v21 = a3[7];
  v22 = (_QWORD *)(a1 + v21);
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a2 + v21 + 8);
  *v22 = *(_QWORD *)(a2 + v21);
  v22[1] = v24;
  swift_retain();
  swift_release();
  v22[2] = *(_QWORD *)(v23 + 16);
  v22[3] = *(_QWORD *)(v23 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = (char *)(a1 + v25);
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a2 + v25 + 8);
  *(_QWORD *)v26 = *(_QWORD *)(a2 + v25);
  *((_QWORD *)v26 + 1) = v28;
  swift_retain();
  swift_release();
  v29 = *(int *)(v11 + 28);
  v30 = &v26[v29];
  v31 = (char *)(v27 + v29);
  LODWORD(v26) = v17(&v26[v29], 1, v15);
  v32 = v17(v31, 1, v15);
  if (!(_DWORD)v26)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v30, v31, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v30, v15);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v30, v31, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v30, 0, 1, v15);
LABEL_13:
  v34 = a3[9];
  v35 = (_QWORD *)(a1 + v34);
  v36 = a2 + v34;
  v37 = *(_QWORD *)(a2 + v34 + 8);
  *v35 = *(_QWORD *)(a2 + v34);
  v35[1] = v37;
  swift_retain();
  swift_release();
  v35[2] = *(_QWORD *)(v36 + 16);
  v35[3] = *(_QWORD *)(v36 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD49D064(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  _OWORD *v23;
  _OWORD *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v11 = *(int *)(v10 + 28);
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_1AD63AF28();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    v11 = *(int *)(v10 + 28);
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = (_OWORD *)(a1 + v18);
  v21 = (_OWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_OWORD *)(a1 + v19);
  v24 = (_OWORD *)(a2 + v19);
  *v23 = *v24;
  v25 = (char *)v23 + v11;
  v26 = (char *)v24 + v11;
  if (v16((char *)v24 + v11, 1, v14))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v25, v26, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v25, 0, 1, v14);
  }
  v28 = a3[9];
  v29 = (_OWORD *)(a1 + v28);
  v30 = (_OWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  return a1;
}

uint64_t sub_1AD49D20C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release();
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v11 = *(int *)(v10 + 28);
  v12 = (void *)(v8 + v11);
  v13 = (void *)(v9 + v11);
  v14 = sub_1AD63AF28();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  swift_release();
  v23 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 24) = v23;
  swift_bridgeObjectRelease();
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  swift_release();
  v27 = *(int *)(v10 + 28);
  v28 = (void *)(v25 + v27);
  v29 = (void *)(v26 + v27);
  LODWORD(v26) = v16(v28, 1, v14);
  v30 = v16(v29, 1, v14);
  if (!(_DWORD)v26)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v28, v29, v14);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v28, v14);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v28, v29, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v28, 0, 1, v14);
LABEL_13:
  v32 = a3[9];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_OWORD *)(a1 + v32) = *(_OWORD *)v34;
  swift_release();
  v35 = *(_QWORD *)(v34 + 24);
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  *(_QWORD *)(v33 + 24) = v35;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD49D498()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD49D4A4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1AD49D524()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD49D530(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_1AD49D5A8()
{
  unint64_t v0;

  sub_1AD32DF60(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for IMRevoke.Result(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD49D674 + 4 * byte_1AD6881A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD49D6A8 + 4 * byte_1AD6881A0[v4]))();
}

uint64_t sub_1AD49D6A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD49D6B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD49D6B8);
  return result;
}

uint64_t sub_1AD49D6C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD49D6CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD49D6D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD49D6D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IMRevoke.Result()
{
  return &type metadata for IMRevoke.Result;
}

unint64_t sub_1AD49D6F4()
{
  unint64_t result;

  result = qword_1EECDCB70;
  if (!qword_1EECDCB70)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD688214, &type metadata for IMRevoke.Result);
    atomic_store(result, (unint64_t *)&qword_1EECDCB70);
  }
  return result;
}

uint64_t sub_1AD49D738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SwiftRegexValidator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD49D780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SwiftRegexValidator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD49D7C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SwiftRegexValidator();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD49D804()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD49D828()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD49D864()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for UnpackerActor();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  qword_1ED2E1810 = v0;
  return result;
}

uint64_t static UnpackerActor.shared.getter()
{
  if (qword_1ED2E1820 != -1)
    swift_once();
  return swift_retain();
}

uint64_t UnpackerActor.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t UnpackerActor.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t UnpackerActor.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AD49D920()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1AD49D930()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EECDCA20;
  if (!qword_1EECDCA20)
  {
    v1 = type metadata accessor for UnpackerActor();
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for UnpackerActor, v1);
    atomic_store(result, (unint64_t *)&qword_1EECDCA20);
  }
  return result;
}

uint64_t type metadata accessor for UnpackerActor()
{
  return objc_opt_self();
}

uint64_t sub_1AD49D994()
{
  if (qword_1ED2E1820 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1AD49D9D4()
{
  type metadata accessor for UnpackerActor();
  return sub_1AD63BD14();
}

uint64_t method lookup function for UnpackerActor()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD49DA04@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD49DA10(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  return result;
}

uint64_t (*sub_1AD49DA38())()
{
  return nullsub_1;
}

uint64_t sub_1AD49DA48()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD49DA50(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_1AD49DA78())()
{
  return nullsub_1;
}

unint64_t sub_1AD49DA88(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD290164();
  result = sub_1AD290320();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

_QWORD *assignWithCopy for AccessControlCharacteristic(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AccessControlCharacteristic()
{
  return &type metadata for AccessControlCharacteristic;
}

uint64_t sub_1AD49DB20(uint64_t a1)
{
  return sub_1AD49DB9C(a1, qword_1EED83B58);
}

uint64_t sub_1AD49DB4C(uint64_t a1)
{
  return sub_1AD49DB9C(a1, qword_1EED83B70);
}

uint64_t sub_1AD49DB70(uint64_t a1)
{
  return sub_1AD49DB9C(a1, qword_1EED83B88);
}

uint64_t sub_1AD49DB9C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1AD63B204();
}

uint64_t sub_1AD49DC08(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83BA0);
}

uint64_t sub_1AD49DC1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v34 = a1;
  v1 = sub_1AD63B1C8();
  v32 = *(_QWORD *)(v1 - 8);
  v33 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v30 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v27 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v31 = (char *)&v27 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v27 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v27 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v27 - v19;
  v35 = 37;
  v36 = 0xE100000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  if (qword_1EECD15E8 != -1)
    swift_once();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EED83B88);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v29 = v20;
  sub_1AD63B0B4();
  v27 = v18;
  sub_1AD63B0B4();
  v35 = v37;
  v36 = v38;
  v28 = v15;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  sub_1AD63B198();
  v21 = v31;
  sub_1AD63B174();
  v22 = *(void (**)(char *, uint64_t))(v30 + 8);
  v22(v7, v4);
  v22(v10, v4);
  v23 = v33;
  v24 = *(void (**)(char *, uint64_t))(v32 + 8);
  v24(v3, v33);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v25 = v27;
  sub_1AD63B198();
  sub_1AD63B174();
  v22(v7, v4);
  v22(v10, v4);
  v24(v3, v23);
  v22(v21, v4);
  v22(v28, v4);
  v22(v25, v4);
  return ((uint64_t (*)(char *, uint64_t))v22)(v29, v4);
}

uint64_t sub_1AD49DF98(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83BB8);
}

uint64_t sub_1AD49DFAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  sub_1AD63B138();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B0B4();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t sub_1AD49E0B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v34 = a1;
  v1 = sub_1AD63B1C8();
  v32 = *(_QWORD *)(v1 - 8);
  v33 = v1;
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1AD63B108();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v29 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v25 - v17;
  if (qword_1EECD15D8 != -1)
    swift_once();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EED83B58);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v26 = v18;
  sub_1AD63B0B4();
  v35 = 2120166957;
  v36 = 0xE400000000000000;
  sub_1AD63B1D4();
  sub_1AD63B1EC();
  sub_1AD486250();
  sub_1AD63B0B4();
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v10, v5);
  v20 = v27;
  sub_1AD63B0C0();
  v21 = v28;
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v22 = MEMORY[0x1E0DEBAF0];
  v23 = v31;
  sub_1AD63B18C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v33);
  MEMORY[0x1AF449E1C](v16, v22);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v23);
  v19(v12, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v26, v13);
}

id sub_1AD49E3F0(const void *a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  memcpy(&v3[OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload], a1, 0x89BuLL);
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_1AD49E454(void *__src)
{
  char *v1;
  objc_super v3;

  memcpy(&v1[OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload], __src, 0x89BuLL);
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for _ObjCAPSUserPayloadWrapper();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for _ObjCAPSUserPayloadWrapper()
{
  return objc_opt_self();
}

_QWORD *sub_1AD49E4BC@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _QWORD v5[276];

  v3 = (const void *)(v1 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload);
  memcpy(v5, v3, 0x89BuLL);
  memcpy(a1, v3, 0x89BuLL);
  return sub_1AD49E51C(v5);
}

_QWORD *sub_1AD49E51C(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;

  v3 = a1[8];
  v2 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v9 = a1[14];
  v8 = a1[15];
  v11 = a1[17];
  v12 = a1[16];
  v14 = a1[20];
  v13 = a1[21];
  v15 = a1[30];
  v16 = a1[29];
  v17 = a1[33];
  v18 = a1[32];
  v21 = a1[35];
  v22 = a1[34];
  v27 = a1[43];
  v28 = a1[42];
  v19 = a1[64];
  v20 = a1[65];
  v23 = a1[66];
  v24 = a1[67];
  v25 = a1[70];
  v26 = a1[71];
  v29 = a1[86];
  v30 = a1[87];
  v31 = a1[118];
  v32 = a1[119];
  v33 = a1[148];
  v34 = a1[149];
  v35 = a1[160];
  v36 = a1[161];
  v37 = a1[164];
  v38 = a1[165];
  v39 = a1[175];
  v40 = a1[176];
  v41 = a1[177];
  v42 = a1[178];
  v43 = a1[195];
  v44 = a1[196];
  v45 = a1[197];
  v46 = a1[198];
  v47 = a1[201];
  v48 = a1[202];
  v49 = a1[203];
  v50 = a1[204];
  v51 = a1[218];
  v52 = a1[219];
  v53 = a1[228];
  v54 = a1[229];
  v55 = a1[230];
  v56 = a1[231];
  v57 = a1[234];
  v58 = a1[235];
  v59 = a1[236];
  v60 = a1[237];
  v61 = a1[238];
  v62 = a1[239];
  v63 = a1[242];
  v64 = a1[243];
  v65 = a1[247];
  v66 = a1[246];
  v67 = a1[261];
  v68 = a1[260];
  swift_retain();
  sub_1AD00408C(v3, v2);
  sub_1AD00408C(v4, v5);
  sub_1AD00408C(v6, v7);
  sub_1AD00408C(v9, v8);
  sub_1AD00408C(v12, v11);
  swift_bridgeObjectRetain();
  sub_1AD00408C(v14, v13);
  swift_bridgeObjectRetain();
  sub_1AD00408C(v16, v15);
  sub_1AD00408C(v18, v17);
  sub_1AD00408C(v22, v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD00408C(v28, v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD00408C(v19, v20);
  sub_1AD00408C(v23, v24);
  sub_1AD00408C(v25, v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD00408C(v29, v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD00408C(v31, v32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD45EF70(v33, v34);
  sub_1AD00408C(v35, v36);
  swift_bridgeObjectRetain();
  sub_1AD00408C(v37, v38);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD00408C(v39, v40);
  sub_1AD00408C(v41, v42);
  swift_bridgeObjectRetain();
  sub_1AD00408C(v43, v44);
  sub_1AD00408C(v45, v46);
  sub_1AD00408C(v47, v48);
  sub_1AD00408C(v49, v50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD00408C(v51, v52);
  swift_bridgeObjectRetain();
  sub_1AD00408C(v53, v54);
  sub_1AD00408C(v55, v56);
  sub_1AD00408C(v57, v58);
  sub_1AD00408C(v59, v60);
  sub_1AD00408C(v61, v62);
  sub_1AD00408C(v63, v64);
  sub_1AD00408C(v66, v65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD00408C(v68, v67);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD49EC44()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 24) & 1) == 0)
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

BOOL sub_1AD49ECCC()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 40) & 1) == 0;
}

uint64_t sub_1AD49ED08()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 40))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 32);
}

BOOL sub_1AD49ED44()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 56) & 1) == 0;
}

uint64_t sub_1AD49ED80()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 56))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 48);
}

uint64_t sub_1AD49EDAC()
{
  return sub_1AD4A6938(&OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload);
}

uint64_t sub_1AD49EDC4()
{
  return sub_1AD4A616C(&OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload);
}

uint64_t sub_1AD49EE44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 96);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 104));
  return v1;
}

uint64_t sub_1AD49EEF4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 112);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 120));
  return v1;
}

uint64_t sub_1AD49EF3C()
{
  return sub_1AD4B35BC(&OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload);
}

uint64_t sub_1AD49EFA4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD49F050()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 160);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 168));
  return v1;
}

uint64_t sub_1AD49F0E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 176);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD49F13C()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 192) != 2;
}

uint64_t sub_1AD49F170()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 192) & 1;
}

id sub_1AD49F20C()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  char *v7;
  objc_super v8;

  v1 = v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload;
  if ((*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 209) & 1) != 0)
    return 0;
  v3 = *(_BYTE *)(v1 + 208);
  v4 = *(_QWORD *)(v1 + 200);
  v5 = (objc_class *)type metadata accessor for _ObjCAPSUserPayloadDeliveryContextWrapper();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = &v6[OBJC_IVAR___BlastDoorAPSUserPayloadDeliveryContext_aPSUserPayloadDeliveryContext];
  *(_QWORD *)v7 = v4;
  v7[8] = v3 & 1;
  v8.receiver = v6;
  v8.super_class = v5;
  return objc_msgSendSuper2(&v8, sel_init);
}

id sub_1AD49F290(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char v4;
  char *v5;
  objc_super v7;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_BYTE *)(a1 + 8);
  v5 = &v3[OBJC_IVAR___BlastDoorAPSUserPayloadDeliveryContext_aPSUserPayloadDeliveryContext];
  *(_QWORD *)v5 = *(_QWORD *)a1;
  v5[8] = v4;
  v7.receiver = v3;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for _ObjCAPSUserPayloadDeliveryContextWrapper()
{
  return objc_opt_self();
}

BOOL sub_1AD49F328()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 224) & 1) == 0;
}

uint64_t sub_1AD49F364()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 224))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 216);
}

uint64_t sub_1AD49F390()
{
  return sub_1AD4B40F0(&OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload);
}

BOOL sub_1AD49F3B8()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 248) != 2;
}

uint64_t sub_1AD49F3EC()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 248) & 1;
}

BOOL sub_1AD49F420()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 249) != 2;
}

uint64_t sub_1AD49F454()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 249) & 1;
}

uint64_t sub_1AD49F4E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 256);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 264));
  return v1;
}

uint64_t sub_1AD49F590()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 272);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 280));
  return v1;
}

uint64_t sub_1AD49F628()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 288);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD49F6BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 304);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD49F750()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 320);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD49F7FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 336);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 344));
  return v1;
}

BOOL sub_1AD49F854()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 360) & 1) == 0;
}

uint64_t sub_1AD49F894()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 360))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 352);
}

uint64_t sub_1AD49F914()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 368);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD49F9A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 384);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD49FA3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 400);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD49FACC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD49FB38()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD49FBA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 432);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD49FC3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 448);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD49FC90()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 472) & 1) == 0;
}

uint64_t sub_1AD49FCD0()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 472))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 464);
}

BOOL sub_1AD49FD10()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 488) & 1) == 0;
}

uint64_t sub_1AD49FD50()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 488))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 480);
}

uint64_t sub_1AD49FDD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 496);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD49FE7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 512);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 520));
  return v1;
}

uint64_t sub_1AD49FF30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 528);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 536));
  return v1;
}

BOOL sub_1AD49FF8C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 552) & 1) == 0;
}

uint64_t sub_1AD49FFCC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 552))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 544);
}

uint64_t sub_1AD4A0064()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 560);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 568));
  return v1;
}

uint64_t sub_1AD4A0100()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 576);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A0198()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 592);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A0230()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 608);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A0288()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 632) & 1) == 0;
}

uint64_t sub_1AD4A02C8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 632))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 624);
}

BOOL sub_1AD4A0308()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 648) & 1) == 0;
}

uint64_t sub_1AD4A0348()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 648))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 640);
}

BOOL sub_1AD4A0388()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 664) & 1) == 0;
}

uint64_t sub_1AD4A03C8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 664))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 656);
}

BOOL sub_1AD4A0408()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 680) & 1) == 0;
}

uint64_t sub_1AD4A0448()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 680))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 672);
}

uint64_t sub_1AD4A04E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 688);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 696));
  return v1;
}

uint64_t sub_1AD4A057C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 704);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A05D4()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 728) & 1) == 0;
}

uint64_t sub_1AD4A0614()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 728))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 720);
}

BOOL sub_1AD4A0654()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 744) & 1) == 0;
}

uint64_t sub_1AD4A0694()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 744))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 736);
}

uint64_t sub_1AD4A0714()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 752);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A076C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 776) & 1) == 0;
}

uint64_t sub_1AD4A07AC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 776))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 768);
}

uint64_t sub_1AD4A082C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 784);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A0884()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 808) & 1) == 0;
}

uint64_t sub_1AD4A08C4()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 808))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 800);
}

BOOL sub_1AD4A0904()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 824) & 1) == 0;
}

uint64_t sub_1AD4A0944()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 824))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 816);
}

BOOL sub_1AD4A0984()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 840) & 1) == 0;
}

uint64_t sub_1AD4A09C4()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 840))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 832);
}

uint64_t sub_1AD4A09FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t i;
  char *v7;
  objc_super v9;
  _QWORD __dst[276];
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 848);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1AD63BDE0();
    v4 = (objc_class *)type metadata accessor for _ObjCAPSUserPayloadWrapper();
    v5 = v2 - 1;
    for (i = 32; ; i += 2208)
    {
      memcpy(__dst, (const void *)(v1 + i), 0x89BuLL);
      v7 = (char *)objc_allocWithZone(v4);
      memcpy(&v7[OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload], __dst, 0x89BuLL);
      sub_1AD49E51C(__dst);
      v9.receiver = v7;
      v9.super_class = v4;
      objc_msgSendSuper2(&v9, sel_init);
      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      if (!v5)
        break;
      --v5;
    }
    v3 = v11;
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1AD4A0B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t i;
  char *v7;
  objc_super v9;
  _QWORD __dst[276];
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 856);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1AD63BDE0();
    v4 = (objc_class *)type metadata accessor for _ObjCAPSUserPayloadWrapper();
    v5 = v2 - 1;
    for (i = 32; ; i += 2208)
    {
      memcpy(__dst, (const void *)(v1 + i), 0x89BuLL);
      v7 = (char *)objc_allocWithZone(v4);
      memcpy(&v7[OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload], __dst, 0x89BuLL);
      sub_1AD49E51C(__dst);
      v9.receiver = v7;
      v9.super_class = v4;
      objc_msgSendSuper2(&v9, sel_init);
      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      if (!v5)
        break;
      --v5;
    }
    v3 = v11;
    swift_bridgeObjectRelease();
  }
  return v3;
}

BOOL sub_1AD4A0C6C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 872) & 1) == 0;
}

uint64_t sub_1AD4A0CAC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 872))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 864);
}

BOOL sub_1AD4A0CEC()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 888) & 1) == 0;
}

uint64_t sub_1AD4A0D2C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 888))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 880);
}

BOOL sub_1AD4A0D6C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 904) & 1) == 0;
}

uint64_t sub_1AD4A0DAC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 904))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 896);
}

BOOL sub_1AD4A0DEC()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 905) != 2;
}

uint64_t sub_1AD4A0E20()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 905) & 1;
}

BOOL sub_1AD4A0E54()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 906) != 2;
}

uint64_t sub_1AD4A0E88()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 906) & 1;
}

BOOL sub_1AD4A0EBC()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 907) != 2;
}

uint64_t sub_1AD4A0EF0()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 907) & 1;
}

BOOL sub_1AD4A0F24()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 908) != 2;
}

uint64_t sub_1AD4A0F58()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 908) & 1;
}

uint64_t sub_1AD4A0FCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 912);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A1064()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 928);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A1114()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 944);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 952));
  return v1;
}

uint64_t sub_1AD4A11B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 960);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A1248()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 976);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A12E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 992);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A1378()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1008);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A1410()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1024);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A1468()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1048) & 1) == 0;
}

uint64_t sub_1AD4A14A8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1048))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1040);
}

uint64_t sub_1AD4A1528()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1056);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A1580()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1080) & 1) == 0;
}

uint64_t sub_1AD4A15C0()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1080))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1072);
}

uint64_t sub_1AD4A1640()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1088);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A1698()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1112) & 1) == 0;
}

uint64_t sub_1AD4A16D8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1112))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1104);
}

BOOL sub_1AD4A1718()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1113) != 2;
}

uint64_t sub_1AD4A174C()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1113) & 1;
}

uint64_t sub_1AD4A17C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1120);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A1818()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1144) & 1) == 0;
}

uint64_t sub_1AD4A1858()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1144))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1136);
}

BOOL sub_1AD4A1898()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1160) & 1) == 0;
}

uint64_t sub_1AD4A18D8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1160))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1152);
}

uint64_t sub_1AD4A1958()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1168);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1AD4A1AA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1192);
  if (v2 == 1)
    return 0;
  v16 = v1[158];
  v17 = v1[159];
  v4 = v1[157];
  v15 = v1[156];
  v5 = v1[155];
  v6 = v1[154];
  v7 = v1[153];
  v8 = v1[152];
  v9 = v1[151];
  v10 = v1[150];
  v11 = v1[148];
  v12 = (objc_class *)type metadata accessor for _ObjCAPSUserPayloadHttpHeadersWrapper();
  v13 = (char *)objc_allocWithZone(v12);
  v14 = &v13[OBJC_IVAR___BlastDoorAPSUserPayloadHttpHeaders_aPSUserPayloadHttpHeaders];
  *(_QWORD *)v14 = v11;
  *((_QWORD *)v14 + 1) = v2;
  *((_QWORD *)v14 + 2) = v10;
  *((_QWORD *)v14 + 3) = v9;
  *((_QWORD *)v14 + 4) = v8;
  *((_QWORD *)v14 + 5) = v7;
  *((_QWORD *)v14 + 6) = v6;
  *((_QWORD *)v14 + 7) = v5;
  *((_QWORD *)v14 + 8) = v15;
  *((_QWORD *)v14 + 9) = v4;
  *((_QWORD *)v14 + 10) = v16;
  *((_QWORD *)v14 + 11) = v17;
  v18.receiver = v13;
  v18.super_class = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v18, sel_init);
}

id sub_1AD4A1BBC(_OWORD *a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR___BlastDoorAPSUserPayloadHttpHeaders_aPSUserPayloadHttpHeaders];
  v5 = a1[1];
  *(_OWORD *)v4 = *a1;
  *((_OWORD *)v4 + 1) = v5;
  v6 = a1[3];
  *((_OWORD *)v4 + 2) = a1[2];
  *((_OWORD *)v4 + 3) = v6;
  v7 = a1[5];
  *((_OWORD *)v4 + 4) = a1[4];
  *((_OWORD *)v4 + 5) = v7;
  v9.receiver = v3;
  v9.super_class = v1;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1AD4A1C94()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1280);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1288));
  return v1;
}

uint64_t sub_1AD4A1D30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1296);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A1DE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1312);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1320));
  return v1;
}

BOOL sub_1AD4A1E3C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1336) & 1) == 0;
}

uint64_t sub_1AD4A1E7C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1336))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1328);
}

uint64_t sub_1AD4A1EFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1344);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A1F54()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1360) != 2;
}

uint64_t sub_1AD4A1F88()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1360) & 1;
}

BOOL sub_1AD4A1FBC()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1361) != 2;
}

uint64_t sub_1AD4A1FF0()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1361) & 1;
}

BOOL sub_1AD4A2024()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1362) != 2;
}

uint64_t sub_1AD4A2058()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1362) & 1;
}

BOOL sub_1AD4A208C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1376) & 1) == 0;
}

uint64_t sub_1AD4A20CC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1376))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1368);
}

uint64_t sub_1AD4A214C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1384);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A21FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1400);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1408));
  return v1;
}

uint64_t sub_1AD4A22B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1416);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1424));
  return v1;
}

BOOL sub_1AD4A230C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1440) & 1) == 0;
}

uint64_t sub_1AD4A234C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1440))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1432);
}

BOOL sub_1AD4A238C()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1441) != 2;
}

uint64_t sub_1AD4A23C0()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1441) & 1;
}

BOOL sub_1AD4A23F4()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1442) != 2;
}

uint64_t sub_1AD4A2428()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1442) & 1;
}

BOOL sub_1AD4A245C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1456) & 1) == 0;
}

uint64_t sub_1AD4A249C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1456))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1448);
}

BOOL sub_1AD4A24DC()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1472) & 1) == 0;
}

uint64_t sub_1AD4A251C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1472))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1464);
}

BOOL sub_1AD4A255C()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1473) != 2;
}

uint64_t sub_1AD4A2590()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1473) & 1;
}

BOOL sub_1AD4A25C4()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1488) & 1) == 0;
}

uint64_t sub_1AD4A2604()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1488))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1480);
}

BOOL sub_1AD4A2644()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1504) & 1) == 0;
}

uint64_t sub_1AD4A2684()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1504))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1496);
}

uint64_t sub_1AD4A2704()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1512);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A275C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1536) & 1) == 0;
}

uint64_t sub_1AD4A279C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1536))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1528);
}

BOOL sub_1AD4A27DC()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1552) & 1) == 0;
}

uint64_t sub_1AD4A281C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1552))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1544);
}

uint64_t sub_1AD4A28B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1560);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1568));
  return v1;
}

uint64_t sub_1AD4A2968()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1576);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1584));
  return v1;
}

BOOL sub_1AD4A29C4()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1600) & 1) == 0;
}

uint64_t sub_1AD4A2A04()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1600))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1592);
}

uint64_t sub_1AD4A2A9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1608);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1616));
  return v1;
}

uint64_t sub_1AD4A2B50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1624);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1632));
  return v1;
}

BOOL sub_1AD4A2BAC()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1648) & 1) == 0;
}

uint64_t sub_1AD4A2BEC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1648))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1640);
}

BOOL sub_1AD4A2C2C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1664) & 1) == 0;
}

uint64_t sub_1AD4A2C6C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1664))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1656);
}

uint64_t sub_1AD4A2CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char *v13;
  char *v14;
  objc_super v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1672);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1AD63BDE0();
    v4 = (objc_class *)type metadata accessor for _ObjCAPSQuickRelayPluginRequestWrapper();
    v5 = (char *)(v1 + 73);
    do
    {
      v6 = *(_QWORD *)(v5 - 41);
      v7 = *(_QWORD *)(v5 - 33);
      v8 = *(_QWORD *)(v5 - 25);
      v9 = *(_QWORD *)(v5 - 17);
      v10 = *(_QWORD *)(v5 - 9);
      v11 = *(v5 - 1);
      v12 = *v5;
      v5 += 48;
      v13 = (char *)objc_allocWithZone(v4);
      v14 = &v13[OBJC_IVAR___BlastDoorAPSQuickRelayPluginRequest_aPSQuickRelayPluginRequest];
      *(_QWORD *)v14 = v6;
      *((_QWORD *)v14 + 1) = v7;
      *((_QWORD *)v14 + 2) = v8;
      *((_QWORD *)v14 + 3) = v9;
      *((_QWORD *)v14 + 4) = v10;
      v14[40] = v11;
      v14[41] = v12;
      v16.receiver = v13;
      v16.super_class = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      objc_msgSendSuper2(&v16, sel_init);
      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      --v2;
    }
    while (v2);
    v3 = v17;
    swift_bridgeObjectRelease();
  }
  return v3;
}

id sub_1AD4A2DE8(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  char v5;
  char v6;
  char *v7;
  __int128 v8;
  objc_super v10;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 41);
  v7 = &v3[OBJC_IVAR___BlastDoorAPSQuickRelayPluginRequest_aPSQuickRelayPluginRequest];
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a1;
  *((_OWORD *)v7 + 1) = v8;
  *((_QWORD *)v7 + 4) = v4;
  v7[40] = v5;
  v7[41] = v6;
  v10.receiver = v3;
  v10.super_class = v1;
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_1AD4A2EB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1680);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD4A2F48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1696);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A2FA0()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1720) & 1) == 0;
}

uint64_t sub_1AD4A2FE0()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1720))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1712);
}

BOOL sub_1AD4A3020()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1721) != 2;
}

uint64_t sub_1AD4A3054()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1721) & 1;
}

BOOL sub_1AD4A3088()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1722) != 2;
}

uint64_t sub_1AD4A30BC()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1722) & 1;
}

BOOL sub_1AD4A30F0()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1736) & 1) == 0;
}

uint64_t sub_1AD4A3130()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1736))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1728);
}

uint64_t sub_1AD4A31C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1744);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1752));
  return v1;
}

BOOL sub_1AD4A3224()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1768) & 1) == 0;
}

uint64_t sub_1AD4A3264()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1768))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1760);
}

BOOL sub_1AD4A32A4()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1769) != 2;
}

uint64_t sub_1AD4A32D8()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1769) & 1;
}

uint64_t sub_1AD4A334C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1776);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A33A4()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1800) & 1) == 0;
}

uint64_t sub_1AD4A33E4()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1800))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1792);
}

BOOL sub_1AD4A3424()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1816) & 1) == 0;
}

uint64_t sub_1AD4A3464()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1816))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1808);
}

uint64_t sub_1AD4A34FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1824);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1832));
  return v1;
}

uint64_t sub_1AD4A35B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1840);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1848));
  return v1;
}

BOOL sub_1AD4A360C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1864) & 1) == 0;
}

uint64_t sub_1AD4A364C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1864))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1856);
}

uint64_t sub_1AD4A36E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1872);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1880));
  return v1;
}

uint64_t sub_1AD4A3798()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1888);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1896));
  return v1;
}

uint64_t sub_1AD4A384C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1904);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1912));
  return v1;
}

BOOL sub_1AD4A38A8()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1928) & 1) == 0;
}

uint64_t sub_1AD4A38E8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1928))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1920);
}

uint64_t sub_1AD4A3980()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1936);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1944));
  return v1;
}

BOOL sub_1AD4A39DC()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1960) & 1) == 0;
}

uint64_t sub_1AD4A3A1C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1960))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1952);
}

uint64_t sub_1AD4A3AB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1968);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1976));
  return v1;
}

uint64_t sub_1AD4A3B50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 1984);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AD4A3BA8()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2008) & 1) == 0;
}

uint64_t sub_1AD4A3BE8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2008))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2000);
}

BOOL sub_1AD4A3C28()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2024) & 1) == 0;
}

uint64_t sub_1AD4A3C68()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2024))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2016);
}

BOOL sub_1AD4A3CA8()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2040) & 1) == 0;
}

uint64_t sub_1AD4A3CE8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2040))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2032);
}

BOOL sub_1AD4A3D28()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2056) & 1) == 0;
}

uint64_t sub_1AD4A3D68()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2056))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2048);
}

uint64_t sub_1AD4A3DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  objc_class *v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2064);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1AD63BDE0();
    v4 = (uint64_t *)(v1 + 48);
    v5 = (objc_class *)type metadata accessor for _ObjCAPSQuickRelayAllocationStatusWrapper();
    do
    {
      v16 = *(v4 - 2);
      v17 = v2;
      v6 = *((_BYTE *)v4 - 8);
      v7 = *v4;
      v8 = *((_BYTE *)v4 + 8);
      v9 = v4[2];
      v10 = v4[3];
      v11 = v4[4];
      v12 = v4[5];
      v13 = (char *)objc_allocWithZone(v5);
      v14 = &v13[OBJC_IVAR___BlastDoorAPSQuickRelayAllocationStatus_aPSQuickRelayAllocationStatus];
      *(_QWORD *)v14 = v16;
      v14[8] = v6;
      *((_QWORD *)v14 + 2) = v7;
      v14[24] = v8;
      *((_QWORD *)v14 + 4) = v9;
      *((_QWORD *)v14 + 5) = v10;
      *((_QWORD *)v14 + 6) = v11;
      *((_QWORD *)v14 + 7) = v12;
      sub_1AD00408C(v9, v10);
      v18.receiver = v13;
      v18.super_class = v5;
      swift_bridgeObjectRetain();
      objc_msgSendSuper2(&v18, sel_init);
      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      v4 += 8;
      v2 = v17 - 1;
    }
    while (v17 != 1);
    v3 = v19;
    swift_bridgeObjectRelease();
  }
  return v3;
}

id sub_1AD4A3EFC(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char v4;
  uint64_t v5;
  char v6;
  char *v7;
  __int128 v8;
  objc_super v10;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_BYTE *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  v7 = &v3[OBJC_IVAR___BlastDoorAPSQuickRelayAllocationStatus_aPSQuickRelayAllocationStatus];
  *(_QWORD *)v7 = *(_QWORD *)a1;
  v7[8] = v4;
  *((_QWORD *)v7 + 2) = v5;
  v7[24] = v6;
  v8 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v7 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v7 + 3) = v8;
  v10.receiver = v3;
  v10.super_class = v1;
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_1AD4A3F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  objc_class *v23;
  objc_super v24;
  uint64_t v25;

  v15 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2072);
  v1 = *(_QWORD *)(v15 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1AD63BDE0();
    v23 = (objc_class *)type metadata accessor for _ObjCAPSQuickRelaySelfAllocTokenWrapper();
    v3 = 0;
    do
    {
      v22 = v1;
      v4 = *(_QWORD *)(v15 + v3 + 32);
      v5 = *(_QWORD *)(v15 + v3 + 40);
      v6 = *(_QWORD *)(v15 + v3 + 48);
      v7 = *(_QWORD *)(v15 + v3 + 56);
      v19 = *(_BYTE *)(v15 + v3 + 72);
      v8 = *(_QWORD *)(v15 + v3 + 80);
      v9 = *(_QWORD *)(v15 + v3 + 88);
      v10 = *(_QWORD *)(v15 + v3 + 96);
      v11 = *(_QWORD *)(v15 + v3 + 104);
      v20 = *(_QWORD *)(v15 + v3 + 64);
      v12 = *(_QWORD *)(v15 + v3 + 112);
      v16 = *(_QWORD *)(v15 + v3 + 120);
      v18 = *(_QWORD *)(v15 + v3 + 128);
      v17 = *(_BYTE *)(v15 + v3 + 136);
      v21 = (char *)objc_allocWithZone(v23);
      v13 = &v21[OBJC_IVAR___BlastDoorAPSQuickRelaySelfAllocToken_aPSQuickRelaySelfAllocToken];
      *(_QWORD *)v13 = v4;
      *((_QWORD *)v13 + 1) = v5;
      *((_QWORD *)v13 + 2) = v6;
      *((_QWORD *)v13 + 3) = v7;
      *((_QWORD *)v13 + 4) = v20;
      v13[40] = v19;
      *((_QWORD *)v13 + 6) = v8;
      *((_QWORD *)v13 + 7) = v9;
      *((_QWORD *)v13 + 8) = v10;
      *((_QWORD *)v13 + 9) = v11;
      *((_QWORD *)v13 + 10) = v12;
      *((_QWORD *)v13 + 11) = v16;
      *((_QWORD *)v13 + 12) = v18;
      v13[104] = v17;
      sub_1AD00408C(v4, v5);
      sub_1AD00408C(v6, v7);
      sub_1AD00408C(v8, v9);
      sub_1AD00408C(v10, v11);
      sub_1AD00408C(v12, v16);
      v24.receiver = v21;
      v24.super_class = v23;
      objc_msgSendSuper2(&v24, sel_init);
      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      v3 += 112;
      v1 = v22 - 1;
    }
    while (v22 != 1);
    v2 = v25;
    swift_bridgeObjectRelease();
  }
  return v2;
}

id sub_1AD4A4148(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  objc_super v12;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  v8 = &v3[OBJC_IVAR___BlastDoorAPSQuickRelaySelfAllocToken_aPSQuickRelaySelfAllocToken];
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a1;
  *((_OWORD *)v8 + 1) = v9;
  *((_QWORD *)v8 + 4) = v4;
  v8[40] = v5;
  v10 = *(_OWORD *)(a1 + 64);
  *((_OWORD *)v8 + 3) = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v8 + 4) = v10;
  *((_OWORD *)v8 + 5) = *(_OWORD *)(a1 + 80);
  *((_QWORD *)v8 + 12) = v6;
  v8[104] = v7;
  v12.receiver = v3;
  v12.super_class = v1;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_1AD4A4240()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2080);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2088));
  return v1;
}

BOOL sub_1AD4A429C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2104) & 1) == 0;
}

uint64_t sub_1AD4A42DC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2104))
    return 0;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR___BlastDoorAPSUserPayload_aPSUserPayload + 2096);
}

