unint64_t sub_1AD2EFB60()
{
  unint64_t result;

  result = qword_1ED2E1CA0;
  if (!qword_1ED2E1CA0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66A614, &_s8EnumCaseON_32);
    atomic_store(result, (unint64_t *)&qword_1ED2E1CA0);
  }
  return result;
}

uint64_t sub_1AD2EFBA4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001AD6A6F60 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AD6A6F80 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A6FA0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD6A6FC0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001AD6A6FE0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AD6A7010)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_1AD2EFDE8()
{
  unint64_t result;

  result = qword_1EECDA5A0;
  if (!qword_1EECDA5A0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66A76C, &_s8EnumCaseON_31);
    atomic_store(result, (unint64_t *)&qword_1EECDA5A0);
  }
  return result;
}

uint64_t sub_1AD2EFE2C()
{
  unint64_t v0;

  v0 = sub_1AD63BE94();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1AD2EFE70(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AD6A7030 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD6A7050 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7070 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5F6B636162706174 && a2 == 0xED000065756C6156 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A6F40 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7090 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A70B0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_1AD2F0134()
{
  unint64_t result;

  result = qword_1EECDA5A8;
  if (!qword_1EECDA5A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66A8C4, &_s8EnumCaseON_30);
    atomic_store(result, (unint64_t *)&qword_1EECDA5A8);
  }
  return result;
}

uint64_t sub_1AD2F0178(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000021 && a2 == 0x80000001AD6A70D0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61565F63747361 && a2 == 0xEA00000000006575 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61565F726568746FLL && a2 == 0xEB0000000065756CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F02EC()
{
  unint64_t result;

  result = qword_1EECDA5B0;
  if (!qword_1EECDA5B0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66AA1C, &_s8EnumCaseON_29);
    atomic_store(result, (unint64_t *)&qword_1EECDA5B0);
  }
  return result;
}

uint64_t sub_1AD2F0330(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001AD6A7100 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x565F736F746F6870 && a2 == 0xEC00000065756C61 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x565F696A6F6D656DLL && a2 == 0xEC00000065756C61 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6172676F6E6F6DLL && a2 == 0xEE0065756C61565FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1AD2F0534()
{
  unint64_t result;

  result = qword_1EECDA5B8;
  if (!qword_1EECDA5B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66AB74, &_s14descr1E5CD7969V8EnumCaseON);
    atomic_store(result, (unint64_t *)&qword_1EECDA5B8);
  }
  return result;
}

uint64_t sub_1AD2F0578(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7120 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61565F6E69616C70 && a2 == 0xEB0000000065756CLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61565F6C696D73 && a2 == 0xEA00000000006575 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A7140)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1AD2F074C()
{
  unint64_t result;

  result = qword_1EECDA5C0;
  if (!qword_1EECDA5C0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66ACCC, &_s8EnumCaseON_28);
    atomic_store(result, (unint64_t *)&qword_1EECDA5C0);
  }
  return result;
}

uint64_t sub_1AD2F0790(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656853656C797473 && a2 == 0xEF746E6F465F7465;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6569666963657073 && a2 == 0xEF65756C61565F64 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x565F6D6574737973 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F0944()
{
  unint64_t result;

  result = qword_1EECDA5C8;
  if (!qword_1EECDA5C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66AE24, &_s8EnumCaseON_27);
    atomic_store(result, (unint64_t *)&qword_1EECDA5C8);
  }
  return result;
}

uint64_t sub_1AD2F0988(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001AD6A7160 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A7180 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A71A0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574756C6F736261 && a2 == 0xEE0065756C61565FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1AD2F0B48()
{
  unint64_t result;

  result = qword_1EECDA5D0;
  if (!qword_1EECDA5D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66AF7C, &_s8EnumCaseON_26);
    atomic_store(result, (unint64_t *)&qword_1EECDA5D0);
  }
  return result;
}

uint64_t sub_1AD2F0B8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656853656C797473 && a2 == 0xEF656C75525F7465;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A71C0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A71E0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A7200 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A7220 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A7240)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_1AD2F0DF4()
{
  unint64_t result;

  result = qword_1EECDA5D8;
  if (!qword_1EECDA5D8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66B0D4, &_s8EnumCaseON_25);
    atomic_store(result, (unint64_t *)&qword_1EECDA5D8);
  }
  return result;
}

uint64_t sub_1AD2F0E38(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AD6A7260 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5F64696C61766E69 && a2 == 0xEE003065756C6156 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5F64696C61766E69 && a2 == 0xEE003165756C6156 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61565F726F6C6F63 && a2 == 0xEB0000000065756CLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD6A7280 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x67696C4174786574 && a2 == 0xEF65756C61565F6ELL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C61565F746E6F66 && a2 == 0xEA00000000006575 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD6A72A0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

unint64_t sub_1AD2F11EC()
{
  unint64_t result;

  result = qword_1EECDA5E0;
  if (!qword_1EECDA5E0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66B22C, &_s8EnumCaseON_24);
    atomic_store(result, (unint64_t *)&qword_1EECDA5E0);
  }
  return result;
}

uint64_t sub_1AD2F1230(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A72C0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C61565F6F74 && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61565F6D6F7266 && a2 == 0xEA00000000006575 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D695465746164 && a2 == 0xEE0065756C61565FLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x63617073656D616ELL && a2 == 0xEF65756C61565F65 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD6A72E0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001AD6A7300)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_1AD2F1554()
{
  unint64_t result;

  result = qword_1EECDA5E8;
  if (!qword_1EECDA5E8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66B384, &_s8EnumCaseON_23);
    atomic_store(result, (unint64_t *)&qword_1EECDA5E8);
  }
  return result;
}

uint64_t sub_1AD2F1598()
{
  unint64_t v0;

  v0 = sub_1AD63BE94();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1AD2F15DC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001AD6A7330 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5F6567617373656DLL && a2 == 0xED000065756C6156 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD6A7350)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F174C()
{
  unint64_t result;

  result = qword_1EECDA5F0;
  if (!qword_1EECDA5F0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66B4DC, &_s8EnumCaseON_22);
    atomic_store(result, (unint64_t *)&qword_1EECDA5F0);
  }
  return result;
}

uint64_t sub_1AD2F1790(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AD6A7370 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE0065756C61565FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AD2F18A0()
{
  unint64_t result;

  result = qword_1EECDA5F8;
  if (!qword_1EECDA5F8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66B634, &_s8EnumCaseON_21);
    atomic_store(result, (unint64_t *)&qword_1EECDA5F8);
  }
  return result;
}

uint64_t sub_1AD2F18E4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000031 && a2 == 0x80000001AD6A7390 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79726576696C6564 && a2 == 0xEE0065756C61565FLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5F79616C70736964 && a2 == 0xED000065756C6156 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A73D0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A73F0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_1AD2F1B34()
{
  unint64_t result;

  result = qword_1EECDA600;
  if (!qword_1EECDA600)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66B78C, &_s8EnumCaseON_20);
    atomic_store(result, (unint64_t *)&qword_1EECDA600);
  }
  return result;
}

uint64_t sub_1AD2F1B78()
{
  unint64_t v0;

  v0 = sub_1AD63BE94();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1AD2F1BC0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AD6A7410 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x565F656C63726963 && a2 == 0xEC00000065756C61 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61565F746E696F70 && a2 == 0xEB0000000065756CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F1D40()
{
  unint64_t result;

  result = qword_1EECDA608;
  if (!qword_1EECDA608)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66B8E4, &_s8EnumCaseON_19);
    atomic_store(result, (unint64_t *)&qword_1EECDA608);
  }
  return result;
}

uint64_t sub_1AD2F1D84(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000025 && a2 == 0x80000001AD6A7430 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61565F7972746E65 && a2 == 0xEB0000000065756CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AD2F1E88()
{
  unint64_t result;

  result = qword_1EECDA610;
  if (!qword_1EECDA610)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66BA3C, &_s8EnumCaseON_18);
    atomic_store(result, (unint64_t *)&qword_1EECDA610);
  }
  return result;
}

uint64_t sub_1AD2F1ECC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000026 && a2 == 0x80000001AD6A7460 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E656C6C616863 && a2 == 0xEF65756C61565F65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AD2F1FDC()
{
  unint64_t result;

  result = qword_1EECDA618;
  if (!qword_1EECDA618)
  {
    result = MEMORY[0x1AF44BDF0]("žf8 \v\a", &_s8EnumCaseON_17);
    atomic_store(result, (unint64_t *)&qword_1EECDA618);
  }
  return result;
}

uint64_t sub_1AD2F2020(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000017 && a2 == 0x80000001AD6A7490 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD6A7050 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7070 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5F6B636162706174 && a2 == 0xED000065756C6156 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD6A74B0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5F72656B63697473 && a2 == 0xED000065756C6156 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A6F40 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A70B0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AD6A74D0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

unint64_t sub_1AD2F23BC()
{
  unint64_t result;

  result = qword_1ED2E1C98;
  if (!qword_1ED2E1C98)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66BCEC, &_s8EnumCaseON_16);
    atomic_store(result, (unint64_t *)&qword_1ED2E1C98);
  }
  return result;
}

uint64_t sub_1AD2F2400()
{
  unint64_t v0;

  v0 = sub_1AD63BE94();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1AD2F2444(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AD6A74F0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7510 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A7530)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F2588()
{
  unint64_t result;

  result = qword_1EECDA620;
  if (!qword_1EECDA620)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66BE44, &_s8EnumCaseON_15);
    atomic_store(result, (unint64_t *)&qword_1EECDA620);
  }
  return result;
}

uint64_t sub_1AD2F25CC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000027 && a2 == 0x80000001AD6A7550 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A7580 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD6A75A0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AD6A75C0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AD6A75E0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD6A7600 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD6A7620 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD6A7640 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A7660 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AD6A7680 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AD6A76A0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD6A76C0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AD6A76E0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD6A7700 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AD6A7720 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD6A7740 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001AD6A7760 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AD6A7780 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001AD6A77A0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001AD6A77D0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7800 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AD6A7820 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001AD6A7840 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A7870 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AD6A7890 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AD6A78B0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD6A78D0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AD6A78F0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AD6A7910 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001AD6A7930 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AD6A7960 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AD6A7980 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AD6A79A0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AD6A79C0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AD6A79E0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AD6A7A00 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AD6A7A20)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 36;
    else
      return 37;
  }
}

unint64_t sub_1AD2F323C()
{
  unint64_t result;

  result = qword_1EECDA628;
  if (!qword_1EECDA628)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66BF9C, &_s14descr1E5CD7029O8EnumCaseON);
    atomic_store(result, (unint64_t *)&qword_1EECDA628);
  }
  return result;
}

uint64_t sub_1AD2F3280()
{
  unint64_t v0;

  v0 = sub_1AD63C434();
  swift_bridgeObjectRelease();
  if (v0 >= 0x24)
    return 36;
  else
    return v0;
}

uint64_t sub_1AD2F32D0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000021 && a2 == 0x80000001AD6A7A40 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7A70)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AD2F33BC()
{
  unint64_t result;

  result = qword_1EECDA630;
  if (!qword_1EECDA630)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66C0F4, &_s8EnumCaseON_14);
    atomic_store(result, (unint64_t *)&qword_1EECDA630);
  }
  return result;
}

uint64_t sub_1AD2F3400(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001AD6A7A90 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465696669726576 && a2 == 0xEE0065756C61565FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AD2F3510()
{
  unint64_t result;

  result = qword_1EECDA638;
  if (!qword_1EECDA638)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66C24C, &_s8EnumCaseON_13);
    atomic_store(result, (unint64_t *)&qword_1EECDA638);
  }
  return result;
}

uint64_t sub_1AD2F3554(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001AD6A7AB0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61565F796C706572 && a2 == 0xEB0000000065756CLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x565F6E6F69746361 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F36D4()
{
  unint64_t result;

  result = qword_1EECDA640;
  if (!qword_1EECDA640)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66C3A4, &_s8EnumCaseON_12);
    atomic_store(result, (unint64_t *)&qword_1EECDA640);
  }
  return result;
}

uint64_t sub_1AD2F3718(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001AD6A7AD0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61565F796C706572 && a2 == 0xEB0000000065756CLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x565F6E6F69746361 && a2 == 0xEC00000065756C61 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x565F324C756E656DLL && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1AD2F3910()
{
  unint64_t result;

  result = qword_1EECDA648;
  if (!qword_1EECDA648)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66C4FC, &_s8EnumCaseON_11);
    atomic_store(result, (unint64_t *)&qword_1EECDA648);
  }
  return result;
}

uint64_t sub_1AD2F3954(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5F746F6274616863 && a2 == 0xEE00304C756E654DLL;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61565F796C706572 && a2 == 0xEB0000000065756CLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x565F6E6F69746361 && a2 == 0xEC00000065756C61 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x565F314C756E656DLL && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1AD2F3B74()
{
  unint64_t result;

  result = qword_1EECDA650;
  if (!qword_1EECDA650)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66C654, &_s8EnumCaseON_10);
    atomic_store(result, (unint64_t *)&qword_1EECDA650);
  }
  return result;
}

uint64_t sub_1AD2F3BB8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7AF0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5F4C52556E65706FLL && a2 == 0xED000065756C6156)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AD2F3CC8()
{
  unint64_t result;

  result = qword_1EECDA658;
  if (!qword_1EECDA658)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66C7AC, &_s8EnumCaseON_9);
    atomic_store(result, (unint64_t *)&qword_1EECDA658);
  }
  return result;
}

uint64_t sub_1AD2F3D0C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001AD6A7B10 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7B30 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A7B50 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61436F65646976 && a2 == 0xEF65756C61565F6CLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1AD2F3ED4()
{
  unint64_t result;

  result = qword_1EECDA660;
  if (!qword_1EECDA660)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66C904, &_s8EnumCaseON_8);
    atomic_store(result, (unint64_t *)&qword_1EECDA660);
  }
  return result;
}

uint64_t sub_1AD2F3F18()
{
  unint64_t v0;

  v0 = sub_1AD63BE94();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1AD2F3F5C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7B70 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A7B90)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AD2F4044()
{
  unint64_t result;

  result = qword_1EECDA668;
  if (!qword_1EECDA668)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66CA5C, &_s8EnumCaseON_7);
    atomic_store(result, (unint64_t *)&qword_1EECDA668);
  }
  return result;
}

uint64_t sub_1AD2F4088(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000021 && a2 == 0x80000001AD6A7BB0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7BE0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61565F7972657571 && a2 == 0xEB0000000065756CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F41EC()
{
  unint64_t result;

  result = qword_1EECDA670;
  if (!qword_1EECDA670)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66CBB4, &_s8EnumCaseON_6);
    atomic_store(result, (unint64_t *)&qword_1EECDA670);
  }
  return result;
}

uint64_t sub_1AD2F4230(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001AD6A7C00 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7C20)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AD2F431C()
{
  unint64_t result;

  result = qword_1EECDA678;
  if (!qword_1EECDA678)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66CD0C, &_s8EnumCaseON_5);
    atomic_store(result, (unint64_t *)&qword_1EECDA678);
  }
  return result;
}

uint64_t sub_1AD2F4360(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001AD6A7C40 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AD6A7C60 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AD6A7C80)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F44A0()
{
  unint64_t result;

  result = qword_1EECDA680;
  if (!qword_1EECDA680)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66CE64, &_s8EnumCaseON_4);
    atomic_store(result, (unint64_t *)&qword_1EECDA680);
  }
  return result;
}

uint64_t sub_1AD2F44E4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001AD6A7CA0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756C61565F6C7275 && a2 == 0xE900000000000065 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x565F72656C616964 && a2 == 0xEC00000065756C61 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756C61565F70616DLL && a2 == 0xE900000000000065 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7261646E656C6163 && a2 == 0xEE0065756C61565FLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5F65736F706D6F63 && a2 == 0xED000065756C6156 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x565F656369766564 && a2 == 0xEC00000065756C61 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73676E6974746573 && a2 == 0xEE0065756C61565FLL)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

unint64_t sub_1AD2F48C0()
{
  unint64_t result;

  result = qword_1EECDA688;
  if (!qword_1EECDA688)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66CFBC, &_s8EnumCaseON_3);
    atomic_store(result, (unint64_t *)&qword_1EECDA688);
  }
  return result;
}

uint64_t sub_1AD2F4904()
{
  unint64_t v0;

  v0 = sub_1AD63BE94();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1AD2F494C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000028 && a2 == 0x80000001AD6A7CC0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61636974726576 && a2 == 0xEE0065756C61565FLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A7CF0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F4AC0()
{
  unint64_t result;

  result = qword_1EECDA690;
  if (!qword_1EECDA690)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66D114, &_s8EnumCaseON_2);
    atomic_store(result, (unint64_t *)&qword_1EECDA690);
  }
  return result;
}

uint64_t sub_1AD2F4B04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5F746F6274616863 && a2 == 0xEF6567617373654DLL;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AD6A7D10 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001AD6A7D30)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F4C70()
{
  unint64_t result;

  result = qword_1EECDA698;
  if (!qword_1EECDA698)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66D26C, &_s8EnumCaseON_1);
    atomic_store(result, (unint64_t *)&qword_1EECDA698);
  }
  return result;
}

uint64_t sub_1AD2F4CB4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6A7D60 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61565F796C706572 && a2 == 0xEB0000000065756CLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x565F6E6F69746361 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F4E34()
{
  unint64_t result;

  result = qword_1EECDA6A0;
  if (!qword_1EECDA6A0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66D3C4, &_s8EnumCaseON_0);
    atomic_store(result, (unint64_t *)&qword_1EECDA6A0);
  }
  return result;
}

uint64_t sub_1AD2F4E78(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001AD6A7D80 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5F6567617373656DLL && a2 == 0xED000065756C6156 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6A7DA0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD2F4FE8()
{
  unint64_t result;

  result = qword_1EECDA6A8;
  if (!qword_1EECDA6A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD66D51C, &_s8EnumCaseON);
    atomic_store(result, (unint64_t *)&qword_1EECDA6A8);
  }
  return result;
}

uint64_t sub_1AD2F502C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1AD2F5054(int *a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(int *);
  int v5;
  char v6;

  v2 = *((_BYTE *)a1 + 4);
  v3 = *(uint64_t (**)(int *))(v1 + 16);
  v5 = *a1;
  v6 = v2;
  return v3(&v5) & 1;
}

uint64_t sub_1AD2F5094(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AD37D8D4(*a1, a1[1], a1[2], *(_QWORD *)(v1 + 16));
}

uint64_t sub_1AD2F50A8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(__int128 *);
  __int128 v5;
  uint64_t v6;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *(uint64_t (**)(__int128 *))(v1 + 16);
  v5 = *a1;
  v6 = v2;
  return v3(&v5) & 1;
}

uint64_t sub_1AD2F50E8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(__int128 *);
  __int128 v5;
  uint64_t v6;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *(uint64_t (**)(__int128 *))(v1 + 16);
  v5 = *a1;
  v6 = v2;
  return v3(&v5) & 1;
}

uint64_t sub_1AD2F5128(int *a1)
{
  uint64_t v1;
  uint64_t (*v2)(int *);
  int v4;

  v2 = *(uint64_t (**)(int *))(v1 + 16);
  v4 = *a1;
  return v2(&v4) & 1;
}

uint64_t sub_1AD2F5164(__int128 *a1)
{
  uint64_t v1;
  uint64_t (*v2)(__int128 *);
  __int128 v4;

  v2 = *(uint64_t (**)(__int128 *))(v1 + 16);
  v4 = *a1;
  return v2(&v4) & 1;
}

uint64_t sub_1AD2F519C(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v2 = *((_BYTE *)a1 + 8);
  v3 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v5 = *a1;
  v6 = v2;
  return v3(&v5) & 1;
}

uint64_t sub_1AD2F51DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = *a1;
  return v2(&v4) & 1;
}

uint64_t sub_1AD2F5214(_QWORD *a1)
{
  uint64_t v1;

  return sub_1AD37ED3C(a1, (uint64_t (**)(_QWORD *))(v1 + 16));
}

_BYTE *sub_1AD2F5228@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD19F72C(a1, a2);
}

_BYTE *sub_1AD2F523C@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD19F72C(a1, a2);
}

_BYTE *sub_1AD2F5250@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD19F72C(a1, a2);
}

_BYTE *sub_1AD2F5264@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD19F72C(a1, a2);
}

uint64_t sub_1AD2F5278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1AD25EBA4(a1, a2, a3, a4);
}

uint64_t sub_1AD2F528C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ReadReceipt.init(with:)(a1, a2);
}

uint64_t sub_1AD2F52A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ReadReceipt.init(with:)(a1, a2);
}

uint64_t sub_1AD2F52B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ReadReceipt.init(with:)(a1, a2);
}

uint64_t sub_1AD2F52C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ReadReceipt.init(with:)(a1, a2);
}

uint64_t PlayedReceipt.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ReadReceipt.init(with:)(a1, a2);
}

uint64_t sub_1AD2F52F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ReadReceipt.init(with:)(a1, a2);
}

_BYTE *sub_1AD2F532C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AD184018(a1, a2, a3);
}

uint64_t AngerMovement.init(with:delay:)@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X8>)
{
  return StrokePoint.init(with:delta:)(a1, a2, a3);
}

uint64_t sub_1AD2F5D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD1EC9CC(a1, a2, a3);
}

uint64_t sub_1AD2F5D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD1EC9CC(a1, a2, a3);
}

uint64_t sub_1AD2F5D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD1C5FDC(a1, a2, a3);
}

uint64_t sub_1AD2F5D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD1C5FDC(a1, a2, a3);
}

uint64_t sub_1AD2F5D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD1C5FDC(a1, a2, a3);
}

uint64_t sub_1AD2F5D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD1C5FDC(a1, a2, a3);
}

uint64_t sub_1AD2F5DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD1C5FDC(a1, a2, a3);
}

uint64_t sub_1AD2F5DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD1C5FDC(a1, a2, a3);
}

uint64_t sub_1AD2F5DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD1C5FDC(a1, a2, a3);
}

uint64_t sub_1AD2F5DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD1C5FDC(a1, a2, a3);
}

uint64_t sub_1AD2F5DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD25EC9C(a1, a2, a3);
}

uint64_t sub_1AD2F5E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD25EC9C(a1, a2, a3);
}

uint64_t sub_1AD2F5E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AD25EC9C(a1, a2, a3);
}

BlastDoor::VideoPreview::AudioFormat __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> VideoPreview.AudioFormat.init(with:codec:)(Swift::String_optional with, Swift::String_optional codec)
{
  return (BlastDoor::VideoPreview::AudioFormat)VideoPreview.VideoFormat.init(with:codec:)(with, codec);
}

unint64_t sub_1AD2F5E44(uint64_t a1, uint64_t a2, Swift::String_optional a3)
{
  return (unint64_t)VideoPreview.VideoFormat.init(with:codec:)(*(Swift::String_optional *)&a1, a3);
}

unint64_t sub_1AD2F5E58(uint64_t a1, uint64_t a2, Swift::String_optional a3)
{
  return (unint64_t)VideoPreview.VideoFormat.init(with:codec:)(*(Swift::String_optional *)&a1, a3);
}

uint64_t sub_1AD2F5E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_1AD25E7A4(a1, a2, a3, a4, a5);
}

BlastDoor::StyleSheet sub_1AD2F5E84(Swift::OpaquePointer a1)
{
  return StyleSheet.init(with:)(a1);
}

BlastDoor::StyleSheet sub_1AD2F5E98(Swift::OpaquePointer a1)
{
  return StyleSheet.init(with:)(a1);
}

BlastDoor::StyleSheet sub_1AD2F5EAC(Swift::OpaquePointer a1)
{
  return StyleSheet.init(with:)(a1);
}

uint64_t sub_1AD2F5EC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD1DDD90(a1, a2);
}

BlastDoor::StyleSheet sub_1AD2F5ED4(Swift::OpaquePointer a1)
{
  return StyleSheet.init(with:)(a1);
}

BlastDoor::StyleSheet sub_1AD2F5EE8(Swift::OpaquePointer a1)
{
  return StyleSheet.init(with:)(a1);
}

BlastDoor::Handwriting::DrawingStroke __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Handwriting.DrawingStroke.init(with:)(Swift::OpaquePointer with)
{
  BlastDoor::Handwriting::DrawingStroke result;

  result.strokePoints._rawValue = StyleSheet.init(with:)(with).rules._rawValue;
  return result;
}

BlastDoor::CPIMMessage::IMDNDispositionNotificationHeader __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CPIMMessage.IMDNDispositionNotificationHeader.init(with:)(Swift::OpaquePointer with)
{
  BlastDoor::CPIMMessage::IMDNDispositionNotificationHeader result;

  result.requirements._rawValue = StyleSheet.init(with:)(with).rules._rawValue;
  return result;
}

BlastDoor::StyleSheet sub_1AD2F5F24(Swift::OpaquePointer a1)
{
  return StyleSheet.init(with:)(a1);
}

uint64_t sub_1AD2F5F38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD1DDD90(a1, a2);
}

uint64_t sub_1AD2F5F4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD1DDD90(a1, a2);
}

uint64_t sub_1AD2F5F60@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD1DDD90(a1, a2);
}

BlastDoor::StyleSheet sub_1AD2F5F74(Swift::OpaquePointer a1)
{
  return StyleSheet.init(with:)(a1);
}

uint64_t sub_1AD2F5FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return SMSMessage.SMSFilteringSettings.init(with:smsFilterCapabilitiesOptions:)(a1, a2, a3, a4);
}

uint64_t sub_1AD2F5FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1AD25DDD8(a1, a2, a3, a4);
}

BlastDoor::PhotosPoster::Options sub_1AD2F5FFC(Swift::Bool a1, Swift::Bool a2)
{
  return PhotosPoster.Options.init(with:hidePrimaryActionButton:)(a1, a2);
}

BlastDoor::PosterArchive::Configuration::RenderingConfiguration __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PosterArchive.Configuration.RenderingConfiguration.init(with:isParallaxEnabled:)(Swift::Bool with, Swift::Bool isParallaxEnabled)
{
  return *(BlastDoor::PosterArchive::Configuration::RenderingConfiguration *)&PhotosPoster.Options.init(with:hidePrimaryActionButton:)(with, isParallaxEnabled);
}

uint64_t sub_1AD2F6024@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!(_BYTE)result)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD2F6044()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD2F604C()
{
  sub_1AD63C4AC();
  sub_1AD63C4C4();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD2F6090()
{
  return sub_1AD63C4C4();
}

uint64_t sub_1AD2F60B8()
{
  sub_1AD63C4AC();
  sub_1AD63C4C4();
  return sub_1AD63C4F4();
}

_BYTE *sub_1AD2F60F8@<X0>(_BYTE *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1AD2F6118(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1AD2F6124()
{
  sub_1AD2FBBC0();
  return sub_1AD63B954();
}

uint64_t sub_1AD2F6180()
{
  sub_1AD2FBBC0();
  return sub_1AD63B8F4();
}

uint64_t OrderPreview.headerImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, &qword_1EECDA6C0);
}

uint64_t OrderPreview.headerImage.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1ACFF6540(a1, v1, &qword_1EECDA6C0);
}

uint64_t (*OrderPreview.headerImage.modify())()
{
  return nullsub_1;
}

__n128 OrderPreview.backgroundColor.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 480);
  result = *(__n128 *)(v1 + 448);
  v4 = *(_OWORD *)(v1 + 464);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

__n128 OrderPreview.backgroundColor.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(a1 + 32);
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 448) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 464) = v4;
  *(_BYTE *)(v1 + 480) = v2;
  return result;
}

uint64_t (*OrderPreview.backgroundColor.modify())()
{
  return nullsub_1;
}

uint64_t OrderPreview.primaryText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 496);
  v3 = *(_BYTE *)(v1 + 536);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 488);
  *(_QWORD *)(a1 + 8) = v2;
  v4 = *(_OWORD *)(v1 + 520);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 504);
  *(_OWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 48) = v3;
  return swift_bridgeObjectRetain();
}

__n128 OrderPreview.primaryText.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v6 = (__n128)a1[1];
  v7 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  swift_bridgeObjectRelease();
  result = v6;
  *(_OWORD *)(v1 + 488) = v7;
  *(__n128 *)(v1 + 504) = v6;
  *(_QWORD *)(v1 + 520) = v2;
  *(_QWORD *)(v1 + 528) = v3;
  *(_BYTE *)(v1 + 536) = v4;
  return result;
}

uint64_t (*OrderPreview.primaryText.modify())()
{
  return nullsub_1;
}

uint64_t OrderPreview.secondaryText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 584);
  v3 = *(_BYTE *)(v1 + 592);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 544);
  v4 = *(_OWORD *)(v1 + 568);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 552);
  *(_OWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 48) = v3;
  return swift_bridgeObjectRetain();
}

__n128 OrderPreview.secondaryText.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v6 = (__n128)a1[1];
  v7 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  swift_bridgeObjectRelease();
  result = v6;
  *(_OWORD *)(v1 + 544) = v7;
  *(__n128 *)(v1 + 560) = v6;
  *(_QWORD *)(v1 + 576) = v2;
  *(_QWORD *)(v1 + 584) = v3;
  *(_BYTE *)(v1 + 592) = v4;
  return result;
}

uint64_t (*OrderPreview.secondaryText.modify())()
{
  return nullsub_1;
}

uint64_t OrderPreview.tertiaryText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 640);
  v3 = *(_BYTE *)(v1 + 648);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 600);
  v4 = *(_OWORD *)(v1 + 624);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 608);
  *(_OWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 48) = v3;
  return swift_bridgeObjectRetain();
}

__n128 OrderPreview.tertiaryText.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v6 = (__n128)a1[1];
  v7 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  swift_bridgeObjectRelease();
  result = v6;
  *(_OWORD *)(v1 + 600) = v7;
  *(__n128 *)(v1 + 616) = v6;
  *(_QWORD *)(v1 + 632) = v2;
  *(_QWORD *)(v1 + 640) = v3;
  *(_BYTE *)(v1 + 648) = v4;
  return result;
}

uint64_t (*OrderPreview.tertiaryText.modify())()
{
  return nullsub_1;
}

__n128 OrderPreview.init(headerImage:backgroundColor:primaryText:secondaryText:tertiaryText:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  _OWORD *v15;
  __n128 result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  __int128 v27;

  v7 = *((_QWORD *)a2 + 2);
  v8 = *((_QWORD *)a2 + 3);
  v9 = *((_BYTE *)a2 + 32);
  v19 = *a3;
  v17 = *a2;
  v18 = a3[1];
  v10 = *((_QWORD *)a3 + 4);
  v11 = *((_QWORD *)a3 + 5);
  v12 = *((_BYTE *)a3 + 48);
  v21 = a4[1];
  v22 = *a4;
  v13 = *((_QWORD *)a4 + 5);
  v20 = *((_QWORD *)a4 + 4);
  v14 = *((_BYTE *)a4 + 48);
  v27 = *a5;
  v26 = (__n128)a5[1];
  v24 = *((_QWORD *)a5 + 5);
  v25 = *((_QWORD *)a5 + 4);
  v23 = *((_BYTE *)a5 + 48);
  *(_OWORD *)(a6 + 240) = 0u;
  *(_OWORD *)(a6 + 256) = 0u;
  *(_OWORD *)(a6 + 208) = 0u;
  *(_OWORD *)(a6 + 224) = 0u;
  *(_OWORD *)(a6 + 176) = 0u;
  *(_OWORD *)(a6 + 192) = 0u;
  *(_OWORD *)(a6 + 144) = 0u;
  *(_OWORD *)(a6 + 160) = 0u;
  *(_OWORD *)(a6 + 112) = 0u;
  *(_OWORD *)(a6 + 128) = 0u;
  *(_OWORD *)(a6 + 80) = 0u;
  *(_OWORD *)(a6 + 96) = 0u;
  *(_OWORD *)(a6 + 48) = 0u;
  *(_OWORD *)(a6 + 64) = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  *(_OWORD *)(a6 + 32) = 0u;
  *(_OWORD *)a6 = 0u;
  *(_QWORD *)(a6 + 272) = 0x1FFFFFFFELL;
  v15 = (_OWORD *)(a6 + 280);
  *v15 = 0u;
  v15[1] = 0u;
  v15[2] = 0u;
  v15[3] = 0u;
  v15[4] = 0u;
  v15[5] = 0u;
  v15[6] = 0u;
  v15[7] = 0u;
  v15[8] = 0u;
  v15[9] = 0u;
  *(_BYTE *)(a6 + 440) = 0;
  *(_OWORD *)(a6 + 448) = 0u;
  *(_OWORD *)(a6 + 464) = 0u;
  *(_BYTE *)(a6 + 480) = 1;
  *(_OWORD *)(a6 + 544) = 0u;
  *(_OWORD *)(a6 + 560) = 0u;
  *(_OWORD *)(a6 + 576) = 0u;
  *(_BYTE *)(a6 + 592) = 0;
  *(_BYTE *)(a6 + 648) = 0;
  *(_OWORD *)(a6 + 616) = 0u;
  *(_OWORD *)(a6 + 632) = 0u;
  *(_OWORD *)(a6 + 600) = 0u;
  sub_1ACFF6540(a1, a6, &qword_1EECDA6C0);
  *(_OWORD *)(a6 + 448) = v17;
  *(_QWORD *)(a6 + 464) = v7;
  *(_QWORD *)(a6 + 472) = v8;
  *(_BYTE *)(a6 + 480) = v9;
  *(_OWORD *)(a6 + 488) = v19;
  *(_OWORD *)(a6 + 504) = v18;
  *(_QWORD *)(a6 + 520) = v10;
  *(_QWORD *)(a6 + 528) = v11;
  *(_BYTE *)(a6 + 536) = v12;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a6 + 544) = v22;
  *(_OWORD *)(a6 + 560) = v21;
  *(_QWORD *)(a6 + 576) = v20;
  *(_QWORD *)(a6 + 584) = v13;
  *(_BYTE *)(a6 + 592) = v14;
  swift_bridgeObjectRelease();
  result = v26;
  *(_OWORD *)(a6 + 600) = v27;
  *(__n128 *)(a6 + 616) = v26;
  *(_QWORD *)(a6 + 632) = v25;
  *(_QWORD *)(a6 + 640) = v24;
  *(_BYTE *)(a6 + 648) = v23;
  return result;
}

uint64_t OrderPreview.OrderText.text.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

__n128 OrderPreview.OrderText.overrideColor.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 48);
  result = *(__n128 *)(v1 + 16);
  v4 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

void __swiftcall OrderPreview.OrderText.init(text:overrideColor:)(BlastDoor::OrderPreview::OrderText *__return_ptr retstr, Swift::String text, BlastDoor::Color_optional *overrideColor)
{
  Swift::Bool is_nil;
  __int128 v4;

  is_nil = overrideColor->is_nil;
  retstr->text = text;
  v4 = *(_OWORD *)&overrideColor->value.blue;
  *(_OWORD *)&retstr->overrideColor.value.red = *(_OWORD *)&overrideColor->value.red;
  *(_OWORD *)&retstr->overrideColor.value.blue = v4;
  retstr->overrideColor.is_nil = is_nil;
}

uint64_t sub_1AD2F6630()
{
  _BYTE *v0;

  if (*v0)
    return 0x656469727265766FLL;
  else
    return 1954047348;
}

uint64_t sub_1AD2F6670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD2FB6B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD2F6694()
{
  sub_1AD2F685C();
  return sub_1AD63C560();
}

uint64_t sub_1AD2F66BC()
{
  sub_1AD2F685C();
  return sub_1AD63C56C();
}

uint64_t OrderPreview.OrderText.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  char v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA6C8);
  v14 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v1 + 24);
  v13 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 40);
  v11 = v8;
  v20 = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2F685C();
  sub_1AD63C53C();
  LOBYTE(v15) = 0;
  sub_1AD63C020();
  if (!v2)
  {
    v15 = v13;
    v16 = v12;
    v17 = v11;
    v18 = v10;
    v19 = v20;
    v21 = 1;
    sub_1AD28BCDC();
    sub_1AD63C014();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v6, v4);
}

unint64_t sub_1AD2F685C()
{
  unint64_t result;

  result = qword_1EECDA6D0;
  if (!qword_1EECDA6D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67764C, &type metadata for OrderPreview.OrderText.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA6D0);
  }
  return result;
}

uint64_t OrderPreview.OrderText.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  char v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA6D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2F685C();
  sub_1AD63C524();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v16[0]) = 0;
  v9 = sub_1AD63BF0C();
  v11 = v10;
  v18 = 1;
  sub_1AD28BBDC();
  swift_bridgeObjectRetain();
  sub_1AD63BF00();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v17;
  v13 = v16[0];
  v14 = v16[1];
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_OWORD *)(a2 + 16) = v13;
  *(_OWORD *)(a2 + 32) = v14;
  *(_BYTE *)(a2 + 48) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD2F6A4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OrderPreview.OrderText.init(from:)(a1, a2);
}

uint64_t sub_1AD2F6A60(_QWORD *a1)
{
  return OrderPreview.OrderText.encode(to:)(a1);
}

uint64_t OrderPreview.OrderImage.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(v1, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a1 + 192) = v23;
    *(_OWORD *)(a1 + 208) = v4;
    *(_OWORD *)(a1 + 224) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a1 + 128) = v19;
    *(_OWORD *)(a1 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a1 + 160) = v21;
    *(_OWORD *)(a1 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a1 + 64) = v15;
    *(_OWORD *)(a1 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *OrderPreview.OrderImage.image.setter(_QWORD *a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[15];
  uint64_t v12;

  sub_1AD0CFB8C((uint64_t)a1, (uint64_t)v11);
  sub_1AD009758(v1, &qword_1ED2E2680);
  v3 = v11[13];
  *(_OWORD *)(v1 + 192) = v11[12];
  *(_OWORD *)(v1 + 208) = v3;
  *(_OWORD *)(v1 + 224) = v11[14];
  *(_QWORD *)(v1 + 240) = v12;
  v4 = v11[9];
  *(_OWORD *)(v1 + 128) = v11[8];
  *(_OWORD *)(v1 + 144) = v4;
  v5 = v11[11];
  *(_OWORD *)(v1 + 160) = v11[10];
  *(_OWORD *)(v1 + 176) = v5;
  v6 = v11[5];
  *(_OWORD *)(v1 + 64) = v11[4];
  *(_OWORD *)(v1 + 80) = v6;
  v7 = v11[7];
  *(_OWORD *)(v1 + 96) = v11[6];
  *(_OWORD *)(v1 + 112) = v7;
  v8 = v11[1];
  *(_OWORD *)v1 = v11[0];
  *(_OWORD *)(v1 + 16) = v8;
  v9 = v11[3];
  *(_OWORD *)(v1 + 32) = v11[2];
  *(_OWORD *)(v1 + 48) = v9;
  return sub_1AD046A30(a1);
}

uint64_t OrderPreview.OrderImage.image.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v2 = v1;
  v4 = (char *)malloc(0x1F8uLL);
  *a1 = v4;
  *((_QWORD *)v4 + 62) = v2;
  result = sub_1ACFF64C0(v2, (uint64_t)(v4 + 248), &qword_1ED2E2680);
  if (*((_QWORD *)v4 + 34))
  {
    v6 = *(_OWORD *)(v4 + 456);
    *((_OWORD *)v4 + 12) = *(_OWORD *)(v4 + 440);
    *((_OWORD *)v4 + 13) = v6;
    *((_OWORD *)v4 + 14) = *(_OWORD *)(v4 + 472);
    *((_QWORD *)v4 + 30) = *((_QWORD *)v4 + 61);
    v7 = *(_OWORD *)(v4 + 392);
    *((_OWORD *)v4 + 8) = *(_OWORD *)(v4 + 376);
    *((_OWORD *)v4 + 9) = v7;
    v8 = *(_OWORD *)(v4 + 424);
    *((_OWORD *)v4 + 10) = *(_OWORD *)(v4 + 408);
    *((_OWORD *)v4 + 11) = v8;
    v9 = *(_OWORD *)(v4 + 328);
    *((_OWORD *)v4 + 4) = *(_OWORD *)(v4 + 312);
    *((_OWORD *)v4 + 5) = v9;
    v10 = *(_OWORD *)(v4 + 360);
    *((_OWORD *)v4 + 6) = *(_OWORD *)(v4 + 344);
    *((_OWORD *)v4 + 7) = v10;
    v11 = *(_OWORD *)(v4 + 264);
    *(_OWORD *)v4 = *(_OWORD *)(v4 + 248);
    *((_OWORD *)v4 + 1) = v11;
    v12 = *(_OWORD *)(v4 + 296);
    result = (uint64_t)sub_1AD146614;
    *((_OWORD *)v4 + 2) = *(_OWORD *)(v4 + 280);
    *((_OWORD *)v4 + 3) = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t OrderPreview.OrderImage.$image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, &qword_1ED2E2FE8);
}

uint64_t OrderPreview.OrderImage.$image.setter(uint64_t a1)
{
  void *v1;
  _BYTE __src[440];

  sub_1ACFF64C0(a1, (uint64_t)__src, &qword_1ED2E2FE8);
  sub_1AD009758((uint64_t)v1, &qword_1ED2E2FE8);
  memcpy(v1, __src, 0x1B8uLL);
  return sub_1AD009758(a1, &qword_1ED2E2FE8);
}

void (*OrderPreview.OrderImage.$image.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x530uLL);
  *a1 = v3;
  v3[165] = v1;
  sub_1ACFF64C0(v1, (uint64_t)v3, &qword_1ED2E2FE8);
  return sub_1AD146874;
}

void OrderPreview.OrderImage.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 440);
}

_BYTE *OrderPreview.OrderImage.type.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 440) = *result;
  return result;
}

uint64_t (*OrderPreview.OrderImage.type.modify())()
{
  return nullsub_1;
}

_QWORD *static OrderPreview.OrderImage.with(image:ofType:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[15];
  uint64_t v15;
  _QWORD v16[31];
  __int128 v17[12];

  v5 = *a2;
  LOWORD(v17[0]) = 0;
  sub_1AD00FD58(v17);
  sub_1AD00E830(v17, a3 + 248);
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 144) = 0u;
  *(_OWORD *)(a3 + 160) = 0u;
  *(_OWORD *)(a3 + 176) = 0u;
  *(_OWORD *)(a3 + 192) = 0u;
  *(_OWORD *)(a3 + 208) = 0u;
  *(_OWORD *)(a3 + 224) = 0u;
  *(_QWORD *)(a3 + 240) = 0;
  *(_BYTE *)(a3 + 440) = v5;
  sub_1AD0CFB8C(a1, (uint64_t)v16);
  sub_1AD0CFB8C((uint64_t)v16, (uint64_t)v14);
  sub_1AD009758(a3, &qword_1ED2E2680);
  v6 = v14[13];
  *(_OWORD *)(a3 + 192) = v14[12];
  *(_OWORD *)(a3 + 208) = v6;
  *(_OWORD *)(a3 + 224) = v14[14];
  *(_QWORD *)(a3 + 240) = v15;
  v7 = v14[9];
  *(_OWORD *)(a3 + 128) = v14[8];
  *(_OWORD *)(a3 + 144) = v7;
  v8 = v14[11];
  *(_OWORD *)(a3 + 160) = v14[10];
  *(_OWORD *)(a3 + 176) = v8;
  v9 = v14[5];
  *(_OWORD *)(a3 + 64) = v14[4];
  *(_OWORD *)(a3 + 80) = v9;
  v10 = v14[7];
  *(_OWORD *)(a3 + 96) = v14[6];
  *(_OWORD *)(a3 + 112) = v10;
  v11 = v14[1];
  *(_OWORD *)a3 = v14[0];
  *(_OWORD *)(a3 + 16) = v11;
  v12 = v14[3];
  *(_OWORD *)(a3 + 32) = v14[2];
  *(_OWORD *)(a3 + 48) = v12;
  return sub_1AD046A30(v16);
}

uint64_t sub_1AD2F6E3C()
{
  _BYTE *v0;

  if (*v0)
    return 1701869940;
  else
    return 0x6567616D69;
}

uint64_t sub_1AD2F6E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD2FB7B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD2F6E90()
{
  sub_1AD2F7038();
  return sub_1AD63C560();
}

uint64_t sub_1AD2F6EB8()
{
  sub_1AD2F7038();
  return sub_1AD63C56C();
}

uint64_t OrderPreview.OrderImage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA6E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2F7038();
  sub_1AD63C53C();
  v10[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2FE8);
  sub_1AD14794C(&qword_1ED2DACF0, (uint64_t)&unk_1AD67ACF4);
  sub_1AD63C068();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3 + 440);
    v10[13] = 1;
    sub_1AD2F707C();
    sub_1AD63C068();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1AD2F7038()
{
  unint64_t result;

  result = qword_1EECDA6E8;
  if (!qword_1EECDA6E8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6775FC, &type metadata for OrderPreview.OrderImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA6E8);
  }
  return result;
}

unint64_t sub_1AD2F707C()
{
  unint64_t result;

  result = qword_1EECDA6F0;
  if (!qword_1EECDA6F0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD677028, &type metadata for OrderPreviewImageType);
    atomic_store(result, (unint64_t *)&qword_1EECDA6F0);
  }
  return result;
}

_QWORD *OrderPreview.OrderImage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11[440];
  _QWORD v12[31];
  _BYTE v13[200];
  __int128 v14[13];
  uint64_t v15;

  v15 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA6F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  LOWORD(v14[0]) = 0;
  sub_1AD00FD58(v14);
  sub_1AD00E830(v14, (uint64_t)v13);
  memset(v12, 0, sizeof(v12));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2F7038();
  sub_1AD63C524();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (_QWORD *)sub_1AD009758((uint64_t)v12, &qword_1ED2E2FE8);
  }
  else
  {
    v8 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2FE8);
    HIBYTE(v10) = 0;
    sub_1AD14794C(&qword_1ED2E26B0, (uint64_t)&unk_1AD67ACCC);
    sub_1AD63BF54();
    sub_1ACFF6540((uint64_t)v11, (uint64_t)v12, &qword_1ED2E2FE8);
    HIBYTE(v10) = 1;
    sub_1AD2F72E4();
    sub_1AD63BF54();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v13[192] = v11[0];
    sub_1AD2F7328((uint64_t)v12, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1AD2F735C(v12);
  }
}

unint64_t sub_1AD2F72E4()
{
  unint64_t result;

  result = qword_1EECDA700;
  if (!qword_1EECDA700)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD677000, &type metadata for OrderPreviewImageType);
    atomic_store(result, (unint64_t *)&qword_1EECDA700);
  }
  return result;
}

uint64_t sub_1AD2F7328(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for OrderPreview.OrderImage(a2, a1);
  return a2;
}

_QWORD *sub_1AD2F735C(_QWORD *a1)
{
  destroy for MessagesAppBalloon.AppIconImage(a1);
  return a1;
}

_QWORD *sub_1AD2F7388@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OrderPreview.OrderImage.init(from:)(a1, a2);
}

uint64_t sub_1AD2F739C(_QWORD *a1)
{
  return OrderPreview.OrderImage.encode(to:)(a1);
}

uint64_t OrderPreview.Constraints.workingDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t OrderPreview.Constraints.init(workingDirectory:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(result + 8);
  v3 = *(_BYTE *)(result + 16);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = v3;
  return result;
}

unint64_t sub_1AD2F73F4()
{
  return 0xD000000000000010;
}

uint64_t sub_1AD2F7410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD2FB890(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AD2F7438()
{
  sub_1AD2F7598();
  return sub_1AD63C560();
}

uint64_t sub_1AD2F7460()
{
  sub_1AD2F7598();
  return sub_1AD63C56C();
}

uint64_t OrderPreview.Constraints.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v10[3];
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA708);
  v10[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2F7598();
  sub_1AD63C53C();
  v10[1] = v7;
  v10[2] = v6;
  v11 = v8;
  sub_1AD2F75DC();
  sub_1AD63C068();
  return (*(uint64_t (**)(char *, uint64_t))(v10[0] + 8))(v5, v3);
}

unint64_t sub_1AD2F7598()
{
  unint64_t result;

  result = qword_1EECDA710;
  if (!qword_1EECDA710)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6775AC, &type metadata for OrderPreview.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA710);
  }
  return result;
}

unint64_t sub_1AD2F75DC()
{
  unint64_t result;

  result = qword_1ED2E2E28;
  if (!qword_1ED2E2E28)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD68E018, &type metadata for File);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E28);
  }
  return result;
}

uint64_t OrderPreview.Constraints.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  _QWORD v12[3];
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA718);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2F7598();
  sub_1AD63C524();
  if (!v2)
  {
    sub_1AD00F8A8();
    sub_1AD63BF54();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v12[2];
    v10 = v13;
    *(_QWORD *)a2 = v12[1];
    *(_QWORD *)(a2 + 8) = v9;
    *(_BYTE *)(a2 + 16) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AD2F7748@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OrderPreview.Constraints.init(from:)(a1, a2);
}

uint64_t sub_1AD2F775C(_QWORD *a1)
{
  return OrderPreview.Constraints.encode(to:)(a1);
}

uint64_t sub_1AD2F7770()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AD2F77A8 + 4 * byte_1AD676F10[*v0]))(0x6D49726564616568, 0xEB00000000656761);
}

uint64_t sub_1AD2F77A8()
{
  return 0x756F72676B636162;
}

uint64_t sub_1AD2F77CC()
{
  return 0x547972616D697270;
}

uint64_t sub_1AD2F77EC()
{
  return 0x7261646E6F636573;
}

uint64_t sub_1AD2F7810()
{
  return 0x7972616974726574;
}

uint64_t sub_1AD2F7830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD2FB914(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD2F7854()
{
  sub_1AD2F7AE0();
  return sub_1AD63C560();
}

uint64_t sub_1AD2F787C()
{
  sub_1AD2F7AE0();
  return sub_1AD63C56C();
}

uint64_t OrderPreview.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA720);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2F7AE0();
  sub_1AD63C53C();
  LOBYTE(v19) = 0;
  sub_1AD2F7B24();
  sub_1AD63C014();
  if (!v2)
  {
    v9 = *(_BYTE *)(v3 + 480);
    v10 = *(_OWORD *)(v3 + 464);
    v19 = *(_OWORD *)(v3 + 448);
    v20 = v10;
    LOBYTE(v21) = v9;
    v23 = 1;
    sub_1AD28BCDC();
    sub_1AD63C014();
    v11 = *(_QWORD *)(v3 + 496);
    v12 = *(_BYTE *)(v3 + 536);
    *(_QWORD *)&v19 = *(_QWORD *)(v3 + 488);
    *((_QWORD *)&v19 + 1) = v11;
    v13 = *(_OWORD *)(v3 + 520);
    v20 = *(_OWORD *)(v3 + 504);
    v21 = v13;
    v22 = v12;
    v23 = 2;
    sub_1AD2F7B68();
    sub_1AD63C068();
    v14 = *(_BYTE *)(v3 + 592);
    v15 = *(_OWORD *)(v3 + 560);
    v19 = *(_OWORD *)(v3 + 544);
    v20 = v15;
    v21 = *(_OWORD *)(v3 + 576);
    v22 = v14;
    v23 = 3;
    sub_1AD63C014();
    v16 = *(_BYTE *)(v3 + 648);
    v17 = *(_OWORD *)(v3 + 616);
    v19 = *(_OWORD *)(v3 + 600);
    v20 = v17;
    v21 = *(_OWORD *)(v3 + 632);
    v22 = v16;
    v23 = 4;
    sub_1AD63C014();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1AD2F7AE0()
{
  unint64_t result;

  result = qword_1EECDA728;
  if (!qword_1EECDA728)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67755C, &type metadata for OrderPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA728);
  }
  return result;
}

unint64_t sub_1AD2F7B24()
{
  unint64_t result;

  result = qword_1EECDA730;
  if (!qword_1EECDA730)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for OrderPreview.OrderImage, &type metadata for OrderPreview.OrderImage);
    atomic_store(result, (unint64_t *)&qword_1EECDA730);
  }
  return result;
}

unint64_t sub_1AD2F7B68()
{
  unint64_t result;

  result = qword_1EECDA738;
  if (!qword_1EECDA738)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for OrderPreview.OrderText, &type metadata for OrderPreview.OrderText);
    atomic_store(result, (unint64_t *)&qword_1EECDA738);
  }
  return result;
}

_QWORD *OrderPreview.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  unsigned __int8 v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unsigned __int8 v21;
  _QWORD v22[35];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  __int128 v34;
  __int128 v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned __int8 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  unsigned __int8 v48;
  char *v49;

  v49 = a2;
  *(_QWORD *)&v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA740);
  v4 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v22, 0, 272);
  v22[34] = 0x1FFFFFFFELL;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0;
  v34 = 0u;
  v35 = 0u;
  v36 = 1;
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v44 = 0;
  v46 = 0u;
  v47 = 0u;
  v45 = 0u;
  v48 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2F7AE0();
  sub_1AD63C524();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1AD009758((uint64_t)v22, &qword_1EECDA6C0);
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
    sub_1AD2F7FA0();
    sub_1AD63BF00();
    sub_1ACFF6540((uint64_t)&v18, (uint64_t)v22, &qword_1EECDA6C0);
    v17 = 1;
    sub_1AD28BBDC();
    sub_1AD63BF00();
    v34 = v18;
    v35 = v19;
    v36 = v20;
    v17 = 2;
    sub_1AD2F7FE4();
    sub_1AD63BF54();
    v37 = v18;
    v38 = v19;
    v39 = v20;
    v40 = v21;
    v17 = 3;
    v7 = v16;
    sub_1AD63BF00();
    v14 = v19;
    v15 = v18;
    v13 = *((_QWORD *)&v20 + 1);
    v8 = v20;
    HIDWORD(v12) = v21;
    swift_bridgeObjectRelease();
    v41 = v15;
    v42 = v14;
    *(_QWORD *)&v43 = v8;
    *((_QWORD *)&v43 + 1) = v13;
    v44 = BYTE4(v12);
    v17 = 4;
    sub_1AD63BF00();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v7);
    v15 = v18;
    v16 = v19;
    v9 = v20;
    v10 = v21;
    swift_bridgeObjectRelease();
    v45 = v15;
    v46 = v16;
    v47 = v9;
    v48 = v10;
    sub_1AD2F8028((char *)v22, v49);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1AD2F805C(v22);
  }
}

unint64_t sub_1AD2F7FA0()
{
  unint64_t result;

  result = qword_1EECDA748;
  if (!qword_1EECDA748)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for OrderPreview.OrderImage, &type metadata for OrderPreview.OrderImage);
    atomic_store(result, (unint64_t *)&qword_1EECDA748);
  }
  return result;
}

unint64_t sub_1AD2F7FE4()
{
  unint64_t result;

  result = qword_1EECDA750;
  if (!qword_1EECDA750)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for OrderPreview.OrderText, &type metadata for OrderPreview.OrderText);
    atomic_store(result, (unint64_t *)&qword_1EECDA750);
  }
  return result;
}

char *sub_1AD2F8028(char *__src, char *__dst)
{
  initializeWithCopy for OrderPreview(__dst, __src);
  return __dst;
}

_QWORD *sub_1AD2F805C(_QWORD *a1)
{
  destroy for OrderPreview(a1);
  return a1;
}

unint64_t sub_1AD2F808C()
{
  unint64_t result;

  result = qword_1EECDA758;
  if (!qword_1EECDA758)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD676F34, &type metadata for OrderPreviewImageType);
    atomic_store(result, (unint64_t *)&qword_1EECDA758);
  }
  return result;
}

uint64_t sub_1AD2F80D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2F72E4, (uint64_t (*)(void))sub_1AD2F707C);
}

unint64_t sub_1AD2F80E8()
{
  unint64_t result;

  result = qword_1EECDA760;
  if (!qword_1EECDA760)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for OrderPreview.Constraints, &type metadata for OrderPreview.Constraints);
    atomic_store(result, (unint64_t *)&qword_1EECDA760);
  }
  return result;
}

unint64_t sub_1AD2F8130()
{
  unint64_t result;

  result = qword_1EECDA768;
  if (!qword_1EECDA768)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for OrderPreview.Constraints, &type metadata for OrderPreview.Constraints);
    atomic_store(result, (unint64_t *)&qword_1EECDA768);
  }
  return result;
}

unint64_t sub_1AD2F8174(uint64_t a1)
{
  unint64_t result;

  result = sub_1AD2F8198();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AD2F8198()
{
  unint64_t result;

  result = qword_1EECDA770;
  if (!qword_1EECDA770)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for OrderPreview, &type metadata for OrderPreview);
    atomic_store(result, (unint64_t *)&qword_1EECDA770);
  }
  return result;
}

uint64_t sub_1AD2F81DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2F81F0, (uint64_t (*)(void))sub_1AD2F8234);
}

unint64_t sub_1AD2F81F0()
{
  unint64_t result;

  result = qword_1EECDA778;
  if (!qword_1EECDA778)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for OrderPreview, &type metadata for OrderPreview);
    atomic_store(result, (unint64_t *)&qword_1EECDA778);
  }
  return result;
}

unint64_t sub_1AD2F8234()
{
  unint64_t result;

  result = qword_1EECDA780;
  if (!qword_1EECDA780)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for OrderPreview, &type metadata for OrderPreview);
    atomic_store(result, (unint64_t *)&qword_1EECDA780);
  }
  return result;
}

_QWORD *sub_1AD2F8278@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return OrderPreview.init(from:)(a1, a2);
}

uint64_t sub_1AD2F828C(_QWORD *a1)
{
  return OrderPreview.encode(to:)(a1);
}

uint64_t sub_1AD2F82A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(a1, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a2 + 192) = v23;
    *(_OWORD *)(a2 + 208) = v4;
    *(_OWORD *)(a2 + 224) = v25;
    *(_QWORD *)(a2 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a2 + 128) = v19;
    *(_OWORD *)(a2 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a2 + 160) = v21;
    *(_OWORD *)(a2 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD2F8348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACFF64C0(a1, a2, &qword_1ED2E2FE8);
}

ValueMetadata *type metadata accessor for OrderPreviewImageType()
{
  return &type metadata for OrderPreviewImageType;
}

uint64_t destroy for OrderPreview(_QWORD *a1)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  if (a1[34] >> 1 != 0xFFFFFFFFLL
    || (a1[38] | a1[36]) > 1uLL
    || (a1[44] & 0xFFFFFFFFFFFFFEFELL | a1[40] & 0xFFFFFFFFFFFF00FELL) != 0
    || (a1[48] | a1[46]) >= 2uLL)
  {
    if (a1[3])
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      v5 = a1[10];
      v6 = a1[12];
      v7 = a1[14];
      v8 = a1[16];
      v9 = a1[20];
      v10 = a1[22];
      v11 = a1[24];
      if (v5 >> 1 != 0xFFFFFFFF
        || (v7 | (unint64_t)v6) > 1
        || v9 & 0xFFFFFFFFFFFFFEFELL | v8 & 0xFFFFFFFFFFFF00FELL
        || (v11 | v10) >= 2)
      {
        sub_1AD00E8B0(a1[7], a1[8], a1[9], v5, a1[11], v6, a1[13], v7, a1[15], v8, a1[17], a1[18], a1[19], v9, a1[21], v10, a1[23], v11, a1[25],
          a1[26],
          a1[27],
          a1[28],
          a1[29],
          a1[30]);
      }
    }
    sub_1AD00E8B0(a1[31], a1[32], a1[33], a1[34], a1[35], a1[36], a1[37], a1[38], a1[39], a1[40], a1[41], a1[42], a1[43], a1[44], a1[45], a1[46], a1[47], a1[48], a1[49],
      a1[50],
      a1[51],
      a1[52],
      a1[53],
      a1[54]);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for OrderPreview(char *__dst, char *__src)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;

  if (*((_QWORD *)__src + 34) >> 1 != 0xFFFFFFFFLL
    || (*((_QWORD *)__src + 38) | *((_QWORD *)__src + 36)) > 1uLL
    || (*((_QWORD *)__src + 44) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)__src + 40) & 0xFFFFFFFFFFFF00FELL) != 0
    || (*((_QWORD *)__src + 48) | *((_QWORD *)__src + 46)) >= 2uLL)
  {
    v7 = *((_QWORD *)__src + 3);
    if (v7)
    {
      v8 = *((_QWORD *)__src + 4);
      *((_QWORD *)__dst + 3) = v7;
      *((_QWORD *)__dst + 4) = v8;
      (**(void (***)(char *, char *))(v7 - 8))(__dst, __src);
      *((_QWORD *)__dst + 5) = *((_QWORD *)__src + 5);
      __dst[48] = __src[48];
      v9 = *((_QWORD *)__src + 10);
      v10 = *((_QWORD *)__src + 12);
      v11 = *((_QWORD *)__src + 14);
      v12 = *((_QWORD *)__src + 24);
      if (v9 >> 1 != 0xFFFFFFFF
        || (v11 | (unint64_t)v10) > 1
        || *((_QWORD *)__src + 20) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)__src + 16) & 0xFFFFFFFFFFFF00FELL
        || (v12 | *((_QWORD *)__src + 22)) >= 2)
      {
        v26 = *((_QWORD *)__src + 8);
        v27 = *((_QWORD *)__src + 11);
        v47 = *((_QWORD *)__src + 15);
        v51 = *((_QWORD *)__src + 17);
        v57 = *((_QWORD *)__src + 18);
        v59 = *((_QWORD *)__src + 19);
        v61 = *((_QWORD *)__src + 21);
        v63 = *((_QWORD *)__src + 23);
        v65 = *((_QWORD *)__src + 25);
        v67 = *((_QWORD *)__src + 26);
        v69 = *((_QWORD *)__src + 27);
        v71 = *((_QWORD *)__src + 28);
        v73 = *((_QWORD *)__src + 29);
        v75 = *((_QWORD *)__src + 30);
        v53 = *((_QWORD *)__src + 20);
        v55 = *((_QWORD *)__src + 22);
        v28 = *((_QWORD *)__src + 7);
        v45 = *((_QWORD *)__src + 16);
        v29 = *((_QWORD *)__src + 9);
        v49 = *((_QWORD *)__src + 24);
        v30 = *((_QWORD *)__src + 13);
        sub_1AD00FEAC(v28, v26, v29, v9, v27, v10, v30, v11, v47, v45, v51, v57, v59, v53, v61, v55, v63, v12, v65,
          v67,
          v69,
          v71,
          v73,
          v75);
        *((_QWORD *)__dst + 7) = v28;
        *((_QWORD *)__dst + 8) = v26;
        *((_QWORD *)__dst + 9) = v29;
        *((_QWORD *)__dst + 10) = v9;
        *((_QWORD *)__dst + 11) = v27;
        *((_QWORD *)__dst + 12) = v10;
        *((_QWORD *)__dst + 13) = v30;
        *((_QWORD *)__dst + 14) = v11;
        *((_QWORD *)__dst + 15) = v47;
        *((_QWORD *)__dst + 16) = v45;
        *((_QWORD *)__dst + 17) = v51;
        *((_QWORD *)__dst + 18) = v57;
        *((_QWORD *)__dst + 19) = v59;
        *((_QWORD *)__dst + 20) = v53;
        *((_QWORD *)__dst + 21) = v61;
        *((_QWORD *)__dst + 22) = v55;
        *((_QWORD *)__dst + 23) = v63;
        *((_QWORD *)__dst + 24) = v49;
        *((_QWORD *)__dst + 25) = v65;
        *((_QWORD *)__dst + 26) = v67;
        *((_QWORD *)__dst + 27) = v69;
        *((_QWORD *)__dst + 28) = v71;
        *((_QWORD *)__dst + 29) = v73;
        *((_QWORD *)__dst + 30) = v75;
      }
      else
      {
        v13 = *(_OWORD *)(__src + 200);
        *(_OWORD *)(__dst + 184) = *(_OWORD *)(__src + 184);
        *(_OWORD *)(__dst + 200) = v13;
        v14 = *(_OWORD *)(__src + 232);
        *(_OWORD *)(__dst + 216) = *(_OWORD *)(__src + 216);
        *(_OWORD *)(__dst + 232) = v14;
        v15 = *(_OWORD *)(__src + 136);
        *(_OWORD *)(__dst + 120) = *(_OWORD *)(__src + 120);
        *(_OWORD *)(__dst + 136) = v15;
        v16 = *(_OWORD *)(__src + 168);
        *(_OWORD *)(__dst + 152) = *(_OWORD *)(__src + 152);
        *(_OWORD *)(__dst + 168) = v16;
        v17 = *(_OWORD *)(__src + 72);
        *(_OWORD *)(__dst + 56) = *(_OWORD *)(__src + 56);
        *(_OWORD *)(__dst + 72) = v17;
        v18 = *(_OWORD *)(__src + 104);
        *(_OWORD *)(__dst + 88) = *(_OWORD *)(__src + 88);
        *(_OWORD *)(__dst + 104) = v18;
      }
    }
    else
    {
      v19 = *((_OWORD *)__src + 13);
      *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
      *((_OWORD *)__dst + 13) = v19;
      *((_OWORD *)__dst + 14) = *((_OWORD *)__src + 14);
      *((_QWORD *)__dst + 30) = *((_QWORD *)__src + 30);
      v20 = *((_OWORD *)__src + 9);
      *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
      *((_OWORD *)__dst + 9) = v20;
      v21 = *((_OWORD *)__src + 11);
      *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
      *((_OWORD *)__dst + 11) = v21;
      v22 = *((_OWORD *)__src + 5);
      *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
      *((_OWORD *)__dst + 5) = v22;
      v23 = *((_OWORD *)__src + 7);
      *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
      *((_OWORD *)__dst + 7) = v23;
      v24 = *((_OWORD *)__src + 1);
      *(_OWORD *)__dst = *(_OWORD *)__src;
      *((_OWORD *)__dst + 1) = v24;
      v25 = *((_OWORD *)__src + 3);
      *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
      *((_OWORD *)__dst + 3) = v25;
    }
    v31 = *((_QWORD *)__src + 36);
    v32 = *((_QWORD *)__src + 37);
    v46 = *((_QWORD *)__src + 39);
    v48 = *((_QWORD *)__src + 40);
    v50 = *((_QWORD *)__src + 41);
    v52 = *((_QWORD *)__src + 42);
    v54 = *((_QWORD *)__src + 43);
    v56 = *((_QWORD *)__src + 44);
    v58 = *((_QWORD *)__src + 45);
    v60 = *((_QWORD *)__src + 46);
    v62 = *((_QWORD *)__src + 47);
    v64 = *((_QWORD *)__src + 48);
    v66 = *((_QWORD *)__src + 49);
    v68 = *((_QWORD *)__src + 50);
    v70 = *((_QWORD *)__src + 51);
    v72 = *((_QWORD *)__src + 52);
    v74 = *((_QWORD *)__src + 53);
    v76 = *((_QWORD *)__src + 54);
    v33 = *((_QWORD *)__src + 31);
    v34 = *((_QWORD *)__src + 32);
    v35 = *((_QWORD *)__src + 33);
    v36 = *((_QWORD *)__src + 34);
    v37 = *((_QWORD *)__src + 35);
    v38 = *((_QWORD *)__src + 38);
    sub_1AD00FEAC(v33, v34, v35, v36, v37, v31, v32, v38, v46, v48, v50, v52, v54, v56, v58, v60, v62, v64, v66,
      v68,
      v70,
      v72,
      v74,
      v76);
    *((_QWORD *)__dst + 31) = v33;
    *((_QWORD *)__dst + 32) = v34;
    *((_QWORD *)__dst + 33) = v35;
    *((_QWORD *)__dst + 34) = v36;
    *((_QWORD *)__dst + 35) = v37;
    *((_QWORD *)__dst + 36) = v31;
    *((_QWORD *)__dst + 37) = v32;
    *((_QWORD *)__dst + 38) = v38;
    *((_QWORD *)__dst + 39) = v46;
    *((_QWORD *)__dst + 40) = v48;
    *((_QWORD *)__dst + 41) = v50;
    *((_QWORD *)__dst + 42) = v52;
    *((_QWORD *)__dst + 43) = v54;
    *((_QWORD *)__dst + 44) = v56;
    *((_QWORD *)__dst + 45) = v58;
    *((_QWORD *)__dst + 46) = v60;
    *((_QWORD *)__dst + 47) = v62;
    *((_QWORD *)__dst + 48) = v64;
    *((_QWORD *)__dst + 49) = v66;
    *((_QWORD *)__dst + 50) = v68;
    *((_QWORD *)__dst + 51) = v70;
    *((_QWORD *)__dst + 52) = v72;
    *((_QWORD *)__dst + 53) = v74;
    *((_QWORD *)__dst + 54) = v76;
    __dst[440] = __src[440];
  }
  else
  {
    memcpy(__dst, __src, 0x1B9uLL);
  }
  v39 = *((_OWORD *)__src + 29);
  *((_OWORD *)__dst + 28) = *((_OWORD *)__src + 28);
  *((_OWORD *)__dst + 29) = v39;
  __dst[480] = __src[480];
  v40 = *((_QWORD *)__src + 62);
  *((_QWORD *)__dst + 61) = *((_QWORD *)__src + 61);
  *((_QWORD *)__dst + 62) = v40;
  __dst[536] = __src[536];
  v41 = *(_OWORD *)(__src + 520);
  *(_OWORD *)(__dst + 504) = *(_OWORD *)(__src + 504);
  *(_OWORD *)(__dst + 520) = v41;
  *((_QWORD *)__dst + 68) = *((_QWORD *)__src + 68);
  *((_QWORD *)__dst + 69) = *((_QWORD *)__src + 69);
  __dst[592] = __src[592];
  v42 = *((_OWORD *)__src + 36);
  *((_OWORD *)__dst + 35) = *((_OWORD *)__src + 35);
  *((_OWORD *)__dst + 36) = v42;
  *((_QWORD *)__dst + 75) = *((_QWORD *)__src + 75);
  *((_QWORD *)__dst + 76) = *((_QWORD *)__src + 76);
  __dst[648] = __src[648];
  v43 = *(_OWORD *)(__src + 632);
  *(_OWORD *)(__dst + 616) = *(_OWORD *)(__src + 616);
  *(_OWORD *)(__dst + 632) = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return __dst;
}

_QWORD *assignWithCopy for OrderPreview(_QWORD *__dst, char *__src)
{
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  BOOL v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  unint64_t v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  unint64_t v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;

  v7 = *((_QWORD *)__src + 34) >> 1 == 0xFFFFFFFFLL
    && (*((_QWORD *)__src + 38) | *((_QWORD *)__src + 36)) < 2uLL
    && (*((_QWORD *)__src + 44) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)__src + 40) & 0xFFFFFFFFFFFF00FELL) == 0
    && (*((_QWORD *)__src + 48) | *((_QWORD *)__src + 46)) < 2uLL;
  if (__dst[34] >> 1 == 0xFFFFFFFFLL
    && (__dst[38] | __dst[36]) <= 1
    && !(__dst[44] & 0xFFFFFFFFFFFFFEFELL | __dst[40] & 0xFFFFFFFFFFFF00FELL)
    && (__dst[48] | __dst[46]) < 2)
  {
    if (!v7)
    {
      v8 = *((_QWORD *)__src + 3);
      if (v8)
      {
        __dst[3] = v8;
        __dst[4] = *((_QWORD *)__src + 4);
        (**(void (***)(_QWORD *, char *))(v8 - 8))(__dst, __src);
        v9 = *((_QWORD *)__src + 5);
        *((_BYTE *)__dst + 48) = __src[48];
        __dst[5] = v9;
        v10 = *((_QWORD *)__src + 10);
        v11 = *((_QWORD *)__src + 12);
        v12 = *((_QWORD *)__src + 14);
        v13 = *((_QWORD *)__src + 22);
        if (v10 >> 1 != 0xFFFFFFFF
          || (v12 | (unint64_t)v11) > 1
          || *((_QWORD *)__src + 20) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)__src + 16) & 0xFFFFFFFFFFFF00FELL
          || (*((_QWORD *)__src + 24) | (unint64_t)v13) >= 2)
        {
          v73 = *((_QWORD *)__src + 7);
          v74 = *((_QWORD *)__src + 11);
          v187 = *((_QWORD *)__src + 15);
          v205 = *((_QWORD *)__src + 17);
          v211 = *((_QWORD *)__src + 18);
          v223 = *((_QWORD *)__src + 19);
          v229 = *((_QWORD *)__src + 21);
          v235 = *((_QWORD *)__src + 23);
          v241 = *((_QWORD *)__src + 25);
          v247 = *((_QWORD *)__src + 26);
          v253 = *((_QWORD *)__src + 27);
          v259 = *((_QWORD *)__src + 28);
          v265 = *((_QWORD *)__src + 29);
          v271 = *((_QWORD *)__src + 30);
          v199 = *((_QWORD *)__src + 20);
          v75 = *((_QWORD *)__src + 8);
          v217 = *((_QWORD *)__src + 24);
          v181 = *((_QWORD *)__src + 16);
          v76 = *((_QWORD *)__src + 9);
          v193 = *((_QWORD *)__src + 22);
          v77 = *((_QWORD *)__src + 13);
          sub_1AD00FEAC(v73, v75, v76, v10, v74, v11, v77, v12, v187, v181, v205, v211, v223, v199, v229, v13, v235, v217, v241,
            v247,
            v253,
            v259,
            v265,
            v271);
          __dst[7] = v73;
          __dst[8] = v75;
          __dst[9] = v76;
          __dst[10] = v10;
          __dst[11] = v74;
          __dst[12] = v11;
          __dst[13] = v77;
          __dst[14] = v12;
          __dst[15] = v187;
          __dst[16] = v181;
          __dst[17] = v205;
          __dst[18] = v211;
          __dst[19] = v223;
          __dst[20] = v199;
          __dst[21] = v229;
          __dst[22] = v193;
          __dst[23] = v235;
          __dst[24] = v217;
          __dst[25] = v241;
          __dst[26] = v247;
          __dst[27] = v253;
          __dst[28] = v259;
          __dst[29] = v265;
          __dst[30] = v271;
        }
        else
        {
          v14 = *(_OWORD *)(__src + 56);
          v15 = *(_OWORD *)(__src + 72);
          v16 = *(_OWORD *)(__src + 104);
          *(_OWORD *)(__dst + 11) = *(_OWORD *)(__src + 88);
          *(_OWORD *)(__dst + 13) = v16;
          *(_OWORD *)(__dst + 7) = v14;
          *(_OWORD *)(__dst + 9) = v15;
          v17 = *(_OWORD *)(__src + 120);
          v18 = *(_OWORD *)(__src + 136);
          v19 = *(_OWORD *)(__src + 168);
          *(_OWORD *)(__dst + 19) = *(_OWORD *)(__src + 152);
          *(_OWORD *)(__dst + 21) = v19;
          *(_OWORD *)(__dst + 15) = v17;
          *(_OWORD *)(__dst + 17) = v18;
          v20 = *(_OWORD *)(__src + 184);
          v21 = *(_OWORD *)(__src + 200);
          v22 = *(_OWORD *)(__src + 232);
          *(_OWORD *)(__dst + 27) = *(_OWORD *)(__src + 216);
          *(_OWORD *)(__dst + 29) = v22;
          *(_OWORD *)(__dst + 23) = v20;
          *(_OWORD *)(__dst + 25) = v21;
        }
      }
      else
      {
        v47 = *(_OWORD *)__src;
        v48 = *((_OWORD *)__src + 1);
        v49 = *((_OWORD *)__src + 3);
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *((_OWORD *)__dst + 3) = v49;
        *(_OWORD *)__dst = v47;
        *((_OWORD *)__dst + 1) = v48;
        v50 = *((_OWORD *)__src + 4);
        v51 = *((_OWORD *)__src + 5);
        v52 = *((_OWORD *)__src + 7);
        *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
        *((_OWORD *)__dst + 7) = v52;
        *((_OWORD *)__dst + 4) = v50;
        *((_OWORD *)__dst + 5) = v51;
        v53 = *((_OWORD *)__src + 8);
        v54 = *((_OWORD *)__src + 9);
        v55 = *((_OWORD *)__src + 11);
        *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
        *((_OWORD *)__dst + 11) = v55;
        *((_OWORD *)__dst + 8) = v53;
        *((_OWORD *)__dst + 9) = v54;
        v56 = *((_OWORD *)__src + 12);
        v57 = *((_OWORD *)__src + 13);
        v58 = *((_OWORD *)__src + 14);
        __dst[30] = *((_QWORD *)__src + 30);
        *((_OWORD *)__dst + 13) = v57;
        *((_OWORD *)__dst + 14) = v58;
        *((_OWORD *)__dst + 12) = v56;
      }
      v78 = *((_QWORD *)__src + 36);
      v79 = *((_QWORD *)__src + 37);
      v182 = *((_QWORD *)__src + 39);
      v188 = *((_QWORD *)__src + 40);
      v194 = *((_QWORD *)__src + 41);
      v200 = *((_QWORD *)__src + 42);
      v206 = *((_QWORD *)__src + 43);
      v212 = *((_QWORD *)__src + 44);
      v218 = *((_QWORD *)__src + 45);
      v224 = *((_QWORD *)__src + 46);
      v230 = *((_QWORD *)__src + 47);
      v236 = *((_QWORD *)__src + 48);
      v242 = *((_QWORD *)__src + 49);
      v248 = *((_QWORD *)__src + 50);
      v254 = *((_QWORD *)__src + 51);
      v260 = *((_QWORD *)__src + 52);
      v266 = *((_QWORD *)__src + 53);
      v272 = *((_QWORD *)__src + 54);
      v80 = *((_QWORD *)__src + 31);
      v81 = *((_QWORD *)__src + 32);
      v82 = *((_QWORD *)__src + 33);
      v83 = *((_QWORD *)__src + 34);
      v84 = *((_QWORD *)__src + 35);
      v85 = *((_QWORD *)__src + 38);
      sub_1AD00FEAC(v80, v81, v82, v83, v84, v78, v79, v85, v182, v188, v194, v200, v206, v212, v218, v224, v230, v236, v242,
        v248,
        v254,
        v260,
        v266,
        v272);
      __dst[31] = v80;
      __dst[32] = v81;
      __dst[33] = v82;
      __dst[34] = v83;
      __dst[35] = v84;
      __dst[36] = v78;
      __dst[37] = v79;
      __dst[38] = v85;
      __dst[39] = v182;
      __dst[40] = v188;
      __dst[41] = v194;
      __dst[42] = v200;
      __dst[43] = v206;
      __dst[44] = v212;
      __dst[45] = v218;
      __dst[46] = v224;
      __dst[47] = v230;
      __dst[48] = v236;
      __dst[49] = v242;
      __dst[50] = v248;
      __dst[51] = v254;
      __dst[52] = v260;
      __dst[53] = v266;
      __dst[54] = v272;
      *((_BYTE *)__dst + 440) = __src[440];
      goto LABEL_64;
    }
LABEL_26:
    memcpy(__dst, __src, 0x1B9uLL);
    goto LABEL_64;
  }
  if (v7)
  {
    sub_1AD2F735C(__dst);
    goto LABEL_26;
  }
  v23 = *((_QWORD *)__src + 3);
  if (__dst[3])
  {
    if (v23)
    {
      __swift_assign_boxed_opaque_existential_1(__dst, (uint64_t *)__src);
      v24 = *((_QWORD *)__src + 5);
      *((_BYTE *)__dst + 48) = __src[48];
      __dst[5] = v24;
      v25 = __dst + 7;
      v26 = (__int128 *)(__src + 56);
      v27 = *((_QWORD *)__src + 10);
      v28 = *((_QWORD *)__src + 12);
      v29 = *((_QWORD *)__src + 14);
      v30 = *((_QWORD *)__src + 16);
      v31 = *((_QWORD *)__src + 20);
      v32 = *((_QWORD *)__src + 22);
      v33 = *((_QWORD *)__src + 24);
      v37 = v27 >> 1 == 0xFFFFFFFF
         && (v29 | (unint64_t)v28) < 2
         && (v31 & 0xFFFFFFFFFFFFFEFELL | v30 & 0xFFFFFFFFFFFF00FELL) == 0
         && (v33 | v32) < 2;
      if (__dst[10] >> 1 != 0xFFFFFFFFLL
        || (__dst[14] | __dst[12]) > 1
        || __dst[20] & 0xFFFFFFFFFFFFFEFELL | __dst[16] & 0xFFFFFFFFFFFF00FELL
        || (__dst[24] | __dst[22]) >= 2)
      {
        if (v37)
        {
          sub_1AD148B34((uint64_t)(__dst + 7));
          v98 = *(_OWORD *)(__src + 104);
          v100 = *v26;
          v99 = *(_OWORD *)(__src + 72);
          *(_OWORD *)(__dst + 11) = *(_OWORD *)(__src + 88);
          *(_OWORD *)(__dst + 13) = v98;
          *v25 = v100;
          *(_OWORD *)(__dst + 9) = v99;
          v101 = *(_OWORD *)(__src + 168);
          v103 = *(_OWORD *)(__src + 120);
          v102 = *(_OWORD *)(__src + 136);
          *(_OWORD *)(__dst + 19) = *(_OWORD *)(__src + 152);
          *(_OWORD *)(__dst + 21) = v101;
          *(_OWORD *)(__dst + 15) = v103;
          *(_OWORD *)(__dst + 17) = v102;
          v104 = *(_OWORD *)(__src + 232);
          v106 = *(_OWORD *)(__src + 184);
          v105 = *(_OWORD *)(__src + 200);
          *(_OWORD *)(__dst + 27) = *(_OWORD *)(__src + 216);
          *(_OWORD *)(__dst + 29) = v104;
          *(_OWORD *)(__dst + 23) = v106;
          *(_OWORD *)(__dst + 25) = v105;
        }
        else
        {
          v191 = *((_QWORD *)__src + 8);
          v197 = *((_QWORD *)__src + 7);
          v185 = *((_QWORD *)__src + 9);
          v128 = *((_QWORD *)__src + 11);
          v129 = *((_QWORD *)__src + 13);
          v203 = *((_QWORD *)__src + 15);
          v209 = *((_QWORD *)__src + 17);
          v215 = *((_QWORD *)__src + 18);
          v221 = *((_QWORD *)__src + 19);
          v227 = *((_QWORD *)__src + 21);
          v233 = *((_QWORD *)__src + 23);
          v239 = *((_QWORD *)__src + 25);
          v245 = *((_QWORD *)__src + 26);
          v251 = *((_QWORD *)__src + 27);
          v257 = *((_QWORD *)__src + 28);
          v263 = *((_QWORD *)__src + 29);
          v269 = *((_QWORD *)__src + 30);
          v275 = *((_QWORD *)__src + 24);
          sub_1AD00FEAC(v197, v191, v185, v27, v128, v28, v129, v29, v203, v30, v209, v215, v221, v31, v227, v32, v233, v33, v239,
            v245,
            v251,
            v257,
            v263,
            v269);
          v130 = __dst[7];
          v131 = __dst[8];
          __dst[7] = v197;
          __dst[8] = v191;
          v132 = __dst[9];
          v133 = __dst[10];
          __dst[9] = v185;
          __dst[10] = v27;
          v134 = __dst[11];
          v135 = __dst[12];
          __dst[11] = v128;
          __dst[12] = v28;
          v136 = __dst[13];
          v137 = __dst[14];
          __dst[13] = v129;
          __dst[14] = v29;
          v138 = *(_OWORD *)(__dst + 15);
          __dst[15] = v203;
          __dst[16] = v30;
          v139 = *(_OWORD *)(__dst + 17);
          __dst[17] = v209;
          __dst[18] = v215;
          v140 = *(_OWORD *)(__dst + 19);
          __dst[19] = v221;
          __dst[20] = v31;
          v141 = *(_OWORD *)(__dst + 21);
          __dst[21] = v227;
          __dst[22] = v32;
          v142 = *(_OWORD *)(__dst + 23);
          __dst[23] = v233;
          __dst[24] = v275;
          v143 = *(_OWORD *)(__dst + 25);
          __dst[25] = v239;
          __dst[26] = v245;
          v144 = *(_OWORD *)(__dst + 27);
          __dst[27] = v251;
          __dst[28] = v257;
          v145 = __dst[29];
          v146 = __dst[30];
          __dst[29] = v263;
          __dst[30] = v269;
          sub_1AD00E8B0(v130, v131, v132, v133, v134, v135, v136, v137, v138, *((uint64_t *)&v138 + 1), v139, *((uint64_t *)&v139 + 1), v140, *((uint64_t *)&v140 + 1), v141, *((uint64_t *)&v141 + 1), v142, *((unint64_t *)&v142 + 1), v143,
            *((uint64_t *)&v143 + 1),
            v144,
            *((uint64_t *)&v144 + 1),
            v145,
            v146);
        }
      }
      else if (v37)
      {
        v38 = *v26;
        v39 = *(_OWORD *)(__src + 72);
        v40 = *(_OWORD *)(__src + 104);
        *(_OWORD *)(__dst + 11) = *(_OWORD *)(__src + 88);
        *(_OWORD *)(__dst + 13) = v40;
        *v25 = v38;
        *(_OWORD *)(__dst + 9) = v39;
        v41 = *(_OWORD *)(__src + 120);
        v42 = *(_OWORD *)(__src + 136);
        v43 = *(_OWORD *)(__src + 168);
        *(_OWORD *)(__dst + 19) = *(_OWORD *)(__src + 152);
        *(_OWORD *)(__dst + 21) = v43;
        *(_OWORD *)(__dst + 15) = v41;
        *(_OWORD *)(__dst + 17) = v42;
        v44 = *(_OWORD *)(__src + 184);
        v45 = *(_OWORD *)(__src + 200);
        v46 = *(_OWORD *)(__src + 232);
        *(_OWORD *)(__dst + 27) = *(_OWORD *)(__src + 216);
        *(_OWORD *)(__dst + 29) = v46;
        *(_OWORD *)(__dst + 23) = v44;
        *(_OWORD *)(__dst + 25) = v45;
      }
      else
      {
        v124 = *((_QWORD *)__src + 11);
        v125 = *((_QWORD *)__src + 13);
        v184 = *((_QWORD *)__src + 9);
        v190 = *((_QWORD *)__src + 15);
        v202 = *((_QWORD *)__src + 17);
        v208 = *((_QWORD *)__src + 18);
        v220 = *((_QWORD *)__src + 19);
        v226 = *((_QWORD *)__src + 21);
        v232 = *((_QWORD *)__src + 23);
        v238 = *((_QWORD *)__src + 25);
        v244 = *((_QWORD *)__src + 26);
        v250 = *((_QWORD *)__src + 27);
        v256 = *((_QWORD *)__src + 28);
        v262 = *((_QWORD *)__src + 29);
        v268 = *((_QWORD *)__src + 30);
        v214 = *((_QWORD *)__src + 22);
        v126 = *((_QWORD *)__src + 7);
        v196 = *((_QWORD *)__src + 20);
        v127 = *((_QWORD *)__src + 8);
        v274 = *((_QWORD *)__src + 24);
        sub_1AD00FEAC(v126, v127, v184, v27, v124, v28, v125, v29, v190, v30, v202, v208, v220, v196, v226, v214, v232, v33, v238,
          v244,
          v250,
          v256,
          v262,
          v268);
        __dst[7] = v126;
        __dst[8] = v127;
        __dst[9] = v184;
        __dst[10] = v27;
        __dst[11] = v124;
        __dst[12] = v28;
        __dst[13] = v125;
        __dst[14] = v29;
        __dst[15] = v190;
        __dst[16] = v30;
        __dst[17] = v202;
        __dst[18] = v208;
        __dst[19] = v220;
        __dst[20] = v196;
        __dst[21] = v226;
        __dst[22] = v214;
        __dst[23] = v232;
        __dst[24] = v274;
        __dst[25] = v238;
        __dst[26] = v244;
        __dst[27] = v250;
        __dst[28] = v256;
        __dst[29] = v262;
        __dst[30] = v268;
      }
    }
    else
    {
      sub_1AD046A30(__dst);
      v86 = *((_OWORD *)__src + 3);
      v88 = *(_OWORD *)__src;
      v87 = *((_OWORD *)__src + 1);
      *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
      *((_OWORD *)__dst + 3) = v86;
      *(_OWORD *)__dst = v88;
      *((_OWORD *)__dst + 1) = v87;
      v89 = *((_OWORD *)__src + 7);
      v91 = *((_OWORD *)__src + 4);
      v90 = *((_OWORD *)__src + 5);
      *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
      *((_OWORD *)__dst + 7) = v89;
      *((_OWORD *)__dst + 4) = v91;
      *((_OWORD *)__dst + 5) = v90;
      v92 = *((_OWORD *)__src + 11);
      v94 = *((_OWORD *)__src + 8);
      v93 = *((_OWORD *)__src + 9);
      *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
      *((_OWORD *)__dst + 11) = v92;
      *((_OWORD *)__dst + 8) = v94;
      *((_OWORD *)__dst + 9) = v93;
      v96 = *((_OWORD *)__src + 13);
      v95 = *((_OWORD *)__src + 14);
      v97 = *((_OWORD *)__src + 12);
      __dst[30] = *((_QWORD *)__src + 30);
      *((_OWORD *)__dst + 13) = v96;
      *((_OWORD *)__dst + 14) = v95;
      *((_OWORD *)__dst + 12) = v97;
    }
  }
  else if (v23)
  {
    __dst[3] = v23;
    __dst[4] = *((_QWORD *)__src + 4);
    (**(void (***)(_QWORD *, char *))(v23 - 8))(__dst, __src);
    v59 = *((_QWORD *)__src + 5);
    *((_BYTE *)__dst + 48) = __src[48];
    __dst[5] = v59;
    v60 = *((_QWORD *)__src + 10);
    v61 = *((_QWORD *)__src + 12);
    v62 = *((_QWORD *)__src + 14);
    v63 = *((_QWORD *)__src + 22);
    if (v60 >> 1 != 0xFFFFFFFF
      || (v62 | (unint64_t)v61) > 1
      || *((_QWORD *)__src + 20) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)__src + 16) & 0xFFFFFFFFFFFF00FELL
      || (*((_QWORD *)__src + 24) | (unint64_t)v63) >= 2)
    {
      v119 = *((_QWORD *)__src + 7);
      v120 = *((_QWORD *)__src + 11);
      v189 = *((_QWORD *)__src + 15);
      v207 = *((_QWORD *)__src + 17);
      v213 = *((_QWORD *)__src + 18);
      v225 = *((_QWORD *)__src + 19);
      v231 = *((_QWORD *)__src + 21);
      v237 = *((_QWORD *)__src + 23);
      v243 = *((_QWORD *)__src + 25);
      v249 = *((_QWORD *)__src + 26);
      v255 = *((_QWORD *)__src + 27);
      v261 = *((_QWORD *)__src + 28);
      v267 = *((_QWORD *)__src + 29);
      v273 = *((_QWORD *)__src + 30);
      v201 = *((_QWORD *)__src + 20);
      v121 = *((_QWORD *)__src + 8);
      v219 = *((_QWORD *)__src + 24);
      v183 = *((_QWORD *)__src + 16);
      v122 = *((_QWORD *)__src + 9);
      v195 = *((_QWORD *)__src + 22);
      v123 = *((_QWORD *)__src + 13);
      sub_1AD00FEAC(v119, v121, v122, v60, v120, v61, v123, v62, v189, v183, v207, v213, v225, v201, v231, v63, v237, v219, v243,
        v249,
        v255,
        v261,
        v267,
        v273);
      __dst[7] = v119;
      __dst[8] = v121;
      __dst[9] = v122;
      __dst[10] = v60;
      __dst[11] = v120;
      __dst[12] = v61;
      __dst[13] = v123;
      __dst[14] = v62;
      __dst[15] = v189;
      __dst[16] = v183;
      __dst[17] = v207;
      __dst[18] = v213;
      __dst[19] = v225;
      __dst[20] = v201;
      __dst[21] = v231;
      __dst[22] = v195;
      __dst[23] = v237;
      __dst[24] = v219;
      __dst[25] = v243;
      __dst[26] = v249;
      __dst[27] = v255;
      __dst[28] = v261;
      __dst[29] = v267;
      __dst[30] = v273;
    }
    else
    {
      v64 = *(_OWORD *)(__src + 56);
      v65 = *(_OWORD *)(__src + 72);
      v66 = *(_OWORD *)(__src + 104);
      *(_OWORD *)(__dst + 11) = *(_OWORD *)(__src + 88);
      *(_OWORD *)(__dst + 13) = v66;
      *(_OWORD *)(__dst + 7) = v64;
      *(_OWORD *)(__dst + 9) = v65;
      v67 = *(_OWORD *)(__src + 120);
      v68 = *(_OWORD *)(__src + 136);
      v69 = *(_OWORD *)(__src + 168);
      *(_OWORD *)(__dst + 19) = *(_OWORD *)(__src + 152);
      *(_OWORD *)(__dst + 21) = v69;
      *(_OWORD *)(__dst + 15) = v67;
      *(_OWORD *)(__dst + 17) = v68;
      v70 = *(_OWORD *)(__src + 184);
      v71 = *(_OWORD *)(__src + 200);
      v72 = *(_OWORD *)(__src + 232);
      *(_OWORD *)(__dst + 27) = *(_OWORD *)(__src + 216);
      *(_OWORD *)(__dst + 29) = v72;
      *(_OWORD *)(__dst + 23) = v70;
      *(_OWORD *)(__dst + 25) = v71;
    }
  }
  else
  {
    v107 = *(_OWORD *)__src;
    v108 = *((_OWORD *)__src + 1);
    v109 = *((_OWORD *)__src + 3);
    *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
    *((_OWORD *)__dst + 3) = v109;
    *(_OWORD *)__dst = v107;
    *((_OWORD *)__dst + 1) = v108;
    v110 = *((_OWORD *)__src + 4);
    v111 = *((_OWORD *)__src + 5);
    v112 = *((_OWORD *)__src + 7);
    *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
    *((_OWORD *)__dst + 7) = v112;
    *((_OWORD *)__dst + 4) = v110;
    *((_OWORD *)__dst + 5) = v111;
    v113 = *((_OWORD *)__src + 8);
    v114 = *((_OWORD *)__src + 9);
    v115 = *((_OWORD *)__src + 11);
    *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
    *((_OWORD *)__dst + 11) = v115;
    *((_OWORD *)__dst + 8) = v113;
    *((_OWORD *)__dst + 9) = v114;
    v116 = *((_OWORD *)__src + 12);
    v117 = *((_OWORD *)__src + 13);
    v118 = *((_OWORD *)__src + 14);
    __dst[30] = *((_QWORD *)__src + 30);
    *((_OWORD *)__dst + 13) = v117;
    *((_OWORD *)__dst + 14) = v118;
    *((_OWORD *)__dst + 12) = v116;
  }
  v147 = *((_QWORD *)__src + 35);
  v148 = *((_QWORD *)__src + 36);
  v180 = *((_QWORD *)__src + 38);
  v186 = *((_QWORD *)__src + 39);
  v192 = *((_QWORD *)__src + 40);
  v198 = *((_QWORD *)__src + 41);
  v204 = *((_QWORD *)__src + 42);
  v210 = *((_QWORD *)__src + 43);
  v216 = *((_QWORD *)__src + 44);
  v222 = *((_QWORD *)__src + 45);
  v228 = *((_QWORD *)__src + 46);
  v234 = *((_QWORD *)__src + 47);
  v240 = *((_QWORD *)__src + 48);
  v246 = *((_QWORD *)__src + 49);
  v252 = *((_QWORD *)__src + 50);
  v258 = *((_QWORD *)__src + 51);
  v264 = *((_QWORD *)__src + 52);
  v270 = *((_QWORD *)__src + 53);
  v276 = *((_QWORD *)__src + 54);
  v149 = *((_QWORD *)__src + 31);
  v150 = *((_QWORD *)__src + 32);
  v151 = *((_QWORD *)__src + 33);
  v152 = *((_QWORD *)__src + 34);
  v153 = *((_QWORD *)__src + 37);
  sub_1AD00FEAC(v149, v150, v151, v152, v147, v148, v153, v180, v186, v192, v198, v204, v210, v216, v222, v228, v234, v240, v246,
    v252,
    v258,
    v264,
    v270,
    v276);
  v154 = __dst[31];
  v155 = __dst[32];
  v156 = __dst[33];
  v157 = __dst[34];
  __dst[31] = v149;
  __dst[32] = v150;
  v158 = __dst[35];
  v159 = __dst[36];
  __dst[33] = v151;
  __dst[34] = v152;
  v160 = __dst[37];
  v161 = __dst[38];
  __dst[35] = v147;
  __dst[36] = v148;
  v162 = *(_OWORD *)(__dst + 39);
  v163 = *(_OWORD *)(__dst + 41);
  v164 = *(_OWORD *)(__dst + 43);
  v165 = *(_OWORD *)(__dst + 45);
  v166 = *(_OWORD *)(__dst + 47);
  v167 = *(_OWORD *)(__dst + 49);
  v168 = *(_OWORD *)(__dst + 51);
  __dst[37] = v153;
  __dst[38] = v180;
  __dst[39] = v186;
  __dst[40] = v192;
  v169 = __dst[53];
  v170 = __dst[54];
  __dst[41] = v198;
  __dst[42] = v204;
  __dst[43] = v210;
  __dst[44] = v216;
  __dst[45] = v222;
  __dst[46] = v228;
  __dst[47] = v234;
  __dst[48] = v240;
  __dst[49] = v246;
  __dst[50] = v252;
  __dst[51] = v258;
  __dst[52] = v264;
  __dst[53] = v270;
  __dst[54] = v276;
  sub_1AD00E8B0(v154, v155, v156, v157, v158, v159, v160, v161, v162, *((uint64_t *)&v162 + 1), v163, *((uint64_t *)&v163 + 1), v164, *((uint64_t *)&v164 + 1), v165, *((uint64_t *)&v165 + 1), v166, *((unint64_t *)&v166 + 1), v167,
    *((uint64_t *)&v167 + 1),
    v168,
    *((uint64_t *)&v168 + 1),
    v169,
    v170);
  *((_BYTE *)__dst + 440) = __src[440];
LABEL_64:
  v171 = *((_OWORD *)__src + 28);
  v172 = *((_OWORD *)__src + 29);
  *((_BYTE *)__dst + 480) = __src[480];
  *((_OWORD *)__dst + 28) = v171;
  *((_OWORD *)__dst + 29) = v172;
  __dst[61] = *((_QWORD *)__src + 61);
  __dst[62] = *((_QWORD *)__src + 62);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v173 = *(_OWORD *)(__src + 504);
  v174 = *(_OWORD *)(__src + 520);
  *((_BYTE *)__dst + 536) = __src[536];
  *(_OWORD *)(__dst + 63) = v173;
  *(_OWORD *)(__dst + 65) = v174;
  __dst[68] = *((_QWORD *)__src + 68);
  __dst[69] = *((_QWORD *)__src + 69);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v175 = *((_OWORD *)__src + 35);
  v176 = *((_OWORD *)__src + 36);
  *((_BYTE *)__dst + 592) = __src[592];
  *((_OWORD *)__dst + 35) = v175;
  *((_OWORD *)__dst + 36) = v176;
  __dst[75] = *((_QWORD *)__src + 75);
  __dst[76] = *((_QWORD *)__src + 76);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v177 = *(_OWORD *)(__src + 616);
  v178 = *(_OWORD *)(__src + 632);
  *((_BYTE *)__dst + 648) = __src[648];
  *(_OWORD *)(__dst + 77) = v177;
  *(_OWORD *)(__dst + 79) = v178;
  return __dst;
}

void *__swift_memcpy649_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x289uLL);
}

_QWORD *assignWithTake for OrderPreview(_QWORD *__dst, _OWORD *__src)
{
  _OWORD *v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  unint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  if (__dst[34] >> 1 == 0xFFFFFFFFLL
    && (__dst[38] | __dst[36]) <= 1uLL
    && (__dst[44] & 0xFFFFFFFFFFFFFEFELL | __dst[40] & 0xFFFFFFFFFFFF00FELL) == 0
    && (__dst[48] | __dst[46]) < 2uLL)
  {
    goto LABEL_17;
  }
  if (*((_QWORD *)__src + 34) >> 1 != 0xFFFFFFFFLL
    || (*((_QWORD *)__src + 38) | *((_QWORD *)__src + 36)) > 1
    || __src[22] & 0xFFFFFFFFFFFFFEFELL | __src[20] & 0xFFFFFFFFFFFF00FELL
    || (*((_QWORD *)__src + 48) | *((_QWORD *)__src + 46)) >= 2)
  {
    v7 = __dst + 33;
    v8 = (_OWORD *)((char *)__src + 264);
    if (__dst[3])
    {
      if (*((_QWORD *)__src + 3))
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        v9 = __src[1];
        *(_OWORD *)__dst = *__src;
        *((_OWORD *)__dst + 1) = v9;
        v10 = *((_QWORD *)__src + 5);
        __dst[4] = *((_QWORD *)__src + 4);
        __dst[5] = v10;
        *((_BYTE *)__dst + 48) = *((_BYTE *)__src + 48);
        v11 = __dst[10];
        v12 = __dst[12];
        v13 = __dst[14];
        v14 = __dst[16];
        v15 = __dst[20];
        v16 = __dst[22];
        v17 = __dst[24];
        v18 = *((_QWORD *)__src + 10);
        v19 = *((_QWORD *)__src + 12);
        v20 = *((_QWORD *)__src + 14);
        v21 = *((_QWORD *)__src + 16);
        v22 = *((_QWORD *)__src + 20);
        v23 = *((_QWORD *)__src + 22);
        v24 = *((_QWORD *)__src + 24);
        if (v11 >> 1 != 0xFFFFFFFF
          || (v13 | (unint64_t)v12) > 1
          || v15 & 0xFFFFFFFFFFFFFEFELL | v14 & 0xFFFFFFFFFFFF00FELL
          || (v17 | v16) >= 2)
        {
          if (v18 >> 1 != 0xFFFFFFFF
            || (v20 | v19) > 1
            || v22 & 0xFFFFFFFFFFFFFEFELL | v21 & 0xFFFFFFFFFFFF00FELL
            || (v24 | v23) >= 2)
          {
            v66 = *((_QWORD *)__src + 9);
            v67 = *((_QWORD *)__src + 11);
            v68 = *((_QWORD *)__src + 13);
            v69 = *((_QWORD *)__src + 15);
            v70 = *((_QWORD *)__src + 19);
            v71 = *((_QWORD *)__src + 21);
            v72 = *((_QWORD *)__src + 23);
            v83 = __dst[8];
            v84 = __dst[7];
            v82 = __dst[9];
            v85 = __dst[11];
            v86 = __dst[13];
            v73 = *(_OWORD *)(__dst + 17);
            v80 = __dst[19];
            v81 = __dst[15];
            v74 = __dst[21];
            v75 = __dst[23];
            v76 = *(_OWORD *)(__dst + 25);
            v77 = *(_OWORD *)(__dst + 27);
            v79 = __dst[29];
            v78 = __dst[30];
            *(_OWORD *)(__dst + 7) = *(_OWORD *)((char *)__src + 56);
            __dst[9] = v66;
            __dst[10] = v18;
            __dst[11] = v67;
            __dst[12] = v19;
            __dst[13] = v68;
            __dst[14] = v20;
            __dst[15] = v69;
            __dst[16] = v21;
            *(_OWORD *)(__dst + 17) = *(_OWORD *)((char *)__src + 136);
            __dst[19] = v70;
            __dst[20] = v22;
            __dst[21] = v71;
            __dst[22] = v23;
            __dst[23] = v72;
            __dst[24] = v24;
            *(_OWORD *)(__dst + 25) = *(_OWORD *)((char *)__src + 200);
            *(_OWORD *)(__dst + 27) = *(_OWORD *)((char *)__src + 216);
            *(_OWORD *)(__dst + 29) = *(_OWORD *)((char *)__src + 232);
            sub_1AD00E8B0(v84, v83, v82, v11, v85, v12, v86, v13, v81, v14, v73, *((uint64_t *)&v73 + 1), v80, v15, v74, v16, v75, v17, v76,
              *((uint64_t *)&v76 + 1),
              v77,
              *((uint64_t *)&v77 + 1),
              v79,
              v78);
            goto LABEL_32;
          }
          sub_1AD148B34((uint64_t)(__dst + 7));
        }
        v25 = *(_OWORD *)((char *)__src + 200);
        *(_OWORD *)(__dst + 23) = *(_OWORD *)((char *)__src + 184);
        *(_OWORD *)(__dst + 25) = v25;
        v26 = *(_OWORD *)((char *)__src + 232);
        *(_OWORD *)(__dst + 27) = *(_OWORD *)((char *)__src + 216);
        *(_OWORD *)(__dst + 29) = v26;
        v27 = *(_OWORD *)((char *)__src + 136);
        *(_OWORD *)(__dst + 15) = *(_OWORD *)((char *)__src + 120);
        *(_OWORD *)(__dst + 17) = v27;
        v28 = *(_OWORD *)((char *)__src + 168);
        *(_OWORD *)(__dst + 19) = *(_OWORD *)((char *)__src + 152);
        *(_OWORD *)(__dst + 21) = v28;
        v29 = *(_OWORD *)((char *)__src + 72);
        *(_OWORD *)(__dst + 7) = *(_OWORD *)((char *)__src + 56);
        *(_OWORD *)(__dst + 9) = v29;
        v30 = *(_OWORD *)((char *)__src + 104);
        *(_OWORD *)(__dst + 11) = *(_OWORD *)((char *)__src + 88);
        *(_OWORD *)(__dst + 13) = v30;
LABEL_32:
        v38 = __dst[31];
        v39 = __dst[32];
        v40 = __dst[33];
        v41 = __dst[34];
        v42 = __dst[35];
        v43 = __dst[36];
        v44 = __dst[37];
        v45 = __dst[38];
        v46 = *(_OWORD *)(__dst + 39);
        v47 = *(_OWORD *)(__dst + 41);
        v48 = *(_OWORD *)(__dst + 43);
        v49 = *(_OWORD *)(__dst + 45);
        v50 = *(_OWORD *)(__dst + 47);
        v51 = *(_OWORD *)(__dst + 49);
        v52 = *(_OWORD *)(__dst + 51);
        v53 = __dst[53];
        v54 = __dst[54];
        *(_OWORD *)(__dst + 31) = *(_OWORD *)((char *)__src + 248);
        v55 = *(_OWORD *)((char *)__src + 280);
        *v7 = *v8;
        *(_OWORD *)(__dst + 35) = v55;
        v56 = *(_OWORD *)((char *)__src + 312);
        *(_OWORD *)(__dst + 37) = *(_OWORD *)((char *)__src + 296);
        *(_OWORD *)(__dst + 39) = v56;
        v57 = *(_OWORD *)((char *)__src + 344);
        *(_OWORD *)(__dst + 41) = *(_OWORD *)((char *)__src + 328);
        *(_OWORD *)(__dst + 43) = v57;
        v58 = *(_OWORD *)((char *)__src + 376);
        *(_OWORD *)(__dst + 45) = *(_OWORD *)((char *)__src + 360);
        *(_OWORD *)(__dst + 47) = v58;
        v59 = *(_OWORD *)((char *)__src + 408);
        *(_OWORD *)(__dst + 49) = *(_OWORD *)((char *)__src + 392);
        *(_OWORD *)(__dst + 51) = v59;
        *(_OWORD *)(__dst + 53) = *(_OWORD *)((char *)__src + 424);
        sub_1AD00E8B0(v38, v39, v40, v41, v42, v43, v44, v45, v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48, *((uint64_t *)&v48 + 1), v49, *((uint64_t *)&v49 + 1), v50, *((unint64_t *)&v50 + 1), v51,
          *((uint64_t *)&v51 + 1),
          v52,
          *((uint64_t *)&v52 + 1),
          v53,
          v54);
        *((_BYTE *)__dst + 440) = *((_BYTE *)__src + 440);
        goto LABEL_33;
      }
      sub_1AD046A30(__dst);
    }
    v31 = __src[13];
    *((_OWORD *)__dst + 12) = __src[12];
    *((_OWORD *)__dst + 13) = v31;
    *((_OWORD *)__dst + 14) = __src[14];
    __dst[30] = *((_QWORD *)__src + 30);
    v32 = __src[9];
    *((_OWORD *)__dst + 8) = __src[8];
    *((_OWORD *)__dst + 9) = v32;
    v33 = __src[11];
    *((_OWORD *)__dst + 10) = __src[10];
    *((_OWORD *)__dst + 11) = v33;
    v34 = __src[5];
    *((_OWORD *)__dst + 4) = __src[4];
    *((_OWORD *)__dst + 5) = v34;
    v35 = __src[7];
    *((_OWORD *)__dst + 6) = __src[6];
    *((_OWORD *)__dst + 7) = v35;
    v36 = __src[1];
    *(_OWORD *)__dst = *__src;
    *((_OWORD *)__dst + 1) = v36;
    v37 = __src[3];
    *((_OWORD *)__dst + 2) = __src[2];
    *((_OWORD *)__dst + 3) = v37;
    goto LABEL_32;
  }
  sub_1AD2F735C(__dst);
LABEL_17:
  memcpy(__dst, __src, 0x1B9uLL);
LABEL_33:
  v60 = __src[29];
  *((_OWORD *)__dst + 28) = __src[28];
  *((_OWORD *)__dst + 29) = v60;
  *((_BYTE *)__dst + 480) = *((_BYTE *)__src + 480);
  v61 = *((_QWORD *)__src + 62);
  __dst[61] = *((_QWORD *)__src + 61);
  __dst[62] = v61;
  swift_bridgeObjectRelease();
  v62 = *(_OWORD *)((char *)__src + 520);
  *(_OWORD *)(__dst + 63) = *(_OWORD *)((char *)__src + 504);
  *(_OWORD *)(__dst + 65) = v62;
  *((_BYTE *)__dst + 536) = *((_BYTE *)__src + 536);
  __dst[68] = *((_QWORD *)__src + 68);
  __dst[69] = *((_QWORD *)__src + 69);
  swift_bridgeObjectRelease();
  v63 = __src[36];
  *((_OWORD *)__dst + 35) = __src[35];
  *((_OWORD *)__dst + 36) = v63;
  *((_BYTE *)__dst + 592) = *((_BYTE *)__src + 592);
  __dst[75] = *((_QWORD *)__src + 75);
  __dst[76] = *((_QWORD *)__src + 76);
  swift_bridgeObjectRelease();
  v64 = *(_OWORD *)((char *)__src + 632);
  *(_OWORD *)(__dst + 77) = *(_OWORD *)((char *)__src + 616);
  *(_OWORD *)(__dst + 79) = v64;
  *((_BYTE *)__dst + 648) = *((_BYTE *)__src + 648);
  return __dst;
}

uint64_t getEnumTagSinglePayload for OrderPreview(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 649))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 496);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OrderPreview(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 648) = 0;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 649) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 496) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 649) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderPreview()
{
  return &type metadata for OrderPreview;
}

uint64_t initializeWithCopy for OrderPreview.OrderText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OrderPreview.OrderText(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

uint64_t assignWithTake for OrderPreview.OrderText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderPreview.OrderText(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OrderPreview.OrderText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderPreview.OrderText()
{
  return &type metadata for OrderPreview.OrderText;
}

uint64_t destroy for MessagesAppBalloon.AppIconImage(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  if (a1[3])
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v2 = a1[10];
    v3 = a1[12];
    v4 = a1[14];
    v5 = a1[16];
    v6 = a1[20];
    v7 = a1[22];
    v8 = a1[24];
    if (v2 >> 1 != 0xFFFFFFFF
      || (v4 | (unint64_t)v3) > 1
      || (v6 & 0xFFFFFFFFFFFFFEFELL | v5 & 0xFFFFFFFFFFFF00FELL) != 0
      || (v8 | v7) >= 2)
    {
      sub_1AD00E8B0(a1[7], a1[8], a1[9], v2, a1[11], v3, a1[13], v4, a1[15], v5, a1[17], a1[18], a1[19], v6, a1[21], v7, a1[23], v8, a1[25],
        a1[26],
        a1[27],
        a1[28],
        a1[29],
        a1[30]);
    }
  }
  v12 = a1[31];
  v13 = a1[32];
  v14 = a1 + 31;
  return sub_1AD00E8B0(v12, v13, v14[2], v14[3], v14[4], v14[5], v14[6], v14[7], v14[8], v14[9], v14[10], v14[11], v14[12], v14[13], v14[14], v14[15], v14[16], v14[17], v14[18],
           v14[19],
           v14[20],
           v14[21],
           v14[22],
           v14[23]);
}

uint64_t initializeWithCopy for OrderPreview.OrderImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v6 = *(_QWORD *)(a2 + 80);
    v7 = *(_QWORD *)(a2 + 96);
    v8 = *(_QWORD *)(a2 + 112);
    v9 = *(_QWORD *)(a2 + 192);
    if (v6 >> 1 != 0xFFFFFFFF
      || (v8 | (unint64_t)v7) > 1
      || *(_QWORD *)(a2 + 160) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a2 + 128) & 0xFFFFFFFFFFFF00FELL
      || (v9 | *(_QWORD *)(a2 + 176)) >= 2)
    {
      v23 = *(_QWORD *)(a2 + 64);
      v24 = *(_QWORD *)(a2 + 88);
      v39 = *(_QWORD *)(a2 + 120);
      v43 = *(_QWORD *)(a2 + 136);
      v49 = *(_QWORD *)(a2 + 144);
      v51 = *(_QWORD *)(a2 + 152);
      v53 = *(_QWORD *)(a2 + 168);
      v55 = *(_QWORD *)(a2 + 184);
      v57 = *(_QWORD *)(a2 + 200);
      v59 = *(_QWORD *)(a2 + 208);
      v61 = *(_QWORD *)(a2 + 216);
      v63 = *(_QWORD *)(a2 + 224);
      v65 = *(_QWORD *)(a2 + 232);
      v67 = *(_QWORD *)(a2 + 240);
      v45 = *(_QWORD *)(a2 + 160);
      v47 = *(_QWORD *)(a2 + 176);
      v25 = *(_QWORD *)(a2 + 56);
      v37 = *(_QWORD *)(a2 + 128);
      v26 = *(_QWORD *)(a2 + 72);
      v41 = *(_QWORD *)(a2 + 192);
      v27 = *(_QWORD *)(a2 + 104);
      sub_1AD00FEAC(v25, v23, v26, v6, v24, v7, v27, v8, v39, v37, v43, v49, v51, v45, v53, v47, v55, v9, v57,
        v59,
        v61,
        v63,
        v65,
        v67);
      *(_QWORD *)(a1 + 56) = v25;
      *(_QWORD *)(a1 + 64) = v23;
      *(_QWORD *)(a1 + 72) = v26;
      *(_QWORD *)(a1 + 80) = v6;
      *(_QWORD *)(a1 + 88) = v24;
      *(_QWORD *)(a1 + 96) = v7;
      *(_QWORD *)(a1 + 104) = v27;
      *(_QWORD *)(a1 + 112) = v8;
      *(_QWORD *)(a1 + 120) = v39;
      *(_QWORD *)(a1 + 128) = v37;
      *(_QWORD *)(a1 + 136) = v43;
      *(_QWORD *)(a1 + 144) = v49;
      *(_QWORD *)(a1 + 152) = v51;
      *(_QWORD *)(a1 + 160) = v45;
      *(_QWORD *)(a1 + 168) = v53;
      *(_QWORD *)(a1 + 176) = v47;
      *(_QWORD *)(a1 + 184) = v55;
      *(_QWORD *)(a1 + 192) = v41;
      *(_QWORD *)(a1 + 200) = v57;
      *(_QWORD *)(a1 + 208) = v59;
      *(_QWORD *)(a1 + 216) = v61;
      *(_QWORD *)(a1 + 224) = v63;
      *(_QWORD *)(a1 + 232) = v65;
      *(_QWORD *)(a1 + 240) = v67;
    }
    else
    {
      v10 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v10;
      v11 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v11;
      v12 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v12;
      v13 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v13;
      v14 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v14;
      v15 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v15;
    }
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v16;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v17 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v17;
    v18 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v18;
    v19 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v19;
    v20 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v20;
    v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v21;
    v22 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v22;
  }
  v28 = *(_QWORD *)(a2 + 288);
  v29 = *(_QWORD *)(a2 + 296);
  v38 = *(_QWORD *)(a2 + 312);
  v40 = *(_QWORD *)(a2 + 320);
  v42 = *(_QWORD *)(a2 + 328);
  v44 = *(_QWORD *)(a2 + 336);
  v46 = *(_QWORD *)(a2 + 344);
  v48 = *(_QWORD *)(a2 + 352);
  v50 = *(_QWORD *)(a2 + 360);
  v52 = *(_QWORD *)(a2 + 368);
  v54 = *(_QWORD *)(a2 + 376);
  v56 = *(_QWORD *)(a2 + 384);
  v58 = *(_QWORD *)(a2 + 392);
  v60 = *(_QWORD *)(a2 + 400);
  v62 = *(_QWORD *)(a2 + 408);
  v64 = *(_QWORD *)(a2 + 416);
  v66 = *(_QWORD *)(a2 + 424);
  v68 = *(_QWORD *)(a2 + 432);
  v30 = *(_QWORD *)(a2 + 248);
  v31 = *(_QWORD *)(a2 + 256);
  v32 = *(_QWORD *)(a2 + 264);
  v33 = *(_QWORD *)(a2 + 272);
  v34 = *(_QWORD *)(a2 + 280);
  v35 = *(_QWORD *)(a2 + 304);
  sub_1AD00FEAC(v30, v31, v32, v33, v34, v28, v29, v35, v38, v40, v42, v44, v46, v48, v50, v52, v54, v56, v58,
    v60,
    v62,
    v64,
    v66,
    v68);
  *(_QWORD *)(a1 + 248) = v30;
  *(_QWORD *)(a1 + 256) = v31;
  *(_QWORD *)(a1 + 264) = v32;
  *(_QWORD *)(a1 + 272) = v33;
  *(_QWORD *)(a1 + 280) = v34;
  *(_QWORD *)(a1 + 288) = v28;
  *(_QWORD *)(a1 + 296) = v29;
  *(_QWORD *)(a1 + 304) = v35;
  *(_QWORD *)(a1 + 312) = v38;
  *(_QWORD *)(a1 + 320) = v40;
  *(_QWORD *)(a1 + 328) = v42;
  *(_QWORD *)(a1 + 336) = v44;
  *(_QWORD *)(a1 + 344) = v46;
  *(_QWORD *)(a1 + 352) = v48;
  *(_QWORD *)(a1 + 360) = v50;
  *(_QWORD *)(a1 + 368) = v52;
  *(_QWORD *)(a1 + 376) = v54;
  *(_QWORD *)(a1 + 384) = v56;
  *(_QWORD *)(a1 + 392) = v58;
  *(_QWORD *)(a1 + 400) = v60;
  *(_QWORD *)(a1 + 408) = v62;
  *(_QWORD *)(a1 + 416) = v64;
  *(_QWORD *)(a1 + 424) = v66;
  *(_QWORD *)(a1 + 432) = v68;
  *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
  return a1;
}

uint64_t assignWithCopy for OrderPreview.OrderImage(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (!v4)
    {
      v63 = *a2;
      v64 = a2[1];
      v65 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v65;
      *(_OWORD *)a1 = v63;
      *(_OWORD *)(a1 + 16) = v64;
      v66 = a2[4];
      v67 = a2[5];
      v68 = a2[7];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v68;
      *(_OWORD *)(a1 + 64) = v66;
      *(_OWORD *)(a1 + 80) = v67;
      v69 = a2[8];
      v70 = a2[9];
      v71 = a2[11];
      *(_OWORD *)(a1 + 160) = a2[10];
      *(_OWORD *)(a1 + 176) = v71;
      *(_OWORD *)(a1 + 128) = v69;
      *(_OWORD *)(a1 + 144) = v70;
      v72 = a2[12];
      v73 = a2[13];
      v74 = a2[14];
      *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
      *(_OWORD *)(a1 + 208) = v73;
      *(_OWORD *)(a1 + 224) = v74;
      *(_OWORD *)(a1 + 192) = v72;
      goto LABEL_35;
    }
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
    v28 = *((_QWORD *)a2 + 5);
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_QWORD *)(a1 + 40) = v28;
    v29 = *((_QWORD *)a2 + 10);
    v30 = *((_QWORD *)a2 + 12);
    v31 = *((_QWORD *)a2 + 14);
    v32 = *((_QWORD *)a2 + 22);
    if (v29 >> 1 == 0xFFFFFFFF
      && (v31 | (unint64_t)v30) <= 1
      && !(a2[10] & 0xFFFFFFFFFFFFFEFELL | (_QWORD)a2[8] & 0xFFFFFFFFFFFF00FELL)
      && (*((_QWORD *)a2 + 24) | (unint64_t)v32) < 2)
    {
      v33 = *(__int128 *)((char *)a2 + 56);
      v34 = *(__int128 *)((char *)a2 + 72);
      v35 = *(__int128 *)((char *)a2 + 104);
      *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
      *(_OWORD *)(a1 + 104) = v35;
      *(_OWORD *)(a1 + 56) = v33;
      *(_OWORD *)(a1 + 72) = v34;
      v36 = *(__int128 *)((char *)a2 + 120);
      v37 = *(__int128 *)((char *)a2 + 136);
      v38 = *(__int128 *)((char *)a2 + 168);
      *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
      *(_OWORD *)(a1 + 168) = v38;
      *(_OWORD *)(a1 + 120) = v36;
      *(_OWORD *)(a1 + 136) = v37;
      v39 = *(__int128 *)((char *)a2 + 184);
      v40 = *(__int128 *)((char *)a2 + 200);
      v41 = *(__int128 *)((char *)a2 + 232);
      *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
      *(_OWORD *)(a1 + 232) = v41;
      *(_OWORD *)(a1 + 184) = v39;
      *(_OWORD *)(a1 + 200) = v40;
      goto LABEL_35;
    }
    v75 = *((_QWORD *)a2 + 7);
    v76 = *((_QWORD *)a2 + 11);
    v132 = *((_QWORD *)a2 + 15);
    v144 = *((_QWORD *)a2 + 17);
    v148 = *((_QWORD *)a2 + 18);
    v156 = *((_QWORD *)a2 + 19);
    v160 = *((_QWORD *)a2 + 21);
    v164 = *((_QWORD *)a2 + 23);
    v168 = *((_QWORD *)a2 + 25);
    v172 = *((_QWORD *)a2 + 26);
    v176 = *((_QWORD *)a2 + 27);
    v180 = *((_QWORD *)a2 + 28);
    v184 = *((_QWORD *)a2 + 29);
    v188 = *((_QWORD *)a2 + 30);
    v140 = *((_QWORD *)a2 + 20);
    v77 = *((_QWORD *)a2 + 8);
    v152 = *((_QWORD *)a2 + 24);
    v128 = *((_QWORD *)a2 + 16);
    v78 = *((_QWORD *)a2 + 9);
    v136 = *((_QWORD *)a2 + 22);
    v79 = *((_QWORD *)a2 + 13);
    sub_1AD00FEAC(v75, v77, v78, v29, v76, v30, v79, v31, v132, v128, v144, v148, v156, v140, v160, v32, v164, v152, v168,
      v172,
      v176,
      v180,
      v184,
      v188);
    *(_QWORD *)(a1 + 56) = v75;
    *(_QWORD *)(a1 + 64) = v77;
    *(_QWORD *)(a1 + 72) = v78;
    *(_QWORD *)(a1 + 80) = v29;
    *(_QWORD *)(a1 + 88) = v76;
    *(_QWORD *)(a1 + 96) = v30;
    *(_QWORD *)(a1 + 104) = v79;
    *(_QWORD *)(a1 + 112) = v31;
    *(_QWORD *)(a1 + 120) = v132;
    *(_QWORD *)(a1 + 128) = v128;
    *(_QWORD *)(a1 + 136) = v144;
    *(_QWORD *)(a1 + 144) = v148;
    *(_QWORD *)(a1 + 152) = v156;
    *(_QWORD *)(a1 + 160) = v140;
    *(_QWORD *)(a1 + 168) = v160;
    *(_QWORD *)(a1 + 176) = v136;
    *(_QWORD *)(a1 + 184) = v164;
    *(_QWORD *)(a1 + 192) = v152;
    *(_QWORD *)(a1 + 200) = v168;
    *(_QWORD *)(a1 + 208) = v172;
    *(_QWORD *)(a1 + 216) = v176;
    *(_QWORD *)(a1 + 224) = v180;
    *(_QWORD *)(a1 + 232) = v184;
    v80 = v188;
    goto LABEL_34;
  }
  if (!v4)
  {
    sub_1AD046A30((_QWORD *)a1);
    v42 = a2[3];
    v44 = *a2;
    v43 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v42;
    *(_OWORD *)a1 = v44;
    *(_OWORD *)(a1 + 16) = v43;
    v45 = a2[7];
    v47 = a2[4];
    v46 = a2[5];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v45;
    *(_OWORD *)(a1 + 64) = v47;
    *(_OWORD *)(a1 + 80) = v46;
    v48 = a2[11];
    v50 = a2[8];
    v49 = a2[9];
    *(_OWORD *)(a1 + 160) = a2[10];
    *(_OWORD *)(a1 + 176) = v48;
    *(_OWORD *)(a1 + 128) = v50;
    *(_OWORD *)(a1 + 144) = v49;
    v52 = a2[13];
    v51 = a2[14];
    v53 = a2[12];
    *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
    *(_OWORD *)(a1 + 208) = v52;
    *(_OWORD *)(a1 + 224) = v51;
    *(_OWORD *)(a1 + 192) = v53;
    goto LABEL_35;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v5 = *((_QWORD *)a2 + 5);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = (_OWORD *)(a1 + 56);
  v7 = (__int128 *)((char *)a2 + 56);
  v8 = *((_QWORD *)a2 + 10);
  v9 = *((_QWORD *)a2 + 12);
  v10 = *((_QWORD *)a2 + 14);
  v11 = *((_QWORD *)a2 + 16);
  v12 = *((_QWORD *)a2 + 20);
  v13 = *((_QWORD *)a2 + 22);
  v14 = *((_QWORD *)a2 + 24);
  v18 = v8 >> 1 == 0xFFFFFFFF
     && (v10 | (unint64_t)v9) < 2
     && (v12 & 0xFFFFFFFFFFFFFEFELL | v11 & 0xFFFFFFFFFFFF00FELL) == 0
     && (v14 | v13) < 2;
  if (*(_QWORD *)(a1 + 80) >> 1 == 0xFFFFFFFFLL
    && (*(_QWORD *)(a1 + 112) | *(_QWORD *)(a1 + 96)) <= 1
    && !(*(_QWORD *)(a1 + 160) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a1 + 128) & 0xFFFFFFFFFFFF00FELL)
    && (*(_QWORD *)(a1 + 192) | *(_QWORD *)(a1 + 176)) < 2)
  {
    if (v18)
    {
      v19 = *v7;
      v20 = *(__int128 *)((char *)a2 + 72);
      v21 = *(__int128 *)((char *)a2 + 104);
      *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
      *(_OWORD *)(a1 + 104) = v21;
      *v6 = v19;
      *(_OWORD *)(a1 + 72) = v20;
      v22 = *(__int128 *)((char *)a2 + 120);
      v23 = *(__int128 *)((char *)a2 + 136);
      v24 = *(__int128 *)((char *)a2 + 168);
      *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
      *(_OWORD *)(a1 + 168) = v24;
      *(_OWORD *)(a1 + 120) = v22;
      *(_OWORD *)(a1 + 136) = v23;
      v25 = *(__int128 *)((char *)a2 + 184);
      v26 = *(__int128 *)((char *)a2 + 200);
      v27 = *(__int128 *)((char *)a2 + 232);
      *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
      *(_OWORD *)(a1 + 232) = v27;
      *(_OWORD *)(a1 + 184) = v25;
      *(_OWORD *)(a1 + 200) = v26;
      goto LABEL_35;
    }
    v134 = *((_QWORD *)a2 + 8);
    v138 = *((_QWORD *)a2 + 7);
    v130 = *((_QWORD *)a2 + 9);
    v100 = *((_QWORD *)a2 + 11);
    v101 = *((_QWORD *)a2 + 13);
    v142 = *((_QWORD *)a2 + 15);
    v146 = *((_QWORD *)a2 + 17);
    v150 = *((_QWORD *)a2 + 18);
    v154 = *((_QWORD *)a2 + 19);
    v158 = *((_QWORD *)a2 + 21);
    v162 = *((_QWORD *)a2 + 23);
    v166 = *((_QWORD *)a2 + 25);
    v170 = *((_QWORD *)a2 + 26);
    v174 = *((_QWORD *)a2 + 27);
    v178 = *((_QWORD *)a2 + 28);
    v182 = *((_QWORD *)a2 + 29);
    v186 = *((_QWORD *)a2 + 30);
    v190 = *((_QWORD *)a2 + 24);
    sub_1AD00FEAC(v138, v134, v130, v8, v100, v9, v101, v10, v142, v11, v146, v150, v154, v12, v158, v13, v162, v14, v166,
      v170,
      v174,
      v178,
      v182,
      v186);
    *(_QWORD *)(a1 + 56) = v138;
    *(_QWORD *)(a1 + 64) = v134;
    *(_QWORD *)(a1 + 72) = v130;
    *(_QWORD *)(a1 + 80) = v8;
    *(_QWORD *)(a1 + 88) = v100;
    *(_QWORD *)(a1 + 96) = v9;
    *(_QWORD *)(a1 + 104) = v101;
    *(_QWORD *)(a1 + 112) = v10;
    *(_QWORD *)(a1 + 120) = v142;
    *(_QWORD *)(a1 + 128) = v11;
    *(_QWORD *)(a1 + 136) = v146;
    *(_QWORD *)(a1 + 144) = v150;
    *(_QWORD *)(a1 + 152) = v154;
    *(_QWORD *)(a1 + 160) = v12;
    *(_QWORD *)(a1 + 168) = v158;
    *(_QWORD *)(a1 + 176) = v13;
    *(_QWORD *)(a1 + 184) = v162;
    *(_QWORD *)(a1 + 192) = v190;
    *(_QWORD *)(a1 + 200) = v166;
    *(_QWORD *)(a1 + 208) = v170;
    *(_QWORD *)(a1 + 216) = v174;
    *(_QWORD *)(a1 + 224) = v178;
    *(_QWORD *)(a1 + 232) = v182;
    v80 = v186;
LABEL_34:
    *(_QWORD *)(a1 + 240) = v80;
    goto LABEL_35;
  }
  if (v18)
  {
    sub_1AD148B34(a1 + 56);
    v54 = *(__int128 *)((char *)a2 + 104);
    v56 = *v7;
    v55 = *(__int128 *)((char *)a2 + 72);
    *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
    *(_OWORD *)(a1 + 104) = v54;
    *v6 = v56;
    *(_OWORD *)(a1 + 72) = v55;
    v57 = *(__int128 *)((char *)a2 + 168);
    v59 = *(__int128 *)((char *)a2 + 120);
    v58 = *(__int128 *)((char *)a2 + 136);
    *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
    *(_OWORD *)(a1 + 168) = v57;
    *(_OWORD *)(a1 + 120) = v59;
    *(_OWORD *)(a1 + 136) = v58;
    v60 = *(__int128 *)((char *)a2 + 232);
    v62 = *(__int128 *)((char *)a2 + 184);
    v61 = *(__int128 *)((char *)a2 + 200);
    *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
    *(_OWORD *)(a1 + 232) = v60;
    *(_OWORD *)(a1 + 184) = v62;
    *(_OWORD *)(a1 + 200) = v61;
  }
  else
  {
    v133 = *((_QWORD *)a2 + 8);
    v137 = *((_QWORD *)a2 + 7);
    v129 = *((_QWORD *)a2 + 9);
    v81 = *((_QWORD *)a2 + 11);
    v82 = *((_QWORD *)a2 + 13);
    v141 = *((_QWORD *)a2 + 15);
    v145 = *((_QWORD *)a2 + 17);
    v149 = *((_QWORD *)a2 + 18);
    v153 = *((_QWORD *)a2 + 19);
    v157 = *((_QWORD *)a2 + 21);
    v161 = *((_QWORD *)a2 + 23);
    v165 = *((_QWORD *)a2 + 25);
    v169 = *((_QWORD *)a2 + 26);
    v173 = *((_QWORD *)a2 + 27);
    v177 = *((_QWORD *)a2 + 28);
    v181 = *((_QWORD *)a2 + 29);
    v185 = *((_QWORD *)a2 + 30);
    v189 = *((_QWORD *)a2 + 24);
    sub_1AD00FEAC(v137, v133, v129, v8, v81, v9, v82, v10, v141, v11, v145, v149, v153, v12, v157, v13, v161, v14, v165,
      v169,
      v173,
      v177,
      v181,
      v185);
    v83 = *(_QWORD *)(a1 + 56);
    v84 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v137;
    *(_QWORD *)(a1 + 64) = v133;
    v85 = *(_QWORD *)(a1 + 72);
    v86 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = v129;
    *(_QWORD *)(a1 + 80) = v8;
    v87 = *(_QWORD *)(a1 + 88);
    v88 = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = v81;
    *(_QWORD *)(a1 + 96) = v9;
    v89 = *(_QWORD *)(a1 + 104);
    v90 = *(_QWORD *)(a1 + 112);
    *(_QWORD *)(a1 + 104) = v82;
    *(_QWORD *)(a1 + 112) = v10;
    v91 = *(_OWORD *)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v141;
    *(_QWORD *)(a1 + 128) = v11;
    v92 = *(_OWORD *)(a1 + 136);
    *(_QWORD *)(a1 + 136) = v145;
    *(_QWORD *)(a1 + 144) = v149;
    v93 = *(_OWORD *)(a1 + 152);
    *(_QWORD *)(a1 + 152) = v153;
    *(_QWORD *)(a1 + 160) = v12;
    v94 = *(_OWORD *)(a1 + 168);
    *(_QWORD *)(a1 + 168) = v157;
    *(_QWORD *)(a1 + 176) = v13;
    v95 = *(_OWORD *)(a1 + 184);
    *(_QWORD *)(a1 + 184) = v161;
    *(_QWORD *)(a1 + 192) = v189;
    v96 = *(_OWORD *)(a1 + 200);
    *(_QWORD *)(a1 + 200) = v165;
    *(_QWORD *)(a1 + 208) = v169;
    v97 = *(_OWORD *)(a1 + 216);
    *(_QWORD *)(a1 + 216) = v173;
    *(_QWORD *)(a1 + 224) = v177;
    v98 = *(_QWORD *)(a1 + 232);
    v99 = *(_QWORD *)(a1 + 240);
    *(_QWORD *)(a1 + 232) = v181;
    *(_QWORD *)(a1 + 240) = v185;
    sub_1AD00E8B0(v83, v84, v85, v86, v87, v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92, *((uint64_t *)&v92 + 1), v93, *((uint64_t *)&v93 + 1), v94, *((uint64_t *)&v94 + 1), v95, *((unint64_t *)&v95 + 1), v96,
      *((uint64_t *)&v96 + 1),
      v97,
      *((uint64_t *)&v97 + 1),
      v98,
      v99);
  }
LABEL_35:
  v102 = *((_QWORD *)a2 + 36);
  v103 = *((_QWORD *)a2 + 37);
  v131 = *((_QWORD *)a2 + 39);
  v135 = *((_QWORD *)a2 + 40);
  v139 = *((_QWORD *)a2 + 41);
  v143 = *((_QWORD *)a2 + 42);
  v147 = *((_QWORD *)a2 + 43);
  v151 = *((_QWORD *)a2 + 44);
  v155 = *((_QWORD *)a2 + 45);
  v159 = *((_QWORD *)a2 + 46);
  v163 = *((_QWORD *)a2 + 47);
  v167 = *((_QWORD *)a2 + 48);
  v171 = *((_QWORD *)a2 + 49);
  v175 = *((_QWORD *)a2 + 50);
  v179 = *((_QWORD *)a2 + 51);
  v183 = *((_QWORD *)a2 + 52);
  v187 = *((_QWORD *)a2 + 53);
  v191 = *((_QWORD *)a2 + 54);
  v104 = *((_QWORD *)a2 + 31);
  v105 = *((_QWORD *)a2 + 32);
  v106 = *((_QWORD *)a2 + 33);
  v107 = *((_QWORD *)a2 + 34);
  v108 = *((_QWORD *)a2 + 35);
  v109 = *((_QWORD *)a2 + 38);
  sub_1AD00FEAC(v104, v105, v106, v107, v108, v102, v103, v109, v131, v135, v139, v143, v147, v151, v155, v159, v163, v167, v171,
    v175,
    v179,
    v183,
    v187,
    v191);
  v110 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v104;
  v111 = *(_QWORD *)(a1 + 256);
  v112 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = v105;
  *(_QWORD *)(a1 + 264) = v106;
  v113 = *(_QWORD *)(a1 + 272);
  v114 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 272) = v107;
  *(_QWORD *)(a1 + 280) = v108;
  v115 = *(_QWORD *)(a1 + 288);
  v116 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 288) = v102;
  *(_QWORD *)(a1 + 296) = v103;
  v117 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 304) = v109;
  v118 = *(_OWORD *)(a1 + 312);
  v119 = *(_OWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 312) = v131;
  *(_QWORD *)(a1 + 320) = v135;
  *(_QWORD *)(a1 + 328) = v139;
  *(_QWORD *)(a1 + 336) = v143;
  v120 = *(_OWORD *)(a1 + 344);
  v121 = *(_OWORD *)(a1 + 360);
  *(_QWORD *)(a1 + 344) = v147;
  *(_QWORD *)(a1 + 352) = v151;
  *(_QWORD *)(a1 + 360) = v155;
  *(_QWORD *)(a1 + 368) = v159;
  v122 = *(_OWORD *)(a1 + 376);
  v123 = *(_OWORD *)(a1 + 392);
  *(_QWORD *)(a1 + 376) = v163;
  *(_QWORD *)(a1 + 384) = v167;
  *(_QWORD *)(a1 + 392) = v171;
  *(_QWORD *)(a1 + 400) = v175;
  v124 = *(_OWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 408) = v179;
  v125 = *(_QWORD *)(a1 + 424);
  v126 = *(_QWORD *)(a1 + 432);
  *(_QWORD *)(a1 + 416) = v183;
  *(_QWORD *)(a1 + 424) = v187;
  *(_QWORD *)(a1 + 432) = v191;
  sub_1AD00E8B0(v110, v111, v112, v113, v114, v115, v116, v117, v118, *((uint64_t *)&v118 + 1), v119, *((uint64_t *)&v119 + 1), v120, *((uint64_t *)&v120 + 1), v121, *((uint64_t *)&v121 + 1), v122, *((unint64_t *)&v122 + 1), v123,
    *((uint64_t *)&v123 + 1),
    v124,
    *((uint64_t *)&v124 + 1),
    v125,
    v126);
  *(_BYTE *)(a1 + 440) = *((_BYTE *)a2 + 440);
  return a1;
}

void *__swift_memcpy441_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1B9uLL);
}

uint64_t assignWithTake for OrderPreview.OrderImage(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v4 = (_OWORD *)(a1 + 264);
  v5 = a2 + 264;
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_14;
  if (!*(_QWORD *)(a2 + 24))
  {
    sub_1AD046A30((_QWORD *)a1);
LABEL_14:
    v28 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v28;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v29 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v29;
    v30 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v30;
    v31 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v31;
    v32 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v32;
    v33 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v33;
    v34 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v34;
    goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 112);
  v11 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 160);
  v13 = *(_QWORD *)(a1 + 176);
  v14 = *(_QWORD *)(a1 + 192);
  v15 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 128);
  v19 = *(_QWORD *)(a2 + 160);
  v20 = *(_QWORD *)(a2 + 176);
  v21 = *(_QWORD *)(a2 + 192);
  if (v8 >> 1 != 0xFFFFFFFF
    || (v10 | (unint64_t)v9) > 1
    || v12 & 0xFFFFFFFFFFFFFEFELL | v11 & 0xFFFFFFFFFFFF00FELL
    || (v14 | v13) >= 2)
  {
    if (v15 >> 1 != 0xFFFFFFFF
      || (v17 | v16) > 1
      || v19 & 0xFFFFFFFFFFFFFEFELL | v18 & 0xFFFFFFFFFFFF00FELL
      || (v21 | v20) >= 2)
    {
      v58 = *(_QWORD *)(a2 + 72);
      v59 = *(_QWORD *)(a2 + 88);
      v60 = *(_QWORD *)(a2 + 104);
      v61 = *(_QWORD *)(a2 + 120);
      v62 = *(_QWORD *)(a2 + 152);
      v63 = *(_QWORD *)(a2 + 168);
      v64 = *(_QWORD *)(a2 + 184);
      v75 = *(_QWORD *)(a1 + 64);
      v76 = *(_QWORD *)(a1 + 56);
      v74 = *(_QWORD *)(a1 + 72);
      v77 = *(_QWORD *)(a1 + 88);
      v78 = *(_QWORD *)(a1 + 104);
      v65 = *(_OWORD *)(a1 + 136);
      v72 = *(_QWORD *)(a1 + 152);
      v73 = *(_QWORD *)(a1 + 120);
      v66 = *(_QWORD *)(a1 + 168);
      v67 = *(_QWORD *)(a1 + 184);
      v68 = *(_OWORD *)(a1 + 200);
      v69 = *(_OWORD *)(a1 + 216);
      v71 = *(_QWORD *)(a1 + 232);
      v70 = *(_QWORD *)(a1 + 240);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = v58;
      *(_QWORD *)(a1 + 80) = v15;
      *(_QWORD *)(a1 + 88) = v59;
      *(_QWORD *)(a1 + 96) = v16;
      *(_QWORD *)(a1 + 104) = v60;
      *(_QWORD *)(a1 + 112) = v17;
      *(_QWORD *)(a1 + 120) = v61;
      *(_QWORD *)(a1 + 128) = v18;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = v62;
      *(_QWORD *)(a1 + 160) = v19;
      *(_QWORD *)(a1 + 168) = v63;
      *(_QWORD *)(a1 + 176) = v20;
      *(_QWORD *)(a1 + 184) = v64;
      *(_QWORD *)(a1 + 192) = v21;
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      sub_1AD00E8B0(v76, v75, v74, v8, v77, v9, v78, v10, v73, v11, v65, *((uint64_t *)&v65 + 1), v72, v12, v66, v13, v67, v14, v68,
        *((uint64_t *)&v68 + 1),
        v69,
        *((uint64_t *)&v69 + 1),
        v71,
        v70);
      goto LABEL_15;
    }
    sub_1AD148B34(a1 + 56);
  }
  v22 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v22;
  v23 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v23;
  v24 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v24;
  v25 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v25;
  v26 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v26;
  v27 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v27;
LABEL_15:
  v35 = *(_QWORD *)(a1 + 248);
  v36 = *(_QWORD *)(a1 + 256);
  v37 = *(_QWORD *)(a1 + 264);
  v38 = *(_QWORD *)(a1 + 272);
  v39 = *(_QWORD *)(a1 + 280);
  v40 = *(_QWORD *)(a1 + 288);
  v41 = *(_QWORD *)(a1 + 296);
  v42 = *(_QWORD *)(a1 + 304);
  v43 = *(_OWORD *)(a1 + 312);
  v44 = *(_OWORD *)(a1 + 328);
  v45 = *(_OWORD *)(a1 + 344);
  v46 = *(_OWORD *)(a1 + 360);
  v47 = *(_OWORD *)(a1 + 376);
  v48 = *(_OWORD *)(a1 + 392);
  v49 = *(_OWORD *)(a1 + 408);
  v50 = *(_QWORD *)(a1 + 424);
  v51 = *(_QWORD *)(a1 + 432);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v52 = *(_OWORD *)(v5 + 16);
  *v4 = *(_OWORD *)v5;
  v4[1] = v52;
  v53 = *(_OWORD *)(v5 + 48);
  v4[2] = *(_OWORD *)(v5 + 32);
  v4[3] = v53;
  v54 = *(_OWORD *)(v5 + 80);
  v4[4] = *(_OWORD *)(v5 + 64);
  v4[5] = v54;
  v55 = *(_OWORD *)(v5 + 112);
  v4[6] = *(_OWORD *)(v5 + 96);
  v4[7] = v55;
  v56 = *(_OWORD *)(v5 + 144);
  v4[8] = *(_OWORD *)(v5 + 128);
  v4[9] = v56;
  v4[10] = *(_OWORD *)(v5 + 160);
  sub_1AD00E8B0(v35, v36, v37, v38, v39, v40, v41, v42, v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((unint64_t *)&v47 + 1), v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    v51);
  *(_BYTE *)(a1 + 440) = *(_BYTE *)(v5 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderPreview.OrderImage(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 441))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 272) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for OrderPreview.OrderImage(uint64_t a1, int a2, int a3)
{
  double result;
  uint64_t v4;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 440) = 0;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 441) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(a1 + 248) = 0;
      *(_QWORD *)(a1 + 256) = 0;
      v4 = a1 + 248;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 2 * -a2;
      result = 0.0;
      *(_OWORD *)(v4 + 32) = 0u;
      *(_OWORD *)(v4 + 48) = 0u;
      *(_OWORD *)(v4 + 64) = 0u;
      *(_OWORD *)(v4 + 80) = 0u;
      *(_OWORD *)(v4 + 96) = 0u;
      *(_OWORD *)(v4 + 112) = 0u;
      *(_OWORD *)(v4 + 128) = 0u;
      *(_OWORD *)(v4 + 144) = 0u;
      *(_OWORD *)(v4 + 160) = 0u;
      *(_OWORD *)(v4 + 176) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 441) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderPreview.OrderImage()
{
  return &type metadata for OrderPreview.OrderImage;
}

uint64_t destroy for File()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t _s9BlastDoor4FileVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for File(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for File(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for File(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for File(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderPreview.Constraints()
{
  return &type metadata for OrderPreview.Constraints;
}

uint64_t storeEnumTagSinglePayload for OrderPreview.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD2FB15C + 4 * byte_1AD676F1A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD2FB190 + 4 * byte_1AD676F15[v4]))();
}

uint64_t sub_1AD2FB190(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD2FB198(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD2FB1A0);
  return result;
}

uint64_t sub_1AD2FB1AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD2FB1B4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD2FB1B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD2FB1C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrderPreview.CodingKeys()
{
  return &type metadata for OrderPreview.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for OrderPreview.Constraints.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AD2FB21C + 4 * byte_1AD676F1F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AD2FB23C + 4 * byte_1AD676F24[v4]))();
}

_BYTE *sub_1AD2FB21C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AD2FB23C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD2FB244(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD2FB24C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD2FB254(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD2FB25C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OrderPreview.Constraints.CodingKeys()
{
  return &type metadata for OrderPreview.Constraints.CodingKeys;
}

ValueMetadata *type metadata accessor for OrderPreview.OrderImage.CodingKeys()
{
  return &type metadata for OrderPreview.OrderImage.CodingKeys;
}

uint64_t _s9BlastDoor21OrderPreviewImageTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD2FB2D4 + 4 * byte_1AD676F2E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD2FB308 + 4 * byte_1AD676F29[v4]))();
}

uint64_t sub_1AD2FB308(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD2FB310(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD2FB318);
  return result;
}

uint64_t sub_1AD2FB324(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD2FB32CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD2FB330(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD2FB338(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrderPreview.OrderText.CodingKeys()
{
  return &type metadata for OrderPreview.OrderText.CodingKeys;
}

unint64_t sub_1AD2FB358()
{
  unint64_t result;

  result = qword_1EECDA788;
  if (!qword_1EECDA788)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67730C, &type metadata for OrderPreview.OrderText.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA788);
  }
  return result;
}

unint64_t sub_1AD2FB3A0()
{
  unint64_t result;

  result = qword_1EECDA790;
  if (!qword_1EECDA790)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6773C4, &type metadata for OrderPreview.OrderImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA790);
  }
  return result;
}

unint64_t sub_1AD2FB3E8()
{
  unint64_t result;

  result = qword_1EECDA798;
  if (!qword_1EECDA798)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67747C, &type metadata for OrderPreview.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA798);
  }
  return result;
}

unint64_t sub_1AD2FB430()
{
  unint64_t result;

  result = qword_1EECDA7A0;
  if (!qword_1EECDA7A0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD677534, &type metadata for OrderPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA7A0);
  }
  return result;
}

unint64_t sub_1AD2FB478()
{
  unint64_t result;

  result = qword_1EECDA7A8;
  if (!qword_1EECDA7A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6774A4, &type metadata for OrderPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA7A8);
  }
  return result;
}

unint64_t sub_1AD2FB4C0()
{
  unint64_t result;

  result = qword_1EECDA7B0;
  if (!qword_1EECDA7B0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6774CC, &type metadata for OrderPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA7B0);
  }
  return result;
}

unint64_t sub_1AD2FB508()
{
  unint64_t result;

  result = qword_1EECDA7B8;
  if (!qword_1EECDA7B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6773EC, &type metadata for OrderPreview.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA7B8);
  }
  return result;
}

unint64_t sub_1AD2FB550()
{
  unint64_t result;

  result = qword_1EECDA7C0;
  if (!qword_1EECDA7C0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD677414, &type metadata for OrderPreview.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA7C0);
  }
  return result;
}

unint64_t sub_1AD2FB598()
{
  unint64_t result;

  result = qword_1EECDA7C8;
  if (!qword_1EECDA7C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD677334, &type metadata for OrderPreview.OrderImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA7C8);
  }
  return result;
}

unint64_t sub_1AD2FB5E0()
{
  unint64_t result;

  result = qword_1EECDA7D0;
  if (!qword_1EECDA7D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67735C, &type metadata for OrderPreview.OrderImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA7D0);
  }
  return result;
}

unint64_t sub_1AD2FB628()
{
  unint64_t result;

  result = qword_1EECDA7D8;
  if (!qword_1EECDA7D8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67727C, &type metadata for OrderPreview.OrderText.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA7D8);
  }
  return result;
}

unint64_t sub_1AD2FB670()
{
  unint64_t result;

  result = qword_1EECDA7E0;
  if (!qword_1EECDA7E0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6772A4, &type metadata for OrderPreview.OrderText.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA7E0);
  }
  return result;
}

uint64_t sub_1AD2FB6B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xED0000726F6C6F43)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AD2FB7B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AD2FB890(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A7DC0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1AD2FB914(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D49726564616568 && a2 == 0xEB00000000656761;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x547972616D697270 && a2 == 0xEB00000000747865 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xED00007478655479 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7972616974726574 && a2 == 0xEC00000074786554)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_1AD2FBBC0()
{
  unint64_t result;

  result = qword_1EECDA7E8;
  if (!qword_1EECDA7E8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD676F9C, &type metadata for OrderPreviewImageType);
    atomic_store(result, (unint64_t *)&qword_1EECDA7E8);
  }
  return result;
}

double sub_1AD2FBC04@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648160;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AD648170;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1AD324644;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v4 + 32) = sub_1AD3246BC;
  *(_QWORD *)(v4 + 40) = v5;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1AD324644;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v4 + 48) = sub_1AD3246BC;
  *(_QWORD *)(v4 + 56) = v6;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v3 + 32) = sub_1AD3246C0;
  *(_QWORD *)(v3 + 40) = v7;
  v8 = sub_1AD281264(v3);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2020);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD00988C;
  *(_QWORD *)(inited + 40) = v9;
  return sub_1AD2807A4((_QWORD *)inited, a1);
}

uint64_t sub_1AD2FBD90@<X0>(_QWORD *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648170;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1AD324644;
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v3 + 32) = sub_1AD2F5214;
  *(_QWORD *)(v3 + 40) = v4;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1AD324644;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v3 + 48) = sub_1AD3246BC;
  *(_QWORD *)(v3 + 56) = v5;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1AD32466C;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(inited + 32) = sub_1AD324674;
  *(_QWORD *)(inited + 40) = v7;
  return sub_1AD2808C4((_QWORD *)inited, a1);
}

double sub_1AD2FBEB4@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648170;
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = sub_1AD043FD0;
  v4[3] = 0;
  v4[4] = 1;
  *(_QWORD *)(v3 + 32) = sub_1AD324618;
  *(_QWORD *)(v3 + 40) = v4;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = sub_1AD0097B4;
  v5[3] = 0;
  v5[4] = 255;
  *(_QWORD *)(v3 + 48) = sub_1AD3246B8;
  *(_QWORD *)(v3 + 56) = v5;
  v6 = sub_1AD281264(v3);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2020);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD0097FC;
  *(_QWORD *)(inited + 40) = v7;
  return sub_1AD2807A4((_QWORD *)inited, a1);
}

uint64_t sub_1AD2FC010@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[4];
  v2 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD2FC044(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[3].n128_i64[0];
  v6 = v1[3].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD2FC098@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[9];
  v3 = v1[10];
  *a1 = v1[8];
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD2FC0C8(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  v1[4] = *a1;
  v1[5].n128_u64[0] = v3;
  return result;
}

uint64_t sub_1AD2FC10C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 64));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t type metadata accessor for IDSHealthInvitation(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDAA00);
}

__n128 sub_1AD2FC170(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 64));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD2FC1D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 68));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 sub_1AD2FC224(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 68));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD2FC288@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 88));
  v4 = v3[1];
  v5 = v3[2];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD2FC2CC(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  __n128 *v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 88));
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v4 = *a1;
  v4[1].n128_u64[0] = v3;
  return result;
}

uint64_t sub_1AD2FC324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 56) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD2FC3A0()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 80))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD2FC3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 64);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD2FC488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 68);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD2FC514()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 88) + 16))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD2FC584@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD2FC5BC(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[1].n128_i64[0];
  v6 = v1[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD2FC610@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDAA20);
}

__n128 sub_1AD2FC674(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 28));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD2FC6D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 36));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 sub_1AD2FC728(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 36));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD2FC790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD2FC80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 28);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD2FC898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 36);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD2FC924@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD2FC958(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[1].n128_i64[0];
  v6 = v1[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD2FC9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t (*sub_1AD2FCA28(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)();

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3 == 1)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD2FCAB4;
  }
  return result;
}

uint64_t (*sub_1AD2FCAB8(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v7 = v1[3];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD2FCB1C;
}

uint64_t sub_1AD2FCB20@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 56);
  if (v3 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(a1 + 48);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD2FCB8C(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD2FCBAC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 56);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 48);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD2FCC38;
  }
  return result;
}

uint64_t sub_1AD2FCC38(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD2FCC9C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[6];
  v8 = a2[7];
  swift_retain();
  sub_1AD003E48(v5, v6);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  a2[4] = v4;
  a2[5] = v3;
  a2[6] = v5;
  a2[7] = v6;
  return result;
}

void (*sub_1AD2FCD10(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[4];
  v4 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD2FCD74;
}

void sub_1AD2FCD74(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[6];
  v9 = v4[7];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD003E48(v7, v3);
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[4] = v6;
    v4[5] = v5;
    v4[6] = v7;
    v4[7] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD003F24(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[4] = v6;
    v4[5] = v5;
    v4[6] = v7;
    v4[7] = v3;
  }
  free(v2);
}

uint64_t sub_1AD2FCE34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 80);
  if (v2)
  {
    *a2 = v2;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD2FCE94()
{
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0();
}

uint64_t (*sub_1AD2FCEB4(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(_QWORD *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 80);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD2FCF38;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD2FCF38(_QWORD *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) == 0)
    return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(*a1);
  v2 = swift_bridgeObjectRetain();
  _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD2FCF80(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[8] = v4;
  a2[9] = v3;
  a2[10] = v5;
  return result;
}

uint64_t (*sub_1AD2FCFE0(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[9];
  v4 = v1[10];
  *a1 = v1[8];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD2FD030;
}

uint64_t sub_1AD2FD030(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = (_QWORD *)a1[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v5[8] = v3;
    v5[9] = v2;
    v5[10] = v4;
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_release();
    result = swift_bridgeObjectRelease();
    v5[8] = v3;
    v5[9] = v2;
    v5[10] = v4;
  }
  return result;
}

uint64_t sub_1AD2FD0C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD2FD0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*sub_1AD2FD128())()
{
  return nullsub_1;
}

uint64_t sub_1AD2FD138()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD2FD164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return result;
}

uint64_t (*sub_1AD2FD198())()
{
  return nullsub_1;
}

void sub_1AD2FD1A8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 120);
}

_BYTE *sub_1AD2FD1B4(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 120) = *result;
  return result;
}

uint64_t (*sub_1AD2FD1C0())()
{
  return nullsub_1;
}

void sub_1AD2FD1D0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 121);
}

_BYTE *sub_1AD2FD1DC(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 121) = *result;
  return result;
}

uint64_t (*sub_1AD2FD1E8())()
{
  return nullsub_1;
}

void sub_1AD2FD1F8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 122);
}

_BYTE *sub_1AD2FD204(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 122) = *result;
  return result;
}

uint64_t (*sub_1AD2FD210())()
{
  return nullsub_1;
}

uint64_t sub_1AD2FD220@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 48), a1, &qword_1EECD2400);
}

uint64_t sub_1AD2FD25C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 48), &qword_1EECD2400);
}

uint64_t (*sub_1AD2FD298())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD2FD2C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 52), a1, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t sub_1AD2FD2FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 52), (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD2FD338())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD2FD360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 56), a1, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t sub_1AD2FD39C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 56), (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD2FD3D8())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD2FD400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 60), a1, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t sub_1AD2FD43C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 60), (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD2FD478())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD2FD4A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 64);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD2FD528(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IDSHealthInvitation(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD2FD574(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IDSHealthInvitation(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD2FD5B8(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHealthInvitation(0) + 64);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD2FD658@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 64));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD2FD6AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 64));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD2FD730(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHealthInvitation(0) + 64);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD2FD7A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 68);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD2FD830(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IDSHealthInvitation(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD2FD87C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IDSHealthInvitation(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD2FD8C0(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHealthInvitation(0) + 68);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD2FD960@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 68));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD2FD9B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 68));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD2FDA38(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHealthInvitation(0) + 68);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD2FDAB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 72), a1, (uint64_t *)&unk_1EECDB300);
}

uint64_t sub_1AD2FDAEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 72), (uint64_t *)&unk_1EECDB300);
}

uint64_t (*sub_1AD2FDB28())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD2FDB50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for IDSHealthInvitation(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 76));
  return result;
}

uint64_t sub_1AD2FDB80(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for IDSHealthInvitation(0);
  *(_BYTE *)(v1 + *(int *)(result + 76)) = v2;
  return result;
}

uint64_t (*sub_1AD2FDBAC())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD2FDBD4()
{
  type metadata accessor for IDSHealthInvitation(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD2FDBF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for IDSHealthInvitation(0) + 80);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_1AD2FDC30())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD2FDC58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for IDSHealthInvitation(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 84));
  return result;
}

uint64_t sub_1AD2FDC88(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for IDSHealthInvitation(0);
  *(_BYTE *)(v1 + *(int *)(result + 84)) = v2;
  return result;
}

uint64_t (*sub_1AD2FDCB4())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation(0);
  return nullsub_1;
}

uint64_t sub_1AD2FDCDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 88) + 16);
  if (v3)
  {
    *a2 = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD2FDD5C(uint64_t a1)
{
  type metadata accessor for IDSHealthInvitation(0);
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(a1);
}

uint64_t (*sub_1AD2FDD90(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*result)(_QWORD *, char);

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for IDSHealthInvitation(0) + 88);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(v1 + v3 + 16);
  if (v4)
  {
    *(_QWORD *)a1 = v4;
    swift_bridgeObjectRetain();
    return sub_1AD012768;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD2FDE28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 88));
  v4 = v3[1];
  v5 = v3[2];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD2FDE70(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 88));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  *v5 = v3;
  v5[1] = v2;
  v5[2] = v4;
  return result;
}

void (*sub_1AD2FDEE0(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(int *)(type metadata accessor for IDSHealthInvitation(0) + 88);
  *((_DWORD *)v3 + 8) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD01297C;
}

BOOL sub_1AD2FDF58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1AD2FDF70()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD2FDF98()
{
  _BYTE *v0;

  if (*v0)
    return 0x74736575716572;
  else
    return 0x657469766E69;
}

uint64_t sub_1AD2FDFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD323F48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD2FDFF4()
{
  sub_1AD2FE2F0();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FE01C()
{
  sub_1AD2FE2F0();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FE044()
{
  return 0;
}

uint64_t sub_1AD2FE050@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1AD2FE07C()
{
  sub_1AD2FE378();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FE0A4()
{
  sub_1AD2FE378();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FE0CC()
{
  sub_1AD2FE334();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FE0F4()
{
  sub_1AD2FE334();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FE11C(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA7F0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA7F8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA800);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2FE2F0();
  sub_1AD63C53C();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_1AD2FE334();
    sub_1AD63BFCC();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_1AD2FE378();
    sub_1AD63BFCC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_1AD2FE2F0()
{
  unint64_t result;

  result = qword_1EECDA808;
  if (!qword_1EECDA808)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678E0C, &type metadata for IDSHealthInvitation.InvitationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA808);
  }
  return result;
}

unint64_t sub_1AD2FE334()
{
  unint64_t result;

  result = qword_1EECDA810;
  if (!qword_1EECDA810)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678DBC, &type metadata for IDSHealthInvitation.InvitationType.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA810);
  }
  return result;
}

unint64_t sub_1AD2FE378()
{
  unint64_t result;

  result = qword_1EECDA818;
  if (!qword_1EECDA818)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678D6C, &type metadata for IDSHealthInvitation.InvitationType.InviteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA818);
  }
  return result;
}

uint64_t sub_1AD2FE3C0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA820);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA828);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA830);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2FE2F0();
  v11 = v33;
  sub_1AD63C524();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_1AD63BF9C();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_1AD63BD8C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v21 = &type metadata for IDSHealthInvitation.InvitationType;
    sub_1AD63BEB8();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_1AD2FE334();
    sub_1AD63BEAC();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_1AD2FE378();
    v22 = v6;
    sub_1AD63BEAC();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1AD2FE718@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD2FE3C0(a1, a2);
}

uint64_t sub_1AD2FE72C(_QWORD *a1)
{
  return sub_1AD2FE11C(a1);
}

uint64_t sub_1AD2FE740()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E696D6F636E69;
  else
    return 0x676E696F6774756FLL;
}

uint64_t sub_1AD2FE774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD324030(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD2FE798()
{
  sub_1AD2FEA5C();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FE7C0()
{
  sub_1AD2FEA5C();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FE7E8()
{
  sub_1AD2FEAA0();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FE810()
{
  sub_1AD2FEAA0();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FE838()
{
  sub_1AD2FEAE4();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FE860()
{
  sub_1AD2FEAE4();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FE888(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA838);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA840);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA848);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2FEA5C();
  sub_1AD63C53C();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_1AD2FEAA0();
    sub_1AD63BFCC();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_1AD2FEAE4();
    sub_1AD63BFCC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_1AD2FEA5C()
{
  unint64_t result;

  result = qword_1EECDA850;
  if (!qword_1EECDA850)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678D1C, &type metadata for IDSHealthInvitation.Direction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA850);
  }
  return result;
}

unint64_t sub_1AD2FEAA0()
{
  unint64_t result;

  result = qword_1EECDA858;
  if (!qword_1EECDA858)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678CCC, &type metadata for IDSHealthInvitation.Direction.IncomingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA858);
  }
  return result;
}

unint64_t sub_1AD2FEAE4()
{
  unint64_t result;

  result = qword_1EECDA860;
  if (!qword_1EECDA860)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678C7C, &type metadata for IDSHealthInvitation.Direction.OutgoingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA860);
  }
  return result;
}

uint64_t sub_1AD2FEB2C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA868);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA870);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA878);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2FEA5C();
  v11 = v33;
  sub_1AD63C524();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_1AD63BF9C();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_1AD63BD8C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v21 = &type metadata for IDSHealthInvitation.Direction;
    sub_1AD63BEB8();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_1AD2FEAA0();
    sub_1AD63BEAC();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_1AD2FEAE4();
    v22 = v6;
    sub_1AD63BEAC();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1AD2FEE84@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD2FEB2C(a1, a2);
}

uint64_t sub_1AD2FEE98(_QWORD *a1)
{
  return sub_1AD2FE888(a1);
}

uint64_t sub_1AD2FEEAC()
{
  sub_1AD2FF5D8();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FEED4()
{
  sub_1AD2FF5D8();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FEEFC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AD2FEF2C + 4 * byte_1AD6776A0[*v0]))(0x676E69646E6570, 0xE700000000000000);
}

uint64_t sub_1AD2FEF2C()
{
  return 0x6465747065636361;
}

uint64_t sub_1AD2FEF44()
{
  return 0x64656E696C636564;
}

uint64_t sub_1AD2FEF5C()
{
  return 0x65646E6963736572;
}

uint64_t sub_1AD2FEF78()
{
  return 0x64656B6F766572;
}

uint64_t sub_1AD2FEF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD324120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD2FEFB0()
{
  sub_1AD2FF4C8();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FEFD8()
{
  sub_1AD2FF4C8();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FF000()
{
  sub_1AD2FF594();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FF028()
{
  sub_1AD2FF594();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FF050()
{
  sub_1AD2FF61C();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FF078()
{
  sub_1AD2FF61C();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FF0A0()
{
  sub_1AD2FF550();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FF0C8()
{
  sub_1AD2FF550();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FF0F0()
{
  sub_1AD2FF50C();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FF118()
{
  sub_1AD2FF50C();
  return sub_1AD63C56C();
}

void sub_1AD2FF140(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA880);
  v14[11] = *(_QWORD *)(v3 - 8);
  v14[12] = v3;
  MEMORY[0x1E0C80A78](v3);
  v14[10] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA888);
  v14[8] = *(_QWORD *)(v5 - 8);
  v14[9] = v5;
  MEMORY[0x1E0C80A78](v5);
  v14[7] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA890);
  v14[5] = *(_QWORD *)(v7 - 8);
  v14[6] = v7;
  MEMORY[0x1E0C80A78](v7);
  v14[4] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA898);
  v14[2] = *(_QWORD *)(v9 - 8);
  v14[3] = v9;
  MEMORY[0x1E0C80A78](v9);
  v14[1] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA8A0);
  MEMORY[0x1E0C80A78](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA8A8);
  v14[14] = *(_QWORD *)(v12 - 8);
  v14[15] = v12;
  MEMORY[0x1E0C80A78](v12);
  v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2FF4C8();
  sub_1AD63C53C();
  __asm { BR              X9 }
}

uint64_t sub_1AD2FF334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 69) = 0;
  sub_1AD2FF61C();
  v5 = *(_QWORD *)(v4 - 88);
  sub_1AD63BFCC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v5);
}

unint64_t sub_1AD2FF4C8()
{
  unint64_t result;

  result = qword_1EECDA8B0;
  if (!qword_1EECDA8B0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678C2C, &type metadata for IDSHealthInvitation.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA8B0);
  }
  return result;
}

unint64_t sub_1AD2FF50C()
{
  unint64_t result;

  result = qword_1EECDA8B8;
  if (!qword_1EECDA8B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678BDC, &type metadata for IDSHealthInvitation.Status.RevokedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA8B8);
  }
  return result;
}

unint64_t sub_1AD2FF550()
{
  unint64_t result;

  result = qword_1EECDA8C0;
  if (!qword_1EECDA8C0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678B8C, &type metadata for IDSHealthInvitation.Status.RescindedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA8C0);
  }
  return result;
}

unint64_t sub_1AD2FF594()
{
  unint64_t result;

  result = qword_1EECDA8C8;
  if (!qword_1EECDA8C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678B3C, &type metadata for IDSHealthInvitation.Status.DeclinedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA8C8);
  }
  return result;
}

unint64_t sub_1AD2FF5D8()
{
  unint64_t result;

  result = qword_1EECDA8D0;
  if (!qword_1EECDA8D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678AEC, &type metadata for IDSHealthInvitation.Status.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA8D0);
  }
  return result;
}

unint64_t sub_1AD2FF61C()
{
  unint64_t result;

  result = qword_1EECDA8D8;
  if (!qword_1EECDA8D8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678A9C, &type metadata for IDSHealthInvitation.Status.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA8D8);
  }
  return result;
}

uint64_t sub_1AD2FF664@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD v27[4];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v42 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA8E0);
  v34 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA8E8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA8F0);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA8F8);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA900);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA908);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1AD2FF4C8();
  v19 = v44;
  sub_1AD63C524();
  if (!v19)
  {
    v27[2] = v10;
    v27[3] = v13;
    v27[1] = v11;
    v44 = v15;
    v28 = v17;
    v29 = v14;
    v20 = sub_1AD63BF9C();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v21 = sub_1AD63BD8C();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v23 = &type metadata for IDSHealthInvitation.Status;
    v24 = v28;
    v25 = v29;
    sub_1AD63BEB8();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_1AD2FFB5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD2FF664(a1, a2);
}

void sub_1AD2FFB70(_QWORD *a1)
{
  sub_1AD2FF140(a1);
}

uint64_t sub_1AD2FFB84()
{
  sub_1AD2FFFE4();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FFBAC()
{
  sub_1AD2FFFE4();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FFBD4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E69646E6570;
  if (*v0 != 1)
    v1 = 0x6465747065636361;
  if (*v0)
    return v1;
  else
    return 1701736302;
}

uint64_t sub_1AD2FFC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD324348(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD2FFC4C()
{
  sub_1AD2FFFA0();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FFC74()
{
  sub_1AD2FFFA0();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FFC9C()
{
  sub_1AD30006C();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FFCC4()
{
  sub_1AD30006C();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FFCEC()
{
  sub_1AD300028();
  return sub_1AD63C560();
}

uint64_t sub_1AD2FFD14()
{
  sub_1AD300028();
  return sub_1AD63C56C();
}

uint64_t sub_1AD2FFD3C(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA910);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA918);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA920);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA928);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2FFFA0();
  sub_1AD63C53C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_1AD300028();
      sub_1AD63BFCC();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_1AD2FFFE4();
      v16 = v21;
      sub_1AD63BFCC();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_1AD30006C();
    sub_1AD63BFCC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_1AD2FFFA0()
{
  unint64_t result;

  result = qword_1EECDA930;
  if (!qword_1EECDA930)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678A4C, &type metadata for IDSHealthInvitation.NotificationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA930);
  }
  return result;
}

unint64_t sub_1AD2FFFE4()
{
  unint64_t result;

  result = qword_1EECDA938;
  if (!qword_1EECDA938)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6789FC, &type metadata for IDSHealthInvitation.NotificationStatus.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA938);
  }
  return result;
}

unint64_t sub_1AD300028()
{
  unint64_t result;

  result = qword_1EECDA940;
  if (!qword_1EECDA940)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6789AC, &type metadata for IDSHealthInvitation.NotificationStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA940);
  }
  return result;
}

unint64_t sub_1AD30006C()
{
  unint64_t result;

  result = qword_1EECDA948;
  if (!qword_1EECDA948)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67895C, &type metadata for IDSHealthInvitation.NotificationStatus.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA948);
  }
  return result;
}

uint64_t sub_1AD3000B4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA950);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA958);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA960);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA968);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD2FFFA0();
  v13 = v41;
  sub_1AD63C524();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_1AD63BF9C();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_1AD63BD8C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v25 = &type metadata for IDSHealthInvitation.NotificationStatus;
    sub_1AD63BEB8();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_1AD300028();
      v20 = v9;
      sub_1AD63BEAC();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_1AD2FFFE4();
      v28 = v15;
      sub_1AD63BEAC();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_1AD30006C();
    sub_1AD63BEAC();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_1AD3004F8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD3000B4(a1, a2);
}

uint64_t sub_1AD30050C(_QWORD *a1)
{
  return sub_1AD2FFD3C(a1);
}

BOOL sub_1AD300520(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1AD300534()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD30055C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 28526;
  if (*v0 != 1)
    v1 = 7562617;
  if (*v0)
    return v1;
  else
    return 0x746553746F6ELL;
}

uint64_t sub_1AD3005A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD32448C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD3005C4()
{
  sub_1AD300968();
  return sub_1AD63C560();
}

uint64_t sub_1AD3005EC()
{
  sub_1AD300968();
  return sub_1AD63C56C();
}

uint64_t sub_1AD300614()
{
  sub_1AD3009F0();
  return sub_1AD63C560();
}

uint64_t sub_1AD30063C()
{
  sub_1AD3009F0();
  return sub_1AD63C56C();
}

uint64_t sub_1AD300664()
{
  sub_1AD300A34();
  return sub_1AD63C560();
}

uint64_t sub_1AD30068C()
{
  sub_1AD300A34();
  return sub_1AD63C56C();
}

uint64_t sub_1AD3006B4()
{
  sub_1AD3009AC();
  return sub_1AD63C560();
}

uint64_t sub_1AD3006DC()
{
  sub_1AD3009AC();
  return sub_1AD63C56C();
}

uint64_t sub_1AD300704(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA970);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA978);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA980);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA988);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD300968();
  sub_1AD63C53C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_1AD3009F0();
      sub_1AD63BFCC();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_1AD3009AC();
      v16 = v21;
      sub_1AD63BFCC();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_1AD300A34();
    sub_1AD63BFCC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_1AD300968()
{
  unint64_t result;

  result = qword_1EECDA990;
  if (!qword_1EECDA990)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67890C, &type metadata for IDSHealthInvitation.WheelchairUse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA990);
  }
  return result;
}

unint64_t sub_1AD3009AC()
{
  unint64_t result;

  result = qword_1EECDA998;
  if (!qword_1EECDA998)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6788BC, &type metadata for IDSHealthInvitation.WheelchairUse.YesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA998);
  }
  return result;
}

unint64_t sub_1AD3009F0()
{
  unint64_t result;

  result = qword_1EECDA9A0;
  if (!qword_1EECDA9A0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67886C, &type metadata for IDSHealthInvitation.WheelchairUse.NoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA9A0);
  }
  return result;
}

unint64_t sub_1AD300A34()
{
  unint64_t result;

  result = qword_1EECDA9A8;
  if (!qword_1EECDA9A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67881C, &type metadata for IDSHealthInvitation.WheelchairUse.NotSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDA9A8);
  }
  return result;
}

uint64_t sub_1AD300A7C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA9B0);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA9B8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA9C0);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDA9C8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD300968();
  v13 = v41;
  sub_1AD63C524();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_1AD63BF9C();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_1AD63BD8C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v25 = &type metadata for IDSHealthInvitation.WheelchairUse;
    sub_1AD63BEB8();
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_1AD3009F0();
      v20 = v9;
      sub_1AD63BEAC();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_1AD3009AC();
      v28 = v15;
      sub_1AD63BEAC();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_1AD300A34();
    sub_1AD63BEAC();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_1AD300EC0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD300A7C(a1, a2);
}

uint64_t sub_1AD300ED4(_QWORD *a1)
{
  return sub_1AD300704(a1);
}

uint64_t sub_1AD300EE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  if (v3 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(a1 + 16);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t (*sub_1AD300F58(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)();

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3 == 1)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD2FCAB4;
  }
  return result;
}

uint64_t sub_1AD300FE4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[2];
  v8 = a2[3];
  swift_retain();
  sub_1AD003E48(v5, v6);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v6;
  return result;
}

uint64_t (*sub_1AD301058(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v7 = v1[3];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD2FCB1C;
}

uint64_t sub_1AD3010BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_1EECDB300);
}

uint64_t sub_1AD3010F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 20), (uint64_t *)&unk_1EECDB300);
}

uint64_t (*sub_1AD301134())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD30115C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_1EECDB300);
}

uint64_t sub_1AD301198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&unk_1EECDB300);
}

uint64_t (*sub_1AD3011D4())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD3011FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 28);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD301284(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD3012D0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD301314(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD3013B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD301408(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 28));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD30148C(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 28);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD301504@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t sub_1AD301534(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*sub_1AD301560())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD301588@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 36);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD301610(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD30165C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD3016A0(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 36);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD301740@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 36));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD301794(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 36));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD301818(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 36);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD301890()
{
  type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD3018B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0) + 40);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_1AD3018EC())(_QWORD)
{
  type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD301918(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)();

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3 == 1)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD2FCAB4;
  }
  return result;
}

uint64_t sub_1AD3019A4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD301A04(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v7 = v1[3];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD2FCB1C;
}

void sub_1AD301A68(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[2];
  v9 = v4[3];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD003E48(v7, v3);
    swift_release();
    sub_1AD003F24(v8, v9);
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD003F24(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD003F24(v8, v9);
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v3;
  }
  free(v2);
}

uint64_t sub_1AD301B28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD301B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1AD301B88())()
{
  return nullsub_1;
}

uint64_t sub_1AD301B98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD301BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*sub_1AD301BF8())()
{
  return nullsub_1;
}

BlastDoor::HKProfileType_optional __swiftcall HKProfileType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;

  v2 = 1;
  switch(rawValue)
  {
    case 1:
      v2 = 0;
      goto LABEL_3;
    case 2:
LABEL_3:
      *v1 = v2;
      break;
    case 3:
      *v1 = 2;
      break;
    case 4:
      *v1 = 3;
      break;
    default:
      if (rawValue == 100)
        v3 = 4;
      else
        v3 = 5;
      *v1 = v3;
      break;
  }
  return (BlastDoor::HKProfileType_optional)rawValue;
}

uint64_t HKProfileType.rawValue.getter()
{
  char *v0;

  return qword_1AD678E60[*v0];
}

unint64_t sub_1AD301C84()
{
  unint64_t result;

  result = qword_1EECDA9D0;
  if (!qword_1EECDA9D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6776D4, &type metadata for IDSHealthInvitation.InvitationType);
    atomic_store(result, (unint64_t *)&qword_1EECDA9D0);
  }
  return result;
}

uint64_t sub_1AD301CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD288DBC, (uint64_t (*)(void))sub_1AD28904C);
}

unint64_t sub_1AD301CE0()
{
  unint64_t result;

  result = qword_1EECDA9D8;
  if (!qword_1EECDA9D8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6777A8, &type metadata for IDSHealthInvitation.Direction);
    atomic_store(result, (unint64_t *)&qword_1EECDA9D8);
  }
  return result;
}

uint64_t sub_1AD301D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD288E00, (uint64_t (*)(void))sub_1AD289090);
}

unint64_t sub_1AD301D3C()
{
  unint64_t result;

  result = qword_1EECDA9E0;
  if (!qword_1EECDA9E0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67787C, &type metadata for IDSHealthInvitation.Status);
    atomic_store(result, (unint64_t *)&qword_1EECDA9E0);
  }
  return result;
}

uint64_t sub_1AD301D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD288E44, (uint64_t (*)(void))sub_1AD2890D4);
}

unint64_t sub_1AD301D98()
{
  unint64_t result;

  result = qword_1EECDA9E8;
  if (!qword_1EECDA9E8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD677950, &type metadata for IDSHealthInvitation.NotificationStatus);
    atomic_store(result, (unint64_t *)&qword_1EECDA9E8);
  }
  return result;
}

uint64_t sub_1AD301DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD288F80, (uint64_t (*)(void))sub_1AD289210);
}

unint64_t sub_1AD301DF4()
{
  unint64_t result;

  result = qword_1EECDA9F0;
  if (!qword_1EECDA9F0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD677A24, &type metadata for IDSHealthInvitation.WheelchairUse);
    atomic_store(result, (unint64_t *)&qword_1EECDA9F0);
  }
  return result;
}

uint64_t sub_1AD301E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD289008, (uint64_t (*)(void))sub_1AD289298);
}

uint64_t sub_1AD301E4C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD3478, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata, (uint64_t)&unk_1AD653888);
  result = sub_1ACFF9724(&qword_1EECD3518, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata, (uint64_t)&unk_1AD6538B0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD301EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD288FC4, (uint64_t (*)(void))sub_1AD289254);
}

uint64_t sub_1AD301EBC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD70F8, type metadata accessor for IDSHealthInvitation, (uint64_t)&unk_1AD650C78);
  result = sub_1ACFF9724(&qword_1EECD70C0, type metadata accessor for IDSHealthInvitation, (uint64_t)&unk_1AD650CA0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

BOOL sub_1AD301F18(char *a1, char *a2)
{
  return qword_1AD678E60[*a1] == qword_1AD678E60[*a2];
}

unint64_t sub_1AD301F40()
{
  unint64_t result;

  result = qword_1EECDA9F8;
  if (!qword_1EECDA9F8)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for HKProfileType, &type metadata for HKProfileType);
    atomic_store(result, (unint64_t *)&qword_1EECDA9F8);
  }
  return result;
}

uint64_t sub_1AD301F84()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD301FD0()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD302004()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

BlastDoor::HKProfileType_optional sub_1AD30204C(Swift::Int *a1)
{
  return HKProfileType.init(rawValue:)(*a1);
}

void sub_1AD302054(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1AD678E60[*v1];
}

uint64_t sub_1AD30206C()
{
  sub_1AD3245B0();
  return sub_1AD63B930();
}

uint64_t sub_1AD3020C8()
{
  sub_1AD3245B0();
  return sub_1AD63B8D0();
}

uint64_t sub_1AD302114@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD300EE8(a1, a2);
}

uint64_t sub_1AD302130(uint64_t *a1, _QWORD *a2)
{
  return sub_1AD300FE4(a1, a2);
}

uint64_t sub_1AD302148(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD302184@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[5];
  v3 = a1[6];
  v4 = a1[7];
  *a2 = a1[4];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD3021C4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD3021EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD302244()
{
  uint64_t v0;

  type metadata accessor for IDSHealthInvitation(0);
  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD302290@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD300EE8(a1, a2);
}

uint64_t keypath_get_1Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD3022E4(uint64_t *a1, _QWORD *a2)
{
  return sub_1AD300FE4(a1, a2);
}

uint64_t sub_1AD30231C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD302358@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD302394(uint64_t a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int *v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD *, uint64_t, int *);
  _QWORD *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(_QWORD, _QWORD, _QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  _OWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _DWORD *v121;
  _DWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t *v133;
  unint64_t v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _OWORD *v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  unint64_t v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  _QWORD *v172;
  uint64_t v173;
  _OWORD *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  _QWORD *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _OWORD *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _OWORD *v198;
  uint64_t v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  int *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  _OWORD *v216;
  uint64_t v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  uint64_t v225;
  _OWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  uint64_t *v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  unint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  _DWORD *v267;
  _DWORD *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t *v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  uint64_t *v279;
  unint64_t v280;
  __int128 v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t *v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _OWORD *v288;
  unint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t *v293;
  unint64_t v294;
  __int128 v295;
  __int128 v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t *v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t *v303;
  unint64_t v304;
  uint64_t v305;
  uint64_t v306;
  _QWORD *v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  _QWORD *v318;
  uint64_t v319;
  _OWORD *v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  char *v324;
  unint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  _QWORD *v329;
  uint64_t v330;
  _OWORD *v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  _QWORD *v335;
  uint64_t v336;
  _OWORD *v337;
  uint64_t v338;
  void (*v339)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v340;
  void *v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  unsigned int (*v345)(char *, uint64_t, uint64_t);
  uint64_t v346;
  uint64_t v347;
  void *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  void *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  _QWORD *v357;
  uint64_t v358;
  _OWORD *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  _QWORD *v363;
  uint64_t v364;
  _OWORD *v365;
  uint64_t v366;
  uint64_t v367;
  _QWORD *v368;
  _QWORD *v369;
  int *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  _OWORD *v375;
  uint64_t v376;
  uint64_t v377;
  char *v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  _OWORD *v386;
  uint64_t v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  int *v392;
  uint64_t v393;
  char *v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  _OWORD *v404;
  uint64_t v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  uint64_t v413;
  _OWORD *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  uint64_t *v426;
  unint64_t v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  char *v431;
  unint64_t v432;
  uint64_t v433;
  uint64_t v434;
  char *v435;
  char *v436;
  unint64_t v437;
  uint64_t v438;
  uint64_t v439;
  char *v440;
  char *v441;
  unint64_t v442;
  uint64_t v443;
  uint64_t v444;
  char *v445;
  char *v446;
  unint64_t v447;
  uint64_t v448;
  uint64_t v449;
  char *v450;
  char *v451;
  unint64_t v452;
  uint64_t v453;
  uint64_t v454;
  _DWORD *v455;
  _DWORD *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t *v461;
  unint64_t v462;
  uint64_t v463;
  int v464;
  uint64_t v465;
  uint64_t *v466;
  unint64_t v467;
  uint64_t v468;
  uint64_t v469;
  __int128 v470;
  uint64_t v471;
  uint64_t *v472;
  unint64_t v473;
  uint64_t v474;
  uint64_t v475;
  _OWORD *v476;
  unint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t *v481;
  unint64_t v482;
  __int128 v483;
  __int128 v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t *v487;
  unint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t *v491;
  unint64_t v492;
  uint64_t v493;
  uint64_t v494;
  _QWORD *v495;
  char *v496;
  uint64_t v497;
  uint64_t v498;
  char *v499;
  char *v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  char *v505;
  _QWORD *v506;
  uint64_t v507;
  _OWORD *v508;
  uint64_t v509;
  uint64_t v510;
  char *v511;
  char *v512;
  unint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  _QWORD *v517;
  _QWORD *v518;
  uint64_t v519;
  _OWORD *v521;
  _OWORD *v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  unsigned int (*v527)(_QWORD, _QWORD, _QWORD);
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  _QWORD *v532;
  _QWORD *v533;
  _QWORD *v534;
  _QWORD *v535;
  int *v536;
  int *v537;
  uint64_t v538;
  int *v539;
  int *v540;
  uint64_t v541;
  uint64_t v542;
  _OWORD *v543;
  uint64_t v544;
  _QWORD *v545;
  _QWORD *v546;
  uint64_t v547;
  int *v548;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) == 0)
  {
    v7 = a2;
    v8 = a2[1];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = a2 + 2;
    v10 = a2[3];
    swift_retain();
    if (v10 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v9;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)v9;
      *(_QWORD *)(a1 + 24) = v10;
      swift_bridgeObjectRetain();
    }
    v12 = v7[5];
    *(_QWORD *)(a1 + 32) = v7[4];
    *(_QWORD *)(a1 + 40) = v12;
    v13 = v7 + 6;
    v14 = v7[7];
    swift_retain();
    if (v14 == 1)
    {
      *(_OWORD *)(a1 + 48) = *v13;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)v13;
      *(_QWORD *)(a1 + 56) = v14;
      swift_bridgeObjectRetain();
    }
    v15 = v7[9];
    *(_QWORD *)(a1 + 64) = v7[8];
    *(_QWORD *)(a1 + 72) = v15;
    v16 = v7[11];
    *(_QWORD *)(a1 + 80) = v7[10];
    *(_QWORD *)(a1 + 88) = v16;
    v17 = v7[13];
    *(_QWORD *)(a1 + 96) = v7[12];
    *(_QWORD *)(a1 + 104) = v17;
    v18 = v7[14];
    *(_WORD *)(a1 + 120) = *((_WORD *)v7 + 60);
    *(_BYTE *)(a1 + 122) = *((_BYTE *)v7 + 122);
    v547 = a1;
    v548 = a3;
    v19 = a3[12];
    v20 = (_QWORD *)(a1 + v19);
    v21 = (_QWORD *)((char *)v7 + v19);
    *(_QWORD *)(a1 + 112) = v18;
    v22 = (int *)type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
    v23 = *((_QWORD *)v22 - 1);
    v24 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v23 + 48);
    swift_retain();
    v25 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2400);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      v11 = v547;
      v27 = v548;
    }
    else
    {
      v542 = v23;
      v28 = v21[1];
      *v20 = *v21;
      v20[1] = v28;
      v29 = v21 + 2;
      v30 = v21[3];
      swift_retain();
      v31 = v20;
      v545 = v7;
      if (v30 == 1)
      {
        *((_OWORD *)v20 + 1) = *v29;
      }
      else
      {
        v20[2] = *(_QWORD *)v29;
        v20[3] = v30;
        swift_bridgeObjectRetain();
      }
      v32 = v22[5];
      v33 = (_QWORD *)((char *)v20 + v32);
      v34 = (_QWORD *)((char *)v21 + v32);
      v35 = type metadata accessor for CloudKitShareParticipant(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v36 + 48);
      if (v37(v34, 1, v35))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v527 = v37;
        v532 = v21;
        v39 = v34[1];
        *v33 = *v34;
        v33[1] = v39;
        v33[2] = v34[2];
        v40 = v34[5];
        *(_OWORD *)(v33 + 3) = *(_OWORD *)(v34 + 3);
        v33[5] = v40;
        v41 = v34 + 6;
        v42 = v34[7];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v42 == 1)
        {
          *((_OWORD *)v33 + 3) = *v41;
        }
        else
        {
          v33[6] = *(_QWORD *)v41;
          v33[7] = v42;
          swift_bridgeObjectRetain();
        }
        v536 = (int *)v35;
        v43 = *(int *)(v35 + 24);
        v44 = (char *)v33 + v43;
        v45 = (char *)v34 + v43;
        v46 = *(_QWORD *)((char *)v34 + v43);
        v534 = v31;
        v539 = v22;
        v530 = v36;
        if (v46)
        {
          v47 = *((_QWORD *)v45 + 1);
          v48 = *((_QWORD *)v45 + 2);
          *(_QWORD *)v44 = v46;
          *((_QWORD *)v44 + 1) = v47;
          *((_QWORD *)v44 + 2) = v48;
          *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
          v49 = *((_QWORD *)v45 + 6);
          *((_QWORD *)v44 + 5) = *((_QWORD *)v45 + 5);
          *((_QWORD *)v44 + 6) = v49;
          *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
          v50 = *((_QWORD *)v45 + 10);
          *((_QWORD *)v44 + 9) = *((_QWORD *)v45 + 9);
          *((_QWORD *)v44 + 10) = v50;
          v51 = *((_QWORD *)v45 + 13);
          *(_OWORD *)(v44 + 88) = *(_OWORD *)(v45 + 88);
          *((_QWORD *)v44 + 13) = v51;
          v52 = v45 + 112;
          v53 = *((_QWORD *)v45 + 15);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (v53 == 1)
          {
            *((_OWORD *)v44 + 7) = *v52;
          }
          else
          {
            *((_QWORD *)v44 + 14) = *(_QWORD *)v52;
            *((_QWORD *)v44 + 15) = v53;
            swift_bridgeObjectRetain();
          }
          *((_QWORD *)v44 + 16) = *((_QWORD *)v45 + 16);
        }
        else
        {
          v54 = *((_OWORD *)v45 + 7);
          *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
          *((_OWORD *)v44 + 7) = v54;
          *((_QWORD *)v44 + 16) = *((_QWORD *)v45 + 16);
          v55 = *((_OWORD *)v45 + 3);
          *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
          *((_OWORD *)v44 + 3) = v55;
          v56 = *((_OWORD *)v45 + 5);
          *((_OWORD *)v44 + 4) = *((_OWORD *)v45 + 4);
          *((_OWORD *)v44 + 5) = v56;
          v57 = *((_OWORD *)v45 + 1);
          *(_OWORD *)v44 = *(_OWORD *)v45;
          *((_OWORD *)v44 + 1) = v57;
        }
        v58 = (int *)type metadata accessor for CloudKitUserIdentity(0);
        v59 = v58[5];
        v60 = &v44[v59];
        v61 = &v45[v59];
        v62 = sub_1AD63AE2C();
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        }
        v65 = v58[6];
        v66 = &v44[v65];
        v67 = &v45[v65];
        v68 = *(_QWORD *)&v45[v65];
        if (v68)
        {
          v69 = *((_QWORD *)v67 + 1);
          *(_QWORD *)v66 = v68;
          *((_QWORD *)v66 + 1) = v69;
          v70 = v67 + 16;
          v71 = *((_QWORD *)v67 + 3);
          swift_retain();
          if (v71 == 1)
          {
            *((_OWORD *)v66 + 1) = *v70;
          }
          else
          {
            *((_QWORD *)v66 + 2) = *(_QWORD *)v70;
            *((_QWORD *)v66 + 3) = v71;
            swift_bridgeObjectRetain();
          }
          v79 = *((_QWORD *)v67 + 5);
          *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
          *((_QWORD *)v66 + 5) = v79;
          v80 = v67 + 48;
          v81 = *((_QWORD *)v67 + 7);
          swift_retain();
          if (v81 == 1)
          {
            *((_OWORD *)v66 + 3) = *v80;
          }
          else
          {
            *((_QWORD *)v66 + 6) = *(_QWORD *)v80;
            *((_QWORD *)v66 + 7) = v81;
            swift_bridgeObjectRetain();
          }
          v82 = *((_QWORD *)v67 + 8);
          if (v82)
          {
            v83 = *((_QWORD *)v67 + 9);
            v84 = *((_QWORD *)v67 + 10);
            *((_QWORD *)v66 + 8) = v82;
            *((_QWORD *)v66 + 9) = v83;
            *((_QWORD *)v66 + 10) = v84;
            *(_OWORD *)(v66 + 88) = *(_OWORD *)(v67 + 88);
            v85 = *((_QWORD *)v67 + 14);
            *((_QWORD *)v66 + 13) = *((_QWORD *)v67 + 13);
            *((_QWORD *)v66 + 14) = v85;
            *(_OWORD *)(v66 + 120) = *(_OWORD *)(v67 + 120);
            v86 = *((_QWORD *)v67 + 18);
            *((_QWORD *)v66 + 17) = *((_QWORD *)v67 + 17);
            *((_QWORD *)v66 + 18) = v86;
            v87 = *((_QWORD *)v67 + 21);
            *(_OWORD *)(v66 + 152) = *(_OWORD *)(v67 + 152);
            *((_QWORD *)v66 + 21) = v87;
            v521 = v67 + 176;
            v525 = *((_QWORD *)v67 + 23);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            if (v525 == 1)
            {
              *((_OWORD *)v66 + 11) = *v521;
            }
            else
            {
              *((_QWORD *)v66 + 22) = *(_QWORD *)v521;
              *((_QWORD *)v66 + 23) = v525;
              swift_bridgeObjectRetain();
            }
            *((_QWORD *)v66 + 24) = *((_QWORD *)v67 + 24);
          }
          else
          {
            v88 = *((_OWORD *)v67 + 11);
            *((_OWORD *)v66 + 10) = *((_OWORD *)v67 + 10);
            *((_OWORD *)v66 + 11) = v88;
            *((_QWORD *)v66 + 24) = *((_QWORD *)v67 + 24);
            v89 = *((_OWORD *)v67 + 7);
            *((_OWORD *)v66 + 6) = *((_OWORD *)v67 + 6);
            *((_OWORD *)v66 + 7) = v89;
            v90 = *((_OWORD *)v67 + 9);
            *((_OWORD *)v66 + 8) = *((_OWORD *)v67 + 8);
            *((_OWORD *)v66 + 9) = v90;
            v91 = *((_OWORD *)v67 + 5);
            *((_OWORD *)v66 + 4) = *((_OWORD *)v67 + 4);
            *((_OWORD *)v66 + 5) = v91;
          }
          v66[200] = v67[200];
          v92 = (uint64_t *)(v67 + 208);
          v93 = *((_QWORD *)v67 + 27);
          if (v93 >> 60 == 15)
          {
            *((_OWORD *)v66 + 13) = *(_OWORD *)v92;
          }
          else
          {
            v94 = *v92;
            sub_1AD0040A0(*v92, *((_QWORD *)v67 + 27));
            *((_QWORD *)v66 + 26) = v94;
            *((_QWORD *)v66 + 27) = v93;
          }
        }
        else
        {
          v72 = *((_OWORD *)v67 + 11);
          *((_OWORD *)v66 + 10) = *((_OWORD *)v67 + 10);
          *((_OWORD *)v66 + 11) = v72;
          v73 = *((_OWORD *)v67 + 13);
          *((_OWORD *)v66 + 12) = *((_OWORD *)v67 + 12);
          *((_OWORD *)v66 + 13) = v73;
          v74 = *((_OWORD *)v67 + 7);
          *((_OWORD *)v66 + 6) = *((_OWORD *)v67 + 6);
          *((_OWORD *)v66 + 7) = v74;
          v75 = *((_OWORD *)v67 + 9);
          *((_OWORD *)v66 + 8) = *((_OWORD *)v67 + 8);
          *((_OWORD *)v66 + 9) = v75;
          v76 = *((_OWORD *)v67 + 3);
          *((_OWORD *)v66 + 2) = *((_OWORD *)v67 + 2);
          *((_OWORD *)v66 + 3) = v76;
          v77 = *((_OWORD *)v67 + 5);
          *((_OWORD *)v66 + 4) = *((_OWORD *)v67 + 4);
          *((_OWORD *)v66 + 5) = v77;
          v78 = *((_OWORD *)v67 + 1);
          *(_OWORD *)v66 = *(_OWORD *)v67;
          *((_OWORD *)v66 + 1) = v78;
        }
        *(_QWORD *)&v44[v58[7]] = *(_QWORD *)&v45[v58[7]];
        v95 = v58[8];
        v96 = &v44[v95];
        v97 = &v45[v95];
        v98 = *(_QWORD *)&v45[v95 + 8];
        swift_bridgeObjectRetain();
        if (v98 >> 60 == 15)
        {
          *(_OWORD *)v96 = *(_OWORD *)v97;
        }
        else
        {
          v99 = *(_QWORD *)v97;
          sub_1AD0040A0(v99, v98);
          *(_QWORD *)v96 = v99;
          *((_QWORD *)v96 + 1) = v98;
        }
        v100 = v58[9];
        v101 = &v44[v100];
        v102 = &v45[v100];
        v103 = *((_QWORD *)v102 + 1);
        if (v103 >> 60 == 15)
        {
          *(_OWORD *)v101 = *(_OWORD *)v102;
        }
        else
        {
          v104 = *(_QWORD *)v102;
          sub_1AD0040A0(*(_QWORD *)v102, *((_QWORD *)v102 + 1));
          *(_QWORD *)v101 = v104;
          *((_QWORD *)v101 + 1) = v103;
        }
        v44[v58[10]] = v45[v58[10]];
        v44[v58[11]] = v45[v58[11]];
        v105 = v58[12];
        v106 = &v44[v105];
        v107 = &v45[v105];
        v108 = *((_QWORD *)v107 + 1);
        if (v108 >> 60 == 15)
        {
          *(_OWORD *)v106 = *(_OWORD *)v107;
        }
        else
        {
          v109 = *(_QWORD *)v107;
          sub_1AD0040A0(*(_QWORD *)v107, *((_QWORD *)v107 + 1));
          *(_QWORD *)v106 = v109;
          *((_QWORD *)v106 + 1) = v108;
        }
        v22 = v539;
        *(_QWORD *)&v44[v58[13]] = *(_QWORD *)&v45[v58[13]];
        v35 = (uint64_t)v536;
        *((_BYTE *)v33 + v536[7]) = *((_BYTE *)v34 + v536[7]);
        *((_BYTE *)v33 + v536[8]) = *((_BYTE *)v34 + v536[8]);
        *((_BYTE *)v33 + v536[9]) = *((_BYTE *)v34 + v536[9]);
        *((_BYTE *)v33 + v536[10]) = *((_BYTE *)v34 + v536[10]);
        *((_BYTE *)v33 + v536[11]) = *((_BYTE *)v34 + v536[11]);
        *((_BYTE *)v33 + v536[12]) = *((_BYTE *)v34 + v536[12]);
        *((_BYTE *)v33 + v536[13]) = *((_BYTE *)v34 + v536[13]);
        *((_BYTE *)v33 + v536[14]) = *((_BYTE *)v34 + v536[14]);
        v110 = v536[15];
        v111 = (char *)v33 + v110;
        v112 = (char *)v34 + v110;
        v113 = *((_QWORD *)v112 + 1);
        if (v113 >> 60 == 15)
        {
          *(_OWORD *)v111 = *(_OWORD *)v112;
        }
        else
        {
          v114 = *(_QWORD *)v112;
          sub_1AD0040A0(*(_QWORD *)v112, *((_QWORD *)v112 + 1));
          *(_QWORD *)v111 = v114;
          *((_QWORD *)v111 + 1) = v113;
        }
        v115 = v536[16];
        v116 = (char *)v33 + v115;
        v117 = (char *)v34 + v115;
        v118 = *((_QWORD *)v117 + 1);
        if (v118 >> 60 == 15)
        {
          *(_OWORD *)v116 = *(_OWORD *)v117;
        }
        else
        {
          v119 = *(_QWORD *)v117;
          sub_1AD0040A0(*(_QWORD *)v117, *((_QWORD *)v117 + 1));
          *(_QWORD *)v116 = v119;
          *((_QWORD *)v116 + 1) = v118;
        }
        *((_BYTE *)v33 + v536[17]) = *((_BYTE *)v34 + v536[17]);
        *((_BYTE *)v33 + v536[18]) = *((_BYTE *)v34 + v536[18]);
        v120 = v536[19];
        v121 = (_DWORD *)((char *)v33 + v120);
        v122 = (_DWORD *)((char *)v34 + v120);
        v123 = type metadata accessor for CloudKitSharingToken();
        v124 = *(_QWORD *)(v123 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
        {
          v125 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
        }
        else
        {
          v526 = v123;
          *v121 = *v122;
          *((_QWORD *)v121 + 1) = *((_QWORD *)v122 + 1);
          v126 = *((_QWORD *)v122 + 4);
          *((_OWORD *)v121 + 1) = *((_OWORD *)v122 + 1);
          *((_QWORD *)v121 + 4) = v126;
          v127 = (uint64_t *)(v122 + 10);
          v128 = *((_QWORD *)v122 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (v128 >> 60 == 11 || v128 >> 60 == 15)
          {
            *(_OWORD *)(v121 + 10) = *(_OWORD *)v127;
          }
          else
          {
            v129 = *v127;
            sub_1AD0040A0(*v127, v128);
            *((_QWORD *)v121 + 5) = v129;
            *((_QWORD *)v121 + 6) = v128;
          }
          v130 = *((_QWORD *)v122 + 9);
          if (v130)
          {
            v131 = v122[15];
            v121[14] = v122[14];
            v121[15] = v131;
            *((_BYTE *)v121 + 64) = *((_BYTE *)v122 + 64);
            v132 = *((_QWORD *)v122 + 10);
            *((_QWORD *)v121 + 9) = v130;
            *((_QWORD *)v121 + 10) = v132;
            v133 = (uint64_t *)(v122 + 22);
            v134 = *((_QWORD *)v122 + 12);
            swift_retain();
            if (v134 >> 60 == 15)
            {
              *(_OWORD *)(v121 + 22) = *(_OWORD *)v133;
            }
            else
            {
              v136 = *v133;
              sub_1AD0040A0(*v133, v134);
              *((_QWORD *)v121 + 11) = v136;
              *((_QWORD *)v121 + 12) = v134;
            }
          }
          else
          {
            v135 = *(_OWORD *)(v122 + 18);
            *(_OWORD *)(v121 + 14) = *(_OWORD *)(v122 + 14);
            *(_OWORD *)(v121 + 18) = v135;
            *(_OWORD *)(v121 + 22) = *(_OWORD *)(v122 + 22);
          }
          v137 = *((_QWORD *)v122 + 14);
          *((_QWORD *)v121 + 13) = *((_QWORD *)v122 + 13);
          *((_QWORD *)v121 + 14) = v137;
          v138 = (uint64_t *)(v122 + 30);
          v139 = *((_QWORD *)v122 + 16);
          swift_retain();
          if (v139 >> 60 == 15)
          {
            *(_OWORD *)(v121 + 30) = *(_OWORD *)v138;
          }
          else
          {
            v140 = *v138;
            sub_1AD0040A0(*v138, v139);
            *((_QWORD *)v121 + 15) = v140;
            *((_QWORD *)v121 + 16) = v139;
          }
          v141 = *((_QWORD *)v122 + 18);
          *((_QWORD *)v121 + 17) = *((_QWORD *)v122 + 17);
          *((_QWORD *)v121 + 18) = v141;
          v142 = v122 + 38;
          v143 = *((_QWORD *)v122 + 20);
          swift_retain();
          if (v143 >> 60 == 11 || v143 >> 60 == 15)
          {
            *(_OWORD *)(v121 + 38) = *v142;
          }
          else
          {
            v144 = *(_QWORD *)v142;
            sub_1AD0040A0(v144, v143);
            *((_QWORD *)v121 + 19) = v144;
            *((_QWORD *)v121 + 20) = v143;
          }
          v145 = *((_QWORD *)v122 + 21);
          if (v145)
          {
            v146 = *((_QWORD *)v122 + 22);
            *((_QWORD *)v121 + 21) = v145;
            *((_QWORD *)v121 + 22) = v146;
            v147 = (uint64_t *)(v122 + 46);
            v148 = *((_QWORD *)v122 + 24);
            swift_retain();
            if (v148 >> 60 == 15)
            {
              *(_OWORD *)(v121 + 46) = *(_OWORD *)v147;
            }
            else
            {
              v151 = *v147;
              sub_1AD0040A0(*v147, v148);
              *((_QWORD *)v121 + 23) = v151;
              *((_QWORD *)v121 + 24) = v148;
            }
            v121[50] = v122[50];
            v152 = *((_QWORD *)v122 + 27);
            *((_QWORD *)v121 + 26) = *((_QWORD *)v122 + 26);
            *((_QWORD *)v121 + 27) = v152;
            v153 = (uint64_t *)(v122 + 56);
            v154 = *((_QWORD *)v122 + 29);
            swift_retain();
            if (v154 >> 60 == 15)
            {
              *((_OWORD *)v121 + 14) = *(_OWORD *)v153;
            }
            else
            {
              v155 = *v153;
              sub_1AD0040A0(*v153, v154);
              *((_QWORD *)v121 + 28) = v155;
              *((_QWORD *)v121 + 29) = v154;
            }
          }
          else
          {
            v149 = *(_OWORD *)(v122 + 54);
            *(_OWORD *)(v121 + 50) = *(_OWORD *)(v122 + 50);
            *(_OWORD *)(v121 + 54) = v149;
            *((_QWORD *)v121 + 29) = *((_QWORD *)v122 + 29);
            v150 = *(_OWORD *)(v122 + 46);
            *(_OWORD *)(v121 + 42) = *(_OWORD *)(v122 + 42);
            *(_OWORD *)(v121 + 46) = v150;
          }
          v156 = *((_QWORD *)v122 + 32);
          *((_OWORD *)v121 + 15) = *((_OWORD *)v122 + 15);
          *((_QWORD *)v121 + 32) = v156;
          v157 = (uint64_t *)(v122 + 66);
          v158 = *((_QWORD *)v122 + 34);
          swift_bridgeObjectRetain();
          swift_retain();
          v523 = v124;
          if (v158 >> 60 == 11 || v158 >> 60 == 15)
          {
            *(_OWORD *)(v121 + 66) = *(_OWORD *)v157;
          }
          else
          {
            v159 = *v157;
            sub_1AD0040A0(*v157, v158);
            *((_QWORD *)v121 + 33) = v159;
            *((_QWORD *)v121 + 34) = v158;
          }
          v160 = *(int *)(v526 + 24);
          v161 = (_QWORD *)((char *)v121 + v160);
          v162 = (char *)v122 + v160;
          v163 = *(_QWORD *)((char *)v122 + v160 + 8);
          *v161 = *(_QWORD *)((char *)v122 + v160);
          v161[1] = v163;
          swift_retain();
          v164 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
          v165 = (char *)v161 + v164;
          v166 = &v162[v164];
          v167 = sub_1AD63AF28();
          v168 = *(_QWORD *)(v167 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v166, 1, v167))
          {
            v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v165, v166, v167);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v165, 0, 1, v167);
          }
          v22 = v539;
          v170 = *(int *)(v526 + 28);
          v171 = (char *)v121 + v170;
          v172 = (_QWORD *)((char *)v122 + v170);
          v173 = v172[1];
          *(_QWORD *)v171 = *v172;
          *((_QWORD *)v171 + 1) = v173;
          v174 = v172 + 2;
          v175 = v172[3];
          swift_retain();
          if (v175 == 1)
          {
            *((_OWORD *)v171 + 1) = *v174;
          }
          else
          {
            *((_QWORD *)v171 + 2) = *(_QWORD *)v174;
            *((_QWORD *)v171 + 3) = v175;
            swift_bridgeObjectRetain();
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v523 + 56))(v121, 0, 1, v526);
        }
        v31 = v534;
        v36 = v530;
        v176 = v536[20];
        v177 = (char *)v33 + v176;
        v178 = (char *)v34 + v176;
        v179 = *((_QWORD *)v178 + 1);
        if (v179 >> 60 == 15)
        {
          *(_OWORD *)v177 = *(_OWORD *)v178;
        }
        else
        {
          v180 = *(_QWORD *)v178;
          sub_1AD0040A0(*(_QWORD *)v178, *((_QWORD *)v178 + 1));
          *(_QWORD *)v177 = v180;
          *((_QWORD *)v177 + 1) = v179;
        }
        v25 = v532;
        v37 = v527;
        *((_BYTE *)v33 + v536[21]) = *((_BYTE *)v34 + v536[21]);
        *((_BYTE *)v33 + v536[22]) = *((_BYTE *)v34 + v536[22]);
        *((_BYTE *)v33 + v536[23]) = *((_BYTE *)v34 + v536[23]);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v530 + 56))(v33, 0, 1, v536);
      }
      v181 = v22[6];
      v182 = (_QWORD *)((char *)v31 + v181);
      v183 = (_QWORD *)((char *)v25 + v181);
      if (v37((char *)v25 + v181, 1, v35))
      {
        v184 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
        memcpy(v182, v183, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
      }
      else
      {
        v533 = v25;
        v185 = v183[1];
        *v182 = *v183;
        v182[1] = v185;
        v182[2] = v183[2];
        v186 = v183[5];
        *(_OWORD *)(v182 + 3) = *(_OWORD *)(v183 + 3);
        v182[5] = v186;
        v187 = v183 + 6;
        v188 = v183[7];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v188 == 1)
        {
          *((_OWORD *)v182 + 3) = *v187;
        }
        else
        {
          v182[6] = *(_QWORD *)v187;
          v182[7] = v188;
          swift_bridgeObjectRetain();
        }
        v537 = (int *)v35;
        v189 = *(int *)(v35 + 24);
        v190 = (char *)v182 + v189;
        v191 = (char *)v183 + v189;
        v192 = *(_QWORD *)((char *)v183 + v189);
        v535 = v31;
        v540 = v22;
        v531 = v36;
        if (v192)
        {
          v193 = *((_QWORD *)v191 + 1);
          v194 = *((_QWORD *)v191 + 2);
          *(_QWORD *)v190 = v192;
          *((_QWORD *)v190 + 1) = v193;
          *((_QWORD *)v190 + 2) = v194;
          *(_OWORD *)(v190 + 24) = *(_OWORD *)(v191 + 24);
          v195 = *((_QWORD *)v191 + 6);
          *((_QWORD *)v190 + 5) = *((_QWORD *)v191 + 5);
          *((_QWORD *)v190 + 6) = v195;
          *(_OWORD *)(v190 + 56) = *(_OWORD *)(v191 + 56);
          v196 = *((_QWORD *)v191 + 10);
          *((_QWORD *)v190 + 9) = *((_QWORD *)v191 + 9);
          *((_QWORD *)v190 + 10) = v196;
          v197 = *((_QWORD *)v191 + 13);
          *(_OWORD *)(v190 + 88) = *(_OWORD *)(v191 + 88);
          *((_QWORD *)v190 + 13) = v197;
          v198 = v191 + 112;
          v199 = *((_QWORD *)v191 + 15);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (v199 == 1)
          {
            *((_OWORD *)v190 + 7) = *v198;
          }
          else
          {
            *((_QWORD *)v190 + 14) = *(_QWORD *)v198;
            *((_QWORD *)v190 + 15) = v199;
            swift_bridgeObjectRetain();
          }
          *((_QWORD *)v190 + 16) = *((_QWORD *)v191 + 16);
        }
        else
        {
          v200 = *((_OWORD *)v191 + 7);
          *((_OWORD *)v190 + 6) = *((_OWORD *)v191 + 6);
          *((_OWORD *)v190 + 7) = v200;
          *((_QWORD *)v190 + 16) = *((_QWORD *)v191 + 16);
          v201 = *((_OWORD *)v191 + 3);
          *((_OWORD *)v190 + 2) = *((_OWORD *)v191 + 2);
          *((_OWORD *)v190 + 3) = v201;
          v202 = *((_OWORD *)v191 + 5);
          *((_OWORD *)v190 + 4) = *((_OWORD *)v191 + 4);
          *((_OWORD *)v190 + 5) = v202;
          v203 = *((_OWORD *)v191 + 1);
          *(_OWORD *)v190 = *(_OWORD *)v191;
          *((_OWORD *)v190 + 1) = v203;
        }
        v204 = (int *)type metadata accessor for CloudKitUserIdentity(0);
        v205 = v204[5];
        v206 = &v190[v205];
        v207 = &v191[v205];
        v208 = sub_1AD63AE2C();
        v209 = *(_QWORD *)(v208 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v209 + 48))(v207, 1, v208))
        {
          v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v206, v207, v208);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v209 + 56))(v206, 0, 1, v208);
        }
        v211 = v204[6];
        v212 = &v190[v211];
        v213 = &v191[v211];
        v214 = *(_QWORD *)&v191[v211];
        if (v214)
        {
          v215 = *((_QWORD *)v213 + 1);
          *(_QWORD *)v212 = v214;
          *((_QWORD *)v212 + 1) = v215;
          v216 = v213 + 16;
          v217 = *((_QWORD *)v213 + 3);
          swift_retain();
          if (v217 == 1)
          {
            *((_OWORD *)v212 + 1) = *v216;
          }
          else
          {
            *((_QWORD *)v212 + 2) = *(_QWORD *)v216;
            *((_QWORD *)v212 + 3) = v217;
            swift_bridgeObjectRetain();
          }
          v225 = *((_QWORD *)v213 + 5);
          *((_QWORD *)v212 + 4) = *((_QWORD *)v213 + 4);
          *((_QWORD *)v212 + 5) = v225;
          v226 = v213 + 48;
          v227 = *((_QWORD *)v213 + 7);
          swift_retain();
          if (v227 == 1)
          {
            *((_OWORD *)v212 + 3) = *v226;
          }
          else
          {
            *((_QWORD *)v212 + 6) = *(_QWORD *)v226;
            *((_QWORD *)v212 + 7) = v227;
            swift_bridgeObjectRetain();
          }
          v228 = *((_QWORD *)v213 + 8);
          if (v228)
          {
            v229 = *((_QWORD *)v213 + 9);
            v230 = *((_QWORD *)v213 + 10);
            *((_QWORD *)v212 + 8) = v228;
            *((_QWORD *)v212 + 9) = v229;
            *((_QWORD *)v212 + 10) = v230;
            *(_OWORD *)(v212 + 88) = *(_OWORD *)(v213 + 88);
            v231 = *((_QWORD *)v213 + 14);
            *((_QWORD *)v212 + 13) = *((_QWORD *)v213 + 13);
            *((_QWORD *)v212 + 14) = v231;
            *(_OWORD *)(v212 + 120) = *(_OWORD *)(v213 + 120);
            v232 = *((_QWORD *)v213 + 18);
            *((_QWORD *)v212 + 17) = *((_QWORD *)v213 + 17);
            *((_QWORD *)v212 + 18) = v232;
            v233 = *((_QWORD *)v213 + 21);
            *(_OWORD *)(v212 + 152) = *(_OWORD *)(v213 + 152);
            *((_QWORD *)v212 + 21) = v233;
            v522 = v213 + 176;
            v528 = *((_QWORD *)v213 + 23);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            if (v528 == 1)
            {
              *((_OWORD *)v212 + 11) = *v522;
            }
            else
            {
              *((_QWORD *)v212 + 22) = *(_QWORD *)v522;
              *((_QWORD *)v212 + 23) = v528;
              swift_bridgeObjectRetain();
            }
            *((_QWORD *)v212 + 24) = *((_QWORD *)v213 + 24);
          }
          else
          {
            v234 = *((_OWORD *)v213 + 11);
            *((_OWORD *)v212 + 10) = *((_OWORD *)v213 + 10);
            *((_OWORD *)v212 + 11) = v234;
            *((_QWORD *)v212 + 24) = *((_QWORD *)v213 + 24);
            v235 = *((_OWORD *)v213 + 7);
            *((_OWORD *)v212 + 6) = *((_OWORD *)v213 + 6);
            *((_OWORD *)v212 + 7) = v235;
            v236 = *((_OWORD *)v213 + 9);
            *((_OWORD *)v212 + 8) = *((_OWORD *)v213 + 8);
            *((_OWORD *)v212 + 9) = v236;
            v237 = *((_OWORD *)v213 + 5);
            *((_OWORD *)v212 + 4) = *((_OWORD *)v213 + 4);
            *((_OWORD *)v212 + 5) = v237;
          }
          v212[200] = v213[200];
          v238 = (uint64_t *)(v213 + 208);
          v239 = *((_QWORD *)v213 + 27);
          if (v239 >> 60 == 15)
          {
            *((_OWORD *)v212 + 13) = *(_OWORD *)v238;
          }
          else
          {
            v240 = *v238;
            sub_1AD0040A0(*v238, *((_QWORD *)v213 + 27));
            *((_QWORD *)v212 + 26) = v240;
            *((_QWORD *)v212 + 27) = v239;
          }
        }
        else
        {
          v218 = *((_OWORD *)v213 + 11);
          *((_OWORD *)v212 + 10) = *((_OWORD *)v213 + 10);
          *((_OWORD *)v212 + 11) = v218;
          v219 = *((_OWORD *)v213 + 13);
          *((_OWORD *)v212 + 12) = *((_OWORD *)v213 + 12);
          *((_OWORD *)v212 + 13) = v219;
          v220 = *((_OWORD *)v213 + 7);
          *((_OWORD *)v212 + 6) = *((_OWORD *)v213 + 6);
          *((_OWORD *)v212 + 7) = v220;
          v221 = *((_OWORD *)v213 + 9);
          *((_OWORD *)v212 + 8) = *((_OWORD *)v213 + 8);
          *((_OWORD *)v212 + 9) = v221;
          v222 = *((_OWORD *)v213 + 3);
          *((_OWORD *)v212 + 2) = *((_OWORD *)v213 + 2);
          *((_OWORD *)v212 + 3) = v222;
          v223 = *((_OWORD *)v213 + 5);
          *((_OWORD *)v212 + 4) = *((_OWORD *)v213 + 4);
          *((_OWORD *)v212 + 5) = v223;
          v224 = *((_OWORD *)v213 + 1);
          *(_OWORD *)v212 = *(_OWORD *)v213;
          *((_OWORD *)v212 + 1) = v224;
        }
        *(_QWORD *)&v190[v204[7]] = *(_QWORD *)&v191[v204[7]];
        v241 = v204[8];
        v242 = &v190[v241];
        v243 = &v191[v241];
        v244 = *(_QWORD *)&v191[v241 + 8];
        swift_bridgeObjectRetain();
        if (v244 >> 60 == 15)
        {
          *(_OWORD *)v242 = *(_OWORD *)v243;
        }
        else
        {
          v245 = *(_QWORD *)v243;
          sub_1AD0040A0(v245, v244);
          *(_QWORD *)v242 = v245;
          *((_QWORD *)v242 + 1) = v244;
        }
        v246 = v204[9];
        v247 = &v190[v246];
        v248 = &v191[v246];
        v249 = *((_QWORD *)v248 + 1);
        if (v249 >> 60 == 15)
        {
          *(_OWORD *)v247 = *(_OWORD *)v248;
        }
        else
        {
          v250 = *(_QWORD *)v248;
          sub_1AD0040A0(*(_QWORD *)v248, *((_QWORD *)v248 + 1));
          *(_QWORD *)v247 = v250;
          *((_QWORD *)v247 + 1) = v249;
        }
        v190[v204[10]] = v191[v204[10]];
        v190[v204[11]] = v191[v204[11]];
        v251 = v204[12];
        v252 = &v190[v251];
        v253 = &v191[v251];
        v254 = *((_QWORD *)v253 + 1);
        if (v254 >> 60 == 15)
        {
          *(_OWORD *)v252 = *(_OWORD *)v253;
        }
        else
        {
          v255 = *(_QWORD *)v253;
          sub_1AD0040A0(*(_QWORD *)v253, *((_QWORD *)v253 + 1));
          *(_QWORD *)v252 = v255;
          *((_QWORD *)v252 + 1) = v254;
        }
        v22 = v540;
        *(_QWORD *)&v190[v204[13]] = *(_QWORD *)&v191[v204[13]];
        *((_BYTE *)v182 + v537[7]) = *((_BYTE *)v183 + v537[7]);
        *((_BYTE *)v182 + v537[8]) = *((_BYTE *)v183 + v537[8]);
        *((_BYTE *)v182 + v537[9]) = *((_BYTE *)v183 + v537[9]);
        *((_BYTE *)v182 + v537[10]) = *((_BYTE *)v183 + v537[10]);
        *((_BYTE *)v182 + v537[11]) = *((_BYTE *)v183 + v537[11]);
        *((_BYTE *)v182 + v537[12]) = *((_BYTE *)v183 + v537[12]);
        *((_BYTE *)v182 + v537[13]) = *((_BYTE *)v183 + v537[13]);
        *((_BYTE *)v182 + v537[14]) = *((_BYTE *)v183 + v537[14]);
        v256 = v537[15];
        v257 = (char *)v182 + v256;
        v258 = (char *)v183 + v256;
        v259 = *((_QWORD *)v258 + 1);
        if (v259 >> 60 == 15)
        {
          *(_OWORD *)v257 = *(_OWORD *)v258;
        }
        else
        {
          v260 = *(_QWORD *)v258;
          sub_1AD0040A0(*(_QWORD *)v258, *((_QWORD *)v258 + 1));
          *(_QWORD *)v257 = v260;
          *((_QWORD *)v257 + 1) = v259;
        }
        v261 = v537[16];
        v262 = (char *)v182 + v261;
        v263 = (char *)v183 + v261;
        v264 = *((_QWORD *)v263 + 1);
        if (v264 >> 60 == 15)
        {
          *(_OWORD *)v262 = *(_OWORD *)v263;
        }
        else
        {
          v265 = *(_QWORD *)v263;
          sub_1AD0040A0(*(_QWORD *)v263, *((_QWORD *)v263 + 1));
          *(_QWORD *)v262 = v265;
          *((_QWORD *)v262 + 1) = v264;
        }
        *((_BYTE *)v182 + v537[17]) = *((_BYTE *)v183 + v537[17]);
        *((_BYTE *)v182 + v537[18]) = *((_BYTE *)v183 + v537[18]);
        v266 = v537[19];
        v267 = (_DWORD *)((char *)v182 + v266);
        v268 = (_DWORD *)((char *)v183 + v266);
        v269 = type metadata accessor for CloudKitSharingToken();
        v270 = *(_QWORD *)(v269 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v270 + 48))(v268, 1, v269))
        {
          v271 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
          memcpy(v267, v268, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
        }
        else
        {
          v529 = v269;
          *v267 = *v268;
          *((_QWORD *)v267 + 1) = *((_QWORD *)v268 + 1);
          v272 = *((_QWORD *)v268 + 4);
          *((_OWORD *)v267 + 1) = *((_OWORD *)v268 + 1);
          *((_QWORD *)v267 + 4) = v272;
          v273 = (uint64_t *)(v268 + 10);
          v274 = *((_QWORD *)v268 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (v274 >> 60 == 11 || v274 >> 60 == 15)
          {
            *(_OWORD *)(v267 + 10) = *(_OWORD *)v273;
          }
          else
          {
            v275 = *v273;
            sub_1AD0040A0(*v273, v274);
            *((_QWORD *)v267 + 5) = v275;
            *((_QWORD *)v267 + 6) = v274;
          }
          v276 = *((_QWORD *)v268 + 9);
          if (v276)
          {
            v277 = v268[15];
            v267[14] = v268[14];
            v267[15] = v277;
            *((_BYTE *)v267 + 64) = *((_BYTE *)v268 + 64);
            v278 = *((_QWORD *)v268 + 10);
            *((_QWORD *)v267 + 9) = v276;
            *((_QWORD *)v267 + 10) = v278;
            v279 = (uint64_t *)(v268 + 22);
            v280 = *((_QWORD *)v268 + 12);
            swift_retain();
            if (v280 >> 60 == 15)
            {
              *(_OWORD *)(v267 + 22) = *(_OWORD *)v279;
            }
            else
            {
              v282 = *v279;
              sub_1AD0040A0(*v279, v280);
              *((_QWORD *)v267 + 11) = v282;
              *((_QWORD *)v267 + 12) = v280;
            }
          }
          else
          {
            v281 = *(_OWORD *)(v268 + 18);
            *(_OWORD *)(v267 + 14) = *(_OWORD *)(v268 + 14);
            *(_OWORD *)(v267 + 18) = v281;
            *(_OWORD *)(v267 + 22) = *(_OWORD *)(v268 + 22);
          }
          v283 = *((_QWORD *)v268 + 14);
          *((_QWORD *)v267 + 13) = *((_QWORD *)v268 + 13);
          *((_QWORD *)v267 + 14) = v283;
          v284 = (uint64_t *)(v268 + 30);
          v285 = *((_QWORD *)v268 + 16);
          swift_retain();
          if (v285 >> 60 == 15)
          {
            *(_OWORD *)(v267 + 30) = *(_OWORD *)v284;
          }
          else
          {
            v286 = *v284;
            sub_1AD0040A0(*v284, v285);
            *((_QWORD *)v267 + 15) = v286;
            *((_QWORD *)v267 + 16) = v285;
          }
          v287 = *((_QWORD *)v268 + 18);
          *((_QWORD *)v267 + 17) = *((_QWORD *)v268 + 17);
          *((_QWORD *)v267 + 18) = v287;
          v288 = v268 + 38;
          v289 = *((_QWORD *)v268 + 20);
          swift_retain();
          if (v289 >> 60 == 11 || v289 >> 60 == 15)
          {
            *(_OWORD *)(v267 + 38) = *v288;
          }
          else
          {
            v290 = *(_QWORD *)v288;
            sub_1AD0040A0(v290, v289);
            *((_QWORD *)v267 + 19) = v290;
            *((_QWORD *)v267 + 20) = v289;
          }
          v291 = *((_QWORD *)v268 + 21);
          if (v291)
          {
            v292 = *((_QWORD *)v268 + 22);
            *((_QWORD *)v267 + 21) = v291;
            *((_QWORD *)v267 + 22) = v292;
            v293 = (uint64_t *)(v268 + 46);
            v294 = *((_QWORD *)v268 + 24);
            swift_retain();
            if (v294 >> 60 == 15)
            {
              *(_OWORD *)(v267 + 46) = *(_OWORD *)v293;
            }
            else
            {
              v297 = *v293;
              sub_1AD0040A0(*v293, v294);
              *((_QWORD *)v267 + 23) = v297;
              *((_QWORD *)v267 + 24) = v294;
            }
            v267[50] = v268[50];
            v298 = *((_QWORD *)v268 + 27);
            *((_QWORD *)v267 + 26) = *((_QWORD *)v268 + 26);
            *((_QWORD *)v267 + 27) = v298;
            v299 = (uint64_t *)(v268 + 56);
            v300 = *((_QWORD *)v268 + 29);
            swift_retain();
            if (v300 >> 60 == 15)
            {
              *((_OWORD *)v267 + 14) = *(_OWORD *)v299;
            }
            else
            {
              v301 = *v299;
              sub_1AD0040A0(*v299, v300);
              *((_QWORD *)v267 + 28) = v301;
              *((_QWORD *)v267 + 29) = v300;
            }
          }
          else
          {
            v295 = *(_OWORD *)(v268 + 54);
            *(_OWORD *)(v267 + 50) = *(_OWORD *)(v268 + 50);
            *(_OWORD *)(v267 + 54) = v295;
            *((_QWORD *)v267 + 29) = *((_QWORD *)v268 + 29);
            v296 = *(_OWORD *)(v268 + 46);
            *(_OWORD *)(v267 + 42) = *(_OWORD *)(v268 + 42);
            *(_OWORD *)(v267 + 46) = v296;
          }
          v302 = *((_QWORD *)v268 + 32);
          *((_OWORD *)v267 + 15) = *((_OWORD *)v268 + 15);
          *((_QWORD *)v267 + 32) = v302;
          v303 = (uint64_t *)(v268 + 66);
          v304 = *((_QWORD *)v268 + 34);
          swift_bridgeObjectRetain();
          swift_retain();
          v524 = v270;
          if (v304 >> 60 == 11 || v304 >> 60 == 15)
          {
            *(_OWORD *)(v267 + 66) = *(_OWORD *)v303;
          }
          else
          {
            v305 = *v303;
            sub_1AD0040A0(*v303, v304);
            *((_QWORD *)v267 + 33) = v305;
            *((_QWORD *)v267 + 34) = v304;
          }
          v306 = *(int *)(v529 + 24);
          v307 = (_QWORD *)((char *)v267 + v306);
          v308 = (char *)v268 + v306;
          v309 = *(_QWORD *)((char *)v268 + v306 + 8);
          *v307 = *(_QWORD *)((char *)v268 + v306);
          v307[1] = v309;
          swift_retain();
          v310 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
          v311 = (char *)v307 + v310;
          v312 = &v308[v310];
          v313 = sub_1AD63AF28();
          v314 = *(_QWORD *)(v313 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v312, 1, v313))
          {
            v315 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v311, v312, *(_QWORD *)(*(_QWORD *)(v315 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v311, v312, v313);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v314 + 56))(v311, 0, 1, v313);
          }
          v22 = v540;
          v316 = *(int *)(v529 + 28);
          v317 = (char *)v267 + v316;
          v318 = (_QWORD *)((char *)v268 + v316);
          v319 = v318[1];
          *(_QWORD *)v317 = *v318;
          *((_QWORD *)v317 + 1) = v319;
          v320 = v318 + 2;
          v321 = v318[3];
          swift_retain();
          if (v321 == 1)
          {
            *((_OWORD *)v317 + 1) = *v320;
          }
          else
          {
            *((_QWORD *)v317 + 2) = *(_QWORD *)v320;
            *((_QWORD *)v317 + 3) = v321;
            swift_bridgeObjectRetain();
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v524 + 56))(v267, 0, 1, v529);
        }
        v31 = v535;
        v322 = v537[20];
        v323 = (char *)v182 + v322;
        v324 = (char *)v183 + v322;
        v325 = *((_QWORD *)v324 + 1);
        if (v325 >> 60 == 15)
        {
          *(_OWORD *)v323 = *(_OWORD *)v324;
        }
        else
        {
          v326 = *(_QWORD *)v324;
          sub_1AD0040A0(*(_QWORD *)v324, *((_QWORD *)v324 + 1));
          *(_QWORD *)v323 = v326;
          *((_QWORD *)v323 + 1) = v325;
        }
        v25 = v533;
        *((_BYTE *)v182 + v537[21]) = *((_BYTE *)v183 + v537[21]);
        *((_BYTE *)v182 + v537[22]) = *((_BYTE *)v183 + v537[22]);
        *((_BYTE *)v182 + v537[23]) = *((_BYTE *)v183 + v537[23]);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v531 + 56))(v182, 0, 1, v537);
      }
      v327 = v22[7];
      v328 = (char *)v31 + v327;
      v329 = (_QWORD *)((char *)v25 + v327);
      v330 = v329[1];
      *(_QWORD *)v328 = *v329;
      *((_QWORD *)v328 + 1) = v330;
      v331 = v329 + 2;
      v332 = v329[3];
      swift_retain();
      v7 = v545;
      v11 = v547;
      v27 = v548;
      if (v332 == 1)
      {
        *((_OWORD *)v328 + 1) = *v331;
      }
      else
      {
        *((_QWORD *)v328 + 2) = *(_QWORD *)v331;
        *((_QWORD *)v328 + 3) = v332;
        swift_bridgeObjectRetain();
      }
      *((_BYTE *)v31 + v22[8]) = *((_BYTE *)v25 + v22[8]);
      v333 = v22[9];
      v334 = (char *)v31 + v333;
      v335 = (_QWORD *)((char *)v25 + v333);
      v336 = v335[1];
      *(_QWORD *)v334 = *v335;
      *((_QWORD *)v334 + 1) = v336;
      v337 = v335 + 2;
      v338 = v335[3];
      swift_retain();
      if (v338 == 1)
      {
        *((_OWORD *)v334 + 1) = *v337;
      }
      else
      {
        *((_QWORD *)v334 + 2) = *(_QWORD *)v337;
        *((_QWORD *)v334 + 3) = v338;
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)((char *)v31 + v22[10]) = *(_QWORD *)((char *)v25 + v22[10]);
      v339 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v542 + 56);
      swift_bridgeObjectRetain();
      v339(v31, 0, 1, v22);
    }
    v340 = v27[13];
    v341 = (void *)(v11 + v340);
    v342 = (char *)v7 + v340;
    v343 = sub_1AD63B03C();
    v344 = *(_QWORD *)(v343 - 8);
    v345 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v344 + 48);
    if (v345(v342, 1, v343))
    {
      v346 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v341, v342, *(_QWORD *)(*(_QWORD *)(v346 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v344 + 16))(v341, v342, v343);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v344 + 56))(v341, 0, 1, v343);
    }
    v347 = v27[14];
    v348 = (void *)(v11 + v347);
    v349 = (char *)v7 + v347;
    if (v345((char *)v7 + v347, 1, v343))
    {
      v350 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v348, v349, *(_QWORD *)(*(_QWORD *)(v350 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v344 + 16))(v348, v349, v343);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v344 + 56))(v348, 0, 1, v343);
    }
    v351 = v27[15];
    v352 = (void *)(v11 + v351);
    v353 = (char *)v7 + v351;
    if (v345((char *)v7 + v351, 1, v343))
    {
      v354 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v352, v353, *(_QWORD *)(*(_QWORD *)(v354 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v344 + 16))(v352, v353, v343);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v344 + 56))(v352, 0, 1, v343);
    }
    v355 = v27[16];
    v356 = v11 + v355;
    v357 = (_QWORD *)((char *)v7 + v355);
    v358 = v357[1];
    *(_QWORD *)v356 = *v357;
    *(_QWORD *)(v356 + 8) = v358;
    v359 = v357 + 2;
    v360 = v357[3];
    swift_retain();
    if (v360 == 1)
    {
      *(_OWORD *)(v356 + 16) = *v359;
    }
    else
    {
      *(_QWORD *)(v356 + 16) = *(_QWORD *)v359;
      *(_QWORD *)(v356 + 24) = v360;
      swift_bridgeObjectRetain();
    }
    v361 = v27[17];
    v362 = v11 + v361;
    v363 = (_QWORD *)((char *)v7 + v361);
    v364 = v363[1];
    *(_QWORD *)v362 = *v363;
    *(_QWORD *)(v362 + 8) = v364;
    v365 = v363 + 2;
    v366 = v363[3];
    swift_retain();
    if (v366 == 1)
    {
      *(_OWORD *)(v362 + 16) = *v365;
    }
    else
    {
      *(_QWORD *)(v362 + 16) = *(_QWORD *)v365;
      *(_QWORD *)(v362 + 24) = v366;
      swift_bridgeObjectRetain();
    }
    v367 = v27[18];
    v368 = (_QWORD *)(v11 + v367);
    v369 = (_QWORD *)((char *)v7 + v367);
    v370 = (int *)type metadata accessor for CloudKitShareParticipant(0);
    v371 = *((_QWORD *)v370 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v371 + 48))(v369, 1, v370))
    {
      v372 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
      memcpy(v368, v369, *(_QWORD *)(*(_QWORD *)(v372 - 8) + 64));
LABEL_296:
      v515 = v27[20];
      *(_BYTE *)(v11 + v27[19]) = *((_BYTE *)v7 + v27[19]);
      *(_QWORD *)(v11 + v515) = *(_QWORD *)((char *)v7 + v515);
      v516 = v27[22];
      *(_BYTE *)(v11 + v27[21]) = *((_BYTE *)v7 + v27[21]);
      v517 = (_QWORD *)(v11 + v516);
      v518 = (_QWORD *)((char *)v7 + v516);
      v519 = v518[1];
      *v517 = *v518;
      v517[1] = v519;
      v517[2] = v518[2];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      return v11;
    }
    v541 = v371;
    v373 = v369[1];
    *v368 = *v369;
    v368[1] = v373;
    v368[2] = v369[2];
    v374 = v369[5];
    *(_OWORD *)(v368 + 3) = *(_OWORD *)(v369 + 3);
    v368[5] = v374;
    v375 = v369 + 6;
    v376 = v369[7];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v376 == 1)
    {
      *((_OWORD *)v368 + 3) = *v375;
    }
    else
    {
      v368[6] = *(_QWORD *)v375;
      v368[7] = v376;
      swift_bridgeObjectRetain();
    }
    v377 = v370[6];
    v378 = (char *)v368 + v377;
    v379 = (char *)v369 + v377;
    v380 = *(_QWORD *)((char *)v369 + v377);
    v546 = v7;
    if (v380)
    {
      v381 = *((_QWORD *)v379 + 1);
      v382 = *((_QWORD *)v379 + 2);
      *(_QWORD *)v378 = v380;
      *((_QWORD *)v378 + 1) = v381;
      *((_QWORD *)v378 + 2) = v382;
      *(_OWORD *)(v378 + 24) = *(_OWORD *)(v379 + 24);
      v383 = *((_QWORD *)v379 + 6);
      *((_QWORD *)v378 + 5) = *((_QWORD *)v379 + 5);
      *((_QWORD *)v378 + 6) = v383;
      *(_OWORD *)(v378 + 56) = *(_OWORD *)(v379 + 56);
      v384 = *((_QWORD *)v379 + 10);
      *((_QWORD *)v378 + 9) = *((_QWORD *)v379 + 9);
      *((_QWORD *)v378 + 10) = v384;
      v385 = *((_QWORD *)v379 + 13);
      *(_OWORD *)(v378 + 88) = *(_OWORD *)(v379 + 88);
      *((_QWORD *)v378 + 13) = v385;
      v386 = v379 + 112;
      v387 = *((_QWORD *)v379 + 15);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v387 == 1)
      {
        *((_OWORD *)v378 + 7) = *v386;
      }
      else
      {
        *((_QWORD *)v378 + 14) = *(_QWORD *)v386;
        *((_QWORD *)v378 + 15) = v387;
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v378 + 16) = *((_QWORD *)v379 + 16);
    }
    else
    {
      v388 = *((_OWORD *)v379 + 7);
      *((_OWORD *)v378 + 6) = *((_OWORD *)v379 + 6);
      *((_OWORD *)v378 + 7) = v388;
      *((_QWORD *)v378 + 16) = *((_QWORD *)v379 + 16);
      v389 = *((_OWORD *)v379 + 3);
      *((_OWORD *)v378 + 2) = *((_OWORD *)v379 + 2);
      *((_OWORD *)v378 + 3) = v389;
      v390 = *((_OWORD *)v379 + 5);
      *((_OWORD *)v378 + 4) = *((_OWORD *)v379 + 4);
      *((_OWORD *)v378 + 5) = v390;
      v391 = *((_OWORD *)v379 + 1);
      *(_OWORD *)v378 = *(_OWORD *)v379;
      *((_OWORD *)v378 + 1) = v391;
    }
    v392 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v393 = v392[5];
    v394 = &v378[v393];
    v395 = &v379[v393];
    v396 = sub_1AD63AE2C();
    v397 = *(_QWORD *)(v396 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v397 + 48))(v395, 1, v396))
    {
      v398 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v394, v395, *(_QWORD *)(*(_QWORD *)(v398 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v397 + 16))(v394, v395, v396);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v397 + 56))(v394, 0, 1, v396);
    }
    v399 = v392[6];
    v400 = &v378[v399];
    v401 = &v379[v399];
    v402 = *(_QWORD *)&v379[v399];
    if (v402)
    {
      v403 = *((_QWORD *)v401 + 1);
      *(_QWORD *)v400 = v402;
      *((_QWORD *)v400 + 1) = v403;
      v404 = v401 + 16;
      v405 = *((_QWORD *)v401 + 3);
      swift_retain();
      if (v405 == 1)
      {
        *((_OWORD *)v400 + 1) = *v404;
      }
      else
      {
        *((_QWORD *)v400 + 2) = *(_QWORD *)v404;
        *((_QWORD *)v400 + 3) = v405;
        swift_bridgeObjectRetain();
      }
      v413 = *((_QWORD *)v401 + 5);
      *((_QWORD *)v400 + 4) = *((_QWORD *)v401 + 4);
      *((_QWORD *)v400 + 5) = v413;
      v414 = v401 + 48;
      v415 = *((_QWORD *)v401 + 7);
      swift_retain();
      if (v415 == 1)
      {
        *((_OWORD *)v400 + 3) = *v414;
      }
      else
      {
        *((_QWORD *)v400 + 6) = *(_QWORD *)v414;
        *((_QWORD *)v400 + 7) = v415;
        swift_bridgeObjectRetain();
      }
      v416 = *((_QWORD *)v401 + 8);
      if (v416)
      {
        v417 = *((_QWORD *)v401 + 9);
        v418 = *((_QWORD *)v401 + 10);
        *((_QWORD *)v400 + 8) = v416;
        *((_QWORD *)v400 + 9) = v417;
        *((_QWORD *)v400 + 10) = v418;
        *(_OWORD *)(v400 + 88) = *(_OWORD *)(v401 + 88);
        v419 = *((_QWORD *)v401 + 14);
        *((_QWORD *)v400 + 13) = *((_QWORD *)v401 + 13);
        *((_QWORD *)v400 + 14) = v419;
        *(_OWORD *)(v400 + 120) = *(_OWORD *)(v401 + 120);
        v420 = *((_QWORD *)v401 + 18);
        *((_QWORD *)v400 + 17) = *((_QWORD *)v401 + 17);
        *((_QWORD *)v400 + 18) = v420;
        v421 = *((_QWORD *)v401 + 21);
        *(_OWORD *)(v400 + 152) = *(_OWORD *)(v401 + 152);
        *((_QWORD *)v400 + 21) = v421;
        v543 = v401 + 176;
        v538 = *((_QWORD *)v401 + 23);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v538 == 1)
        {
          *((_OWORD *)v400 + 11) = *v543;
        }
        else
        {
          *((_QWORD *)v400 + 22) = *(_QWORD *)v543;
          *((_QWORD *)v400 + 23) = v538;
          swift_bridgeObjectRetain();
        }
        *((_QWORD *)v400 + 24) = *((_QWORD *)v401 + 24);
      }
      else
      {
        v422 = *((_OWORD *)v401 + 11);
        *((_OWORD *)v400 + 10) = *((_OWORD *)v401 + 10);
        *((_OWORD *)v400 + 11) = v422;
        *((_QWORD *)v400 + 24) = *((_QWORD *)v401 + 24);
        v423 = *((_OWORD *)v401 + 7);
        *((_OWORD *)v400 + 6) = *((_OWORD *)v401 + 6);
        *((_OWORD *)v400 + 7) = v423;
        v424 = *((_OWORD *)v401 + 9);
        *((_OWORD *)v400 + 8) = *((_OWORD *)v401 + 8);
        *((_OWORD *)v400 + 9) = v424;
        v425 = *((_OWORD *)v401 + 5);
        *((_OWORD *)v400 + 4) = *((_OWORD *)v401 + 4);
        *((_OWORD *)v400 + 5) = v425;
      }
      v400[200] = v401[200];
      v426 = (uint64_t *)(v401 + 208);
      v427 = *((_QWORD *)v401 + 27);
      if (v427 >> 60 == 15)
      {
        *((_OWORD *)v400 + 13) = *(_OWORD *)v426;
      }
      else
      {
        v428 = *v426;
        sub_1AD0040A0(*v426, v427);
        *((_QWORD *)v400 + 26) = v428;
        *((_QWORD *)v400 + 27) = v427;
      }
    }
    else
    {
      v406 = *((_OWORD *)v401 + 11);
      *((_OWORD *)v400 + 10) = *((_OWORD *)v401 + 10);
      *((_OWORD *)v400 + 11) = v406;
      v407 = *((_OWORD *)v401 + 13);
      *((_OWORD *)v400 + 12) = *((_OWORD *)v401 + 12);
      *((_OWORD *)v400 + 13) = v407;
      v408 = *((_OWORD *)v401 + 7);
      *((_OWORD *)v400 + 6) = *((_OWORD *)v401 + 6);
      *((_OWORD *)v400 + 7) = v408;
      v409 = *((_OWORD *)v401 + 9);
      *((_OWORD *)v400 + 8) = *((_OWORD *)v401 + 8);
      *((_OWORD *)v400 + 9) = v409;
      v410 = *((_OWORD *)v401 + 3);
      *((_OWORD *)v400 + 2) = *((_OWORD *)v401 + 2);
      *((_OWORD *)v400 + 3) = v410;
      v411 = *((_OWORD *)v401 + 5);
      *((_OWORD *)v400 + 4) = *((_OWORD *)v401 + 4);
      *((_OWORD *)v400 + 5) = v411;
      v412 = *((_OWORD *)v401 + 1);
      *(_OWORD *)v400 = *(_OWORD *)v401;
      *((_OWORD *)v400 + 1) = v412;
    }
    *(_QWORD *)&v378[v392[7]] = *(_QWORD *)&v379[v392[7]];
    v429 = v392[8];
    v430 = &v378[v429];
    v431 = &v379[v429];
    v432 = *(_QWORD *)&v379[v429 + 8];
    swift_bridgeObjectRetain();
    if (v432 >> 60 == 15)
    {
      *(_OWORD *)v430 = *(_OWORD *)v431;
    }
    else
    {
      v433 = *(_QWORD *)v431;
      sub_1AD0040A0(v433, v432);
      *(_QWORD *)v430 = v433;
      *((_QWORD *)v430 + 1) = v432;
    }
    v434 = v392[9];
    v435 = &v378[v434];
    v436 = &v379[v434];
    v437 = *((_QWORD *)v436 + 1);
    if (v437 >> 60 == 15)
    {
      *(_OWORD *)v435 = *(_OWORD *)v436;
    }
    else
    {
      v438 = *(_QWORD *)v436;
      sub_1AD0040A0(*(_QWORD *)v436, *((_QWORD *)v436 + 1));
      *(_QWORD *)v435 = v438;
      *((_QWORD *)v435 + 1) = v437;
    }
    v378[v392[10]] = v379[v392[10]];
    v378[v392[11]] = v379[v392[11]];
    v439 = v392[12];
    v440 = &v378[v439];
    v441 = &v379[v439];
    v442 = *((_QWORD *)v441 + 1);
    if (v442 >> 60 == 15)
    {
      *(_OWORD *)v440 = *(_OWORD *)v441;
    }
    else
    {
      v443 = *(_QWORD *)v441;
      sub_1AD0040A0(*(_QWORD *)v441, *((_QWORD *)v441 + 1));
      *(_QWORD *)v440 = v443;
      *((_QWORD *)v440 + 1) = v442;
    }
    *(_QWORD *)&v378[v392[13]] = *(_QWORD *)&v379[v392[13]];
    *((_BYTE *)v368 + v370[7]) = *((_BYTE *)v369 + v370[7]);
    *((_BYTE *)v368 + v370[8]) = *((_BYTE *)v369 + v370[8]);
    *((_BYTE *)v368 + v370[9]) = *((_BYTE *)v369 + v370[9]);
    *((_BYTE *)v368 + v370[10]) = *((_BYTE *)v369 + v370[10]);
    *((_BYTE *)v368 + v370[11]) = *((_BYTE *)v369 + v370[11]);
    *((_BYTE *)v368 + v370[12]) = *((_BYTE *)v369 + v370[12]);
    *((_BYTE *)v368 + v370[13]) = *((_BYTE *)v369 + v370[13]);
    *((_BYTE *)v368 + v370[14]) = *((_BYTE *)v369 + v370[14]);
    v444 = v370[15];
    v445 = (char *)v368 + v444;
    v446 = (char *)v369 + v444;
    v447 = *((_QWORD *)v446 + 1);
    if (v447 >> 60 == 15)
    {
      *(_OWORD *)v445 = *(_OWORD *)v446;
    }
    else
    {
      v448 = *(_QWORD *)v446;
      sub_1AD0040A0(*(_QWORD *)v446, *((_QWORD *)v446 + 1));
      *(_QWORD *)v445 = v448;
      *((_QWORD *)v445 + 1) = v447;
    }
    v449 = v370[16];
    v450 = (char *)v368 + v449;
    v451 = (char *)v369 + v449;
    v452 = *((_QWORD *)v451 + 1);
    if (v452 >> 60 == 15)
    {
      *(_OWORD *)v450 = *(_OWORD *)v451;
    }
    else
    {
      v453 = *(_QWORD *)v451;
      sub_1AD0040A0(*(_QWORD *)v451, *((_QWORD *)v451 + 1));
      *(_QWORD *)v450 = v453;
      *((_QWORD *)v450 + 1) = v452;
    }
    *((_BYTE *)v368 + v370[17]) = *((_BYTE *)v369 + v370[17]);
    *((_BYTE *)v368 + v370[18]) = *((_BYTE *)v369 + v370[18]);
    v454 = v370[19];
    v455 = (_DWORD *)((char *)v368 + v454);
    v456 = (_DWORD *)((char *)v369 + v454);
    v457 = type metadata accessor for CloudKitSharingToken();
    v458 = *(_QWORD *)(v457 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v458 + 48))(v456, 1, v457))
    {
      v459 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      memcpy(v455, v456, *(_QWORD *)(*(_QWORD *)(v459 - 8) + 64));
      v7 = v546;
      v27 = v548;
LABEL_292:
      v510 = v370[20];
      v511 = (char *)v368 + v510;
      v512 = (char *)v369 + v510;
      v513 = *((_QWORD *)v512 + 1);
      if (v513 >> 60 == 15)
      {
        *(_OWORD *)v511 = *(_OWORD *)v512;
      }
      else
      {
        v514 = *(_QWORD *)v512;
        sub_1AD0040A0(*(_QWORD *)v512, *((_QWORD *)v512 + 1));
        *(_QWORD *)v511 = v514;
        *((_QWORD *)v511 + 1) = v513;
      }
      v11 = v547;
      *((_BYTE *)v368 + v370[21]) = *((_BYTE *)v369 + v370[21]);
      *((_BYTE *)v368 + v370[22]) = *((_BYTE *)v369 + v370[22]);
      *((_BYTE *)v368 + v370[23]) = *((_BYTE *)v369 + v370[23]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v541 + 56))(v368, 0, 1, v370);
      goto LABEL_296;
    }
    v544 = v457;
    *v455 = *v456;
    *((_QWORD *)v455 + 1) = *((_QWORD *)v456 + 1);
    v460 = *((_QWORD *)v456 + 4);
    *((_OWORD *)v455 + 1) = *((_OWORD *)v456 + 1);
    *((_QWORD *)v455 + 4) = v460;
    v461 = (uint64_t *)(v456 + 10);
    v462 = *((_QWORD *)v456 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v462 >> 60 == 11 || v462 >> 60 == 15)
    {
      *(_OWORD *)(v455 + 10) = *(_OWORD *)v461;
      v463 = *((_QWORD *)v456 + 9);
      if (v463)
        goto LABEL_261;
    }
    else
    {
      v469 = *v461;
      sub_1AD0040A0(*v461, v462);
      *((_QWORD *)v455 + 5) = v469;
      *((_QWORD *)v455 + 6) = v462;
      v463 = *((_QWORD *)v456 + 9);
      if (v463)
      {
LABEL_261:
        v464 = v456[15];
        v455[14] = v456[14];
        v455[15] = v464;
        *((_BYTE *)v455 + 64) = *((_BYTE *)v456 + 64);
        v465 = *((_QWORD *)v456 + 10);
        *((_QWORD *)v455 + 9) = v463;
        *((_QWORD *)v455 + 10) = v465;
        v466 = (uint64_t *)(v456 + 22);
        v467 = *((_QWORD *)v456 + 12);
        swift_retain();
        if (v467 >> 60 == 15)
        {
          *(_OWORD *)(v455 + 22) = *(_OWORD *)v466;
        }
        else
        {
          v468 = *v466;
          sub_1AD0040A0(*v466, v467);
          *((_QWORD *)v455 + 11) = v468;
          *((_QWORD *)v455 + 12) = v467;
        }
LABEL_266:
        v471 = *((_QWORD *)v456 + 14);
        *((_QWORD *)v455 + 13) = *((_QWORD *)v456 + 13);
        *((_QWORD *)v455 + 14) = v471;
        v472 = (uint64_t *)(v456 + 30);
        v473 = *((_QWORD *)v456 + 16);
        swift_retain();
        if (v473 >> 60 == 15)
        {
          *(_OWORD *)(v455 + 30) = *(_OWORD *)v472;
        }
        else
        {
          v474 = *v472;
          sub_1AD0040A0(*v472, v473);
          *((_QWORD *)v455 + 15) = v474;
          *((_QWORD *)v455 + 16) = v473;
        }
        v475 = *((_QWORD *)v456 + 18);
        *((_QWORD *)v455 + 17) = *((_QWORD *)v456 + 17);
        *((_QWORD *)v455 + 18) = v475;
        v476 = v456 + 38;
        v477 = *((_QWORD *)v456 + 20);
        swift_retain();
        if (v477 >> 60 == 11 || v477 >> 60 == 15)
        {
          *(_OWORD *)(v455 + 38) = *v476;
        }
        else
        {
          v478 = *(_QWORD *)v476;
          sub_1AD0040A0(v478, v477);
          *((_QWORD *)v455 + 19) = v478;
          *((_QWORD *)v455 + 20) = v477;
        }
        v479 = *((_QWORD *)v456 + 21);
        if (v479)
        {
          v480 = *((_QWORD *)v456 + 22);
          *((_QWORD *)v455 + 21) = v479;
          *((_QWORD *)v455 + 22) = v480;
          v481 = (uint64_t *)(v456 + 46);
          v482 = *((_QWORD *)v456 + 24);
          swift_retain();
          if (v482 >> 60 == 15)
          {
            *(_OWORD *)(v455 + 46) = *(_OWORD *)v481;
          }
          else
          {
            v485 = *v481;
            sub_1AD0040A0(*v481, v482);
            *((_QWORD *)v455 + 23) = v485;
            *((_QWORD *)v455 + 24) = v482;
          }
          v455[50] = v456[50];
          v486 = *((_QWORD *)v456 + 27);
          *((_QWORD *)v455 + 26) = *((_QWORD *)v456 + 26);
          *((_QWORD *)v455 + 27) = v486;
          v487 = (uint64_t *)(v456 + 56);
          v488 = *((_QWORD *)v456 + 29);
          swift_retain();
          if (v488 >> 60 == 15)
          {
            *((_OWORD *)v455 + 14) = *(_OWORD *)v487;
          }
          else
          {
            v489 = *v487;
            sub_1AD0040A0(*v487, v488);
            *((_QWORD *)v455 + 28) = v489;
            *((_QWORD *)v455 + 29) = v488;
          }
        }
        else
        {
          v483 = *(_OWORD *)(v456 + 54);
          *(_OWORD *)(v455 + 50) = *(_OWORD *)(v456 + 50);
          *(_OWORD *)(v455 + 54) = v483;
          *((_QWORD *)v455 + 29) = *((_QWORD *)v456 + 29);
          v484 = *(_OWORD *)(v456 + 46);
          *(_OWORD *)(v455 + 42) = *(_OWORD *)(v456 + 42);
          *(_OWORD *)(v455 + 46) = v484;
        }
        v490 = *((_QWORD *)v456 + 32);
        *((_OWORD *)v455 + 15) = *((_OWORD *)v456 + 15);
        *((_QWORD *)v455 + 32) = v490;
        v491 = (uint64_t *)(v456 + 66);
        v492 = *((_QWORD *)v456 + 34);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v492 >> 60 == 11 || v492 >> 60 == 15)
        {
          *(_OWORD *)(v455 + 66) = *(_OWORD *)v491;
        }
        else
        {
          v493 = *v491;
          sub_1AD0040A0(*v491, v492);
          *((_QWORD *)v455 + 33) = v493;
          *((_QWORD *)v455 + 34) = v492;
        }
        v494 = *(int *)(v544 + 24);
        v495 = (_QWORD *)((char *)v455 + v494);
        v496 = (char *)v456 + v494;
        v497 = *(_QWORD *)((char *)v456 + v494 + 8);
        *v495 = *(_QWORD *)((char *)v456 + v494);
        v495[1] = v497;
        swift_retain();
        v498 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v499 = (char *)v495 + v498;
        v500 = &v496[v498];
        v501 = sub_1AD63AF28();
        v502 = *(_QWORD *)(v501 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v502 + 48))(v500, 1, v501))
        {
          v503 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v499, v500, *(_QWORD *)(*(_QWORD *)(v503 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v502 + 16))(v499, v500, v501);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v502 + 56))(v499, 0, 1, v501);
        }
        v504 = *(int *)(v544 + 28);
        v505 = (char *)v455 + v504;
        v506 = (_QWORD *)((char *)v456 + v504);
        v507 = v506[1];
        *(_QWORD *)v505 = *v506;
        *((_QWORD *)v505 + 1) = v507;
        v508 = v506 + 2;
        v509 = v506[3];
        swift_retain();
        if (v509 == 1)
        {
          *((_OWORD *)v505 + 1) = *v508;
        }
        else
        {
          *((_QWORD *)v505 + 2) = *(_QWORD *)v508;
          *((_QWORD *)v505 + 3) = v509;
          swift_bridgeObjectRetain();
        }
        v7 = v546;
        v27 = v548;
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v458 + 56))(v455, 0, 1, v544);
        goto LABEL_292;
      }
    }
    v470 = *(_OWORD *)(v456 + 18);
    *(_OWORD *)(v455 + 14) = *(_OWORD *)(v456 + 14);
    *(_OWORD *)(v455 + 18) = v470;
    *(_OWORD *)(v455 + 22) = *(_OWORD *)(v456 + 22);
    goto LABEL_266;
  }
  *(_QWORD *)a1 = v5;
  v11 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v11;
}

uint64_t sub_1AD304968(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(_QWORD, _QWORD, _QWORD);
  _QWORD *v9;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  int *v50;
  unint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  _QWORD *v91;
  int *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  uint64_t *v98;
  unint64_t v99;
  uint64_t *v100;
  unint64_t v101;
  uint64_t *v102;
  unint64_t v103;
  uint64_t *v104;
  unint64_t v105;
  uint64_t *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t *v122;
  unint64_t v123;
  unsigned int (*v125)(_QWORD, _QWORD, _QWORD);
  int *v126;
  int *v127;

  swift_release();
  if (*(_QWORD *)(a1 + 24) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 56) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[12];
  v5 = (int *)type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_release();
    if (*(_QWORD *)(v4 + 24) != 1)
      swift_bridgeObjectRelease();
    v6 = v4 + v5[5];
    v7 = type metadata accessor for CloudKitShareParticipant(0);
    v8 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v7 - 8) + 48);
    if (!v8(v6, 1, v7))
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if (*(_QWORD *)(v6 + 56) != 1)
        swift_bridgeObjectRelease();
      v125 = v8;
      v126 = (int *)v7;
      v9 = (_QWORD *)(v6 + *(int *)(v7 + 24));
      if (*v9)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        if (v9[15] != 1)
          swift_bridgeObjectRelease();
      }
      v10 = (int *)type metadata accessor for CloudKitUserIdentity(0);
      v11 = (char *)v9 + v10[5];
      v12 = sub_1AD63AE2C();
      v13 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
      v14 = (_QWORD *)((char *)v9 + v10[6]);
      v7 = (uint64_t)v126;
      if (*v14)
      {
        swift_release();
        if (v14[3] != 1)
          swift_bridgeObjectRelease();
        swift_release();
        if (v14[7] != 1)
          swift_bridgeObjectRelease();
        if (v14[8])
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if (v14[23] != 1)
            swift_bridgeObjectRelease();
        }
        v15 = v14[27];
        if (v15 >> 60 != 15)
          sub_1AD00412C(v14[26], v15);
      }
      swift_bridgeObjectRelease();
      v16 = (_QWORD *)((char *)v9 + v10[8]);
      v17 = v16[1];
      if (v17 >> 60 != 15)
        sub_1AD00412C(*v16, v17);
      v18 = (_QWORD *)((char *)v9 + v10[9]);
      v19 = v18[1];
      if (v19 >> 60 != 15)
        sub_1AD00412C(*v18, v19);
      v20 = (_QWORD *)((char *)v9 + v10[12]);
      v21 = v20[1];
      if (v21 >> 60 != 15)
        sub_1AD00412C(*v20, v21);
      v22 = (uint64_t *)(v6 + v126[15]);
      v23 = v22[1];
      if (v23 >> 60 != 15)
        sub_1AD00412C(*v22, v23);
      v24 = (uint64_t *)(v6 + v126[16]);
      v25 = v24[1];
      if (v25 >> 60 != 15)
        sub_1AD00412C(*v24, v25);
      v26 = (uint64_t *)(v6 + v126[19]);
      v27 = type metadata accessor for CloudKitSharingToken();
      if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v28 = v26[6];
        if (v28 >> 60 != 15 && (v28 & 0xF000000000000000) != 0xB000000000000000)
          sub_1AD00412C(v26[5], v28);
        if (v26[9])
        {
          swift_release();
          v29 = v26[12];
          if (v29 >> 60 != 15)
            sub_1AD00412C(v26[11], v29);
        }
        swift_release();
        v30 = v26[16];
        if (v30 >> 60 != 15)
          sub_1AD00412C(v26[15], v30);
        swift_release();
        v31 = v26[20];
        if (v31 >> 60 != 15 && (v31 & 0xF000000000000000) != 0xB000000000000000)
          sub_1AD00412C(v26[19], v31);
        if (v26[21])
        {
          swift_release();
          v32 = v26[24];
          if (v32 >> 60 != 15)
            sub_1AD00412C(v26[23], v32);
          swift_release();
          v33 = v26[29];
          if (v33 >> 60 != 15)
            sub_1AD00412C(v26[28], v33);
        }
        swift_bridgeObjectRelease();
        swift_release();
        v34 = v26[34];
        if (v34 >> 60 != 15 && (v34 & 0xF000000000000000) != 0xB000000000000000)
          sub_1AD00412C(v26[33], v34);
        v35 = (char *)v26 + *(int *)(v27 + 24);
        swift_release();
        v36 = &v35[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28)];
        v37 = sub_1AD63AF28();
        v38 = *(_QWORD *)(v37 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
          (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
        v39 = (char *)v26 + *(int *)(v27 + 28);
        swift_release();
        v40 = *((_QWORD *)v39 + 3);
        v7 = (uint64_t)v126;
        if (v40 != 1)
          swift_bridgeObjectRelease();
      }
      v41 = (uint64_t *)(v6 + *(int *)(v7 + 80));
      v42 = v41[1];
      v8 = v125;
      if (v42 >> 60 != 15)
        sub_1AD00412C(*v41, v42);
    }
    v43 = v4 + v5[6];
    if (!v8(v43, 1, v7))
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if (*(_QWORD *)(v43 + 56) != 1)
        swift_bridgeObjectRelease();
      v127 = (int *)v7;
      v44 = (_QWORD *)(v43 + *(int *)(v7 + 24));
      if (*v44)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        if (v44[15] != 1)
          swift_bridgeObjectRelease();
      }
      v45 = (int *)type metadata accessor for CloudKitUserIdentity(0);
      v46 = (char *)v44 + v45[5];
      v47 = sub_1AD63AE2C();
      v48 = *(_QWORD *)(v47 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
        (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
      v49 = (_QWORD *)((char *)v44 + v45[6]);
      v50 = v127;
      if (*v49)
      {
        swift_release();
        if (v49[3] != 1)
          swift_bridgeObjectRelease();
        swift_release();
        if (v49[7] != 1)
          swift_bridgeObjectRelease();
        if (v49[8])
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if (v49[23] != 1)
            swift_bridgeObjectRelease();
        }
        v51 = v49[27];
        if (v51 >> 60 != 15)
          sub_1AD00412C(v49[26], v51);
      }
      swift_bridgeObjectRelease();
      v52 = (_QWORD *)((char *)v44 + v45[8]);
      v53 = v52[1];
      if (v53 >> 60 != 15)
        sub_1AD00412C(*v52, v53);
      v54 = (_QWORD *)((char *)v44 + v45[9]);
      v55 = v54[1];
      if (v55 >> 60 != 15)
        sub_1AD00412C(*v54, v55);
      v56 = (_QWORD *)((char *)v44 + v45[12]);
      v57 = v56[1];
      if (v57 >> 60 != 15)
        sub_1AD00412C(*v56, v57);
      v58 = (uint64_t *)(v43 + v127[15]);
      v59 = v58[1];
      if (v59 >> 60 != 15)
        sub_1AD00412C(*v58, v59);
      v60 = (uint64_t *)(v43 + v127[16]);
      v61 = v60[1];
      if (v61 >> 60 != 15)
        sub_1AD00412C(*v60, v61);
      v62 = (uint64_t *)(v43 + v127[19]);
      v63 = type metadata accessor for CloudKitSharingToken();
      if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v62, 1, v63))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v64 = v62[6];
        if (v64 >> 60 != 15 && (v64 & 0xF000000000000000) != 0xB000000000000000)
          sub_1AD00412C(v62[5], v64);
        if (v62[9])
        {
          swift_release();
          v65 = v62[12];
          if (v65 >> 60 != 15)
            sub_1AD00412C(v62[11], v65);
        }
        swift_release();
        v66 = v62[16];
        if (v66 >> 60 != 15)
          sub_1AD00412C(v62[15], v66);
        swift_release();
        v67 = v62[20];
        if (v67 >> 60 != 15 && (v67 & 0xF000000000000000) != 0xB000000000000000)
          sub_1AD00412C(v62[19], v67);
        if (v62[21])
        {
          swift_release();
          v68 = v62[24];
          if (v68 >> 60 != 15)
            sub_1AD00412C(v62[23], v68);
          swift_release();
          v69 = v62[29];
          if (v69 >> 60 != 15)
            sub_1AD00412C(v62[28], v69);
        }
        swift_bridgeObjectRelease();
        swift_release();
        v70 = v62[34];
        if (v70 >> 60 != 15 && (v70 & 0xF000000000000000) != 0xB000000000000000)
          sub_1AD00412C(v62[33], v70);
        v71 = (char *)v62 + *(int *)(v63 + 24);
        swift_release();
        v72 = &v71[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28)];
        v73 = sub_1AD63AF28();
        v74 = *(_QWORD *)(v73 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
          (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
        v75 = (char *)v62 + *(int *)(v63 + 28);
        swift_release();
        v76 = *((_QWORD *)v75 + 3);
        v50 = v127;
        if (v76 != 1)
          swift_bridgeObjectRelease();
      }
      v77 = (uint64_t *)(v43 + v50[20]);
      v78 = v77[1];
      if (v78 >> 60 != 15)
        sub_1AD00412C(*v77, v78);
    }
    v79 = v4 + v5[7];
    swift_release();
    if (*(_QWORD *)(v79 + 24) != 1)
      swift_bridgeObjectRelease();
    v80 = v4 + v5[9];
    swift_release();
    if (*(_QWORD *)(v80 + 24) != 1)
      swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v81 = a1 + a2[13];
  v82 = sub_1AD63B03C();
  v83 = *(_QWORD *)(v82 - 8);
  v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
  if (!v84(v81, 1, v82))
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v82);
  v85 = a1 + a2[14];
  if (!v84(v85, 1, v82))
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v85, v82);
  v86 = a1 + a2[15];
  if (!v84(v86, 1, v82))
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v86, v82);
  v87 = a1 + a2[16];
  swift_release();
  if (*(_QWORD *)(v87 + 24) != 1)
    swift_bridgeObjectRelease();
  v88 = a1 + a2[17];
  swift_release();
  if (*(_QWORD *)(v88 + 24) != 1)
    swift_bridgeObjectRelease();
  v89 = a1 + a2[18];
  v90 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v90 - 1) + 48))(v89, 1, v90))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(v89 + 56) != 1)
      swift_bridgeObjectRelease();
    v91 = (_QWORD *)(v89 + v90[6]);
    if (*v91)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if (v91[15] != 1)
        swift_bridgeObjectRelease();
    }
    v92 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v93 = (char *)v91 + v92[5];
    v94 = sub_1AD63AE2C();
    v95 = *(_QWORD *)(v94 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
      (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v94);
    v96 = (_QWORD *)((char *)v91 + v92[6]);
    if (*v96)
    {
      swift_release();
      if (v96[3] != 1)
        swift_bridgeObjectRelease();
      swift_release();
      if (v96[7] != 1)
        swift_bridgeObjectRelease();
      if (v96[8])
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        if (v96[23] != 1)
          swift_bridgeObjectRelease();
      }
      v97 = v96[27];
      if (v97 >> 60 != 15)
        sub_1AD00412C(v96[26], v97);
    }
    swift_bridgeObjectRelease();
    v98 = (_QWORD *)((char *)v91 + v92[8]);
    v99 = v98[1];
    if (v99 >> 60 != 15)
      sub_1AD00412C(*v98, v99);
    v100 = (_QWORD *)((char *)v91 + v92[9]);
    v101 = v100[1];
    if (v101 >> 60 != 15)
      sub_1AD00412C(*v100, v101);
    v102 = (_QWORD *)((char *)v91 + v92[12]);
    v103 = v102[1];
    if (v103 >> 60 != 15)
      sub_1AD00412C(*v102, v103);
    v104 = (uint64_t *)(v89 + v90[15]);
    v105 = v104[1];
    if (v105 >> 60 != 15)
      sub_1AD00412C(*v104, v105);
    v106 = (uint64_t *)(v89 + v90[16]);
    v107 = v106[1];
    if (v107 >> 60 != 15)
      sub_1AD00412C(*v106, v107);
    v108 = (uint64_t *)(v89 + v90[19]);
    v109 = type metadata accessor for CloudKitSharingToken();
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 48))(v108, 1, v109))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v110 = v108[6];
      if (v110 >> 60 != 15 && (v110 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(v108[5], v110);
      if (v108[9])
      {
        swift_release();
        v111 = v108[12];
        if (v111 >> 60 != 15)
          sub_1AD00412C(v108[11], v111);
      }
      swift_release();
      v112 = v108[16];
      if (v112 >> 60 != 15)
        sub_1AD00412C(v108[15], v112);
      swift_release();
      v113 = v108[20];
      if (v113 >> 60 != 15 && (v113 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(v108[19], v113);
      if (v108[21])
      {
        swift_release();
        v114 = v108[24];
        if (v114 >> 60 != 15)
          sub_1AD00412C(v108[23], v114);
        swift_release();
        v115 = v108[29];
        if (v115 >> 60 != 15)
          sub_1AD00412C(v108[28], v115);
      }
      swift_bridgeObjectRelease();
      swift_release();
      v116 = v108[34];
      if (v116 >> 60 != 15 && (v116 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(v108[33], v116);
      v117 = (char *)v108 + *(int *)(v109 + 24);
      swift_release();
      v118 = &v117[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28)];
      v119 = sub_1AD63AF28();
      v120 = *(_QWORD *)(v119 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
        (*(void (**)(char *, uint64_t))(v120 + 8))(v118, v119);
      v121 = (char *)v108 + *(int *)(v109 + 28);
      swift_release();
      if (*((_QWORD *)v121 + 3) != 1)
        swift_bridgeObjectRelease();
    }
    v122 = (uint64_t *)(v89 + v90[20]);
    v123 = v122[1];
    if (v123 >> 60 != 15)
      sub_1AD00412C(*v122, v123);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD305890(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int *v18;
  uint64_t v19;
  unsigned int (*v20)(_QWORD *, uint64_t, int *);
  _QWORD *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  _QWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  int *v31;
  uint64_t v32;
  unsigned int (*v33)(_QWORD *, uint64_t, int *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  _OWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  unint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t *v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  uint64_t *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  unint64_t v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  _OWORD *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _OWORD *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _OWORD *v194;
  uint64_t v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  int *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  _OWORD *v212;
  uint64_t v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  uint64_t v221;
  _OWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  uint64_t *v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t *v269;
  unint64_t v270;
  uint64_t v271;
  int v272;
  uint64_t v273;
  uint64_t *v274;
  unint64_t v275;
  uint64_t v276;
  uint64_t v277;
  __int128 v278;
  uint64_t v279;
  uint64_t *v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t *v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t *v289;
  unint64_t v290;
  __int128 v291;
  __int128 v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t *v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t *v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  char *v314;
  uint64_t v315;
  _OWORD *v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  unint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  _QWORD *v325;
  uint64_t v326;
  _OWORD *v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  _QWORD *v331;
  uint64_t v332;
  _OWORD *v333;
  uint64_t v334;
  void (*v335)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v336;
  void *v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  unsigned int (*v341)(char *, uint64_t, uint64_t);
  uint64_t v342;
  uint64_t v343;
  void *v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  void *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  _QWORD *v353;
  uint64_t v354;
  _OWORD *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  _QWORD *v359;
  uint64_t v360;
  _OWORD *v361;
  uint64_t v362;
  uint64_t v363;
  _QWORD *v364;
  _QWORD *v365;
  int *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  _OWORD *v371;
  uint64_t v372;
  uint64_t v373;
  char *v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  _OWORD *v382;
  uint64_t v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  int *v388;
  uint64_t v389;
  char *v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  uint64_t v399;
  _OWORD *v400;
  uint64_t v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  uint64_t v409;
  _OWORD *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  uint64_t *v422;
  unint64_t v423;
  uint64_t v424;
  uint64_t v425;
  char *v426;
  char *v427;
  unint64_t v428;
  uint64_t v429;
  uint64_t v430;
  char *v431;
  char *v432;
  unint64_t v433;
  uint64_t v434;
  uint64_t v435;
  char *v436;
  char *v437;
  unint64_t v438;
  uint64_t v439;
  uint64_t v440;
  char *v441;
  char *v442;
  unint64_t v443;
  uint64_t v444;
  uint64_t v445;
  char *v446;
  char *v447;
  unint64_t v448;
  uint64_t v449;
  uint64_t v450;
  char *v451;
  char *v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t *v457;
  unint64_t v458;
  uint64_t v459;
  int v460;
  uint64_t v461;
  uint64_t *v462;
  unint64_t v463;
  uint64_t v464;
  uint64_t v465;
  __int128 v466;
  uint64_t v467;
  uint64_t *v468;
  unint64_t v469;
  uint64_t v470;
  uint64_t v471;
  _OWORD *v472;
  unint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t *v477;
  unint64_t v478;
  __int128 v479;
  __int128 v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t *v483;
  unint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t *v487;
  unint64_t v488;
  uint64_t v489;
  uint64_t v490;
  char *v491;
  char *v492;
  uint64_t v493;
  uint64_t v494;
  char *v495;
  char *v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  char *v501;
  char *v502;
  uint64_t v503;
  _OWORD *v504;
  uint64_t v505;
  uint64_t v506;
  char *v507;
  char *v508;
  unint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  _QWORD *v513;
  _QWORD *v514;
  uint64_t v515;
  _OWORD *v517;
  _OWORD *v518;
  uint64_t v519;
  uint64_t v520;
  unsigned int (*v521)(_QWORD *, uint64_t, int *);
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  _QWORD *v528;
  _QWORD *v529;
  int *v530;
  int *v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  _QWORD *v535;
  _QWORD *v536;
  uint64_t v537;
  uint64_t v538;
  _QWORD *v539;
  _OWORD *v540;
  uint64_t v541;
  int *v542;

  v4 = a2;
  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 2;
  v8 = a2[3];
  swift_retain();
  if (v8 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v7;
    *(_QWORD *)(a1 + 24) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = v4[5];
  *(_QWORD *)(a1 + 32) = v4[4];
  *(_QWORD *)(a1 + 40) = v9;
  v10 = v4 + 6;
  v11 = v4[7];
  swift_retain();
  if (v11 == 1)
  {
    *(_OWORD *)(a1 + 48) = *v10;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)v10;
    *(_QWORD *)(a1 + 56) = v11;
    swift_bridgeObjectRetain();
  }
  v12 = v4[9];
  *(_QWORD *)(a1 + 64) = v4[8];
  *(_QWORD *)(a1 + 72) = v12;
  v13 = v4[11];
  *(_QWORD *)(a1 + 80) = v4[10];
  *(_QWORD *)(a1 + 88) = v13;
  v14 = v4[13];
  *(_QWORD *)(a1 + 96) = v4[12];
  *(_QWORD *)(a1 + 104) = v14;
  v15 = v4[14];
  *(_WORD *)(a1 + 120) = *((_WORD *)v4 + 60);
  *(_BYTE *)(a1 + 122) = *((_BYTE *)v4 + 122);
  v542 = a3;
  v16 = a3[12];
  v539 = (_QWORD *)(a1 + v16);
  v17 = (_QWORD *)((char *)v4 + v16);
  *(_QWORD *)(a1 + 112) = v15;
  v18 = (int *)type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v19 + 48);
  swift_retain();
  v21 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2400);
    memcpy(v539, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    v23 = v542;
    goto LABEL_191;
  }
  v533 = v19;
  v24 = v17[1];
  v25 = v539;
  *v539 = *v17;
  v539[1] = v24;
  v26 = v17 + 2;
  v27 = v17[3];
  swift_retain();
  v535 = v4;
  v537 = a1;
  if (v27 == 1)
  {
    *((_OWORD *)v539 + 1) = *v26;
  }
  else
  {
    v539[2] = *(_QWORD *)v26;
    v539[3] = v27;
    swift_bridgeObjectRetain();
  }
  v28 = v18[5];
  v29 = (_QWORD *)((char *)v539 + v28);
  v30 = (_QWORD *)((char *)v17 + v28);
  v31 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v32 = *((_QWORD *)v31 - 1);
  v33 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v32 + 48);
  if (v33(v30, 1, v31))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_98;
  }
  v528 = v21;
  v35 = v30[1];
  *v29 = *v30;
  v29[1] = v35;
  v29[2] = v30[2];
  v36 = v30[5];
  *(_OWORD *)(v29 + 3) = *(_OWORD *)(v30 + 3);
  v29[5] = v36;
  v37 = v30 + 6;
  v38 = v30[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v38 == 1)
  {
    *((_OWORD *)v29 + 3) = *v37;
  }
  else
  {
    v29[6] = *(_QWORD *)v37;
    v29[7] = v38;
    swift_bridgeObjectRetain();
  }
  v39 = v31[6];
  v40 = (char *)v29 + v39;
  v41 = (char *)v30 + v39;
  v42 = *(_QWORD *)((char *)v30 + v39);
  v530 = v18;
  v526 = v32;
  v521 = v33;
  if (v42)
  {
    v43 = *((_QWORD *)v41 + 1);
    v44 = *((_QWORD *)v41 + 2);
    *(_QWORD *)v40 = v42;
    *((_QWORD *)v40 + 1) = v43;
    *((_QWORD *)v40 + 2) = v44;
    *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
    v45 = *((_QWORD *)v41 + 6);
    *((_QWORD *)v40 + 5) = *((_QWORD *)v41 + 5);
    *((_QWORD *)v40 + 6) = v45;
    *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
    v46 = *((_QWORD *)v41 + 10);
    *((_QWORD *)v40 + 9) = *((_QWORD *)v41 + 9);
    *((_QWORD *)v40 + 10) = v46;
    v47 = *((_QWORD *)v41 + 13);
    *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
    *((_QWORD *)v40 + 13) = v47;
    v48 = v41 + 112;
    v49 = *((_QWORD *)v41 + 15);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v49 == 1)
    {
      *((_OWORD *)v40 + 7) = *v48;
    }
    else
    {
      *((_QWORD *)v40 + 14) = *(_QWORD *)v48;
      *((_QWORD *)v40 + 15) = v49;
      swift_bridgeObjectRetain();
    }
    *((_QWORD *)v40 + 16) = *((_QWORD *)v41 + 16);
  }
  else
  {
    v50 = *((_OWORD *)v41 + 7);
    *((_OWORD *)v40 + 6) = *((_OWORD *)v41 + 6);
    *((_OWORD *)v40 + 7) = v50;
    *((_QWORD *)v40 + 16) = *((_QWORD *)v41 + 16);
    v51 = *((_OWORD *)v41 + 3);
    *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
    *((_OWORD *)v40 + 3) = v51;
    v52 = *((_OWORD *)v41 + 5);
    *((_OWORD *)v40 + 4) = *((_OWORD *)v41 + 4);
    *((_OWORD *)v40 + 5) = v52;
    v53 = *((_OWORD *)v41 + 1);
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v53;
  }
  v54 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v55 = v54[5];
  v56 = &v40[v55];
  v57 = &v41[v55];
  v58 = sub_1AD63AE2C();
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  v61 = v54[6];
  v62 = &v40[v61];
  v63 = &v41[v61];
  v64 = *(_QWORD *)&v41[v61];
  if (v64)
  {
    v65 = *((_QWORD *)v63 + 1);
    *(_QWORD *)v62 = v64;
    *((_QWORD *)v62 + 1) = v65;
    v66 = v63 + 16;
    v67 = *((_QWORD *)v63 + 3);
    swift_retain();
    if (v67 == 1)
    {
      *((_OWORD *)v62 + 1) = *v66;
    }
    else
    {
      *((_QWORD *)v62 + 2) = *(_QWORD *)v66;
      *((_QWORD *)v62 + 3) = v67;
      swift_bridgeObjectRetain();
    }
    v75 = *((_QWORD *)v63 + 5);
    *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
    *((_QWORD *)v62 + 5) = v75;
    v76 = v63 + 48;
    v77 = *((_QWORD *)v63 + 7);
    swift_retain();
    if (v77 == 1)
    {
      *((_OWORD *)v62 + 3) = *v76;
    }
    else
    {
      *((_QWORD *)v62 + 6) = *(_QWORD *)v76;
      *((_QWORD *)v62 + 7) = v77;
      swift_bridgeObjectRetain();
    }
    v78 = *((_QWORD *)v63 + 8);
    if (v78)
    {
      v79 = *((_QWORD *)v63 + 9);
      v80 = *((_QWORD *)v63 + 10);
      *((_QWORD *)v62 + 8) = v78;
      *((_QWORD *)v62 + 9) = v79;
      *((_QWORD *)v62 + 10) = v80;
      *(_OWORD *)(v62 + 88) = *(_OWORD *)(v63 + 88);
      v81 = *((_QWORD *)v63 + 14);
      *((_QWORD *)v62 + 13) = *((_QWORD *)v63 + 13);
      *((_QWORD *)v62 + 14) = v81;
      *(_OWORD *)(v62 + 120) = *(_OWORD *)(v63 + 120);
      v82 = *((_QWORD *)v63 + 18);
      *((_QWORD *)v62 + 17) = *((_QWORD *)v63 + 17);
      *((_QWORD *)v62 + 18) = v82;
      v83 = *((_QWORD *)v63 + 21);
      *(_OWORD *)(v62 + 152) = *(_OWORD *)(v63 + 152);
      *((_QWORD *)v62 + 21) = v83;
      v517 = v63 + 176;
      v522 = *((_QWORD *)v63 + 23);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v522 == 1)
      {
        *((_OWORD *)v62 + 11) = *v517;
      }
      else
      {
        *((_QWORD *)v62 + 22) = *(_QWORD *)v517;
        *((_QWORD *)v62 + 23) = v522;
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v62 + 24) = *((_QWORD *)v63 + 24);
    }
    else
    {
      v84 = *((_OWORD *)v63 + 11);
      *((_OWORD *)v62 + 10) = *((_OWORD *)v63 + 10);
      *((_OWORD *)v62 + 11) = v84;
      *((_QWORD *)v62 + 24) = *((_QWORD *)v63 + 24);
      v85 = *((_OWORD *)v63 + 7);
      *((_OWORD *)v62 + 6) = *((_OWORD *)v63 + 6);
      *((_OWORD *)v62 + 7) = v85;
      v86 = *((_OWORD *)v63 + 9);
      *((_OWORD *)v62 + 8) = *((_OWORD *)v63 + 8);
      *((_OWORD *)v62 + 9) = v86;
      v87 = *((_OWORD *)v63 + 5);
      *((_OWORD *)v62 + 4) = *((_OWORD *)v63 + 4);
      *((_OWORD *)v62 + 5) = v87;
    }
    v62[200] = v63[200];
    v88 = (uint64_t *)(v63 + 208);
    v89 = *((_QWORD *)v63 + 27);
    if (v89 >> 60 == 15)
    {
      *((_OWORD *)v62 + 13) = *(_OWORD *)v88;
    }
    else
    {
      v90 = *v88;
      sub_1AD0040A0(*v88, *((_QWORD *)v63 + 27));
      *((_QWORD *)v62 + 26) = v90;
      *((_QWORD *)v62 + 27) = v89;
    }
  }
  else
  {
    v68 = *((_OWORD *)v63 + 11);
    *((_OWORD *)v62 + 10) = *((_OWORD *)v63 + 10);
    *((_OWORD *)v62 + 11) = v68;
    v69 = *((_OWORD *)v63 + 13);
    *((_OWORD *)v62 + 12) = *((_OWORD *)v63 + 12);
    *((_OWORD *)v62 + 13) = v69;
    v70 = *((_OWORD *)v63 + 7);
    *((_OWORD *)v62 + 6) = *((_OWORD *)v63 + 6);
    *((_OWORD *)v62 + 7) = v70;
    v71 = *((_OWORD *)v63 + 9);
    *((_OWORD *)v62 + 8) = *((_OWORD *)v63 + 8);
    *((_OWORD *)v62 + 9) = v71;
    v72 = *((_OWORD *)v63 + 3);
    *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
    *((_OWORD *)v62 + 3) = v72;
    v73 = *((_OWORD *)v63 + 5);
    *((_OWORD *)v62 + 4) = *((_OWORD *)v63 + 4);
    *((_OWORD *)v62 + 5) = v73;
    v74 = *((_OWORD *)v63 + 1);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *((_OWORD *)v62 + 1) = v74;
  }
  *(_QWORD *)&v40[v54[7]] = *(_QWORD *)&v41[v54[7]];
  v91 = v54[8];
  v92 = &v40[v91];
  v93 = &v41[v91];
  v94 = *(_QWORD *)&v41[v91 + 8];
  swift_bridgeObjectRetain();
  if (v94 >> 60 == 15)
  {
    *(_OWORD *)v92 = *(_OWORD *)v93;
  }
  else
  {
    v95 = *(_QWORD *)v93;
    sub_1AD0040A0(v95, v94);
    *(_QWORD *)v92 = v95;
    *((_QWORD *)v92 + 1) = v94;
  }
  v96 = v54[9];
  v97 = &v40[v96];
  v98 = &v41[v96];
  v99 = *((_QWORD *)v98 + 1);
  if (v99 >> 60 == 15)
  {
    *(_OWORD *)v97 = *(_OWORD *)v98;
  }
  else
  {
    v100 = *(_QWORD *)v98;
    sub_1AD0040A0(*(_QWORD *)v98, *((_QWORD *)v98 + 1));
    *(_QWORD *)v97 = v100;
    *((_QWORD *)v97 + 1) = v99;
  }
  v40[v54[10]] = v41[v54[10]];
  v40[v54[11]] = v41[v54[11]];
  v101 = v54[12];
  v102 = &v40[v101];
  v103 = &v41[v101];
  v104 = *((_QWORD *)v103 + 1);
  if (v104 >> 60 == 15)
  {
    *(_OWORD *)v102 = *(_OWORD *)v103;
  }
  else
  {
    v105 = *(_QWORD *)v103;
    sub_1AD0040A0(*(_QWORD *)v103, *((_QWORD *)v103 + 1));
    *(_QWORD *)v102 = v105;
    *((_QWORD *)v102 + 1) = v104;
  }
  v18 = v530;
  *(_QWORD *)&v40[v54[13]] = *(_QWORD *)&v41[v54[13]];
  *((_BYTE *)v29 + v31[7]) = *((_BYTE *)v30 + v31[7]);
  *((_BYTE *)v29 + v31[8]) = *((_BYTE *)v30 + v31[8]);
  *((_BYTE *)v29 + v31[9]) = *((_BYTE *)v30 + v31[9]);
  *((_BYTE *)v29 + v31[10]) = *((_BYTE *)v30 + v31[10]);
  *((_BYTE *)v29 + v31[11]) = *((_BYTE *)v30 + v31[11]);
  *((_BYTE *)v29 + v31[12]) = *((_BYTE *)v30 + v31[12]);
  *((_BYTE *)v29 + v31[13]) = *((_BYTE *)v30 + v31[13]);
  *((_BYTE *)v29 + v31[14]) = *((_BYTE *)v30 + v31[14]);
  v106 = v31[15];
  v107 = (char *)v29 + v106;
  v108 = (char *)v30 + v106;
  v109 = *((_QWORD *)v108 + 1);
  if (v109 >> 60 == 15)
  {
    *(_OWORD *)v107 = *(_OWORD *)v108;
  }
  else
  {
    v110 = *(_QWORD *)v108;
    sub_1AD0040A0(*(_QWORD *)v108, *((_QWORD *)v108 + 1));
    *(_QWORD *)v107 = v110;
    *((_QWORD *)v107 + 1) = v109;
  }
  v25 = v539;
  v111 = v31[16];
  v112 = (char *)v29 + v111;
  v113 = (char *)v30 + v111;
  v114 = *((_QWORD *)v113 + 1);
  if (v114 >> 60 == 15)
  {
    *(_OWORD *)v112 = *(_OWORD *)v113;
  }
  else
  {
    v115 = *(_QWORD *)v113;
    sub_1AD0040A0(*(_QWORD *)v113, *((_QWORD *)v113 + 1));
    *(_QWORD *)v112 = v115;
    *((_QWORD *)v112 + 1) = v114;
  }
  *((_BYTE *)v29 + v31[17]) = *((_BYTE *)v30 + v31[17]);
  *((_BYTE *)v29 + v31[18]) = *((_BYTE *)v30 + v31[18]);
  v116 = v31[19];
  v117 = (char *)v29 + v116;
  v118 = (char *)v30 + v116;
  v119 = type metadata accessor for CloudKitSharingToken();
  v120 = *(_QWORD *)(v119 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
  {
    v523 = v119;
    *(_DWORD *)v117 = *(_DWORD *)v118;
    *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
    v122 = *((_QWORD *)v118 + 4);
    *((_OWORD *)v117 + 1) = *((_OWORD *)v118 + 1);
    *((_QWORD *)v117 + 4) = v122;
    v123 = (uint64_t *)(v118 + 40);
    v124 = *((_QWORD *)v118 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v124 >> 60 == 11 || v124 >> 60 == 15)
    {
      *(_OWORD *)(v117 + 40) = *(_OWORD *)v123;
      v125 = *((_QWORD *)v118 + 9);
      if (v125)
        goto LABEL_63;
    }
    else
    {
      v131 = *v123;
      sub_1AD0040A0(*v123, v124);
      *((_QWORD *)v117 + 5) = v131;
      *((_QWORD *)v117 + 6) = v124;
      v125 = *((_QWORD *)v118 + 9);
      if (v125)
      {
LABEL_63:
        v126 = *((_DWORD *)v118 + 15);
        *((_DWORD *)v117 + 14) = *((_DWORD *)v118 + 14);
        *((_DWORD *)v117 + 15) = v126;
        v117[64] = v118[64];
        v127 = *((_QWORD *)v118 + 10);
        *((_QWORD *)v117 + 9) = v125;
        *((_QWORD *)v117 + 10) = v127;
        v128 = (uint64_t *)(v118 + 88);
        v129 = *((_QWORD *)v118 + 12);
        swift_retain();
        if (v129 >> 60 == 15)
        {
          *(_OWORD *)(v117 + 88) = *(_OWORD *)v128;
        }
        else
        {
          v130 = *v128;
          sub_1AD0040A0(*v128, v129);
          *((_QWORD *)v117 + 11) = v130;
          *((_QWORD *)v117 + 12) = v129;
        }
LABEL_68:
        v133 = *((_QWORD *)v118 + 14);
        *((_QWORD *)v117 + 13) = *((_QWORD *)v118 + 13);
        *((_QWORD *)v117 + 14) = v133;
        v134 = (uint64_t *)(v118 + 120);
        v135 = *((_QWORD *)v118 + 16);
        swift_retain();
        if (v135 >> 60 == 15)
        {
          *(_OWORD *)(v117 + 120) = *(_OWORD *)v134;
        }
        else
        {
          v136 = *v134;
          sub_1AD0040A0(*v134, v135);
          *((_QWORD *)v117 + 15) = v136;
          *((_QWORD *)v117 + 16) = v135;
        }
        v137 = *((_QWORD *)v118 + 18);
        *((_QWORD *)v117 + 17) = *((_QWORD *)v118 + 17);
        *((_QWORD *)v117 + 18) = v137;
        v138 = (uint64_t *)(v118 + 152);
        v139 = *((_QWORD *)v118 + 20);
        swift_retain();
        if (v139 >> 60 == 11 || v139 >> 60 == 15)
        {
          *(_OWORD *)(v117 + 152) = *(_OWORD *)v138;
        }
        else
        {
          v140 = *v138;
          sub_1AD0040A0(*v138, v139);
          *((_QWORD *)v117 + 19) = v140;
          *((_QWORD *)v117 + 20) = v139;
        }
        v141 = *((_QWORD *)v118 + 21);
        if (v141)
        {
          v142 = *((_QWORD *)v118 + 22);
          *((_QWORD *)v117 + 21) = v141;
          *((_QWORD *)v117 + 22) = v142;
          v143 = (uint64_t *)(v118 + 184);
          v144 = *((_QWORD *)v118 + 24);
          swift_retain();
          if (v144 >> 60 == 15)
          {
            *(_OWORD *)(v117 + 184) = *(_OWORD *)v143;
          }
          else
          {
            v147 = *v143;
            sub_1AD0040A0(*v143, v144);
            *((_QWORD *)v117 + 23) = v147;
            *((_QWORD *)v117 + 24) = v144;
          }
          *((_DWORD *)v117 + 50) = *((_DWORD *)v118 + 50);
          v148 = *((_QWORD *)v118 + 27);
          *((_QWORD *)v117 + 26) = *((_QWORD *)v118 + 26);
          *((_QWORD *)v117 + 27) = v148;
          v149 = (uint64_t *)(v118 + 224);
          v150 = *((_QWORD *)v118 + 29);
          swift_retain();
          if (v150 >> 60 == 15)
          {
            *((_OWORD *)v117 + 14) = *(_OWORD *)v149;
          }
          else
          {
            v151 = *v149;
            sub_1AD0040A0(*v149, v150);
            *((_QWORD *)v117 + 28) = v151;
            *((_QWORD *)v117 + 29) = v150;
          }
        }
        else
        {
          v145 = *(_OWORD *)(v118 + 216);
          *(_OWORD *)(v117 + 200) = *(_OWORD *)(v118 + 200);
          *(_OWORD *)(v117 + 216) = v145;
          *((_QWORD *)v117 + 29) = *((_QWORD *)v118 + 29);
          v146 = *(_OWORD *)(v118 + 184);
          *(_OWORD *)(v117 + 168) = *(_OWORD *)(v118 + 168);
          *(_OWORD *)(v117 + 184) = v146;
        }
        v152 = *((_QWORD *)v118 + 32);
        *((_OWORD *)v117 + 15) = *((_OWORD *)v118 + 15);
        *((_QWORD *)v117 + 32) = v152;
        v153 = (uint64_t *)(v118 + 264);
        v154 = *((_QWORD *)v118 + 34);
        swift_bridgeObjectRetain();
        swift_retain();
        v519 = v120;
        if (v154 >> 60 == 11 || v154 >> 60 == 15)
        {
          *(_OWORD *)(v117 + 264) = *(_OWORD *)v153;
        }
        else
        {
          v155 = *v153;
          sub_1AD0040A0(*v153, v154);
          *((_QWORD *)v117 + 33) = v155;
          *((_QWORD *)v117 + 34) = v154;
        }
        v156 = *(int *)(v523 + 24);
        v157 = &v117[v156];
        v158 = &v118[v156];
        v159 = *(_QWORD *)&v118[v156 + 8];
        *(_QWORD *)v157 = *(_QWORD *)&v118[v156];
        *((_QWORD *)v157 + 1) = v159;
        swift_retain();
        v160 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v161 = &v157[v160];
        v162 = &v158[v160];
        v163 = sub_1AD63AF28();
        v164 = *(_QWORD *)(v163 - 8);
        v25 = v539;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48))(v162, 1, v163))
        {
          v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v161, v162, v163);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v161, 0, 1, v163);
        }
        v18 = v530;
        v166 = *(int *)(v523 + 28);
        v167 = &v117[v166];
        v168 = &v118[v166];
        v169 = *((_QWORD *)v168 + 1);
        *(_QWORD *)v167 = *(_QWORD *)v168;
        *((_QWORD *)v167 + 1) = v169;
        v170 = v168 + 16;
        v171 = *((_QWORD *)v168 + 3);
        swift_retain();
        if (v171 == 1)
        {
          *((_OWORD *)v167 + 1) = *v170;
        }
        else
        {
          *((_QWORD *)v167 + 2) = *(_QWORD *)v170;
          *((_QWORD *)v167 + 3) = v171;
          swift_bridgeObjectRetain();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v519 + 56))(v117, 0, 1, v523);
        goto LABEL_94;
      }
    }
    v132 = *(_OWORD *)(v118 + 72);
    *(_OWORD *)(v117 + 56) = *(_OWORD *)(v118 + 56);
    *(_OWORD *)(v117 + 72) = v132;
    *(_OWORD *)(v117 + 88) = *(_OWORD *)(v118 + 88);
    goto LABEL_68;
  }
  v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
LABEL_94:
  v32 = v526;
  v33 = v521;
  v172 = v31[20];
  v173 = (char *)v29 + v172;
  v174 = (char *)v30 + v172;
  v175 = *((_QWORD *)v174 + 1);
  if (v175 >> 60 == 15)
  {
    *(_OWORD *)v173 = *(_OWORD *)v174;
  }
  else
  {
    v176 = *(_QWORD *)v174;
    sub_1AD0040A0(*(_QWORD *)v174, *((_QWORD *)v174 + 1));
    *(_QWORD *)v173 = v176;
    *((_QWORD *)v173 + 1) = v175;
  }
  v21 = v528;
  *((_BYTE *)v29 + v31[21]) = *((_BYTE *)v30 + v31[21]);
  *((_BYTE *)v29 + v31[22]) = *((_BYTE *)v30 + v31[22]);
  *((_BYTE *)v29 + v31[23]) = *((_BYTE *)v30 + v31[23]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v526 + 56))(v29, 0, 1, v31);
LABEL_98:
  v177 = v18[6];
  v178 = (char *)v25 + v177;
  v179 = (char *)v21 + v177;
  if (!v33((_QWORD *)((char *)v21 + v177), 1, v31))
  {
    v529 = v21;
    v181 = *((_QWORD *)v179 + 1);
    *(_QWORD *)v178 = *(_QWORD *)v179;
    *((_QWORD *)v178 + 1) = v181;
    *((_QWORD *)v178 + 2) = *((_QWORD *)v179 + 2);
    v182 = *((_QWORD *)v179 + 5);
    *(_OWORD *)(v178 + 24) = *(_OWORD *)(v179 + 24);
    *((_QWORD *)v178 + 5) = v182;
    v183 = v179 + 48;
    v184 = *((_QWORD *)v179 + 7);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v184 == 1)
    {
      *((_OWORD *)v178 + 3) = *v183;
    }
    else
    {
      *((_QWORD *)v178 + 6) = *(_QWORD *)v183;
      *((_QWORD *)v178 + 7) = v184;
      swift_bridgeObjectRetain();
    }
    v185 = v31[6];
    v186 = &v178[v185];
    v187 = &v179[v185];
    v188 = *(_QWORD *)&v179[v185];
    v531 = v18;
    v527 = v32;
    if (v188)
    {
      v189 = *((_QWORD *)v187 + 1);
      v190 = *((_QWORD *)v187 + 2);
      *(_QWORD *)v186 = v188;
      *((_QWORD *)v186 + 1) = v189;
      *((_QWORD *)v186 + 2) = v190;
      *(_OWORD *)(v186 + 24) = *(_OWORD *)(v187 + 24);
      v191 = *((_QWORD *)v187 + 6);
      *((_QWORD *)v186 + 5) = *((_QWORD *)v187 + 5);
      *((_QWORD *)v186 + 6) = v191;
      *(_OWORD *)(v186 + 56) = *(_OWORD *)(v187 + 56);
      v192 = *((_QWORD *)v187 + 10);
      *((_QWORD *)v186 + 9) = *((_QWORD *)v187 + 9);
      *((_QWORD *)v186 + 10) = v192;
      v193 = *((_QWORD *)v187 + 13);
      *(_OWORD *)(v186 + 88) = *(_OWORD *)(v187 + 88);
      *((_QWORD *)v186 + 13) = v193;
      v194 = v187 + 112;
      v195 = *((_QWORD *)v187 + 15);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v195 == 1)
      {
        *((_OWORD *)v186 + 7) = *v194;
      }
      else
      {
        *((_QWORD *)v186 + 14) = *(_QWORD *)v194;
        *((_QWORD *)v186 + 15) = v195;
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v186 + 16) = *((_QWORD *)v187 + 16);
    }
    else
    {
      v196 = *((_OWORD *)v187 + 7);
      *((_OWORD *)v186 + 6) = *((_OWORD *)v187 + 6);
      *((_OWORD *)v186 + 7) = v196;
      *((_QWORD *)v186 + 16) = *((_QWORD *)v187 + 16);
      v197 = *((_OWORD *)v187 + 3);
      *((_OWORD *)v186 + 2) = *((_OWORD *)v187 + 2);
      *((_OWORD *)v186 + 3) = v197;
      v198 = *((_OWORD *)v187 + 5);
      *((_OWORD *)v186 + 4) = *((_OWORD *)v187 + 4);
      *((_OWORD *)v186 + 5) = v198;
      v199 = *((_OWORD *)v187 + 1);
      *(_OWORD *)v186 = *(_OWORD *)v187;
      *((_OWORD *)v186 + 1) = v199;
    }
    v200 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v201 = v200[5];
    v202 = &v186[v201];
    v203 = &v187[v201];
    v204 = sub_1AD63AE2C();
    v205 = *(_QWORD *)(v204 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v205 + 48))(v203, 1, v204))
    {
      v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v205 + 16))(v202, v203, v204);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v202, 0, 1, v204);
    }
    v207 = v200[6];
    v208 = &v186[v207];
    v209 = &v187[v207];
    v210 = *(_QWORD *)&v187[v207];
    if (v210)
    {
      v211 = *((_QWORD *)v209 + 1);
      *(_QWORD *)v208 = v210;
      *((_QWORD *)v208 + 1) = v211;
      v212 = v209 + 16;
      v213 = *((_QWORD *)v209 + 3);
      swift_retain();
      if (v213 == 1)
      {
        *((_OWORD *)v208 + 1) = *v212;
      }
      else
      {
        *((_QWORD *)v208 + 2) = *(_QWORD *)v212;
        *((_QWORD *)v208 + 3) = v213;
        swift_bridgeObjectRetain();
      }
      v221 = *((_QWORD *)v209 + 5);
      *((_QWORD *)v208 + 4) = *((_QWORD *)v209 + 4);
      *((_QWORD *)v208 + 5) = v221;
      v222 = v209 + 48;
      v223 = *((_QWORD *)v209 + 7);
      swift_retain();
      if (v223 == 1)
      {
        *((_OWORD *)v208 + 3) = *v222;
      }
      else
      {
        *((_QWORD *)v208 + 6) = *(_QWORD *)v222;
        *((_QWORD *)v208 + 7) = v223;
        swift_bridgeObjectRetain();
      }
      v224 = *((_QWORD *)v209 + 8);
      if (v224)
      {
        v225 = *((_QWORD *)v209 + 9);
        v226 = *((_QWORD *)v209 + 10);
        *((_QWORD *)v208 + 8) = v224;
        *((_QWORD *)v208 + 9) = v225;
        *((_QWORD *)v208 + 10) = v226;
        *(_OWORD *)(v208 + 88) = *(_OWORD *)(v209 + 88);
        v227 = *((_QWORD *)v209 + 14);
        *((_QWORD *)v208 + 13) = *((_QWORD *)v209 + 13);
        *((_QWORD *)v208 + 14) = v227;
        *(_OWORD *)(v208 + 120) = *(_OWORD *)(v209 + 120);
        v228 = *((_QWORD *)v209 + 18);
        *((_QWORD *)v208 + 17) = *((_QWORD *)v209 + 17);
        *((_QWORD *)v208 + 18) = v228;
        v229 = *((_QWORD *)v209 + 21);
        *(_OWORD *)(v208 + 152) = *(_OWORD *)(v209 + 152);
        *((_QWORD *)v208 + 21) = v229;
        v518 = v209 + 176;
        v524 = *((_QWORD *)v209 + 23);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v524 == 1)
        {
          *((_OWORD *)v208 + 11) = *v518;
        }
        else
        {
          *((_QWORD *)v208 + 22) = *(_QWORD *)v518;
          *((_QWORD *)v208 + 23) = v524;
          swift_bridgeObjectRetain();
        }
        *((_QWORD *)v208 + 24) = *((_QWORD *)v209 + 24);
      }
      else
      {
        v230 = *((_OWORD *)v209 + 11);
        *((_OWORD *)v208 + 10) = *((_OWORD *)v209 + 10);
        *((_OWORD *)v208 + 11) = v230;
        *((_QWORD *)v208 + 24) = *((_QWORD *)v209 + 24);
        v231 = *((_OWORD *)v209 + 7);
        *((_OWORD *)v208 + 6) = *((_OWORD *)v209 + 6);
        *((_OWORD *)v208 + 7) = v231;
        v232 = *((_OWORD *)v209 + 9);
        *((_OWORD *)v208 + 8) = *((_OWORD *)v209 + 8);
        *((_OWORD *)v208 + 9) = v232;
        v233 = *((_OWORD *)v209 + 5);
        *((_OWORD *)v208 + 4) = *((_OWORD *)v209 + 4);
        *((_OWORD *)v208 + 5) = v233;
      }
      v208[200] = v209[200];
      v234 = (uint64_t *)(v209 + 208);
      v235 = *((_QWORD *)v209 + 27);
      if (v235 >> 60 == 15)
      {
        *((_OWORD *)v208 + 13) = *(_OWORD *)v234;
      }
      else
      {
        v236 = *v234;
        sub_1AD0040A0(*v234, *((_QWORD *)v209 + 27));
        *((_QWORD *)v208 + 26) = v236;
        *((_QWORD *)v208 + 27) = v235;
      }
    }
    else
    {
      v214 = *((_OWORD *)v209 + 11);
      *((_OWORD *)v208 + 10) = *((_OWORD *)v209 + 10);
      *((_OWORD *)v208 + 11) = v214;
      v215 = *((_OWORD *)v209 + 13);
      *((_OWORD *)v208 + 12) = *((_OWORD *)v209 + 12);
      *((_OWORD *)v208 + 13) = v215;
      v216 = *((_OWORD *)v209 + 7);
      *((_OWORD *)v208 + 6) = *((_OWORD *)v209 + 6);
      *((_OWORD *)v208 + 7) = v216;
      v217 = *((_OWORD *)v209 + 9);
      *((_OWORD *)v208 + 8) = *((_OWORD *)v209 + 8);
      *((_OWORD *)v208 + 9) = v217;
      v218 = *((_OWORD *)v209 + 3);
      *((_OWORD *)v208 + 2) = *((_OWORD *)v209 + 2);
      *((_OWORD *)v208 + 3) = v218;
      v219 = *((_OWORD *)v209 + 5);
      *((_OWORD *)v208 + 4) = *((_OWORD *)v209 + 4);
      *((_OWORD *)v208 + 5) = v219;
      v220 = *((_OWORD *)v209 + 1);
      *(_OWORD *)v208 = *(_OWORD *)v209;
      *((_OWORD *)v208 + 1) = v220;
    }
    *(_QWORD *)&v186[v200[7]] = *(_QWORD *)&v187[v200[7]];
    v237 = v200[8];
    v238 = &v186[v237];
    v239 = &v187[v237];
    v240 = *(_QWORD *)&v187[v237 + 8];
    swift_bridgeObjectRetain();
    if (v240 >> 60 == 15)
    {
      *(_OWORD *)v238 = *(_OWORD *)v239;
    }
    else
    {
      v241 = *(_QWORD *)v239;
      sub_1AD0040A0(v241, v240);
      *(_QWORD *)v238 = v241;
      *((_QWORD *)v238 + 1) = v240;
    }
    v242 = v200[9];
    v243 = &v186[v242];
    v244 = &v187[v242];
    v245 = *((_QWORD *)v244 + 1);
    if (v245 >> 60 == 15)
    {
      *(_OWORD *)v243 = *(_OWORD *)v244;
    }
    else
    {
      v246 = *(_QWORD *)v244;
      sub_1AD0040A0(*(_QWORD *)v244, *((_QWORD *)v244 + 1));
      *(_QWORD *)v243 = v246;
      *((_QWORD *)v243 + 1) = v245;
    }
    v186[v200[10]] = v187[v200[10]];
    v186[v200[11]] = v187[v200[11]];
    v247 = v200[12];
    v248 = &v186[v247];
    v249 = &v187[v247];
    v250 = *((_QWORD *)v249 + 1);
    if (v250 >> 60 == 15)
    {
      *(_OWORD *)v248 = *(_OWORD *)v249;
    }
    else
    {
      v251 = *(_QWORD *)v249;
      sub_1AD0040A0(*(_QWORD *)v249, *((_QWORD *)v249 + 1));
      *(_QWORD *)v248 = v251;
      *((_QWORD *)v248 + 1) = v250;
    }
    v18 = v531;
    *(_QWORD *)&v186[v200[13]] = *(_QWORD *)&v187[v200[13]];
    v178[v31[7]] = v179[v31[7]];
    v178[v31[8]] = v179[v31[8]];
    v178[v31[9]] = v179[v31[9]];
    v178[v31[10]] = v179[v31[10]];
    v178[v31[11]] = v179[v31[11]];
    v178[v31[12]] = v179[v31[12]];
    v178[v31[13]] = v179[v31[13]];
    v178[v31[14]] = v179[v31[14]];
    v252 = v31[15];
    v253 = &v178[v252];
    v254 = &v179[v252];
    v255 = *((_QWORD *)v254 + 1);
    if (v255 >> 60 == 15)
    {
      *(_OWORD *)v253 = *(_OWORD *)v254;
    }
    else
    {
      v256 = *(_QWORD *)v254;
      sub_1AD0040A0(*(_QWORD *)v254, *((_QWORD *)v254 + 1));
      *(_QWORD *)v253 = v256;
      *((_QWORD *)v253 + 1) = v255;
    }
    v25 = v539;
    v257 = v31[16];
    v258 = &v178[v257];
    v259 = &v179[v257];
    v260 = *((_QWORD *)v259 + 1);
    if (v260 >> 60 == 15)
    {
      *(_OWORD *)v258 = *(_OWORD *)v259;
    }
    else
    {
      v261 = *(_QWORD *)v259;
      sub_1AD0040A0(*(_QWORD *)v259, *((_QWORD *)v259 + 1));
      *(_QWORD *)v258 = v261;
      *((_QWORD *)v258 + 1) = v260;
    }
    v178[v31[17]] = v179[v31[17]];
    v178[v31[18]] = v179[v31[18]];
    v262 = v31[19];
    v263 = &v178[v262];
    v264 = &v179[v262];
    v265 = type metadata accessor for CloudKitSharingToken();
    v266 = *(_QWORD *)(v265 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v266 + 48))(v264, 1, v265))
    {
      v267 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      memcpy(v263, v264, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
LABEL_180:
      v23 = v542;
      v318 = v31[20];
      v319 = &v178[v318];
      v320 = &v179[v318];
      v321 = *((_QWORD *)v320 + 1);
      if (v321 >> 60 == 15)
      {
        *(_OWORD *)v319 = *(_OWORD *)v320;
      }
      else
      {
        v322 = *(_QWORD *)v320;
        sub_1AD0040A0(*(_QWORD *)v320, *((_QWORD *)v320 + 1));
        *(_QWORD *)v319 = v322;
        *((_QWORD *)v319 + 1) = v321;
      }
      v21 = v529;
      v178[v31[21]] = v179[v31[21]];
      v178[v31[22]] = v179[v31[22]];
      v178[v31[23]] = v179[v31[23]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v527 + 56))(v178, 0, 1, v31);
      goto LABEL_184;
    }
    v525 = v265;
    *(_DWORD *)v263 = *(_DWORD *)v264;
    *((_QWORD *)v263 + 1) = *((_QWORD *)v264 + 1);
    v268 = *((_QWORD *)v264 + 4);
    *((_OWORD *)v263 + 1) = *((_OWORD *)v264 + 1);
    *((_QWORD *)v263 + 4) = v268;
    v269 = (uint64_t *)(v264 + 40);
    v270 = *((_QWORD *)v264 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v270 >> 60 == 11 || v270 >> 60 == 15)
    {
      *(_OWORD *)(v263 + 40) = *(_OWORD *)v269;
      v271 = *((_QWORD *)v264 + 9);
      if (v271)
        goto LABEL_149;
    }
    else
    {
      v277 = *v269;
      sub_1AD0040A0(*v269, v270);
      *((_QWORD *)v263 + 5) = v277;
      *((_QWORD *)v263 + 6) = v270;
      v271 = *((_QWORD *)v264 + 9);
      if (v271)
      {
LABEL_149:
        v272 = *((_DWORD *)v264 + 15);
        *((_DWORD *)v263 + 14) = *((_DWORD *)v264 + 14);
        *((_DWORD *)v263 + 15) = v272;
        v263[64] = v264[64];
        v273 = *((_QWORD *)v264 + 10);
        *((_QWORD *)v263 + 9) = v271;
        *((_QWORD *)v263 + 10) = v273;
        v274 = (uint64_t *)(v264 + 88);
        v275 = *((_QWORD *)v264 + 12);
        swift_retain();
        if (v275 >> 60 == 15)
        {
          *(_OWORD *)(v263 + 88) = *(_OWORD *)v274;
        }
        else
        {
          v276 = *v274;
          sub_1AD0040A0(*v274, v275);
          *((_QWORD *)v263 + 11) = v276;
          *((_QWORD *)v263 + 12) = v275;
        }
LABEL_154:
        v279 = *((_QWORD *)v264 + 14);
        *((_QWORD *)v263 + 13) = *((_QWORD *)v264 + 13);
        *((_QWORD *)v263 + 14) = v279;
        v280 = (uint64_t *)(v264 + 120);
        v281 = *((_QWORD *)v264 + 16);
        swift_retain();
        if (v281 >> 60 == 15)
        {
          *(_OWORD *)(v263 + 120) = *(_OWORD *)v280;
        }
        else
        {
          v282 = *v280;
          sub_1AD0040A0(*v280, v281);
          *((_QWORD *)v263 + 15) = v282;
          *((_QWORD *)v263 + 16) = v281;
        }
        v283 = *((_QWORD *)v264 + 18);
        *((_QWORD *)v263 + 17) = *((_QWORD *)v264 + 17);
        *((_QWORD *)v263 + 18) = v283;
        v284 = (uint64_t *)(v264 + 152);
        v285 = *((_QWORD *)v264 + 20);
        swift_retain();
        if (v285 >> 60 == 11 || v285 >> 60 == 15)
        {
          *(_OWORD *)(v263 + 152) = *(_OWORD *)v284;
        }
        else
        {
          v286 = *v284;
          sub_1AD0040A0(*v284, v285);
          *((_QWORD *)v263 + 19) = v286;
          *((_QWORD *)v263 + 20) = v285;
        }
        v287 = *((_QWORD *)v264 + 21);
        if (v287)
        {
          v288 = *((_QWORD *)v264 + 22);
          *((_QWORD *)v263 + 21) = v287;
          *((_QWORD *)v263 + 22) = v288;
          v289 = (uint64_t *)(v264 + 184);
          v290 = *((_QWORD *)v264 + 24);
          swift_retain();
          if (v290 >> 60 == 15)
          {
            *(_OWORD *)(v263 + 184) = *(_OWORD *)v289;
          }
          else
          {
            v293 = *v289;
            sub_1AD0040A0(*v289, v290);
            *((_QWORD *)v263 + 23) = v293;
            *((_QWORD *)v263 + 24) = v290;
          }
          *((_DWORD *)v263 + 50) = *((_DWORD *)v264 + 50);
          v294 = *((_QWORD *)v264 + 27);
          *((_QWORD *)v263 + 26) = *((_QWORD *)v264 + 26);
          *((_QWORD *)v263 + 27) = v294;
          v295 = (uint64_t *)(v264 + 224);
          v296 = *((_QWORD *)v264 + 29);
          swift_retain();
          if (v296 >> 60 == 15)
          {
            *((_OWORD *)v263 + 14) = *(_OWORD *)v295;
          }
          else
          {
            v297 = *v295;
            sub_1AD0040A0(*v295, v296);
            *((_QWORD *)v263 + 28) = v297;
            *((_QWORD *)v263 + 29) = v296;
          }
        }
        else
        {
          v291 = *(_OWORD *)(v264 + 216);
          *(_OWORD *)(v263 + 200) = *(_OWORD *)(v264 + 200);
          *(_OWORD *)(v263 + 216) = v291;
          *((_QWORD *)v263 + 29) = *((_QWORD *)v264 + 29);
          v292 = *(_OWORD *)(v264 + 184);
          *(_OWORD *)(v263 + 168) = *(_OWORD *)(v264 + 168);
          *(_OWORD *)(v263 + 184) = v292;
        }
        v298 = *((_QWORD *)v264 + 32);
        *((_OWORD *)v263 + 15) = *((_OWORD *)v264 + 15);
        *((_QWORD *)v263 + 32) = v298;
        v299 = (uint64_t *)(v264 + 264);
        v300 = *((_QWORD *)v264 + 34);
        swift_bridgeObjectRetain();
        swift_retain();
        v520 = v266;
        if (v300 >> 60 == 11 || v300 >> 60 == 15)
        {
          *(_OWORD *)(v263 + 264) = *(_OWORD *)v299;
        }
        else
        {
          v301 = *v299;
          sub_1AD0040A0(*v299, v300);
          *((_QWORD *)v263 + 33) = v301;
          *((_QWORD *)v263 + 34) = v300;
        }
        v302 = *(int *)(v525 + 24);
        v303 = &v263[v302];
        v304 = &v264[v302];
        v305 = *(_QWORD *)&v264[v302 + 8];
        *(_QWORD *)v303 = *(_QWORD *)&v264[v302];
        *((_QWORD *)v303 + 1) = v305;
        swift_retain();
        v306 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v307 = &v303[v306];
        v308 = &v304[v306];
        v309 = sub_1AD63AF28();
        v310 = *(_QWORD *)(v309 - 8);
        v25 = v539;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v310 + 48))(v308, 1, v309))
        {
          v311 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v307, v308, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v310 + 16))(v307, v308, v309);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v310 + 56))(v307, 0, 1, v309);
        }
        v18 = v531;
        v312 = *(int *)(v525 + 28);
        v313 = &v263[v312];
        v314 = &v264[v312];
        v315 = *((_QWORD *)v314 + 1);
        *(_QWORD *)v313 = *(_QWORD *)v314;
        *((_QWORD *)v313 + 1) = v315;
        v316 = v314 + 16;
        v317 = *((_QWORD *)v314 + 3);
        swift_retain();
        if (v317 == 1)
        {
          *((_OWORD *)v313 + 1) = *v316;
        }
        else
        {
          *((_QWORD *)v313 + 2) = *(_QWORD *)v316;
          *((_QWORD *)v313 + 3) = v317;
          swift_bridgeObjectRetain();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v520 + 56))(v263, 0, 1, v525);
        goto LABEL_180;
      }
    }
    v278 = *(_OWORD *)(v264 + 72);
    *(_OWORD *)(v263 + 56) = *(_OWORD *)(v264 + 56);
    *(_OWORD *)(v263 + 72) = v278;
    *(_OWORD *)(v263 + 88) = *(_OWORD *)(v264 + 88);
    goto LABEL_154;
  }
  v180 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
  memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
  v23 = v542;
LABEL_184:
  v323 = v18[7];
  v324 = (char *)v25 + v323;
  v325 = (_QWORD *)((char *)v21 + v323);
  v326 = v325[1];
  *(_QWORD *)v324 = *v325;
  *((_QWORD *)v324 + 1) = v326;
  v327 = v325 + 2;
  v328 = v325[3];
  swift_retain();
  v4 = v535;
  a1 = v537;
  if (v328 == 1)
  {
    *((_OWORD *)v324 + 1) = *v327;
  }
  else
  {
    *((_QWORD *)v324 + 2) = *(_QWORD *)v327;
    *((_QWORD *)v324 + 3) = v328;
    swift_bridgeObjectRetain();
  }
  *((_BYTE *)v25 + v18[8]) = *((_BYTE *)v21 + v18[8]);
  v329 = v18[9];
  v330 = (char *)v25 + v329;
  v331 = (_QWORD *)((char *)v21 + v329);
  v332 = v331[1];
  *(_QWORD *)v330 = *v331;
  *((_QWORD *)v330 + 1) = v332;
  v333 = v331 + 2;
  v334 = v331[3];
  swift_retain();
  if (v334 == 1)
  {
    *((_OWORD *)v330 + 1) = *v333;
  }
  else
  {
    *((_QWORD *)v330 + 2) = *(_QWORD *)v333;
    *((_QWORD *)v330 + 3) = v334;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)((char *)v25 + v18[10]) = *(_QWORD *)((char *)v21 + v18[10]);
  v335 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v533 + 56);
  swift_bridgeObjectRetain();
  v335(v25, 0, 1, v18);
LABEL_191:
  v336 = v23[13];
  v337 = (void *)(a1 + v336);
  v338 = (char *)v4 + v336;
  v339 = sub_1AD63B03C();
  v340 = *(_QWORD *)(v339 - 8);
  v341 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v340 + 48);
  if (v341(v338, 1, v339))
  {
    v342 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v337, v338, *(_QWORD *)(*(_QWORD *)(v342 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v340 + 16))(v337, v338, v339);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v340 + 56))(v337, 0, 1, v339);
  }
  v343 = v23[14];
  v344 = (void *)(a1 + v343);
  v345 = (char *)v4 + v343;
  if (v341((char *)v4 + v343, 1, v339))
  {
    v346 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v344, v345, *(_QWORD *)(*(_QWORD *)(v346 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v340 + 16))(v344, v345, v339);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v340 + 56))(v344, 0, 1, v339);
  }
  v347 = v23[15];
  v348 = (void *)(a1 + v347);
  v349 = (char *)v4 + v347;
  if (v341((char *)v4 + v347, 1, v339))
  {
    v350 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v348, v349, *(_QWORD *)(*(_QWORD *)(v350 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v340 + 16))(v348, v349, v339);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v340 + 56))(v348, 0, 1, v339);
  }
  v351 = v23[16];
  v352 = a1 + v351;
  v353 = (_QWORD *)((char *)v4 + v351);
  v354 = v353[1];
  *(_QWORD *)v352 = *v353;
  *(_QWORD *)(v352 + 8) = v354;
  v355 = v353 + 2;
  v356 = v353[3];
  swift_retain();
  if (v356 == 1)
  {
    *(_OWORD *)(v352 + 16) = *v355;
  }
  else
  {
    *(_QWORD *)(v352 + 16) = *(_QWORD *)v355;
    *(_QWORD *)(v352 + 24) = v356;
    swift_bridgeObjectRetain();
  }
  v357 = v23[17];
  v358 = a1 + v357;
  v359 = (_QWORD *)((char *)v4 + v357);
  v360 = v359[1];
  *(_QWORD *)v358 = *v359;
  *(_QWORD *)(v358 + 8) = v360;
  v361 = v359 + 2;
  v362 = v359[3];
  swift_retain();
  if (v362 == 1)
  {
    *(_OWORD *)(v358 + 16) = *v361;
  }
  else
  {
    *(_QWORD *)(v358 + 16) = *(_QWORD *)v361;
    *(_QWORD *)(v358 + 24) = v362;
    swift_bridgeObjectRetain();
  }
  v363 = v23[18];
  v364 = (_QWORD *)(a1 + v363);
  v365 = (_QWORD *)((char *)v4 + v363);
  v366 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v367 = *((_QWORD *)v366 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v367 + 48))(v365, 1, v366))
  {
    v368 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v364, v365, *(_QWORD *)(*(_QWORD *)(v368 - 8) + 64));
    goto LABEL_292;
  }
  v534 = v367;
  v369 = v365[1];
  *v364 = *v365;
  v364[1] = v369;
  v364[2] = v365[2];
  v370 = v365[5];
  *(_OWORD *)(v364 + 3) = *(_OWORD *)(v365 + 3);
  v364[5] = v370;
  v371 = v365 + 6;
  v372 = v365[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v372 == 1)
  {
    *((_OWORD *)v364 + 3) = *v371;
  }
  else
  {
    v364[6] = *(_QWORD *)v371;
    v364[7] = v372;
    swift_bridgeObjectRetain();
  }
  v373 = v366[6];
  v374 = (char *)v364 + v373;
  v375 = (char *)v365 + v373;
  v376 = *(_QWORD *)((char *)v365 + v373);
  v536 = v4;
  v538 = a1;
  if (v376)
  {
    v377 = *((_QWORD *)v375 + 1);
    v378 = *((_QWORD *)v375 + 2);
    *(_QWORD *)v374 = v376;
    *((_QWORD *)v374 + 1) = v377;
    *((_QWORD *)v374 + 2) = v378;
    *(_OWORD *)(v374 + 24) = *(_OWORD *)(v375 + 24);
    v379 = *((_QWORD *)v375 + 6);
    *((_QWORD *)v374 + 5) = *((_QWORD *)v375 + 5);
    *((_QWORD *)v374 + 6) = v379;
    *(_OWORD *)(v374 + 56) = *(_OWORD *)(v375 + 56);
    v380 = *((_QWORD *)v375 + 10);
    *((_QWORD *)v374 + 9) = *((_QWORD *)v375 + 9);
    *((_QWORD *)v374 + 10) = v380;
    v381 = *((_QWORD *)v375 + 13);
    *(_OWORD *)(v374 + 88) = *(_OWORD *)(v375 + 88);
    *((_QWORD *)v374 + 13) = v381;
    v382 = v375 + 112;
    v383 = *((_QWORD *)v375 + 15);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v383 == 1)
    {
      *((_OWORD *)v374 + 7) = *v382;
    }
    else
    {
      *((_QWORD *)v374 + 14) = *(_QWORD *)v382;
      *((_QWORD *)v374 + 15) = v383;
      swift_bridgeObjectRetain();
    }
    *((_QWORD *)v374 + 16) = *((_QWORD *)v375 + 16);
  }
  else
  {
    v384 = *((_OWORD *)v375 + 7);
    *((_OWORD *)v374 + 6) = *((_OWORD *)v375 + 6);
    *((_OWORD *)v374 + 7) = v384;
    *((_QWORD *)v374 + 16) = *((_QWORD *)v375 + 16);
    v385 = *((_OWORD *)v375 + 3);
    *((_OWORD *)v374 + 2) = *((_OWORD *)v375 + 2);
    *((_OWORD *)v374 + 3) = v385;
    v386 = *((_OWORD *)v375 + 5);
    *((_OWORD *)v374 + 4) = *((_OWORD *)v375 + 4);
    *((_OWORD *)v374 + 5) = v386;
    v387 = *((_OWORD *)v375 + 1);
    *(_OWORD *)v374 = *(_OWORD *)v375;
    *((_OWORD *)v374 + 1) = v387;
  }
  v388 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v389 = v388[5];
  v390 = &v374[v389];
  v391 = &v375[v389];
  v392 = sub_1AD63AE2C();
  v393 = *(_QWORD *)(v392 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v393 + 48))(v391, 1, v392))
  {
    v394 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v390, v391, *(_QWORD *)(*(_QWORD *)(v394 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v393 + 16))(v390, v391, v392);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v393 + 56))(v390, 0, 1, v392);
  }
  v395 = v388[6];
  v396 = &v374[v395];
  v397 = &v375[v395];
  v398 = *(_QWORD *)&v375[v395];
  if (v398)
  {
    v399 = *((_QWORD *)v397 + 1);
    *(_QWORD *)v396 = v398;
    *((_QWORD *)v396 + 1) = v399;
    v400 = v397 + 16;
    v401 = *((_QWORD *)v397 + 3);
    swift_retain();
    if (v401 == 1)
    {
      *((_OWORD *)v396 + 1) = *v400;
    }
    else
    {
      *((_QWORD *)v396 + 2) = *(_QWORD *)v400;
      *((_QWORD *)v396 + 3) = v401;
      swift_bridgeObjectRetain();
    }
    v409 = *((_QWORD *)v397 + 5);
    *((_QWORD *)v396 + 4) = *((_QWORD *)v397 + 4);
    *((_QWORD *)v396 + 5) = v409;
    v410 = v397 + 48;
    v411 = *((_QWORD *)v397 + 7);
    swift_retain();
    if (v411 == 1)
    {
      *((_OWORD *)v396 + 3) = *v410;
    }
    else
    {
      *((_QWORD *)v396 + 6) = *(_QWORD *)v410;
      *((_QWORD *)v396 + 7) = v411;
      swift_bridgeObjectRetain();
    }
    v412 = *((_QWORD *)v397 + 8);
    if (v412)
    {
      v413 = *((_QWORD *)v397 + 9);
      v414 = *((_QWORD *)v397 + 10);
      *((_QWORD *)v396 + 8) = v412;
      *((_QWORD *)v396 + 9) = v413;
      *((_QWORD *)v396 + 10) = v414;
      *(_OWORD *)(v396 + 88) = *(_OWORD *)(v397 + 88);
      v415 = *((_QWORD *)v397 + 14);
      *((_QWORD *)v396 + 13) = *((_QWORD *)v397 + 13);
      *((_QWORD *)v396 + 14) = v415;
      *(_OWORD *)(v396 + 120) = *(_OWORD *)(v397 + 120);
      v416 = *((_QWORD *)v397 + 18);
      *((_QWORD *)v396 + 17) = *((_QWORD *)v397 + 17);
      *((_QWORD *)v396 + 18) = v416;
      v417 = *((_QWORD *)v397 + 21);
      *(_OWORD *)(v396 + 152) = *(_OWORD *)(v397 + 152);
      *((_QWORD *)v396 + 21) = v417;
      v540 = v397 + 176;
      v532 = *((_QWORD *)v397 + 23);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v532 == 1)
      {
        *((_OWORD *)v396 + 11) = *v540;
      }
      else
      {
        *((_QWORD *)v396 + 22) = *(_QWORD *)v540;
        *((_QWORD *)v396 + 23) = v532;
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v396 + 24) = *((_QWORD *)v397 + 24);
    }
    else
    {
      v418 = *((_OWORD *)v397 + 11);
      *((_OWORD *)v396 + 10) = *((_OWORD *)v397 + 10);
      *((_OWORD *)v396 + 11) = v418;
      *((_QWORD *)v396 + 24) = *((_QWORD *)v397 + 24);
      v419 = *((_OWORD *)v397 + 7);
      *((_OWORD *)v396 + 6) = *((_OWORD *)v397 + 6);
      *((_OWORD *)v396 + 7) = v419;
      v420 = *((_OWORD *)v397 + 9);
      *((_OWORD *)v396 + 8) = *((_OWORD *)v397 + 8);
      *((_OWORD *)v396 + 9) = v420;
      v421 = *((_OWORD *)v397 + 5);
      *((_OWORD *)v396 + 4) = *((_OWORD *)v397 + 4);
      *((_OWORD *)v396 + 5) = v421;
    }
    v396[200] = v397[200];
    v422 = (uint64_t *)(v397 + 208);
    v423 = *((_QWORD *)v397 + 27);
    if (v423 >> 60 == 15)
    {
      *((_OWORD *)v396 + 13) = *(_OWORD *)v422;
    }
    else
    {
      v424 = *v422;
      sub_1AD0040A0(*v422, v423);
      *((_QWORD *)v396 + 26) = v424;
      *((_QWORD *)v396 + 27) = v423;
    }
  }
  else
  {
    v402 = *((_OWORD *)v397 + 11);
    *((_OWORD *)v396 + 10) = *((_OWORD *)v397 + 10);
    *((_OWORD *)v396 + 11) = v402;
    v403 = *((_OWORD *)v397 + 13);
    *((_OWORD *)v396 + 12) = *((_OWORD *)v397 + 12);
    *((_OWORD *)v396 + 13) = v403;
    v404 = *((_OWORD *)v397 + 7);
    *((_OWORD *)v396 + 6) = *((_OWORD *)v397 + 6);
    *((_OWORD *)v396 + 7) = v404;
    v405 = *((_OWORD *)v397 + 9);
    *((_OWORD *)v396 + 8) = *((_OWORD *)v397 + 8);
    *((_OWORD *)v396 + 9) = v405;
    v406 = *((_OWORD *)v397 + 3);
    *((_OWORD *)v396 + 2) = *((_OWORD *)v397 + 2);
    *((_OWORD *)v396 + 3) = v406;
    v407 = *((_OWORD *)v397 + 5);
    *((_OWORD *)v396 + 4) = *((_OWORD *)v397 + 4);
    *((_OWORD *)v396 + 5) = v407;
    v408 = *((_OWORD *)v397 + 1);
    *(_OWORD *)v396 = *(_OWORD *)v397;
    *((_OWORD *)v396 + 1) = v408;
  }
  *(_QWORD *)&v374[v388[7]] = *(_QWORD *)&v375[v388[7]];
  v425 = v388[8];
  v426 = &v374[v425];
  v427 = &v375[v425];
  v428 = *(_QWORD *)&v375[v425 + 8];
  swift_bridgeObjectRetain();
  v23 = v542;
  if (v428 >> 60 == 15)
  {
    *(_OWORD *)v426 = *(_OWORD *)v427;
  }
  else
  {
    v429 = *(_QWORD *)v427;
    sub_1AD0040A0(v429, v428);
    *(_QWORD *)v426 = v429;
    *((_QWORD *)v426 + 1) = v428;
  }
  v430 = v388[9];
  v431 = &v374[v430];
  v432 = &v375[v430];
  v433 = *((_QWORD *)v432 + 1);
  if (v433 >> 60 == 15)
  {
    *(_OWORD *)v431 = *(_OWORD *)v432;
  }
  else
  {
    v434 = *(_QWORD *)v432;
    sub_1AD0040A0(*(_QWORD *)v432, *((_QWORD *)v432 + 1));
    *(_QWORD *)v431 = v434;
    *((_QWORD *)v431 + 1) = v433;
  }
  v374[v388[10]] = v375[v388[10]];
  v374[v388[11]] = v375[v388[11]];
  v435 = v388[12];
  v436 = &v374[v435];
  v437 = &v375[v435];
  v438 = *((_QWORD *)v437 + 1);
  if (v438 >> 60 == 15)
  {
    *(_OWORD *)v436 = *(_OWORD *)v437;
  }
  else
  {
    v439 = *(_QWORD *)v437;
    sub_1AD0040A0(*(_QWORD *)v437, *((_QWORD *)v437 + 1));
    *(_QWORD *)v436 = v439;
    *((_QWORD *)v436 + 1) = v438;
  }
  *(_QWORD *)&v374[v388[13]] = *(_QWORD *)&v375[v388[13]];
  *((_BYTE *)v364 + v366[7]) = *((_BYTE *)v365 + v366[7]);
  *((_BYTE *)v364 + v366[8]) = *((_BYTE *)v365 + v366[8]);
  *((_BYTE *)v364 + v366[9]) = *((_BYTE *)v365 + v366[9]);
  *((_BYTE *)v364 + v366[10]) = *((_BYTE *)v365 + v366[10]);
  *((_BYTE *)v364 + v366[11]) = *((_BYTE *)v365 + v366[11]);
  *((_BYTE *)v364 + v366[12]) = *((_BYTE *)v365 + v366[12]);
  *((_BYTE *)v364 + v366[13]) = *((_BYTE *)v365 + v366[13]);
  *((_BYTE *)v364 + v366[14]) = *((_BYTE *)v365 + v366[14]);
  v440 = v366[15];
  v441 = (char *)v364 + v440;
  v442 = (char *)v365 + v440;
  v443 = *((_QWORD *)v442 + 1);
  if (v443 >> 60 == 15)
  {
    *(_OWORD *)v441 = *(_OWORD *)v442;
  }
  else
  {
    v444 = *(_QWORD *)v442;
    sub_1AD0040A0(*(_QWORD *)v442, *((_QWORD *)v442 + 1));
    *(_QWORD *)v441 = v444;
    *((_QWORD *)v441 + 1) = v443;
  }
  v445 = v366[16];
  v446 = (char *)v364 + v445;
  v447 = (char *)v365 + v445;
  v448 = *((_QWORD *)v447 + 1);
  if (v448 >> 60 == 15)
  {
    *(_OWORD *)v446 = *(_OWORD *)v447;
  }
  else
  {
    v449 = *(_QWORD *)v447;
    sub_1AD0040A0(*(_QWORD *)v447, *((_QWORD *)v447 + 1));
    *(_QWORD *)v446 = v449;
    *((_QWORD *)v446 + 1) = v448;
  }
  *((_BYTE *)v364 + v366[17]) = *((_BYTE *)v365 + v366[17]);
  *((_BYTE *)v364 + v366[18]) = *((_BYTE *)v365 + v366[18]);
  v450 = v366[19];
  v451 = (char *)v364 + v450;
  v452 = (char *)v365 + v450;
  v453 = type metadata accessor for CloudKitSharingToken();
  v454 = *(_QWORD *)(v453 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v454 + 48))(v452, 1, v453))
  {
    v541 = v453;
    *(_DWORD *)v451 = *(_DWORD *)v452;
    *((_QWORD *)v451 + 1) = *((_QWORD *)v452 + 1);
    v456 = *((_QWORD *)v452 + 4);
    *((_OWORD *)v451 + 1) = *((_OWORD *)v452 + 1);
    *((_QWORD *)v451 + 4) = v456;
    v457 = (uint64_t *)(v452 + 40);
    v458 = *((_QWORD *)v452 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v458 >> 60 == 11 || v458 >> 60 == 15)
    {
      *(_OWORD *)(v451 + 40) = *(_OWORD *)v457;
      v459 = *((_QWORD *)v452 + 9);
      if (v459)
        goto LABEL_257;
    }
    else
    {
      v465 = *v457;
      sub_1AD0040A0(*v457, v458);
      *((_QWORD *)v451 + 5) = v465;
      *((_QWORD *)v451 + 6) = v458;
      v459 = *((_QWORD *)v452 + 9);
      if (v459)
      {
LABEL_257:
        v460 = *((_DWORD *)v452 + 15);
        *((_DWORD *)v451 + 14) = *((_DWORD *)v452 + 14);
        *((_DWORD *)v451 + 15) = v460;
        v451[64] = v452[64];
        v461 = *((_QWORD *)v452 + 10);
        *((_QWORD *)v451 + 9) = v459;
        *((_QWORD *)v451 + 10) = v461;
        v462 = (uint64_t *)(v452 + 88);
        v463 = *((_QWORD *)v452 + 12);
        swift_retain();
        if (v463 >> 60 == 15)
        {
          *(_OWORD *)(v451 + 88) = *(_OWORD *)v462;
        }
        else
        {
          v464 = *v462;
          sub_1AD0040A0(*v462, v463);
          *((_QWORD *)v451 + 11) = v464;
          *((_QWORD *)v451 + 12) = v463;
        }
LABEL_262:
        v467 = *((_QWORD *)v452 + 14);
        *((_QWORD *)v451 + 13) = *((_QWORD *)v452 + 13);
        *((_QWORD *)v451 + 14) = v467;
        v468 = (uint64_t *)(v452 + 120);
        v469 = *((_QWORD *)v452 + 16);
        swift_retain();
        if (v469 >> 60 == 15)
        {
          *(_OWORD *)(v451 + 120) = *(_OWORD *)v468;
        }
        else
        {
          v470 = *v468;
          sub_1AD0040A0(*v468, v469);
          *((_QWORD *)v451 + 15) = v470;
          *((_QWORD *)v451 + 16) = v469;
        }
        v471 = *((_QWORD *)v452 + 18);
        *((_QWORD *)v451 + 17) = *((_QWORD *)v452 + 17);
        *((_QWORD *)v451 + 18) = v471;
        v472 = v452 + 152;
        v473 = *((_QWORD *)v452 + 20);
        swift_retain();
        if (v473 >> 60 == 11 || v473 >> 60 == 15)
        {
          *(_OWORD *)(v451 + 152) = *v472;
        }
        else
        {
          v474 = *(_QWORD *)v472;
          sub_1AD0040A0(v474, v473);
          *((_QWORD *)v451 + 19) = v474;
          *((_QWORD *)v451 + 20) = v473;
        }
        v475 = *((_QWORD *)v452 + 21);
        if (v475)
        {
          v476 = *((_QWORD *)v452 + 22);
          *((_QWORD *)v451 + 21) = v475;
          *((_QWORD *)v451 + 22) = v476;
          v477 = (uint64_t *)(v452 + 184);
          v478 = *((_QWORD *)v452 + 24);
          swift_retain();
          if (v478 >> 60 == 15)
          {
            *(_OWORD *)(v451 + 184) = *(_OWORD *)v477;
          }
          else
          {
            v481 = *v477;
            sub_1AD0040A0(*v477, v478);
            *((_QWORD *)v451 + 23) = v481;
            *((_QWORD *)v451 + 24) = v478;
          }
          *((_DWORD *)v451 + 50) = *((_DWORD *)v452 + 50);
          v482 = *((_QWORD *)v452 + 27);
          *((_QWORD *)v451 + 26) = *((_QWORD *)v452 + 26);
          *((_QWORD *)v451 + 27) = v482;
          v483 = (uint64_t *)(v452 + 224);
          v484 = *((_QWORD *)v452 + 29);
          swift_retain();
          if (v484 >> 60 == 15)
          {
            *((_OWORD *)v451 + 14) = *(_OWORD *)v483;
          }
          else
          {
            v485 = *v483;
            sub_1AD0040A0(*v483, v484);
            *((_QWORD *)v451 + 28) = v485;
            *((_QWORD *)v451 + 29) = v484;
          }
        }
        else
        {
          v479 = *(_OWORD *)(v452 + 216);
          *(_OWORD *)(v451 + 200) = *(_OWORD *)(v452 + 200);
          *(_OWORD *)(v451 + 216) = v479;
          *((_QWORD *)v451 + 29) = *((_QWORD *)v452 + 29);
          v480 = *(_OWORD *)(v452 + 184);
          *(_OWORD *)(v451 + 168) = *(_OWORD *)(v452 + 168);
          *(_OWORD *)(v451 + 184) = v480;
        }
        v486 = *((_QWORD *)v452 + 32);
        *((_OWORD *)v451 + 15) = *((_OWORD *)v452 + 15);
        *((_QWORD *)v451 + 32) = v486;
        v487 = (uint64_t *)(v452 + 264);
        v488 = *((_QWORD *)v452 + 34);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v488 >> 60 == 11 || v488 >> 60 == 15)
        {
          *(_OWORD *)(v451 + 264) = *(_OWORD *)v487;
        }
        else
        {
          v489 = *v487;
          sub_1AD0040A0(*v487, v488);
          *((_QWORD *)v451 + 33) = v489;
          *((_QWORD *)v451 + 34) = v488;
        }
        v490 = *(int *)(v541 + 24);
        v491 = &v451[v490];
        v492 = &v452[v490];
        v493 = *(_QWORD *)&v452[v490 + 8];
        *(_QWORD *)v491 = *(_QWORD *)&v452[v490];
        *((_QWORD *)v491 + 1) = v493;
        swift_retain();
        v494 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v495 = &v491[v494];
        v496 = &v492[v494];
        v497 = sub_1AD63AF28();
        v498 = *(_QWORD *)(v497 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v498 + 48))(v496, 1, v497))
        {
          v499 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v495, v496, *(_QWORD *)(*(_QWORD *)(v499 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v498 + 16))(v495, v496, v497);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v498 + 56))(v495, 0, 1, v497);
        }
        v23 = v542;
        v500 = *(int *)(v541 + 28);
        v501 = &v451[v500];
        v502 = &v452[v500];
        v503 = *((_QWORD *)v502 + 1);
        *(_QWORD *)v501 = *(_QWORD *)v502;
        *((_QWORD *)v501 + 1) = v503;
        v504 = v502 + 16;
        v505 = *((_QWORD *)v502 + 3);
        swift_retain();
        if (v505 == 1)
        {
          *((_OWORD *)v501 + 1) = *v504;
        }
        else
        {
          *((_QWORD *)v501 + 2) = *(_QWORD *)v504;
          *((_QWORD *)v501 + 3) = v505;
          swift_bridgeObjectRetain();
        }
        v4 = v536;
        a1 = v538;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v454 + 56))(v451, 0, 1, v541);
        goto LABEL_288;
      }
    }
    v466 = *(_OWORD *)(v452 + 72);
    *(_OWORD *)(v451 + 56) = *(_OWORD *)(v452 + 56);
    *(_OWORD *)(v451 + 72) = v466;
    *(_OWORD *)(v451 + 88) = *(_OWORD *)(v452 + 88);
    goto LABEL_262;
  }
  v455 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  memcpy(v451, v452, *(_QWORD *)(*(_QWORD *)(v455 - 8) + 64));
  v4 = v536;
  a1 = v538;
LABEL_288:
  v506 = v366[20];
  v507 = (char *)v364 + v506;
  v508 = (char *)v365 + v506;
  v509 = *((_QWORD *)v508 + 1);
  if (v509 >> 60 == 15)
  {
    *(_OWORD *)v507 = *(_OWORD *)v508;
  }
  else
  {
    v510 = *(_QWORD *)v508;
    sub_1AD0040A0(*(_QWORD *)v508, *((_QWORD *)v508 + 1));
    *(_QWORD *)v507 = v510;
    *((_QWORD *)v507 + 1) = v509;
  }
  *((_BYTE *)v364 + v366[21]) = *((_BYTE *)v365 + v366[21]);
  *((_BYTE *)v364 + v366[22]) = *((_BYTE *)v365 + v366[22]);
  *((_BYTE *)v364 + v366[23]) = *((_BYTE *)v365 + v366[23]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v534 + 56))(v364, 0, 1, v366);
LABEL_292:
  v511 = v23[20];
  *(_BYTE *)(a1 + v23[19]) = *((_BYTE *)v4 + v23[19]);
  *(_QWORD *)(a1 + v511) = *(_QWORD *)((char *)v4 + v511);
  v512 = v23[22];
  *(_BYTE *)(a1 + v23[21]) = *((_BYTE *)v4 + v23[21]);
  v513 = (_QWORD *)(a1 + v512);
  v514 = (_QWORD *)((char *)v4 + v512);
  v515 = v514[1];
  *v513 = *v514;
  v513[1] = v515;
  v513[2] = v514[2];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD307E38(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD *, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(_QWORD, _QWORD, _QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  int *v45;
  void (**v46)(void);
  void (*v47)(void);
  int v48;
  int *v49;
  size_t v50;
  void *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  _OWORD *v99;
  uint64_t v100;
  _OWORD *v101;
  uint64_t *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _DWORD *v131;
  _DWORD *v132;
  uint64_t v133;
  unsigned int (**v134)(_DWORD *, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  unint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  int *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  int *v167;
  uint64_t v168;
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  uint64_t v189;
  _OWORD *v190;
  unint64_t v191;
  __int128 v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  _OWORD *v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _OWORD *v205;
  unint64_t v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;
  _OWORD *v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t *v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  _QWORD *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  int *v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  uint64_t *v296;
  unint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  char *v306;
  unint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  char *v311;
  unint64_t v312;
  uint64_t v313;
  int *v314;
  uint64_t v315;
  char *v316;
  char *v317;
  unint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  char *v322;
  unint64_t v323;
  uint64_t v324;
  uint64_t v325;
  _DWORD *v326;
  _DWORD *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  int *v331;
  uint64_t v332;
  uint64_t *v333;
  unint64_t v334;
  uint64_t v335;
  int v336;
  uint64_t v337;
  _OWORD *v338;
  unint64_t v339;
  int *v340;
  __int128 v341;
  __int128 v342;
  uint64_t v343;
  uint64_t v344;
  _OWORD *v345;
  unint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t *v349;
  unint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  _OWORD *v354;
  unint64_t v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  uint64_t v359;
  uint64_t v360;
  _OWORD *v361;
  unint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t *v365;
  unint64_t v366;
  uint64_t v367;
  uint64_t v368;
  _QWORD *v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  char *v385;
  unint64_t v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  char *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  char *v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  void (*v398)(_QWORD *, _QWORD, uint64_t, int *);
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  uint64_t *v405;
  unint64_t v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  char *v410;
  unint64_t v411;
  uint64_t v412;
  uint64_t v413;
  char *v414;
  char *v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char *v419;
  char *v420;
  unint64_t v421;
  uint64_t v422;
  _OWORD *v423;
  uint64_t v424;
  char *v425;
  char *v426;
  unint64_t v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  char *v431;
  unint64_t v432;
  uint64_t v433;
  uint64_t v434;
  _DWORD *v435;
  _DWORD *v436;
  uint64_t v437;
  unsigned int (**v438)(_DWORD *, uint64_t, uint64_t);
  uint64_t v439;
  int *v440;
  _QWORD *v441;
  uint64_t v442;
  uint64_t *v443;
  unint64_t v444;
  uint64_t v445;
  uint64_t v446;
  char *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  uint64_t v465;
  int v466;
  uint64_t v467;
  uint64_t *v468;
  unint64_t v469;
  _OWORD *v470;
  __int128 v471;
  __int128 v472;
  uint64_t v473;
  uint64_t v474;
  _OWORD *v475;
  unint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t *v479;
  unint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  _OWORD *v484;
  unint64_t v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  uint64_t v489;
  uint64_t v490;
  _OWORD *v491;
  unint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t *v495;
  unint64_t v496;
  uint64_t v497;
  uint64_t v498;
  _QWORD *v499;
  char *v500;
  uint64_t v501;
  uint64_t v502;
  char *v503;
  char *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  char *v509;
  char *v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  char *v514;
  uint64_t *v515;
  unint64_t v516;
  uint64_t v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  uint64_t v524;
  void *v525;
  char *v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t (*v529)(void *, uint64_t, uint64_t);
  int v530;
  int v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  char *v535;
  uint64_t v536;
  uint64_t v537;
  _QWORD *v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  _OWORD *v572;
  uint64_t v573;
  _OWORD *v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  __int128 v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  __int128 v591;
  __int128 v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  uint64_t *v596;
  unint64_t v597;
  uint64_t v598;
  __int128 v599;
  __int128 v600;
  __int128 v601;
  __int128 v602;
  __int128 v603;
  __int128 v604;
  uint64_t *v605;
  unint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  unint64_t v610;
  uint64_t v611;
  uint64_t *v612;
  uint64_t *v613;
  unint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  unint64_t v618;
  uint64_t v619;
  uint64_t *v620;
  uint64_t *v621;
  unint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  unint64_t v626;
  uint64_t v627;
  uint64_t *v628;
  uint64_t *v629;
  unint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  unint64_t v634;
  uint64_t v635;
  uint64_t *v636;
  uint64_t *v637;
  unint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  unint64_t v642;
  uint64_t v643;
  uint64_t *v644;
  uint64_t *v645;
  unint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  unint64_t v650;
  uint64_t v651;
  uint64_t v652;
  _DWORD *v653;
  uint64_t v654;
  uint64_t (*v655)(uint64_t, uint64_t, uint64_t);
  int v656;
  int v657;
  uint64_t v658;
  uint64_t *v659;
  unint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t *v663;
  unint64_t v664;
  unint64_t v665;
  uint64_t v666;
  int v667;
  uint64_t v668;
  uint64_t *v669;
  unint64_t v670;
  _OWORD *v671;
  __int128 v672;
  __int128 v673;
  uint64_t v674;
  uint64_t v675;
  _OWORD *v676;
  unint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t *v680;
  unint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  _OWORD *v685;
  unint64_t v686;
  __int128 v687;
  __int128 v688;
  __int128 v689;
  uint64_t v690;
  uint64_t v691;
  _OWORD *v692;
  unint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t *v696;
  unint64_t v697;
  uint64_t v698;
  uint64_t v699;
  _QWORD *v700;
  char *v701;
  uint64_t v702;
  uint64_t v703;
  char *v704;
  char *v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  char *v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t *v715;
  uint64_t *v716;
  unint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  unint64_t v721;
  uint64_t v722;
  _QWORD *v723;
  _QWORD *v724;
  int v725;
  int v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  int *v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  _QWORD *v735;
  uint64_t v736;
  char *v737;
  char *v738;
  uint64_t v739;
  _QWORD *v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  __int128 v746;
  __int128 v747;
  __int128 v748;
  __int128 v749;
  __int128 v750;
  __int128 v751;
  int *v752;
  uint64_t v753;
  char *v754;
  char *v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  char *v760;
  char *v761;
  uint64_t v762;
  int *v763;
  uint64_t v764;
  uint64_t v765;
  __int128 v766;
  __int128 v767;
  __int128 v768;
  __int128 v769;
  __int128 v770;
  __int128 v771;
  __int128 v772;
  __int128 v773;
  __int128 v774;
  __int128 v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  __int128 v783;
  __int128 v784;
  __int128 v785;
  __int128 v786;
  __int128 v787;
  __int128 v788;
  uint64_t *v789;
  unint64_t v790;
  uint64_t v791;
  uint64_t v792;
  char *v793;
  char *v794;
  unint64_t v795;
  uint64_t v796;
  uint64_t v797;
  char *v798;
  char *v799;
  unint64_t v800;
  uint64_t v801;
  uint64_t v802;
  char *v803;
  char *v804;
  unint64_t v805;
  uint64_t v806;
  uint64_t v807;
  char *v808;
  char *v809;
  unint64_t v810;
  uint64_t v811;
  uint64_t v812;
  char *v813;
  char *v814;
  unint64_t v815;
  uint64_t v816;
  uint64_t v817;
  _DWORD *v818;
  _DWORD *v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  _QWORD *v823;
  int *v824;
  uint64_t v825;
  uint64_t *v826;
  unint64_t v827;
  uint64_t v828;
  uint64_t v829;
  char *v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  __int128 v843;
  __int128 v844;
  __int128 v845;
  __int128 v846;
  __int128 v847;
  __int128 v848;
  uint64_t v849;
  int v850;
  uint64_t v851;
  _OWORD *v852;
  unint64_t v853;
  __int128 v854;
  __int128 v855;
  uint64_t v856;
  uint64_t v857;
  _OWORD *v858;
  unint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t *v862;
  unint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  _OWORD *v867;
  unint64_t v868;
  __int128 v869;
  __int128 v870;
  __int128 v871;
  uint64_t v872;
  uint64_t v873;
  _OWORD *v874;
  unint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t *v878;
  unint64_t v879;
  uint64_t v880;
  uint64_t v881;
  _QWORD *v882;
  char *v883;
  uint64_t v884;
  uint64_t v885;
  char *v886;
  char *v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  char *v892;
  char *v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  char *v897;
  char *v898;
  unint64_t v899;
  uint64_t v900;
  __int128 v901;
  __int128 v902;
  __int128 v903;
  __int128 v904;
  __int128 v905;
  __int128 v906;
  uint64_t v907;
  void *v908;
  char *v909;
  uint64_t v910;
  uint64_t v911;
  uint64_t (*v912)(void *, uint64_t, uint64_t);
  int v913;
  int v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  char *v918;
  uint64_t v919;
  uint64_t v920;
  int *v921;
  uint64_t v922;
  uint64_t v923;
  uint64_t v924;
  uint64_t v925;
  __int128 v926;
  __int128 v927;
  __int128 v928;
  __int128 v929;
  __int128 v930;
  __int128 v931;
  __int128 v932;
  __int128 v933;
  __int128 v934;
  __int128 v935;
  __int128 v936;
  __int128 v937;
  __int128 v938;
  __int128 v939;
  __int128 v940;
  __int128 v941;
  __int128 v942;
  __int128 v943;
  __int128 v944;
  __int128 v945;
  uint64_t v946;
  uint64_t v947;
  uint64_t v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  uint64_t v954;
  _OWORD *v955;
  uint64_t v956;
  _OWORD *v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  __int128 v967;
  __int128 v968;
  __int128 v969;
  __int128 v970;
  __int128 v971;
  __int128 v972;
  __int128 v973;
  __int128 v974;
  __int128 v975;
  __int128 v976;
  __int128 v977;
  __int128 v978;
  uint64_t *v979;
  unint64_t v980;
  uint64_t v981;
  __int128 v982;
  __int128 v983;
  __int128 v984;
  __int128 v985;
  __int128 v986;
  __int128 v987;
  uint64_t *v988;
  unint64_t v989;
  uint64_t v990;
  uint64_t v991;
  uint64_t v992;
  unint64_t v993;
  uint64_t v994;
  uint64_t *v995;
  uint64_t *v996;
  unint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  unint64_t v1001;
  uint64_t v1002;
  uint64_t *v1003;
  uint64_t *v1004;
  unint64_t v1005;
  uint64_t v1006;
  uint64_t v1007;
  uint64_t v1008;
  unint64_t v1009;
  uint64_t v1010;
  uint64_t *v1011;
  uint64_t *v1012;
  unint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  unint64_t v1017;
  uint64_t v1018;
  uint64_t *v1019;
  uint64_t *v1020;
  unint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  uint64_t v1024;
  unint64_t v1025;
  uint64_t v1026;
  uint64_t *v1027;
  uint64_t *v1028;
  unint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  unint64_t v1033;
  _BYTE *v1034;
  uint64_t v1035;
  uint64_t v1036;
  _DWORD *v1037;
  uint64_t v1038;
  uint64_t (*v1039)(uint64_t, uint64_t, uint64_t);
  uint64_t v1040;
  int v1041;
  uint64_t v1042;
  uint64_t *v1043;
  unint64_t v1044;
  uint64_t v1045;
  int *v1046;
  uint64_t v1047;
  uint64_t *v1048;
  unint64_t v1049;
  unint64_t v1050;
  uint64_t v1051;
  int v1052;
  uint64_t v1053;
  uint64_t *v1054;
  unint64_t v1055;
  _OWORD *v1056;
  __int128 v1057;
  __int128 v1058;
  uint64_t v1059;
  uint64_t v1060;
  _OWORD *v1061;
  unint64_t v1062;
  uint64_t v1063;
  uint64_t v1064;
  uint64_t *v1065;
  unint64_t v1066;
  uint64_t v1067;
  uint64_t v1068;
  uint64_t v1069;
  _OWORD *v1070;
  unint64_t v1071;
  __int128 v1072;
  __int128 v1073;
  __int128 v1074;
  uint64_t v1075;
  uint64_t v1076;
  _OWORD *v1077;
  unint64_t v1078;
  uint64_t v1079;
  uint64_t v1080;
  uint64_t *v1081;
  unint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  _QWORD *v1085;
  char *v1086;
  uint64_t v1087;
  uint64_t v1088;
  char *v1089;
  char *v1090;
  uint64_t v1091;
  uint64_t v1092;
  uint64_t v1093;
  uint64_t v1094;
  uint64_t v1095;
  char *v1096;
  uint64_t v1097;
  uint64_t v1098;
  uint64_t v1099;
  uint64_t v1100;
  _OWORD *v1101;
  _OWORD *v1102;
  uint64_t v1103;
  int v1104;
  uint64_t v1105;
  uint64_t *v1106;
  unint64_t v1107;
  uint64_t v1108;
  int v1109;
  uint64_t v1110;
  uint64_t *v1111;
  unint64_t v1112;
  __int128 v1113;
  __int128 v1114;
  __int128 v1115;
  __int128 v1116;
  _OWORD *v1117;
  _OWORD *v1118;
  uint64_t v1119;
  int v1120;
  uint64_t v1121;
  uint64_t *v1122;
  unint64_t v1123;
  uint64_t v1124;
  int v1125;
  uint64_t v1126;
  uint64_t *v1127;
  unint64_t v1128;
  __int128 v1129;
  __int128 v1130;
  __int128 v1131;
  __int128 v1132;
  uint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  uint64_t v1136;
  unint64_t v1137;
  uint64_t v1138;
  uint64_t *v1139;
  unint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  uint64_t v1143;
  unint64_t v1144;
  uint64_t v1145;
  uint64_t *v1146;
  unint64_t v1147;
  unint64_t v1148;
  uint64_t v1149;
  _OWORD *v1150;
  uint64_t v1151;
  _OWORD *v1152;
  uint64_t v1153;
  uint64_t *v1154;
  unint64_t v1155;
  uint64_t v1156;
  uint64_t v1157;
  uint64_t *v1158;
  unint64_t v1159;
  __int128 v1160;
  __int128 v1161;
  __int128 v1162;
  __int128 v1163;
  __int128 v1164;
  __int128 v1165;
  uint64_t v1166;
  uint64_t v1167;
  uint64_t *v1168;
  unint64_t v1169;
  uint64_t v1170;
  uint64_t v1171;
  uint64_t v1172;
  unint64_t v1173;
  uint64_t v1174;
  uint64_t *v1175;
  unint64_t v1176;
  uint64_t v1177;
  uint64_t v1178;
  uint64_t v1179;
  unint64_t v1180;
  uint64_t v1181;
  uint64_t *v1182;
  unint64_t v1183;
  unint64_t v1184;
  uint64_t v1185;
  _OWORD *v1186;
  uint64_t v1187;
  _OWORD *v1188;
  uint64_t v1189;
  uint64_t *v1190;
  unint64_t v1191;
  uint64_t v1192;
  uint64_t v1193;
  uint64_t *v1194;
  unint64_t v1195;
  __int128 v1196;
  __int128 v1197;
  __int128 v1198;
  __int128 v1199;
  __int128 v1200;
  __int128 v1201;
  uint64_t v1202;
  uint64_t v1203;
  uint64_t *v1204;
  unint64_t v1205;
  uint64_t v1206;
  uint64_t v1207;
  uint64_t v1208;
  unint64_t v1209;
  uint64_t v1210;
  uint64_t *v1211;
  unint64_t v1212;
  uint64_t v1213;
  uint64_t v1214;
  uint64_t v1215;
  unint64_t v1216;
  uint64_t v1217;
  uint64_t *v1218;
  unint64_t v1219;
  uint64_t v1220;
  uint64_t v1221;
  uint64_t v1222;
  unint64_t v1223;
  uint64_t v1224;
  uint64_t *v1225;
  unint64_t v1226;
  unint64_t v1227;
  uint64_t v1228;
  uint64_t v1229;
  _QWORD *v1230;
  char *v1231;
  uint64_t v1232;
  uint64_t v1233;
  char *v1234;
  char *v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t (*v1238)(char *, uint64_t, uint64_t);
  int v1239;
  int v1240;
  uint64_t v1241;
  uint64_t v1242;
  _QWORD *v1243;
  char *v1244;
  uint64_t v1245;
  uint64_t v1246;
  uint64_t v1247;
  uint64_t v1248;
  unint64_t v1249;
  uint64_t v1250;
  uint64_t *v1251;
  unint64_t v1252;
  unint64_t v1253;
  uint64_t v1254;
  uint64_t v1255;
  _QWORD *v1256;
  char *v1257;
  uint64_t v1258;
  uint64_t v1259;
  char *v1260;
  char *v1261;
  uint64_t v1262;
  uint64_t v1263;
  uint64_t (*v1264)(char *, uint64_t, uint64_t);
  int v1265;
  int v1266;
  uint64_t v1267;
  uint64_t v1268;
  _QWORD *v1269;
  char *v1270;
  uint64_t v1271;
  uint64_t v1272;
  uint64_t v1273;
  uint64_t *v1274;
  uint64_t *v1275;
  unint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  uint64_t v1279;
  unint64_t v1280;
  uint64_t v1281;
  _QWORD *v1282;
  _QWORD *v1283;
  char *v1284;
  uint64_t v1285;
  uint64_t v1286;
  uint64_t v1287;
  _QWORD *v1288;
  char *v1289;
  uint64_t v1290;
  uint64_t v1291;
  uint64_t v1292;
  void *v1293;
  char *v1294;
  uint64_t v1295;
  uint64_t v1296;
  uint64_t (*v1297)(void *, uint64_t, uint64_t);
  int v1298;
  int v1299;
  uint64_t v1300;
  uint64_t v1301;
  void *v1302;
  char *v1303;
  int v1304;
  int v1305;
  uint64_t v1306;
  uint64_t v1307;
  void *v1308;
  char *v1309;
  int v1310;
  int v1311;
  uint64_t v1312;
  uint64_t v1313;
  _QWORD *v1314;
  char *v1315;
  uint64_t v1316;
  uint64_t v1317;
  uint64_t v1318;
  _QWORD *v1319;
  char *v1320;
  uint64_t v1321;
  uint64_t v1322;
  uint64_t v1323;
  _QWORD *v1324;
  _QWORD *v1325;
  uint64_t v1326;
  uint64_t v1327;
  uint64_t (*v1328)(_QWORD *, uint64_t, uint64_t);
  int v1329;
  int v1330;
  uint64_t v1331;
  uint64_t v1332;
  uint64_t v1333;
  uint64_t v1334;
  uint64_t v1335;
  uint64_t v1336;
  uint64_t v1337;
  uint64_t v1338;
  char *v1339;
  char *v1340;
  uint64_t v1341;
  _QWORD *v1342;
  uint64_t v1343;
  uint64_t v1344;
  uint64_t v1345;
  uint64_t v1346;
  uint64_t v1347;
  __int128 v1348;
  __int128 v1349;
  __int128 v1350;
  __int128 v1351;
  __int128 v1352;
  __int128 v1353;
  int *v1354;
  uint64_t v1355;
  char *v1356;
  char *v1357;
  uint64_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  uint64_t v1361;
  char *v1362;
  char *v1363;
  uint64_t v1364;
  uint64_t v1365;
  uint64_t v1366;
  __int128 v1367;
  __int128 v1368;
  __int128 v1369;
  __int128 v1370;
  __int128 v1371;
  __int128 v1372;
  __int128 v1373;
  __int128 v1374;
  __int128 v1375;
  __int128 v1376;
  uint64_t v1377;
  uint64_t v1378;
  uint64_t v1379;
  uint64_t v1380;
  uint64_t v1381;
  uint64_t v1382;
  uint64_t v1383;
  __int128 v1384;
  __int128 v1385;
  __int128 v1386;
  __int128 v1387;
  __int128 v1388;
  __int128 v1389;
  uint64_t *v1390;
  unint64_t v1391;
  uint64_t v1392;
  uint64_t v1393;
  char *v1394;
  char *v1395;
  unint64_t v1396;
  uint64_t v1397;
  uint64_t v1398;
  char *v1399;
  char *v1400;
  unint64_t v1401;
  uint64_t v1402;
  uint64_t v1403;
  char *v1404;
  char *v1405;
  unint64_t v1406;
  uint64_t v1407;
  int *v1408;
  _BYTE *v1409;
  uint64_t v1410;
  char *v1411;
  char *v1412;
  unint64_t v1413;
  uint64_t v1414;
  uint64_t v1415;
  char *v1416;
  char *v1417;
  unint64_t v1418;
  uint64_t v1419;
  uint64_t v1420;
  char *v1421;
  char *v1422;
  uint64_t v1423;
  uint64_t v1424;
  uint64_t v1425;
  uint64_t v1426;
  uint64_t *v1427;
  unint64_t v1428;
  uint64_t v1429;
  uint64_t v1430;
  char *v1431;
  uint64_t v1432;
  uint64_t v1433;
  uint64_t v1434;
  uint64_t v1435;
  uint64_t v1436;
  uint64_t v1437;
  uint64_t v1438;
  int *v1439;
  uint64_t v1440;
  uint64_t v1441;
  uint64_t v1442;
  uint64_t v1443;
  uint64_t v1444;
  __int128 v1445;
  __int128 v1446;
  __int128 v1447;
  __int128 v1448;
  __int128 v1449;
  __int128 v1450;
  uint64_t v1451;
  int v1452;
  uint64_t v1453;
  uint64_t *v1454;
  unint64_t v1455;
  _OWORD *v1456;
  __int128 v1457;
  __int128 v1458;
  uint64_t v1459;
  uint64_t v1460;
  _OWORD *v1461;
  unint64_t v1462;
  uint64_t v1463;
  uint64_t v1464;
  uint64_t *v1465;
  unint64_t v1466;
  uint64_t v1467;
  uint64_t v1468;
  uint64_t v1469;
  _OWORD *v1470;
  unint64_t v1471;
  __int128 v1472;
  __int128 v1473;
  __int128 v1474;
  uint64_t v1475;
  uint64_t v1476;
  _OWORD *v1477;
  unint64_t v1478;
  uint64_t v1479;
  uint64_t v1480;
  uint64_t *v1481;
  unint64_t v1482;
  _QWORD *v1483;
  uint64_t v1484;
  uint64_t v1485;
  char *v1486;
  char *v1487;
  uint64_t v1488;
  uint64_t v1489;
  char *v1490;
  char *v1491;
  uint64_t v1492;
  uint64_t v1493;
  uint64_t v1494;
  uint64_t v1495;
  char *v1496;
  char *v1497;
  uint64_t v1498;
  uint64_t v1499;
  uint64_t v1500;
  _BYTE *v1501;
  char *v1502;
  unint64_t v1503;
  uint64_t v1504;
  __int128 v1505;
  __int128 v1506;
  __int128 v1507;
  __int128 v1508;
  __int128 v1509;
  __int128 v1510;
  int *v1511;
  uint64_t v1512;
  void *v1513;
  char *v1514;
  uint64_t v1515;
  uint64_t v1516;
  uint64_t (*v1517)(void *, uint64_t, uint64_t);
  int v1518;
  int v1519;
  uint64_t v1520;
  int *v1521;
  uint64_t v1522;
  uint64_t v1523;
  char *v1524;
  uint64_t v1525;
  uint64_t v1526;
  uint64_t v1527;
  uint64_t v1528;
  uint64_t v1529;
  uint64_t v1530;
  __int128 v1531;
  __int128 v1532;
  __int128 v1533;
  __int128 v1534;
  __int128 v1535;
  __int128 v1536;
  __int128 v1537;
  __int128 v1538;
  __int128 v1539;
  __int128 v1540;
  __int128 v1541;
  __int128 v1542;
  __int128 v1543;
  __int128 v1544;
  __int128 v1545;
  __int128 v1546;
  __int128 v1547;
  __int128 v1548;
  __int128 v1549;
  __int128 v1550;
  uint64_t v1551;
  uint64_t v1552;
  uint64_t v1553;
  uint64_t v1554;
  uint64_t v1555;
  uint64_t v1556;
  uint64_t v1557;
  uint64_t v1558;
  uint64_t v1559;
  _OWORD *v1560;
  uint64_t v1561;
  _OWORD *v1562;
  uint64_t v1563;
  uint64_t v1564;
  uint64_t v1565;
  uint64_t v1566;
  uint64_t v1567;
  uint64_t v1568;
  uint64_t v1569;
  uint64_t v1570;
  uint64_t v1571;
  __int128 v1572;
  __int128 v1573;
  __int128 v1574;
  __int128 v1575;
  __int128 v1576;
  __int128 v1577;
  __int128 v1578;
  __int128 v1579;
  __int128 v1580;
  __int128 v1581;
  __int128 v1582;
  __int128 v1583;
  uint64_t *v1584;
  unint64_t v1585;
  uint64_t v1586;
  _QWORD *v1587;
  __int128 v1588;
  __int128 v1589;
  __int128 v1590;
  __int128 v1591;
  __int128 v1592;
  __int128 v1593;
  uint64_t *v1594;
  unint64_t v1595;
  uint64_t v1596;
  uint64_t v1597;
  uint64_t v1598;
  unint64_t v1599;
  uint64_t v1600;
  uint64_t *v1601;
  uint64_t *v1602;
  unint64_t v1603;
  uint64_t v1604;
  uint64_t v1605;
  uint64_t v1606;
  unint64_t v1607;
  uint64_t v1608;
  uint64_t *v1609;
  uint64_t *v1610;
  unint64_t v1611;
  uint64_t v1612;
  uint64_t v1613;
  uint64_t v1614;
  unint64_t v1615;
  uint64_t v1616;
  uint64_t *v1617;
  uint64_t *v1618;
  unint64_t v1619;
  uint64_t v1620;
  uint64_t v1621;
  uint64_t v1622;
  unint64_t v1623;
  _BYTE *v1624;
  uint64_t v1625;
  uint64_t *v1626;
  uint64_t *v1627;
  unint64_t v1628;
  uint64_t v1629;
  uint64_t v1630;
  uint64_t v1631;
  unint64_t v1632;
  uint64_t v1633;
  uint64_t *v1634;
  uint64_t *v1635;
  unint64_t v1636;
  uint64_t v1637;
  uint64_t v1638;
  uint64_t v1639;
  unint64_t v1640;
  uint64_t v1641;
  uint64_t v1642;
  uint64_t v1643;
  uint64_t v1644;
  uint64_t v1645;
  uint64_t (*v1646)(uint64_t, uint64_t, uint64_t);
  int v1647;
  int v1648;
  uint64_t v1649;
  uint64_t *v1650;
  unint64_t v1651;
  int v1652;
  uint64_t v1653;
  uint64_t *v1654;
  unint64_t v1655;
  _OWORD *v1656;
  __int128 v1657;
  uint64_t v1658;
  uint64_t v1659;
  uint64_t *v1660;
  unint64_t v1661;
  unint64_t v1662;
  uint64_t v1663;
  uint64_t v1664;
  __int128 v1665;
  uint64_t v1666;
  _OWORD *v1667;
  unint64_t v1668;
  uint64_t v1669;
  uint64_t v1670;
  uint64_t *v1671;
  unint64_t v1672;
  uint64_t v1673;
  uint64_t v1674;
  uint64_t v1675;
  _OWORD *v1676;
  unint64_t v1677;
  __int128 v1678;
  __int128 v1679;
  __int128 v1680;
  uint64_t v1681;
  uint64_t v1682;
  _OWORD *v1683;
  unint64_t v1684;
  uint64_t v1685;
  uint64_t v1686;
  uint64_t *v1687;
  unint64_t v1688;
  _QWORD *v1689;
  uint64_t v1690;
  uint64_t v1691;
  _QWORD *v1692;
  uint64_t v1693;
  uint64_t v1694;
  uint64_t v1695;
  char *v1696;
  const void *v1697;
  uint64_t v1698;
  uint64_t v1699;
  uint64_t v1700;
  uint64_t v1701;
  uint64_t v1702;
  uint64_t v1703;
  uint64_t v1704;
  uint64_t v1705;
  uint64_t v1706;
  _OWORD *v1707;
  _OWORD *v1708;
  uint64_t v1709;
  int v1710;
  uint64_t v1711;
  uint64_t *v1712;
  unint64_t v1713;
  uint64_t v1714;
  int v1715;
  uint64_t v1716;
  uint64_t *v1717;
  unint64_t v1718;
  __int128 v1719;
  __int128 v1720;
  __int128 v1721;
  __int128 v1722;
  uint64_t v1723;
  uint64_t v1724;
  uint64_t v1725;
  unint64_t v1726;
  uint64_t v1727;
  uint64_t *v1728;
  unint64_t v1729;
  uint64_t v1730;
  uint64_t v1731;
  uint64_t v1732;
  unint64_t v1733;
  uint64_t v1734;
  uint64_t *v1735;
  unint64_t v1736;
  unint64_t v1737;
  uint64_t v1738;
  _OWORD *v1739;
  uint64_t v1740;
  _OWORD *v1741;
  uint64_t v1742;
  uint64_t *v1743;
  unint64_t v1744;
  uint64_t v1745;
  uint64_t v1746;
  uint64_t *v1747;
  unint64_t v1748;
  __int128 v1749;
  __int128 v1750;
  __int128 v1751;
  __int128 v1752;
  __int128 v1753;
  __int128 v1754;
  uint64_t v1755;
  uint64_t v1756;
  uint64_t *v1757;
  unint64_t v1758;
  uint64_t v1759;
  uint64_t v1760;
  uint64_t v1761;
  unint64_t v1762;
  uint64_t v1763;
  uint64_t *v1764;
  unint64_t v1765;
  uint64_t v1766;
  uint64_t v1767;
  uint64_t v1768;
  unint64_t v1769;
  uint64_t v1770;
  uint64_t *v1771;
  unint64_t v1772;
  unint64_t v1773;
  uint64_t v1774;
  uint64_t v1775;
  uint64_t v1776;
  _QWORD *v1777;
  uint64_t v1778;
  uint64_t v1779;
  uint64_t v1780;
  char *v1781;
  char *v1782;
  uint64_t v1783;
  uint64_t v1784;
  uint64_t (*v1785)(char *, uint64_t, uint64_t);
  int v1786;
  int v1787;
  uint64_t v1788;
  uint64_t v1789;
  _QWORD *v1790;
  uint64_t v1791;
  uint64_t v1792;
  uint64_t v1793;
  uint64_t v1794;
  uint64_t *v1795;
  uint64_t *v1796;
  unint64_t v1797;
  uint64_t v1798;
  uint64_t v1799;
  uint64_t v1800;
  unint64_t v1801;
  uint64_t v1802;
  _QWORD *v1803;
  char *v1804;
  uint64_t v1805;
  uint64_t v1807;
  uint64_t v1808;
  unint64_t v1809;
  uint64_t v1810;
  uint64_t v1811;
  unint64_t v1812;
  uint64_t v1813;
  uint64_t v1814;
  unint64_t v1815;
  uint64_t v1816;
  uint64_t v1817;
  unint64_t v1818;
  uint64_t v1819;
  uint64_t v1820;
  unint64_t v1821;
  uint64_t v1822;
  uint64_t v1823;
  unint64_t v1824;
  uint64_t v1825;
  uint64_t v1826;
  unint64_t v1827;
  uint64_t v1828;
  uint64_t v1829;
  unint64_t v1830;
  uint64_t v1831;
  uint64_t v1832;
  unint64_t v1833;
  uint64_t v1834;
  uint64_t v1835;
  uint64_t v1836;
  uint64_t v1837;
  uint64_t v1838;
  void *__src;
  void *__srce;
  void *__srca;
  int *__srcb;
  char *__srcc;
  _QWORD *__srcd;
  uint64_t v1845;
  void (*v1846)(void);
  uint64_t v1847;
  void (*v1848)(void);
  uint64_t v1849;
  uint64_t v1850;
  uint64_t v1851;
  uint64_t v1852;
  uint64_t v1853;
  void *v1854;
  void (**v1855)(void);
  void (**v1856)(void);
  void *v1857;
  void *v1858;
  int *v1859;
  void (**v1860)(void);
  int *v1861;
  char *v1862;
  uint64_t v1863;
  _QWORD *v1864;
  uint64_t v1865;
  _QWORD *v1866;
  _QWORD *v1867;
  _QWORD *v1868;
  uint64_t v1869;
  int *v1870;
  uint64_t v1871;
  uint64_t v1872;
  uint64_t v1873;
  _QWORD *v1874;
  _QWORD *v1875;
  _QWORD *v1876;
  _QWORD *v1877;
  _QWORD *v1878;
  _QWORD *v1879;
  uint64_t v1880;
  uint64_t v1881;
  uint64_t v1882;
  uint64_t v1883;
  _QWORD *v1884;
  _QWORD *v1885;
  _QWORD *v1886;
  _QWORD *v1887;
  _QWORD *v1888;
  _QWORD *v1889;
  _QWORD *v1890;
  int *v1891;
  int *v1892;
  int *v1893;
  int *v1894;
  int *v1895;
  int *v1896;
  _OWORD *v1897;
  _BYTE *v1898;
  _BYTE *v1899;
  _BYTE *v1900;
  int *v1901;
  int *v1902;
  int *v1903;
  int *v1904;
  int *v1905;
  _QWORD *v1906;
  _QWORD *v1907;
  _QWORD *v1908;
  _QWORD *v1909;
  _QWORD *v1910;
  _QWORD *v1911;
  _QWORD *v1912;
  _QWORD *v1913;
  _QWORD *v1914;
  _QWORD *v1915;
  _QWORD *v1916;
  uint64_t v1917;
  uint64_t v1918;
  uint64_t v1919;
  uint64_t v1920;
  uint64_t v1921;

  v4 = a2;
  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = v4[3];
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 16) = v4[2];
      *(_QWORD *)(a1 + 24) = v4[3];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == 1)
  {
    sub_1AD009758(a1 + 16, &qword_1ED2E3198);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *((_OWORD *)v4 + 1);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 16) = v4[2];
  *(_QWORD *)(a1 + 24) = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v8 = v4[5];
  *(_QWORD *)(a1 + 32) = v4[4];
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  v9 = v4[7];
  if (*(_QWORD *)(a1 + 56) == 1)
  {
    if (v9 != 1)
    {
      *(_QWORD *)(a1 + 48) = v4[6];
      *(_QWORD *)(a1 + 56) = v4[7];
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v9 == 1)
  {
    sub_1AD009758(a1 + 48, &qword_1ED2E3198);
LABEL_13:
    *(_OWORD *)(a1 + 48) = *((_OWORD *)v4 + 3);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 48) = v4[6];
  *(_QWORD *)(a1 + 56) = v4[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_15:
  v10 = v4[9];
  *(_QWORD *)(a1 + 64) = v4[8];
  *(_QWORD *)(a1 + 72) = v10;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = v4[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = v4[11];
  *(_QWORD *)(a1 + 96) = v4[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = v4[13];
  *(_QWORD *)(a1 + 112) = v4[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *((_BYTE *)v4 + 120);
  *(_BYTE *)(a1 + 121) = *((_BYTE *)v4 + 121);
  *(_BYTE *)(a1 + 122) = *((_BYTE *)v4 + 122);
  v11 = a3[12];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)((char *)v4 + v11);
  v14 = (int *)type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_1AD066230((uint64_t)v12, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      goto LABEL_21;
    }
    v22 = v13[1];
    *v12 = *v13;
    v12[1] = v22;
    swift_retain();
    swift_release();
    v23 = v13[3];
    if (v12[3] == 1)
    {
      if (v23 != 1)
      {
        v12[2] = v13[2];
        v12[3] = v13[3];
        swift_bridgeObjectRetain();
        goto LABEL_38;
      }
    }
    else
    {
      if (v23 != 1)
      {
        v12[2] = v13[2];
        v12[3] = v13[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_38:
        v1902 = a3;
        v1892 = v14;
        v42 = v14[5];
        v43 = (char *)v12 + v42;
        v44 = (_QWORD *)((char *)v13 + v42);
        v45 = (int *)type metadata accessor for CloudKitShareParticipant(0);
        v46 = (void (**)(void))*((_QWORD *)v45 - 1);
        v47 = v46[6];
        v1897 = v43;
        LODWORD(v43) = ((uint64_t (*)(char *, uint64_t, int *))v47)(v43, 1, v45);
        v48 = ((uint64_t (*)(_QWORD *, uint64_t, int *))v47)(v44, 1, v45);
        v49 = v45;
        v1870 = v45;
        if ((_DWORD)v43)
        {
          if (v48)
          {
            v50 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300) - 8)
                            + 64);
            v51 = v1897;
LABEL_43:
            memcpy(v51, v44, v50);
            goto LABEL_482;
          }
          v1846 = v47;
          v1855 = v46;
          v58 = v44[1];
          *(_QWORD *)v1897 = *v44;
          *((_QWORD *)v1897 + 1) = v58;
          *((_QWORD *)v1897 + 2) = v44[2];
          *((_QWORD *)v1897 + 3) = v44[3];
          v59 = v44[5];
          *((_QWORD *)v1897 + 4) = v44[4];
          *((_QWORD *)v1897 + 5) = v59;
          v60 = v44[7];
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          v1918 = a1;
          if (v60 == 1)
          {
            v1897[3] = *((_OWORD *)v44 + 3);
          }
          else
          {
            *((_QWORD *)v1897 + 6) = v44[6];
            *((_QWORD *)v1897 + 7) = v44[7];
            swift_bridgeObjectRetain();
          }
          v1876 = v13;
          v1885 = v12;
          v139 = v49[6];
          v140 = (char *)v1897 + v139;
          v1864 = v44;
          v141 = (char *)v44 + v139;
          v142 = *(_QWORD *)((char *)v44 + v139);
          if (v142)
          {
            v143 = v4;
            v144 = *((_QWORD *)v141 + 1);
            *(_QWORD *)v140 = v142;
            *((_QWORD *)v140 + 1) = v144;
            *((_QWORD *)v140 + 2) = *((_QWORD *)v141 + 2);
            *((_QWORD *)v140 + 3) = *((_QWORD *)v141 + 3);
            v145 = *((_QWORD *)v141 + 5);
            *((_QWORD *)v140 + 4) = *((_QWORD *)v141 + 4);
            *((_QWORD *)v140 + 5) = v145;
            *((_QWORD *)v140 + 6) = *((_QWORD *)v141 + 6);
            *((_QWORD *)v140 + 7) = *((_QWORD *)v141 + 7);
            v146 = *((_QWORD *)v141 + 9);
            *((_QWORD *)v140 + 8) = *((_QWORD *)v141 + 8);
            *((_QWORD *)v140 + 9) = v146;
            *((_QWORD *)v140 + 10) = *((_QWORD *)v141 + 10);
            *((_QWORD *)v140 + 11) = *((_QWORD *)v141 + 11);
            v147 = *((_QWORD *)v141 + 13);
            *((_QWORD *)v140 + 12) = *((_QWORD *)v141 + 12);
            *((_QWORD *)v140 + 13) = v147;
            v148 = *((_QWORD *)v141 + 15);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            v149 = v140;
            if (v148 == 1)
            {
              *((_OWORD *)v140 + 7) = *((_OWORD *)v141 + 7);
            }
            else
            {
              *((_QWORD *)v140 + 14) = *((_QWORD *)v141 + 14);
              *((_QWORD *)v140 + 15) = *((_QWORD *)v141 + 15);
              swift_bridgeObjectRetain();
            }
            *((_QWORD *)v140 + 16) = *((_QWORD *)v141 + 16);
            v4 = v143;
          }
          else
          {
            *(_OWORD *)v140 = *(_OWORD *)v141;
            v150 = *((_OWORD *)v141 + 1);
            v151 = *((_OWORD *)v141 + 2);
            v152 = *((_OWORD *)v141 + 4);
            *((_OWORD *)v140 + 3) = *((_OWORD *)v141 + 3);
            *((_OWORD *)v140 + 4) = v152;
            *((_OWORD *)v140 + 1) = v150;
            *((_OWORD *)v140 + 2) = v151;
            v153 = *((_OWORD *)v141 + 5);
            v154 = *((_OWORD *)v141 + 6);
            v155 = *((_OWORD *)v141 + 7);
            *((_QWORD *)v140 + 16) = *((_QWORD *)v141 + 16);
            *((_OWORD *)v140 + 6) = v154;
            *((_OWORD *)v140 + 7) = v155;
            *((_OWORD *)v140 + 5) = v153;
            v149 = v140;
          }
          v156 = (int *)type metadata accessor for CloudKitUserIdentity(0);
          v157 = v156[5];
          v158 = &v149[v157];
          v159 = &v141[v157];
          v160 = sub_1AD63AE2C();
          v161 = *(_QWORD *)(v160 - 8);
          v1907 = v4;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v159, 1, v160))
          {
            v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
            memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v158, v159, v160);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v158, 0, 1, v160);
          }
          v163 = v156[6];
          v164 = &v149[v163];
          v165 = &v141[v163];
          v166 = *(_QWORD *)&v141[v163];
          v167 = v1870;
          if (v166)
          {
            v168 = *((_QWORD *)v165 + 1);
            *(_QWORD *)v164 = v166;
            *((_QWORD *)v164 + 1) = v168;
            v169 = *((_QWORD *)v165 + 3);
            swift_retain();
            if (v169 == 1)
            {
              *((_OWORD *)v164 + 1) = *((_OWORD *)v165 + 1);
            }
            else
            {
              *((_QWORD *)v164 + 2) = *((_QWORD *)v165 + 2);
              *((_QWORD *)v164 + 3) = *((_QWORD *)v165 + 3);
              swift_bridgeObjectRetain();
            }
            v180 = *((_QWORD *)v165 + 5);
            *((_QWORD *)v164 + 4) = *((_QWORD *)v165 + 4);
            *((_QWORD *)v164 + 5) = v180;
            v181 = *((_QWORD *)v165 + 7);
            swift_retain();
            if (v181 == 1)
            {
              *((_OWORD *)v164 + 3) = *((_OWORD *)v165 + 3);
            }
            else
            {
              *((_QWORD *)v164 + 6) = *((_QWORD *)v165 + 6);
              *((_QWORD *)v164 + 7) = *((_QWORD *)v165 + 7);
              swift_bridgeObjectRetain();
            }
            v182 = *((_QWORD *)v165 + 8);
            if (v182)
            {
              v183 = *((_QWORD *)v165 + 9);
              *((_QWORD *)v164 + 8) = v182;
              *((_QWORD *)v164 + 9) = v183;
              *((_QWORD *)v164 + 10) = *((_QWORD *)v165 + 10);
              *((_QWORD *)v164 + 11) = *((_QWORD *)v165 + 11);
              v184 = *((_QWORD *)v165 + 13);
              *((_QWORD *)v164 + 12) = *((_QWORD *)v165 + 12);
              *((_QWORD *)v164 + 13) = v184;
              *((_QWORD *)v164 + 14) = *((_QWORD *)v165 + 14);
              *((_QWORD *)v164 + 15) = *((_QWORD *)v165 + 15);
              v185 = *((_QWORD *)v165 + 17);
              *((_QWORD *)v164 + 16) = *((_QWORD *)v165 + 16);
              *((_QWORD *)v164 + 17) = v185;
              *((_QWORD *)v164 + 18) = *((_QWORD *)v165 + 18);
              *((_QWORD *)v164 + 19) = *((_QWORD *)v165 + 19);
              v186 = *((_QWORD *)v165 + 21);
              *((_QWORD *)v164 + 20) = *((_QWORD *)v165 + 20);
              *((_QWORD *)v164 + 21) = v186;
              __srce = (void *)*((_QWORD *)v165 + 23);
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              if (__srce == (void *)1)
              {
                *((_OWORD *)v164 + 11) = *((_OWORD *)v165 + 11);
              }
              else
              {
                *((_QWORD *)v164 + 22) = *((_QWORD *)v165 + 22);
                *((_QWORD *)v164 + 23) = *((_QWORD *)v165 + 23);
                swift_bridgeObjectRetain();
              }
              v167 = v1870;
              *((_QWORD *)v164 + 24) = *((_QWORD *)v165 + 24);
            }
            else
            {
              *((_OWORD *)v164 + 4) = *((_OWORD *)v165 + 4);
              v399 = *((_OWORD *)v165 + 5);
              v400 = *((_OWORD *)v165 + 6);
              v401 = *((_OWORD *)v165 + 8);
              *((_OWORD *)v164 + 7) = *((_OWORD *)v165 + 7);
              *((_OWORD *)v164 + 8) = v401;
              *((_OWORD *)v164 + 5) = v399;
              *((_OWORD *)v164 + 6) = v400;
              v402 = *((_OWORD *)v165 + 9);
              v403 = *((_OWORD *)v165 + 10);
              v404 = *((_OWORD *)v165 + 11);
              *((_QWORD *)v164 + 24) = *((_QWORD *)v165 + 24);
              *((_OWORD *)v164 + 10) = v403;
              *((_OWORD *)v164 + 11) = v404;
              *((_OWORD *)v164 + 9) = v402;
              v167 = v1870;
            }
            v164[200] = v165[200];
            v405 = (uint64_t *)(v165 + 208);
            v406 = *((_QWORD *)v165 + 27);
            if (v406 >> 60 == 15)
            {
              *((_OWORD *)v164 + 13) = *(_OWORD *)v405;
            }
            else
            {
              v407 = *v405;
              sub_1AD0040A0(*v405, v406);
              *((_QWORD *)v164 + 26) = v407;
              *((_QWORD *)v164 + 27) = v406;
            }
          }
          else
          {
            v170 = *((_OWORD *)v165 + 1);
            *(_OWORD *)v164 = *(_OWORD *)v165;
            *((_OWORD *)v164 + 1) = v170;
            v171 = *((_OWORD *)v165 + 2);
            v172 = *((_OWORD *)v165 + 3);
            v173 = *((_OWORD *)v165 + 5);
            *((_OWORD *)v164 + 4) = *((_OWORD *)v165 + 4);
            *((_OWORD *)v164 + 5) = v173;
            *((_OWORD *)v164 + 2) = v171;
            *((_OWORD *)v164 + 3) = v172;
            v174 = *((_OWORD *)v165 + 6);
            v175 = *((_OWORD *)v165 + 7);
            v176 = *((_OWORD *)v165 + 9);
            *((_OWORD *)v164 + 8) = *((_OWORD *)v165 + 8);
            *((_OWORD *)v164 + 9) = v176;
            *((_OWORD *)v164 + 6) = v174;
            *((_OWORD *)v164 + 7) = v175;
            v177 = *((_OWORD *)v165 + 10);
            v178 = *((_OWORD *)v165 + 11);
            v179 = *((_OWORD *)v165 + 13);
            *((_OWORD *)v164 + 12) = *((_OWORD *)v165 + 12);
            *((_OWORD *)v164 + 13) = v179;
            *((_OWORD *)v164 + 10) = v177;
            *((_OWORD *)v164 + 11) = v178;
          }
          *(_QWORD *)&v149[v156[7]] = *(_QWORD *)&v141[v156[7]];
          v408 = v156[8];
          v409 = &v149[v408];
          v410 = &v141[v408];
          v411 = *(_QWORD *)&v141[v408 + 8];
          swift_bridgeObjectRetain();
          v4 = v1907;
          if (v411 >> 60 == 15)
          {
            *(_OWORD *)v409 = *(_OWORD *)v410;
          }
          else
          {
            v412 = *(_QWORD *)v410;
            sub_1AD0040A0(v412, v411);
            *(_QWORD *)v409 = v412;
            *((_QWORD *)v409 + 1) = v411;
          }
          v413 = v156[9];
          v414 = &v149[v413];
          v415 = &v141[v413];
          v416 = *((_QWORD *)v415 + 1);
          if (v416 >> 60 == 15)
          {
            *(_OWORD *)v414 = *(_OWORD *)v415;
          }
          else
          {
            v417 = *(_QWORD *)v415;
            sub_1AD0040A0(*(_QWORD *)v415, *((_QWORD *)v415 + 1));
            *(_QWORD *)v414 = v417;
            *((_QWORD *)v414 + 1) = v416;
          }
          v149[v156[10]] = v141[v156[10]];
          v149[v156[11]] = v141[v156[11]];
          v418 = v156[12];
          v419 = &v149[v418];
          v420 = &v141[v418];
          v421 = *((_QWORD *)v420 + 1);
          if (v421 >> 60 == 15)
          {
            *(_OWORD *)v419 = *(_OWORD *)v420;
          }
          else
          {
            v422 = *(_QWORD *)v420;
            sub_1AD0040A0(*(_QWORD *)v420, *((_QWORD *)v420 + 1));
            *(_QWORD *)v419 = v422;
            *((_QWORD *)v419 + 1) = v421;
          }
          v423 = v1897;
          *(_QWORD *)&v149[v156[13]] = *(_QWORD *)&v141[v156[13]];
          *((_BYTE *)v1897 + v167[7]) = *((_BYTE *)v1864 + v167[7]);
          *((_BYTE *)v1897 + v167[8]) = *((_BYTE *)v1864 + v167[8]);
          *((_BYTE *)v1897 + v167[9]) = *((_BYTE *)v1864 + v167[9]);
          *((_BYTE *)v1897 + v167[10]) = *((_BYTE *)v1864 + v167[10]);
          *((_BYTE *)v1897 + v167[11]) = *((_BYTE *)v1864 + v167[11]);
          *((_BYTE *)v1897 + v167[12]) = *((_BYTE *)v1864 + v167[12]);
          *((_BYTE *)v1897 + v167[13]) = *((_BYTE *)v1864 + v167[13]);
          *((_BYTE *)v1897 + v167[14]) = *((_BYTE *)v1864 + v167[14]);
          v424 = v167[15];
          v425 = (char *)v1897 + v424;
          v426 = (char *)v1864 + v424;
          v427 = *((_QWORD *)v426 + 1);
          if (v427 >> 60 == 15)
          {
            *(_OWORD *)v425 = *(_OWORD *)v426;
          }
          else
          {
            v428 = *(_QWORD *)v426;
            sub_1AD0040A0(*(_QWORD *)v426, *((_QWORD *)v426 + 1));
            *(_QWORD *)v425 = v428;
            *((_QWORD *)v425 + 1) = v427;
            v423 = v1897;
          }
          a1 = v1918;
          v429 = v167[16];
          v430 = (char *)v423 + v429;
          v431 = (char *)v1864 + v429;
          v432 = *((_QWORD *)v431 + 1);
          if (v432 >> 60 == 15)
          {
            *(_OWORD *)v430 = *(_OWORD *)v431;
          }
          else
          {
            v433 = *(_QWORD *)v431;
            sub_1AD0040A0(*(_QWORD *)v431, *((_QWORD *)v431 + 1));
            *(_QWORD *)v430 = v433;
            *((_QWORD *)v430 + 1) = v432;
            v423 = v1897;
          }
          *((_BYTE *)v423 + v167[17]) = *((_BYTE *)v1864 + v167[17]);
          *((_BYTE *)v423 + v167[18]) = *((_BYTE *)v1864 + v167[18]);
          v434 = v167[19];
          v435 = (_DWORD *)((char *)v423 + v434);
          v436 = (_DWORD *)((char *)v1864 + v434);
          v437 = type metadata accessor for CloudKitSharingToken();
          v438 = *(unsigned int (***)(_DWORD *, uint64_t, uint64_t))(v437 - 8);
          if (v438[6](v436, 1, v437))
          {
            v439 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
            memcpy(v435, v436, *(_QWORD *)(*(_QWORD *)(v439 - 8) + 64));
            v12 = v1885;
            v441 = v1864;
            v440 = v1870;
LABEL_318:
            v45 = v440;
            v513 = v440[20];
            v514 = (char *)v423 + v513;
            v515 = (_QWORD *)((char *)v441 + v513);
            v516 = v515[1];
            v13 = v1876;
            if (v516 >> 60 == 15)
            {
              *(_OWORD *)v514 = *(_OWORD *)v515;
            }
            else
            {
              v517 = *v515;
              sub_1AD0040A0(*v515, v515[1]);
              *(_QWORD *)v514 = v517;
              *((_QWORD *)v514 + 1) = v516;
            }
            v47 = v1846;
            v46 = v1855;
            *((_BYTE *)v1897 + v45[21]) = *((_BYTE *)v441 + v45[21]);
            *((_BYTE *)v1897 + v45[22]) = *((_BYTE *)v441 + v45[22]);
            *((_BYTE *)v1897 + v45[23]) = *((_BYTE *)v441 + v45[23]);
            v1855[7]();
LABEL_482:
            v722 = v1892[6];
            v723 = (_QWORD *)((char *)v12 + v722);
            v724 = (_QWORD *)((char *)v13 + v722);
            v725 = ((uint64_t (*)(char *, uint64_t, int *))v47)((char *)v12 + v722, 1, v45);
            v1898 = v724;
            v726 = ((uint64_t (*)(_QWORD *, uint64_t, int *))v47)(v724, 1, v45);
            if (v725)
            {
              if (!v726)
              {
                v1860 = v46;
                v727 = v724[1];
                *v723 = *v724;
                v723[1] = v727;
                v723[2] = v724[2];
                v723[3] = v724[3];
                v728 = v724[5];
                v723[4] = v724[4];
                v723[5] = v728;
                v729 = v724[7];
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain();
                v1919 = a1;
                if (v729 == 1)
                {
                  *((_OWORD *)v723 + 3) = *((_OWORD *)v724 + 3);
                }
                else
                {
                  v723[6] = v724[6];
                  v723[7] = v724[7];
                  swift_bridgeObjectRetain();
                }
                v1879 = v13;
                v1888 = v12;
                v736 = v1870[6];
                v737 = (char *)v723 + v736;
                v738 = (char *)v724 + v736;
                v739 = *(_QWORD *)((char *)v724 + v736);
                v1867 = v723;
                if (v739)
                {
                  v740 = v4;
                  v741 = *((_QWORD *)v738 + 1);
                  *(_QWORD *)v737 = v739;
                  *((_QWORD *)v737 + 1) = v741;
                  *((_QWORD *)v737 + 2) = *((_QWORD *)v738 + 2);
                  *((_QWORD *)v737 + 3) = *((_QWORD *)v738 + 3);
                  v742 = *((_QWORD *)v738 + 5);
                  *((_QWORD *)v737 + 4) = *((_QWORD *)v738 + 4);
                  *((_QWORD *)v737 + 5) = v742;
                  *((_QWORD *)v737 + 6) = *((_QWORD *)v738 + 6);
                  *((_QWORD *)v737 + 7) = *((_QWORD *)v738 + 7);
                  v743 = *((_QWORD *)v738 + 9);
                  *((_QWORD *)v737 + 8) = *((_QWORD *)v738 + 8);
                  *((_QWORD *)v737 + 9) = v743;
                  *((_QWORD *)v737 + 10) = *((_QWORD *)v738 + 10);
                  *((_QWORD *)v737 + 11) = *((_QWORD *)v738 + 11);
                  v744 = *((_QWORD *)v738 + 13);
                  *((_QWORD *)v737 + 12) = *((_QWORD *)v738 + 12);
                  *((_QWORD *)v737 + 13) = v744;
                  v745 = *((_QWORD *)v738 + 15);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  if (v745 == 1)
                  {
                    *((_OWORD *)v737 + 7) = *((_OWORD *)v738 + 7);
                  }
                  else
                  {
                    *((_QWORD *)v737 + 14) = *((_QWORD *)v738 + 14);
                    *((_QWORD *)v737 + 15) = *((_QWORD *)v738 + 15);
                    swift_bridgeObjectRetain();
                  }
                  *((_QWORD *)v737 + 16) = *((_QWORD *)v738 + 16);
                  v4 = v740;
                }
                else
                {
                  *(_OWORD *)v737 = *(_OWORD *)v738;
                  v746 = *((_OWORD *)v738 + 1);
                  v747 = *((_OWORD *)v738 + 2);
                  v748 = *((_OWORD *)v738 + 4);
                  *((_OWORD *)v737 + 3) = *((_OWORD *)v738 + 3);
                  *((_OWORD *)v737 + 4) = v748;
                  *((_OWORD *)v737 + 1) = v746;
                  *((_OWORD *)v737 + 2) = v747;
                  v749 = *((_OWORD *)v738 + 5);
                  v750 = *((_OWORD *)v738 + 6);
                  v751 = *((_OWORD *)v738 + 7);
                  *((_QWORD *)v737 + 16) = *((_QWORD *)v738 + 16);
                  *((_OWORD *)v737 + 6) = v750;
                  *((_OWORD *)v737 + 7) = v751;
                  *((_OWORD *)v737 + 5) = v749;
                }
                v752 = (int *)type metadata accessor for CloudKitUserIdentity(0);
                v753 = v752[5];
                v754 = &v737[v753];
                v755 = &v738[v753];
                v756 = sub_1AD63AE2C();
                v757 = *(_QWORD *)(v756 - 8);
                v1911 = v4;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v757 + 48))(v755, 1, v756))
                {
                  v758 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
                  memcpy(v754, v755, *(_QWORD *)(*(_QWORD *)(v758 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v757 + 16))(v754, v755, v756);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v757 + 56))(v754, 0, 1, v756);
                }
                v759 = v752[6];
                v760 = &v737[v759];
                v761 = &v738[v759];
                v762 = *(_QWORD *)&v738[v759];
                v763 = v1870;
                if (v762)
                {
                  v764 = *((_QWORD *)v761 + 1);
                  *(_QWORD *)v760 = v762;
                  *((_QWORD *)v760 + 1) = v764;
                  v765 = *((_QWORD *)v761 + 3);
                  swift_retain();
                  if (v765 == 1)
                  {
                    *((_OWORD *)v760 + 1) = *((_OWORD *)v761 + 1);
                  }
                  else
                  {
                    *((_QWORD *)v760 + 2) = *((_QWORD *)v761 + 2);
                    *((_QWORD *)v760 + 3) = *((_QWORD *)v761 + 3);
                    swift_bridgeObjectRetain();
                  }
                  v776 = *((_QWORD *)v761 + 5);
                  *((_QWORD *)v760 + 4) = *((_QWORD *)v761 + 4);
                  *((_QWORD *)v760 + 5) = v776;
                  v777 = *((_QWORD *)v761 + 7);
                  swift_retain();
                  if (v777 == 1)
                  {
                    *((_OWORD *)v760 + 3) = *((_OWORD *)v761 + 3);
                  }
                  else
                  {
                    *((_QWORD *)v760 + 6) = *((_QWORD *)v761 + 6);
                    *((_QWORD *)v760 + 7) = *((_QWORD *)v761 + 7);
                    swift_bridgeObjectRetain();
                  }
                  v778 = *((_QWORD *)v761 + 8);
                  if (v778)
                  {
                    v779 = *((_QWORD *)v761 + 9);
                    *((_QWORD *)v760 + 8) = v778;
                    *((_QWORD *)v760 + 9) = v779;
                    *((_QWORD *)v760 + 10) = *((_QWORD *)v761 + 10);
                    *((_QWORD *)v760 + 11) = *((_QWORD *)v761 + 11);
                    v780 = *((_QWORD *)v761 + 13);
                    *((_QWORD *)v760 + 12) = *((_QWORD *)v761 + 12);
                    *((_QWORD *)v760 + 13) = v780;
                    *((_QWORD *)v760 + 14) = *((_QWORD *)v761 + 14);
                    *((_QWORD *)v760 + 15) = *((_QWORD *)v761 + 15);
                    v781 = *((_QWORD *)v761 + 17);
                    *((_QWORD *)v760 + 16) = *((_QWORD *)v761 + 16);
                    *((_QWORD *)v760 + 17) = v781;
                    *((_QWORD *)v760 + 18) = *((_QWORD *)v761 + 18);
                    *((_QWORD *)v760 + 19) = *((_QWORD *)v761 + 19);
                    v782 = *((_QWORD *)v761 + 21);
                    *((_QWORD *)v760 + 20) = *((_QWORD *)v761 + 20);
                    *((_QWORD *)v760 + 21) = v782;
                    v1850 = *((_QWORD *)v761 + 23);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    if (v1850 == 1)
                    {
                      *((_OWORD *)v760 + 11) = *((_OWORD *)v761 + 11);
                    }
                    else
                    {
                      *((_QWORD *)v760 + 22) = *((_QWORD *)v761 + 22);
                      *((_QWORD *)v760 + 23) = *((_QWORD *)v761 + 23);
                      swift_bridgeObjectRetain();
                    }
                    v763 = v1870;
                    *((_QWORD *)v760 + 24) = *((_QWORD *)v761 + 24);
                  }
                  else
                  {
                    *((_OWORD *)v760 + 4) = *((_OWORD *)v761 + 4);
                    v783 = *((_OWORD *)v761 + 5);
                    v784 = *((_OWORD *)v761 + 6);
                    v785 = *((_OWORD *)v761 + 8);
                    *((_OWORD *)v760 + 7) = *((_OWORD *)v761 + 7);
                    *((_OWORD *)v760 + 8) = v785;
                    *((_OWORD *)v760 + 5) = v783;
                    *((_OWORD *)v760 + 6) = v784;
                    v786 = *((_OWORD *)v761 + 9);
                    v787 = *((_OWORD *)v761 + 10);
                    v788 = *((_OWORD *)v761 + 11);
                    *((_QWORD *)v760 + 24) = *((_QWORD *)v761 + 24);
                    *((_OWORD *)v760 + 10) = v787;
                    *((_OWORD *)v760 + 11) = v788;
                    *((_OWORD *)v760 + 9) = v786;
                    v763 = v1870;
                  }
                  v760[200] = v761[200];
                  v789 = (uint64_t *)(v761 + 208);
                  v790 = *((_QWORD *)v761 + 27);
                  if (v790 >> 60 == 15)
                  {
                    *((_OWORD *)v760 + 13) = *(_OWORD *)v789;
                  }
                  else
                  {
                    v791 = *v789;
                    sub_1AD0040A0(*v789, v790);
                    *((_QWORD *)v760 + 26) = v791;
                    *((_QWORD *)v760 + 27) = v790;
                  }
                }
                else
                {
                  v766 = *((_OWORD *)v761 + 1);
                  *(_OWORD *)v760 = *(_OWORD *)v761;
                  *((_OWORD *)v760 + 1) = v766;
                  v767 = *((_OWORD *)v761 + 2);
                  v768 = *((_OWORD *)v761 + 3);
                  v769 = *((_OWORD *)v761 + 5);
                  *((_OWORD *)v760 + 4) = *((_OWORD *)v761 + 4);
                  *((_OWORD *)v760 + 5) = v769;
                  *((_OWORD *)v760 + 2) = v767;
                  *((_OWORD *)v760 + 3) = v768;
                  v770 = *((_OWORD *)v761 + 6);
                  v771 = *((_OWORD *)v761 + 7);
                  v772 = *((_OWORD *)v761 + 9);
                  *((_OWORD *)v760 + 8) = *((_OWORD *)v761 + 8);
                  *((_OWORD *)v760 + 9) = v772;
                  *((_OWORD *)v760 + 6) = v770;
                  *((_OWORD *)v760 + 7) = v771;
                  v773 = *((_OWORD *)v761 + 10);
                  v774 = *((_OWORD *)v761 + 11);
                  v775 = *((_OWORD *)v761 + 13);
                  *((_OWORD *)v760 + 12) = *((_OWORD *)v761 + 12);
                  *((_OWORD *)v760 + 13) = v775;
                  *((_OWORD *)v760 + 10) = v773;
                  *((_OWORD *)v760 + 11) = v774;
                }
                *(_QWORD *)&v737[v752[7]] = *(_QWORD *)&v738[v752[7]];
                v792 = v752[8];
                v793 = &v737[v792];
                v794 = &v738[v792];
                v795 = *(_QWORD *)&v738[v792 + 8];
                swift_bridgeObjectRetain();
                v4 = v1911;
                if (v795 >> 60 == 15)
                {
                  *(_OWORD *)v793 = *(_OWORD *)v794;
                }
                else
                {
                  v796 = *(_QWORD *)v794;
                  sub_1AD0040A0(v796, v795);
                  *(_QWORD *)v793 = v796;
                  *((_QWORD *)v793 + 1) = v795;
                }
                v797 = v752[9];
                v798 = &v737[v797];
                v799 = &v738[v797];
                v800 = *((_QWORD *)v799 + 1);
                if (v800 >> 60 == 15)
                {
                  *(_OWORD *)v798 = *(_OWORD *)v799;
                }
                else
                {
                  v801 = *(_QWORD *)v799;
                  sub_1AD0040A0(*(_QWORD *)v799, *((_QWORD *)v799 + 1));
                  *(_QWORD *)v798 = v801;
                  *((_QWORD *)v798 + 1) = v800;
                }
                v737[v752[10]] = v738[v752[10]];
                v737[v752[11]] = v738[v752[11]];
                v802 = v752[12];
                v803 = &v737[v802];
                v804 = &v738[v802];
                v805 = *((_QWORD *)v804 + 1);
                if (v805 >> 60 == 15)
                {
                  *(_OWORD *)v803 = *(_OWORD *)v804;
                }
                else
                {
                  v806 = *(_QWORD *)v804;
                  sub_1AD0040A0(*(_QWORD *)v804, *((_QWORD *)v804 + 1));
                  *(_QWORD *)v803 = v806;
                  *((_QWORD *)v803 + 1) = v805;
                }
                *(_QWORD *)&v737[v752[13]] = *(_QWORD *)&v738[v752[13]];
                *((_BYTE *)v1867 + v763[7]) = v1898[v763[7]];
                *((_BYTE *)v1867 + v763[8]) = v1898[v763[8]];
                *((_BYTE *)v1867 + v763[9]) = v1898[v763[9]];
                *((_BYTE *)v1867 + v763[10]) = v1898[v763[10]];
                *((_BYTE *)v1867 + v763[11]) = v1898[v763[11]];
                *((_BYTE *)v1867 + v763[12]) = v1898[v763[12]];
                *((_BYTE *)v1867 + v763[13]) = v1898[v763[13]];
                *((_BYTE *)v1867 + v763[14]) = v1898[v763[14]];
                v807 = v763[15];
                v808 = (char *)v1867 + v807;
                v809 = &v1898[v807];
                v810 = *((_QWORD *)v809 + 1);
                if (v810 >> 60 == 15)
                {
                  *(_OWORD *)v808 = *(_OWORD *)v809;
                }
                else
                {
                  v811 = *(_QWORD *)v809;
                  sub_1AD0040A0(*(_QWORD *)v809, *((_QWORD *)v809 + 1));
                  *(_QWORD *)v808 = v811;
                  *((_QWORD *)v808 + 1) = v810;
                }
                a1 = v1919;
                v731 = v1892;
                v812 = v763[16];
                v813 = (char *)v1867 + v812;
                v814 = &v1898[v812];
                v815 = *((_QWORD *)v814 + 1);
                if (v815 >> 60 == 15)
                {
                  *(_OWORD *)v813 = *(_OWORD *)v814;
                }
                else
                {
                  v816 = *(_QWORD *)v814;
                  sub_1AD0040A0(*(_QWORD *)v814, *((_QWORD *)v814 + 1));
                  *(_QWORD *)v813 = v816;
                  *((_QWORD *)v813 + 1) = v815;
                }
                *((_BYTE *)v1867 + v763[17]) = v1898[v763[17]];
                *((_BYTE *)v1867 + v763[18]) = v1898[v763[18]];
                v817 = v763[19];
                v818 = (_DWORD *)((char *)v1867 + v817);
                v819 = &v1898[v817];
                v820 = type metadata accessor for CloudKitSharingToken();
                v821 = *(_QWORD *)(v820 - 8);
                if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v821 + 48))(v819, 1, v820))
                {
                  v822 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                  memcpy(v818, v819, *(_QWORD *)(*(_QWORD *)(v822 - 8) + 64));
                  v823 = v1888;
                  v824 = v1870;
                }
                else
                {
                  *v818 = *v819;
                  *((_QWORD *)v818 + 1) = *((_QWORD *)v819 + 1);
                  *((_QWORD *)v818 + 2) = *((_QWORD *)v819 + 2);
                  v825 = *((_QWORD *)v819 + 4);
                  *((_QWORD *)v818 + 3) = *((_QWORD *)v819 + 3);
                  *((_QWORD *)v818 + 4) = v825;
                  v826 = (uint64_t *)(v819 + 10);
                  v827 = *((_QWORD *)v819 + 6);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  if (v827 >> 60 == 11 || v827 >> 60 == 15)
                  {
                    *(_OWORD *)(v818 + 10) = *(_OWORD *)v826;
                  }
                  else
                  {
                    v849 = *v826;
                    sub_1AD0040A0(*v826, v827);
                    *((_QWORD *)v818 + 5) = v849;
                    *((_QWORD *)v818 + 6) = v827;
                  }
                  v4 = v1911;
                  if (*((_QWORD *)v819 + 9))
                  {
                    v818[14] = v819[14];
                    v850 = v819[15];
                    *((_BYTE *)v818 + 64) = *((_BYTE *)v819 + 64);
                    v818[15] = v850;
                    v851 = *((_QWORD *)v819 + 10);
                    *((_QWORD *)v818 + 9) = *((_QWORD *)v819 + 9);
                    *((_QWORD *)v818 + 10) = v851;
                    v852 = v819 + 22;
                    v853 = *((_QWORD *)v819 + 12);
                    swift_retain();
                    if (v853 >> 60 == 15)
                    {
                      *(_OWORD *)(v818 + 22) = *v852;
                    }
                    else
                    {
                      v856 = *(_QWORD *)v852;
                      sub_1AD0040A0(v856, v853);
                      *((_QWORD *)v818 + 11) = v856;
                      *((_QWORD *)v818 + 12) = v853;
                    }
                  }
                  else
                  {
                    v854 = *(_OWORD *)(v819 + 14);
                    v855 = *(_OWORD *)(v819 + 22);
                    *(_OWORD *)(v818 + 18) = *(_OWORD *)(v819 + 18);
                    *(_OWORD *)(v818 + 22) = v855;
                    *(_OWORD *)(v818 + 14) = v854;
                  }
                  v857 = *((_QWORD *)v819 + 14);
                  *((_QWORD *)v818 + 13) = *((_QWORD *)v819 + 13);
                  *((_QWORD *)v818 + 14) = v857;
                  v858 = v819 + 30;
                  v859 = *((_QWORD *)v819 + 16);
                  swift_retain();
                  if (v859 >> 60 == 15)
                  {
                    *(_OWORD *)(v818 + 30) = *v858;
                  }
                  else
                  {
                    v860 = *(_QWORD *)v858;
                    sub_1AD0040A0(v860, v859);
                    *((_QWORD *)v818 + 15) = v860;
                    *((_QWORD *)v818 + 16) = v859;
                  }
                  v861 = *((_QWORD *)v819 + 18);
                  *((_QWORD *)v818 + 17) = *((_QWORD *)v819 + 17);
                  *((_QWORD *)v818 + 18) = v861;
                  v862 = (uint64_t *)(v819 + 38);
                  v863 = *((_QWORD *)v819 + 20);
                  swift_retain();
                  if (v863 >> 60 == 11 || v863 >> 60 == 15)
                  {
                    *(_OWORD *)(v818 + 38) = *(_OWORD *)v862;
                  }
                  else
                  {
                    v864 = *v862;
                    sub_1AD0040A0(*v862, v863);
                    *((_QWORD *)v818 + 19) = v864;
                    *((_QWORD *)v818 + 20) = v863;
                  }
                  v865 = *((_QWORD *)v819 + 21);
                  if (v865)
                  {
                    v866 = *((_QWORD *)v819 + 22);
                    *((_QWORD *)v818 + 21) = v865;
                    *((_QWORD *)v818 + 22) = v866;
                    v867 = v819 + 46;
                    v868 = *((_QWORD *)v819 + 24);
                    swift_retain();
                    if (v868 >> 60 == 15)
                    {
                      *(_OWORD *)(v818 + 46) = *v867;
                    }
                    else
                    {
                      v872 = *(_QWORD *)v867;
                      sub_1AD0040A0(v872, v868);
                      *((_QWORD *)v818 + 23) = v872;
                      *((_QWORD *)v818 + 24) = v868;
                    }
                    v818[50] = v819[50];
                    v873 = *((_QWORD *)v819 + 27);
                    *((_QWORD *)v818 + 26) = *((_QWORD *)v819 + 26);
                    *((_QWORD *)v818 + 27) = v873;
                    v874 = v819 + 56;
                    v875 = *((_QWORD *)v819 + 29);
                    swift_retain();
                    if (v875 >> 60 == 15)
                    {
                      *((_OWORD *)v818 + 14) = *v874;
                    }
                    else
                    {
                      v876 = *(_QWORD *)v874;
                      sub_1AD0040A0(v876, v875);
                      *((_QWORD *)v818 + 28) = v876;
                      *((_QWORD *)v818 + 29) = v875;
                    }
                  }
                  else
                  {
                    *(_OWORD *)(v818 + 42) = *(_OWORD *)(v819 + 42);
                    v869 = *(_OWORD *)(v819 + 46);
                    v870 = *(_OWORD *)(v819 + 50);
                    v871 = *(_OWORD *)(v819 + 54);
                    *((_QWORD *)v818 + 29) = *((_QWORD *)v819 + 29);
                    *(_OWORD *)(v818 + 50) = v870;
                    *(_OWORD *)(v818 + 54) = v871;
                    *(_OWORD *)(v818 + 46) = v869;
                  }
                  *((_QWORD *)v818 + 30) = *((_QWORD *)v819 + 30);
                  v877 = *((_QWORD *)v819 + 32);
                  *((_QWORD *)v818 + 31) = *((_QWORD *)v819 + 31);
                  *((_QWORD *)v818 + 32) = v877;
                  v878 = (uint64_t *)(v819 + 66);
                  v879 = *((_QWORD *)v819 + 34);
                  swift_bridgeObjectRetain();
                  swift_retain();
                  if (v879 >> 60 == 11 || v879 >> 60 == 15)
                  {
                    *(_OWORD *)(v818 + 66) = *(_OWORD *)v878;
                  }
                  else
                  {
                    v880 = *v878;
                    sub_1AD0040A0(*v878, v879);
                    *((_QWORD *)v818 + 33) = v880;
                    *((_QWORD *)v818 + 34) = v879;
                  }
                  v881 = *(int *)(v820 + 24);
                  v882 = (_QWORD *)((char *)v818 + v881);
                  v883 = (char *)v819 + v881;
                  v884 = *(_QWORD *)((char *)v819 + v881 + 8);
                  *v882 = *(_QWORD *)((char *)v819 + v881);
                  v882[1] = v884;
                  swift_retain();
                  v885 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
                  v886 = (char *)v882 + v885;
                  v887 = &v883[v885];
                  v888 = sub_1AD63AF28();
                  v889 = *(_QWORD *)(v888 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v889 + 48))(v887, 1, v888))
                  {
                    v890 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                    memcpy(v886, v887, *(_QWORD *)(*(_QWORD *)(v890 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v889 + 16))(v886, v887, v888);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v889 + 56))(v886, 0, 1, v888);
                  }
                  v891 = *(int *)(v820 + 28);
                  v892 = (char *)v818 + v891;
                  v893 = (char *)v819 + v891;
                  v894 = *(_QWORD *)((char *)v819 + v891 + 8);
                  *(_QWORD *)v892 = *(_QWORD *)((char *)v819 + v891);
                  *((_QWORD *)v892 + 1) = v894;
                  v895 = *(_QWORD *)((char *)v819 + v891 + 24);
                  swift_retain();
                  v731 = v1892;
                  if (v895 == 1)
                  {
                    *((_OWORD *)v892 + 1) = *((_OWORD *)v893 + 1);
                  }
                  else
                  {
                    *((_QWORD *)v892 + 2) = *((_QWORD *)v893 + 2);
                    *((_QWORD *)v892 + 3) = *((_QWORD *)v893 + 3);
                    swift_bridgeObjectRetain();
                  }
                  v823 = v1888;
                  v824 = v1870;
                  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v821 + 56))(v818, 0, 1, v820);
                }
                v896 = v824[20];
                v897 = (char *)v1867 + v896;
                v898 = &v1898[v896];
                v899 = *((_QWORD *)v898 + 1);
                v13 = v1879;
                if (v899 >> 60 == 15)
                {
                  *(_OWORD *)v897 = *(_OWORD *)v898;
                }
                else
                {
                  v900 = *(_QWORD *)v898;
                  sub_1AD0040A0(*(_QWORD *)v898, *((_QWORD *)v898 + 1));
                  *(_QWORD *)v897 = v900;
                  *((_QWORD *)v897 + 1) = v899;
                }
                *((_BYTE *)v1867 + v824[21]) = v1898[v824[21]];
                *((_BYTE *)v1867 + v824[22]) = v1898[v824[22]];
                *((_BYTE *)v1867 + v824[23]) = v1898[v824[23]];
                v1860[7]();
                v12 = v823;
LABEL_931:
                v1281 = v731[7];
                v1282 = v12;
                v1283 = (_QWORD *)((char *)v12 + v1281);
                v1284 = (char *)v13 + v1281;
                v1285 = *(_QWORD *)((char *)v13 + v1281 + 8);
                *v1283 = *(_QWORD *)((char *)v13 + v1281);
                v1283[1] = v1285;
                swift_retain();
                swift_release();
                v1286 = *((_QWORD *)v1284 + 3);
                if (v1283[3] == 1)
                {
                  if (v1286 != 1)
                  {
                    v1283[2] = *((_QWORD *)v1284 + 2);
                    v1283[3] = *((_QWORD *)v1284 + 3);
                    swift_bridgeObjectRetain();
                    goto LABEL_938;
                  }
                }
                else
                {
                  if (v1286 != 1)
                  {
                    v1283[2] = *((_QWORD *)v1284 + 2);
                    v1283[3] = *((_QWORD *)v1284 + 3);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
LABEL_938:
                    *((_BYTE *)v1282 + v731[8]) = *((_BYTE *)v13 + v731[8]);
                    v1287 = v731[9];
                    v1288 = (_QWORD *)((char *)v1282 + v1287);
                    v1289 = (char *)v13 + v1287;
                    v1290 = *(_QWORD *)((char *)v13 + v1287 + 8);
                    *v1288 = *(_QWORD *)((char *)v13 + v1287);
                    v1288[1] = v1290;
                    swift_retain();
                    swift_release();
                    v1291 = *((_QWORD *)v1289 + 3);
                    if (v1288[3] == 1)
                    {
                      if (v1291 != 1)
                      {
                        v1288[2] = *((_QWORD *)v1289 + 2);
                        v1288[3] = *((_QWORD *)v1289 + 3);
                        swift_bridgeObjectRetain();
LABEL_945:
                        *(_QWORD *)((char *)v1282 + v731[10]) = *(_QWORD *)((char *)v13 + v731[10]);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        a3 = v1902;
                        goto LABEL_946;
                      }
                    }
                    else
                    {
                      if (v1291 != 1)
                      {
                        v1288[2] = *((_QWORD *)v1289 + 2);
                        v1288[3] = *((_QWORD *)v1289 + 3);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        goto LABEL_945;
                      }
                      sub_1AD009758((uint64_t)(v1288 + 2), &qword_1ED2E3198);
                    }
                    *((_OWORD *)v1288 + 1) = *((_OWORD *)v1289 + 1);
                    goto LABEL_945;
                  }
                  sub_1AD009758((uint64_t)(v1283 + 2), &qword_1ED2E3198);
                }
                *((_OWORD *)v1283 + 1) = *((_OWORD *)v1284 + 1);
                goto LABEL_938;
              }
LABEL_488:
              v730 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
              memcpy(v723, v724, *(_QWORD *)(*(_QWORD *)(v730 - 8) + 64));
              v731 = v1892;
              goto LABEL_931;
            }
            if (v726)
            {
              sub_1AD066230((uint64_t)v723, type metadata accessor for CloudKitShareParticipant);
              goto LABEL_488;
            }
            v732 = v724[1];
            *v723 = *v724;
            v723[1] = v732;
            swift_retain();
            swift_release();
            v723[2] = v724[2];
            v723[3] = v724[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v733 = v724[5];
            v723[4] = v724[4];
            v723[5] = v733;
            swift_retain();
            swift_release();
            v734 = v724[7];
            v1878 = v13;
            if (v723[7] == 1)
            {
              if (v734 != 1)
              {
                v735 = v724;
                v723[6] = v724[6];
                v723[7] = v724[7];
                swift_bridgeObjectRetain();
                goto LABEL_543;
              }
            }
            else
            {
              if (v734 != 1)
              {
                v735 = v724;
                v723[6] = v724[6];
                v723[7] = v724[7];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
LABEL_543:
                v828 = v1870[6];
                v829 = (uint64_t)v723 + v828;
                v830 = (char *)v735 + v828;
                v831 = *(_QWORD *)((char *)v723 + v828);
                v832 = *(_QWORD *)v830;
                v1889 = v12;
                v1868 = v723;
                if (!v831)
                {
                  if (v832)
                  {
                    v1912 = v4;
                    v838 = *((_QWORD *)v830 + 1);
                    *(_QWORD *)v829 = v832;
                    *(_QWORD *)(v829 + 8) = v838;
                    *(_QWORD *)(v829 + 16) = *((_QWORD *)v830 + 2);
                    *(_QWORD *)(v829 + 24) = *((_QWORD *)v830 + 3);
                    v839 = *((_QWORD *)v830 + 5);
                    *(_QWORD *)(v829 + 32) = *((_QWORD *)v830 + 4);
                    *(_QWORD *)(v829 + 40) = v839;
                    *(_QWORD *)(v829 + 48) = *((_QWORD *)v830 + 6);
                    *(_QWORD *)(v829 + 56) = *((_QWORD *)v830 + 7);
                    v840 = *((_QWORD *)v830 + 9);
                    *(_QWORD *)(v829 + 64) = *((_QWORD *)v830 + 8);
                    *(_QWORD *)(v829 + 72) = v840;
                    *(_QWORD *)(v829 + 80) = *((_QWORD *)v830 + 10);
                    *(_QWORD *)(v829 + 88) = *((_QWORD *)v830 + 11);
                    v841 = *((_QWORD *)v830 + 13);
                    *(_QWORD *)(v829 + 96) = *((_QWORD *)v830 + 12);
                    *(_QWORD *)(v829 + 104) = v841;
                    v842 = *((_QWORD *)v830 + 15);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    if (v842 == 1)
                    {
                      *(_OWORD *)(v829 + 112) = *((_OWORD *)v830 + 7);
                    }
                    else
                    {
                      *(_QWORD *)(v829 + 112) = *((_QWORD *)v830 + 14);
                      *(_QWORD *)(v829 + 120) = *((_QWORD *)v830 + 15);
                      swift_bridgeObjectRetain();
                    }
                    *(_QWORD *)(v829 + 128) = *((_QWORD *)v830 + 16);
                    v4 = v1912;
                  }
                  else
                  {
                    *(_OWORD *)v829 = *(_OWORD *)v830;
                    v901 = *((_OWORD *)v830 + 1);
                    v902 = *((_OWORD *)v830 + 2);
                    v903 = *((_OWORD *)v830 + 4);
                    *(_OWORD *)(v829 + 48) = *((_OWORD *)v830 + 3);
                    *(_OWORD *)(v829 + 64) = v903;
                    *(_OWORD *)(v829 + 16) = v901;
                    *(_OWORD *)(v829 + 32) = v902;
                    v904 = *((_OWORD *)v830 + 5);
                    v905 = *((_OWORD *)v830 + 6);
                    v906 = *((_OWORD *)v830 + 7);
                    *(_QWORD *)(v829 + 128) = *((_QWORD *)v830 + 16);
                    *(_OWORD *)(v829 + 96) = v905;
                    *(_OWORD *)(v829 + 112) = v906;
                    *(_OWORD *)(v829 + 80) = v904;
                  }
LABEL_596:
                  v1861 = (int *)type metadata accessor for CloudKitUserIdentity(0);
                  v907 = v1861[5];
                  v908 = (void *)(v829 + v907);
                  v909 = &v830[v907];
                  v910 = sub_1AD63AE2C();
                  v911 = *(_QWORD *)(v910 - 8);
                  v912 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v911 + 48);
                  v913 = v912(v908, 1, v910);
                  v914 = v912(v909, 1, v910);
                  if (v913)
                  {
                    if (!v914)
                    {
                      (*(void (**)(void *, char *, uint64_t))(v911 + 16))(v908, v909, v910);
                      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v911 + 56))(v908, 0, 1, v910);
                      goto LABEL_602;
                    }
                  }
                  else
                  {
                    if (!v914)
                    {
                      (*(void (**)(void *, char *, uint64_t))(v911 + 24))(v908, v909, v910);
LABEL_602:
                      v916 = v1861[6];
                      v917 = v829 + v916;
                      v918 = &v830[v916];
                      v919 = *(_QWORD *)(v829 + v916);
                      v920 = *(_QWORD *)&v830[v916];
                      v921 = v1870;
                      if (v919)
                      {
                        if (v920)
                        {
                          v922 = *((_QWORD *)v918 + 1);
                          *(_QWORD *)v917 = v920;
                          *(_QWORD *)(v917 + 8) = v922;
                          swift_retain();
                          swift_release();
                          v923 = *((_QWORD *)v918 + 3);
                          if (*(_QWORD *)(v917 + 24) == 1)
                          {
                            if (v923 != 1)
                            {
                              *(_QWORD *)(v917 + 16) = *((_QWORD *)v918 + 2);
                              *(_QWORD *)(v917 + 24) = *((_QWORD *)v918 + 3);
                              swift_bridgeObjectRetain();
                              goto LABEL_624;
                            }
                          }
                          else
                          {
                            if (v923 != 1)
                            {
                              *(_QWORD *)(v917 + 16) = *((_QWORD *)v918 + 2);
                              *(_QWORD *)(v917 + 24) = *((_QWORD *)v918 + 3);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
LABEL_624:
                              v953 = *((_QWORD *)v918 + 5);
                              *(_QWORD *)(v917 + 32) = *((_QWORD *)v918 + 4);
                              *(_QWORD *)(v917 + 40) = v953;
                              swift_retain();
                              swift_release();
                              v954 = *((_QWORD *)v918 + 7);
                              if (*(_QWORD *)(v917 + 56) == 1)
                              {
                                if (v954 != 1)
                                {
                                  *(_QWORD *)(v917 + 48) = *((_QWORD *)v918 + 6);
                                  *(_QWORD *)(v917 + 56) = *((_QWORD *)v918 + 7);
                                  swift_bridgeObjectRetain();
                                  goto LABEL_631;
                                }
                              }
                              else
                              {
                                if (v954 != 1)
                                {
                                  *(_QWORD *)(v917 + 48) = *((_QWORD *)v918 + 6);
                                  *(_QWORD *)(v917 + 56) = *((_QWORD *)v918 + 7);
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
LABEL_631:
                                  v955 = (_OWORD *)(v917 + 64);
                                  v957 = v918 + 64;
                                  v956 = *((_QWORD *)v918 + 8);
                                  if (*(_QWORD *)(v917 + 64))
                                  {
                                    if (!v956)
                                    {
                                      sub_1AD311474(v917 + 64);
                                      *v955 = *v957;
                                      v967 = *((_OWORD *)v918 + 8);
                                      v969 = *((_OWORD *)v918 + 5);
                                      v968 = *((_OWORD *)v918 + 6);
                                      *(_OWORD *)(v917 + 112) = *((_OWORD *)v918 + 7);
                                      *(_OWORD *)(v917 + 128) = v967;
                                      *(_OWORD *)(v917 + 80) = v969;
                                      *(_OWORD *)(v917 + 96) = v968;
                                      v971 = *((_OWORD *)v918 + 10);
                                      v970 = *((_OWORD *)v918 + 11);
                                      v972 = *((_OWORD *)v918 + 9);
                                      *(_QWORD *)(v917 + 192) = *((_QWORD *)v918 + 24);
                                      *(_OWORD *)(v917 + 160) = v971;
                                      *(_OWORD *)(v917 + 176) = v970;
                                      *(_OWORD *)(v917 + 144) = v972;
                                      goto LABEL_655;
                                    }
                                    v958 = *((_QWORD *)v918 + 9);
                                    *(_QWORD *)(v917 + 64) = v956;
                                    *(_QWORD *)(v917 + 72) = v958;
                                    swift_retain();
                                    swift_release();
                                    *(_QWORD *)(v917 + 80) = *((_QWORD *)v918 + 10);
                                    *(_QWORD *)(v917 + 88) = *((_QWORD *)v918 + 11);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v959 = *((_QWORD *)v918 + 13);
                                    *(_QWORD *)(v917 + 96) = *((_QWORD *)v918 + 12);
                                    *(_QWORD *)(v917 + 104) = v959;
                                    swift_retain();
                                    swift_release();
                                    *(_QWORD *)(v917 + 112) = *((_QWORD *)v918 + 14);
                                    *(_QWORD *)(v917 + 120) = *((_QWORD *)v918 + 15);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v960 = *((_QWORD *)v918 + 17);
                                    *(_QWORD *)(v917 + 128) = *((_QWORD *)v918 + 16);
                                    *(_QWORD *)(v917 + 136) = v960;
                                    swift_retain();
                                    swift_release();
                                    *(_QWORD *)(v917 + 144) = *((_QWORD *)v918 + 18);
                                    *(_QWORD *)(v917 + 152) = *((_QWORD *)v918 + 19);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v961 = *((_QWORD *)v918 + 21);
                                    *(_QWORD *)(v917 + 160) = *((_QWORD *)v918 + 20);
                                    *(_QWORD *)(v917 + 168) = v961;
                                    swift_retain();
                                    swift_release();
                                    v962 = *((_QWORD *)v918 + 23);
                                    if (*(_QWORD *)(v917 + 184) == 1)
                                    {
                                      if (v962 != 1)
                                      {
                                        *(_QWORD *)(v917 + 176) = *((_QWORD *)v918 + 22);
                                        *(_QWORD *)(v917 + 184) = *((_QWORD *)v918 + 23);
                                        swift_bridgeObjectRetain();
                                        goto LABEL_654;
                                      }
                                    }
                                    else
                                    {
                                      if (v962 != 1)
                                      {
                                        *(_QWORD *)(v917 + 176) = *((_QWORD *)v918 + 22);
                                        *(_QWORD *)(v917 + 184) = *((_QWORD *)v918 + 23);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        goto LABEL_654;
                                      }
                                      sub_1AD009758(v917 + 176, &qword_1ED2E3198);
                                    }
                                    *(_OWORD *)(v917 + 176) = *((_OWORD *)v918 + 11);
                                    goto LABEL_654;
                                  }
                                  if (!v956)
                                  {
                                    *v955 = *v957;
                                    v982 = *((_OWORD *)v918 + 5);
                                    v983 = *((_OWORD *)v918 + 6);
                                    v984 = *((_OWORD *)v918 + 8);
                                    *(_OWORD *)(v917 + 112) = *((_OWORD *)v918 + 7);
                                    *(_OWORD *)(v917 + 128) = v984;
                                    *(_OWORD *)(v917 + 80) = v982;
                                    *(_OWORD *)(v917 + 96) = v983;
                                    v985 = *((_OWORD *)v918 + 9);
                                    v986 = *((_OWORD *)v918 + 10);
                                    v987 = *((_OWORD *)v918 + 11);
                                    *(_QWORD *)(v917 + 192) = *((_QWORD *)v918 + 24);
                                    *(_OWORD *)(v917 + 160) = v986;
                                    *(_OWORD *)(v917 + 176) = v987;
                                    *(_OWORD *)(v917 + 144) = v985;
                                    goto LABEL_655;
                                  }
                                  v1914 = v4;
                                  v963 = *((_QWORD *)v918 + 9);
                                  *(_QWORD *)(v917 + 64) = v956;
                                  *(_QWORD *)(v917 + 72) = v963;
                                  *(_QWORD *)(v917 + 80) = *((_QWORD *)v918 + 10);
                                  *(_QWORD *)(v917 + 88) = *((_QWORD *)v918 + 11);
                                  v964 = *((_QWORD *)v918 + 13);
                                  *(_QWORD *)(v917 + 96) = *((_QWORD *)v918 + 12);
                                  *(_QWORD *)(v917 + 104) = v964;
                                  *(_QWORD *)(v917 + 112) = *((_QWORD *)v918 + 14);
                                  *(_QWORD *)(v917 + 120) = *((_QWORD *)v918 + 15);
                                  v965 = *((_QWORD *)v918 + 17);
                                  *(_QWORD *)(v917 + 128) = *((_QWORD *)v918 + 16);
                                  *(_QWORD *)(v917 + 136) = v965;
                                  *(_QWORD *)(v917 + 144) = *((_QWORD *)v918 + 18);
                                  *(_QWORD *)(v917 + 152) = *((_QWORD *)v918 + 19);
                                  v966 = *((_QWORD *)v918 + 21);
                                  *(_QWORD *)(v917 + 160) = *((_QWORD *)v918 + 20);
                                  *(_QWORD *)(v917 + 168) = v966;
                                  v1852 = *((_QWORD *)v918 + 23);
                                  swift_retain();
                                  swift_bridgeObjectRetain();
                                  swift_retain();
                                  swift_bridgeObjectRetain();
                                  swift_retain();
                                  swift_bridgeObjectRetain();
                                  swift_retain();
                                  if (v1852 == 1)
                                  {
                                    *(_OWORD *)(v917 + 176) = *((_OWORD *)v918 + 11);
                                  }
                                  else
                                  {
                                    *(_QWORD *)(v917 + 176) = *((_QWORD *)v918 + 22);
                                    *(_QWORD *)(v917 + 184) = *((_QWORD *)v918 + 23);
                                    swift_bridgeObjectRetain();
                                  }
                                  v4 = v1914;
                                  v921 = v1870;
LABEL_654:
                                  *(_QWORD *)(v917 + 192) = *((_QWORD *)v918 + 24);
LABEL_655:
                                  *(_BYTE *)(v917 + 200) = v918[200];
                                  v988 = (uint64_t *)(v918 + 208);
                                  v989 = *((_QWORD *)v918 + 27);
                                  if (*(_QWORD *)(v917 + 216) >> 60 == 15)
                                  {
                                    v731 = v1892;
                                    if (v989 >> 60 != 15)
                                    {
                                      v990 = *v988;
                                      sub_1AD0040A0(*v988, v989);
                                      *(_QWORD *)(v917 + 208) = v990;
                                      *(_QWORD *)(v917 + 216) = v989;
                                      goto LABEL_662;
                                    }
                                  }
                                  else
                                  {
                                    v731 = v1892;
                                    if (v989 >> 60 != 15)
                                    {
                                      v991 = *v988;
                                      sub_1AD0040A0(*v988, v989);
                                      v992 = *(_QWORD *)(v917 + 208);
                                      v993 = *(_QWORD *)(v917 + 216);
                                      *(_QWORD *)(v917 + 208) = v991;
                                      *(_QWORD *)(v917 + 216) = v989;
                                      sub_1AD00412C(v992, v993);
LABEL_662:
                                      *(_QWORD *)(v829 + v1861[7]) = *(_QWORD *)&v830[v1861[7]];
                                      swift_bridgeObjectRetain();
                                      swift_bridgeObjectRelease();
                                      v994 = v1861[8];
                                      v995 = (uint64_t *)(v829 + v994);
                                      v996 = (uint64_t *)&v830[v994];
                                      v997 = *(_QWORD *)&v830[v994 + 8];
                                      if (*(_QWORD *)(v829 + v994 + 8) >> 60 == 15)
                                      {
                                        if (v997 >> 60 != 15)
                                        {
                                          v998 = *v996;
                                          sub_1AD0040A0(v998, v997);
                                          *v995 = v998;
                                          v995[1] = v997;
                                          goto LABEL_669;
                                        }
                                      }
                                      else
                                      {
                                        if (v997 >> 60 != 15)
                                        {
                                          v999 = *v996;
                                          sub_1AD0040A0(v999, v997);
                                          v1000 = *v995;
                                          v1001 = v995[1];
                                          *v995 = v999;
                                          v995[1] = v997;
                                          sub_1AD00412C(v1000, v1001);
LABEL_669:
                                          v1002 = v1861[9];
                                          v1003 = (uint64_t *)(v829 + v1002);
                                          v1004 = (uint64_t *)&v830[v1002];
                                          v1005 = *(_QWORD *)&v830[v1002 + 8];
                                          if (*(_QWORD *)(v829 + v1002 + 8) >> 60 == 15)
                                          {
                                            if (v1005 >> 60 != 15)
                                            {
                                              v1006 = *v1004;
                                              sub_1AD0040A0(v1006, v1005);
                                              *v1003 = v1006;
                                              v1003[1] = v1005;
                                              goto LABEL_676;
                                            }
                                          }
                                          else
                                          {
                                            if (v1005 >> 60 != 15)
                                            {
                                              v1007 = *v1004;
                                              sub_1AD0040A0(v1007, v1005);
                                              v1008 = *v1003;
                                              v1009 = v1003[1];
                                              *v1003 = v1007;
                                              v1003[1] = v1005;
                                              sub_1AD00412C(v1008, v1009);
LABEL_676:
                                              *(_BYTE *)(v829 + v1861[10]) = v830[v1861[10]];
                                              *(_BYTE *)(v829 + v1861[11]) = v830[v1861[11]];
                                              v1010 = v1861[12];
                                              v1011 = (uint64_t *)(v829 + v1010);
                                              v1012 = (uint64_t *)&v830[v1010];
                                              v1013 = *(_QWORD *)&v830[v1010 + 8];
                                              if (*(_QWORD *)(v829 + v1010 + 8) >> 60 == 15)
                                              {
                                                if (v1013 >> 60 != 15)
                                                {
                                                  v1014 = *v1012;
                                                  sub_1AD0040A0(v1014, v1013);
                                                  *v1011 = v1014;
                                                  v1011[1] = v1013;
                                                  goto LABEL_683;
                                                }
                                              }
                                              else
                                              {
                                                if (v1013 >> 60 != 15)
                                                {
                                                  v1015 = *v1012;
                                                  sub_1AD0040A0(v1015, v1013);
                                                  v1016 = *v1011;
                                                  v1017 = v1011[1];
                                                  *v1011 = v1015;
                                                  v1011[1] = v1013;
                                                  sub_1AD00412C(v1016, v1017);
LABEL_683:
                                                  *(_QWORD *)(v829 + v1861[13]) = *(_QWORD *)&v830[v1861[13]];
                                                  *((_BYTE *)v1868 + v921[7]) = v1898[v921[7]];
                                                  *((_BYTE *)v1868 + v921[8]) = v1898[v921[8]];
                                                  *((_BYTE *)v1868 + v921[9]) = v1898[v921[9]];
                                                  *((_BYTE *)v1868 + v921[10]) = v1898[v921[10]];
                                                  *((_BYTE *)v1868 + v921[11]) = v1898[v921[11]];
                                                  *((_BYTE *)v1868 + v921[12]) = v1898[v921[12]];
                                                  *((_BYTE *)v1868 + v921[13]) = v1898[v921[13]];
                                                  *((_BYTE *)v1868 + v921[14]) = v1898[v921[14]];
                                                  v1018 = v921[15];
                                                  v1019 = (_QWORD *)((char *)v1868 + v1018);
                                                  v1020 = (uint64_t *)&v1898[v1018];
                                                  v1021 = *(_QWORD *)&v1898[v1018 + 8];
                                                  if (*(_QWORD *)((char *)v1868 + v1018 + 8) >> 60 == 15)
                                                  {
                                                    if (v1021 >> 60 != 15)
                                                    {
                                                      v1022 = *v1020;
                                                      sub_1AD0040A0(*v1020, v1021);
                                                      *v1019 = v1022;
                                                      v1019[1] = v1021;
                                                      goto LABEL_690;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    if (v1021 >> 60 != 15)
                                                    {
                                                      v1023 = *v1020;
                                                      sub_1AD0040A0(*v1020, v1021);
                                                      v1024 = *v1019;
                                                      v1025 = v1019[1];
                                                      *v1019 = v1023;
                                                      v1019[1] = v1021;
                                                      sub_1AD00412C(v1024, v1025);
LABEL_690:
                                                      v1026 = v921[16];
                                                      v1027 = (_QWORD *)((char *)v1868 + v1026);
                                                      v1028 = (uint64_t *)&v1898[v1026];
                                                      v1029 = *(_QWORD *)&v1898[v1026 + 8];
                                                      if (*(_QWORD *)((char *)v1868 + v1026 + 8) >> 60 == 15)
                                                      {
                                                        if (v1029 >> 60 != 15)
                                                        {
                                                          v1030 = *v1028;
                                                          sub_1AD0040A0(*v1028, v1029);
                                                          *v1027 = v1030;
                                                          v1027[1] = v1029;
                                                          goto LABEL_697;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        if (v1029 >> 60 != 15)
                                                        {
                                                          v1031 = *v1028;
                                                          sub_1AD0040A0(*v1028, v1029);
                                                          v1032 = *v1027;
                                                          v1033 = v1027[1];
                                                          *v1027 = v1031;
                                                          v1027[1] = v1029;
                                                          sub_1AD00412C(v1032, v1033);
LABEL_697:
                                                          v1034 = v1898;
                                                          *((_BYTE *)v1868 + v1870[17]) = v1898[v1870[17]];
                                                          *((_BYTE *)v1868 + v1870[18]) = v1898[v1870[18]];
                                                          v1035 = v1870[19];
                                                          v1036 = (uint64_t)v1868 + v1035;
                                                          v1037 = &v1898[v1035];
                                                          v1038 = type metadata accessor for CloudKitSharingToken();
                                                          __srcd = *(_QWORD **)(v1038 - 8);
                                                          v1039 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__srcd[6];
                                                          v1040 = v1036;
                                                          LODWORD(v1036) = v1039(v1036, 1, v1038);
                                                          v1853 = v1038;
                                                          v1862 = (char *)v1037;
                                                          v1041 = v1039((uint64_t)v1037, 1, v1038);
                                                          if ((_DWORD)v1036)
                                                          {
                                                            if (!v1041)
                                                            {
                                                              *(_DWORD *)v1040 = *v1037;
                                                              *(_QWORD *)(v1040 + 8) = *((_QWORD *)v1037 + 1);
                                                              *(_QWORD *)(v1040 + 16) = *((_QWORD *)v1037 + 2);
                                                              v1042 = *((_QWORD *)v1037 + 4);
                                                              *(_QWORD *)(v1040 + 24) = *((_QWORD *)v1037 + 3);
                                                              *(_QWORD *)(v1040 + 32) = v1042;
                                                              v1043 = (uint64_t *)(v1037 + 10);
                                                              v1044 = *((_QWORD *)v1037 + 6);
                                                              swift_bridgeObjectRetain();
                                                              swift_bridgeObjectRetain();
                                                              swift_retain();
                                                              if (v1044 >> 60 == 11 || v1044 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v1040 + 40) = *(_OWORD *)v1043;
                                                              }
                                                              else
                                                              {
                                                                v1051 = *v1043;
                                                                sub_1AD0040A0(*v1043, v1044);
                                                                *(_QWORD *)(v1040 + 40) = v1051;
                                                                *(_QWORD *)(v1040 + 48) = v1044;
                                                              }
                                                              v1046 = v1870;
                                                              if (*((_QWORD *)v1037 + 9))
                                                              {
                                                                *(_DWORD *)(v1040 + 56) = v1037[14];
                                                                v1052 = v1037[15];
                                                                *(_BYTE *)(v1040 + 64) = *((_BYTE *)v1037 + 64);
                                                                *(_DWORD *)(v1040 + 60) = v1052;
                                                                v1053 = *((_QWORD *)v1037 + 10);
                                                                *(_QWORD *)(v1040 + 72) = *((_QWORD *)v1037 + 9);
                                                                *(_QWORD *)(v1040 + 80) = v1053;
                                                                v1054 = (uint64_t *)(v1037 + 22);
                                                                v1055 = *((_QWORD *)v1037 + 12);
                                                                swift_retain();
                                                                if (v1055 >> 60 != 15)
                                                                {
                                                                  v1059 = *v1054;
                                                                  sub_1AD0040A0(v1059, v1055);
                                                                  *(_QWORD *)(v1040 + 88) = v1059;
                                                                  *(_QWORD *)(v1040 + 96) = v1055;
                                                                  goto LABEL_717;
                                                                }
                                                                v1056 = (_OWORD *)(v1040 + 88);
                                                                v1057 = *(_OWORD *)v1054;
                                                              }
                                                              else
                                                              {
                                                                v1056 = (_OWORD *)(v1040 + 56);
                                                                v1057 = *(_OWORD *)(v1037 + 14);
                                                                v1058 = *(_OWORD *)(v1037 + 22);
                                                                *(_OWORD *)(v1040 + 72) = *(_OWORD *)(v1037 + 18);
                                                                *(_OWORD *)(v1040 + 88) = v1058;
                                                              }
                                                              *v1056 = v1057;
LABEL_717:
                                                              v1060 = *((_QWORD *)v1037 + 14);
                                                              *(_QWORD *)(v1040 + 104) = *((_QWORD *)v1037 + 13);
                                                              *(_QWORD *)(v1040 + 112) = v1060;
                                                              v1061 = v1037 + 30;
                                                              v1062 = *((_QWORD *)v1037 + 16);
                                                              swift_retain();
                                                              if (v1062 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v1040 + 120) = *v1061;
                                                              }
                                                              else
                                                              {
                                                                v1063 = *(_QWORD *)v1061;
                                                                sub_1AD0040A0(v1063, v1062);
                                                                *(_QWORD *)(v1040 + 120) = v1063;
                                                                *(_QWORD *)(v1040 + 128) = v1062;
                                                              }
                                                              v1064 = *((_QWORD *)v1037 + 18);
                                                              *(_QWORD *)(v1040 + 136) = *((_QWORD *)v1037 + 17);
                                                              *(_QWORD *)(v1040 + 144) = v1064;
                                                              v1065 = (uint64_t *)(v1037 + 38);
                                                              v1066 = *((_QWORD *)v1037 + 20);
                                                              swift_retain();
                                                              if (v1066 >> 60 == 11 || v1066 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v1040 + 152) = *(_OWORD *)v1065;
                                                              }
                                                              else
                                                              {
                                                                v1067 = *v1065;
                                                                sub_1AD0040A0(*v1065, v1066);
                                                                *(_QWORD *)(v1040 + 152) = v1067;
                                                                *(_QWORD *)(v1040 + 160) = v1066;
                                                              }
                                                              v1068 = *((_QWORD *)v1037 + 21);
                                                              if (v1068)
                                                              {
                                                                v1069 = *((_QWORD *)v1037 + 22);
                                                                *(_QWORD *)(v1040 + 168) = v1068;
                                                                *(_QWORD *)(v1040 + 176) = v1069;
                                                                v1070 = v1037 + 46;
                                                                v1071 = *((_QWORD *)v1037 + 24);
                                                                swift_retain();
                                                                if (v1071 >> 60 == 15)
                                                                {
                                                                  *(_OWORD *)(v1040 + 184) = *v1070;
                                                                }
                                                                else
                                                                {
                                                                  v1075 = *(_QWORD *)v1070;
                                                                  sub_1AD0040A0(v1075, v1071);
                                                                  *(_QWORD *)(v1040 + 184) = v1075;
                                                                  *(_QWORD *)(v1040 + 192) = v1071;
                                                                }
                                                                *(_DWORD *)(v1040 + 200) = v1037[50];
                                                                v1076 = *((_QWORD *)v1037 + 27);
                                                                *(_QWORD *)(v1040 + 208) = *((_QWORD *)v1037 + 26);
                                                                *(_QWORD *)(v1040 + 216) = v1076;
                                                                v1077 = v1037 + 56;
                                                                v1078 = *((_QWORD *)v1037 + 29);
                                                                swift_retain();
                                                                if (v1078 >> 60 == 15)
                                                                {
                                                                  *(_OWORD *)(v1040 + 224) = *v1077;
                                                                }
                                                                else
                                                                {
                                                                  v1079 = *(_QWORD *)v1077;
                                                                  sub_1AD0040A0(v1079, v1078);
                                                                  *(_QWORD *)(v1040 + 224) = v1079;
                                                                  *(_QWORD *)(v1040 + 232) = v1078;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                *(_OWORD *)(v1040 + 168) = *(_OWORD *)(v1037 + 42);
                                                                v1072 = *(_OWORD *)(v1037 + 46);
                                                                v1073 = *(_OWORD *)(v1037 + 50);
                                                                v1074 = *(_OWORD *)(v1037 + 54);
                                                                *(_QWORD *)(v1040 + 232) = *((_QWORD *)v1037 + 29);
                                                                *(_OWORD *)(v1040 + 200) = v1073;
                                                                *(_OWORD *)(v1040 + 216) = v1074;
                                                                *(_OWORD *)(v1040 + 184) = v1072;
                                                              }
                                                              *(_QWORD *)(v1040 + 240) = *((_QWORD *)v1037 + 30);
                                                              v1080 = *((_QWORD *)v1037 + 32);
                                                              *(_QWORD *)(v1040 + 248) = *((_QWORD *)v1037 + 31);
                                                              *(_QWORD *)(v1040 + 256) = v1080;
                                                              v1081 = (uint64_t *)(v1037 + 66);
                                                              v1082 = *((_QWORD *)v1037 + 34);
                                                              swift_bridgeObjectRetain();
                                                              swift_retain();
                                                              if (v1082 >> 60 == 11 || v1082 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v1040 + 264) = *(_OWORD *)v1081;
                                                              }
                                                              else
                                                              {
                                                                v1083 = *v1081;
                                                                sub_1AD0040A0(*v1081, v1082);
                                                                *(_QWORD *)(v1040 + 264) = v1083;
                                                                *(_QWORD *)(v1040 + 272) = v1082;
                                                              }
                                                              v1084 = *(int *)(v1038 + 24);
                                                              v1085 = (_QWORD *)(v1040 + v1084);
                                                              v1086 = (char *)v1037 + v1084;
                                                              v1087 = *(_QWORD *)((char *)v1037 + v1084 + 8);
                                                              *v1085 = *(_QWORD *)((char *)v1037 + v1084);
                                                              v1085[1] = v1087;
                                                              swift_retain();
                                                              v1088 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                             + 28);
                                                              v1089 = (char *)v1085 + v1088;
                                                              v1090 = &v1086[v1088];
                                                              v1091 = sub_1AD63AF28();
                                                              v1092 = *(_QWORD *)(v1091 - 8);
                                                              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1092 + 48))(v1090, 1, v1091))
                                                              {
                                                                v1093 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                memcpy(v1089, v1090, *(_QWORD *)(*(_QWORD *)(v1093 - 8) + 64));
                                                              }
                                                              else
                                                              {
                                                                (*(void (**)(char *, char *, uint64_t))(v1092 + 16))(v1089, v1090, v1091);
                                                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1092 + 56))(v1089, 0, 1, v1091);
                                                              }
                                                              v1094 = *(int *)(v1038 + 28);
                                                              v1095 = v1040 + v1094;
                                                              v1096 = (char *)v1037 + v1094;
                                                              v1097 = *(_QWORD *)((char *)v1037 + v1094 + 8);
                                                              *(_QWORD *)v1095 = *(_QWORD *)((char *)v1037 + v1094);
                                                              *(_QWORD *)(v1095 + 8) = v1097;
                                                              v1098 = *(_QWORD *)((char *)v1037 + v1094 + 24);
                                                              swift_retain();
                                                              v731 = v1892;
                                                              if (v1098 == 1)
                                                              {
                                                                *(_OWORD *)(v1095 + 16) = *((_OWORD *)v1096 + 1);
                                                              }
                                                              else
                                                              {
                                                                *(_QWORD *)(v1095 + 16) = *((_QWORD *)v1096 + 2);
                                                                *(_QWORD *)(v1095 + 24) = *((_QWORD *)v1096 + 3);
                                                                swift_bridgeObjectRetain();
                                                              }
                                                              v1034 = v1898;
                                                              ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))__srcd[7])(v1040, 0, 1, v1038);
                                                              v13 = v1878;
LABEL_923:
                                                              v1273 = v1046[20];
                                                              v1274 = (_QWORD *)((char *)v1868 + v1273);
                                                              v1275 = (uint64_t *)&v1034[v1273];
                                                              v1276 = *(_QWORD *)&v1034[v1273 + 8];
                                                              if (*(_QWORD *)((char *)v1868 + v1273 + 8) >> 60 == 15)
                                                              {
                                                                if (v1276 >> 60 != 15)
                                                                {
                                                                  v1277 = *v1275;
                                                                  sub_1AD0040A0(*v1275, v1276);
                                                                  *v1274 = v1277;
                                                                  v1274[1] = v1276;
LABEL_930:
                                                                  v12 = v1889;
                                                                  *((_BYTE *)v1868 + v1046[21]) = v1898[v1046[21]];
                                                                  *((_BYTE *)v1868 + v1046[22]) = v1898[v1046[22]];
                                                                  *((_BYTE *)v1868 + v1046[23]) = v1898[v1046[23]];
                                                                  goto LABEL_931;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                if (v1276 >> 60 != 15)
                                                                {
                                                                  v1278 = *v1275;
                                                                  sub_1AD0040A0(*v1275, v1276);
                                                                  v1279 = *v1274;
                                                                  v1280 = v1274[1];
                                                                  *v1274 = v1278;
                                                                  v1274[1] = v1276;
                                                                  sub_1AD00412C(v1279, v1280);
                                                                  goto LABEL_930;
                                                                }
                                                                sub_1AD007EC0((uint64_t)v1274);
                                                              }
                                                              *(_OWORD *)v1274 = *(_OWORD *)v1275;
                                                              goto LABEL_930;
                                                            }
LABEL_704:
                                                            v1045 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                                                            memcpy((void *)v1040, v1037, *(_QWORD *)(*(_QWORD *)(v1045 - 8) + 64));
                                                            v1046 = v1870;
                                                            v13 = v1878;
                                                            goto LABEL_923;
                                                          }
                                                          if (v1041)
                                                          {
                                                            sub_1AD066230(v1040, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                                                            goto LABEL_704;
                                                          }
                                                          *(_DWORD *)v1040 = *v1037;
                                                          *(_QWORD *)(v1040 + 8) = *((_QWORD *)v1037 + 1);
                                                          swift_bridgeObjectRetain();
                                                          swift_bridgeObjectRelease();
                                                          *(_QWORD *)(v1040 + 16) = *((_QWORD *)v1037 + 2);
                                                          swift_bridgeObjectRetain();
                                                          swift_bridgeObjectRelease();
                                                          v1047 = *((_QWORD *)v1037 + 4);
                                                          *(_QWORD *)(v1040 + 24) = *((_QWORD *)v1037 + 3);
                                                          *(_QWORD *)(v1040 + 32) = v1047;
                                                          swift_retain();
                                                          swift_release();
                                                          v1048 = (uint64_t *)(v1037 + 10);
                                                          v1049 = *((_QWORD *)v1037 + 6);
                                                          v1050 = v1049 & 0xF000000000000000;
                                                          if (*(_QWORD *)(v1040 + 48) >> 60 == 11)
                                                          {
                                                            if (v1050 == 0xB000000000000000)
                                                              goto LABEL_768;
LABEL_747:
                                                            if (v1049 >> 60 != 15)
                                                            {
                                                              v1100 = *v1048;
                                                              sub_1AD0040A0(*v1048, *((_QWORD *)v1037 + 6));
                                                              *(_QWORD *)(v1040 + 40) = v1100;
                                                              *(_QWORD *)(v1040 + 48) = v1049;
                                                              goto LABEL_769;
                                                            }
                                                            goto LABEL_768;
                                                          }
                                                          if (v1050 == 0xB000000000000000)
                                                          {
                                                            sub_1AD009758(v1040 + 40, &qword_1ED2E3250);
                                                          }
                                                          else
                                                          {
                                                            if (*(_QWORD *)(v1040 + 48) >> 60 == 15)
                                                              goto LABEL_747;
                                                            if (v1049 >> 60 != 15)
                                                            {
                                                              v1819 = *v1048;
                                                              sub_1AD0040A0(*v1048, *((_QWORD *)v1037 + 6));
                                                              v1820 = *(_QWORD *)(v1040 + 40);
                                                              v1821 = *(_QWORD *)(v1040 + 48);
                                                              *(_QWORD *)(v1040 + 40) = v1819;
                                                              *(_QWORD *)(v1040 + 48) = v1049;
                                                              sub_1AD00412C(v1820, v1821);
LABEL_769:
                                                              v1117 = (_OWORD *)(v1040 + 56);
                                                              v1118 = v1037 + 14;
                                                              v1119 = *((_QWORD *)v1037 + 9);
                                                              if (*(_QWORD *)(v1040 + 72))
                                                              {
                                                                if (!v1119)
                                                                {
                                                                  sub_1AD0AEC58(v1040 + 56);
                                                                  v1130 = *(_OWORD *)(v1037 + 18);
                                                                  v1129 = *(_OWORD *)(v1037 + 22);
                                                                  *v1117 = *v1118;
                                                                  *(_OWORD *)(v1040 + 72) = v1130;
                                                                  *(_OWORD *)(v1040 + 88) = v1129;
                                                                  goto LABEL_822;
                                                                }
                                                                *(_DWORD *)(v1040 + 56) = v1037[14];
                                                                v1120 = v1037[15];
                                                                *(_BYTE *)(v1040 + 64) = *((_BYTE *)v1037 + 64);
                                                                *(_DWORD *)(v1040 + 60) = v1120;
                                                                v1121 = *((_QWORD *)v1037 + 10);
                                                                *(_QWORD *)(v1040 + 72) = *((_QWORD *)v1037 + 9);
                                                                *(_QWORD *)(v1040 + 80) = v1121;
                                                                swift_retain();
                                                                swift_release();
                                                                v1117 = (_OWORD *)(v1040 + 88);
                                                                v1122 = (uint64_t *)(v1037 + 22);
                                                                v1123 = *((_QWORD *)v1037 + 12);
                                                                if (*(_QWORD *)(v1040 + 96) >> 60 == 15)
                                                                {
                                                                  if (v1123 >> 60 != 15)
                                                                  {
                                                                    v1124 = *v1122;
                                                                    sub_1AD0040A0(*v1122, *((_QWORD *)v1037 + 12));
                                                                    *(_QWORD *)(v1040 + 88) = v1124;
                                                                    *(_QWORD *)(v1040 + 96) = v1123;
                                                                    goto LABEL_822;
                                                                  }
                                                                  goto LABEL_780;
                                                                }
                                                                if (v1123 >> 60 == 15)
                                                                {
                                                                  sub_1AD007EC0(v1040 + 88);
LABEL_780:
                                                                  v1131 = *(_OWORD *)v1122;
LABEL_782:
                                                                  *v1117 = v1131;
                                                                  goto LABEL_822;
                                                                }
                                                                v1171 = *v1122;
                                                                sub_1AD0040A0(*v1122, *((_QWORD *)v1037 + 12));
                                                                v1172 = *(_QWORD *)(v1040 + 88);
                                                                v1173 = *(_QWORD *)(v1040 + 96);
                                                                *(_QWORD *)(v1040 + 88) = v1171;
                                                                *(_QWORD *)(v1040 + 96) = v1123;
                                                                sub_1AD00412C(v1172, v1173);
                                                              }
                                                              else
                                                              {
                                                                if (!v1119)
                                                                {
                                                                  v1131 = *v1118;
                                                                  v1132 = *(_OWORD *)(v1037 + 22);
                                                                  *(_OWORD *)(v1040 + 72) = *(_OWORD *)(v1037 + 18);
                                                                  *(_OWORD *)(v1040 + 88) = v1132;
                                                                  goto LABEL_782;
                                                                }
                                                                *(_DWORD *)(v1040 + 56) = v1037[14];
                                                                v1125 = v1037[15];
                                                                *(_BYTE *)(v1040 + 64) = *((_BYTE *)v1037 + 64);
                                                                *(_DWORD *)(v1040 + 60) = v1125;
                                                                v1126 = *((_QWORD *)v1037 + 10);
                                                                *(_QWORD *)(v1040 + 72) = *((_QWORD *)v1037 + 9);
                                                                *(_QWORD *)(v1040 + 80) = v1126;
                                                                v1127 = (uint64_t *)(v1037 + 22);
                                                                v1128 = *((_QWORD *)v1037 + 12);
                                                                swift_retain();
                                                                if (v1128 >> 60 == 15)
                                                                {
                                                                  *(_OWORD *)(v1040 + 88) = *(_OWORD *)v1127;
                                                                }
                                                                else
                                                                {
                                                                  v1134 = *v1127;
                                                                  sub_1AD0040A0(*v1127, v1128);
                                                                  *(_QWORD *)(v1040 + 88) = v1134;
                                                                  *(_QWORD *)(v1040 + 96) = v1128;
                                                                }
                                                              }
LABEL_822:
                                                              v1174 = *((_QWORD *)v1037 + 14);
                                                              *(_QWORD *)(v1040 + 104) = *((_QWORD *)v1037 + 13);
                                                              *(_QWORD *)(v1040 + 112) = v1174;
                                                              swift_retain();
                                                              swift_release();
                                                              v1175 = (uint64_t *)(v1037 + 30);
                                                              v1176 = *((_QWORD *)v1037 + 16);
                                                              if (*(_QWORD *)(v1040 + 128) >> 60 == 15)
                                                              {
                                                                if (v1176 >> 60 != 15)
                                                                {
                                                                  v1177 = *v1175;
                                                                  sub_1AD0040A0(*v1175, *((_QWORD *)v1037 + 16));
                                                                  *(_QWORD *)(v1040 + 120) = v1177;
                                                                  *(_QWORD *)(v1040 + 128) = v1176;
                                                                  goto LABEL_829;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                if (v1176 >> 60 != 15)
                                                                {
                                                                  v1178 = *v1175;
                                                                  sub_1AD0040A0(*v1175, *((_QWORD *)v1037 + 16));
                                                                  v1179 = *(_QWORD *)(v1040 + 120);
                                                                  v1180 = *(_QWORD *)(v1040 + 128);
                                                                  *(_QWORD *)(v1040 + 120) = v1178;
                                                                  *(_QWORD *)(v1040 + 128) = v1176;
                                                                  sub_1AD00412C(v1179, v1180);
LABEL_829:
                                                                  v1181 = *((_QWORD *)v1037 + 18);
                                                                  *(_QWORD *)(v1040 + 136) = *((_QWORD *)v1037 + 17);
                                                                  *(_QWORD *)(v1040 + 144) = v1181;
                                                                  swift_retain();
                                                                  swift_release();
                                                                  v1182 = (uint64_t *)(v1037 + 38);
                                                                  v1183 = *((_QWORD *)v1037 + 20);
                                                                  v1184 = v1183 & 0xF000000000000000;
                                                                  if (*(_QWORD *)(v1040 + 160) >> 60 == 11)
                                                                  {
                                                                    if (v1184 == 0xB000000000000000)
                                                                      goto LABEL_839;
LABEL_835:
                                                                    if (v1183 >> 60 != 15)
                                                                    {
                                                                      v1185 = *v1182;
                                                                      sub_1AD0040A0(*v1182, *((_QWORD *)v1037 + 20));
                                                                      *(_QWORD *)(v1040 + 152) = v1185;
                                                                      *(_QWORD *)(v1040 + 160) = v1183;
                                                                      goto LABEL_840;
                                                                    }
                                                                    goto LABEL_839;
                                                                  }
                                                                  if (v1184 == 0xB000000000000000)
                                                                  {
                                                                    sub_1AD009758(v1040 + 152, &qword_1ED2E3250);
                                                                  }
                                                                  else
                                                                  {
                                                                    if (*(_QWORD *)(v1040 + 160) >> 60 == 15)
                                                                      goto LABEL_835;
                                                                    if (v1183 >> 60 != 15)
                                                                    {
                                                                      v1825 = *v1182;
                                                                      sub_1AD0040A0(*v1182, *((_QWORD *)v1037 + 20));
                                                                      v1826 = *(_QWORD *)(v1040 + 152);
                                                                      v1827 = *(_QWORD *)(v1040 + 160);
                                                                      *(_QWORD *)(v1040 + 152) = v1825;
                                                                      *(_QWORD *)(v1040 + 160) = v1183;
                                                                      sub_1AD00412C(v1826, v1827);
LABEL_840:
                                                                      v1186 = (_OWORD *)(v1040 + 168);
                                                                      v1188 = v1037 + 42;
                                                                      v1187 = *((_QWORD *)v1037 + 21);
                                                                      if (!*(_QWORD *)(v1040 + 168))
                                                                      {
                                                                        if (v1187)
                                                                        {
                                                                          v1193 = *((_QWORD *)v1037 + 22);
                                                                          *(_QWORD *)(v1040 + 168) = v1187;
                                                                          *(_QWORD *)(v1040 + 176) = v1193;
                                                                          v1194 = (uint64_t *)(v1037 + 46);
                                                                          v1195 = *((_QWORD *)v1037 + 24);
                                                                          swift_retain();
                                                                          if (v1195 >> 60 == 15)
                                                                          {
                                                                            *(_OWORD *)(v1040 + 184) = *(_OWORD *)v1194;
                                                                          }
                                                                          else
                                                                          {
                                                                            v1202 = *v1194;
                                                                            sub_1AD0040A0(*v1194, v1195);
                                                                            *(_QWORD *)(v1040 + 184) = v1202;
                                                                            *(_QWORD *)(v1040 + 192) = v1195;
                                                                          }
                                                                          *(_DWORD *)(v1040 + 200) = v1037[50];
                                                                          v1203 = *((_QWORD *)v1037 + 27);
                                                                          *(_QWORD *)(v1040 + 208) = *((_QWORD *)v1037 + 26);
                                                                          *(_QWORD *)(v1040 + 216) = v1203;
                                                                          v1204 = (uint64_t *)(v1037 + 56);
                                                                          v1205 = *((_QWORD *)v1037 + 29);
                                                                          swift_retain();
                                                                          if (v1205 >> 60 == 15)
                                                                          {
                                                                            *(_OWORD *)(v1040 + 224) = *(_OWORD *)v1204;
                                                                          }
                                                                          else
                                                                          {
                                                                            v1206 = *v1204;
                                                                            sub_1AD0040A0(*v1204, v1205);
                                                                            *(_QWORD *)(v1040 + 224) = v1206;
                                                                            *(_QWORD *)(v1040 + 232) = v1205;
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          *v1186 = *v1188;
                                                                          v1199 = *(_OWORD *)(v1037 + 46);
                                                                          v1200 = *(_OWORD *)(v1037 + 50);
                                                                          v1201 = *(_OWORD *)(v1037 + 54);
                                                                          *(_QWORD *)(v1040 + 232) = *((_QWORD *)v1037 + 29);
                                                                          *(_OWORD *)(v1040 + 200) = v1200;
                                                                          *(_OWORD *)(v1040 + 216) = v1201;
                                                                          *(_OWORD *)(v1040 + 184) = v1199;
                                                                        }
                                                                        goto LABEL_898;
                                                                      }
                                                                      if (!v1187)
                                                                      {
                                                                        sub_1AD0AEC8C((uint64_t *)(v1040 + 168));
                                                                        *v1186 = *v1188;
                                                                        v1197 = *(_OWORD *)(v1037 + 50);
                                                                        v1196 = *(_OWORD *)(v1037 + 54);
                                                                        v1198 = *(_OWORD *)(v1037 + 46);
                                                                        *(_QWORD *)(v1040 + 232) = *((_QWORD *)v1037 + 29);
                                                                        *(_OWORD *)(v1040 + 200) = v1197;
                                                                        *(_OWORD *)(v1040 + 216) = v1196;
                                                                        *(_OWORD *)(v1040 + 184) = v1198;
                                                                        goto LABEL_898;
                                                                      }
                                                                      v1189 = *((_QWORD *)v1037 + 22);
                                                                      *(_QWORD *)(v1040 + 168) = v1187;
                                                                      *(_QWORD *)(v1040 + 176) = v1189;
                                                                      swift_retain();
                                                                      swift_release();
                                                                      v1190 = (uint64_t *)(v1037 + 46);
                                                                      v1191 = *((_QWORD *)v1037 + 24);
                                                                      if (*(_QWORD *)(v1040 + 192) >> 60 == 15)
                                                                      {
                                                                        if (v1191 >> 60 != 15)
                                                                        {
                                                                          v1192 = *v1190;
                                                                          sub_1AD0040A0(*v1190, *((_QWORD *)v1037 + 24));
                                                                          *(_QWORD *)(v1040 + 184) = v1192;
                                                                          *(_QWORD *)(v1040 + 192) = v1191;
LABEL_865:
                                                                          *(_DWORD *)(v1040 + 200) = v1037[50];
                                                                          v1217 = *((_QWORD *)v1037 + 27);
                                                                          *(_QWORD *)(v1040 + 208) = *((_QWORD *)v1037 + 26);
                                                                          *(_QWORD *)(v1040 + 216) = v1217;
                                                                          swift_retain();
                                                                          swift_release();
                                                                          v1218 = (uint64_t *)(v1037 + 56);
                                                                          v1219 = *((_QWORD *)v1037 + 29);
                                                                          if (*(_QWORD *)(v1040 + 232) >> 60 == 15)
                                                                          {
                                                                            if (v1219 >> 60 != 15)
                                                                            {
                                                                              v1220 = *v1218;
                                                                              sub_1AD0040A0(*v1218, *((_QWORD *)v1037 + 29));
                                                                              *(_QWORD *)(v1040 + 224) = v1220;
                                                                              *(_QWORD *)(v1040 + 232) = v1219;
                                                                              goto LABEL_898;
                                                                            }
                                                                            goto LABEL_870;
                                                                          }
                                                                          if (v1219 >> 60 == 15)
                                                                          {
                                                                            sub_1AD007EC0(v1040 + 224);
LABEL_870:
                                                                            *(_OWORD *)(v1040 + 224) = *(_OWORD *)v1218;
                                                                            goto LABEL_898;
                                                                          }
                                                                          v1247 = *v1218;
                                                                          sub_1AD0040A0(*v1218, *((_QWORD *)v1037 + 29));
                                                                          v1248 = *(_QWORD *)(v1040 + 224);
                                                                          v1249 = *(_QWORD *)(v1040 + 232);
                                                                          *(_QWORD *)(v1040 + 224) = v1247;
                                                                          *(_QWORD *)(v1040 + 232) = v1219;
                                                                          sub_1AD00412C(v1248, v1249);
LABEL_898:
                                                                          *(_QWORD *)(v1040 + 240) = *((_QWORD *)v1037 + 30);
                                                                          swift_bridgeObjectRetain();
                                                                          swift_bridgeObjectRelease();
                                                                          v1250 = *((_QWORD *)v1037 + 32);
                                                                          *(_QWORD *)(v1040 + 248) = *((_QWORD *)v1037 + 31);
                                                                          *(_QWORD *)(v1040 + 256) = v1250;
                                                                          swift_retain();
                                                                          swift_release();
                                                                          v1251 = (uint64_t *)(v1037 + 66);
                                                                          v1252 = *((_QWORD *)v1037 + 34);
                                                                          v1253 = v1252 & 0xF000000000000000;
                                                                          if (*(_QWORD *)(v1040 + 272) >> 60 == 11)
                                                                          {
                                                                            if (v1253 == 0xB000000000000000)
                                                                              goto LABEL_908;
LABEL_904:
                                                                            if (v1252 >> 60 != 15)
                                                                            {
                                                                              v1254 = *v1251;
                                                                              sub_1AD0040A0(*v1251, *((_QWORD *)v1037 + 34));
                                                                              *(_QWORD *)(v1040 + 264) = v1254;
                                                                              *(_QWORD *)(v1040 + 272) = v1252;
                                                                              goto LABEL_909;
                                                                            }
                                                                            goto LABEL_908;
                                                                          }
                                                                          if (v1253 == 0xB000000000000000)
                                                                          {
                                                                            sub_1AD009758(v1040 + 264, &qword_1ED2E3250);
                                                                          }
                                                                          else
                                                                          {
                                                                            if (*(_QWORD *)(v1040 + 272) >> 60 == 15)
                                                                              goto LABEL_904;
                                                                            if (v1252 >> 60 != 15)
                                                                            {
                                                                              v1831 = *v1251;
                                                                              sub_1AD0040A0(*v1251, *((_QWORD *)v1037 + 34));
                                                                              v1832 = *(_QWORD *)(v1040 + 264);
                                                                              v1833 = *(_QWORD *)(v1040 + 272);
                                                                              *(_QWORD *)(v1040 + 264) = v1831;
                                                                              *(_QWORD *)(v1040 + 272) = v1252;
                                                                              sub_1AD00412C(v1832, v1833);
LABEL_909:
                                                                              v1255 = *(int *)(v1853 + 24);
                                                                              v1256 = (_QWORD *)(v1040 + v1255);
                                                                              v1257 = (char *)v1037 + v1255;
                                                                              v1258 = *(_QWORD *)((char *)v1037
                                                                                                + v1255
                                                                                                + 8);
                                                                              *v1256 = *(_QWORD *)((char *)v1037 + v1255);
                                                                              v1256[1] = v1258;
                                                                              swift_retain();
                                                                              swift_release();
                                                                              v1259 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                                             + 28);
                                                                              v1260 = (char *)v1256 + v1259;
                                                                              v1261 = &v1257[v1259];
                                                                              v1262 = sub_1AD63AF28();
                                                                              v1263 = *(_QWORD *)(v1262 - 8);
                                                                              v1264 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v1263 + 48);
                                                                              v1265 = v1264(v1260, 1, v1262);
                                                                              v1266 = v1264(v1261, 1, v1262);
                                                                              if (v1265)
                                                                              {
                                                                                if (!v1266)
                                                                                {
                                                                                  (*(void (**)(char *, char *, uint64_t))(v1263 + 16))(v1260, v1261, v1262);
                                                                                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1263 + 56))(v1260, 0, 1, v1262);
                                                                                  goto LABEL_915;
                                                                                }
                                                                              }
                                                                              else
                                                                              {
                                                                                if (!v1266)
                                                                                {
                                                                                  (*(void (**)(char *, char *, uint64_t))(v1263 + 24))(v1260, v1261, v1262);
LABEL_915:
                                                                                  v1268 = *(int *)(v1853 + 28);
                                                                                  v1269 = (_QWORD *)(v1040 + v1268);
                                                                                  v1270 = &v1862[v1268];
                                                                                  v1271 = *(_QWORD *)&v1862[v1268 + 8];
                                                                                  *v1269 = *(_QWORD *)&v1862[v1268];
                                                                                  v1269[1] = v1271;
                                                                                  swift_retain();
                                                                                  swift_release();
                                                                                  v1272 = *((_QWORD *)v1270 + 3);
                                                                                  v1046 = v1870;
                                                                                  if (v1269[3] == 1)
                                                                                  {
                                                                                    v13 = v1878;
                                                                                    if (v1272 != 1)
                                                                                    {
                                                                                      v1269[2] = *((_QWORD *)v1270 + 2);
                                                                                      v1269[3] = *((_QWORD *)v1270 + 3);
                                                                                      swift_bridgeObjectRetain();
LABEL_922:
                                                                                      v731 = v1892;
                                                                                      v1034 = v1898;
                                                                                      goto LABEL_923;
                                                                                    }
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    v13 = v1878;
                                                                                    if (v1272 != 1)
                                                                                    {
                                                                                      v1269[2] = *((_QWORD *)v1270 + 2);
                                                                                      v1269[3] = *((_QWORD *)v1270 + 3);
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRelease();
                                                                                      goto LABEL_922;
                                                                                    }
                                                                                    sub_1AD009758((uint64_t)(v1269 + 2), &qword_1ED2E3198);
                                                                                  }
                                                                                  *((_OWORD *)v1269 + 1) = *((_OWORD *)v1270 + 1);
                                                                                  goto LABEL_922;
                                                                                }
                                                                                (*(void (**)(char *, uint64_t))(v1263 + 8))(v1260, v1262);
                                                                              }
                                                                              v1267 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                              memcpy(v1260, v1261, *(_QWORD *)(*(_QWORD *)(v1267 - 8) + 64));
                                                                              goto LABEL_915;
                                                                            }
                                                                            sub_1AD007EC0(v1040 + 264);
                                                                          }
LABEL_908:
                                                                          *(_OWORD *)(v1040 + 264) = *(_OWORD *)v1251;
                                                                          goto LABEL_909;
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        if (v1191 >> 60 != 15)
                                                                        {
                                                                          v1214 = *v1190;
                                                                          sub_1AD0040A0(*v1190, *((_QWORD *)v1037 + 24));
                                                                          v1215 = *(_QWORD *)(v1040 + 184);
                                                                          v1216 = *(_QWORD *)(v1040 + 192);
                                                                          *(_QWORD *)(v1040 + 184) = v1214;
                                                                          *(_QWORD *)(v1040 + 192) = v1191;
                                                                          sub_1AD00412C(v1215, v1216);
                                                                          goto LABEL_865;
                                                                        }
                                                                        sub_1AD007EC0(v1040 + 184);
                                                                      }
                                                                      *(_OWORD *)(v1040 + 184) = *(_OWORD *)v1190;
                                                                      goto LABEL_865;
                                                                    }
                                                                    sub_1AD007EC0(v1040 + 152);
                                                                  }
LABEL_839:
                                                                  *(_OWORD *)(v1040 + 152) = *(_OWORD *)v1182;
                                                                  goto LABEL_840;
                                                                }
                                                                sub_1AD007EC0(v1040 + 120);
                                                              }
                                                              *(_OWORD *)(v1040 + 120) = *(_OWORD *)v1175;
                                                              goto LABEL_829;
                                                            }
                                                            sub_1AD007EC0(v1040 + 40);
                                                          }
LABEL_768:
                                                          *(_OWORD *)(v1040 + 40) = *(_OWORD *)v1048;
                                                          goto LABEL_769;
                                                        }
                                                        sub_1AD007EC0((uint64_t)v1027);
                                                      }
                                                      *(_OWORD *)v1027 = *(_OWORD *)v1028;
                                                      goto LABEL_697;
                                                    }
                                                    sub_1AD007EC0((uint64_t)v1019);
                                                  }
                                                  *(_OWORD *)v1019 = *(_OWORD *)v1020;
                                                  goto LABEL_690;
                                                }
                                                sub_1AD007EC0((uint64_t)v1011);
                                              }
                                              *(_OWORD *)v1011 = *(_OWORD *)v1012;
                                              goto LABEL_683;
                                            }
                                            sub_1AD007EC0((uint64_t)v1003);
                                          }
                                          *(_OWORD *)v1003 = *(_OWORD *)v1004;
                                          goto LABEL_676;
                                        }
                                        sub_1AD007EC0((uint64_t)v995);
                                      }
                                      *(_OWORD *)v995 = *(_OWORD *)v996;
                                      goto LABEL_669;
                                    }
                                    sub_1AD007EC0(v917 + 208);
                                  }
                                  *(_OWORD *)(v917 + 208) = *(_OWORD *)v988;
                                  goto LABEL_662;
                                }
                                sub_1AD009758(v917 + 48, &qword_1ED2E3198);
                              }
                              *(_OWORD *)(v917 + 48) = *((_OWORD *)v918 + 3);
                              goto LABEL_631;
                            }
                            sub_1AD009758(v917 + 16, &qword_1ED2E3198);
                          }
                          *(_OWORD *)(v917 + 16) = *((_OWORD *)v918 + 1);
                          goto LABEL_624;
                        }
                        sub_1AD3114A8((_QWORD *)v917);
                        v926 = *((_OWORD *)v918 + 1);
                        *(_OWORD *)v917 = *(_OWORD *)v918;
                        *(_OWORD *)(v917 + 16) = v926;
                        v927 = *((_OWORD *)v918 + 5);
                        v929 = *((_OWORD *)v918 + 2);
                        v928 = *((_OWORD *)v918 + 3);
                        *(_OWORD *)(v917 + 64) = *((_OWORD *)v918 + 4);
                        *(_OWORD *)(v917 + 80) = v927;
                        *(_OWORD *)(v917 + 32) = v929;
                        *(_OWORD *)(v917 + 48) = v928;
                        v930 = *((_OWORD *)v918 + 9);
                        v932 = *((_OWORD *)v918 + 6);
                        v931 = *((_OWORD *)v918 + 7);
                        *(_OWORD *)(v917 + 128) = *((_OWORD *)v918 + 8);
                        *(_OWORD *)(v917 + 144) = v930;
                        *(_OWORD *)(v917 + 96) = v932;
                        *(_OWORD *)(v917 + 112) = v931;
                        v933 = *((_OWORD *)v918 + 13);
                        v935 = *((_OWORD *)v918 + 10);
                        v934 = *((_OWORD *)v918 + 11);
                        *(_OWORD *)(v917 + 192) = *((_OWORD *)v918 + 12);
                        *(_OWORD *)(v917 + 208) = v933;
                        *(_OWORD *)(v917 + 160) = v935;
                        *(_OWORD *)(v917 + 176) = v934;
                      }
                      else if (v920)
                      {
                        v924 = *((_QWORD *)v918 + 1);
                        *(_QWORD *)v917 = v920;
                        *(_QWORD *)(v917 + 8) = v924;
                        v925 = *((_QWORD *)v918 + 3);
                        swift_retain();
                        if (v925 == 1)
                        {
                          *(_OWORD *)(v917 + 16) = *((_OWORD *)v918 + 1);
                        }
                        else
                        {
                          *(_QWORD *)(v917 + 16) = *((_QWORD *)v918 + 2);
                          *(_QWORD *)(v917 + 24) = *((_QWORD *)v918 + 3);
                          swift_bridgeObjectRetain();
                        }
                        v946 = *((_QWORD *)v918 + 5);
                        *(_QWORD *)(v917 + 32) = *((_QWORD *)v918 + 4);
                        *(_QWORD *)(v917 + 40) = v946;
                        v947 = *((_QWORD *)v918 + 7);
                        swift_retain();
                        if (v947 == 1)
                        {
                          *(_OWORD *)(v917 + 48) = *((_OWORD *)v918 + 3);
                        }
                        else
                        {
                          *(_QWORD *)(v917 + 48) = *((_QWORD *)v918 + 6);
                          *(_QWORD *)(v917 + 56) = *((_QWORD *)v918 + 7);
                          swift_bridgeObjectRetain();
                        }
                        v948 = *((_QWORD *)v918 + 8);
                        if (v948)
                        {
                          v1913 = v4;
                          v949 = *((_QWORD *)v918 + 9);
                          *(_QWORD *)(v917 + 64) = v948;
                          *(_QWORD *)(v917 + 72) = v949;
                          *(_QWORD *)(v917 + 80) = *((_QWORD *)v918 + 10);
                          *(_QWORD *)(v917 + 88) = *((_QWORD *)v918 + 11);
                          v950 = *((_QWORD *)v918 + 13);
                          *(_QWORD *)(v917 + 96) = *((_QWORD *)v918 + 12);
                          *(_QWORD *)(v917 + 104) = v950;
                          *(_QWORD *)(v917 + 112) = *((_QWORD *)v918 + 14);
                          *(_QWORD *)(v917 + 120) = *((_QWORD *)v918 + 15);
                          v951 = *((_QWORD *)v918 + 17);
                          *(_QWORD *)(v917 + 128) = *((_QWORD *)v918 + 16);
                          *(_QWORD *)(v917 + 136) = v951;
                          *(_QWORD *)(v917 + 144) = *((_QWORD *)v918 + 18);
                          *(_QWORD *)(v917 + 152) = *((_QWORD *)v918 + 19);
                          v952 = *((_QWORD *)v918 + 21);
                          *(_QWORD *)(v917 + 160) = *((_QWORD *)v918 + 20);
                          *(_QWORD *)(v917 + 168) = v952;
                          v1851 = *((_QWORD *)v918 + 23);
                          swift_retain();
                          swift_bridgeObjectRetain();
                          swift_retain();
                          swift_bridgeObjectRetain();
                          swift_retain();
                          swift_bridgeObjectRetain();
                          swift_retain();
                          if (v1851 == 1)
                          {
                            *(_OWORD *)(v917 + 176) = *((_OWORD *)v918 + 11);
                          }
                          else
                          {
                            *(_QWORD *)(v917 + 176) = *((_QWORD *)v918 + 22);
                            *(_QWORD *)(v917 + 184) = *((_QWORD *)v918 + 23);
                            swift_bridgeObjectRetain();
                          }
                          v4 = v1913;
                          v921 = v1870;
                          *(_QWORD *)(v917 + 192) = *((_QWORD *)v918 + 24);
                        }
                        else
                        {
                          *(_OWORD *)(v917 + 64) = *((_OWORD *)v918 + 4);
                          v973 = *((_OWORD *)v918 + 5);
                          v974 = *((_OWORD *)v918 + 6);
                          v975 = *((_OWORD *)v918 + 8);
                          *(_OWORD *)(v917 + 112) = *((_OWORD *)v918 + 7);
                          *(_OWORD *)(v917 + 128) = v975;
                          *(_OWORD *)(v917 + 80) = v973;
                          *(_OWORD *)(v917 + 96) = v974;
                          v976 = *((_OWORD *)v918 + 9);
                          v977 = *((_OWORD *)v918 + 10);
                          v978 = *((_OWORD *)v918 + 11);
                          *(_QWORD *)(v917 + 192) = *((_QWORD *)v918 + 24);
                          *(_OWORD *)(v917 + 160) = v977;
                          *(_OWORD *)(v917 + 176) = v978;
                          *(_OWORD *)(v917 + 144) = v976;
                          v921 = v1870;
                        }
                        *(_BYTE *)(v917 + 200) = v918[200];
                        v979 = (uint64_t *)(v918 + 208);
                        v980 = *((_QWORD *)v918 + 27);
                        if (v980 >> 60 == 15)
                        {
                          *(_OWORD *)(v917 + 208) = *(_OWORD *)v979;
                        }
                        else
                        {
                          v981 = *v979;
                          sub_1AD0040A0(*v979, *((_QWORD *)v918 + 27));
                          *(_QWORD *)(v917 + 208) = v981;
                          *(_QWORD *)(v917 + 216) = v980;
                        }
                      }
                      else
                      {
                        v936 = *((_OWORD *)v918 + 1);
                        *(_OWORD *)v917 = *(_OWORD *)v918;
                        *(_OWORD *)(v917 + 16) = v936;
                        v937 = *((_OWORD *)v918 + 2);
                        v938 = *((_OWORD *)v918 + 3);
                        v939 = *((_OWORD *)v918 + 5);
                        *(_OWORD *)(v917 + 64) = *((_OWORD *)v918 + 4);
                        *(_OWORD *)(v917 + 80) = v939;
                        *(_OWORD *)(v917 + 32) = v937;
                        *(_OWORD *)(v917 + 48) = v938;
                        v940 = *((_OWORD *)v918 + 6);
                        v941 = *((_OWORD *)v918 + 7);
                        v942 = *((_OWORD *)v918 + 9);
                        *(_OWORD *)(v917 + 128) = *((_OWORD *)v918 + 8);
                        *(_OWORD *)(v917 + 144) = v942;
                        *(_OWORD *)(v917 + 96) = v940;
                        *(_OWORD *)(v917 + 112) = v941;
                        v943 = *((_OWORD *)v918 + 10);
                        v944 = *((_OWORD *)v918 + 11);
                        v945 = *((_OWORD *)v918 + 13);
                        *(_OWORD *)(v917 + 192) = *((_OWORD *)v918 + 12);
                        *(_OWORD *)(v917 + 208) = v945;
                        *(_OWORD *)(v917 + 160) = v943;
                        *(_OWORD *)(v917 + 176) = v944;
                      }
                      v731 = v1892;
                      goto LABEL_662;
                    }
                    (*(void (**)(void *, uint64_t))(v911 + 8))(v908, v910);
                  }
                  v915 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
                  memcpy(v908, v909, *(_QWORD *)(*(_QWORD *)(v915 - 8) + 64));
                  goto LABEL_602;
                }
                if (!v832)
                {
                  sub_1AD311474(v829);
                  *(_OWORD *)v829 = *(_OWORD *)v830;
                  v843 = *((_OWORD *)v830 + 4);
                  v845 = *((_OWORD *)v830 + 1);
                  v844 = *((_OWORD *)v830 + 2);
                  *(_OWORD *)(v829 + 48) = *((_OWORD *)v830 + 3);
                  *(_OWORD *)(v829 + 64) = v843;
                  *(_OWORD *)(v829 + 16) = v845;
                  *(_OWORD *)(v829 + 32) = v844;
                  v847 = *((_OWORD *)v830 + 6);
                  v846 = *((_OWORD *)v830 + 7);
                  v848 = *((_OWORD *)v830 + 5);
                  *(_QWORD *)(v829 + 128) = *((_QWORD *)v830 + 16);
                  *(_OWORD *)(v829 + 96) = v847;
                  *(_OWORD *)(v829 + 112) = v846;
                  *(_OWORD *)(v829 + 80) = v848;
                  goto LABEL_596;
                }
                v833 = *((_QWORD *)v830 + 1);
                *(_QWORD *)v829 = v832;
                *(_QWORD *)(v829 + 8) = v833;
                swift_retain();
                swift_release();
                *(_QWORD *)(v829 + 16) = *((_QWORD *)v830 + 2);
                *(_QWORD *)(v829 + 24) = *((_QWORD *)v830 + 3);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v834 = *((_QWORD *)v830 + 5);
                *(_QWORD *)(v829 + 32) = *((_QWORD *)v830 + 4);
                *(_QWORD *)(v829 + 40) = v834;
                swift_retain();
                swift_release();
                *(_QWORD *)(v829 + 48) = *((_QWORD *)v830 + 6);
                *(_QWORD *)(v829 + 56) = *((_QWORD *)v830 + 7);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v835 = *((_QWORD *)v830 + 9);
                *(_QWORD *)(v829 + 64) = *((_QWORD *)v830 + 8);
                *(_QWORD *)(v829 + 72) = v835;
                swift_retain();
                swift_release();
                *(_QWORD *)(v829 + 80) = *((_QWORD *)v830 + 10);
                *(_QWORD *)(v829 + 88) = *((_QWORD *)v830 + 11);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v836 = *((_QWORD *)v830 + 13);
                *(_QWORD *)(v829 + 96) = *((_QWORD *)v830 + 12);
                *(_QWORD *)(v829 + 104) = v836;
                swift_retain();
                swift_release();
                v837 = *((_QWORD *)v830 + 15);
                if (*(_QWORD *)(v829 + 120) == 1)
                {
                  if (v837 != 1)
                  {
                    *(_QWORD *)(v829 + 112) = *((_QWORD *)v830 + 14);
                    *(_QWORD *)(v829 + 120) = *((_QWORD *)v830 + 15);
                    swift_bridgeObjectRetain();
LABEL_595:
                    *(_QWORD *)(v829 + 128) = *((_QWORD *)v830 + 16);
                    goto LABEL_596;
                  }
                }
                else
                {
                  if (v837 != 1)
                  {
                    *(_QWORD *)(v829 + 112) = *((_QWORD *)v830 + 14);
                    *(_QWORD *)(v829 + 120) = *((_QWORD *)v830 + 15);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    goto LABEL_595;
                  }
                  sub_1AD009758(v829 + 112, &qword_1ED2E3198);
                }
                *(_OWORD *)(v829 + 112) = *((_OWORD *)v830 + 7);
                goto LABEL_595;
              }
              sub_1AD009758((uint64_t)(v723 + 6), &qword_1ED2E3198);
            }
            *((_OWORD *)v723 + 3) = *((_OWORD *)v724 + 3);
            v735 = v724;
            goto LABEL_543;
          }
          __srca = v438;
          *v435 = *v436;
          *((_QWORD *)v435 + 1) = *((_QWORD *)v436 + 1);
          *((_QWORD *)v435 + 2) = *((_QWORD *)v436 + 2);
          v442 = *((_QWORD *)v436 + 4);
          *((_QWORD *)v435 + 3) = *((_QWORD *)v436 + 3);
          *((_QWORD *)v435 + 4) = v442;
          v443 = (uint64_t *)(v436 + 10);
          v444 = *((_QWORD *)v436 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (v444 >> 60 == 11 || v444 >> 60 == 15)
          {
            *(_OWORD *)(v435 + 10) = *(_OWORD *)v443;
          }
          else
          {
            v465 = *v443;
            sub_1AD0040A0(*v443, v444);
            *((_QWORD *)v435 + 5) = v465;
            *((_QWORD *)v435 + 6) = v444;
          }
          v4 = v1907;
          if (*((_QWORD *)v436 + 9))
          {
            v435[14] = v436[14];
            v466 = v436[15];
            *((_BYTE *)v435 + 64) = *((_BYTE *)v436 + 64);
            v435[15] = v466;
            v467 = *((_QWORD *)v436 + 10);
            *((_QWORD *)v435 + 9) = *((_QWORD *)v436 + 9);
            *((_QWORD *)v435 + 10) = v467;
            v468 = (uint64_t *)(v436 + 22);
            v469 = *((_QWORD *)v436 + 12);
            swift_retain();
            if (v469 >> 60 != 15)
            {
              v473 = *v468;
              sub_1AD0040A0(v473, v469);
              *((_QWORD *)v435 + 11) = v473;
              *((_QWORD *)v435 + 12) = v469;
              goto LABEL_292;
            }
            v470 = v435 + 22;
            v471 = *(_OWORD *)v468;
          }
          else
          {
            v470 = v435 + 14;
            v471 = *(_OWORD *)(v436 + 14);
            v472 = *(_OWORD *)(v436 + 22);
            *(_OWORD *)(v435 + 18) = *(_OWORD *)(v436 + 18);
            *(_OWORD *)(v435 + 22) = v472;
          }
          *v470 = v471;
LABEL_292:
          v474 = *((_QWORD *)v436 + 14);
          *((_QWORD *)v435 + 13) = *((_QWORD *)v436 + 13);
          *((_QWORD *)v435 + 14) = v474;
          v475 = v436 + 30;
          v476 = *((_QWORD *)v436 + 16);
          swift_retain();
          if (v476 >> 60 == 15)
          {
            *(_OWORD *)(v435 + 30) = *v475;
          }
          else
          {
            v477 = *(_QWORD *)v475;
            sub_1AD0040A0(v477, v476);
            *((_QWORD *)v435 + 15) = v477;
            *((_QWORD *)v435 + 16) = v476;
          }
          v478 = *((_QWORD *)v436 + 18);
          *((_QWORD *)v435 + 17) = *((_QWORD *)v436 + 17);
          *((_QWORD *)v435 + 18) = v478;
          v479 = (uint64_t *)(v436 + 38);
          v480 = *((_QWORD *)v436 + 20);
          swift_retain();
          if (v480 >> 60 == 11 || v480 >> 60 == 15)
          {
            *(_OWORD *)(v435 + 38) = *(_OWORD *)v479;
          }
          else
          {
            v481 = *v479;
            sub_1AD0040A0(*v479, v480);
            *((_QWORD *)v435 + 19) = v481;
            *((_QWORD *)v435 + 20) = v480;
          }
          v482 = *((_QWORD *)v436 + 21);
          if (v482)
          {
            v483 = *((_QWORD *)v436 + 22);
            *((_QWORD *)v435 + 21) = v482;
            *((_QWORD *)v435 + 22) = v483;
            v484 = v436 + 46;
            v485 = *((_QWORD *)v436 + 24);
            swift_retain();
            if (v485 >> 60 == 15)
            {
              *(_OWORD *)(v435 + 46) = *v484;
            }
            else
            {
              v489 = *(_QWORD *)v484;
              sub_1AD0040A0(v489, v485);
              *((_QWORD *)v435 + 23) = v489;
              *((_QWORD *)v435 + 24) = v485;
            }
            v435[50] = v436[50];
            v490 = *((_QWORD *)v436 + 27);
            *((_QWORD *)v435 + 26) = *((_QWORD *)v436 + 26);
            *((_QWORD *)v435 + 27) = v490;
            v491 = v436 + 56;
            v492 = *((_QWORD *)v436 + 29);
            swift_retain();
            if (v492 >> 60 == 15)
            {
              *((_OWORD *)v435 + 14) = *v491;
            }
            else
            {
              v493 = *(_QWORD *)v491;
              sub_1AD0040A0(v493, v492);
              *((_QWORD *)v435 + 28) = v493;
              *((_QWORD *)v435 + 29) = v492;
            }
          }
          else
          {
            *(_OWORD *)(v435 + 42) = *(_OWORD *)(v436 + 42);
            v486 = *(_OWORD *)(v436 + 46);
            v487 = *(_OWORD *)(v436 + 50);
            v488 = *(_OWORD *)(v436 + 54);
            *((_QWORD *)v435 + 29) = *((_QWORD *)v436 + 29);
            *(_OWORD *)(v435 + 50) = v487;
            *(_OWORD *)(v435 + 54) = v488;
            *(_OWORD *)(v435 + 46) = v486;
          }
          *((_QWORD *)v435 + 30) = *((_QWORD *)v436 + 30);
          v494 = *((_QWORD *)v436 + 32);
          *((_QWORD *)v435 + 31) = *((_QWORD *)v436 + 31);
          *((_QWORD *)v435 + 32) = v494;
          v495 = (uint64_t *)(v436 + 66);
          v496 = *((_QWORD *)v436 + 34);
          swift_bridgeObjectRetain();
          swift_retain();
          if (v496 >> 60 == 11 || v496 >> 60 == 15)
          {
            *(_OWORD *)(v435 + 66) = *(_OWORD *)v495;
          }
          else
          {
            v497 = *v495;
            sub_1AD0040A0(*v495, v496);
            *((_QWORD *)v435 + 33) = v497;
            *((_QWORD *)v435 + 34) = v496;
          }
          v498 = *(int *)(v437 + 24);
          v499 = (_QWORD *)((char *)v435 + v498);
          v500 = (char *)v436 + v498;
          v501 = *(_QWORD *)((char *)v436 + v498 + 8);
          *v499 = *(_QWORD *)((char *)v436 + v498);
          v499[1] = v501;
          swift_retain();
          v502 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
          v503 = (char *)v499 + v502;
          v504 = &v500[v502];
          v505 = sub_1AD63AF28();
          v506 = *(_QWORD *)(v505 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v506 + 48))(v504, 1, v505))
          {
            v507 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v503, v504, *(_QWORD *)(*(_QWORD *)(v507 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v506 + 16))(v503, v504, v505);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v506 + 56))(v503, 0, 1, v505);
          }
          v508 = *(int *)(v437 + 28);
          v509 = (char *)v435 + v508;
          v510 = (char *)v436 + v508;
          v511 = *(_QWORD *)((char *)v436 + v508 + 8);
          *(_QWORD *)v509 = *(_QWORD *)((char *)v436 + v508);
          *((_QWORD *)v509 + 1) = v511;
          v512 = *(_QWORD *)((char *)v436 + v508 + 24);
          swift_retain();
          if (v512 == 1)
          {
            *((_OWORD *)v509 + 1) = *((_OWORD *)v510 + 1);
          }
          else
          {
            *((_QWORD *)v509 + 2) = *((_QWORD *)v510 + 2);
            *((_QWORD *)v509 + 3) = *((_QWORD *)v510 + 3);
            swift_bridgeObjectRetain();
          }
          v12 = v1885;
          v441 = v1864;
          v440 = v1870;
          (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__srca + 7))(v435, 0, 1, v437);
          v423 = v1897;
          goto LABEL_318;
        }
        if (v48)
        {
          sub_1AD066230((uint64_t)v1897, type metadata accessor for CloudKitShareParticipant);
          v50 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300) - 8)
                          + 64);
          v51 = v1897;
          goto LABEL_43;
        }
        v1848 = v47;
        v1856 = v46;
        v97 = v44[1];
        *(_QWORD *)v1897 = *v44;
        *((_QWORD *)v1897 + 1) = v97;
        swift_retain();
        swift_release();
        *((_QWORD *)v1897 + 2) = v44[2];
        *((_QWORD *)v1897 + 3) = v44[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v98 = v44[5];
        *((_QWORD *)v1897 + 4) = v44[4];
        *((_QWORD *)v1897 + 5) = v98;
        swift_retain();
        swift_release();
        v99 = v1897 + 3;
        v100 = v44[7];
        v1875 = v13;
        if (*((_QWORD *)v1897 + 7) == 1)
        {
          if (v100 != 1)
          {
            v101 = v1897;
            *((_QWORD *)v1897 + 6) = v44[6];
            *((_QWORD *)v1897 + 7) = v44[7];
            swift_bridgeObjectRetain();
            goto LABEL_273;
          }
        }
        else
        {
          if (v100 != 1)
          {
            v101 = v1897;
            *((_QWORD *)v1897 + 6) = v44[6];
            *((_QWORD *)v1897 + 7) = v44[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_273:
            v445 = v45[6];
            v446 = (uint64_t)v101 + v445;
            v447 = (char *)v44 + v445;
            v448 = *(_QWORD *)((char *)v44 + v445);
            v1887 = v12;
            v1866 = v44;
            if (!*(_QWORD *)v446)
            {
              if (v448)
              {
                v1908 = v4;
                v454 = *((_QWORD *)v447 + 1);
                *(_QWORD *)v446 = v448;
                *(_QWORD *)(v446 + 8) = v454;
                *(_QWORD *)(v446 + 16) = *((_QWORD *)v447 + 2);
                *(_QWORD *)(v446 + 24) = *((_QWORD *)v447 + 3);
                v455 = *((_QWORD *)v447 + 5);
                *(_QWORD *)(v446 + 32) = *((_QWORD *)v447 + 4);
                *(_QWORD *)(v446 + 40) = v455;
                *(_QWORD *)(v446 + 48) = *((_QWORD *)v447 + 6);
                *(_QWORD *)(v446 + 56) = *((_QWORD *)v447 + 7);
                v456 = *((_QWORD *)v447 + 9);
                *(_QWORD *)(v446 + 64) = *((_QWORD *)v447 + 8);
                *(_QWORD *)(v446 + 72) = v456;
                *(_QWORD *)(v446 + 80) = *((_QWORD *)v447 + 10);
                *(_QWORD *)(v446 + 88) = *((_QWORD *)v447 + 11);
                v457 = *((_QWORD *)v447 + 13);
                *(_QWORD *)(v446 + 96) = *((_QWORD *)v447 + 12);
                *(_QWORD *)(v446 + 104) = v457;
                v458 = *((_QWORD *)v447 + 15);
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain();
                if (v458 == 1)
                {
                  *(_OWORD *)(v446 + 112) = *((_OWORD *)v447 + 7);
                }
                else
                {
                  *(_QWORD *)(v446 + 112) = *((_QWORD *)v447 + 14);
                  *(_QWORD *)(v446 + 120) = *((_QWORD *)v447 + 15);
                  swift_bridgeObjectRetain();
                }
                *(_QWORD *)(v446 + 128) = *((_QWORD *)v447 + 16);
                v4 = v1908;
              }
              else
              {
                *(_OWORD *)v446 = *(_OWORD *)v447;
                v518 = *((_OWORD *)v447 + 1);
                v519 = *((_OWORD *)v447 + 2);
                v520 = *((_OWORD *)v447 + 4);
                *(_OWORD *)(v446 + 48) = *((_OWORD *)v447 + 3);
                *(_OWORD *)(v446 + 64) = v520;
                *(_OWORD *)(v446 + 16) = v518;
                *(_OWORD *)(v446 + 32) = v519;
                v521 = *((_OWORD *)v447 + 5);
                v522 = *((_OWORD *)v447 + 6);
                v523 = *((_OWORD *)v447 + 7);
                *(_QWORD *)(v446 + 128) = *((_QWORD *)v447 + 16);
                *(_OWORD *)(v446 + 96) = v522;
                *(_OWORD *)(v446 + 112) = v523;
                *(_OWORD *)(v446 + 80) = v521;
              }
LABEL_327:
              __srcb = (int *)type metadata accessor for CloudKitUserIdentity(0);
              v524 = __srcb[5];
              v525 = (void *)(v446 + v524);
              v526 = &v447[v524];
              v527 = sub_1AD63AE2C();
              v528 = *(_QWORD *)(v527 - 8);
              v529 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v528 + 48);
              v530 = v529(v525, 1, v527);
              v531 = v529(v526, 1, v527);
              if (v530)
              {
                if (!v531)
                {
                  (*(void (**)(void *, char *, uint64_t))(v528 + 16))(v525, v526, v527);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v528 + 56))(v525, 0, 1, v527);
                  goto LABEL_333;
                }
              }
              else
              {
                if (!v531)
                {
                  (*(void (**)(void *, char *, uint64_t))(v528 + 24))(v525, v526, v527);
LABEL_333:
                  v533 = __srcb[6];
                  v534 = v446 + v533;
                  v535 = &v447[v533];
                  v536 = *(_QWORD *)(v446 + v533);
                  v537 = *(_QWORD *)&v447[v533];
                  v538 = v1866;
                  if (!v536)
                  {
                    if (v537)
                    {
                      v541 = *((_QWORD *)v535 + 1);
                      *(_QWORD *)v534 = v537;
                      *(_QWORD *)(v534 + 8) = v541;
                      v542 = *((_QWORD *)v535 + 3);
                      swift_retain();
                      if (v542 == 1)
                      {
                        *(_OWORD *)(v534 + 16) = *((_OWORD *)v535 + 1);
                      }
                      else
                      {
                        *(_QWORD *)(v534 + 16) = *((_QWORD *)v535 + 2);
                        *(_QWORD *)(v534 + 24) = *((_QWORD *)v535 + 3);
                        swift_bridgeObjectRetain();
                      }
                      v563 = *((_QWORD *)v535 + 5);
                      *(_QWORD *)(v534 + 32) = *((_QWORD *)v535 + 4);
                      *(_QWORD *)(v534 + 40) = v563;
                      v564 = *((_QWORD *)v535 + 7);
                      swift_retain();
                      if (v564 == 1)
                      {
                        *(_OWORD *)(v534 + 48) = *((_OWORD *)v535 + 3);
                      }
                      else
                      {
                        *(_QWORD *)(v534 + 48) = *((_QWORD *)v535 + 6);
                        *(_QWORD *)(v534 + 56) = *((_QWORD *)v535 + 7);
                        swift_bridgeObjectRetain();
                      }
                      v565 = *((_QWORD *)v535 + 8);
                      if (v565)
                      {
                        v1909 = v4;
                        v566 = *((_QWORD *)v535 + 9);
                        *(_QWORD *)(v534 + 64) = v565;
                        *(_QWORD *)(v534 + 72) = v566;
                        *(_QWORD *)(v534 + 80) = *((_QWORD *)v535 + 10);
                        *(_QWORD *)(v534 + 88) = *((_QWORD *)v535 + 11);
                        v567 = *((_QWORD *)v535 + 13);
                        *(_QWORD *)(v534 + 96) = *((_QWORD *)v535 + 12);
                        *(_QWORD *)(v534 + 104) = v567;
                        *(_QWORD *)(v534 + 112) = *((_QWORD *)v535 + 14);
                        *(_QWORD *)(v534 + 120) = *((_QWORD *)v535 + 15);
                        v568 = *((_QWORD *)v535 + 17);
                        *(_QWORD *)(v534 + 128) = *((_QWORD *)v535 + 16);
                        *(_QWORD *)(v534 + 136) = v568;
                        *(_QWORD *)(v534 + 144) = *((_QWORD *)v535 + 18);
                        *(_QWORD *)(v534 + 152) = *((_QWORD *)v535 + 19);
                        v569 = *((_QWORD *)v535 + 21);
                        *(_QWORD *)(v534 + 160) = *((_QWORD *)v535 + 20);
                        *(_QWORD *)(v534 + 168) = v569;
                        v1836 = *((_QWORD *)v535 + 23);
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        if (v1836 == 1)
                        {
                          *(_OWORD *)(v534 + 176) = *((_OWORD *)v535 + 11);
                        }
                        else
                        {
                          *(_QWORD *)(v534 + 176) = *((_QWORD *)v535 + 22);
                          *(_QWORD *)(v534 + 184) = *((_QWORD *)v535 + 23);
                          swift_bridgeObjectRetain();
                        }
                        v4 = v1909;
                        v538 = v1866;
                        *(_QWORD *)(v534 + 192) = *((_QWORD *)v535 + 24);
                      }
                      else
                      {
                        *(_OWORD *)(v534 + 64) = *((_OWORD *)v535 + 4);
                        v590 = *((_OWORD *)v535 + 5);
                        v591 = *((_OWORD *)v535 + 6);
                        v592 = *((_OWORD *)v535 + 8);
                        *(_OWORD *)(v534 + 112) = *((_OWORD *)v535 + 7);
                        *(_OWORD *)(v534 + 128) = v592;
                        *(_OWORD *)(v534 + 80) = v590;
                        *(_OWORD *)(v534 + 96) = v591;
                        v593 = *((_OWORD *)v535 + 9);
                        v594 = *((_OWORD *)v535 + 10);
                        v595 = *((_OWORD *)v535 + 11);
                        *(_QWORD *)(v534 + 192) = *((_QWORD *)v535 + 24);
                        *(_OWORD *)(v534 + 160) = v594;
                        *(_OWORD *)(v534 + 176) = v595;
                        *(_OWORD *)(v534 + 144) = v593;
                        v538 = v1866;
                      }
                      *(_BYTE *)(v534 + 200) = v535[200];
                      v596 = (uint64_t *)(v535 + 208);
                      v597 = *((_QWORD *)v535 + 27);
                      if (v597 >> 60 == 15)
                      {
                        *(_OWORD *)(v534 + 208) = *(_OWORD *)v596;
                      }
                      else
                      {
                        v598 = *v596;
                        sub_1AD0040A0(*v596, *((_QWORD *)v535 + 27));
                        *(_QWORD *)(v534 + 208) = v598;
                        *(_QWORD *)(v534 + 216) = v597;
                      }
                    }
                    else
                    {
                      v553 = *((_OWORD *)v535 + 1);
                      *(_OWORD *)v534 = *(_OWORD *)v535;
                      *(_OWORD *)(v534 + 16) = v553;
                      v554 = *((_OWORD *)v535 + 2);
                      v555 = *((_OWORD *)v535 + 3);
                      v556 = *((_OWORD *)v535 + 5);
                      *(_OWORD *)(v534 + 64) = *((_OWORD *)v535 + 4);
                      *(_OWORD *)(v534 + 80) = v556;
                      *(_OWORD *)(v534 + 32) = v554;
                      *(_OWORD *)(v534 + 48) = v555;
                      v557 = *((_OWORD *)v535 + 6);
                      v558 = *((_OWORD *)v535 + 7);
                      v559 = *((_OWORD *)v535 + 9);
                      *(_OWORD *)(v534 + 128) = *((_OWORD *)v535 + 8);
                      *(_OWORD *)(v534 + 144) = v559;
                      *(_OWORD *)(v534 + 96) = v557;
                      *(_OWORD *)(v534 + 112) = v558;
                      v560 = *((_OWORD *)v535 + 10);
                      v561 = *((_OWORD *)v535 + 11);
                      v562 = *((_OWORD *)v535 + 13);
                      *(_OWORD *)(v534 + 192) = *((_OWORD *)v535 + 12);
                      *(_OWORD *)(v534 + 208) = v562;
                      *(_OWORD *)(v534 + 160) = v560;
                      *(_OWORD *)(v534 + 176) = v561;
                    }
                    goto LABEL_392;
                  }
                  if (!v537)
                  {
                    sub_1AD3114A8((_QWORD *)v534);
                    v543 = *((_OWORD *)v535 + 1);
                    *(_OWORD *)v534 = *(_OWORD *)v535;
                    *(_OWORD *)(v534 + 16) = v543;
                    v544 = *((_OWORD *)v535 + 5);
                    v546 = *((_OWORD *)v535 + 2);
                    v545 = *((_OWORD *)v535 + 3);
                    *(_OWORD *)(v534 + 64) = *((_OWORD *)v535 + 4);
                    *(_OWORD *)(v534 + 80) = v544;
                    *(_OWORD *)(v534 + 32) = v546;
                    *(_OWORD *)(v534 + 48) = v545;
                    v547 = *((_OWORD *)v535 + 9);
                    v549 = *((_OWORD *)v535 + 6);
                    v548 = *((_OWORD *)v535 + 7);
                    *(_OWORD *)(v534 + 128) = *((_OWORD *)v535 + 8);
                    *(_OWORD *)(v534 + 144) = v547;
                    *(_OWORD *)(v534 + 96) = v549;
                    *(_OWORD *)(v534 + 112) = v548;
                    v550 = *((_OWORD *)v535 + 13);
                    v552 = *((_OWORD *)v535 + 10);
                    v551 = *((_OWORD *)v535 + 11);
                    *(_OWORD *)(v534 + 192) = *((_OWORD *)v535 + 12);
                    *(_OWORD *)(v534 + 208) = v550;
                    *(_OWORD *)(v534 + 160) = v552;
                    *(_OWORD *)(v534 + 176) = v551;
                    goto LABEL_392;
                  }
                  v539 = *((_QWORD *)v535 + 1);
                  *(_QWORD *)v534 = v537;
                  *(_QWORD *)(v534 + 8) = v539;
                  swift_retain();
                  swift_release();
                  v540 = *((_QWORD *)v535 + 3);
                  if (*(_QWORD *)(v534 + 24) == 1)
                  {
                    if (v540 != 1)
                    {
                      *(_QWORD *)(v534 + 16) = *((_QWORD *)v535 + 2);
                      *(_QWORD *)(v534 + 24) = *((_QWORD *)v535 + 3);
                      swift_bridgeObjectRetain();
                      goto LABEL_355;
                    }
                  }
                  else
                  {
                    if (v540 != 1)
                    {
                      *(_QWORD *)(v534 + 16) = *((_QWORD *)v535 + 2);
                      *(_QWORD *)(v534 + 24) = *((_QWORD *)v535 + 3);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
LABEL_355:
                      v570 = *((_QWORD *)v535 + 5);
                      *(_QWORD *)(v534 + 32) = *((_QWORD *)v535 + 4);
                      *(_QWORD *)(v534 + 40) = v570;
                      swift_retain();
                      swift_release();
                      v571 = *((_QWORD *)v535 + 7);
                      if (*(_QWORD *)(v534 + 56) == 1)
                      {
                        if (v571 != 1)
                        {
                          *(_QWORD *)(v534 + 48) = *((_QWORD *)v535 + 6);
                          *(_QWORD *)(v534 + 56) = *((_QWORD *)v535 + 7);
                          swift_bridgeObjectRetain();
                          goto LABEL_362;
                        }
                      }
                      else
                      {
                        if (v571 != 1)
                        {
                          *(_QWORD *)(v534 + 48) = *((_QWORD *)v535 + 6);
                          *(_QWORD *)(v534 + 56) = *((_QWORD *)v535 + 7);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
LABEL_362:
                          v572 = (_OWORD *)(v534 + 64);
                          v574 = v535 + 64;
                          v573 = *((_QWORD *)v535 + 8);
                          if (*(_QWORD *)(v534 + 64))
                          {
                            if (v573)
                            {
                              v575 = *((_QWORD *)v535 + 9);
                              *(_QWORD *)(v534 + 64) = v573;
                              *(_QWORD *)(v534 + 72) = v575;
                              swift_retain();
                              swift_release();
                              *(_QWORD *)(v534 + 80) = *((_QWORD *)v535 + 10);
                              *(_QWORD *)(v534 + 88) = *((_QWORD *)v535 + 11);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              v576 = *((_QWORD *)v535 + 13);
                              *(_QWORD *)(v534 + 96) = *((_QWORD *)v535 + 12);
                              *(_QWORD *)(v534 + 104) = v576;
                              swift_retain();
                              swift_release();
                              *(_QWORD *)(v534 + 112) = *((_QWORD *)v535 + 14);
                              *(_QWORD *)(v534 + 120) = *((_QWORD *)v535 + 15);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              v577 = *((_QWORD *)v535 + 17);
                              *(_QWORD *)(v534 + 128) = *((_QWORD *)v535 + 16);
                              *(_QWORD *)(v534 + 136) = v577;
                              swift_retain();
                              swift_release();
                              *(_QWORD *)(v534 + 144) = *((_QWORD *)v535 + 18);
                              *(_QWORD *)(v534 + 152) = *((_QWORD *)v535 + 19);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              v578 = *((_QWORD *)v535 + 21);
                              *(_QWORD *)(v534 + 160) = *((_QWORD *)v535 + 20);
                              *(_QWORD *)(v534 + 168) = v578;
                              swift_retain();
                              swift_release();
                              v579 = *((_QWORD *)v535 + 23);
                              if (*(_QWORD *)(v534 + 184) == 1)
                              {
                                if (v579 != 1)
                                {
                                  *(_QWORD *)(v534 + 176) = *((_QWORD *)v535 + 22);
                                  *(_QWORD *)(v534 + 184) = *((_QWORD *)v535 + 23);
                                  swift_bridgeObjectRetain();
LABEL_384:
                                  *(_QWORD *)(v534 + 192) = *((_QWORD *)v535 + 24);
                                  goto LABEL_385;
                                }
                              }
                              else
                              {
                                if (v579 != 1)
                                {
                                  *(_QWORD *)(v534 + 176) = *((_QWORD *)v535 + 22);
                                  *(_QWORD *)(v534 + 184) = *((_QWORD *)v535 + 23);
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  goto LABEL_384;
                                }
                                sub_1AD009758(v534 + 176, &qword_1ED2E3198);
                              }
                              *(_OWORD *)(v534 + 176) = *((_OWORD *)v535 + 11);
                              goto LABEL_384;
                            }
                            sub_1AD311474(v534 + 64);
                            *v572 = *v574;
                            v584 = *((_OWORD *)v535 + 8);
                            v586 = *((_OWORD *)v535 + 5);
                            v585 = *((_OWORD *)v535 + 6);
                            *(_OWORD *)(v534 + 112) = *((_OWORD *)v535 + 7);
                            *(_OWORD *)(v534 + 128) = v584;
                            *(_OWORD *)(v534 + 80) = v586;
                            *(_OWORD *)(v534 + 96) = v585;
                            v588 = *((_OWORD *)v535 + 10);
                            v587 = *((_OWORD *)v535 + 11);
                            v589 = *((_OWORD *)v535 + 9);
                            *(_QWORD *)(v534 + 192) = *((_QWORD *)v535 + 24);
                            *(_OWORD *)(v534 + 160) = v588;
                            *(_OWORD *)(v534 + 176) = v587;
                            *(_OWORD *)(v534 + 144) = v589;
                          }
                          else
                          {
                            if (v573)
                            {
                              v1910 = v4;
                              v580 = *((_QWORD *)v535 + 9);
                              *(_QWORD *)(v534 + 64) = v573;
                              *(_QWORD *)(v534 + 72) = v580;
                              *(_QWORD *)(v534 + 80) = *((_QWORD *)v535 + 10);
                              *(_QWORD *)(v534 + 88) = *((_QWORD *)v535 + 11);
                              v581 = *((_QWORD *)v535 + 13);
                              *(_QWORD *)(v534 + 96) = *((_QWORD *)v535 + 12);
                              *(_QWORD *)(v534 + 104) = v581;
                              *(_QWORD *)(v534 + 112) = *((_QWORD *)v535 + 14);
                              *(_QWORD *)(v534 + 120) = *((_QWORD *)v535 + 15);
                              v582 = *((_QWORD *)v535 + 17);
                              *(_QWORD *)(v534 + 128) = *((_QWORD *)v535 + 16);
                              *(_QWORD *)(v534 + 136) = v582;
                              *(_QWORD *)(v534 + 144) = *((_QWORD *)v535 + 18);
                              *(_QWORD *)(v534 + 152) = *((_QWORD *)v535 + 19);
                              v583 = *((_QWORD *)v535 + 21);
                              *(_QWORD *)(v534 + 160) = *((_QWORD *)v535 + 20);
                              *(_QWORD *)(v534 + 168) = v583;
                              v1837 = *((_QWORD *)v535 + 23);
                              swift_retain();
                              swift_bridgeObjectRetain();
                              swift_retain();
                              swift_bridgeObjectRetain();
                              swift_retain();
                              swift_bridgeObjectRetain();
                              swift_retain();
                              if (v1837 == 1)
                              {
                                *(_OWORD *)(v534 + 176) = *((_OWORD *)v535 + 11);
                              }
                              else
                              {
                                *(_QWORD *)(v534 + 176) = *((_QWORD *)v535 + 22);
                                *(_QWORD *)(v534 + 184) = *((_QWORD *)v535 + 23);
                                swift_bridgeObjectRetain();
                              }
                              v4 = v1910;
                              v538 = v1866;
                              goto LABEL_384;
                            }
                            *v572 = *v574;
                            v599 = *((_OWORD *)v535 + 5);
                            v600 = *((_OWORD *)v535 + 6);
                            v601 = *((_OWORD *)v535 + 8);
                            *(_OWORD *)(v534 + 112) = *((_OWORD *)v535 + 7);
                            *(_OWORD *)(v534 + 128) = v601;
                            *(_OWORD *)(v534 + 80) = v599;
                            *(_OWORD *)(v534 + 96) = v600;
                            v602 = *((_OWORD *)v535 + 9);
                            v603 = *((_OWORD *)v535 + 10);
                            v604 = *((_OWORD *)v535 + 11);
                            *(_QWORD *)(v534 + 192) = *((_QWORD *)v535 + 24);
                            *(_OWORD *)(v534 + 160) = v603;
                            *(_OWORD *)(v534 + 176) = v604;
                            *(_OWORD *)(v534 + 144) = v602;
                          }
LABEL_385:
                          *(_BYTE *)(v534 + 200) = v535[200];
                          v605 = (uint64_t *)(v535 + 208);
                          v606 = *((_QWORD *)v535 + 27);
                          if (*(_QWORD *)(v534 + 216) >> 60 == 15)
                          {
                            if (v606 >> 60 != 15)
                            {
                              v607 = *v605;
                              sub_1AD0040A0(*v605, *((_QWORD *)v535 + 27));
                              *(_QWORD *)(v534 + 208) = v607;
                              *(_QWORD *)(v534 + 216) = v606;
                              goto LABEL_392;
                            }
                            goto LABEL_390;
                          }
                          if (v606 >> 60 == 15)
                          {
                            sub_1AD007EC0(v534 + 208);
LABEL_390:
                            *(_OWORD *)(v534 + 208) = *(_OWORD *)v605;
                            goto LABEL_392;
                          }
                          v608 = *v605;
                          sub_1AD0040A0(*v605, *((_QWORD *)v535 + 27));
                          v609 = *(_QWORD *)(v534 + 208);
                          v610 = *(_QWORD *)(v534 + 216);
                          *(_QWORD *)(v534 + 208) = v608;
                          *(_QWORD *)(v534 + 216) = v606;
                          sub_1AD00412C(v609, v610);
LABEL_392:
                          *(_QWORD *)(v446 + __srcb[7]) = *(_QWORD *)&v447[__srcb[7]];
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          v611 = __srcb[8];
                          v612 = (uint64_t *)(v446 + v611);
                          v613 = (uint64_t *)&v447[v611];
                          v614 = *(_QWORD *)&v447[v611 + 8];
                          if (*(_QWORD *)(v446 + v611 + 8) >> 60 == 15)
                          {
                            if (v614 >> 60 != 15)
                            {
                              v615 = *v613;
                              sub_1AD0040A0(v615, v614);
                              *v612 = v615;
                              v612[1] = v614;
                              goto LABEL_399;
                            }
                          }
                          else
                          {
                            if (v614 >> 60 != 15)
                            {
                              v616 = *v613;
                              sub_1AD0040A0(v616, v614);
                              v617 = *v612;
                              v618 = v612[1];
                              *v612 = v616;
                              v612[1] = v614;
                              sub_1AD00412C(v617, v618);
LABEL_399:
                              v619 = __srcb[9];
                              v620 = (uint64_t *)(v446 + v619);
                              v621 = (uint64_t *)&v447[v619];
                              v622 = *(_QWORD *)&v447[v619 + 8];
                              if (*(_QWORD *)(v446 + v619 + 8) >> 60 == 15)
                              {
                                if (v622 >> 60 != 15)
                                {
                                  v623 = *v621;
                                  sub_1AD0040A0(v623, v622);
                                  *v620 = v623;
                                  v620[1] = v622;
                                  goto LABEL_406;
                                }
                              }
                              else
                              {
                                if (v622 >> 60 != 15)
                                {
                                  v624 = *v621;
                                  sub_1AD0040A0(v624, v622);
                                  v625 = *v620;
                                  v626 = v620[1];
                                  *v620 = v624;
                                  v620[1] = v622;
                                  sub_1AD00412C(v625, v626);
LABEL_406:
                                  *(_BYTE *)(v446 + __srcb[10]) = v447[__srcb[10]];
                                  *(_BYTE *)(v446 + __srcb[11]) = v447[__srcb[11]];
                                  v627 = __srcb[12];
                                  v628 = (uint64_t *)(v446 + v627);
                                  v629 = (uint64_t *)&v447[v627];
                                  v630 = *(_QWORD *)&v447[v627 + 8];
                                  if (*(_QWORD *)(v446 + v627 + 8) >> 60 == 15)
                                  {
                                    if (v630 >> 60 != 15)
                                    {
                                      v631 = *v629;
                                      sub_1AD0040A0(v631, v630);
                                      *v628 = v631;
                                      v628[1] = v630;
                                      goto LABEL_413;
                                    }
                                  }
                                  else
                                  {
                                    if (v630 >> 60 != 15)
                                    {
                                      v632 = *v629;
                                      sub_1AD0040A0(v632, v630);
                                      v633 = *v628;
                                      v634 = v628[1];
                                      *v628 = v632;
                                      v628[1] = v630;
                                      sub_1AD00412C(v633, v634);
LABEL_413:
                                      *(_QWORD *)(v446 + __srcb[13]) = *(_QWORD *)&v447[__srcb[13]];
                                      *((_BYTE *)v1897 + v1870[7]) = *((_BYTE *)v538 + v1870[7]);
                                      *((_BYTE *)v1897 + v1870[8]) = *((_BYTE *)v538 + v1870[8]);
                                      *((_BYTE *)v1897 + v1870[9]) = *((_BYTE *)v538 + v1870[9]);
                                      *((_BYTE *)v1897 + v1870[10]) = *((_BYTE *)v538 + v1870[10]);
                                      *((_BYTE *)v1897 + v1870[11]) = *((_BYTE *)v538 + v1870[11]);
                                      *((_BYTE *)v1897 + v1870[12]) = *((_BYTE *)v538 + v1870[12]);
                                      *((_BYTE *)v1897 + v1870[13]) = *((_BYTE *)v538 + v1870[13]);
                                      *((_BYTE *)v1897 + v1870[14]) = *((_BYTE *)v538 + v1870[14]);
                                      v635 = v1870[15];
                                      v636 = (uint64_t *)((char *)v1897 + v635);
                                      v637 = (_QWORD *)((char *)v538 + v635);
                                      v638 = *(_QWORD *)((char *)v538 + v635 + 8);
                                      if (*(_QWORD *)((char *)v1897 + v635 + 8) >> 60 == 15)
                                      {
                                        if (v638 >> 60 != 15)
                                        {
                                          v639 = *v637;
                                          sub_1AD0040A0(*v637, v638);
                                          *v636 = v639;
                                          v636[1] = v638;
                                          goto LABEL_420;
                                        }
                                      }
                                      else
                                      {
                                        if (v638 >> 60 != 15)
                                        {
                                          v640 = *v637;
                                          sub_1AD0040A0(*v637, v638);
                                          v641 = *v636;
                                          v642 = v636[1];
                                          *v636 = v640;
                                          v636[1] = v638;
                                          sub_1AD00412C(v641, v642);
LABEL_420:
                                          v643 = v1870[16];
                                          v644 = (uint64_t *)((char *)v1897 + v643);
                                          v645 = (_QWORD *)((char *)v538 + v643);
                                          v646 = *(_QWORD *)((char *)v538 + v643 + 8);
                                          if (*(_QWORD *)((char *)v1897 + v643 + 8) >> 60 == 15)
                                          {
                                            if (v646 >> 60 != 15)
                                            {
                                              v647 = *v645;
                                              sub_1AD0040A0(*v645, v646);
                                              *v644 = v647;
                                              v644[1] = v646;
                                              goto LABEL_427;
                                            }
                                          }
                                          else
                                          {
                                            if (v646 >> 60 != 15)
                                            {
                                              v648 = *v645;
                                              sub_1AD0040A0(*v645, v646);
                                              v649 = *v644;
                                              v650 = v644[1];
                                              *v644 = v648;
                                              v644[1] = v646;
                                              sub_1AD00412C(v649, v650);
LABEL_427:
                                              *((_BYTE *)v1897 + v1870[17]) = *((_BYTE *)v538 + v1870[17]);
                                              *((_BYTE *)v1897 + v1870[18]) = *((_BYTE *)v538 + v1870[18]);
                                              v651 = v1870[19];
                                              v652 = (uint64_t)v1897 + v651;
                                              v653 = (_DWORD *)((char *)v538 + v651);
                                              v654 = type metadata accessor for CloudKitSharingToken();
                                              v1838 = *(_QWORD *)(v654 - 8);
                                              v655 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1838 + 48);
                                              v656 = v655(v652, 1, v654);
                                              __srcc = (char *)v653;
                                              v657 = v655((uint64_t)v653, 1, v654);
                                              if (v656)
                                              {
                                                if (!v657)
                                                {
                                                  v1834 = v654;
                                                  *(_DWORD *)v652 = *v653;
                                                  *(_QWORD *)(v652 + 8) = *((_QWORD *)v653 + 1);
                                                  *(_QWORD *)(v652 + 16) = *((_QWORD *)v653 + 2);
                                                  v658 = *((_QWORD *)v653 + 4);
                                                  *(_QWORD *)(v652 + 24) = *((_QWORD *)__srcc + 3);
                                                  *(_QWORD *)(v652 + 32) = v658;
                                                  v659 = (uint64_t *)(__srcc + 40);
                                                  v660 = *((_QWORD *)__srcc + 6);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_retain();
                                                  if (v660 >> 60 == 11 || v660 >> 60 == 15)
                                                  {
                                                    *(_OWORD *)(v652 + 40) = *(_OWORD *)v659;
                                                  }
                                                  else
                                                  {
                                                    v666 = *v659;
                                                    sub_1AD0040A0(*v659, v660);
                                                    *(_QWORD *)(v652 + 40) = v666;
                                                    *(_QWORD *)(v652 + 48) = v660;
                                                  }
                                                  v538 = v1866;
                                                  if (*((_QWORD *)__srcc + 9))
                                                  {
                                                    *(_DWORD *)(v652 + 56) = *((_DWORD *)__srcc + 14);
                                                    v667 = *((_DWORD *)__srcc + 15);
                                                    *(_BYTE *)(v652 + 64) = __srcc[64];
                                                    *(_DWORD *)(v652 + 60) = v667;
                                                    v668 = *((_QWORD *)__srcc + 10);
                                                    *(_QWORD *)(v652 + 72) = *((_QWORD *)__srcc + 9);
                                                    *(_QWORD *)(v652 + 80) = v668;
                                                    v669 = (uint64_t *)(__srcc + 88);
                                                    v670 = *((_QWORD *)__srcc + 12);
                                                    swift_retain();
                                                    if (v670 >> 60 != 15)
                                                    {
                                                      v674 = *v669;
                                                      sub_1AD0040A0(v674, v670);
                                                      *(_QWORD *)(v652 + 88) = v674;
                                                      *(_QWORD *)(v652 + 96) = v670;
                                                      goto LABEL_447;
                                                    }
                                                    v671 = (_OWORD *)(v652 + 88);
                                                    v672 = *(_OWORD *)v669;
                                                  }
                                                  else
                                                  {
                                                    v671 = (_OWORD *)(v652 + 56);
                                                    v672 = *(_OWORD *)(__srcc + 56);
                                                    v673 = *(_OWORD *)(__srcc + 88);
                                                    *(_OWORD *)(v652 + 72) = *(_OWORD *)(__srcc + 72);
                                                    *(_OWORD *)(v652 + 88) = v673;
                                                  }
                                                  *v671 = v672;
LABEL_447:
                                                  v675 = *((_QWORD *)__srcc + 14);
                                                  *(_QWORD *)(v652 + 104) = *((_QWORD *)__srcc + 13);
                                                  *(_QWORD *)(v652 + 112) = v675;
                                                  v676 = __srcc + 120;
                                                  v677 = *((_QWORD *)__srcc + 16);
                                                  swift_retain();
                                                  if (v677 >> 60 == 15)
                                                  {
                                                    *(_OWORD *)(v652 + 120) = *v676;
                                                  }
                                                  else
                                                  {
                                                    v678 = *(_QWORD *)v676;
                                                    sub_1AD0040A0(v678, v677);
                                                    *(_QWORD *)(v652 + 120) = v678;
                                                    *(_QWORD *)(v652 + 128) = v677;
                                                  }
                                                  v679 = *((_QWORD *)__srcc + 18);
                                                  *(_QWORD *)(v652 + 136) = *((_QWORD *)__srcc + 17);
                                                  *(_QWORD *)(v652 + 144) = v679;
                                                  v680 = (uint64_t *)(__srcc + 152);
                                                  v681 = *((_QWORD *)__srcc + 20);
                                                  swift_retain();
                                                  if (v681 >> 60 == 11 || v681 >> 60 == 15)
                                                  {
                                                    *(_OWORD *)(v652 + 152) = *(_OWORD *)v680;
                                                  }
                                                  else
                                                  {
                                                    v682 = *v680;
                                                    sub_1AD0040A0(*v680, v681);
                                                    *(_QWORD *)(v652 + 152) = v682;
                                                    *(_QWORD *)(v652 + 160) = v681;
                                                  }
                                                  v683 = *((_QWORD *)__srcc + 21);
                                                  if (v683)
                                                  {
                                                    v684 = *((_QWORD *)__srcc + 22);
                                                    *(_QWORD *)(v652 + 168) = v683;
                                                    *(_QWORD *)(v652 + 176) = v684;
                                                    v685 = __srcc + 184;
                                                    v686 = *((_QWORD *)__srcc + 24);
                                                    swift_retain();
                                                    if (v686 >> 60 == 15)
                                                    {
                                                      *(_OWORD *)(v652 + 184) = *v685;
                                                    }
                                                    else
                                                    {
                                                      v690 = *(_QWORD *)v685;
                                                      sub_1AD0040A0(v690, v686);
                                                      *(_QWORD *)(v652 + 184) = v690;
                                                      *(_QWORD *)(v652 + 192) = v686;
                                                    }
                                                    *(_DWORD *)(v652 + 200) = *((_DWORD *)__srcc + 50);
                                                    v691 = *((_QWORD *)__srcc + 27);
                                                    *(_QWORD *)(v652 + 208) = *((_QWORD *)__srcc + 26);
                                                    *(_QWORD *)(v652 + 216) = v691;
                                                    v692 = __srcc + 224;
                                                    v693 = *((_QWORD *)__srcc + 29);
                                                    swift_retain();
                                                    if (v693 >> 60 == 15)
                                                    {
                                                      *(_OWORD *)(v652 + 224) = *v692;
                                                    }
                                                    else
                                                    {
                                                      v694 = *(_QWORD *)v692;
                                                      sub_1AD0040A0(v694, v693);
                                                      *(_QWORD *)(v652 + 224) = v694;
                                                      *(_QWORD *)(v652 + 232) = v693;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    *(_OWORD *)(v652 + 168) = *(_OWORD *)(__srcc + 168);
                                                    v687 = *(_OWORD *)(__srcc + 184);
                                                    v688 = *(_OWORD *)(__srcc + 200);
                                                    v689 = *(_OWORD *)(__srcc + 216);
                                                    *(_QWORD *)(v652 + 232) = *((_QWORD *)__srcc + 29);
                                                    *(_OWORD *)(v652 + 200) = v688;
                                                    *(_OWORD *)(v652 + 216) = v689;
                                                    *(_OWORD *)(v652 + 184) = v687;
                                                  }
                                                  *(_QWORD *)(v652 + 240) = *((_QWORD *)__srcc + 30);
                                                  v695 = *((_QWORD *)__srcc + 32);
                                                  *(_QWORD *)(v652 + 248) = *((_QWORD *)__srcc + 31);
                                                  *(_QWORD *)(v652 + 256) = v695;
                                                  v696 = (uint64_t *)(__srcc + 264);
                                                  v697 = *((_QWORD *)__srcc + 34);
                                                  swift_bridgeObjectRetain();
                                                  swift_retain();
                                                  if (v697 >> 60 == 11 || v697 >> 60 == 15)
                                                  {
                                                    *(_OWORD *)(v652 + 264) = *(_OWORD *)v696;
                                                  }
                                                  else
                                                  {
                                                    v698 = *v696;
                                                    sub_1AD0040A0(*v696, v697);
                                                    *(_QWORD *)(v652 + 264) = v698;
                                                    *(_QWORD *)(v652 + 272) = v697;
                                                  }
                                                  v699 = *(int *)(v1834 + 24);
                                                  v700 = (_QWORD *)(v652 + v699);
                                                  v701 = &__srcc[v699];
                                                  v702 = *(_QWORD *)&__srcc[v699 + 8];
                                                  *v700 = *(_QWORD *)&__srcc[v699];
                                                  v700[1] = v702;
                                                  swift_retain();
                                                  v703 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                + 28);
                                                  v704 = (char *)v700 + v703;
                                                  v705 = &v701[v703];
                                                  v706 = sub_1AD63AF28();
                                                  v707 = *(_QWORD *)(v706 - 8);
                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v707 + 48))(v705, 1, v706))
                                                  {
                                                    v708 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                    memcpy(v704, v705, *(_QWORD *)(*(_QWORD *)(v708 - 8) + 64));
                                                  }
                                                  else
                                                  {
                                                    (*(void (**)(char *, char *, uint64_t))(v707 + 16))(v704, v705, v706);
                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v707 + 56))(v704, 0, 1, v706);
                                                  }
                                                  v709 = *(int *)(v1834 + 28);
                                                  v710 = v652 + v709;
                                                  v711 = &__srcc[v709];
                                                  v712 = *(_QWORD *)&__srcc[v709 + 8];
                                                  *(_QWORD *)v710 = *(_QWORD *)&__srcc[v709];
                                                  *(_QWORD *)(v710 + 8) = v712;
                                                  v713 = *(_QWORD *)&__srcc[v709 + 24];
                                                  swift_retain();
                                                  if (v713 == 1)
                                                  {
                                                    *(_OWORD *)(v710 + 16) = *((_OWORD *)v711 + 1);
                                                  }
                                                  else
                                                  {
                                                    *(_QWORD *)(v710 + 16) = *((_QWORD *)v711 + 2);
                                                    *(_QWORD *)(v710 + 24) = *((_QWORD *)v711 + 3);
                                                    swift_bridgeObjectRetain();
                                                  }
                                                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1838 + 56))(v652, 0, 1, v1834);
                                                  goto LABEL_473;
                                                }
LABEL_434:
                                                v661 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                                                memcpy((void *)v652, v653, *(_QWORD *)(*(_QWORD *)(v661 - 8) + 64));
LABEL_473:
                                                v13 = v1875;
                                                goto LABEL_474;
                                              }
                                              if (v657)
                                              {
                                                sub_1AD066230(v652, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                                                goto LABEL_434;
                                              }
                                              v1835 = v654;
                                              *(_DWORD *)v652 = *v653;
                                              *(_QWORD *)(v652 + 8) = *((_QWORD *)v653 + 1);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(_QWORD *)(v652 + 16) = *((_QWORD *)v653 + 2);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              v662 = *((_QWORD *)v653 + 4);
                                              *(_QWORD *)(v652 + 24) = *((_QWORD *)v653 + 3);
                                              *(_QWORD *)(v652 + 32) = v662;
                                              swift_retain();
                                              swift_release();
                                              v663 = (uint64_t *)(v653 + 10);
                                              v664 = *((_QWORD *)v653 + 6);
                                              v665 = v664 & 0xF000000000000000;
                                              if (*(_QWORD *)(v652 + 48) >> 60 == 11)
                                              {
                                                if (v665 == 0xB000000000000000)
                                                  goto LABEL_751;
LABEL_744:
                                                if (v664 >> 60 != 15)
                                                {
                                                  v1099 = *v663;
                                                  sub_1AD0040A0(*v663, *((_QWORD *)v653 + 6));
                                                  *(_QWORD *)(v652 + 40) = v1099;
                                                  *(_QWORD *)(v652 + 48) = v664;
                                                  goto LABEL_752;
                                                }
                                                goto LABEL_751;
                                              }
                                              if (v665 == 0xB000000000000000)
                                              {
                                                sub_1AD009758(v652 + 40, &qword_1ED2E3250);
                                              }
                                              else
                                              {
                                                if (*(_QWORD *)(v652 + 48) >> 60 == 15)
                                                  goto LABEL_744;
                                                if (v664 >> 60 != 15)
                                                {
                                                  v1816 = *v663;
                                                  sub_1AD0040A0(*v663, *((_QWORD *)v653 + 6));
                                                  v1817 = *(_QWORD *)(v652 + 40);
                                                  v1818 = *(_QWORD *)(v652 + 48);
                                                  *(_QWORD *)(v652 + 40) = v1816;
                                                  *(_QWORD *)(v652 + 48) = v664;
                                                  sub_1AD00412C(v1817, v1818);
LABEL_752:
                                                  v1101 = (_OWORD *)(v652 + 56);
                                                  v1102 = v653 + 14;
                                                  v1103 = *((_QWORD *)v653 + 9);
                                                  if (*(_QWORD *)(v652 + 72))
                                                  {
                                                    if (!v1103)
                                                    {
                                                      sub_1AD0AEC58(v652 + 56);
                                                      v1114 = *(_OWORD *)(v653 + 18);
                                                      v1113 = *(_OWORD *)(v653 + 22);
                                                      *v1101 = *v1102;
                                                      *(_OWORD *)(v652 + 72) = v1114;
                                                      *(_OWORD *)(v652 + 88) = v1113;
                                                      goto LABEL_786;
                                                    }
                                                    *(_DWORD *)(v652 + 56) = v653[14];
                                                    v1104 = v653[15];
                                                    *(_BYTE *)(v652 + 64) = *((_BYTE *)v653 + 64);
                                                    *(_DWORD *)(v652 + 60) = v1104;
                                                    v1105 = *((_QWORD *)v653 + 10);
                                                    *(_QWORD *)(v652 + 72) = *((_QWORD *)v653 + 9);
                                                    *(_QWORD *)(v652 + 80) = v1105;
                                                    swift_retain();
                                                    swift_release();
                                                    v1101 = (_OWORD *)(v652 + 88);
                                                    v1106 = (uint64_t *)(v653 + 22);
                                                    v1107 = *((_QWORD *)v653 + 12);
                                                    if (*(_QWORD *)(v652 + 96) >> 60 == 15)
                                                    {
                                                      if (v1107 >> 60 != 15)
                                                      {
                                                        v1108 = *v1106;
                                                        sub_1AD0040A0(*v1106, *((_QWORD *)v653 + 12));
                                                        *(_QWORD *)(v652 + 88) = v1108;
                                                        *(_QWORD *)(v652 + 96) = v1107;
                                                        goto LABEL_786;
                                                      }
                                                      goto LABEL_763;
                                                    }
                                                    if (v1107 >> 60 == 15)
                                                    {
                                                      sub_1AD007EC0(v652 + 88);
LABEL_763:
                                                      v1115 = *(_OWORD *)v1106;
LABEL_765:
                                                      *v1101 = v1115;
                                                      goto LABEL_786;
                                                    }
                                                    v1135 = *v1106;
                                                    sub_1AD0040A0(*v1106, *((_QWORD *)v653 + 12));
                                                    v1136 = *(_QWORD *)(v652 + 88);
                                                    v1137 = *(_QWORD *)(v652 + 96);
                                                    *(_QWORD *)(v652 + 88) = v1135;
                                                    *(_QWORD *)(v652 + 96) = v1107;
                                                    sub_1AD00412C(v1136, v1137);
                                                  }
                                                  else
                                                  {
                                                    if (!v1103)
                                                    {
                                                      v1115 = *v1102;
                                                      v1116 = *(_OWORD *)(v653 + 22);
                                                      *(_OWORD *)(v652 + 72) = *(_OWORD *)(v653 + 18);
                                                      *(_OWORD *)(v652 + 88) = v1116;
                                                      goto LABEL_765;
                                                    }
                                                    *(_DWORD *)(v652 + 56) = v653[14];
                                                    v1109 = v653[15];
                                                    *(_BYTE *)(v652 + 64) = *((_BYTE *)v653 + 64);
                                                    *(_DWORD *)(v652 + 60) = v1109;
                                                    v1110 = *((_QWORD *)v653 + 10);
                                                    *(_QWORD *)(v652 + 72) = *((_QWORD *)v653 + 9);
                                                    *(_QWORD *)(v652 + 80) = v1110;
                                                    v1111 = (uint64_t *)(v653 + 22);
                                                    v1112 = *((_QWORD *)v653 + 12);
                                                    swift_retain();
                                                    if (v1112 >> 60 == 15)
                                                    {
                                                      *(_OWORD *)(v652 + 88) = *(_OWORD *)v1111;
                                                    }
                                                    else
                                                    {
                                                      v1133 = *v1111;
                                                      sub_1AD0040A0(*v1111, v1112);
                                                      *(_QWORD *)(v652 + 88) = v1133;
                                                      *(_QWORD *)(v652 + 96) = v1112;
                                                    }
                                                  }
LABEL_786:
                                                  v1138 = *((_QWORD *)v653 + 14);
                                                  *(_QWORD *)(v652 + 104) = *((_QWORD *)v653 + 13);
                                                  *(_QWORD *)(v652 + 112) = v1138;
                                                  swift_retain();
                                                  swift_release();
                                                  v1139 = (uint64_t *)(v653 + 30);
                                                  v1140 = *((_QWORD *)v653 + 16);
                                                  if (*(_QWORD *)(v652 + 128) >> 60 == 15)
                                                  {
                                                    if (v1140 >> 60 != 15)
                                                    {
                                                      v1141 = *v1139;
                                                      sub_1AD0040A0(*v1139, *((_QWORD *)v653 + 16));
                                                      *(_QWORD *)(v652 + 120) = v1141;
                                                      *(_QWORD *)(v652 + 128) = v1140;
                                                      goto LABEL_793;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    if (v1140 >> 60 != 15)
                                                    {
                                                      v1142 = *v1139;
                                                      sub_1AD0040A0(*v1139, *((_QWORD *)v653 + 16));
                                                      v1143 = *(_QWORD *)(v652 + 120);
                                                      v1144 = *(_QWORD *)(v652 + 128);
                                                      *(_QWORD *)(v652 + 120) = v1142;
                                                      *(_QWORD *)(v652 + 128) = v1140;
                                                      sub_1AD00412C(v1143, v1144);
LABEL_793:
                                                      v1145 = *((_QWORD *)v653 + 18);
                                                      *(_QWORD *)(v652 + 136) = *((_QWORD *)v653 + 17);
                                                      *(_QWORD *)(v652 + 144) = v1145;
                                                      swift_retain();
                                                      swift_release();
                                                      v1146 = (uint64_t *)(v653 + 38);
                                                      v1147 = *((_QWORD *)v653 + 20);
                                                      v1148 = v1147 & 0xF000000000000000;
                                                      if (*(_QWORD *)(v652 + 160) >> 60 == 11)
                                                      {
                                                        if (v1148 == 0xB000000000000000)
                                                          goto LABEL_803;
LABEL_799:
                                                        if (v1147 >> 60 != 15)
                                                        {
                                                          v1149 = *v1146;
                                                          sub_1AD0040A0(*v1146, *((_QWORD *)v653 + 20));
                                                          *(_QWORD *)(v652 + 152) = v1149;
                                                          *(_QWORD *)(v652 + 160) = v1147;
                                                          goto LABEL_804;
                                                        }
                                                        goto LABEL_803;
                                                      }
                                                      if (v1148 == 0xB000000000000000)
                                                      {
                                                        sub_1AD009758(v652 + 152, &qword_1ED2E3250);
                                                      }
                                                      else
                                                      {
                                                        if (*(_QWORD *)(v652 + 160) >> 60 == 15)
                                                          goto LABEL_799;
                                                        if (v1147 >> 60 != 15)
                                                        {
                                                          v1822 = *v1146;
                                                          sub_1AD0040A0(*v1146, *((_QWORD *)v653 + 20));
                                                          v1823 = *(_QWORD *)(v652 + 152);
                                                          v1824 = *(_QWORD *)(v652 + 160);
                                                          *(_QWORD *)(v652 + 152) = v1822;
                                                          *(_QWORD *)(v652 + 160) = v1147;
                                                          sub_1AD00412C(v1823, v1824);
LABEL_804:
                                                          v1150 = (_OWORD *)(v652 + 168);
                                                          v1152 = v653 + 42;
                                                          v1151 = *((_QWORD *)v653 + 21);
                                                          if (!*(_QWORD *)(v652 + 168))
                                                          {
                                                            if (v1151)
                                                            {
                                                              v1157 = *((_QWORD *)v653 + 22);
                                                              *(_QWORD *)(v652 + 168) = v1151;
                                                              *(_QWORD *)(v652 + 176) = v1157;
                                                              v1158 = (uint64_t *)(v653 + 46);
                                                              v1159 = *((_QWORD *)v653 + 24);
                                                              swift_retain();
                                                              if (v1159 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v652 + 184) = *(_OWORD *)v1158;
                                                              }
                                                              else
                                                              {
                                                                v1166 = *v1158;
                                                                sub_1AD0040A0(*v1158, v1159);
                                                                *(_QWORD *)(v652 + 184) = v1166;
                                                                *(_QWORD *)(v652 + 192) = v1159;
                                                              }
                                                              *(_DWORD *)(v652 + 200) = v653[50];
                                                              v1167 = *((_QWORD *)v653 + 27);
                                                              *(_QWORD *)(v652 + 208) = *((_QWORD *)v653 + 26);
                                                              *(_QWORD *)(v652 + 216) = v1167;
                                                              v1168 = (uint64_t *)(v653 + 56);
                                                              v1169 = *((_QWORD *)v653 + 29);
                                                              swift_retain();
                                                              if (v1169 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v652 + 224) = *(_OWORD *)v1168;
                                                              }
                                                              else
                                                              {
                                                                v1170 = *v1168;
                                                                sub_1AD0040A0(*v1168, v1169);
                                                                *(_QWORD *)(v652 + 224) = v1170;
                                                                *(_QWORD *)(v652 + 232) = v1169;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              *v1150 = *v1152;
                                                              v1163 = *(_OWORD *)(v653 + 46);
                                                              v1164 = *(_OWORD *)(v653 + 50);
                                                              v1165 = *(_OWORD *)(v653 + 54);
                                                              *(_QWORD *)(v652 + 232) = *((_QWORD *)v653 + 29);
                                                              *(_OWORD *)(v652 + 200) = v1164;
                                                              *(_OWORD *)(v652 + 216) = v1165;
                                                              *(_OWORD *)(v652 + 184) = v1163;
                                                            }
                                                            goto LABEL_872;
                                                          }
                                                          if (!v1151)
                                                          {
                                                            sub_1AD0AEC8C((uint64_t *)(v652 + 168));
                                                            *v1150 = *v1152;
                                                            v1161 = *(_OWORD *)(v653 + 50);
                                                            v1160 = *(_OWORD *)(v653 + 54);
                                                            v1162 = *(_OWORD *)(v653 + 46);
                                                            *(_QWORD *)(v652 + 232) = *((_QWORD *)v653 + 29);
                                                            *(_OWORD *)(v652 + 200) = v1161;
                                                            *(_OWORD *)(v652 + 216) = v1160;
                                                            *(_OWORD *)(v652 + 184) = v1162;
                                                            goto LABEL_872;
                                                          }
                                                          v1153 = *((_QWORD *)v653 + 22);
                                                          *(_QWORD *)(v652 + 168) = v1151;
                                                          *(_QWORD *)(v652 + 176) = v1153;
                                                          swift_retain();
                                                          swift_release();
                                                          v1154 = (uint64_t *)(v653 + 46);
                                                          v1155 = *((_QWORD *)v653 + 24);
                                                          if (*(_QWORD *)(v652 + 192) >> 60 == 15)
                                                          {
                                                            if (v1155 >> 60 != 15)
                                                            {
                                                              v1156 = *v1154;
                                                              sub_1AD0040A0(*v1154, *((_QWORD *)v653 + 24));
                                                              *(_QWORD *)(v652 + 184) = v1156;
                                                              *(_QWORD *)(v652 + 192) = v1155;
LABEL_858:
                                                              *(_DWORD *)(v652 + 200) = v653[50];
                                                              v1210 = *((_QWORD *)v653 + 27);
                                                              *(_QWORD *)(v652 + 208) = *((_QWORD *)v653 + 26);
                                                              *(_QWORD *)(v652 + 216) = v1210;
                                                              swift_retain();
                                                              swift_release();
                                                              v1211 = (uint64_t *)(v653 + 56);
                                                              v1212 = *((_QWORD *)v653 + 29);
                                                              if (*(_QWORD *)(v652 + 232) >> 60 == 15)
                                                              {
                                                                if (v1212 >> 60 != 15)
                                                                {
                                                                  v1213 = *v1211;
                                                                  sub_1AD0040A0(*v1211, *((_QWORD *)v653 + 29));
                                                                  *(_QWORD *)(v652 + 224) = v1213;
                                                                  *(_QWORD *)(v652 + 232) = v1212;
                                                                  goto LABEL_872;
                                                                }
                                                                goto LABEL_863;
                                                              }
                                                              if (v1212 >> 60 == 15)
                                                              {
                                                                sub_1AD007EC0(v652 + 224);
LABEL_863:
                                                                *(_OWORD *)(v652 + 224) = *(_OWORD *)v1211;
                                                                goto LABEL_872;
                                                              }
                                                              v1221 = *v1211;
                                                              sub_1AD0040A0(*v1211, *((_QWORD *)v653 + 29));
                                                              v1222 = *(_QWORD *)(v652 + 224);
                                                              v1223 = *(_QWORD *)(v652 + 232);
                                                              *(_QWORD *)(v652 + 224) = v1221;
                                                              *(_QWORD *)(v652 + 232) = v1212;
                                                              sub_1AD00412C(v1222, v1223);
LABEL_872:
                                                              *(_QWORD *)(v652 + 240) = *((_QWORD *)v653 + 30);
                                                              swift_bridgeObjectRetain();
                                                              swift_bridgeObjectRelease();
                                                              v1224 = *((_QWORD *)v653 + 32);
                                                              *(_QWORD *)(v652 + 248) = *((_QWORD *)v653 + 31);
                                                              *(_QWORD *)(v652 + 256) = v1224;
                                                              swift_retain();
                                                              swift_release();
                                                              v1225 = (uint64_t *)(v653 + 66);
                                                              v1226 = *((_QWORD *)v653 + 34);
                                                              v1227 = v1226 & 0xF000000000000000;
                                                              if (*(_QWORD *)(v652 + 272) >> 60 == 11)
                                                              {
                                                                if (v1227 == 0xB000000000000000)
                                                                  goto LABEL_882;
LABEL_878:
                                                                if (v1226 >> 60 != 15)
                                                                {
                                                                  v1228 = *v1225;
                                                                  sub_1AD0040A0(*v1225, *((_QWORD *)v653 + 34));
                                                                  *(_QWORD *)(v652 + 264) = v1228;
                                                                  *(_QWORD *)(v652 + 272) = v1226;
                                                                  goto LABEL_883;
                                                                }
                                                                goto LABEL_882;
                                                              }
                                                              if (v1227 == 0xB000000000000000)
                                                              {
                                                                sub_1AD009758(v652 + 264, &qword_1ED2E3250);
                                                              }
                                                              else
                                                              {
                                                                if (*(_QWORD *)(v652 + 272) >> 60 == 15)
                                                                  goto LABEL_878;
                                                                if (v1226 >> 60 != 15)
                                                                {
                                                                  v1828 = *v1225;
                                                                  sub_1AD0040A0(*v1225, *((_QWORD *)v653 + 34));
                                                                  v1829 = *(_QWORD *)(v652 + 264);
                                                                  v1830 = *(_QWORD *)(v652 + 272);
                                                                  *(_QWORD *)(v652 + 264) = v1828;
                                                                  *(_QWORD *)(v652 + 272) = v1226;
                                                                  sub_1AD00412C(v1829, v1830);
LABEL_883:
                                                                  v1229 = *(int *)(v1835 + 24);
                                                                  v1230 = (_QWORD *)(v652 + v1229);
                                                                  v1231 = (char *)v653 + v1229;
                                                                  v1232 = *(_QWORD *)((char *)v653 + v1229 + 8);
                                                                  *v1230 = *(_QWORD *)((char *)v653 + v1229);
                                                                  v1230[1] = v1232;
                                                                  swift_retain();
                                                                  swift_release();
                                                                  v1233 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                                 + 28);
                                                                  v1234 = (char *)v1230 + v1233;
                                                                  v1235 = &v1231[v1233];
                                                                  v1236 = sub_1AD63AF28();
                                                                  v1237 = *(_QWORD *)(v1236 - 8);
                                                                  v1238 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v1237 + 48);
                                                                  v1239 = v1238(v1234, 1, v1236);
                                                                  v1240 = v1238(v1235, 1, v1236);
                                                                  if (v1239)
                                                                  {
                                                                    if (!v1240)
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1237 + 16))(v1234, v1235, v1236);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1237 + 56))(v1234, 0, 1, v1236);
                                                                      goto LABEL_889;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    if (!v1240)
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1237 + 24))(v1234, v1235, v1236);
LABEL_889:
                                                                      v1242 = *(int *)(v1835 + 28);
                                                                      v1243 = (_QWORD *)(v652 + v1242);
                                                                      v1244 = (char *)v653 + v1242;
                                                                      v1245 = *(_QWORD *)&__srcc[v1242 + 8];
                                                                      *v1243 = *(_QWORD *)&__srcc[v1242];
                                                                      v1243[1] = v1245;
                                                                      swift_retain();
                                                                      swift_release();
                                                                      v1246 = *((_QWORD *)v1244 + 3);
                                                                      v538 = v1866;
                                                                      if (v1243[3] == 1)
                                                                      {
                                                                        v13 = v1875;
                                                                        if (v1246 != 1)
                                                                        {
                                                                          v1243[2] = *((_QWORD *)v1244 + 2);
                                                                          v1243[3] = *((_QWORD *)v1244 + 3);
                                                                          swift_bridgeObjectRetain();
                                                                          goto LABEL_474;
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        v13 = v1875;
                                                                        if (v1246 != 1)
                                                                        {
                                                                          v1243[2] = *((_QWORD *)v1244 + 2);
                                                                          v1243[3] = *((_QWORD *)v1244 + 3);
                                                                          swift_bridgeObjectRetain();
                                                                          swift_bridgeObjectRelease();
LABEL_474:
                                                                          v714 = v1870[20];
                                                                          v715 = (uint64_t *)((char *)v1897 + v714);
                                                                          v716 = (_QWORD *)((char *)v538 + v714);
                                                                          v717 = *(_QWORD *)((char *)v538 + v714 + 8);
                                                                          if (*(_QWORD *)((char *)v1897 + v714 + 8) >> 60 == 15)
                                                                          {
                                                                            if (v717 >> 60 != 15)
                                                                            {
                                                                              v718 = *v716;
                                                                              sub_1AD0040A0(*v716, v717);
                                                                              *v715 = v718;
                                                                              v715[1] = v717;
LABEL_481:
                                                                              v12 = v1887;
                                                                              v45 = v1870;
                                                                              *((_BYTE *)v1897 + v1870[21]) = *((_BYTE *)v538 + v1870[21]);
                                                                              *((_BYTE *)v1897 + v1870[22]) = *((_BYTE *)v538 + v1870[22]);
                                                                              *((_BYTE *)v1897 + v1870[23]) = *((_BYTE *)v538 + v1870[23]);
                                                                              v47 = v1848;
                                                                              v46 = v1856;
                                                                              goto LABEL_482;
                                                                            }
                                                                          }
                                                                          else
                                                                          {
                                                                            if (v717 >> 60 != 15)
                                                                            {
                                                                              v719 = *v716;
                                                                              sub_1AD0040A0(*v716, v717);
                                                                              v720 = *v715;
                                                                              v721 = v715[1];
                                                                              *v715 = v719;
                                                                              v715[1] = v717;
                                                                              sub_1AD00412C(v720, v721);
                                                                              goto LABEL_481;
                                                                            }
                                                                            sub_1AD007EC0((uint64_t)v715);
                                                                          }
                                                                          *(_OWORD *)v715 = *(_OWORD *)v716;
                                                                          goto LABEL_481;
                                                                        }
                                                                        sub_1AD009758((uint64_t)(v1243 + 2), &qword_1ED2E3198);
                                                                      }
                                                                      *((_OWORD *)v1243 + 1) = *((_OWORD *)v1244 + 1);
                                                                      goto LABEL_474;
                                                                    }
                                                                    (*(void (**)(char *, uint64_t))(v1237 + 8))(v1234, v1236);
                                                                  }
                                                                  v1241 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                  memcpy(v1234, v1235, *(_QWORD *)(*(_QWORD *)(v1241 - 8) + 64));
                                                                  goto LABEL_889;
                                                                }
                                                                sub_1AD007EC0(v652 + 264);
                                                              }
LABEL_882:
                                                              *(_OWORD *)(v652 + 264) = *(_OWORD *)v1225;
                                                              goto LABEL_883;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if (v1155 >> 60 != 15)
                                                            {
                                                              v1207 = *v1154;
                                                              sub_1AD0040A0(*v1154, *((_QWORD *)v653 + 24));
                                                              v1208 = *(_QWORD *)(v652 + 184);
                                                              v1209 = *(_QWORD *)(v652 + 192);
                                                              *(_QWORD *)(v652 + 184) = v1207;
                                                              *(_QWORD *)(v652 + 192) = v1155;
                                                              sub_1AD00412C(v1208, v1209);
                                                              goto LABEL_858;
                                                            }
                                                            sub_1AD007EC0(v652 + 184);
                                                          }
                                                          *(_OWORD *)(v652 + 184) = *(_OWORD *)v1154;
                                                          goto LABEL_858;
                                                        }
                                                        sub_1AD007EC0(v652 + 152);
                                                      }
LABEL_803:
                                                      *(_OWORD *)(v652 + 152) = *(_OWORD *)v1146;
                                                      goto LABEL_804;
                                                    }
                                                    sub_1AD007EC0(v652 + 120);
                                                  }
                                                  *(_OWORD *)(v652 + 120) = *(_OWORD *)v1139;
                                                  goto LABEL_793;
                                                }
                                                sub_1AD007EC0(v652 + 40);
                                              }
LABEL_751:
                                              *(_OWORD *)(v652 + 40) = *(_OWORD *)v663;
                                              goto LABEL_752;
                                            }
                                            sub_1AD007EC0((uint64_t)v644);
                                          }
                                          *(_OWORD *)v644 = *(_OWORD *)v645;
                                          goto LABEL_427;
                                        }
                                        sub_1AD007EC0((uint64_t)v636);
                                      }
                                      *(_OWORD *)v636 = *(_OWORD *)v637;
                                      goto LABEL_420;
                                    }
                                    sub_1AD007EC0((uint64_t)v628);
                                  }
                                  *(_OWORD *)v628 = *(_OWORD *)v629;
                                  goto LABEL_413;
                                }
                                sub_1AD007EC0((uint64_t)v620);
                              }
                              *(_OWORD *)v620 = *(_OWORD *)v621;
                              goto LABEL_406;
                            }
                            sub_1AD007EC0((uint64_t)v612);
                          }
                          *(_OWORD *)v612 = *(_OWORD *)v613;
                          goto LABEL_399;
                        }
                        sub_1AD009758(v534 + 48, &qword_1ED2E3198);
                      }
                      *(_OWORD *)(v534 + 48) = *((_OWORD *)v535 + 3);
                      goto LABEL_362;
                    }
                    sub_1AD009758(v534 + 16, &qword_1ED2E3198);
                  }
                  *(_OWORD *)(v534 + 16) = *((_OWORD *)v535 + 1);
                  goto LABEL_355;
                }
                (*(void (**)(void *, uint64_t))(v528 + 8))(v525, v527);
              }
              v532 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
              memcpy(v525, v526, *(_QWORD *)(*(_QWORD *)(v532 - 8) + 64));
              goto LABEL_333;
            }
            if (!v448)
            {
              sub_1AD311474(v446);
              *(_OWORD *)v446 = *(_OWORD *)v447;
              v459 = *((_OWORD *)v447 + 4);
              v461 = *((_OWORD *)v447 + 1);
              v460 = *((_OWORD *)v447 + 2);
              *(_OWORD *)(v446 + 48) = *((_OWORD *)v447 + 3);
              *(_OWORD *)(v446 + 64) = v459;
              *(_OWORD *)(v446 + 16) = v461;
              *(_OWORD *)(v446 + 32) = v460;
              v463 = *((_OWORD *)v447 + 6);
              v462 = *((_OWORD *)v447 + 7);
              v464 = *((_OWORD *)v447 + 5);
              *(_QWORD *)(v446 + 128) = *((_QWORD *)v447 + 16);
              *(_OWORD *)(v446 + 96) = v463;
              *(_OWORD *)(v446 + 112) = v462;
              *(_OWORD *)(v446 + 80) = v464;
              goto LABEL_327;
            }
            v449 = *((_QWORD *)v447 + 1);
            *(_QWORD *)v446 = v448;
            *(_QWORD *)(v446 + 8) = v449;
            swift_retain();
            swift_release();
            *(_QWORD *)(v446 + 16) = *((_QWORD *)v447 + 2);
            *(_QWORD *)(v446 + 24) = *((_QWORD *)v447 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v450 = *((_QWORD *)v447 + 5);
            *(_QWORD *)(v446 + 32) = *((_QWORD *)v447 + 4);
            *(_QWORD *)(v446 + 40) = v450;
            swift_retain();
            swift_release();
            *(_QWORD *)(v446 + 48) = *((_QWORD *)v447 + 6);
            *(_QWORD *)(v446 + 56) = *((_QWORD *)v447 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v451 = *((_QWORD *)v447 + 9);
            *(_QWORD *)(v446 + 64) = *((_QWORD *)v447 + 8);
            *(_QWORD *)(v446 + 72) = v451;
            swift_retain();
            swift_release();
            *(_QWORD *)(v446 + 80) = *((_QWORD *)v447 + 10);
            *(_QWORD *)(v446 + 88) = *((_QWORD *)v447 + 11);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v452 = *((_QWORD *)v447 + 13);
            *(_QWORD *)(v446 + 96) = *((_QWORD *)v447 + 12);
            *(_QWORD *)(v446 + 104) = v452;
            swift_retain();
            swift_release();
            v453 = *((_QWORD *)v447 + 15);
            if (*(_QWORD *)(v446 + 120) == 1)
            {
              if (v453 != 1)
              {
                *(_QWORD *)(v446 + 112) = *((_QWORD *)v447 + 14);
                *(_QWORD *)(v446 + 120) = *((_QWORD *)v447 + 15);
                swift_bridgeObjectRetain();
LABEL_326:
                *(_QWORD *)(v446 + 128) = *((_QWORD *)v447 + 16);
                goto LABEL_327;
              }
            }
            else
            {
              if (v453 != 1)
              {
                *(_QWORD *)(v446 + 112) = *((_QWORD *)v447 + 14);
                *(_QWORD *)(v446 + 120) = *((_QWORD *)v447 + 15);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_326;
              }
              sub_1AD009758(v446 + 112, &qword_1ED2E3198);
            }
            *(_OWORD *)(v446 + 112) = *((_OWORD *)v447 + 7);
            goto LABEL_326;
          }
          sub_1AD009758((uint64_t)v99, &qword_1ED2E3198);
        }
        *v99 = *((_OWORD *)v44 + 3);
        v101 = v1897;
        goto LABEL_273;
      }
      sub_1AD009758((uint64_t)(v12 + 2), &qword_1ED2E3198);
    }
    *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
    goto LABEL_38;
  }
  if (v18)
  {
LABEL_21:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2400);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_946;
  }
  v19 = v13[1];
  *v12 = *v13;
  v12[1] = v19;
  v20 = v13[3];
  swift_retain();
  v1917 = a1;
  v1906 = v4;
  if (v20 == 1)
  {
    *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
  }
  else
  {
    v12[2] = v13[2];
    v12[3] = v13[3];
    swift_bridgeObjectRetain();
  }
  v24 = v14[5];
  v25 = (_QWORD *)((char *)v12 + v24);
  v26 = (_QWORD *)((char *)v13 + v24);
  v27 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v28 = *((_QWORD *)v27 - 1);
  v29 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v28 + 48);
  v1896 = v27;
  if (v29(v26, 1, v27))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v1854 = v29;
    v1863 = v28;
    v31 = v26[1];
    *v25 = *v26;
    v25[1] = v31;
    v25[2] = v26[2];
    v25[3] = v26[3];
    v32 = v26[5];
    v25[4] = v26[4];
    v25[5] = v32;
    v33 = v26[7];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v1901 = a3;
    if (v33 == 1)
    {
      *((_OWORD *)v25 + 3) = *((_OWORD *)v26 + 3);
    }
    else
    {
      v25[6] = v26[6];
      v25[7] = v26[7];
      swift_bridgeObjectRetain();
    }
    v1884 = v12;
    v1891 = v14;
    v34 = v1896[6];
    v35 = (char *)v25 + v34;
    v36 = (char *)v26 + v34;
    v37 = *(_QWORD *)((char *)v26 + v34);
    v1869 = v15;
    v1874 = v13;
    if (v37)
    {
      v38 = *((_QWORD *)v36 + 1);
      *(_QWORD *)v35 = v37;
      *((_QWORD *)v35 + 1) = v38;
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
      *((_QWORD *)v35 + 3) = *((_QWORD *)v36 + 3);
      v39 = *((_QWORD *)v36 + 5);
      *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
      *((_QWORD *)v35 + 5) = v39;
      *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
      *((_QWORD *)v35 + 7) = *((_QWORD *)v36 + 7);
      v40 = *((_QWORD *)v36 + 9);
      *((_QWORD *)v35 + 8) = *((_QWORD *)v36 + 8);
      *((_QWORD *)v35 + 9) = v40;
      *((_QWORD *)v35 + 10) = *((_QWORD *)v36 + 10);
      *((_QWORD *)v35 + 11) = *((_QWORD *)v36 + 11);
      v41 = *((_QWORD *)v36 + 13);
      *((_QWORD *)v35 + 12) = *((_QWORD *)v36 + 12);
      *((_QWORD *)v35 + 13) = v41;
      v1845 = *((_QWORD *)v36 + 15);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v1845 == 1)
      {
        *((_OWORD *)v35 + 7) = *((_OWORD *)v36 + 7);
      }
      else
      {
        *((_QWORD *)v35 + 14) = *((_QWORD *)v36 + 14);
        *((_QWORD *)v35 + 15) = *((_QWORD *)v36 + 15);
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v35 + 16) = *((_QWORD *)v36 + 16);
    }
    else
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      v52 = *((_OWORD *)v36 + 1);
      v53 = *((_OWORD *)v36 + 2);
      v54 = *((_OWORD *)v36 + 4);
      *((_OWORD *)v35 + 3) = *((_OWORD *)v36 + 3);
      *((_OWORD *)v35 + 4) = v54;
      *((_OWORD *)v35 + 1) = v52;
      *((_OWORD *)v35 + 2) = v53;
      v55 = *((_OWORD *)v36 + 5);
      v56 = *((_OWORD *)v36 + 6);
      v57 = *((_OWORD *)v36 + 7);
      *((_QWORD *)v35 + 16) = *((_QWORD *)v36 + 16);
      *((_OWORD *)v35 + 6) = v56;
      *((_OWORD *)v35 + 7) = v57;
      *((_OWORD *)v35 + 5) = v55;
    }
    v61 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v62 = v61[5];
    v63 = &v35[v62];
    v64 = &v36[v62];
    v65 = sub_1AD63AE2C();
    v66 = *(_QWORD *)(v65 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
    }
    v68 = v61[6];
    v69 = &v35[v68];
    v70 = &v36[v68];
    v71 = *(_QWORD *)&v36[v68];
    if (v71)
    {
      v72 = *((_QWORD *)v70 + 1);
      *(_QWORD *)v69 = v71;
      *((_QWORD *)v69 + 1) = v72;
      v73 = *((_QWORD *)v70 + 3);
      swift_retain();
      if (v73 == 1)
      {
        *((_OWORD *)v69 + 1) = *((_OWORD *)v70 + 1);
      }
      else
      {
        *((_QWORD *)v69 + 2) = *((_QWORD *)v70 + 2);
        *((_QWORD *)v69 + 3) = *((_QWORD *)v70 + 3);
        swift_bridgeObjectRetain();
      }
      v84 = *((_QWORD *)v70 + 5);
      *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
      *((_QWORD *)v69 + 5) = v84;
      v85 = *((_QWORD *)v70 + 7);
      swift_retain();
      if (v85 == 1)
      {
        *((_OWORD *)v69 + 3) = *((_OWORD *)v70 + 3);
      }
      else
      {
        *((_QWORD *)v69 + 6) = *((_QWORD *)v70 + 6);
        *((_QWORD *)v69 + 7) = *((_QWORD *)v70 + 7);
        swift_bridgeObjectRetain();
      }
      v86 = *((_QWORD *)v70 + 8);
      if (v86)
      {
        v87 = *((_QWORD *)v70 + 9);
        *((_QWORD *)v69 + 8) = v86;
        *((_QWORD *)v69 + 9) = v87;
        *((_QWORD *)v69 + 10) = *((_QWORD *)v70 + 10);
        *((_QWORD *)v69 + 11) = *((_QWORD *)v70 + 11);
        v88 = *((_QWORD *)v70 + 13);
        *((_QWORD *)v69 + 12) = *((_QWORD *)v70 + 12);
        *((_QWORD *)v69 + 13) = v88;
        *((_QWORD *)v69 + 14) = *((_QWORD *)v70 + 14);
        *((_QWORD *)v69 + 15) = *((_QWORD *)v70 + 15);
        v89 = *((_QWORD *)v70 + 17);
        *((_QWORD *)v69 + 16) = *((_QWORD *)v70 + 16);
        *((_QWORD *)v69 + 17) = v89;
        *((_QWORD *)v69 + 18) = *((_QWORD *)v70 + 18);
        *((_QWORD *)v69 + 19) = *((_QWORD *)v70 + 19);
        v90 = *((_QWORD *)v70 + 21);
        *((_QWORD *)v69 + 20) = *((_QWORD *)v70 + 20);
        *((_QWORD *)v69 + 21) = v90;
        v1847 = *((_QWORD *)v70 + 23);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v1847 == 1)
        {
          *((_OWORD *)v69 + 11) = *((_OWORD *)v70 + 11);
        }
        else
        {
          *((_QWORD *)v69 + 22) = *((_QWORD *)v70 + 22);
          *((_QWORD *)v69 + 23) = *((_QWORD *)v70 + 23);
          swift_bridgeObjectRetain();
        }
        *((_QWORD *)v69 + 24) = *((_QWORD *)v70 + 24);
      }
      else
      {
        *((_OWORD *)v69 + 4) = *((_OWORD *)v70 + 4);
        v91 = *((_OWORD *)v70 + 5);
        v92 = *((_OWORD *)v70 + 6);
        v93 = *((_OWORD *)v70 + 8);
        *((_OWORD *)v69 + 7) = *((_OWORD *)v70 + 7);
        *((_OWORD *)v69 + 8) = v93;
        *((_OWORD *)v69 + 5) = v91;
        *((_OWORD *)v69 + 6) = v92;
        v94 = *((_OWORD *)v70 + 9);
        v95 = *((_OWORD *)v70 + 10);
        v96 = *((_OWORD *)v70 + 11);
        *((_QWORD *)v69 + 24) = *((_QWORD *)v70 + 24);
        *((_OWORD *)v69 + 10) = v95;
        *((_OWORD *)v69 + 11) = v96;
        *((_OWORD *)v69 + 9) = v94;
      }
      v69[200] = v70[200];
      v102 = (uint64_t *)(v70 + 208);
      v103 = *((_QWORD *)v70 + 27);
      if (v103 >> 60 == 15)
      {
        *((_OWORD *)v69 + 13) = *(_OWORD *)v102;
      }
      else
      {
        v104 = *v102;
        sub_1AD0040A0(*v102, v103);
        *((_QWORD *)v69 + 26) = v104;
        *((_QWORD *)v69 + 27) = v103;
      }
    }
    else
    {
      v74 = *((_OWORD *)v70 + 1);
      *(_OWORD *)v69 = *(_OWORD *)v70;
      *((_OWORD *)v69 + 1) = v74;
      v75 = *((_OWORD *)v70 + 2);
      v76 = *((_OWORD *)v70 + 3);
      v77 = *((_OWORD *)v70 + 5);
      *((_OWORD *)v69 + 4) = *((_OWORD *)v70 + 4);
      *((_OWORD *)v69 + 5) = v77;
      *((_OWORD *)v69 + 2) = v75;
      *((_OWORD *)v69 + 3) = v76;
      v78 = *((_OWORD *)v70 + 6);
      v79 = *((_OWORD *)v70 + 7);
      v80 = *((_OWORD *)v70 + 9);
      *((_OWORD *)v69 + 8) = *((_OWORD *)v70 + 8);
      *((_OWORD *)v69 + 9) = v80;
      *((_OWORD *)v69 + 6) = v78;
      *((_OWORD *)v69 + 7) = v79;
      v81 = *((_OWORD *)v70 + 10);
      v82 = *((_OWORD *)v70 + 11);
      v83 = *((_OWORD *)v70 + 13);
      *((_OWORD *)v69 + 12) = *((_OWORD *)v70 + 12);
      *((_OWORD *)v69 + 13) = v83;
      *((_OWORD *)v69 + 10) = v81;
      *((_OWORD *)v69 + 11) = v82;
    }
    *(_QWORD *)&v35[v61[7]] = *(_QWORD *)&v36[v61[7]];
    v105 = v61[8];
    v106 = &v35[v105];
    v107 = &v36[v105];
    v108 = *(_QWORD *)&v36[v105 + 8];
    swift_bridgeObjectRetain();
    if (v108 >> 60 == 15)
    {
      *(_OWORD *)v106 = *(_OWORD *)v107;
    }
    else
    {
      v109 = *(_QWORD *)v107;
      sub_1AD0040A0(v109, v108);
      *(_QWORD *)v106 = v109;
      *((_QWORD *)v106 + 1) = v108;
    }
    v110 = v61[9];
    v111 = &v35[v110];
    v112 = &v36[v110];
    v113 = *((_QWORD *)v112 + 1);
    if (v113 >> 60 == 15)
    {
      *(_OWORD *)v111 = *(_OWORD *)v112;
    }
    else
    {
      v114 = *(_QWORD *)v112;
      sub_1AD0040A0(*(_QWORD *)v112, *((_QWORD *)v112 + 1));
      *(_QWORD *)v111 = v114;
      *((_QWORD *)v111 + 1) = v113;
    }
    v35[v61[10]] = v36[v61[10]];
    v35[v61[11]] = v36[v61[11]];
    v115 = v61[12];
    v116 = &v35[v115];
    v117 = &v36[v115];
    v118 = *((_QWORD *)v117 + 1);
    if (v118 >> 60 == 15)
    {
      *(_OWORD *)v116 = *(_OWORD *)v117;
    }
    else
    {
      v119 = *(_QWORD *)v117;
      sub_1AD0040A0(*(_QWORD *)v117, *((_QWORD *)v117 + 1));
      *(_QWORD *)v116 = v119;
      *((_QWORD *)v116 + 1) = v118;
    }
    v27 = v1896;
    *(_QWORD *)&v35[v61[13]] = *(_QWORD *)&v36[v61[13]];
    *((_BYTE *)v25 + v1896[7]) = *((_BYTE *)v26 + v1896[7]);
    *((_BYTE *)v25 + v1896[8]) = *((_BYTE *)v26 + v1896[8]);
    *((_BYTE *)v25 + v1896[9]) = *((_BYTE *)v26 + v1896[9]);
    *((_BYTE *)v25 + v1896[10]) = *((_BYTE *)v26 + v1896[10]);
    *((_BYTE *)v25 + v1896[11]) = *((_BYTE *)v26 + v1896[11]);
    *((_BYTE *)v25 + v1896[12]) = *((_BYTE *)v26 + v1896[12]);
    *((_BYTE *)v25 + v1896[13]) = *((_BYTE *)v26 + v1896[13]);
    *((_BYTE *)v25 + v1896[14]) = *((_BYTE *)v26 + v1896[14]);
    v120 = v1896[15];
    v121 = (char *)v25 + v120;
    v122 = (char *)v26 + v120;
    v123 = *((_QWORD *)v122 + 1);
    v12 = v1884;
    if (v123 >> 60 == 15)
    {
      *(_OWORD *)v121 = *(_OWORD *)v122;
    }
    else
    {
      v124 = *(_QWORD *)v122;
      sub_1AD0040A0(*(_QWORD *)v122, *((_QWORD *)v122 + 1));
      *(_QWORD *)v121 = v124;
      *((_QWORD *)v121 + 1) = v123;
      v27 = v1896;
    }
    a3 = v1901;
    v15 = v1869;
    v125 = v27[16];
    v126 = (char *)v25 + v125;
    v127 = (char *)v26 + v125;
    v128 = *((_QWORD *)v127 + 1);
    if (v128 >> 60 == 15)
    {
      *(_OWORD *)v126 = *(_OWORD *)v127;
    }
    else
    {
      v129 = *(_QWORD *)v127;
      sub_1AD0040A0(*(_QWORD *)v127, *((_QWORD *)v127 + 1));
      *(_QWORD *)v126 = v129;
      *((_QWORD *)v126 + 1) = v128;
      v27 = v1896;
    }
    *((_BYTE *)v25 + v27[17]) = *((_BYTE *)v26 + v27[17]);
    *((_BYTE *)v25 + v27[18]) = *((_BYTE *)v26 + v27[18]);
    v130 = v27[19];
    v131 = (_DWORD *)((char *)v25 + v130);
    v132 = (_DWORD *)((char *)v26 + v130);
    v133 = type metadata accessor for CloudKitSharingToken();
    v134 = *(unsigned int (***)(_DWORD *, uint64_t, uint64_t))(v133 - 8);
    if (v134[6](v132, 1, v133))
    {
      v135 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
      v14 = v1891;
    }
    else
    {
      __src = v134;
      *v131 = *v132;
      *((_QWORD *)v131 + 1) = *((_QWORD *)v132 + 1);
      *((_QWORD *)v131 + 2) = *((_QWORD *)v132 + 2);
      v136 = *((_QWORD *)v132 + 4);
      *((_QWORD *)v131 + 3) = *((_QWORD *)v132 + 3);
      *((_QWORD *)v131 + 4) = v136;
      v137 = (uint64_t *)(v132 + 10);
      v138 = *((_QWORD *)v132 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v138 >> 60 == 11 || v138 >> 60 == 15)
      {
        *(_OWORD *)(v131 + 10) = *(_OWORD *)v137;
      }
      else
      {
        v187 = *v137;
        sub_1AD0040A0(*v137, v138);
        *((_QWORD *)v131 + 5) = v187;
        *((_QWORD *)v131 + 6) = v138;
      }
      a3 = v1901;
      if (*((_QWORD *)v132 + 9))
      {
        v131[14] = v132[14];
        v188 = v132[15];
        *((_BYTE *)v131 + 64) = *((_BYTE *)v132 + 64);
        v131[15] = v188;
        v189 = *((_QWORD *)v132 + 10);
        *((_QWORD *)v131 + 9) = *((_QWORD *)v132 + 9);
        *((_QWORD *)v131 + 10) = v189;
        v190 = v132 + 22;
        v191 = *((_QWORD *)v132 + 12);
        swift_retain();
        if (v191 >> 60 == 15)
        {
          *(_OWORD *)(v131 + 22) = *v190;
        }
        else
        {
          v194 = *(_QWORD *)v190;
          sub_1AD0040A0(v194, v191);
          *((_QWORD *)v131 + 11) = v194;
          *((_QWORD *)v131 + 12) = v191;
        }
      }
      else
      {
        v192 = *(_OWORD *)(v132 + 14);
        v193 = *(_OWORD *)(v132 + 22);
        *(_OWORD *)(v131 + 18) = *(_OWORD *)(v132 + 18);
        *(_OWORD *)(v131 + 22) = v193;
        *(_OWORD *)(v131 + 14) = v192;
      }
      v195 = *((_QWORD *)v132 + 14);
      *((_QWORD *)v131 + 13) = *((_QWORD *)v132 + 13);
      *((_QWORD *)v131 + 14) = v195;
      v196 = v132 + 30;
      v197 = *((_QWORD *)v132 + 16);
      swift_retain();
      if (v197 >> 60 == 15)
      {
        *(_OWORD *)(v131 + 30) = *v196;
      }
      else
      {
        v198 = *(_QWORD *)v196;
        sub_1AD0040A0(v198, v197);
        *((_QWORD *)v131 + 15) = v198;
        *((_QWORD *)v131 + 16) = v197;
      }
      v199 = *((_QWORD *)v132 + 18);
      *((_QWORD *)v131 + 17) = *((_QWORD *)v132 + 17);
      *((_QWORD *)v131 + 18) = v199;
      v200 = (uint64_t *)(v132 + 38);
      v201 = *((_QWORD *)v132 + 20);
      swift_retain();
      if (v201 >> 60 == 11 || v201 >> 60 == 15)
      {
        *(_OWORD *)(v131 + 38) = *(_OWORD *)v200;
      }
      else
      {
        v202 = *v200;
        sub_1AD0040A0(*v200, v201);
        *((_QWORD *)v131 + 19) = v202;
        *((_QWORD *)v131 + 20) = v201;
      }
      v203 = *((_QWORD *)v132 + 21);
      if (v203)
      {
        v204 = *((_QWORD *)v132 + 22);
        *((_QWORD *)v131 + 21) = v203;
        *((_QWORD *)v131 + 22) = v204;
        v205 = v132 + 46;
        v206 = *((_QWORD *)v132 + 24);
        swift_retain();
        if (v206 >> 60 == 15)
        {
          *(_OWORD *)(v131 + 46) = *v205;
        }
        else
        {
          v210 = *(_QWORD *)v205;
          sub_1AD0040A0(v210, v206);
          *((_QWORD *)v131 + 23) = v210;
          *((_QWORD *)v131 + 24) = v206;
        }
        v131[50] = v132[50];
        v211 = *((_QWORD *)v132 + 27);
        *((_QWORD *)v131 + 26) = *((_QWORD *)v132 + 26);
        *((_QWORD *)v131 + 27) = v211;
        v212 = v132 + 56;
        v213 = *((_QWORD *)v132 + 29);
        swift_retain();
        if (v213 >> 60 == 15)
        {
          *((_OWORD *)v131 + 14) = *v212;
        }
        else
        {
          v214 = *(_QWORD *)v212;
          sub_1AD0040A0(v214, v213);
          *((_QWORD *)v131 + 28) = v214;
          *((_QWORD *)v131 + 29) = v213;
        }
      }
      else
      {
        *(_OWORD *)(v131 + 42) = *(_OWORD *)(v132 + 42);
        v207 = *(_OWORD *)(v132 + 46);
        v208 = *(_OWORD *)(v132 + 50);
        v209 = *(_OWORD *)(v132 + 54);
        *((_QWORD *)v131 + 29) = *((_QWORD *)v132 + 29);
        *(_OWORD *)(v131 + 50) = v208;
        *(_OWORD *)(v131 + 54) = v209;
        *(_OWORD *)(v131 + 46) = v207;
      }
      *((_QWORD *)v131 + 30) = *((_QWORD *)v132 + 30);
      v215 = *((_QWORD *)v132 + 32);
      *((_QWORD *)v131 + 31) = *((_QWORD *)v132 + 31);
      *((_QWORD *)v131 + 32) = v215;
      v216 = (uint64_t *)(v132 + 66);
      v217 = *((_QWORD *)v132 + 34);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v217 >> 60 == 11 || v217 >> 60 == 15)
      {
        *(_OWORD *)(v131 + 66) = *(_OWORD *)v216;
      }
      else
      {
        v218 = *v216;
        sub_1AD0040A0(*v216, v217);
        *((_QWORD *)v131 + 33) = v218;
        *((_QWORD *)v131 + 34) = v217;
      }
      v219 = *(int *)(v133 + 24);
      v220 = (_QWORD *)((char *)v131 + v219);
      v221 = (char *)v132 + v219;
      v222 = *(_QWORD *)((char *)v132 + v219 + 8);
      *v220 = *(_QWORD *)((char *)v132 + v219);
      v220[1] = v222;
      swift_retain();
      v223 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v224 = (char *)v220 + v223;
      v225 = &v221[v223];
      v226 = sub_1AD63AF28();
      v227 = *(_QWORD *)(v226 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v227 + 48))(v225, 1, v226))
      {
        v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v227 + 16))(v224, v225, v226);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v227 + 56))(v224, 0, 1, v226);
      }
      v15 = v1869;
      v229 = *(int *)(v133 + 28);
      v230 = (char *)v131 + v229;
      v231 = (char *)v132 + v229;
      v232 = *(_QWORD *)((char *)v132 + v229 + 8);
      *(_QWORD *)v230 = *(_QWORD *)((char *)v132 + v229);
      *((_QWORD *)v230 + 1) = v232;
      v233 = *(_QWORD *)((char *)v132 + v229 + 24);
      swift_retain();
      if (v233 == 1)
      {
        *((_OWORD *)v230 + 1) = *((_OWORD *)v231 + 1);
      }
      else
      {
        *((_QWORD *)v230 + 2) = *((_QWORD *)v231 + 2);
        *((_QWORD *)v230 + 3) = *((_QWORD *)v231 + 3);
        swift_bridgeObjectRetain();
      }
      v14 = v1891;
      (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__src + 7))(v131, 0, 1, v133);
      v12 = v1884;
      v27 = v1896;
    }
    v234 = v27[20];
    v235 = (char *)v25 + v234;
    v236 = (char *)v26 + v234;
    v237 = *((_QWORD *)v236 + 1);
    v13 = v1874;
    if (v237 >> 60 == 15)
    {
      *(_OWORD *)v235 = *(_OWORD *)v236;
    }
    else
    {
      v238 = *(_QWORD *)v236;
      sub_1AD0040A0(*(_QWORD *)v236, *((_QWORD *)v236 + 1));
      *(_QWORD *)v235 = v238;
      *((_QWORD *)v235 + 1) = v237;
      v27 = v1896;
    }
    v29 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1854;
    v28 = v1863;
    *((_BYTE *)v25 + v27[21]) = *((_BYTE *)v26 + v27[21]);
    *((_BYTE *)v25 + v27[22]) = *((_BYTE *)v26 + v27[22]);
    *((_BYTE *)v25 + v27[23]) = *((_BYTE *)v26 + v27[23]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v1863 + 56))(v25, 0, 1, v27);
  }
  v239 = v14[6];
  v240 = (_QWORD *)((char *)v12 + v239);
  v241 = (_QWORD *)((char *)v13 + v239);
  if (v29((char *)v13 + v239, 1, v27))
  {
    v242 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v240, v241, *(_QWORD *)(*(_QWORD *)(v242 - 8) + 64));
  }
  else
  {
    v1865 = v28;
    v243 = v241[1];
    *v240 = *v241;
    v240[1] = v243;
    v240[2] = v241[2];
    v240[3] = v241[3];
    v244 = v241[5];
    v240[4] = v241[4];
    v240[5] = v244;
    v245 = v241[7];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v1877 = v13;
    if (v245 == 1)
    {
      *((_OWORD *)v240 + 3) = *((_OWORD *)v241 + 3);
    }
    else
    {
      v240[6] = v241[6];
      v240[7] = v241[7];
      swift_bridgeObjectRetain();
    }
    v1871 = v15;
    v1886 = v12;
    v1893 = v14;
    v246 = v1896[6];
    v247 = (char *)v240 + v246;
    v248 = (char *)v241 + v246;
    v249 = *(_QWORD *)((char *)v241 + v246);
    v1903 = a3;
    if (v249)
    {
      v250 = *((_QWORD *)v248 + 1);
      *(_QWORD *)v247 = v249;
      *((_QWORD *)v247 + 1) = v250;
      *((_QWORD *)v247 + 2) = *((_QWORD *)v248 + 2);
      *((_QWORD *)v247 + 3) = *((_QWORD *)v248 + 3);
      v251 = *((_QWORD *)v248 + 5);
      *((_QWORD *)v247 + 4) = *((_QWORD *)v248 + 4);
      *((_QWORD *)v247 + 5) = v251;
      *((_QWORD *)v247 + 6) = *((_QWORD *)v248 + 6);
      *((_QWORD *)v247 + 7) = *((_QWORD *)v248 + 7);
      v252 = *((_QWORD *)v248 + 9);
      *((_QWORD *)v247 + 8) = *((_QWORD *)v248 + 8);
      *((_QWORD *)v247 + 9) = v252;
      *((_QWORD *)v247 + 10) = *((_QWORD *)v248 + 10);
      *((_QWORD *)v247 + 11) = *((_QWORD *)v248 + 11);
      v253 = *((_QWORD *)v248 + 13);
      *((_QWORD *)v247 + 12) = *((_QWORD *)v248 + 12);
      *((_QWORD *)v247 + 13) = v253;
      v1857 = (void *)*((_QWORD *)v248 + 15);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v1857 == (void *)1)
      {
        *((_OWORD *)v247 + 7) = *((_OWORD *)v248 + 7);
      }
      else
      {
        *((_QWORD *)v247 + 14) = *((_QWORD *)v248 + 14);
        *((_QWORD *)v247 + 15) = *((_QWORD *)v248 + 15);
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v247 + 16) = *((_QWORD *)v248 + 16);
      a3 = v1903;
    }
    else
    {
      *(_OWORD *)v247 = *(_OWORD *)v248;
      v254 = *((_OWORD *)v248 + 1);
      v255 = *((_OWORD *)v248 + 2);
      v256 = *((_OWORD *)v248 + 4);
      *((_OWORD *)v247 + 3) = *((_OWORD *)v248 + 3);
      *((_OWORD *)v247 + 4) = v256;
      *((_OWORD *)v247 + 1) = v254;
      *((_OWORD *)v247 + 2) = v255;
      v257 = *((_OWORD *)v248 + 5);
      v258 = *((_OWORD *)v248 + 6);
      v259 = *((_OWORD *)v248 + 7);
      *((_QWORD *)v247 + 16) = *((_QWORD *)v248 + 16);
      *((_OWORD *)v247 + 6) = v258;
      *((_OWORD *)v247 + 7) = v259;
      *((_OWORD *)v247 + 5) = v257;
    }
    v260 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v261 = v260[5];
    v262 = &v247[v261];
    v263 = &v248[v261];
    v264 = sub_1AD63AE2C();
    v265 = *(_QWORD *)(v264 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48))(v263, 1, v264))
    {
      v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v265 + 16))(v262, v263, v264);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v265 + 56))(v262, 0, 1, v264);
    }
    v267 = v260[6];
    v268 = &v247[v267];
    v269 = &v248[v267];
    v270 = *(_QWORD *)&v248[v267];
    if (v270)
    {
      v271 = *((_QWORD *)v269 + 1);
      *(_QWORD *)v268 = v270;
      *((_QWORD *)v268 + 1) = v271;
      v272 = *((_QWORD *)v269 + 3);
      swift_retain();
      if (v272 == 1)
      {
        *((_OWORD *)v268 + 1) = *((_OWORD *)v269 + 1);
      }
      else
      {
        *((_QWORD *)v268 + 2) = *((_QWORD *)v269 + 2);
        *((_QWORD *)v268 + 3) = *((_QWORD *)v269 + 3);
        swift_bridgeObjectRetain();
      }
      v283 = *((_QWORD *)v269 + 5);
      *((_QWORD *)v268 + 4) = *((_QWORD *)v269 + 4);
      *((_QWORD *)v268 + 5) = v283;
      v284 = *((_QWORD *)v269 + 7);
      swift_retain();
      if (v284 == 1)
      {
        *((_OWORD *)v268 + 3) = *((_OWORD *)v269 + 3);
      }
      else
      {
        *((_QWORD *)v268 + 6) = *((_QWORD *)v269 + 6);
        *((_QWORD *)v268 + 7) = *((_QWORD *)v269 + 7);
        swift_bridgeObjectRetain();
      }
      v285 = *((_QWORD *)v269 + 8);
      if (v285)
      {
        v286 = *((_QWORD *)v269 + 9);
        *((_QWORD *)v268 + 8) = v285;
        *((_QWORD *)v268 + 9) = v286;
        *((_QWORD *)v268 + 10) = *((_QWORD *)v269 + 10);
        *((_QWORD *)v268 + 11) = *((_QWORD *)v269 + 11);
        v287 = *((_QWORD *)v269 + 13);
        *((_QWORD *)v268 + 12) = *((_QWORD *)v269 + 12);
        *((_QWORD *)v268 + 13) = v287;
        *((_QWORD *)v268 + 14) = *((_QWORD *)v269 + 14);
        *((_QWORD *)v268 + 15) = *((_QWORD *)v269 + 15);
        v288 = *((_QWORD *)v269 + 17);
        *((_QWORD *)v268 + 16) = *((_QWORD *)v269 + 16);
        *((_QWORD *)v268 + 17) = v288;
        *((_QWORD *)v268 + 18) = *((_QWORD *)v269 + 18);
        *((_QWORD *)v268 + 19) = *((_QWORD *)v269 + 19);
        v289 = *((_QWORD *)v269 + 21);
        *((_QWORD *)v268 + 20) = *((_QWORD *)v269 + 20);
        *((_QWORD *)v268 + 21) = v289;
        v1858 = (void *)*((_QWORD *)v269 + 23);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v1858 == (void *)1)
        {
          *((_OWORD *)v268 + 11) = *((_OWORD *)v269 + 11);
        }
        else
        {
          *((_QWORD *)v268 + 22) = *((_QWORD *)v269 + 22);
          *((_QWORD *)v268 + 23) = *((_QWORD *)v269 + 23);
          swift_bridgeObjectRetain();
        }
        a3 = v1903;
        *((_QWORD *)v268 + 24) = *((_QWORD *)v269 + 24);
      }
      else
      {
        *((_OWORD *)v268 + 4) = *((_OWORD *)v269 + 4);
        v290 = *((_OWORD *)v269 + 5);
        v291 = *((_OWORD *)v269 + 6);
        v292 = *((_OWORD *)v269 + 8);
        *((_OWORD *)v268 + 7) = *((_OWORD *)v269 + 7);
        *((_OWORD *)v268 + 8) = v292;
        *((_OWORD *)v268 + 5) = v290;
        *((_OWORD *)v268 + 6) = v291;
        v293 = *((_OWORD *)v269 + 9);
        v294 = *((_OWORD *)v269 + 10);
        v295 = *((_OWORD *)v269 + 11);
        *((_QWORD *)v268 + 24) = *((_QWORD *)v269 + 24);
        *((_OWORD *)v268 + 10) = v294;
        *((_OWORD *)v268 + 11) = v295;
        *((_OWORD *)v268 + 9) = v293;
      }
      v268[200] = v269[200];
      v296 = (uint64_t *)(v269 + 208);
      v297 = *((_QWORD *)v269 + 27);
      if (v297 >> 60 == 15)
      {
        *((_OWORD *)v268 + 13) = *(_OWORD *)v296;
      }
      else
      {
        v298 = *v296;
        sub_1AD0040A0(*v296, v297);
        *((_QWORD *)v268 + 26) = v298;
        *((_QWORD *)v268 + 27) = v297;
      }
    }
    else
    {
      v273 = *((_OWORD *)v269 + 1);
      *(_OWORD *)v268 = *(_OWORD *)v269;
      *((_OWORD *)v268 + 1) = v273;
      v274 = *((_OWORD *)v269 + 2);
      v275 = *((_OWORD *)v269 + 3);
      v276 = *((_OWORD *)v269 + 5);
      *((_OWORD *)v268 + 4) = *((_OWORD *)v269 + 4);
      *((_OWORD *)v268 + 5) = v276;
      *((_OWORD *)v268 + 2) = v274;
      *((_OWORD *)v268 + 3) = v275;
      v277 = *((_OWORD *)v269 + 6);
      v278 = *((_OWORD *)v269 + 7);
      v279 = *((_OWORD *)v269 + 9);
      *((_OWORD *)v268 + 8) = *((_OWORD *)v269 + 8);
      *((_OWORD *)v268 + 9) = v279;
      *((_OWORD *)v268 + 6) = v277;
      *((_OWORD *)v268 + 7) = v278;
      v280 = *((_OWORD *)v269 + 10);
      v281 = *((_OWORD *)v269 + 11);
      v282 = *((_OWORD *)v269 + 13);
      *((_OWORD *)v268 + 12) = *((_OWORD *)v269 + 12);
      *((_OWORD *)v268 + 13) = v282;
      *((_OWORD *)v268 + 10) = v280;
      *((_OWORD *)v268 + 11) = v281;
    }
    *(_QWORD *)&v247[v260[7]] = *(_QWORD *)&v248[v260[7]];
    v299 = v260[8];
    v300 = &v247[v299];
    v301 = &v248[v299];
    v302 = *(_QWORD *)&v248[v299 + 8];
    swift_bridgeObjectRetain();
    if (v302 >> 60 == 15)
    {
      *(_OWORD *)v300 = *(_OWORD *)v301;
    }
    else
    {
      v303 = *(_QWORD *)v301;
      sub_1AD0040A0(v303, v302);
      *(_QWORD *)v300 = v303;
      *((_QWORD *)v300 + 1) = v302;
    }
    v304 = v260[9];
    v305 = &v247[v304];
    v306 = &v248[v304];
    v307 = *((_QWORD *)v306 + 1);
    if (v307 >> 60 == 15)
    {
      *(_OWORD *)v305 = *(_OWORD *)v306;
    }
    else
    {
      v308 = *(_QWORD *)v306;
      sub_1AD0040A0(*(_QWORD *)v306, *((_QWORD *)v306 + 1));
      *(_QWORD *)v305 = v308;
      *((_QWORD *)v305 + 1) = v307;
    }
    v247[v260[10]] = v248[v260[10]];
    v247[v260[11]] = v248[v260[11]];
    v309 = v260[12];
    v310 = &v247[v309];
    v311 = &v248[v309];
    v312 = *((_QWORD *)v311 + 1);
    if (v312 >> 60 == 15)
    {
      *(_OWORD *)v310 = *(_OWORD *)v311;
    }
    else
    {
      v313 = *(_QWORD *)v311;
      sub_1AD0040A0(*(_QWORD *)v311, *((_QWORD *)v311 + 1));
      *(_QWORD *)v310 = v313;
      *((_QWORD *)v310 + 1) = v312;
    }
    v314 = v1896;
    *(_QWORD *)&v247[v260[13]] = *(_QWORD *)&v248[v260[13]];
    *((_BYTE *)v240 + v1896[7]) = *((_BYTE *)v241 + v1896[7]);
    *((_BYTE *)v240 + v1896[8]) = *((_BYTE *)v241 + v1896[8]);
    *((_BYTE *)v240 + v1896[9]) = *((_BYTE *)v241 + v1896[9]);
    *((_BYTE *)v240 + v1896[10]) = *((_BYTE *)v241 + v1896[10]);
    *((_BYTE *)v240 + v1896[11]) = *((_BYTE *)v241 + v1896[11]);
    *((_BYTE *)v240 + v1896[12]) = *((_BYTE *)v241 + v1896[12]);
    *((_BYTE *)v240 + v1896[13]) = *((_BYTE *)v241 + v1896[13]);
    *((_BYTE *)v240 + v1896[14]) = *((_BYTE *)v241 + v1896[14]);
    v315 = v1896[15];
    v316 = (char *)v240 + v315;
    v317 = (char *)v241 + v315;
    v318 = *((_QWORD *)v317 + 1);
    v12 = v1886;
    if (v318 >> 60 == 15)
    {
      *(_OWORD *)v316 = *(_OWORD *)v317;
    }
    else
    {
      v319 = *(_QWORD *)v317;
      sub_1AD0040A0(*(_QWORD *)v317, *((_QWORD *)v317 + 1));
      *(_QWORD *)v316 = v319;
      *((_QWORD *)v316 + 1) = v318;
      v314 = v1896;
    }
    v15 = v1871;
    v320 = v314[16];
    v321 = (char *)v240 + v320;
    v322 = (char *)v241 + v320;
    v323 = *((_QWORD *)v322 + 1);
    if (v323 >> 60 == 15)
    {
      *(_OWORD *)v321 = *(_OWORD *)v322;
    }
    else
    {
      v324 = *(_QWORD *)v322;
      sub_1AD0040A0(*(_QWORD *)v322, *((_QWORD *)v322 + 1));
      *(_QWORD *)v321 = v324;
      *((_QWORD *)v321 + 1) = v323;
      v314 = v1896;
    }
    *((_BYTE *)v240 + v314[17]) = *((_BYTE *)v241 + v314[17]);
    *((_BYTE *)v240 + v314[18]) = *((_BYTE *)v241 + v314[18]);
    v325 = v314[19];
    v326 = (_DWORD *)((char *)v240 + v325);
    v327 = (_DWORD *)((char *)v241 + v325);
    v328 = type metadata accessor for CloudKitSharingToken();
    v329 = *(_QWORD *)(v328 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v329 + 48))(v327, 1, v328))
    {
      v330 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      memcpy(v326, v327, *(_QWORD *)(*(_QWORD *)(v330 - 8) + 64));
      v14 = v1893;
    }
    else
    {
      v1849 = v329;
      v1859 = (int *)v328;
      v331 = a3;
      *v326 = *v327;
      *((_QWORD *)v326 + 1) = *((_QWORD *)v327 + 1);
      *((_QWORD *)v326 + 2) = *((_QWORD *)v327 + 2);
      v332 = *((_QWORD *)v327 + 4);
      *((_QWORD *)v326 + 3) = *((_QWORD *)v327 + 3);
      *((_QWORD *)v326 + 4) = v332;
      v333 = (uint64_t *)(v327 + 10);
      v334 = *((_QWORD *)v327 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v334 >> 60 == 11 || v334 >> 60 == 15)
      {
        *(_OWORD *)(v326 + 10) = *(_OWORD *)v333;
      }
      else
      {
        v335 = *v333;
        sub_1AD0040A0(*v333, v334);
        *((_QWORD *)v326 + 5) = v335;
        *((_QWORD *)v326 + 6) = v334;
      }
      a3 = v331;
      if (*((_QWORD *)v327 + 9))
      {
        v326[14] = v327[14];
        v336 = v327[15];
        *((_BYTE *)v326 + 64) = *((_BYTE *)v327 + 64);
        v326[15] = v336;
        v337 = *((_QWORD *)v327 + 10);
        *((_QWORD *)v326 + 9) = *((_QWORD *)v327 + 9);
        *((_QWORD *)v326 + 10) = v337;
        v338 = v327 + 22;
        v339 = *((_QWORD *)v327 + 12);
        swift_retain();
        v340 = v1859;
        if (v339 >> 60 == 15)
        {
          *(_OWORD *)(v326 + 22) = *v338;
        }
        else
        {
          v343 = *(_QWORD *)v338;
          sub_1AD0040A0(v343, v339);
          *((_QWORD *)v326 + 11) = v343;
          *((_QWORD *)v326 + 12) = v339;
        }
      }
      else
      {
        v341 = *(_OWORD *)(v327 + 14);
        v342 = *(_OWORD *)(v327 + 22);
        *(_OWORD *)(v326 + 18) = *(_OWORD *)(v327 + 18);
        *(_OWORD *)(v326 + 22) = v342;
        *(_OWORD *)(v326 + 14) = v341;
        v340 = v1859;
      }
      v344 = *((_QWORD *)v327 + 14);
      *((_QWORD *)v326 + 13) = *((_QWORD *)v327 + 13);
      *((_QWORD *)v326 + 14) = v344;
      v345 = v327 + 30;
      v346 = *((_QWORD *)v327 + 16);
      swift_retain();
      if (v346 >> 60 == 15)
      {
        *(_OWORD *)(v326 + 30) = *v345;
      }
      else
      {
        v347 = *(_QWORD *)v345;
        sub_1AD0040A0(v347, v346);
        *((_QWORD *)v326 + 15) = v347;
        *((_QWORD *)v326 + 16) = v346;
      }
      v348 = *((_QWORD *)v327 + 18);
      *((_QWORD *)v326 + 17) = *((_QWORD *)v327 + 17);
      *((_QWORD *)v326 + 18) = v348;
      v349 = (uint64_t *)(v327 + 38);
      v350 = *((_QWORD *)v327 + 20);
      swift_retain();
      if (v350 >> 60 == 11 || v350 >> 60 == 15)
      {
        *(_OWORD *)(v326 + 38) = *(_OWORD *)v349;
      }
      else
      {
        v351 = *v349;
        sub_1AD0040A0(*v349, v350);
        *((_QWORD *)v326 + 19) = v351;
        *((_QWORD *)v326 + 20) = v350;
      }
      v352 = *((_QWORD *)v327 + 21);
      if (v352)
      {
        v353 = *((_QWORD *)v327 + 22);
        *((_QWORD *)v326 + 21) = v352;
        *((_QWORD *)v326 + 22) = v353;
        v354 = v327 + 46;
        v355 = *((_QWORD *)v327 + 24);
        swift_retain();
        if (v355 >> 60 == 15)
        {
          *(_OWORD *)(v326 + 46) = *v354;
        }
        else
        {
          v359 = *(_QWORD *)v354;
          sub_1AD0040A0(v359, v355);
          *((_QWORD *)v326 + 23) = v359;
          *((_QWORD *)v326 + 24) = v355;
        }
        v326[50] = v327[50];
        v360 = *((_QWORD *)v327 + 27);
        *((_QWORD *)v326 + 26) = *((_QWORD *)v327 + 26);
        *((_QWORD *)v326 + 27) = v360;
        v361 = v327 + 56;
        v362 = *((_QWORD *)v327 + 29);
        swift_retain();
        if (v362 >> 60 == 15)
        {
          *((_OWORD *)v326 + 14) = *v361;
        }
        else
        {
          v363 = *(_QWORD *)v361;
          sub_1AD0040A0(v363, v362);
          *((_QWORD *)v326 + 28) = v363;
          *((_QWORD *)v326 + 29) = v362;
        }
      }
      else
      {
        *(_OWORD *)(v326 + 42) = *(_OWORD *)(v327 + 42);
        v356 = *(_OWORD *)(v327 + 46);
        v357 = *(_OWORD *)(v327 + 50);
        v358 = *(_OWORD *)(v327 + 54);
        *((_QWORD *)v326 + 29) = *((_QWORD *)v327 + 29);
        *(_OWORD *)(v326 + 50) = v357;
        *(_OWORD *)(v326 + 54) = v358;
        *(_OWORD *)(v326 + 46) = v356;
      }
      *((_QWORD *)v326 + 30) = *((_QWORD *)v327 + 30);
      v364 = *((_QWORD *)v327 + 32);
      *((_QWORD *)v326 + 31) = *((_QWORD *)v327 + 31);
      *((_QWORD *)v326 + 32) = v364;
      v365 = (uint64_t *)(v327 + 66);
      v366 = *((_QWORD *)v327 + 34);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v366 >> 60 == 11 || v366 >> 60 == 15)
      {
        *(_OWORD *)(v326 + 66) = *(_OWORD *)v365;
      }
      else
      {
        v367 = *v365;
        sub_1AD0040A0(*v365, v366);
        *((_QWORD *)v326 + 33) = v367;
        *((_QWORD *)v326 + 34) = v366;
      }
      v368 = v340[6];
      v369 = (_QWORD *)((char *)v326 + v368);
      v370 = (char *)v327 + v368;
      v371 = *(_QWORD *)((char *)v327 + v368 + 8);
      *v369 = *(_QWORD *)((char *)v327 + v368);
      v369[1] = v371;
      swift_retain();
      v372 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v373 = (char *)v369 + v372;
      v374 = &v370[v372];
      v375 = sub_1AD63AF28();
      v376 = *(_QWORD *)(v375 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v376 + 48))(v374, 1, v375))
      {
        v377 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v373, v374, *(_QWORD *)(*(_QWORD *)(v377 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v376 + 16))(v373, v374, v375);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v376 + 56))(v373, 0, 1, v375);
      }
      v15 = v1871;
      v378 = v1859[7];
      v379 = (char *)v326 + v378;
      v380 = (char *)v327 + v378;
      v381 = *(_QWORD *)((char *)v327 + v378 + 8);
      *(_QWORD *)v379 = *(_QWORD *)((char *)v327 + v378);
      *((_QWORD *)v379 + 1) = v381;
      v382 = *(_QWORD *)((char *)v327 + v378 + 24);
      swift_retain();
      if (v382 == 1)
      {
        *((_OWORD *)v379 + 1) = *((_OWORD *)v380 + 1);
      }
      else
      {
        *((_QWORD *)v379 + 2) = *((_QWORD *)v380 + 2);
        *((_QWORD *)v379 + 3) = *((_QWORD *)v380 + 3);
        swift_bridgeObjectRetain();
      }
      v14 = v1893;
      (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v1849 + 56))(v326, 0, 1, v1859);
      v12 = v1886;
      v314 = v1896;
    }
    v383 = v314[20];
    v384 = (char *)v240 + v383;
    v385 = (char *)v241 + v383;
    v386 = *((_QWORD *)v385 + 1);
    v13 = v1877;
    if (v386 >> 60 == 15)
    {
      *(_OWORD *)v384 = *(_OWORD *)v385;
    }
    else
    {
      v387 = *(_QWORD *)v385;
      sub_1AD0040A0(*(_QWORD *)v385, *((_QWORD *)v385 + 1));
      *(_QWORD *)v384 = v387;
      *((_QWORD *)v384 + 1) = v386;
      v314 = v1896;
    }
    *((_BYTE *)v240 + v314[21]) = *((_BYTE *)v241 + v314[21]);
    *((_BYTE *)v240 + v314[22]) = *((_BYTE *)v241 + v314[22]);
    *((_BYTE *)v240 + v314[23]) = *((_BYTE *)v241 + v314[23]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v1865 + 56))(v240, 0, 1, v314);
  }
  v388 = v14[7];
  v389 = (char *)v12 + v388;
  v390 = (char *)v13 + v388;
  v391 = *(_QWORD *)((char *)v13 + v388 + 8);
  *(_QWORD *)v389 = *(_QWORD *)((char *)v13 + v388);
  *((_QWORD *)v389 + 1) = v391;
  v392 = *(_QWORD *)((char *)v13 + v388 + 24);
  swift_retain();
  a1 = v1917;
  v4 = v1906;
  if (v392 == 1)
  {
    *((_OWORD *)v389 + 1) = *((_OWORD *)v390 + 1);
  }
  else
  {
    *((_QWORD *)v389 + 2) = *((_QWORD *)v390 + 2);
    *((_QWORD *)v389 + 3) = *((_QWORD *)v390 + 3);
    swift_bridgeObjectRetain();
  }
  *((_BYTE *)v12 + v14[8]) = *((_BYTE *)v13 + v14[8]);
  v393 = v14[9];
  v394 = (char *)v12 + v393;
  v395 = (char *)v13 + v393;
  v396 = *(_QWORD *)((char *)v13 + v393 + 8);
  *(_QWORD *)v394 = *(_QWORD *)((char *)v13 + v393);
  *((_QWORD *)v394 + 1) = v396;
  v397 = *(_QWORD *)((char *)v13 + v393 + 24);
  swift_retain();
  if (v397 == 1)
  {
    *((_OWORD *)v394 + 1) = *((_OWORD *)v395 + 1);
  }
  else
  {
    *((_QWORD *)v394 + 2) = *((_QWORD *)v395 + 2);
    *((_QWORD *)v394 + 3) = *((_QWORD *)v395 + 3);
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)((char *)v12 + v14[10]) = *(_QWORD *)((char *)v13 + v14[10]);
  v398 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v15 + 56);
  swift_bridgeObjectRetain();
  v398(v12, 0, 1, v14);
LABEL_946:
  v1292 = a3[13];
  v1293 = (void *)(a1 + v1292);
  v1294 = (char *)v4 + v1292;
  v1295 = sub_1AD63B03C();
  v1296 = *(_QWORD *)(v1295 - 8);
  v1297 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v1296 + 48);
  v1298 = v1297(v1293, 1, v1295);
  v1299 = v1297(v1294, 1, v1295);
  if (v1298)
  {
    if (!v1299)
    {
      (*(void (**)(void *, char *, uint64_t))(v1296 + 16))(v1293, v1294, v1295);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1296 + 56))(v1293, 0, 1, v1295);
      goto LABEL_952;
    }
    goto LABEL_951;
  }
  if (v1299)
  {
    (*(void (**)(void *, uint64_t))(v1296 + 8))(v1293, v1295);
LABEL_951:
    v1300 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v1293, v1294, *(_QWORD *)(*(_QWORD *)(v1300 - 8) + 64));
    goto LABEL_952;
  }
  (*(void (**)(void *, char *, uint64_t))(v1296 + 24))(v1293, v1294, v1295);
LABEL_952:
  v1301 = a3[14];
  v1302 = (void *)(a1 + v1301);
  v1303 = (char *)v4 + v1301;
  v1304 = v1297((void *)(a1 + v1301), 1, v1295);
  v1305 = v1297(v1303, 1, v1295);
  if (v1304)
  {
    if (!v1305)
    {
      (*(void (**)(void *, char *, uint64_t))(v1296 + 16))(v1302, v1303, v1295);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1296 + 56))(v1302, 0, 1, v1295);
      goto LABEL_958;
    }
    goto LABEL_957;
  }
  if (v1305)
  {
    (*(void (**)(void *, uint64_t))(v1296 + 8))(v1302, v1295);
LABEL_957:
    v1306 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v1302, v1303, *(_QWORD *)(*(_QWORD *)(v1306 - 8) + 64));
    goto LABEL_958;
  }
  (*(void (**)(void *, char *, uint64_t))(v1296 + 24))(v1302, v1303, v1295);
LABEL_958:
  v1307 = a3[15];
  v1308 = (void *)(a1 + v1307);
  v1309 = (char *)v4 + v1307;
  v1310 = v1297((void *)(a1 + v1307), 1, v1295);
  v1311 = v1297(v1309, 1, v1295);
  if (v1310)
  {
    if (!v1311)
    {
      (*(void (**)(void *, char *, uint64_t))(v1296 + 16))(v1308, v1309, v1295);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1296 + 56))(v1308, 0, 1, v1295);
      goto LABEL_964;
    }
    goto LABEL_963;
  }
  if (v1311)
  {
    (*(void (**)(void *, uint64_t))(v1296 + 8))(v1308, v1295);
LABEL_963:
    v1312 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v1308, v1309, *(_QWORD *)(*(_QWORD *)(v1312 - 8) + 64));
    goto LABEL_964;
  }
  (*(void (**)(void *, char *, uint64_t))(v1296 + 24))(v1308, v1309, v1295);
LABEL_964:
  v1313 = a3[16];
  v1314 = (_QWORD *)(a1 + v1313);
  v1315 = (char *)v4 + v1313;
  v1316 = *(_QWORD *)((char *)v4 + v1313 + 8);
  *v1314 = *(_QWORD *)((char *)v4 + v1313);
  v1314[1] = v1316;
  swift_retain();
  swift_release();
  v1317 = *((_QWORD *)v1315 + 3);
  if (v1314[3] == 1)
  {
    if (v1317 != 1)
    {
      v1314[2] = *((_QWORD *)v1315 + 2);
      v1314[3] = *((_QWORD *)v1315 + 3);
      swift_bridgeObjectRetain();
      goto LABEL_971;
    }
    goto LABEL_969;
  }
  if (v1317 == 1)
  {
    sub_1AD009758((uint64_t)(v1314 + 2), &qword_1ED2E3198);
LABEL_969:
    *((_OWORD *)v1314 + 1) = *((_OWORD *)v1315 + 1);
    goto LABEL_971;
  }
  v1314[2] = *((_QWORD *)v1315 + 2);
  v1314[3] = *((_QWORD *)v1315 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_971:
  v1318 = a3[17];
  v1319 = (_QWORD *)(a1 + v1318);
  v1320 = (char *)v4 + v1318;
  v1321 = *(_QWORD *)((char *)v4 + v1318 + 8);
  *v1319 = *(_QWORD *)((char *)v4 + v1318);
  v1319[1] = v1321;
  swift_retain();
  swift_release();
  v1322 = *((_QWORD *)v1320 + 3);
  if (v1319[3] == 1)
  {
    if (v1322 != 1)
    {
      v1319[2] = *((_QWORD *)v1320 + 2);
      v1319[3] = *((_QWORD *)v1320 + 3);
      swift_bridgeObjectRetain();
      goto LABEL_978;
    }
    goto LABEL_976;
  }
  if (v1322 == 1)
  {
    sub_1AD009758((uint64_t)(v1319 + 2), &qword_1ED2E3198);
LABEL_976:
    *((_OWORD *)v1319 + 1) = *((_OWORD *)v1320 + 1);
    goto LABEL_978;
  }
  v1319[2] = *((_QWORD *)v1320 + 2);
  v1319[3] = *((_QWORD *)v1320 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_978:
  v1323 = a3[18];
  v1324 = (_QWORD *)(a1 + v1323);
  v1325 = (_QWORD *)((char *)v4 + v1323);
  v1326 = type metadata accessor for CloudKitShareParticipant(0);
  v1327 = *(_QWORD *)(v1326 - 8);
  v1328 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v1327 + 48);
  v1329 = v1328(v1324, 1, v1326);
  v1330 = v1328(v1325, 1, v1326);
  if (!v1329)
  {
    if (v1330)
    {
      sub_1AD066230((uint64_t)v1324, type metadata accessor for CloudKitShareParticipant);
      goto LABEL_984;
    }
    v1335 = v1325[1];
    *v1324 = *v1325;
    v1324[1] = v1335;
    swift_retain();
    swift_release();
    v1324[2] = v1325[2];
    v1324[3] = v1325[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v1336 = v1325[5];
    v1324[4] = v1325[4];
    v1324[5] = v1336;
    swift_retain();
    swift_release();
    v1337 = v1325[7];
    v1904 = a3;
    if (v1324[7] == 1)
    {
      if (v1337 != 1)
      {
        v1324[6] = v1325[6];
        v1324[7] = v1325[7];
        swift_bridgeObjectRetain();
        goto LABEL_1042;
      }
    }
    else
    {
      if (v1337 != 1)
      {
        v1324[6] = v1325[6];
        v1324[7] = v1325[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_1042:
        v1429 = *(int *)(v1326 + 24);
        v1430 = (uint64_t)v1324 + v1429;
        v1431 = (char *)v1325 + v1429;
        v1432 = *(_QWORD *)((char *)v1324 + v1429);
        v1433 = *(_QWORD *)((char *)v1325 + v1429);
        v1921 = a1;
        v1916 = v4;
        v1900 = v1324;
        v1890 = v1325;
        if (v1432)
        {
          if (!v1433)
          {
            v1439 = (int *)v1326;
            sub_1AD311474(v1430);
            *(_OWORD *)v1430 = *(_OWORD *)v1431;
            v1445 = *((_OWORD *)v1431 + 4);
            v1447 = *((_OWORD *)v1431 + 1);
            v1446 = *((_OWORD *)v1431 + 2);
            *(_OWORD *)(v1430 + 48) = *((_OWORD *)v1431 + 3);
            *(_OWORD *)(v1430 + 64) = v1445;
            *(_OWORD *)(v1430 + 16) = v1447;
            *(_OWORD *)(v1430 + 32) = v1446;
            v1449 = *((_OWORD *)v1431 + 6);
            v1448 = *((_OWORD *)v1431 + 7);
            v1450 = *((_OWORD *)v1431 + 5);
            *(_QWORD *)(v1430 + 128) = *((_QWORD *)v1431 + 16);
            *(_OWORD *)(v1430 + 96) = v1449;
            *(_OWORD *)(v1430 + 112) = v1448;
            *(_OWORD *)(v1430 + 80) = v1450;
            goto LABEL_1095;
          }
          v1434 = *((_QWORD *)v1431 + 1);
          *(_QWORD *)v1430 = v1433;
          *(_QWORD *)(v1430 + 8) = v1434;
          swift_retain();
          swift_release();
          *(_QWORD *)(v1430 + 16) = *((_QWORD *)v1431 + 2);
          *(_QWORD *)(v1430 + 24) = *((_QWORD *)v1431 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v1435 = *((_QWORD *)v1431 + 5);
          *(_QWORD *)(v1430 + 32) = *((_QWORD *)v1431 + 4);
          *(_QWORD *)(v1430 + 40) = v1435;
          swift_retain();
          swift_release();
          *(_QWORD *)(v1430 + 48) = *((_QWORD *)v1431 + 6);
          *(_QWORD *)(v1430 + 56) = *((_QWORD *)v1431 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v1436 = *((_QWORD *)v1431 + 9);
          *(_QWORD *)(v1430 + 64) = *((_QWORD *)v1431 + 8);
          *(_QWORD *)(v1430 + 72) = v1436;
          swift_retain();
          swift_release();
          *(_QWORD *)(v1430 + 80) = *((_QWORD *)v1431 + 10);
          *(_QWORD *)(v1430 + 88) = *((_QWORD *)v1431 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v1437 = *((_QWORD *)v1431 + 13);
          *(_QWORD *)(v1430 + 96) = *((_QWORD *)v1431 + 12);
          *(_QWORD *)(v1430 + 104) = v1437;
          swift_retain();
          swift_release();
          v1438 = *((_QWORD *)v1431 + 15);
          v1439 = (int *)v1326;
          if (*(_QWORD *)(v1430 + 120) == 1)
          {
            if (v1438 != 1)
              goto LABEL_1051;
          }
          else
          {
            if (v1438 != 1)
            {
              *(_QWORD *)(v1430 + 112) = *((_QWORD *)v1431 + 14);
              *(_QWORD *)(v1430 + 120) = *((_QWORD *)v1431 + 15);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_1094;
            }
            sub_1AD009758(v1430 + 112, &qword_1ED2E3198);
          }
          *(_OWORD *)(v1430 + 112) = *((_OWORD *)v1431 + 7);
          goto LABEL_1094;
        }
        if (!v1433)
        {
          v1439 = (int *)v1326;
          *(_OWORD *)v1430 = *(_OWORD *)v1431;
          v1505 = *((_OWORD *)v1431 + 1);
          v1506 = *((_OWORD *)v1431 + 2);
          v1507 = *((_OWORD *)v1431 + 4);
          *(_OWORD *)(v1430 + 48) = *((_OWORD *)v1431 + 3);
          *(_OWORD *)(v1430 + 64) = v1507;
          *(_OWORD *)(v1430 + 16) = v1505;
          *(_OWORD *)(v1430 + 32) = v1506;
          v1508 = *((_OWORD *)v1431 + 5);
          v1509 = *((_OWORD *)v1431 + 6);
          v1510 = *((_OWORD *)v1431 + 7);
          *(_QWORD *)(v1430 + 128) = *((_QWORD *)v1431 + 16);
          *(_OWORD *)(v1430 + 96) = v1509;
          *(_OWORD *)(v1430 + 112) = v1510;
          *(_OWORD *)(v1430 + 80) = v1508;
          goto LABEL_1095;
        }
        v1440 = *((_QWORD *)v1431 + 1);
        *(_QWORD *)v1430 = v1433;
        *(_QWORD *)(v1430 + 8) = v1440;
        *(_QWORD *)(v1430 + 16) = *((_QWORD *)v1431 + 2);
        *(_QWORD *)(v1430 + 24) = *((_QWORD *)v1431 + 3);
        v1441 = *((_QWORD *)v1431 + 5);
        *(_QWORD *)(v1430 + 32) = *((_QWORD *)v1431 + 4);
        *(_QWORD *)(v1430 + 40) = v1441;
        *(_QWORD *)(v1430 + 48) = *((_QWORD *)v1431 + 6);
        *(_QWORD *)(v1430 + 56) = *((_QWORD *)v1431 + 7);
        v1442 = *((_QWORD *)v1431 + 9);
        *(_QWORD *)(v1430 + 64) = *((_QWORD *)v1431 + 8);
        *(_QWORD *)(v1430 + 72) = v1442;
        *(_QWORD *)(v1430 + 80) = *((_QWORD *)v1431 + 10);
        *(_QWORD *)(v1430 + 88) = *((_QWORD *)v1431 + 11);
        v1443 = *((_QWORD *)v1431 + 13);
        *(_QWORD *)(v1430 + 96) = *((_QWORD *)v1431 + 12);
        *(_QWORD *)(v1430 + 104) = v1443;
        v1444 = *((_QWORD *)v1431 + 15);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        v1439 = (int *)v1326;
        if (v1444 == 1)
        {
          *(_OWORD *)(v1430 + 112) = *((_OWORD *)v1431 + 7);
LABEL_1094:
          *(_QWORD *)(v1430 + 128) = *((_QWORD *)v1431 + 16);
LABEL_1095:
          v1511 = (int *)type metadata accessor for CloudKitUserIdentity(0);
          v1512 = v1511[5];
          v1513 = (void *)(v1430 + v1512);
          v1514 = &v1431[v1512];
          v1515 = sub_1AD63AE2C();
          v1516 = *(_QWORD *)(v1515 - 8);
          v1517 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v1516 + 48);
          v1518 = v1517(v1513, 1, v1515);
          v1519 = v1517(v1514, 1, v1515);
          if (v1518)
          {
            if (!v1519)
            {
              (*(void (**)(void *, char *, uint64_t))(v1516 + 16))(v1513, v1514, v1515);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1516 + 56))(v1513, 0, 1, v1515);
              goto LABEL_1101;
            }
          }
          else
          {
            if (!v1519)
            {
              (*(void (**)(void *, char *, uint64_t))(v1516 + 24))(v1513, v1514, v1515);
LABEL_1101:
              v1521 = v1439;
              v1522 = v1511[6];
              v1523 = v1430 + v1522;
              v1524 = &v1431[v1522];
              v1525 = *(_QWORD *)(v1430 + v1522);
              v1526 = *(_QWORD *)&v1431[v1522];
              if (v1525)
              {
                if (v1526)
                {
                  v1527 = *((_QWORD *)v1524 + 1);
                  *(_QWORD *)v1523 = v1526;
                  *(_QWORD *)(v1523 + 8) = v1527;
                  swift_retain();
                  swift_release();
                  v1528 = *((_QWORD *)v1524 + 3);
                  if (*(_QWORD *)(v1523 + 24) == 1)
                  {
                    if (v1528 != 1)
                    {
                      *(_QWORD *)(v1523 + 16) = *((_QWORD *)v1524 + 2);
                      *(_QWORD *)(v1523 + 24) = *((_QWORD *)v1524 + 3);
                      swift_bridgeObjectRetain();
                      goto LABEL_1123;
                    }
                  }
                  else
                  {
                    if (v1528 != 1)
                    {
                      *(_QWORD *)(v1523 + 16) = *((_QWORD *)v1524 + 2);
                      *(_QWORD *)(v1523 + 24) = *((_QWORD *)v1524 + 3);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
LABEL_1123:
                      v1558 = *((_QWORD *)v1524 + 5);
                      *(_QWORD *)(v1523 + 32) = *((_QWORD *)v1524 + 4);
                      *(_QWORD *)(v1523 + 40) = v1558;
                      swift_retain();
                      swift_release();
                      v1559 = *((_QWORD *)v1524 + 7);
                      if (*(_QWORD *)(v1523 + 56) == 1)
                      {
                        if (v1559 != 1)
                        {
                          *(_QWORD *)(v1523 + 48) = *((_QWORD *)v1524 + 6);
                          *(_QWORD *)(v1523 + 56) = *((_QWORD *)v1524 + 7);
                          swift_bridgeObjectRetain();
                          goto LABEL_1130;
                        }
                      }
                      else
                      {
                        if (v1559 != 1)
                        {
                          *(_QWORD *)(v1523 + 48) = *((_QWORD *)v1524 + 6);
                          *(_QWORD *)(v1523 + 56) = *((_QWORD *)v1524 + 7);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
LABEL_1130:
                          v1560 = (_OWORD *)(v1523 + 64);
                          v1562 = v1524 + 64;
                          v1561 = *((_QWORD *)v1524 + 8);
                          if (*(_QWORD *)(v1523 + 64))
                          {
                            if (!v1561)
                            {
                              sub_1AD311474(v1523 + 64);
                              *v1560 = *v1562;
                              v1572 = *((_OWORD *)v1524 + 8);
                              v1574 = *((_OWORD *)v1524 + 5);
                              v1573 = *((_OWORD *)v1524 + 6);
                              *(_OWORD *)(v1523 + 112) = *((_OWORD *)v1524 + 7);
                              *(_OWORD *)(v1523 + 128) = v1572;
                              *(_OWORD *)(v1523 + 80) = v1574;
                              *(_OWORD *)(v1523 + 96) = v1573;
                              v1576 = *((_OWORD *)v1524 + 10);
                              v1575 = *((_OWORD *)v1524 + 11);
                              v1577 = *((_OWORD *)v1524 + 9);
                              *(_QWORD *)(v1523 + 192) = *((_QWORD *)v1524 + 24);
                              *(_OWORD *)(v1523 + 160) = v1576;
                              *(_OWORD *)(v1523 + 176) = v1575;
                              *(_OWORD *)(v1523 + 144) = v1577;
                              goto LABEL_1153;
                            }
                            v1563 = *((_QWORD *)v1524 + 9);
                            *(_QWORD *)(v1523 + 64) = v1561;
                            *(_QWORD *)(v1523 + 72) = v1563;
                            swift_retain();
                            swift_release();
                            *(_QWORD *)(v1523 + 80) = *((_QWORD *)v1524 + 10);
                            *(_QWORD *)(v1523 + 88) = *((_QWORD *)v1524 + 11);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v1564 = *((_QWORD *)v1524 + 13);
                            *(_QWORD *)(v1523 + 96) = *((_QWORD *)v1524 + 12);
                            *(_QWORD *)(v1523 + 104) = v1564;
                            swift_retain();
                            swift_release();
                            *(_QWORD *)(v1523 + 112) = *((_QWORD *)v1524 + 14);
                            *(_QWORD *)(v1523 + 120) = *((_QWORD *)v1524 + 15);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v1565 = *((_QWORD *)v1524 + 17);
                            *(_QWORD *)(v1523 + 128) = *((_QWORD *)v1524 + 16);
                            *(_QWORD *)(v1523 + 136) = v1565;
                            swift_retain();
                            swift_release();
                            *(_QWORD *)(v1523 + 144) = *((_QWORD *)v1524 + 18);
                            *(_QWORD *)(v1523 + 152) = *((_QWORD *)v1524 + 19);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v1566 = *((_QWORD *)v1524 + 21);
                            *(_QWORD *)(v1523 + 160) = *((_QWORD *)v1524 + 20);
                            *(_QWORD *)(v1523 + 168) = v1566;
                            swift_retain();
                            swift_release();
                            v1567 = *((_QWORD *)v1524 + 23);
                            if (*(_QWORD *)(v1523 + 184) == 1)
                            {
                              if (v1567 != 1)
                                goto LABEL_1140;
                            }
                            else
                            {
                              if (v1567 != 1)
                              {
                                *(_QWORD *)(v1523 + 176) = *((_QWORD *)v1524 + 22);
                                *(_QWORD *)(v1523 + 184) = *((_QWORD *)v1524 + 23);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                goto LABEL_1152;
                              }
                              sub_1AD009758(v1523 + 176, &qword_1ED2E3198);
                            }
                            *(_OWORD *)(v1523 + 176) = *((_OWORD *)v1524 + 11);
                            goto LABEL_1152;
                          }
                          if (!v1561)
                          {
                            *v1560 = *v1562;
                            v1588 = *((_OWORD *)v1524 + 5);
                            v1589 = *((_OWORD *)v1524 + 6);
                            v1590 = *((_OWORD *)v1524 + 8);
                            *(_OWORD *)(v1523 + 112) = *((_OWORD *)v1524 + 7);
                            *(_OWORD *)(v1523 + 128) = v1590;
                            *(_OWORD *)(v1523 + 80) = v1588;
                            *(_OWORD *)(v1523 + 96) = v1589;
                            v1591 = *((_OWORD *)v1524 + 9);
                            v1592 = *((_OWORD *)v1524 + 10);
                            v1593 = *((_OWORD *)v1524 + 11);
                            *(_QWORD *)(v1523 + 192) = *((_QWORD *)v1524 + 24);
                            *(_OWORD *)(v1523 + 160) = v1592;
                            *(_OWORD *)(v1523 + 176) = v1593;
                            *(_OWORD *)(v1523 + 144) = v1591;
                            goto LABEL_1153;
                          }
                          v1568 = *((_QWORD *)v1524 + 9);
                          *(_QWORD *)(v1523 + 64) = v1561;
                          *(_QWORD *)(v1523 + 72) = v1568;
                          *(_QWORD *)(v1523 + 80) = *((_QWORD *)v1524 + 10);
                          *(_QWORD *)(v1523 + 88) = *((_QWORD *)v1524 + 11);
                          v1569 = *((_QWORD *)v1524 + 13);
                          *(_QWORD *)(v1523 + 96) = *((_QWORD *)v1524 + 12);
                          *(_QWORD *)(v1523 + 104) = v1569;
                          *(_QWORD *)(v1523 + 112) = *((_QWORD *)v1524 + 14);
                          *(_QWORD *)(v1523 + 120) = *((_QWORD *)v1524 + 15);
                          v1570 = *((_QWORD *)v1524 + 17);
                          *(_QWORD *)(v1523 + 128) = *((_QWORD *)v1524 + 16);
                          *(_QWORD *)(v1523 + 136) = v1570;
                          *(_QWORD *)(v1523 + 144) = *((_QWORD *)v1524 + 18);
                          *(_QWORD *)(v1523 + 152) = *((_QWORD *)v1524 + 19);
                          v1571 = *((_QWORD *)v1524 + 21);
                          *(_QWORD *)(v1523 + 160) = *((_QWORD *)v1524 + 20);
                          *(_QWORD *)(v1523 + 168) = v1571;
                          v1882 = *((_QWORD *)v1524 + 23);
                          swift_retain();
                          swift_bridgeObjectRetain();
                          swift_retain();
                          swift_bridgeObjectRetain();
                          swift_retain();
                          swift_bridgeObjectRetain();
                          swift_retain();
                          if (v1882 == 1)
                          {
                            *(_OWORD *)(v1523 + 176) = *((_OWORD *)v1524 + 11);
LABEL_1152:
                            *(_QWORD *)(v1523 + 192) = *((_QWORD *)v1524 + 24);
LABEL_1153:
                            *(_BYTE *)(v1523 + 200) = v1524[200];
                            v1594 = (uint64_t *)(v1524 + 208);
                            v1595 = *((_QWORD *)v1524 + 27);
                            if (*(_QWORD *)(v1523 + 216) >> 60 == 15)
                            {
                              v1587 = v1890;
                              if (v1595 >> 60 != 15)
                              {
                                v1596 = *v1594;
                                sub_1AD0040A0(*v1594, v1595);
                                *(_QWORD *)(v1523 + 208) = v1596;
                                *(_QWORD *)(v1523 + 216) = v1595;
                                goto LABEL_1160;
                              }
                            }
                            else
                            {
                              v1587 = v1890;
                              if (v1595 >> 60 != 15)
                              {
                                v1597 = *v1594;
                                sub_1AD0040A0(*v1594, v1595);
                                v1598 = *(_QWORD *)(v1523 + 208);
                                v1599 = *(_QWORD *)(v1523 + 216);
                                *(_QWORD *)(v1523 + 208) = v1597;
                                *(_QWORD *)(v1523 + 216) = v1595;
                                sub_1AD00412C(v1598, v1599);
LABEL_1160:
                                *(_QWORD *)(v1430 + v1511[7]) = *(_QWORD *)&v1431[v1511[7]];
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                v1600 = v1511[8];
                                v1601 = (uint64_t *)(v1430 + v1600);
                                v1602 = (uint64_t *)&v1431[v1600];
                                v1603 = *(_QWORD *)&v1431[v1600 + 8];
                                if (*(_QWORD *)(v1430 + v1600 + 8) >> 60 == 15)
                                {
                                  if (v1603 >> 60 != 15)
                                  {
                                    v1604 = *v1602;
                                    sub_1AD0040A0(v1604, v1603);
                                    *v1601 = v1604;
                                    v1601[1] = v1603;
                                    goto LABEL_1167;
                                  }
                                }
                                else
                                {
                                  if (v1603 >> 60 != 15)
                                  {
                                    v1605 = *v1602;
                                    sub_1AD0040A0(v1605, v1603);
                                    v1606 = *v1601;
                                    v1607 = v1601[1];
                                    *v1601 = v1605;
                                    v1601[1] = v1603;
                                    sub_1AD00412C(v1606, v1607);
LABEL_1167:
                                    v1608 = v1511[9];
                                    v1609 = (uint64_t *)(v1430 + v1608);
                                    v1610 = (uint64_t *)&v1431[v1608];
                                    v1611 = *(_QWORD *)&v1431[v1608 + 8];
                                    if (*(_QWORD *)(v1430 + v1608 + 8) >> 60 == 15)
                                    {
                                      if (v1611 >> 60 != 15)
                                      {
                                        v1612 = *v1610;
                                        sub_1AD0040A0(v1612, v1611);
                                        *v1609 = v1612;
                                        v1609[1] = v1611;
                                        goto LABEL_1174;
                                      }
                                    }
                                    else
                                    {
                                      if (v1611 >> 60 != 15)
                                      {
                                        v1613 = *v1610;
                                        sub_1AD0040A0(v1613, v1611);
                                        v1614 = *v1609;
                                        v1615 = v1609[1];
                                        *v1609 = v1613;
                                        v1609[1] = v1611;
                                        sub_1AD00412C(v1614, v1615);
LABEL_1174:
                                        *(_BYTE *)(v1430 + v1511[10]) = v1431[v1511[10]];
                                        *(_BYTE *)(v1430 + v1511[11]) = v1431[v1511[11]];
                                        v1616 = v1511[12];
                                        v1617 = (uint64_t *)(v1430 + v1616);
                                        v1618 = (uint64_t *)&v1431[v1616];
                                        v1619 = *(_QWORD *)&v1431[v1616 + 8];
                                        if (*(_QWORD *)(v1430 + v1616 + 8) >> 60 == 15)
                                        {
                                          if (v1619 >> 60 != 15)
                                          {
                                            v1620 = *v1618;
                                            sub_1AD0040A0(v1620, v1619);
                                            *v1617 = v1620;
                                            v1617[1] = v1619;
                                            goto LABEL_1181;
                                          }
                                        }
                                        else
                                        {
                                          if (v1619 >> 60 != 15)
                                          {
                                            v1621 = *v1618;
                                            sub_1AD0040A0(v1621, v1619);
                                            v1622 = *v1617;
                                            v1623 = v1617[1];
                                            *v1617 = v1621;
                                            v1617[1] = v1619;
                                            sub_1AD00412C(v1622, v1623);
LABEL_1181:
                                            a1 = v1921;
                                            *(_QWORD *)(v1430 + v1511[13]) = *(_QWORD *)&v1431[v1511[13]];
                                            v1624 = v1900;
                                            v1900[v1521[7]] = *((_BYTE *)v1587 + v1521[7]);
                                            v1900[v1521[8]] = *((_BYTE *)v1587 + v1521[8]);
                                            v1900[v1521[9]] = *((_BYTE *)v1587 + v1521[9]);
                                            v1900[v1521[10]] = *((_BYTE *)v1587 + v1521[10]);
                                            v1900[v1521[11]] = *((_BYTE *)v1587 + v1521[11]);
                                            v1900[v1521[12]] = *((_BYTE *)v1587 + v1521[12]);
                                            v1900[v1521[13]] = *((_BYTE *)v1587 + v1521[13]);
                                            v1900[v1521[14]] = *((_BYTE *)v1587 + v1521[14]);
                                            v1625 = v1521[15];
                                            v1626 = (uint64_t *)&v1900[v1625];
                                            v1627 = (_QWORD *)((char *)v1587 + v1625);
                                            v1628 = *(_QWORD *)((char *)v1587 + v1625 + 8);
                                            if (*(_QWORD *)&v1900[v1625 + 8] >> 60 == 15)
                                            {
                                              if (v1628 >> 60 != 15)
                                              {
                                                v1629 = *v1627;
                                                sub_1AD0040A0(*v1627, v1628);
                                                *v1626 = v1629;
                                                v1626[1] = v1628;
                                                goto LABEL_1188;
                                              }
                                            }
                                            else
                                            {
                                              if (v1628 >> 60 != 15)
                                              {
                                                v1630 = *v1627;
                                                sub_1AD0040A0(*v1627, v1628);
                                                v1631 = *v1626;
                                                v1632 = v1626[1];
                                                *v1626 = v1630;
                                                v1626[1] = v1628;
                                                sub_1AD00412C(v1631, v1632);
LABEL_1188:
                                                v1633 = v1521[16];
                                                v1634 = (uint64_t *)&v1900[v1633];
                                                v1635 = (_QWORD *)((char *)v1587 + v1633);
                                                v1636 = *(_QWORD *)((char *)v1587 + v1633 + 8);
                                                if (*(_QWORD *)&v1900[v1633 + 8] >> 60 == 15)
                                                {
                                                  if (v1636 >> 60 != 15)
                                                  {
                                                    v1637 = *v1635;
                                                    sub_1AD0040A0(*v1635, v1636);
                                                    *v1634 = v1637;
                                                    v1634[1] = v1636;
                                                    goto LABEL_1195;
                                                  }
                                                }
                                                else
                                                {
                                                  if (v1636 >> 60 != 15)
                                                  {
                                                    v1638 = *v1635;
                                                    sub_1AD0040A0(*v1635, v1636);
                                                    v1639 = *v1634;
                                                    v1640 = v1634[1];
                                                    *v1634 = v1638;
                                                    v1634[1] = v1636;
                                                    sub_1AD00412C(v1639, v1640);
LABEL_1195:
                                                    v1900[v1521[17]] = *((_BYTE *)v1587 + v1521[17]);
                                                    v1900[v1521[18]] = *((_BYTE *)v1587 + v1521[18]);
                                                    v1641 = v1521[19];
                                                    v1642 = (uint64_t)&v1900[v1641];
                                                    v1643 = (uint64_t)v1587 + v1641;
                                                    v1644 = type metadata accessor for CloudKitSharingToken();
                                                    v1645 = *(_QWORD *)(v1644 - 8);
                                                    v1646 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1645 + 48);
                                                    v1647 = v1646(v1642, 1, v1644);
                                                    v1648 = v1646(v1643, 1, v1644);
                                                    if (v1647)
                                                    {
                                                      if (!v1648)
                                                      {
                                                        v1883 = v1644;
                                                        v1895 = v1521;
                                                        *(_DWORD *)v1642 = *(_DWORD *)v1643;
                                                        *(_QWORD *)(v1642 + 8) = *(_QWORD *)(v1643 + 8);
                                                        *(_QWORD *)(v1642 + 16) = *(_QWORD *)(v1643 + 16);
                                                        v1649 = *(_QWORD *)(v1643 + 32);
                                                        *(_QWORD *)(v1642 + 24) = *(_QWORD *)(v1643 + 24);
                                                        *(_QWORD *)(v1642 + 32) = v1649;
                                                        v1650 = (uint64_t *)(v1643 + 40);
                                                        v1651 = *(_QWORD *)(v1643 + 48);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_retain();
                                                        if (v1651 >> 60 == 11 || v1651 >> 60 == 15)
                                                        {
                                                          *(_OWORD *)(v1642 + 40) = *(_OWORD *)v1650;
                                                          if (*(_QWORD *)(v1643 + 72))
                                                          {
LABEL_1200:
                                                            *(_DWORD *)(v1642 + 56) = *(_DWORD *)(v1643 + 56);
                                                            v1652 = *(_DWORD *)(v1643 + 60);
                                                            *(_BYTE *)(v1642 + 64) = *(_BYTE *)(v1643 + 64);
                                                            *(_DWORD *)(v1642 + 60) = v1652;
                                                            v1653 = *(_QWORD *)(v1643 + 80);
                                                            *(_QWORD *)(v1642 + 72) = *(_QWORD *)(v1643 + 72);
                                                            *(_QWORD *)(v1642 + 80) = v1653;
                                                            v1654 = (uint64_t *)(v1643 + 88);
                                                            v1655 = *(_QWORD *)(v1643 + 96);
                                                            swift_retain();
                                                            if (v1655 >> 60 != 15)
                                                            {
                                                              v1663 = *v1654;
                                                              sub_1AD0040A0(v1663, v1655);
                                                              *(_QWORD *)(v1642 + 88) = v1663;
                                                              *(_QWORD *)(v1642 + 96) = v1655;
LABEL_1214:
                                                              v1666 = *(_QWORD *)(v1643 + 112);
                                                              *(_QWORD *)(v1642 + 104) = *(_QWORD *)(v1643 + 104);
                                                              *(_QWORD *)(v1642 + 112) = v1666;
                                                              v1667 = (_OWORD *)(v1643 + 120);
                                                              v1668 = *(_QWORD *)(v1643 + 128);
                                                              swift_retain();
                                                              if (v1668 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v1642 + 120) = *v1667;
                                                              }
                                                              else
                                                              {
                                                                v1669 = *(_QWORD *)v1667;
                                                                sub_1AD0040A0(v1669, v1668);
                                                                *(_QWORD *)(v1642 + 120) = v1669;
                                                                *(_QWORD *)(v1642 + 128) = v1668;
                                                              }
                                                              v1670 = *(_QWORD *)(v1643 + 144);
                                                              *(_QWORD *)(v1642 + 136) = *(_QWORD *)(v1643 + 136);
                                                              *(_QWORD *)(v1642 + 144) = v1670;
                                                              v1671 = (uint64_t *)(v1643 + 152);
                                                              v1672 = *(_QWORD *)(v1643 + 160);
                                                              swift_retain();
                                                              if (v1672 >> 60 == 11 || v1672 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v1642 + 152) = *(_OWORD *)v1671;
                                                              }
                                                              else
                                                              {
                                                                v1673 = *v1671;
                                                                sub_1AD0040A0(*v1671, v1672);
                                                                *(_QWORD *)(v1642 + 152) = v1673;
                                                                *(_QWORD *)(v1642 + 160) = v1672;
                                                              }
                                                              v1674 = *(_QWORD *)(v1643 + 168);
                                                              if (v1674)
                                                              {
                                                                v1675 = *(_QWORD *)(v1643 + 176);
                                                                *(_QWORD *)(v1642 + 168) = v1674;
                                                                *(_QWORD *)(v1642 + 176) = v1675;
                                                                v1676 = (_OWORD *)(v1643 + 184);
                                                                v1677 = *(_QWORD *)(v1643 + 192);
                                                                swift_retain();
                                                                if (v1677 >> 60 == 15)
                                                                {
                                                                  *(_OWORD *)(v1642 + 184) = *v1676;
                                                                }
                                                                else
                                                                {
                                                                  v1681 = *(_QWORD *)v1676;
                                                                  sub_1AD0040A0(v1681, v1677);
                                                                  *(_QWORD *)(v1642 + 184) = v1681;
                                                                  *(_QWORD *)(v1642 + 192) = v1677;
                                                                }
                                                                *(_DWORD *)(v1642 + 200) = *(_DWORD *)(v1643 + 200);
                                                                v1682 = *(_QWORD *)(v1643 + 216);
                                                                *(_QWORD *)(v1642 + 208) = *(_QWORD *)(v1643 + 208);
                                                                *(_QWORD *)(v1642 + 216) = v1682;
                                                                v1683 = (_OWORD *)(v1643 + 224);
                                                                v1684 = *(_QWORD *)(v1643 + 232);
                                                                swift_retain();
                                                                if (v1684 >> 60 == 15)
                                                                {
                                                                  *(_OWORD *)(v1642 + 224) = *v1683;
                                                                }
                                                                else
                                                                {
                                                                  v1685 = *(_QWORD *)v1683;
                                                                  sub_1AD0040A0(v1685, v1684);
                                                                  *(_QWORD *)(v1642 + 224) = v1685;
                                                                  *(_QWORD *)(v1642 + 232) = v1684;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                *(_OWORD *)(v1642 + 168) = *(_OWORD *)(v1643 + 168);
                                                                v1678 = *(_OWORD *)(v1643 + 184);
                                                                v1679 = *(_OWORD *)(v1643 + 200);
                                                                v1680 = *(_OWORD *)(v1643 + 216);
                                                                *(_QWORD *)(v1642 + 232) = *(_QWORD *)(v1643 + 232);
                                                                *(_OWORD *)(v1642 + 200) = v1679;
                                                                *(_OWORD *)(v1642 + 216) = v1680;
                                                                *(_OWORD *)(v1642 + 184) = v1678;
                                                              }
                                                              *(_QWORD *)(v1642 + 240) = *(_QWORD *)(v1643 + 240);
                                                              v1686 = *(_QWORD *)(v1643 + 256);
                                                              *(_QWORD *)(v1642 + 248) = *(_QWORD *)(v1643 + 248);
                                                              *(_QWORD *)(v1642 + 256) = v1686;
                                                              v1687 = (uint64_t *)(v1643 + 264);
                                                              v1688 = *(_QWORD *)(v1643 + 272);
                                                              swift_bridgeObjectRetain();
                                                              swift_retain();
                                                              if (v1688 >> 60 == 11 || v1688 >> 60 == 15)
                                                              {
                                                                v1689 = v1587;
                                                                *(_OWORD *)(v1642 + 264) = *(_OWORD *)v1687;
                                                              }
                                                              else
                                                              {
                                                                v1689 = v1587;
                                                                v1690 = *v1687;
                                                                sub_1AD0040A0(*v1687, v1688);
                                                                *(_QWORD *)(v1642 + 264) = v1690;
                                                                *(_QWORD *)(v1642 + 272) = v1688;
                                                              }
                                                              v1691 = *(int *)(v1883 + 24);
                                                              v1692 = (_QWORD *)(v1642 + v1691);
                                                              v1693 = v1643 + v1691;
                                                              v1694 = *(_QWORD *)(v1643 + v1691 + 8);
                                                              *v1692 = *(_QWORD *)(v1643 + v1691);
                                                              v1692[1] = v1694;
                                                              swift_retain();
                                                              v1695 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                             + 28);
                                                              v1696 = (char *)v1692 + v1695;
                                                              v1697 = (const void *)(v1693 + v1695);
                                                              v1698 = sub_1AD63AF28();
                                                              v1699 = *(_QWORD *)(v1698 - 8);
                                                              v1521 = v1895;
                                                              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1699 + 48))(v1697, 1, v1698))
                                                              {
                                                                v1700 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                memcpy(v1696, v1697, *(_QWORD *)(*(_QWORD *)(v1700 - 8) + 64));
                                                              }
                                                              else
                                                              {
                                                                (*(void (**)(char *, const void *, uint64_t))(v1699 + 16))(v1696, v1697, v1698);
                                                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1699 + 56))(v1696, 0, 1, v1698);
                                                              }
                                                              v1587 = v1689;
                                                              v1701 = *(int *)(v1883 + 28);
                                                              v1702 = v1642 + v1701;
                                                              v1703 = v1643 + v1701;
                                                              v1704 = *(_QWORD *)(v1643 + v1701 + 8);
                                                              *(_QWORD *)v1702 = *(_QWORD *)(v1643 + v1701);
                                                              *(_QWORD *)(v1702 + 8) = v1704;
                                                              v1705 = *(_QWORD *)(v1643 + v1701 + 24);
                                                              swift_retain();
                                                              a1 = v1921;
                                                              if (v1705 == 1)
                                                              {
                                                                *(_OWORD *)(v1702 + 16) = *(_OWORD *)(v1703 + 16);
                                                              }
                                                              else
                                                              {
                                                                *(_QWORD *)(v1702 + 16) = *(_QWORD *)(v1703 + 16);
                                                                *(_QWORD *)(v1702 + 24) = *(_QWORD *)(v1703 + 24);
                                                                swift_bridgeObjectRetain();
                                                              }
                                                              v4 = v1916;
                                                              v1624 = v1900;
                                                              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1645 + 56))(v1642, 0, 1, v1883);
LABEL_1329:
                                                              v1794 = v1521[20];
                                                              v1795 = (uint64_t *)&v1624[v1794];
                                                              v1796 = (_QWORD *)((char *)v1587 + v1794);
                                                              v1797 = *(_QWORD *)((char *)v1587 + v1794 + 8);
                                                              if (*(_QWORD *)&v1624[v1794 + 8] >> 60 == 15)
                                                              {
                                                                if (v1797 >> 60 != 15)
                                                                {
                                                                  v1798 = *v1796;
                                                                  sub_1AD0040A0(*v1796, v1797);
                                                                  *v1795 = v1798;
                                                                  v1795[1] = v1797;
LABEL_1336:
                                                                  a3 = v1904;
                                                                  v1624[v1521[21]] = *((_BYTE *)v1587 + v1521[21]);
                                                                  v1624[v1521[22]] = *((_BYTE *)v1587 + v1521[22]);
                                                                  v1624[v1521[23]] = *((_BYTE *)v1587 + v1521[23]);
                                                                  goto LABEL_1337;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                if (v1797 >> 60 != 15)
                                                                {
                                                                  v1799 = *v1796;
                                                                  sub_1AD0040A0(*v1796, v1797);
                                                                  v1800 = *v1795;
                                                                  v1801 = v1795[1];
                                                                  *v1795 = v1799;
                                                                  v1795[1] = v1797;
                                                                  sub_1AD00412C(v1800, v1801);
                                                                  goto LABEL_1336;
                                                                }
                                                                sub_1AD007EC0((uint64_t)v1795);
                                                              }
                                                              *(_OWORD *)v1795 = *(_OWORD *)v1796;
                                                              goto LABEL_1336;
                                                            }
                                                            v1656 = (_OWORD *)(v1642 + 88);
                                                            v1657 = *(_OWORD *)v1654;
LABEL_1213:
                                                            *v1656 = v1657;
                                                            goto LABEL_1214;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          v1664 = *v1650;
                                                          sub_1AD0040A0(*v1650, v1651);
                                                          *(_QWORD *)(v1642 + 40) = v1664;
                                                          *(_QWORD *)(v1642 + 48) = v1651;
                                                          if (*(_QWORD *)(v1643 + 72))
                                                            goto LABEL_1200;
                                                        }
                                                        v1656 = (_OWORD *)(v1642 + 56);
                                                        v1657 = *(_OWORD *)(v1643 + 56);
                                                        v1665 = *(_OWORD *)(v1643 + 88);
                                                        *(_OWORD *)(v1642 + 72) = *(_OWORD *)(v1643 + 72);
                                                        *(_OWORD *)(v1642 + 88) = v1665;
                                                        goto LABEL_1213;
                                                      }
LABEL_1204:
                                                      v1658 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                                                      memcpy((void *)v1642, (const void *)v1643, *(_QWORD *)(*(_QWORD *)(v1658 - 8) + 64));
                                                      v4 = v1916;
                                                      goto LABEL_1329;
                                                    }
                                                    if (v1648)
                                                    {
                                                      sub_1AD066230(v1642, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                                                      goto LABEL_1204;
                                                    }
                                                    *(_DWORD *)v1642 = *(_DWORD *)v1643;
                                                    *(_QWORD *)(v1642 + 8) = *(_QWORD *)(v1643 + 8);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(_QWORD *)(v1642 + 16) = *(_QWORD *)(v1643 + 16);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    v1659 = *(_QWORD *)(v1643 + 32);
                                                    *(_QWORD *)(v1642 + 24) = *(_QWORD *)(v1643 + 24);
                                                    *(_QWORD *)(v1642 + 32) = v1659;
                                                    swift_retain();
                                                    swift_release();
                                                    v1660 = (uint64_t *)(v1643 + 40);
                                                    v1661 = *(_QWORD *)(v1643 + 48);
                                                    v1662 = v1661 & 0xF000000000000000;
                                                    if (*(_QWORD *)(v1642 + 48) >> 60 == 11)
                                                    {
                                                      if (v1662 == 0xB000000000000000)
                                                        goto LABEL_1245;
LABEL_1241:
                                                      if (v1661 >> 60 != 15)
                                                      {
                                                        v1706 = *v1660;
                                                        sub_1AD0040A0(*v1660, *(_QWORD *)(v1643 + 48));
                                                        *(_QWORD *)(v1642 + 40) = v1706;
                                                        *(_QWORD *)(v1642 + 48) = v1661;
                                                        goto LABEL_1246;
                                                      }
                                                      goto LABEL_1245;
                                                    }
                                                    if (v1662 == 0xB000000000000000)
                                                    {
                                                      sub_1AD009758(v1642 + 40, &qword_1ED2E3250);
                                                    }
                                                    else
                                                    {
                                                      if (*(_QWORD *)(v1642 + 48) >> 60 == 15)
                                                        goto LABEL_1241;
                                                      if (v1661 >> 60 != 15)
                                                      {
                                                        v1807 = *v1660;
                                                        sub_1AD0040A0(*v1660, *(_QWORD *)(v1643 + 48));
                                                        v1808 = *(_QWORD *)(v1642 + 40);
                                                        v1809 = *(_QWORD *)(v1642 + 48);
                                                        *(_QWORD *)(v1642 + 40) = v1807;
                                                        *(_QWORD *)(v1642 + 48) = v1661;
                                                        sub_1AD00412C(v1808, v1809);
LABEL_1246:
                                                        v1707 = (_OWORD *)(v1642 + 56);
                                                        v1708 = (_OWORD *)(v1643 + 56);
                                                        v1709 = *(_QWORD *)(v1643 + 72);
                                                        if (*(_QWORD *)(v1642 + 72))
                                                        {
                                                          if (!v1709)
                                                          {
                                                            sub_1AD0AEC58(v1642 + 56);
                                                            v1720 = *(_OWORD *)(v1643 + 72);
                                                            v1719 = *(_OWORD *)(v1643 + 88);
                                                            *v1707 = *v1708;
                                                            *(_OWORD *)(v1642 + 72) = v1720;
                                                            *(_OWORD *)(v1642 + 88) = v1719;
                                                            goto LABEL_1262;
                                                          }
                                                          *(_DWORD *)(v1642 + 56) = *(_DWORD *)(v1643 + 56);
                                                          v1710 = *(_DWORD *)(v1643 + 60);
                                                          *(_BYTE *)(v1642 + 64) = *(_BYTE *)(v1643 + 64);
                                                          *(_DWORD *)(v1642 + 60) = v1710;
                                                          v1711 = *(_QWORD *)(v1643 + 80);
                                                          *(_QWORD *)(v1642 + 72) = *(_QWORD *)(v1643 + 72);
                                                          *(_QWORD *)(v1642 + 80) = v1711;
                                                          swift_retain();
                                                          swift_release();
                                                          v1707 = (_OWORD *)(v1642 + 88);
                                                          v1712 = (uint64_t *)(v1643 + 88);
                                                          v1713 = *(_QWORD *)(v1643 + 96);
                                                          if (*(_QWORD *)(v1642 + 96) >> 60 == 15)
                                                          {
                                                            if (v1713 >> 60 != 15)
                                                            {
                                                              v1714 = *v1712;
                                                              sub_1AD0040A0(*v1712, *(_QWORD *)(v1643 + 96));
                                                              *(_QWORD *)(v1642 + 88) = v1714;
                                                              *(_QWORD *)(v1642 + 96) = v1713;
                                                              goto LABEL_1262;
                                                            }
                                                            goto LABEL_1257;
                                                          }
                                                          if (v1713 >> 60 == 15)
                                                          {
                                                            sub_1AD007EC0(v1642 + 88);
LABEL_1257:
                                                            v1721 = *(_OWORD *)v1712;
LABEL_1259:
                                                            *v1707 = v1721;
                                                            goto LABEL_1262;
                                                          }
                                                          v1724 = *v1712;
                                                          sub_1AD0040A0(*v1712, *(_QWORD *)(v1643 + 96));
                                                          v1725 = *(_QWORD *)(v1642 + 88);
                                                          v1726 = *(_QWORD *)(v1642 + 96);
                                                          *(_QWORD *)(v1642 + 88) = v1724;
                                                          *(_QWORD *)(v1642 + 96) = v1713;
                                                          sub_1AD00412C(v1725, v1726);
                                                        }
                                                        else
                                                        {
                                                          if (!v1709)
                                                          {
                                                            v1721 = *v1708;
                                                            v1722 = *(_OWORD *)(v1643 + 88);
                                                            *(_OWORD *)(v1642 + 72) = *(_OWORD *)(v1643 + 72);
                                                            *(_OWORD *)(v1642 + 88) = v1722;
                                                            goto LABEL_1259;
                                                          }
                                                          *(_DWORD *)(v1642 + 56) = *(_DWORD *)(v1643 + 56);
                                                          v1715 = *(_DWORD *)(v1643 + 60);
                                                          *(_BYTE *)(v1642 + 64) = *(_BYTE *)(v1643 + 64);
                                                          *(_DWORD *)(v1642 + 60) = v1715;
                                                          v1716 = *(_QWORD *)(v1643 + 80);
                                                          *(_QWORD *)(v1642 + 72) = *(_QWORD *)(v1643 + 72);
                                                          *(_QWORD *)(v1642 + 80) = v1716;
                                                          v1717 = (uint64_t *)(v1643 + 88);
                                                          v1718 = *(_QWORD *)(v1643 + 96);
                                                          swift_retain();
                                                          if (v1718 >> 60 == 15)
                                                          {
                                                            *(_OWORD *)(v1642 + 88) = *(_OWORD *)v1717;
                                                          }
                                                          else
                                                          {
                                                            v1723 = *v1717;
                                                            sub_1AD0040A0(*v1717, v1718);
                                                            *(_QWORD *)(v1642 + 88) = v1723;
                                                            *(_QWORD *)(v1642 + 96) = v1718;
                                                          }
                                                        }
LABEL_1262:
                                                        v1727 = *(_QWORD *)(v1643 + 112);
                                                        *(_QWORD *)(v1642 + 104) = *(_QWORD *)(v1643 + 104);
                                                        *(_QWORD *)(v1642 + 112) = v1727;
                                                        swift_retain();
                                                        swift_release();
                                                        v1728 = (uint64_t *)(v1643 + 120);
                                                        v1729 = *(_QWORD *)(v1643 + 128);
                                                        if (*(_QWORD *)(v1642 + 128) >> 60 == 15)
                                                        {
                                                          if (v1729 >> 60 != 15)
                                                          {
                                                            v1730 = *v1728;
                                                            sub_1AD0040A0(*v1728, *(_QWORD *)(v1643 + 128));
                                                            *(_QWORD *)(v1642 + 120) = v1730;
                                                            *(_QWORD *)(v1642 + 128) = v1729;
                                                            goto LABEL_1269;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if (v1729 >> 60 != 15)
                                                          {
                                                            v1731 = *v1728;
                                                            sub_1AD0040A0(*v1728, *(_QWORD *)(v1643 + 128));
                                                            v1732 = *(_QWORD *)(v1642 + 120);
                                                            v1733 = *(_QWORD *)(v1642 + 128);
                                                            *(_QWORD *)(v1642 + 120) = v1731;
                                                            *(_QWORD *)(v1642 + 128) = v1729;
                                                            sub_1AD00412C(v1732, v1733);
LABEL_1269:
                                                            v1734 = *(_QWORD *)(v1643 + 144);
                                                            *(_QWORD *)(v1642 + 136) = *(_QWORD *)(v1643 + 136);
                                                            *(_QWORD *)(v1642 + 144) = v1734;
                                                            swift_retain();
                                                            swift_release();
                                                            v1735 = (uint64_t *)(v1643 + 152);
                                                            v1736 = *(_QWORD *)(v1643 + 160);
                                                            v1737 = v1736 & 0xF000000000000000;
                                                            if (*(_QWORD *)(v1642 + 160) >> 60 == 11)
                                                            {
                                                              if (v1737 == 0xB000000000000000)
                                                                goto LABEL_1279;
LABEL_1275:
                                                              if (v1736 >> 60 != 15)
                                                              {
                                                                v1738 = *v1735;
                                                                sub_1AD0040A0(*v1735, *(_QWORD *)(v1643 + 160));
                                                                *(_QWORD *)(v1642 + 152) = v1738;
                                                                *(_QWORD *)(v1642 + 160) = v1736;
                                                                goto LABEL_1280;
                                                              }
                                                              goto LABEL_1279;
                                                            }
                                                            if (v1737 == 0xB000000000000000)
                                                            {
                                                              sub_1AD009758(v1642 + 152, &qword_1ED2E3250);
                                                            }
                                                            else
                                                            {
                                                              if (*(_QWORD *)(v1642 + 160) >> 60 == 15)
                                                                goto LABEL_1275;
                                                              if (v1736 >> 60 != 15)
                                                              {
                                                                v1810 = *v1735;
                                                                sub_1AD0040A0(*v1735, *(_QWORD *)(v1643 + 160));
                                                                v1811 = *(_QWORD *)(v1642 + 152);
                                                                v1812 = *(_QWORD *)(v1642 + 160);
                                                                *(_QWORD *)(v1642 + 152) = v1810;
                                                                *(_QWORD *)(v1642 + 160) = v1736;
                                                                sub_1AD00412C(v1811, v1812);
LABEL_1280:
                                                                v1739 = (_OWORD *)(v1642 + 168);
                                                                v1741 = (_OWORD *)(v1643 + 168);
                                                                v1740 = *(_QWORD *)(v1643 + 168);
                                                                if (!*(_QWORD *)(v1642 + 168))
                                                                {
                                                                  if (v1740)
                                                                  {
                                                                    v1746 = *(_QWORD *)(v1643 + 176);
                                                                    *(_QWORD *)(v1642 + 168) = v1740;
                                                                    *(_QWORD *)(v1642 + 176) = v1746;
                                                                    v1747 = (uint64_t *)(v1643 + 184);
                                                                    v1748 = *(_QWORD *)(v1643 + 192);
                                                                    swift_retain();
                                                                    if (v1748 >> 60 == 15)
                                                                    {
                                                                      *(_OWORD *)(v1642 + 184) = *(_OWORD *)v1747;
                                                                    }
                                                                    else
                                                                    {
                                                                      v1755 = *v1747;
                                                                      sub_1AD0040A0(*v1747, v1748);
                                                                      *(_QWORD *)(v1642 + 184) = v1755;
                                                                      *(_QWORD *)(v1642 + 192) = v1748;
                                                                    }
                                                                    *(_DWORD *)(v1642 + 200) = *(_DWORD *)(v1643 + 200);
                                                                    v1756 = *(_QWORD *)(v1643 + 216);
                                                                    *(_QWORD *)(v1642 + 208) = *(_QWORD *)(v1643 + 208);
                                                                    *(_QWORD *)(v1642 + 216) = v1756;
                                                                    v1757 = (uint64_t *)(v1643 + 224);
                                                                    v1758 = *(_QWORD *)(v1643 + 232);
                                                                    swift_retain();
                                                                    if (v1758 >> 60 == 15)
                                                                    {
                                                                      *(_OWORD *)(v1642 + 224) = *(_OWORD *)v1757;
                                                                    }
                                                                    else
                                                                    {
                                                                      v1759 = *v1757;
                                                                      sub_1AD0040A0(*v1757, v1758);
                                                                      *(_QWORD *)(v1642 + 224) = v1759;
                                                                      *(_QWORD *)(v1642 + 232) = v1758;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    *v1739 = *v1741;
                                                                    v1752 = *(_OWORD *)(v1643 + 184);
                                                                    v1753 = *(_OWORD *)(v1643 + 200);
                                                                    v1754 = *(_OWORD *)(v1643 + 216);
                                                                    *(_QWORD *)(v1642 + 232) = *(_QWORD *)(v1643 + 232);
                                                                    *(_OWORD *)(v1642 + 200) = v1753;
                                                                    *(_OWORD *)(v1642 + 216) = v1754;
                                                                    *(_OWORD *)(v1642 + 184) = v1752;
                                                                  }
                                                                  goto LABEL_1305;
                                                                }
                                                                if (!v1740)
                                                                {
                                                                  sub_1AD0AEC8C((uint64_t *)(v1642 + 168));
                                                                  *v1739 = *v1741;
                                                                  v1750 = *(_OWORD *)(v1643 + 200);
                                                                  v1749 = *(_OWORD *)(v1643 + 216);
                                                                  v1751 = *(_OWORD *)(v1643 + 184);
                                                                  *(_QWORD *)(v1642 + 232) = *(_QWORD *)(v1643 + 232);
                                                                  *(_OWORD *)(v1642 + 200) = v1750;
                                                                  *(_OWORD *)(v1642 + 216) = v1749;
                                                                  *(_OWORD *)(v1642 + 184) = v1751;
                                                                  goto LABEL_1305;
                                                                }
                                                                v1742 = *(_QWORD *)(v1643 + 176);
                                                                *(_QWORD *)(v1642 + 168) = v1740;
                                                                *(_QWORD *)(v1642 + 176) = v1742;
                                                                swift_retain();
                                                                swift_release();
                                                                v1743 = (uint64_t *)(v1643 + 184);
                                                                v1744 = *(_QWORD *)(v1643 + 192);
                                                                if (*(_QWORD *)(v1642 + 192) >> 60 == 15)
                                                                {
                                                                  if (v1744 >> 60 != 15)
                                                                  {
                                                                    v1745 = *v1743;
                                                                    sub_1AD0040A0(*v1743, *(_QWORD *)(v1643 + 192));
                                                                    *(_QWORD *)(v1642 + 184) = v1745;
                                                                    *(_QWORD *)(v1642 + 192) = v1744;
LABEL_1298:
                                                                    *(_DWORD *)(v1642 + 200) = *(_DWORD *)(v1643 + 200);
                                                                    v1763 = *(_QWORD *)(v1643 + 216);
                                                                    *(_QWORD *)(v1642 + 208) = *(_QWORD *)(v1643 + 208);
                                                                    *(_QWORD *)(v1642 + 216) = v1763;
                                                                    swift_retain();
                                                                    swift_release();
                                                                    v1764 = (uint64_t *)(v1643 + 224);
                                                                    v1765 = *(_QWORD *)(v1643 + 232);
                                                                    if (*(_QWORD *)(v1642 + 232) >> 60 == 15)
                                                                    {
                                                                      if (v1765 >> 60 != 15)
                                                                      {
                                                                        v1766 = *v1764;
                                                                        sub_1AD0040A0(*v1764, *(_QWORD *)(v1643 + 232));
                                                                        *(_QWORD *)(v1642 + 224) = v1766;
                                                                        *(_QWORD *)(v1642 + 232) = v1765;
                                                                        goto LABEL_1305;
                                                                      }
                                                                      goto LABEL_1303;
                                                                    }
                                                                    if (v1765 >> 60 == 15)
                                                                    {
                                                                      sub_1AD007EC0(v1642 + 224);
LABEL_1303:
                                                                      *(_OWORD *)(v1642 + 224) = *(_OWORD *)v1764;
                                                                      goto LABEL_1305;
                                                                    }
                                                                    v1767 = *v1764;
                                                                    sub_1AD0040A0(*v1764, *(_QWORD *)(v1643 + 232));
                                                                    v1768 = *(_QWORD *)(v1642 + 224);
                                                                    v1769 = *(_QWORD *)(v1642 + 232);
                                                                    *(_QWORD *)(v1642 + 224) = v1767;
                                                                    *(_QWORD *)(v1642 + 232) = v1765;
                                                                    sub_1AD00412C(v1768, v1769);
LABEL_1305:
                                                                    *(_QWORD *)(v1642 + 240) = *(_QWORD *)(v1643 + 240);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    v1770 = *(_QWORD *)(v1643 + 256);
                                                                    *(_QWORD *)(v1642 + 248) = *(_QWORD *)(v1643 + 248);
                                                                    *(_QWORD *)(v1642 + 256) = v1770;
                                                                    swift_retain();
                                                                    swift_release();
                                                                    v1771 = (uint64_t *)(v1643 + 264);
                                                                    v1772 = *(_QWORD *)(v1643 + 272);
                                                                    v1773 = v1772 & 0xF000000000000000;
                                                                    if (*(_QWORD *)(v1642 + 272) >> 60 == 11)
                                                                    {
                                                                      if (v1773 == 0xB000000000000000)
                                                                        goto LABEL_1315;
LABEL_1311:
                                                                      if (v1772 >> 60 != 15)
                                                                      {
                                                                        v1774 = *v1771;
                                                                        sub_1AD0040A0(*v1771, *(_QWORD *)(v1643 + 272));
                                                                        *(_QWORD *)(v1642 + 264) = v1774;
                                                                        *(_QWORD *)(v1642 + 272) = v1772;
                                                                        goto LABEL_1316;
                                                                      }
                                                                      goto LABEL_1315;
                                                                    }
                                                                    if (v1773 == 0xB000000000000000)
                                                                    {
                                                                      sub_1AD009758(v1642 + 264, &qword_1ED2E3250);
                                                                    }
                                                                    else
                                                                    {
                                                                      if (*(_QWORD *)(v1642 + 272) >> 60 == 15)
                                                                        goto LABEL_1311;
                                                                      if (v1772 >> 60 != 15)
                                                                      {
                                                                        v1813 = *v1771;
                                                                        sub_1AD0040A0(*v1771, *(_QWORD *)(v1643 + 272));
                                                                        v1814 = *(_QWORD *)(v1642 + 264);
                                                                        v1815 = *(_QWORD *)(v1642 + 272);
                                                                        *(_QWORD *)(v1642 + 264) = v1813;
                                                                        *(_QWORD *)(v1642 + 272) = v1772;
                                                                        sub_1AD00412C(v1814, v1815);
LABEL_1316:
                                                                        v1775 = v1644;
                                                                        v1776 = *(int *)(v1644 + 24);
                                                                        v1777 = (_QWORD *)(v1642 + v1776);
                                                                        v1778 = v1643 + v1776;
                                                                        v1779 = *(_QWORD *)(v1643 + v1776 + 8);
                                                                        *v1777 = *(_QWORD *)(v1643 + v1776);
                                                                        v1777[1] = v1779;
                                                                        swift_retain();
                                                                        swift_release();
                                                                        v1780 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                                       + 28);
                                                                        v1781 = (char *)v1777 + v1780;
                                                                        v1782 = (char *)(v1778 + v1780);
                                                                        v1783 = sub_1AD63AF28();
                                                                        v1784 = *(_QWORD *)(v1783 - 8);
                                                                        v1785 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v1784 + 48);
                                                                        v1786 = v1785(v1781, 1, v1783);
                                                                        v1787 = v1785(v1782, 1, v1783);
                                                                        if (v1786)
                                                                        {
                                                                          if (!v1787)
                                                                          {
                                                                            (*(void (**)(char *, char *, uint64_t))(v1784 + 16))(v1781, v1782, v1783);
                                                                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1784 + 56))(v1781, 0, 1, v1783);
                                                                            goto LABEL_1322;
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          if (!v1787)
                                                                          {
                                                                            (*(void (**)(char *, char *, uint64_t))(v1784 + 24))(v1781, v1782, v1783);
LABEL_1322:
                                                                            v1789 = *(int *)(v1775 + 28);
                                                                            v1790 = (_QWORD *)(v1642 + v1789);
                                                                            v1791 = v1643 + v1789;
                                                                            v1792 = *(_QWORD *)(v1643 + v1789 + 8);
                                                                            *v1790 = *(_QWORD *)(v1643 + v1789);
                                                                            v1790[1] = v1792;
                                                                            swift_retain();
                                                                            swift_release();
                                                                            v1793 = *(_QWORD *)(v1791 + 24);
                                                                            a1 = v1921;
                                                                            v1587 = v1890;
                                                                            if (v1790[3] == 1)
                                                                            {
                                                                              v4 = v1916;
                                                                              v1624 = v1900;
                                                                              if (v1793 != 1)
                                                                              {
                                                                                v1790[2] = *(_QWORD *)(v1791 + 16);
                                                                                v1790[3] = *(_QWORD *)(v1791 + 24);
                                                                                swift_bridgeObjectRetain();
                                                                                goto LABEL_1329;
                                                                              }
                                                                            }
                                                                            else
                                                                            {
                                                                              v4 = v1916;
                                                                              v1624 = v1900;
                                                                              if (v1793 != 1)
                                                                              {
                                                                                v1790[2] = *(_QWORD *)(v1791 + 16);
                                                                                v1790[3] = *(_QWORD *)(v1791 + 24);
                                                                                swift_bridgeObjectRetain();
                                                                                swift_bridgeObjectRelease();
                                                                                goto LABEL_1329;
                                                                              }
                                                                              sub_1AD009758((uint64_t)(v1790 + 2), &qword_1ED2E3198);
                                                                            }
                                                                            *((_OWORD *)v1790 + 1) = *(_OWORD *)(v1791 + 16);
                                                                            goto LABEL_1329;
                                                                          }
                                                                          (*(void (**)(char *, uint64_t))(v1784 + 8))(v1781, v1783);
                                                                        }
                                                                        v1788 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                        memcpy(v1781, v1782, *(_QWORD *)(*(_QWORD *)(v1788 - 8) + 64));
                                                                        goto LABEL_1322;
                                                                      }
                                                                      sub_1AD007EC0(v1642 + 264);
                                                                    }
LABEL_1315:
                                                                    *(_OWORD *)(v1642 + 264) = *(_OWORD *)v1771;
                                                                    goto LABEL_1316;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  if (v1744 >> 60 != 15)
                                                                  {
                                                                    v1760 = *v1743;
                                                                    sub_1AD0040A0(*v1743, *(_QWORD *)(v1643 + 192));
                                                                    v1761 = *(_QWORD *)(v1642 + 184);
                                                                    v1762 = *(_QWORD *)(v1642 + 192);
                                                                    *(_QWORD *)(v1642 + 184) = v1760;
                                                                    *(_QWORD *)(v1642 + 192) = v1744;
                                                                    sub_1AD00412C(v1761, v1762);
                                                                    goto LABEL_1298;
                                                                  }
                                                                  sub_1AD007EC0(v1642 + 184);
                                                                }
                                                                *(_OWORD *)(v1642 + 184) = *(_OWORD *)v1743;
                                                                goto LABEL_1298;
                                                              }
                                                              sub_1AD007EC0(v1642 + 152);
                                                            }
LABEL_1279:
                                                            *(_OWORD *)(v1642 + 152) = *(_OWORD *)v1735;
                                                            goto LABEL_1280;
                                                          }
                                                          sub_1AD007EC0(v1642 + 120);
                                                        }
                                                        *(_OWORD *)(v1642 + 120) = *(_OWORD *)v1728;
                                                        goto LABEL_1269;
                                                      }
                                                      sub_1AD007EC0(v1642 + 40);
                                                    }
LABEL_1245:
                                                    *(_OWORD *)(v1642 + 40) = *(_OWORD *)v1660;
                                                    goto LABEL_1246;
                                                  }
                                                  sub_1AD007EC0((uint64_t)v1634);
                                                }
                                                *(_OWORD *)v1634 = *(_OWORD *)v1635;
                                                goto LABEL_1195;
                                              }
                                              sub_1AD007EC0((uint64_t)v1626);
                                            }
                                            *(_OWORD *)v1626 = *(_OWORD *)v1627;
                                            goto LABEL_1188;
                                          }
                                          sub_1AD007EC0((uint64_t)v1617);
                                        }
                                        *(_OWORD *)v1617 = *(_OWORD *)v1618;
                                        goto LABEL_1181;
                                      }
                                      sub_1AD007EC0((uint64_t)v1609);
                                    }
                                    *(_OWORD *)v1609 = *(_OWORD *)v1610;
                                    goto LABEL_1174;
                                  }
                                  sub_1AD007EC0((uint64_t)v1601);
                                }
                                *(_OWORD *)v1601 = *(_OWORD *)v1602;
                                goto LABEL_1167;
                              }
                              sub_1AD007EC0(v1523 + 208);
                            }
                            *(_OWORD *)(v1523 + 208) = *(_OWORD *)v1594;
                            goto LABEL_1160;
                          }
LABEL_1140:
                          *(_QWORD *)(v1523 + 176) = *((_QWORD *)v1524 + 22);
                          *(_QWORD *)(v1523 + 184) = *((_QWORD *)v1524 + 23);
                          swift_bridgeObjectRetain();
                          goto LABEL_1152;
                        }
                        sub_1AD009758(v1523 + 48, &qword_1ED2E3198);
                      }
                      *(_OWORD *)(v1523 + 48) = *((_OWORD *)v1524 + 3);
                      goto LABEL_1130;
                    }
                    sub_1AD009758(v1523 + 16, &qword_1ED2E3198);
                  }
                  *(_OWORD *)(v1523 + 16) = *((_OWORD *)v1524 + 1);
                  goto LABEL_1123;
                }
                sub_1AD3114A8((_QWORD *)v1523);
                v1531 = *((_OWORD *)v1524 + 1);
                *(_OWORD *)v1523 = *(_OWORD *)v1524;
                *(_OWORD *)(v1523 + 16) = v1531;
                v1532 = *((_OWORD *)v1524 + 5);
                v1534 = *((_OWORD *)v1524 + 2);
                v1533 = *((_OWORD *)v1524 + 3);
                *(_OWORD *)(v1523 + 64) = *((_OWORD *)v1524 + 4);
                *(_OWORD *)(v1523 + 80) = v1532;
                *(_OWORD *)(v1523 + 32) = v1534;
                *(_OWORD *)(v1523 + 48) = v1533;
                v1535 = *((_OWORD *)v1524 + 9);
                v1537 = *((_OWORD *)v1524 + 6);
                v1536 = *((_OWORD *)v1524 + 7);
                *(_OWORD *)(v1523 + 128) = *((_OWORD *)v1524 + 8);
                *(_OWORD *)(v1523 + 144) = v1535;
                *(_OWORD *)(v1523 + 96) = v1537;
                *(_OWORD *)(v1523 + 112) = v1536;
                v1538 = *((_OWORD *)v1524 + 13);
                v1540 = *((_OWORD *)v1524 + 10);
                v1539 = *((_OWORD *)v1524 + 11);
                *(_OWORD *)(v1523 + 192) = *((_OWORD *)v1524 + 12);
                *(_OWORD *)(v1523 + 208) = v1538;
                *(_OWORD *)(v1523 + 160) = v1540;
                *(_OWORD *)(v1523 + 176) = v1539;
              }
              else if (v1526)
              {
                v1529 = *((_QWORD *)v1524 + 1);
                *(_QWORD *)v1523 = v1526;
                *(_QWORD *)(v1523 + 8) = v1529;
                v1530 = *((_QWORD *)v1524 + 3);
                swift_retain();
                if (v1530 == 1)
                {
                  *(_OWORD *)(v1523 + 16) = *((_OWORD *)v1524 + 1);
                }
                else
                {
                  *(_QWORD *)(v1523 + 16) = *((_QWORD *)v1524 + 2);
                  *(_QWORD *)(v1523 + 24) = *((_QWORD *)v1524 + 3);
                  swift_bridgeObjectRetain();
                }
                v1551 = *((_QWORD *)v1524 + 5);
                *(_QWORD *)(v1523 + 32) = *((_QWORD *)v1524 + 4);
                *(_QWORD *)(v1523 + 40) = v1551;
                v1552 = *((_QWORD *)v1524 + 7);
                swift_retain();
                if (v1552 == 1)
                {
                  *(_OWORD *)(v1523 + 48) = *((_OWORD *)v1524 + 3);
                }
                else
                {
                  *(_QWORD *)(v1523 + 48) = *((_QWORD *)v1524 + 6);
                  *(_QWORD *)(v1523 + 56) = *((_QWORD *)v1524 + 7);
                  swift_bridgeObjectRetain();
                }
                v1553 = *((_QWORD *)v1524 + 8);
                if (v1553)
                {
                  v1554 = *((_QWORD *)v1524 + 9);
                  *(_QWORD *)(v1523 + 64) = v1553;
                  *(_QWORD *)(v1523 + 72) = v1554;
                  *(_QWORD *)(v1523 + 80) = *((_QWORD *)v1524 + 10);
                  *(_QWORD *)(v1523 + 88) = *((_QWORD *)v1524 + 11);
                  v1555 = *((_QWORD *)v1524 + 13);
                  *(_QWORD *)(v1523 + 96) = *((_QWORD *)v1524 + 12);
                  *(_QWORD *)(v1523 + 104) = v1555;
                  *(_QWORD *)(v1523 + 112) = *((_QWORD *)v1524 + 14);
                  *(_QWORD *)(v1523 + 120) = *((_QWORD *)v1524 + 15);
                  v1556 = *((_QWORD *)v1524 + 17);
                  *(_QWORD *)(v1523 + 128) = *((_QWORD *)v1524 + 16);
                  *(_QWORD *)(v1523 + 136) = v1556;
                  *(_QWORD *)(v1523 + 144) = *((_QWORD *)v1524 + 18);
                  *(_QWORD *)(v1523 + 152) = *((_QWORD *)v1524 + 19);
                  v1557 = *((_QWORD *)v1524 + 21);
                  *(_QWORD *)(v1523 + 160) = *((_QWORD *)v1524 + 20);
                  *(_QWORD *)(v1523 + 168) = v1557;
                  v1881 = *((_QWORD *)v1524 + 23);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  if (v1881 == 1)
                  {
                    *(_OWORD *)(v1523 + 176) = *((_OWORD *)v1524 + 11);
                  }
                  else
                  {
                    *(_QWORD *)(v1523 + 176) = *((_QWORD *)v1524 + 22);
                    *(_QWORD *)(v1523 + 184) = *((_QWORD *)v1524 + 23);
                    swift_bridgeObjectRetain();
                  }
                  *(_QWORD *)(v1523 + 192) = *((_QWORD *)v1524 + 24);
                }
                else
                {
                  *(_OWORD *)(v1523 + 64) = *((_OWORD *)v1524 + 4);
                  v1578 = *((_OWORD *)v1524 + 5);
                  v1579 = *((_OWORD *)v1524 + 6);
                  v1580 = *((_OWORD *)v1524 + 8);
                  *(_OWORD *)(v1523 + 112) = *((_OWORD *)v1524 + 7);
                  *(_OWORD *)(v1523 + 128) = v1580;
                  *(_OWORD *)(v1523 + 80) = v1578;
                  *(_OWORD *)(v1523 + 96) = v1579;
                  v1581 = *((_OWORD *)v1524 + 9);
                  v1582 = *((_OWORD *)v1524 + 10);
                  v1583 = *((_OWORD *)v1524 + 11);
                  *(_QWORD *)(v1523 + 192) = *((_QWORD *)v1524 + 24);
                  *(_OWORD *)(v1523 + 160) = v1582;
                  *(_OWORD *)(v1523 + 176) = v1583;
                  *(_OWORD *)(v1523 + 144) = v1581;
                }
                *(_BYTE *)(v1523 + 200) = v1524[200];
                v1584 = (uint64_t *)(v1524 + 208);
                v1585 = *((_QWORD *)v1524 + 27);
                if (v1585 >> 60 == 15)
                {
                  *(_OWORD *)(v1523 + 208) = *(_OWORD *)v1584;
                }
                else
                {
                  v1586 = *v1584;
                  sub_1AD0040A0(*v1584, *((_QWORD *)v1524 + 27));
                  *(_QWORD *)(v1523 + 208) = v1586;
                  *(_QWORD *)(v1523 + 216) = v1585;
                }
              }
              else
              {
                v1541 = *((_OWORD *)v1524 + 1);
                *(_OWORD *)v1523 = *(_OWORD *)v1524;
                *(_OWORD *)(v1523 + 16) = v1541;
                v1542 = *((_OWORD *)v1524 + 2);
                v1543 = *((_OWORD *)v1524 + 3);
                v1544 = *((_OWORD *)v1524 + 5);
                *(_OWORD *)(v1523 + 64) = *((_OWORD *)v1524 + 4);
                *(_OWORD *)(v1523 + 80) = v1544;
                *(_OWORD *)(v1523 + 32) = v1542;
                *(_OWORD *)(v1523 + 48) = v1543;
                v1545 = *((_OWORD *)v1524 + 6);
                v1546 = *((_OWORD *)v1524 + 7);
                v1547 = *((_OWORD *)v1524 + 9);
                *(_OWORD *)(v1523 + 128) = *((_OWORD *)v1524 + 8);
                *(_OWORD *)(v1523 + 144) = v1547;
                *(_OWORD *)(v1523 + 96) = v1545;
                *(_OWORD *)(v1523 + 112) = v1546;
                v1548 = *((_OWORD *)v1524 + 10);
                v1549 = *((_OWORD *)v1524 + 11);
                v1550 = *((_OWORD *)v1524 + 13);
                *(_OWORD *)(v1523 + 192) = *((_OWORD *)v1524 + 12);
                *(_OWORD *)(v1523 + 208) = v1550;
                *(_OWORD *)(v1523 + 160) = v1548;
                *(_OWORD *)(v1523 + 176) = v1549;
              }
              v1587 = v1890;
              goto LABEL_1160;
            }
            (*(void (**)(void *, uint64_t))(v1516 + 8))(v1513, v1515);
          }
          v1520 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
          memcpy(v1513, v1514, *(_QWORD *)(*(_QWORD *)(v1520 - 8) + 64));
          goto LABEL_1101;
        }
LABEL_1051:
        *(_QWORD *)(v1430 + 112) = *((_QWORD *)v1431 + 14);
        *(_QWORD *)(v1430 + 120) = *((_QWORD *)v1431 + 15);
        swift_bridgeObjectRetain();
        goto LABEL_1094;
      }
      sub_1AD009758((uint64_t)(v1324 + 6), &qword_1ED2E3198);
    }
    *((_OWORD *)v1324 + 3) = *((_OWORD *)v1325 + 3);
    goto LABEL_1042;
  }
  if (v1330)
  {
LABEL_984:
    v1334 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v1324, v1325, *(_QWORD *)(*(_QWORD *)(v1334 - 8) + 64));
    goto LABEL_1337;
  }
  v1331 = v1325[1];
  *v1324 = *v1325;
  v1324[1] = v1331;
  v1324[2] = v1325[2];
  v1324[3] = v1325[3];
  v1332 = v1325[5];
  v1324[4] = v1325[4];
  v1324[5] = v1332;
  v1333 = v1325[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v1880 = v1327;
  if (v1333 == 1)
  {
    *((_OWORD *)v1324 + 3) = *((_OWORD *)v1325 + 3);
  }
  else
  {
    v1324[6] = v1325[6];
    v1324[7] = v1325[7];
    swift_bridgeObjectRetain();
  }
  v1905 = a3;
  v1915 = v4;
  v1920 = a1;
  v1894 = (int *)v1326;
  v1899 = v1324;
  v1338 = *(int *)(v1326 + 24);
  v1339 = (char *)v1324 + v1338;
  v1340 = (char *)v1325 + v1338;
  v1341 = *(_QWORD *)((char *)v1325 + v1338);
  if (v1341)
  {
    v1342 = v1325;
    v1343 = *((_QWORD *)v1340 + 1);
    *(_QWORD *)v1339 = v1341;
    *((_QWORD *)v1339 + 1) = v1343;
    *((_QWORD *)v1339 + 2) = *((_QWORD *)v1340 + 2);
    *((_QWORD *)v1339 + 3) = *((_QWORD *)v1340 + 3);
    v1344 = *((_QWORD *)v1340 + 5);
    *((_QWORD *)v1339 + 4) = *((_QWORD *)v1340 + 4);
    *((_QWORD *)v1339 + 5) = v1344;
    *((_QWORD *)v1339 + 6) = *((_QWORD *)v1340 + 6);
    *((_QWORD *)v1339 + 7) = *((_QWORD *)v1340 + 7);
    v1345 = *((_QWORD *)v1340 + 9);
    *((_QWORD *)v1339 + 8) = *((_QWORD *)v1340 + 8);
    *((_QWORD *)v1339 + 9) = v1345;
    *((_QWORD *)v1339 + 10) = *((_QWORD *)v1340 + 10);
    *((_QWORD *)v1339 + 11) = *((_QWORD *)v1340 + 11);
    v1346 = *((_QWORD *)v1340 + 13);
    *((_QWORD *)v1339 + 12) = *((_QWORD *)v1340 + 12);
    *((_QWORD *)v1339 + 13) = v1346;
    v1347 = *((_QWORD *)v1340 + 15);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v1347 == 1)
    {
      *((_OWORD *)v1339 + 7) = *((_OWORD *)v1340 + 7);
    }
    else
    {
      *((_QWORD *)v1339 + 14) = *((_QWORD *)v1340 + 14);
      *((_QWORD *)v1339 + 15) = *((_QWORD *)v1340 + 15);
      swift_bridgeObjectRetain();
    }
    *((_QWORD *)v1339 + 16) = *((_QWORD *)v1340 + 16);
    v1325 = v1342;
  }
  else
  {
    *(_OWORD *)v1339 = *(_OWORD *)v1340;
    v1348 = *((_OWORD *)v1340 + 1);
    v1349 = *((_OWORD *)v1340 + 2);
    v1350 = *((_OWORD *)v1340 + 4);
    *((_OWORD *)v1339 + 3) = *((_OWORD *)v1340 + 3);
    *((_OWORD *)v1339 + 4) = v1350;
    *((_OWORD *)v1339 + 1) = v1348;
    *((_OWORD *)v1339 + 2) = v1349;
    v1351 = *((_OWORD *)v1340 + 5);
    v1352 = *((_OWORD *)v1340 + 6);
    v1353 = *((_OWORD *)v1340 + 7);
    *((_QWORD *)v1339 + 16) = *((_QWORD *)v1340 + 16);
    *((_OWORD *)v1339 + 6) = v1352;
    *((_OWORD *)v1339 + 7) = v1353;
    *((_OWORD *)v1339 + 5) = v1351;
  }
  v1354 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v1355 = v1354[5];
  v1356 = &v1339[v1355];
  v1357 = &v1340[v1355];
  v1358 = sub_1AD63AE2C();
  v1359 = *(_QWORD *)(v1358 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1359 + 48))(v1357, 1, v1358))
  {
    v1360 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v1356, v1357, *(_QWORD *)(*(_QWORD *)(v1360 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1359 + 16))(v1356, v1357, v1358);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1359 + 56))(v1356, 0, 1, v1358);
  }
  v1361 = v1354[6];
  v1362 = &v1339[v1361];
  v1363 = &v1340[v1361];
  v1364 = *(_QWORD *)&v1340[v1361];
  if (v1364)
  {
    v1365 = *((_QWORD *)v1363 + 1);
    *(_QWORD *)v1362 = v1364;
    *((_QWORD *)v1362 + 1) = v1365;
    v1366 = *((_QWORD *)v1363 + 3);
    swift_retain();
    if (v1366 == 1)
    {
      *((_OWORD *)v1362 + 1) = *((_OWORD *)v1363 + 1);
    }
    else
    {
      *((_QWORD *)v1362 + 2) = *((_QWORD *)v1363 + 2);
      *((_QWORD *)v1362 + 3) = *((_QWORD *)v1363 + 3);
      swift_bridgeObjectRetain();
    }
    v1377 = *((_QWORD *)v1363 + 5);
    *((_QWORD *)v1362 + 4) = *((_QWORD *)v1363 + 4);
    *((_QWORD *)v1362 + 5) = v1377;
    v1378 = *((_QWORD *)v1363 + 7);
    swift_retain();
    if (v1378 == 1)
    {
      *((_OWORD *)v1362 + 3) = *((_OWORD *)v1363 + 3);
    }
    else
    {
      *((_QWORD *)v1362 + 6) = *((_QWORD *)v1363 + 6);
      *((_QWORD *)v1362 + 7) = *((_QWORD *)v1363 + 7);
      swift_bridgeObjectRetain();
    }
    v1379 = *((_QWORD *)v1363 + 8);
    if (v1379)
    {
      v1380 = *((_QWORD *)v1363 + 9);
      *((_QWORD *)v1362 + 8) = v1379;
      *((_QWORD *)v1362 + 9) = v1380;
      *((_QWORD *)v1362 + 10) = *((_QWORD *)v1363 + 10);
      *((_QWORD *)v1362 + 11) = *((_QWORD *)v1363 + 11);
      v1381 = *((_QWORD *)v1363 + 13);
      *((_QWORD *)v1362 + 12) = *((_QWORD *)v1363 + 12);
      *((_QWORD *)v1362 + 13) = v1381;
      *((_QWORD *)v1362 + 14) = *((_QWORD *)v1363 + 14);
      *((_QWORD *)v1362 + 15) = *((_QWORD *)v1363 + 15);
      v1382 = *((_QWORD *)v1363 + 17);
      *((_QWORD *)v1362 + 16) = *((_QWORD *)v1363 + 16);
      *((_QWORD *)v1362 + 17) = v1382;
      *((_QWORD *)v1362 + 18) = *((_QWORD *)v1363 + 18);
      *((_QWORD *)v1362 + 19) = *((_QWORD *)v1363 + 19);
      v1383 = *((_QWORD *)v1363 + 21);
      *((_QWORD *)v1362 + 20) = *((_QWORD *)v1363 + 20);
      *((_QWORD *)v1362 + 21) = v1383;
      v1872 = *((_QWORD *)v1363 + 23);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v1872 == 1)
      {
        *((_OWORD *)v1362 + 11) = *((_OWORD *)v1363 + 11);
      }
      else
      {
        *((_QWORD *)v1362 + 22) = *((_QWORD *)v1363 + 22);
        *((_QWORD *)v1362 + 23) = *((_QWORD *)v1363 + 23);
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v1362 + 24) = *((_QWORD *)v1363 + 24);
    }
    else
    {
      *((_OWORD *)v1362 + 4) = *((_OWORD *)v1363 + 4);
      v1384 = *((_OWORD *)v1363 + 5);
      v1385 = *((_OWORD *)v1363 + 6);
      v1386 = *((_OWORD *)v1363 + 8);
      *((_OWORD *)v1362 + 7) = *((_OWORD *)v1363 + 7);
      *((_OWORD *)v1362 + 8) = v1386;
      *((_OWORD *)v1362 + 5) = v1384;
      *((_OWORD *)v1362 + 6) = v1385;
      v1387 = *((_OWORD *)v1363 + 9);
      v1388 = *((_OWORD *)v1363 + 10);
      v1389 = *((_OWORD *)v1363 + 11);
      *((_QWORD *)v1362 + 24) = *((_QWORD *)v1363 + 24);
      *((_OWORD *)v1362 + 10) = v1388;
      *((_OWORD *)v1362 + 11) = v1389;
      *((_OWORD *)v1362 + 9) = v1387;
    }
    v1362[200] = v1363[200];
    v1390 = (uint64_t *)(v1363 + 208);
    v1391 = *((_QWORD *)v1363 + 27);
    if (v1391 >> 60 == 15)
    {
      *((_OWORD *)v1362 + 13) = *(_OWORD *)v1390;
    }
    else
    {
      v1392 = *v1390;
      sub_1AD0040A0(*v1390, v1391);
      *((_QWORD *)v1362 + 26) = v1392;
      *((_QWORD *)v1362 + 27) = v1391;
    }
  }
  else
  {
    v1367 = *((_OWORD *)v1363 + 1);
    *(_OWORD *)v1362 = *(_OWORD *)v1363;
    *((_OWORD *)v1362 + 1) = v1367;
    v1368 = *((_OWORD *)v1363 + 2);
    v1369 = *((_OWORD *)v1363 + 3);
    v1370 = *((_OWORD *)v1363 + 5);
    *((_OWORD *)v1362 + 4) = *((_OWORD *)v1363 + 4);
    *((_OWORD *)v1362 + 5) = v1370;
    *((_OWORD *)v1362 + 2) = v1368;
    *((_OWORD *)v1362 + 3) = v1369;
    v1371 = *((_OWORD *)v1363 + 6);
    v1372 = *((_OWORD *)v1363 + 7);
    v1373 = *((_OWORD *)v1363 + 9);
    *((_OWORD *)v1362 + 8) = *((_OWORD *)v1363 + 8);
    *((_OWORD *)v1362 + 9) = v1373;
    *((_OWORD *)v1362 + 6) = v1371;
    *((_OWORD *)v1362 + 7) = v1372;
    v1374 = *((_OWORD *)v1363 + 10);
    v1375 = *((_OWORD *)v1363 + 11);
    v1376 = *((_OWORD *)v1363 + 13);
    *((_OWORD *)v1362 + 12) = *((_OWORD *)v1363 + 12);
    *((_OWORD *)v1362 + 13) = v1376;
    *((_OWORD *)v1362 + 10) = v1374;
    *((_OWORD *)v1362 + 11) = v1375;
  }
  *(_QWORD *)&v1339[v1354[7]] = *(_QWORD *)&v1340[v1354[7]];
  v1393 = v1354[8];
  v1394 = &v1339[v1393];
  v1395 = &v1340[v1393];
  v1396 = *(_QWORD *)&v1340[v1393 + 8];
  swift_bridgeObjectRetain();
  if (v1396 >> 60 == 15)
  {
    *(_OWORD *)v1394 = *(_OWORD *)v1395;
  }
  else
  {
    v1397 = *(_QWORD *)v1395;
    sub_1AD0040A0(v1397, v1396);
    *(_QWORD *)v1394 = v1397;
    *((_QWORD *)v1394 + 1) = v1396;
  }
  v1398 = v1354[9];
  v1399 = &v1339[v1398];
  v1400 = &v1340[v1398];
  v1401 = *((_QWORD *)v1400 + 1);
  if (v1401 >> 60 == 15)
  {
    *(_OWORD *)v1399 = *(_OWORD *)v1400;
  }
  else
  {
    v1402 = *(_QWORD *)v1400;
    sub_1AD0040A0(*(_QWORD *)v1400, *((_QWORD *)v1400 + 1));
    *(_QWORD *)v1399 = v1402;
    *((_QWORD *)v1399 + 1) = v1401;
  }
  v1339[v1354[10]] = v1340[v1354[10]];
  v1339[v1354[11]] = v1340[v1354[11]];
  v1403 = v1354[12];
  v1404 = &v1339[v1403];
  v1405 = &v1340[v1403];
  v1406 = *((_QWORD *)v1405 + 1);
  if (v1406 >> 60 == 15)
  {
    *(_OWORD *)v1404 = *(_OWORD *)v1405;
  }
  else
  {
    v1407 = *(_QWORD *)v1405;
    sub_1AD0040A0(*(_QWORD *)v1405, *((_QWORD *)v1405 + 1));
    *(_QWORD *)v1404 = v1407;
    *((_QWORD *)v1404 + 1) = v1406;
  }
  *(_QWORD *)&v1339[v1354[13]] = *(_QWORD *)&v1340[v1354[13]];
  v1408 = v1894;
  v1409 = v1899;
  v1899[v1894[7]] = *((_BYTE *)v1325 + v1894[7]);
  v1899[v1894[8]] = *((_BYTE *)v1325 + v1894[8]);
  v1899[v1894[9]] = *((_BYTE *)v1325 + v1894[9]);
  v1899[v1894[10]] = *((_BYTE *)v1325 + v1894[10]);
  v1899[v1894[11]] = *((_BYTE *)v1325 + v1894[11]);
  v1899[v1894[12]] = *((_BYTE *)v1325 + v1894[12]);
  v1899[v1894[13]] = *((_BYTE *)v1325 + v1894[13]);
  v1899[v1894[14]] = *((_BYTE *)v1325 + v1894[14]);
  v1410 = v1894[15];
  v1411 = &v1899[v1410];
  v1412 = (char *)v1325 + v1410;
  v1413 = *((_QWORD *)v1412 + 1);
  if (v1413 >> 60 == 15)
  {
    *(_OWORD *)v1411 = *(_OWORD *)v1412;
  }
  else
  {
    v1414 = *(_QWORD *)v1412;
    sub_1AD0040A0(*(_QWORD *)v1412, *((_QWORD *)v1412 + 1));
    *(_QWORD *)v1411 = v1414;
    *((_QWORD *)v1411 + 1) = v1413;
  }
  v1415 = v1894[16];
  v1416 = &v1899[v1415];
  v1417 = (char *)v1325 + v1415;
  v1418 = *((_QWORD *)v1417 + 1);
  if (v1418 >> 60 == 15)
  {
    *(_OWORD *)v1416 = *(_OWORD *)v1417;
  }
  else
  {
    v1419 = *(_QWORD *)v1417;
    sub_1AD0040A0(*(_QWORD *)v1417, *((_QWORD *)v1417 + 1));
    *(_QWORD *)v1416 = v1419;
    *((_QWORD *)v1416 + 1) = v1418;
  }
  v1899[v1894[17]] = *((_BYTE *)v1325 + v1894[17]);
  v1899[v1894[18]] = *((_BYTE *)v1325 + v1894[18]);
  v1420 = v1894[19];
  v1421 = &v1899[v1420];
  v1422 = (char *)v1325 + v1420;
  v1423 = type metadata accessor for CloudKitSharingToken();
  v1424 = *(_QWORD *)(v1423 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v1424 + 48))(v1422, 1, v1423))
  {
    *(_DWORD *)v1421 = *(_DWORD *)v1422;
    *((_QWORD *)v1421 + 1) = *((_QWORD *)v1422 + 1);
    *((_QWORD *)v1421 + 2) = *((_QWORD *)v1422 + 2);
    v1426 = *((_QWORD *)v1422 + 4);
    *((_QWORD *)v1421 + 3) = *((_QWORD *)v1422 + 3);
    *((_QWORD *)v1421 + 4) = v1426;
    v1427 = (uint64_t *)(v1422 + 40);
    v1428 = *((_QWORD *)v1422 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v1428 >> 60 == 11 || v1428 >> 60 == 15)
    {
      *(_OWORD *)(v1421 + 40) = *(_OWORD *)v1427;
    }
    else
    {
      v1451 = *v1427;
      sub_1AD0040A0(*v1427, v1428);
      *((_QWORD *)v1421 + 5) = v1451;
      *((_QWORD *)v1421 + 6) = v1428;
    }
    v1409 = v1899;
    if (*((_QWORD *)v1422 + 9))
    {
      *((_DWORD *)v1421 + 14) = *((_DWORD *)v1422 + 14);
      v1452 = *((_DWORD *)v1422 + 15);
      v1421[64] = v1422[64];
      *((_DWORD *)v1421 + 15) = v1452;
      v1453 = *((_QWORD *)v1422 + 10);
      *((_QWORD *)v1421 + 9) = *((_QWORD *)v1422 + 9);
      *((_QWORD *)v1421 + 10) = v1453;
      v1454 = (uint64_t *)(v1422 + 88);
      v1455 = *((_QWORD *)v1422 + 12);
      swift_retain();
      if (v1455 >> 60 != 15)
      {
        v1459 = *v1454;
        sub_1AD0040A0(v1459, v1455);
        *((_QWORD *)v1421 + 11) = v1459;
        *((_QWORD *)v1421 + 12) = v1455;
        goto LABEL_1062;
      }
      v1456 = v1421 + 88;
      v1457 = *(_OWORD *)v1454;
    }
    else
    {
      v1456 = v1421 + 56;
      v1457 = *(_OWORD *)(v1422 + 56);
      v1458 = *(_OWORD *)(v1422 + 88);
      *(_OWORD *)(v1421 + 72) = *(_OWORD *)(v1422 + 72);
      *(_OWORD *)(v1421 + 88) = v1458;
    }
    *v1456 = v1457;
LABEL_1062:
    v1460 = *((_QWORD *)v1422 + 14);
    *((_QWORD *)v1421 + 13) = *((_QWORD *)v1422 + 13);
    *((_QWORD *)v1421 + 14) = v1460;
    v1461 = v1422 + 120;
    v1462 = *((_QWORD *)v1422 + 16);
    swift_retain();
    if (v1462 >> 60 == 15)
    {
      *(_OWORD *)(v1421 + 120) = *v1461;
    }
    else
    {
      v1463 = *(_QWORD *)v1461;
      sub_1AD0040A0(v1463, v1462);
      *((_QWORD *)v1421 + 15) = v1463;
      *((_QWORD *)v1421 + 16) = v1462;
    }
    v1464 = *((_QWORD *)v1422 + 18);
    *((_QWORD *)v1421 + 17) = *((_QWORD *)v1422 + 17);
    *((_QWORD *)v1421 + 18) = v1464;
    v1465 = (uint64_t *)(v1422 + 152);
    v1466 = *((_QWORD *)v1422 + 20);
    swift_retain();
    if (v1466 >> 60 == 11 || v1466 >> 60 == 15)
    {
      *(_OWORD *)(v1421 + 152) = *(_OWORD *)v1465;
    }
    else
    {
      v1467 = *v1465;
      sub_1AD0040A0(*v1465, v1466);
      *((_QWORD *)v1421 + 19) = v1467;
      *((_QWORD *)v1421 + 20) = v1466;
    }
    v1468 = *((_QWORD *)v1422 + 21);
    if (v1468)
    {
      v1469 = *((_QWORD *)v1422 + 22);
      *((_QWORD *)v1421 + 21) = v1468;
      *((_QWORD *)v1421 + 22) = v1469;
      v1470 = v1422 + 184;
      v1471 = *((_QWORD *)v1422 + 24);
      swift_retain();
      if (v1471 >> 60 == 15)
      {
        *(_OWORD *)(v1421 + 184) = *v1470;
      }
      else
      {
        v1475 = *(_QWORD *)v1470;
        sub_1AD0040A0(v1475, v1471);
        *((_QWORD *)v1421 + 23) = v1475;
        *((_QWORD *)v1421 + 24) = v1471;
      }
      *((_DWORD *)v1421 + 50) = *((_DWORD *)v1422 + 50);
      v1476 = *((_QWORD *)v1422 + 27);
      *((_QWORD *)v1421 + 26) = *((_QWORD *)v1422 + 26);
      *((_QWORD *)v1421 + 27) = v1476;
      v1477 = v1422 + 224;
      v1478 = *((_QWORD *)v1422 + 29);
      swift_retain();
      if (v1478 >> 60 == 15)
      {
        *((_OWORD *)v1421 + 14) = *v1477;
      }
      else
      {
        v1479 = *(_QWORD *)v1477;
        sub_1AD0040A0(v1479, v1478);
        *((_QWORD *)v1421 + 28) = v1479;
        *((_QWORD *)v1421 + 29) = v1478;
      }
    }
    else
    {
      *(_OWORD *)(v1421 + 168) = *(_OWORD *)(v1422 + 168);
      v1472 = *(_OWORD *)(v1422 + 184);
      v1473 = *(_OWORD *)(v1422 + 200);
      v1474 = *(_OWORD *)(v1422 + 216);
      *((_QWORD *)v1421 + 29) = *((_QWORD *)v1422 + 29);
      *(_OWORD *)(v1421 + 200) = v1473;
      *(_OWORD *)(v1421 + 216) = v1474;
      *(_OWORD *)(v1421 + 184) = v1472;
    }
    *((_QWORD *)v1421 + 30) = *((_QWORD *)v1422 + 30);
    v1480 = *((_QWORD *)v1422 + 32);
    *((_QWORD *)v1421 + 31) = *((_QWORD *)v1422 + 31);
    *((_QWORD *)v1421 + 32) = v1480;
    v1481 = (uint64_t *)(v1422 + 264);
    v1482 = *((_QWORD *)v1422 + 34);
    swift_bridgeObjectRetain();
    swift_retain();
    v1873 = v1424;
    if (v1482 >> 60 == 11 || v1482 >> 60 == 15)
    {
      v1483 = v1325;
      *(_OWORD *)(v1421 + 264) = *(_OWORD *)v1481;
    }
    else
    {
      v1483 = v1325;
      v1484 = *v1481;
      sub_1AD0040A0(*v1481, v1482);
      *((_QWORD *)v1421 + 33) = v1484;
      *((_QWORD *)v1421 + 34) = v1482;
    }
    v1485 = *(int *)(v1423 + 24);
    v1486 = &v1421[v1485];
    v1487 = &v1422[v1485];
    v1488 = *(_QWORD *)&v1422[v1485 + 8];
    *(_QWORD *)v1486 = *(_QWORD *)&v1422[v1485];
    *((_QWORD *)v1486 + 1) = v1488;
    swift_retain();
    v1489 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    v1490 = &v1486[v1489];
    v1491 = &v1487[v1489];
    v1492 = sub_1AD63AF28();
    v1493 = *(_QWORD *)(v1492 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1493 + 48))(v1491, 1, v1492))
    {
      v1494 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v1490, v1491, *(_QWORD *)(*(_QWORD *)(v1494 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1493 + 16))(v1490, v1491, v1492);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1493 + 56))(v1490, 0, 1, v1492);
    }
    v1495 = *(int *)(v1423 + 28);
    v1496 = &v1421[v1495];
    v1497 = &v1422[v1495];
    v1498 = *(_QWORD *)&v1422[v1495 + 8];
    *(_QWORD *)v1496 = *(_QWORD *)&v1422[v1495];
    *((_QWORD *)v1496 + 1) = v1498;
    v1499 = *(_QWORD *)&v1422[v1495 + 24];
    swift_retain();
    v1325 = v1483;
    if (v1499 == 1)
    {
      *((_OWORD *)v1496 + 1) = *((_OWORD *)v1497 + 1);
    }
    else
    {
      *((_QWORD *)v1496 + 2) = *((_QWORD *)v1497 + 2);
      *((_QWORD *)v1496 + 3) = *((_QWORD *)v1497 + 3);
      swift_bridgeObjectRetain();
    }
    a1 = v1920;
    v1408 = v1894;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1873 + 56))(v1421, 0, 1, v1423);
    goto LABEL_1088;
  }
  v1425 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  memcpy(v1421, v1422, *(_QWORD *)(*(_QWORD *)(v1425 - 8) + 64));
  a1 = v1920;
LABEL_1088:
  v1500 = v1408[20];
  v1501 = &v1409[v1500];
  v1502 = (char *)v1325 + v1500;
  v1503 = *((_QWORD *)v1502 + 1);
  a3 = v1905;
  v4 = v1915;
  if (v1503 >> 60 == 15)
  {
    *(_OWORD *)v1501 = *(_OWORD *)v1502;
  }
  else
  {
    v1504 = *(_QWORD *)v1502;
    sub_1AD0040A0(*(_QWORD *)v1502, *((_QWORD *)v1502 + 1));
    *(_QWORD *)v1501 = v1504;
    *((_QWORD *)v1501 + 1) = v1503;
  }
  v1409[v1408[21]] = *((_BYTE *)v1325 + v1408[21]);
  v1409[v1408[22]] = *((_BYTE *)v1325 + v1408[22]);
  v1409[v1408[23]] = *((_BYTE *)v1325 + v1408[23]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v1880 + 56))(v1409, 0, 1, v1408);
LABEL_1337:
  *(_BYTE *)(a1 + a3[19]) = *((_BYTE *)v4 + a3[19]);
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)((char *)v4 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[21]) = *((_BYTE *)v4 + a3[21]);
  v1802 = a3[22];
  v1803 = (_QWORD *)(a1 + v1802);
  v1804 = (char *)v4 + v1802;
  v1805 = *(_QWORD *)((char *)v4 + v1802 + 8);
  *v1803 = *(_QWORD *)((char *)v4 + v1802);
  v1803[1] = v1805;
  swift_retain();
  swift_release();
  v1803[2] = *((_QWORD *)v1804 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD311474(uint64_t a1)
{
  destroy for CloudKitRecordID(a1);
  return a1;
}

_QWORD *sub_1AD3114A8(_QWORD *a1)
{
  destroy for CloudKitUserIdentityLookupInfo(a1);
  return a1;
}

uint64_t sub_1AD3114DC(uint64_t a1, _OWORD *a2, int *a3)
{
  int *v3;
  char *v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  _OWORD *v69;
  __int128 v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  int *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  _OWORD *v100;
  _OWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _OWORD *v121;
  _OWORD *v122;
  __int128 v123;
  uint64_t v124;
  _OWORD *v125;
  _OWORD *v126;
  __int128 v127;
  uint64_t v128;
  _OWORD *v129;
  _OWORD *v130;
  __int128 v131;
  uint64_t v132;
  void *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int (*v137)(char *, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  void *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  _OWORD *v151;
  _OWORD *v152;
  char *v153;
  __int128 v154;
  uint64_t v155;
  _OWORD *v156;
  char *v157;
  int *v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  __int128 v162;
  uint64_t v163;
  char *v164;
  char *v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  int *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  uint64_t v186;
  _OWORD *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _OWORD *v208;
  char *v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v216;
  uint64_t v217;
  char *v218;
  int *__src;
  void (**__srca)(void *, const void *, uint64_t);
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  int *v225;
  int *v226;
  uint64_t v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  uint64_t v232;
  unsigned int (*v233)(_OWORD *, uint64_t, int *);
  int *v234;
  char *v235;
  char *v236;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  int *v242;
  int *v243;

  v3 = a3;
  v4 = (char *)a2;
  v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)((char *)a2 + 88);
  v8 = *(_OWORD *)((char *)a2 + 104);
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_BYTE *)(a1 + 121) = *((_BYTE *)a2 + 121);
  *(_BYTE *)(a1 + 122) = *((_BYTE *)a2 + 122);
  v9 = a3[12];
  v10 = (_OWORD *)(a1 + v9);
  v11 = (_OWORD *)((char *)a2 + v9);
  *(_OWORD *)(a1 + 104) = v8;
  v12 = (int *)type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  v13 = *((_QWORD *)v12 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2400);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v242 = v3;
    v15 = v11[1];
    *v10 = *v11;
    v10[1] = v15;
    v16 = v12[5];
    v17 = (_OWORD *)((char *)v10 + v16);
    v18 = (_OWORD *)((char *)v11 + v16);
    v19 = (int *)type metadata accessor for CloudKitShareParticipant(0);
    v20 = *((_QWORD *)v19 - 1);
    v233 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v20 + 48);
    if (v233(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v221 = v20;
      v223 = v13;
      v225 = v12;
      v228 = v11;
      v230 = v10;
      v22 = v18[1];
      *v17 = *v18;
      v17[1] = v22;
      v23 = v18[3];
      v17[2] = v18[2];
      v17[3] = v23;
      v24 = v19[6];
      v25 = (char *)v17 + v24;
      v26 = (char *)v18 + v24;
      v27 = *(_OWORD *)((char *)v18 + v24 + 112);
      *((_OWORD *)v25 + 6) = *(_OWORD *)((char *)v18 + v24 + 96);
      *((_OWORD *)v25 + 7) = v27;
      *((_QWORD *)v25 + 16) = *(_QWORD *)((char *)v18 + v24 + 128);
      v28 = *(_OWORD *)((char *)v18 + v24 + 48);
      *((_OWORD *)v25 + 2) = *(_OWORD *)((char *)v18 + v24 + 32);
      *((_OWORD *)v25 + 3) = v28;
      v29 = *(_OWORD *)((char *)v18 + v24 + 80);
      *((_OWORD *)v25 + 4) = *(_OWORD *)((char *)v18 + v24 + 64);
      *((_OWORD *)v25 + 5) = v29;
      v30 = *(_OWORD *)((char *)v18 + v24 + 16);
      *(_OWORD *)v25 = *(_OWORD *)((char *)v18 + v24);
      *((_OWORD *)v25 + 1) = v30;
      v31 = (int *)type metadata accessor for CloudKitUserIdentity(0);
      v32 = v31[5];
      __dst = &v25[v32];
      v33 = &v26[v32];
      v34 = sub_1AD63AE2C();
      v217 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v217 + 48))(v33, 1, v34))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
        memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v217 + 32))(__dst, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v217 + 56))(__dst, 0, 1, v34);
      }
      v36 = v31[6];
      v37 = &v25[v36];
      v38 = &v26[v36];
      v39 = *((_OWORD *)v38 + 5);
      *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
      *((_OWORD *)v37 + 5) = v39;
      v40 = *((_OWORD *)v38 + 3);
      *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
      *((_OWORD *)v37 + 3) = v40;
      v41 = *((_OWORD *)v38 + 9);
      *((_OWORD *)v37 + 8) = *((_OWORD *)v38 + 8);
      *((_OWORD *)v37 + 9) = v41;
      v42 = *((_OWORD *)v38 + 7);
      *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
      *((_OWORD *)v37 + 7) = v42;
      v43 = *((_OWORD *)v38 + 13);
      *((_OWORD *)v37 + 12) = *((_OWORD *)v38 + 12);
      *((_OWORD *)v37 + 13) = v43;
      v44 = *((_OWORD *)v38 + 11);
      *((_OWORD *)v37 + 10) = *((_OWORD *)v38 + 10);
      *((_OWORD *)v37 + 11) = v44;
      v45 = *((_OWORD *)v38 + 1);
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v45;
      *(_QWORD *)&v25[v31[7]] = *(_QWORD *)&v26[v31[7]];
      *(_OWORD *)&v25[v31[8]] = *(_OWORD *)&v26[v31[8]];
      *(_OWORD *)&v25[v31[9]] = *(_OWORD *)&v26[v31[9]];
      v25[v31[10]] = v26[v31[10]];
      v25[v31[11]] = v26[v31[11]];
      *(_OWORD *)&v25[v31[12]] = *(_OWORD *)&v26[v31[12]];
      *(_QWORD *)&v25[v31[13]] = *(_QWORD *)&v26[v31[13]];
      *((_BYTE *)v17 + v19[7]) = *((_BYTE *)v18 + v19[7]);
      *((_BYTE *)v17 + v19[8]) = *((_BYTE *)v18 + v19[8]);
      *((_BYTE *)v17 + v19[9]) = *((_BYTE *)v18 + v19[9]);
      *((_BYTE *)v17 + v19[10]) = *((_BYTE *)v18 + v19[10]);
      *((_BYTE *)v17 + v19[11]) = *((_BYTE *)v18 + v19[11]);
      *((_BYTE *)v17 + v19[12]) = *((_BYTE *)v18 + v19[12]);
      *((_BYTE *)v17 + v19[13]) = *((_BYTE *)v18 + v19[13]);
      *((_BYTE *)v17 + v19[14]) = *((_BYTE *)v18 + v19[14]);
      *(_OWORD *)((char *)v17 + v19[15]) = *(_OWORD *)((char *)v18 + v19[15]);
      *(_OWORD *)((char *)v17 + v19[16]) = *(_OWORD *)((char *)v18 + v19[16]);
      *((_BYTE *)v17 + v19[17]) = *((_BYTE *)v18 + v19[17]);
      *((_BYTE *)v17 + v19[18]) = *((_BYTE *)v18 + v19[18]);
      v46 = v19[19];
      v47 = (_OWORD *)((char *)v17 + v46);
      v48 = (_OWORD *)((char *)v18 + v46);
      v49 = type metadata accessor for CloudKitSharingToken();
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        v13 = v223;
        v12 = v225;
      }
      else
      {
        __dsta = v4;
        v52 = v48[13];
        v47[12] = v48[12];
        v47[13] = v52;
        v47[14] = v48[14];
        *((_QWORD *)v47 + 30) = *((_QWORD *)v48 + 30);
        v53 = v48[9];
        v47[8] = v48[8];
        v47[9] = v53;
        v54 = v48[11];
        v47[10] = v48[10];
        v47[11] = v54;
        v55 = v48[5];
        v47[4] = v48[4];
        v47[5] = v55;
        v56 = v48[7];
        v47[6] = v48[6];
        v47[7] = v56;
        v57 = v48[1];
        *v47 = *v48;
        v47[1] = v57;
        v58 = v48[3];
        v47[2] = v48[2];
        v47[3] = v58;
        *(_OWORD *)((char *)v47 + 248) = *(_OWORD *)((char *)v48 + 248);
        *(_OWORD *)((char *)v47 + 264) = *(_OWORD *)((char *)v48 + 264);
        __src = (int *)v49;
        v59 = *(int *)(v49 + 24);
        v60 = (char *)v47 + v59;
        v61 = (char *)v48 + v59;
        *(_OWORD *)((char *)v47 + v59) = *(_OWORD *)((char *)v48 + v59);
        v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v216 = &v60[v62];
        v63 = &v61[v62];
        v64 = sub_1AD63AF28();
        v65 = *(_QWORD *)(v64 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
        {
          v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v216, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v216, v63, v64);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v216, 0, 1, v64);
        }
        v4 = __dsta;
        v13 = v223;
        v12 = v225;
        v67 = __src[7];
        v68 = (_OWORD *)((char *)v47 + v67);
        v69 = (_OWORD *)((char *)v48 + v67);
        v70 = v69[1];
        *v68 = *v69;
        v68[1] = v70;
        (*(void (**)(_OWORD *, _QWORD, uint64_t))(v50 + 56))(v47, 0, 1);
      }
      *(_OWORD *)((char *)v17 + v19[20]) = *(_OWORD *)((char *)v18 + v19[20]);
      *((_BYTE *)v17 + v19[21]) = *((_BYTE *)v18 + v19[21]);
      *((_BYTE *)v17 + v19[22]) = *((_BYTE *)v18 + v19[22]);
      *((_BYTE *)v17 + v19[23]) = *((_BYTE *)v18 + v19[23]);
      v20 = v221;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v221 + 56))(v17, 0, 1, v19);
      v11 = v228;
      v10 = v230;
    }
    v71 = v12[6];
    v72 = (_OWORD *)((char *)v10 + v71);
    v73 = (_OWORD *)((char *)v11 + v71);
    if (v233((_OWORD *)((char *)v11 + v71), 1, v19))
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      v3 = v242;
    }
    else
    {
      v222 = v20;
      v224 = v13;
      v226 = v12;
      v229 = v11;
      v231 = v10;
      v75 = v73[1];
      *v72 = *v73;
      v72[1] = v75;
      v76 = v73[3];
      v72[2] = v73[2];
      v72[3] = v76;
      v77 = v19[6];
      v78 = (char *)v72 + v77;
      v79 = (char *)v73 + v77;
      v80 = *(_OWORD *)((char *)v73 + v77 + 112);
      *((_OWORD *)v78 + 6) = *(_OWORD *)((char *)v73 + v77 + 96);
      *((_OWORD *)v78 + 7) = v80;
      *((_QWORD *)v78 + 16) = *(_QWORD *)((char *)v73 + v77 + 128);
      v81 = *(_OWORD *)((char *)v73 + v77 + 48);
      *((_OWORD *)v78 + 2) = *(_OWORD *)((char *)v73 + v77 + 32);
      *((_OWORD *)v78 + 3) = v81;
      v82 = *(_OWORD *)((char *)v73 + v77 + 80);
      *((_OWORD *)v78 + 4) = *(_OWORD *)((char *)v73 + v77 + 64);
      *((_OWORD *)v78 + 5) = v82;
      v83 = *(_OWORD *)((char *)v73 + v77 + 16);
      *(_OWORD *)v78 = *(_OWORD *)((char *)v73 + v77);
      *((_OWORD *)v78 + 1) = v83;
      v84 = (int *)type metadata accessor for CloudKitUserIdentity(0);
      v85 = v84[5];
      __dstb = &v78[v85];
      v86 = &v79[v85];
      v87 = sub_1AD63AE2C();
      __srca = *(void (***)(void *, const void *, uint64_t))(v87 - 8);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))__srca[6])(v86, 1, v87))
      {
        v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
        memcpy(__dstb, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        __srca[4](__dstb, v86, v87);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srca[7])(__dstb, 0, 1, v87);
      }
      v89 = v84[6];
      v90 = &v78[v89];
      v91 = &v79[v89];
      v92 = *((_OWORD *)v91 + 5);
      *((_OWORD *)v90 + 4) = *((_OWORD *)v91 + 4);
      *((_OWORD *)v90 + 5) = v92;
      v93 = *((_OWORD *)v91 + 3);
      *((_OWORD *)v90 + 2) = *((_OWORD *)v91 + 2);
      *((_OWORD *)v90 + 3) = v93;
      v94 = *((_OWORD *)v91 + 9);
      *((_OWORD *)v90 + 8) = *((_OWORD *)v91 + 8);
      *((_OWORD *)v90 + 9) = v94;
      v95 = *((_OWORD *)v91 + 7);
      *((_OWORD *)v90 + 6) = *((_OWORD *)v91 + 6);
      *((_OWORD *)v90 + 7) = v95;
      v96 = *((_OWORD *)v91 + 13);
      *((_OWORD *)v90 + 12) = *((_OWORD *)v91 + 12);
      *((_OWORD *)v90 + 13) = v96;
      v97 = *((_OWORD *)v91 + 11);
      *((_OWORD *)v90 + 10) = *((_OWORD *)v91 + 10);
      *((_OWORD *)v90 + 11) = v97;
      v98 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *((_OWORD *)v90 + 1) = v98;
      *(_QWORD *)&v78[v84[7]] = *(_QWORD *)&v79[v84[7]];
      *(_OWORD *)&v78[v84[8]] = *(_OWORD *)&v79[v84[8]];
      *(_OWORD *)&v78[v84[9]] = *(_OWORD *)&v79[v84[9]];
      v78[v84[10]] = v79[v84[10]];
      v78[v84[11]] = v79[v84[11]];
      *(_OWORD *)&v78[v84[12]] = *(_OWORD *)&v79[v84[12]];
      *(_QWORD *)&v78[v84[13]] = *(_QWORD *)&v79[v84[13]];
      *((_BYTE *)v72 + v19[7]) = *((_BYTE *)v73 + v19[7]);
      *((_BYTE *)v72 + v19[8]) = *((_BYTE *)v73 + v19[8]);
      *((_BYTE *)v72 + v19[9]) = *((_BYTE *)v73 + v19[9]);
      *((_BYTE *)v72 + v19[10]) = *((_BYTE *)v73 + v19[10]);
      *((_BYTE *)v72 + v19[11]) = *((_BYTE *)v73 + v19[11]);
      *((_BYTE *)v72 + v19[12]) = *((_BYTE *)v73 + v19[12]);
      *((_BYTE *)v72 + v19[13]) = *((_BYTE *)v73 + v19[13]);
      *((_BYTE *)v72 + v19[14]) = *((_BYTE *)v73 + v19[14]);
      *(_OWORD *)((char *)v72 + v19[15]) = *(_OWORD *)((char *)v73 + v19[15]);
      *(_OWORD *)((char *)v72 + v19[16]) = *(_OWORD *)((char *)v73 + v19[16]);
      *((_BYTE *)v72 + v19[17]) = *((_BYTE *)v73 + v19[17]);
      *((_BYTE *)v72 + v19[18]) = *((_BYTE *)v73 + v19[18]);
      v99 = v19[19];
      v100 = (_OWORD *)((char *)v72 + v99);
      v101 = (_OWORD *)((char *)v73 + v99);
      v102 = type metadata accessor for CloudKitSharingToken();
      v103 = *(_QWORD *)(v102 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
      {
        v104 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        v13 = v224;
        v12 = v226;
      }
      else
      {
        __dstc = v4;
        v105 = v101[13];
        v100[12] = v101[12];
        v100[13] = v105;
        v100[14] = v101[14];
        *((_QWORD *)v100 + 30) = *((_QWORD *)v101 + 30);
        v106 = v101[9];
        v100[8] = v101[8];
        v100[9] = v106;
        v107 = v101[11];
        v100[10] = v101[10];
        v100[11] = v107;
        v108 = v101[5];
        v100[4] = v101[4];
        v100[5] = v108;
        v109 = v101[7];
        v100[6] = v101[6];
        v100[7] = v109;
        v110 = v101[1];
        *v100 = *v101;
        v100[1] = v110;
        v111 = v101[3];
        v100[2] = v101[2];
        v100[3] = v111;
        *(_OWORD *)((char *)v100 + 248) = *(_OWORD *)((char *)v101 + 248);
        *(_OWORD *)((char *)v100 + 264) = *(_OWORD *)((char *)v101 + 264);
        v234 = (int *)v102;
        v112 = *(int *)(v102 + 24);
        v113 = (char *)v100 + v112;
        v114 = (char *)v101 + v112;
        *(_OWORD *)((char *)v100 + v112) = *(_OWORD *)((char *)v101 + v112);
        v115 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v218 = &v113[v115];
        v116 = &v114[v115];
        v117 = sub_1AD63AF28();
        v118 = *(_QWORD *)(v117 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
        {
          v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v218, v116, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v218, v116, v117);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v218, 0, 1, v117);
        }
        v4 = __dstc;
        v13 = v224;
        v12 = v226;
        v120 = v234[7];
        v121 = (_OWORD *)((char *)v100 + v120);
        v122 = (_OWORD *)((char *)v101 + v120);
        v123 = v122[1];
        *v121 = *v122;
        v121[1] = v123;
        (*(void (**)(_OWORD *, _QWORD, uint64_t))(v103 + 56))(v100, 0, 1);
      }
      *(_OWORD *)((char *)v72 + v19[20]) = *(_OWORD *)((char *)v73 + v19[20]);
      *((_BYTE *)v72 + v19[21]) = *((_BYTE *)v73 + v19[21]);
      *((_BYTE *)v72 + v19[22]) = *((_BYTE *)v73 + v19[22]);
      *((_BYTE *)v72 + v19[23]) = *((_BYTE *)v73 + v19[23]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v222 + 56))(v72, 0, 1, v19);
      v3 = v242;
      v11 = v229;
      v10 = v231;
    }
    v124 = v12[7];
    v125 = (_OWORD *)((char *)v10 + v124);
    v126 = (_OWORD *)((char *)v11 + v124);
    v127 = v126[1];
    *v125 = *v126;
    v125[1] = v127;
    *((_BYTE *)v10 + v12[8]) = *((_BYTE *)v11 + v12[8]);
    v128 = v12[9];
    v129 = (_OWORD *)((char *)v10 + v128);
    v130 = (_OWORD *)((char *)v11 + v128);
    v131 = v130[1];
    *v129 = *v130;
    v129[1] = v131;
    *(_QWORD *)((char *)v10 + v12[10]) = *(_QWORD *)((char *)v11 + v12[10]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  }
  v132 = v3[13];
  v133 = (void *)(a1 + v132);
  v134 = &v4[v132];
  v135 = sub_1AD63B03C();
  v136 = *(_QWORD *)(v135 - 8);
  v137 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48);
  if (v137(v134, 1, v135))
  {
    v138 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v136 + 32))(v133, v134, v135);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
  }
  v139 = v3[14];
  v140 = (void *)(a1 + v139);
  v141 = &v4[v139];
  if (v137(&v4[v139], 1, v135))
  {
    v142 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v136 + 32))(v140, v141, v135);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v140, 0, 1, v135);
  }
  v143 = v3[15];
  v144 = (void *)(a1 + v143);
  v145 = &v4[v143];
  if (v137(&v4[v143], 1, v135))
  {
    v146 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v136 + 32))(v144, v145, v135);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v144, 0, 1, v135);
  }
  v147 = v3[16];
  v148 = v3[17];
  v149 = *(_OWORD *)&v4[v147];
  v150 = *(_OWORD *)&v4[v147 + 16];
  v151 = (_OWORD *)(a1 + v147);
  *v151 = v149;
  v151[1] = v150;
  v152 = (_OWORD *)(a1 + v148);
  v153 = &v4[v148];
  v154 = *((_OWORD *)v153 + 1);
  *v152 = *(_OWORD *)v153;
  v152[1] = v154;
  v155 = v3[18];
  v156 = (_OWORD *)(a1 + v155);
  v157 = &v4[v155];
  v158 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v159 = *((_QWORD *)v158 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v159 + 48))(v157, 1, v158))
  {
    v160 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
  }
  else
  {
    v232 = v159;
    __dstd = v4;
    v243 = v3;
    v161 = *((_OWORD *)v157 + 1);
    *v156 = *(_OWORD *)v157;
    v156[1] = v161;
    v162 = *((_OWORD *)v157 + 3);
    v156[2] = *((_OWORD *)v157 + 2);
    v156[3] = v162;
    v163 = v158[6];
    v164 = (char *)v156 + v163;
    v165 = &v157[v163];
    v166 = *(_OWORD *)&v157[v163 + 112];
    *((_OWORD *)v164 + 6) = *(_OWORD *)&v157[v163 + 96];
    *((_OWORD *)v164 + 7) = v166;
    *((_QWORD *)v164 + 16) = *(_QWORD *)&v157[v163 + 128];
    v167 = *(_OWORD *)&v157[v163 + 48];
    *((_OWORD *)v164 + 2) = *(_OWORD *)&v157[v163 + 32];
    *((_OWORD *)v164 + 3) = v167;
    v168 = *(_OWORD *)&v157[v163 + 80];
    *((_OWORD *)v164 + 4) = *(_OWORD *)&v157[v163 + 64];
    *((_OWORD *)v164 + 5) = v168;
    v169 = *(_OWORD *)&v157[v163 + 16];
    *(_OWORD *)v164 = *(_OWORD *)&v157[v163];
    *((_OWORD *)v164 + 1) = v169;
    v170 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v171 = v170[5];
    v235 = &v164[v171];
    v172 = &v165[v171];
    v173 = sub_1AD63AE2C();
    v174 = *(_QWORD *)(v173 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48))(v172, 1, v173))
    {
      v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v235, v172, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v235, v172, v173);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v235, 0, 1, v173);
    }
    v4 = __dstd;
    v176 = v170[6];
    v177 = &v164[v176];
    v178 = &v165[v176];
    v179 = *((_OWORD *)v178 + 5);
    *((_OWORD *)v177 + 4) = *((_OWORD *)v178 + 4);
    *((_OWORD *)v177 + 5) = v179;
    v180 = *((_OWORD *)v178 + 3);
    *((_OWORD *)v177 + 2) = *((_OWORD *)v178 + 2);
    *((_OWORD *)v177 + 3) = v180;
    v181 = *((_OWORD *)v178 + 9);
    *((_OWORD *)v177 + 8) = *((_OWORD *)v178 + 8);
    *((_OWORD *)v177 + 9) = v181;
    v182 = *((_OWORD *)v178 + 7);
    *((_OWORD *)v177 + 6) = *((_OWORD *)v178 + 6);
    *((_OWORD *)v177 + 7) = v182;
    v183 = *((_OWORD *)v178 + 13);
    *((_OWORD *)v177 + 12) = *((_OWORD *)v178 + 12);
    *((_OWORD *)v177 + 13) = v183;
    v184 = *((_OWORD *)v178 + 11);
    *((_OWORD *)v177 + 10) = *((_OWORD *)v178 + 10);
    *((_OWORD *)v177 + 11) = v184;
    v185 = *((_OWORD *)v178 + 1);
    *(_OWORD *)v177 = *(_OWORD *)v178;
    *((_OWORD *)v177 + 1) = v185;
    *(_QWORD *)&v164[v170[7]] = *(_QWORD *)&v165[v170[7]];
    *(_OWORD *)&v164[v170[8]] = *(_OWORD *)&v165[v170[8]];
    *(_OWORD *)&v164[v170[9]] = *(_OWORD *)&v165[v170[9]];
    v164[v170[10]] = v165[v170[10]];
    v164[v170[11]] = v165[v170[11]];
    *(_OWORD *)&v164[v170[12]] = *(_OWORD *)&v165[v170[12]];
    *(_QWORD *)&v164[v170[13]] = *(_QWORD *)&v165[v170[13]];
    *((_BYTE *)v156 + v158[7]) = v157[v158[7]];
    *((_BYTE *)v156 + v158[8]) = v157[v158[8]];
    *((_BYTE *)v156 + v158[9]) = v157[v158[9]];
    *((_BYTE *)v156 + v158[10]) = v157[v158[10]];
    *((_BYTE *)v156 + v158[11]) = v157[v158[11]];
    *((_BYTE *)v156 + v158[12]) = v157[v158[12]];
    *((_BYTE *)v156 + v158[13]) = v157[v158[13]];
    *((_BYTE *)v156 + v158[14]) = v157[v158[14]];
    *(_OWORD *)((char *)v156 + v158[15]) = *(_OWORD *)&v157[v158[15]];
    *(_OWORD *)((char *)v156 + v158[16]) = *(_OWORD *)&v157[v158[16]];
    *((_BYTE *)v156 + v158[17]) = v157[v158[17]];
    *((_BYTE *)v156 + v158[18]) = v157[v158[18]];
    v186 = v158[19];
    v187 = (_OWORD *)((char *)v156 + v186);
    v188 = &v157[v186];
    v189 = type metadata accessor for CloudKitSharingToken();
    v190 = *(_QWORD *)(v189 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189))
    {
      v191 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
    }
    else
    {
      v227 = v190;
      v192 = *((_OWORD *)v188 + 13);
      v187[12] = *((_OWORD *)v188 + 12);
      v187[13] = v192;
      v187[14] = *((_OWORD *)v188 + 14);
      *((_QWORD *)v187 + 30) = *((_QWORD *)v188 + 30);
      v193 = *((_OWORD *)v188 + 9);
      v187[8] = *((_OWORD *)v188 + 8);
      v187[9] = v193;
      v194 = *((_OWORD *)v188 + 11);
      v187[10] = *((_OWORD *)v188 + 10);
      v187[11] = v194;
      v195 = *((_OWORD *)v188 + 5);
      v187[4] = *((_OWORD *)v188 + 4);
      v187[5] = v195;
      v196 = *((_OWORD *)v188 + 7);
      v187[6] = *((_OWORD *)v188 + 6);
      v187[7] = v196;
      v197 = *((_OWORD *)v188 + 1);
      *v187 = *(_OWORD *)v188;
      v187[1] = v197;
      v198 = *((_OWORD *)v188 + 3);
      v187[2] = *((_OWORD *)v188 + 2);
      v187[3] = v198;
      *(_OWORD *)((char *)v187 + 248) = *(_OWORD *)(v188 + 248);
      *(_OWORD *)((char *)v187 + 264) = *(_OWORD *)(v188 + 264);
      v199 = *(int *)(v189 + 24);
      v200 = (char *)v187 + v199;
      v201 = &v188[v199];
      *(_OWORD *)((char *)v187 + v199) = *(_OWORD *)&v188[v199];
      v202 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v236 = &v200[v202];
      v203 = &v201[v202];
      v204 = sub_1AD63AF28();
      v205 = *(_QWORD *)(v204 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v205 + 48))(v203, 1, v204))
      {
        v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v236, v203, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v236, v203, v204);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v236, 0, 1, v204);
      }
      v4 = __dstd;
      v207 = *(int *)(v189 + 28);
      v208 = (_OWORD *)((char *)v187 + v207);
      v209 = &v188[v207];
      v210 = *((_OWORD *)v209 + 1);
      *v208 = *(_OWORD *)v209;
      v208[1] = v210;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v227 + 56))(v187, 0, 1, v189);
    }
    v3 = v243;
    *(_OWORD *)((char *)v156 + v158[20]) = *(_OWORD *)&v157[v158[20]];
    *((_BYTE *)v156 + v158[21]) = v157[v158[21]];
    *((_BYTE *)v156 + v158[22]) = v157[v158[22]];
    *((_BYTE *)v156 + v158[23]) = v157[v158[23]];
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v232 + 56))(v156, 0, 1, v158);
  }
  v211 = v3[20];
  *(_BYTE *)(a1 + v3[19]) = v4[v3[19]];
  *(_QWORD *)(a1 + v211) = *(_QWORD *)&v4[v211];
  v212 = v3[22];
  *(_BYTE *)(a1 + v3[21]) = v4[v3[21]];
  v213 = a1 + v212;
  v214 = &v4[v212];
  *(_OWORD *)v213 = *(_OWORD *)v214;
  *(_QWORD *)(v213 + 16) = *((_QWORD *)v214 + 2);
  return a1;
}

_OWORD *sub_1AD3124EC(_OWORD *a1, _OWORD *a2, int *a3)
{
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_OWORD *, uint64_t, int *);
  int v18;
  int v19;
  __int128 v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  int *v24;
  uint64_t v25;
  unsigned int (*v26)(_QWORD, _QWORD, _QWORD);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  int *v50;
  uint64_t v51;
  uint64_t (*v52)(_OWORD *, uint64_t, int *);
  int v53;
  int v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  _OWORD *v83;
  _OWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  _OWORD *v117;
  _OWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _OWORD *v123;
  _OWORD *v124;
  __int128 v125;
  uint64_t v126;
  _OWORD *v127;
  _OWORD *v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  char *v133;
  char *v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  int *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  _OWORD *v157;
  _OWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _OWORD *v193;
  _OWORD *v194;
  __int128 v195;
  uint64_t v196;
  _OWORD *v197;
  _OWORD *v198;
  __int128 v199;
  uint64_t v200;
  _OWORD *v201;
  _OWORD *v202;
  __int128 v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t v213;
  _OWORD *v214;
  _OWORD *v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  uint64_t v221;
  void *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t (*v226)(void *, uint64_t, uint64_t);
  int v227;
  int v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  _QWORD *v234;
  uint64_t v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  _QWORD *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _QWORD *v250;
  uint64_t v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  _QWORD *v256;
  unint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t *v261;
  uint64_t *v262;
  unint64_t v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t *v267;
  uint64_t *v268;
  unint64_t v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t *v273;
  uint64_t *v274;
  unint64_t v275;
  unint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t *v279;
  uint64_t *v280;
  unint64_t v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t *v285;
  uint64_t *v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  _OWORD *v291;
  _OWORD *v292;
  uint64_t v293;
  uint64_t (*v294)(_OWORD *, uint64_t, uint64_t);
  int v295;
  uint64_t v296;
  uint64_t v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  uint64_t v305;
  char *v306;
  char *v307;
  uint64_t v308;
  char *v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  _QWORD *v314;
  unint64_t v315;
  unint64_t v316;
  uint64_t v317;
  _OWORD *v318;
  _OWORD *v319;
  __int128 v320;
  uint64_t v321;
  int v322;
  uint64_t v323;
  _OWORD *v324;
  unint64_t v325;
  unint64_t v326;
  __int128 v327;
  _QWORD *v328;
  unint64_t v329;
  unint64_t v330;
  uint64_t v331;
  _QWORD *v332;
  unint64_t v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  _QWORD *v337;
  unint64_t v338;
  unint64_t v339;
  __int128 v340;
  __int128 v341;
  uint64_t v342;
  uint64_t v343;
  _QWORD *v344;
  unint64_t v345;
  unint64_t v346;
  uint64_t v347;
  _QWORD *v348;
  unint64_t v349;
  int *v350;
  unint64_t v351;
  uint64_t v352;
  char *v353;
  char *v354;
  uint64_t v355;
  char *v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t (*v360)(char *, uint64_t, uint64_t);
  int v361;
  int v362;
  uint64_t v363;
  uint64_t v364;
  char *v365;
  char *v366;
  _OWORD *v367;
  _OWORD *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t *v371;
  uint64_t *v372;
  unint64_t v373;
  unint64_t v374;
  uint64_t v375;
  uint64_t v376;
  _OWORD *v377;
  _OWORD *v378;
  int v379;
  int v380;
  __int128 v381;
  __int128 v382;
  uint64_t v383;
  char *v384;
  char *v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  int *v390;
  uint64_t v391;
  char *v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  _QWORD *v399;
  uint64_t v400;
  uint64_t v401;
  char *v402;
  char *v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  uint64_t v411;
  _OWORD *v412;
  _OWORD *v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  uint64_t v424;
  char *v425;
  char *v426;
  uint64_t v427;
  char *v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  char *v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  _QWORD *v439;
  uint64_t v440;
  uint64_t v441;
  _OWORD *v442;
  _OWORD *v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  uint64_t v449;
  void *v450;
  char *v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t (*v454)(void *, uint64_t, uint64_t);
  int v455;
  int v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  uint64_t v461;
  _QWORD *v462;
  uint64_t v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  __int128 v470;
  _QWORD *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  _QWORD *v478;
  uint64_t v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  _QWORD *v484;
  unint64_t v485;
  unint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t *v489;
  uint64_t *v490;
  unint64_t v491;
  unint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t *v495;
  uint64_t *v496;
  unint64_t v497;
  unint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t *v501;
  uint64_t *v502;
  unint64_t v503;
  unint64_t v504;
  uint64_t v505;
  int *v506;
  uint64_t v507;
  uint64_t *v508;
  uint64_t *v509;
  unint64_t v510;
  unint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t *v514;
  uint64_t *v515;
  unint64_t v516;
  unint64_t v517;
  uint64_t v518;
  uint64_t v519;
  char *v520;
  _OWORD *v521;
  uint64_t v522;
  uint64_t (*v523)(char *, uint64_t, uint64_t);
  int v524;
  size_t v525;
  void *v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  uint64_t v534;
  uint64_t v535;
  char *v536;
  uint64_t v537;
  void *v538;
  char *v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  _QWORD *v544;
  unint64_t v545;
  unint64_t v546;
  uint64_t v547;
  _OWORD *v548;
  _OWORD *v549;
  __int128 v550;
  uint64_t v551;
  int v552;
  uint64_t v553;
  _OWORD *v554;
  unint64_t v555;
  unint64_t v556;
  __int128 v557;
  _QWORD *v558;
  unint64_t v559;
  unint64_t v560;
  uint64_t v561;
  _QWORD *v562;
  unint64_t v563;
  unint64_t v564;
  uint64_t v565;
  uint64_t v566;
  _QWORD *v567;
  unint64_t v568;
  unint64_t v569;
  __int128 v570;
  __int128 v571;
  uint64_t v572;
  uint64_t v573;
  _QWORD *v574;
  unint64_t v575;
  unint64_t v576;
  uint64_t v577;
  _QWORD *v578;
  unint64_t v579;
  int *v580;
  unint64_t v581;
  uint64_t v582;
  uint64_t v583;
  char *v584;
  uint64_t v585;
  void *v586;
  char *v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t (*v590)(void *, uint64_t, uint64_t);
  int v591;
  int v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  char *v596;
  _OWORD *v597;
  _OWORD *v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t *v601;
  uint64_t *v602;
  unint64_t v603;
  unint64_t v604;
  uint64_t v605;
  uint64_t v606;
  char *v607;
  char *v608;
  _QWORD *v609;
  uint64_t v610;
  uint64_t v611;
  char *v612;
  char *v613;
  _QWORD *v614;
  uint64_t v615;
  uint64_t v616;
  char *v617;
  char *v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t (*v621)(char *, uint64_t, uint64_t);
  int v622;
  int v623;
  uint64_t v624;
  uint64_t v625;
  char *v626;
  char *v627;
  int v628;
  int v629;
  uint64_t v630;
  uint64_t v631;
  char *v632;
  char *v633;
  int v634;
  int v635;
  uint64_t v636;
  uint64_t v637;
  char *v638;
  char *v639;
  _OWORD *v640;
  uint64_t v641;
  uint64_t v642;
  char *v643;
  char *v644;
  _OWORD *v645;
  uint64_t v646;
  uint64_t v647;
  _OWORD *v648;
  _OWORD *v649;
  int *v650;
  uint64_t v651;
  uint64_t (*v652)(_OWORD *, uint64_t, int *);
  int v653;
  int v654;
  __int128 v655;
  __int128 v656;
  uint64_t v657;
  char *v658;
  char *v659;
  __int128 v660;
  __int128 v661;
  __int128 v662;
  __int128 v663;
  int *v664;
  uint64_t v665;
  char *v666;
  char *v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  _QWORD *v673;
  uint64_t v674;
  uint64_t v675;
  char *v676;
  char *v677;
  __int128 v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  __int128 v682;
  __int128 v683;
  __int128 v684;
  _OWORD *v685;
  uint64_t v686;
  _OWORD *v687;
  _OWORD *v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  __int128 v692;
  __int128 v693;
  __int128 v694;
  __int128 v695;
  __int128 v696;
  __int128 v697;
  __int128 v698;
  uint64_t v699;
  char *v700;
  char *v701;
  uint64_t v702;
  char *v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  char *v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  _QWORD *v714;
  uint64_t v715;
  uint64_t v716;
  _OWORD *v717;
  _OWORD *v718;
  __int128 v719;
  __int128 v720;
  __int128 v721;
  __int128 v722;
  __int128 v723;
  uint64_t v724;
  void *v725;
  char *v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t (*v729)(void *, uint64_t, uint64_t);
  int v730;
  int v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  char *v735;
  uint64_t v736;
  _QWORD *v737;
  uint64_t v738;
  __int128 v739;
  __int128 v740;
  __int128 v741;
  __int128 v742;
  __int128 v743;
  __int128 v744;
  __int128 v745;
  _QWORD *v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  _QWORD *v753;
  uint64_t v754;
  __int128 v755;
  __int128 v756;
  __int128 v757;
  __int128 v758;
  _QWORD *v759;
  unint64_t v760;
  unint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t *v764;
  uint64_t *v765;
  unint64_t v766;
  unint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t *v770;
  uint64_t *v771;
  unint64_t v772;
  unint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t *v776;
  uint64_t *v777;
  unint64_t v778;
  unint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t *v782;
  uint64_t *v783;
  unint64_t v784;
  unint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t *v788;
  uint64_t *v789;
  unint64_t v790;
  unint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  char *v795;
  uint64_t v796;
  uint64_t (*v797)(uint64_t, uint64_t, uint64_t);
  int v798;
  char *v799;
  int v800;
  __int128 v801;
  __int128 v802;
  __int128 v803;
  __int128 v804;
  __int128 v805;
  __int128 v806;
  __int128 v807;
  uint64_t v808;
  uint64_t v809;
  char *v810;
  uint64_t v811;
  void *v812;
  char *v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  _OWORD *v818;
  char *v819;
  _QWORD *v820;
  unint64_t v821;
  unint64_t v822;
  uint64_t v823;
  _OWORD *v824;
  char *v825;
  __int128 v826;
  uint64_t v827;
  uint64_t *v828;
  uint64_t *v829;
  unint64_t v830;
  unint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  char *v835;
  char *v836;
  uint64_t v838;
  int v839;
  uint64_t v840;
  _OWORD *v841;
  unint64_t v842;
  unint64_t v843;
  __int128 v844;
  _QWORD *v845;
  unint64_t v846;
  unint64_t v847;
  uint64_t v848;
  _QWORD *v849;
  unint64_t v850;
  unint64_t v851;
  uint64_t v852;
  uint64_t v853;
  _QWORD *v854;
  unint64_t v855;
  unint64_t v856;
  __int128 v857;
  __int128 v858;
  uint64_t v859;
  uint64_t v860;
  _QWORD *v861;
  unint64_t v862;
  unint64_t v863;
  uint64_t v864;
  _QWORD *v865;
  unint64_t v866;
  unint64_t v867;
  uint64_t v868;
  uint64_t v869;
  char *v870;
  uint64_t v871;
  void *v872;
  char *v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t (*v876)(void *, uint64_t, uint64_t);
  int v877;
  int v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  char *v882;
  _OWORD *v883;
  _OWORD *v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  _OWORD *v896;
  char *__dst;
  char *__dsta;
  int *__dstb;
  _DWORD *__dstc;
  _QWORD *__dstd;
  void *__src;
  uint64_t (*__srca)(_OWORD *, uint64_t, int *);
  char *__srcb;
  uint64_t (*__srcc)(_OWORD *, uint64_t, int *);
  char *__srcd;
  char *__srce;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;
  uint64_t v911;
  uint64_t v912;
  int *v913;
  uint64_t v914;
  uint64_t v915;
  int *v916;
  uint64_t v917;
  int *v918;
  int *v919;
  int *v920;
  _OWORD *v921;
  _OWORD *v922;
  _OWORD *v923;
  _OWORD *v924;
  _OWORD *v925;
  _OWORD *v926;
  _QWORD *v927;
  _OWORD *v928;
  _OWORD *v929;
  _OWORD *v930;
  _OWORD *v931;
  _OWORD *v932;
  _OWORD *v933;
  char *v934;
  int *v935;
  int *v936;
  int *v937;
  int *v938;
  int *v939;
  int *v940;
  int *v941;
  _OWORD *v942;
  _OWORD *v943;
  _OWORD *v944;
  _OWORD *v945;
  _OWORD *v946;
  _OWORD *v947;
  _OWORD *v948;
  _OWORD *v949;
  _OWORD *v950;
  _OWORD *v951;
  _OWORD *v952;
  _OWORD *v953;
  _OWORD *v954;
  _OWORD *v955;
  int *v956;
  int *v957;
  int *v958;
  int *v959;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  swift_release();
  v6 = v4 + 1;
  if (*((_QWORD *)v5 + 3) == 1)
    goto LABEL_4;
  v7 = *((_QWORD *)v4 + 3);
  if (v7 == 1)
  {
    sub_1AD009758((uint64_t)(v5 + 1), &qword_1ED2E3198);
LABEL_4:
    v5[1] = *v6;
    goto LABEL_6;
  }
  *((_QWORD *)v5 + 2) = *(_QWORD *)v6;
  *((_QWORD *)v5 + 3) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  v5[2] = v4[2];
  swift_release();
  v8 = v4 + 3;
  if (*((_QWORD *)v5 + 7) == 1)
  {
LABEL_9:
    v5[3] = *v8;
    goto LABEL_11;
  }
  v9 = *((_QWORD *)v4 + 7);
  if (v9 == 1)
  {
    sub_1AD009758((uint64_t)(v5 + 3), &qword_1ED2E3198);
    goto LABEL_9;
  }
  *((_QWORD *)v5 + 6) = *(_QWORD *)v8;
  *((_QWORD *)v5 + 7) = v9;
  swift_bridgeObjectRelease();
LABEL_11:
  v5[4] = v4[4];
  swift_release();
  *((_QWORD *)v5 + 10) = *((_QWORD *)v4 + 10);
  swift_bridgeObjectRelease();
  v10 = *((_QWORD *)v4 + 12);
  *((_QWORD *)v5 + 11) = *((_QWORD *)v4 + 11);
  *((_QWORD *)v5 + 12) = v10;
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)v4 + 14);
  *((_QWORD *)v5 + 13) = *((_QWORD *)v4 + 13);
  *((_QWORD *)v5 + 14) = v11;
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + 120) = *((_BYTE *)v4 + 120);
  *(_WORD *)((char *)v5 + 121) = *(_WORD *)((char *)v4 + 121);
  v12 = a3[12];
  v13 = (_OWORD *)((char *)v5 + v12);
  v14 = (_OWORD *)((char *)v4 + v12);
  v15 = (int *)type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_1AD066230((uint64_t)v13, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      goto LABEL_17;
    }
    *v13 = *v14;
    swift_release();
    v29 = v14 + 1;
    v953 = v4;
    v957 = a3;
    if (*((_QWORD *)v13 + 3) != 1)
    {
      v30 = *((_QWORD *)v14 + 3);
      if (v30 != 1)
      {
        *((_QWORD *)v13 + 2) = *v29;
        *((_QWORD *)v13 + 3) = v30;
        swift_bridgeObjectRelease();
LABEL_25:
        v47 = v15[5];
        v48 = (_OWORD *)((char *)v13 + v47);
        v49 = (_OWORD *)((char *)v14 + v47);
        v50 = (int *)type metadata accessor for CloudKitShareParticipant(0);
        v51 = *((_QWORD *)v50 - 1);
        v52 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v51 + 48);
        v53 = v52(v48, 1, v50);
        v54 = v52(v49, 1, v50);
        if (v53)
        {
          if (!v54)
          {
            __srca = v52;
            v909 = v51;
            v929 = v14;
            v938 = v15;
            v916 = v50;
            v922 = v13;
            v55 = v49[1];
            *v48 = *v49;
            v48[1] = v55;
            v56 = v49[3];
            v48[2] = v49[2];
            v48[3] = v56;
            v57 = v50[6];
            v58 = (char *)v48 + v57;
            v59 = (char *)v49 + v57;
            v60 = *(_OWORD *)((char *)v49 + v57 + 112);
            *((_OWORD *)v58 + 6) = *(_OWORD *)((char *)v49 + v57 + 96);
            *((_OWORD *)v58 + 7) = v60;
            *((_QWORD *)v58 + 16) = *(_QWORD *)((char *)v49 + v57 + 128);
            v61 = *(_OWORD *)((char *)v49 + v57 + 48);
            *((_OWORD *)v58 + 2) = *(_OWORD *)((char *)v49 + v57 + 32);
            *((_OWORD *)v58 + 3) = v61;
            v62 = *(_OWORD *)((char *)v49 + v57 + 80);
            *((_OWORD *)v58 + 4) = *(_OWORD *)((char *)v49 + v57 + 64);
            *((_OWORD *)v58 + 5) = v62;
            v63 = *(_OWORD *)((char *)v49 + v57 + 16);
            *(_OWORD *)v58 = *(_OWORD *)((char *)v49 + v57);
            *((_OWORD *)v58 + 1) = v63;
            v64 = (int *)type metadata accessor for CloudKitUserIdentity(0);
            v65 = v64[5];
            v66 = &v58[v65];
            v67 = &v59[v65];
            v68 = sub_1AD63AE2C();
            v69 = *(_QWORD *)(v68 - 8);
            v945 = v5;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
            {
              v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
              memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v66, v67, v68);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
            }
            v106 = v64[6];
            v107 = &v58[v106];
            v108 = &v59[v106];
            v109 = *((_OWORD *)v108 + 5);
            *((_OWORD *)v107 + 4) = *((_OWORD *)v108 + 4);
            *((_OWORD *)v107 + 5) = v109;
            v110 = *((_OWORD *)v108 + 3);
            *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
            *((_OWORD *)v107 + 3) = v110;
            v111 = *((_OWORD *)v108 + 9);
            *((_OWORD *)v107 + 8) = *((_OWORD *)v108 + 8);
            *((_OWORD *)v107 + 9) = v111;
            v112 = *((_OWORD *)v108 + 7);
            *((_OWORD *)v107 + 6) = *((_OWORD *)v108 + 6);
            *((_OWORD *)v107 + 7) = v112;
            v113 = *((_OWORD *)v108 + 13);
            *((_OWORD *)v107 + 12) = *((_OWORD *)v108 + 12);
            *((_OWORD *)v107 + 13) = v113;
            v114 = *((_OWORD *)v108 + 11);
            *((_OWORD *)v107 + 10) = *((_OWORD *)v108 + 10);
            *((_OWORD *)v107 + 11) = v114;
            v115 = *((_OWORD *)v108 + 1);
            *(_OWORD *)v107 = *(_OWORD *)v108;
            *((_OWORD *)v107 + 1) = v115;
            *(_QWORD *)&v58[v64[7]] = *(_QWORD *)&v59[v64[7]];
            *(_OWORD *)&v58[v64[8]] = *(_OWORD *)&v59[v64[8]];
            *(_OWORD *)&v58[v64[9]] = *(_OWORD *)&v59[v64[9]];
            v58[v64[10]] = v59[v64[10]];
            v58[v64[11]] = v59[v64[11]];
            *(_OWORD *)&v58[v64[12]] = *(_OWORD *)&v59[v64[12]];
            *(_QWORD *)&v58[v64[13]] = *(_QWORD *)&v59[v64[13]];
            v50 = v916;
            *((_BYTE *)v48 + v916[7]) = *((_BYTE *)v49 + v916[7]);
            *((_BYTE *)v48 + v916[8]) = *((_BYTE *)v49 + v916[8]);
            *((_BYTE *)v48 + v916[9]) = *((_BYTE *)v49 + v916[9]);
            *((_BYTE *)v48 + v916[10]) = *((_BYTE *)v49 + v916[10]);
            *((_BYTE *)v48 + v916[11]) = *((_BYTE *)v49 + v916[11]);
            *((_BYTE *)v48 + v916[12]) = *((_BYTE *)v49 + v916[12]);
            *((_BYTE *)v48 + v916[13]) = *((_BYTE *)v49 + v916[13]);
            *((_BYTE *)v48 + v916[14]) = *((_BYTE *)v49 + v916[14]);
            *(_OWORD *)((char *)v48 + v916[15]) = *(_OWORD *)((char *)v49 + v916[15]);
            *(_OWORD *)((char *)v48 + v916[16]) = *(_OWORD *)((char *)v49 + v916[16]);
            *((_BYTE *)v48 + v916[17]) = *((_BYTE *)v49 + v916[17]);
            *((_BYTE *)v48 + v916[18]) = *((_BYTE *)v49 + v916[18]);
            v116 = v916[19];
            v117 = (_OWORD *)((char *)v48 + v116);
            v118 = (_OWORD *)((char *)v49 + v116);
            v119 = type metadata accessor for CloudKitSharingToken();
            v120 = *(_QWORD *)(v119 - 8);
            v14 = v929;
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
            {
              v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
              memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
              v52 = __srca;
            }
            else
            {
              v177 = v118[13];
              v117[12] = v118[12];
              v117[13] = v177;
              v117[14] = v118[14];
              *((_QWORD *)v117 + 30) = *((_QWORD *)v118 + 30);
              v178 = v118[9];
              v117[8] = v118[8];
              v117[9] = v178;
              v179 = v118[11];
              v117[10] = v118[10];
              v117[11] = v179;
              v180 = v118[5];
              v117[4] = v118[4];
              v117[5] = v180;
              v181 = v118[7];
              v117[6] = v118[6];
              v117[7] = v181;
              v182 = v118[1];
              *v117 = *v118;
              v117[1] = v182;
              v183 = v118[3];
              v117[2] = v118[2];
              v117[3] = v183;
              *(_OWORD *)((char *)v117 + 248) = *(_OWORD *)((char *)v118 + 248);
              *(_OWORD *)((char *)v117 + 264) = *(_OWORD *)((char *)v118 + 264);
              v184 = *(int *)(v119 + 24);
              v185 = (char *)v117 + v184;
              v186 = (char *)v118 + v184;
              *(_OWORD *)((char *)v117 + v184) = *(_OWORD *)((char *)v118 + v184);
              v187 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
              __dsta = &v185[v187];
              v188 = &v186[v187];
              v189 = sub_1AD63AF28();
              v190 = *(_QWORD *)(v189 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189))
              {
                v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                memcpy(__dsta, v188, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v190 + 32))(__dsta, v188, v189);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v190 + 56))(__dsta, 0, 1, v189);
              }
              v52 = __srca;
              v213 = *(int *)(v119 + 28);
              v214 = (_OWORD *)((char *)v117 + v213);
              v215 = (_OWORD *)((char *)v118 + v213);
              v216 = v215[1];
              *v214 = *v215;
              v214[1] = v216;
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
              v14 = v929;
            }
            *(_OWORD *)((char *)v48 + v916[20]) = *(_OWORD *)((char *)v49 + v916[20]);
            *((_BYTE *)v48 + v916[21]) = *((_BYTE *)v49 + v916[21]);
            *((_BYTE *)v48 + v916[22]) = *((_BYTE *)v49 + v916[22]);
            *((_BYTE *)v48 + v916[23]) = *((_BYTE *)v49 + v916[23]);
            v51 = v909;
            (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v909 + 56))(v48, 0, 1, v916);
            v15 = v938;
            v5 = v945;
            v13 = v922;
LABEL_215:
            v376 = v15[6];
            v377 = (_OWORD *)((char *)v13 + v376);
            v378 = (_OWORD *)((char *)v14 + v376);
            v379 = v52((_OWORD *)((char *)v13 + v376), 1, v50);
            v380 = v52(v378, 1, v50);
            if (v379)
            {
              if (!v380)
              {
                v912 = v51;
                v919 = v50;
                v932 = v14;
                v940 = v15;
                v925 = v13;
                v381 = v378[1];
                *v377 = *v378;
                v377[1] = v381;
                v382 = v378[3];
                v377[2] = v378[2];
                v377[3] = v382;
                v383 = v50[6];
                v384 = (char *)v377 + v383;
                v385 = (char *)v378 + v383;
                v386 = *(_OWORD *)((char *)v378 + v383 + 112);
                *((_OWORD *)v384 + 6) = *(_OWORD *)((char *)v378 + v383 + 96);
                *((_OWORD *)v384 + 7) = v386;
                *((_QWORD *)v384 + 16) = *(_QWORD *)((char *)v378 + v383 + 128);
                v387 = *(_OWORD *)((char *)v378 + v383 + 48);
                *((_OWORD *)v384 + 2) = *(_OWORD *)((char *)v378 + v383 + 32);
                *((_OWORD *)v384 + 3) = v387;
                v388 = *(_OWORD *)((char *)v378 + v383 + 80);
                *((_OWORD *)v384 + 4) = *(_OWORD *)((char *)v378 + v383 + 64);
                *((_OWORD *)v384 + 5) = v388;
                v389 = *(_OWORD *)((char *)v378 + v383 + 16);
                *(_OWORD *)v384 = *(_OWORD *)((char *)v378 + v383);
                *((_OWORD *)v384 + 1) = v389;
                v390 = (int *)type metadata accessor for CloudKitUserIdentity(0);
                v391 = v390[5];
                v392 = &v384[v391];
                v393 = &v385[v391];
                v394 = sub_1AD63AE2C();
                v395 = *(_QWORD *)(v394 - 8);
                v948 = v5;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v395 + 48))(v393, 1, v394))
                {
                  v396 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
                  memcpy(v392, v393, *(_QWORD *)(*(_QWORD *)(v396 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v395 + 32))(v392, v393, v394);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v395 + 56))(v392, 0, 1, v394);
                }
                v401 = v390[6];
                v402 = &v384[v401];
                v403 = &v385[v401];
                v404 = *((_OWORD *)v403 + 5);
                *((_OWORD *)v402 + 4) = *((_OWORD *)v403 + 4);
                *((_OWORD *)v402 + 5) = v404;
                v405 = *((_OWORD *)v403 + 3);
                *((_OWORD *)v402 + 2) = *((_OWORD *)v403 + 2);
                *((_OWORD *)v402 + 3) = v405;
                v406 = *((_OWORD *)v403 + 9);
                *((_OWORD *)v402 + 8) = *((_OWORD *)v403 + 8);
                *((_OWORD *)v402 + 9) = v406;
                v407 = *((_OWORD *)v403 + 7);
                *((_OWORD *)v402 + 6) = *((_OWORD *)v403 + 6);
                *((_OWORD *)v402 + 7) = v407;
                v408 = *((_OWORD *)v403 + 13);
                *((_OWORD *)v402 + 12) = *((_OWORD *)v403 + 12);
                *((_OWORD *)v402 + 13) = v408;
                v409 = *((_OWORD *)v403 + 11);
                *((_OWORD *)v402 + 10) = *((_OWORD *)v403 + 10);
                *((_OWORD *)v402 + 11) = v409;
                v410 = *((_OWORD *)v403 + 1);
                *(_OWORD *)v402 = *(_OWORD *)v403;
                *((_OWORD *)v402 + 1) = v410;
                *(_QWORD *)&v384[v390[7]] = *(_QWORD *)&v385[v390[7]];
                *(_OWORD *)&v384[v390[8]] = *(_OWORD *)&v385[v390[8]];
                *(_OWORD *)&v384[v390[9]] = *(_OWORD *)&v385[v390[9]];
                v384[v390[10]] = v385[v390[10]];
                v384[v390[11]] = v385[v390[11]];
                *(_OWORD *)&v384[v390[12]] = *(_OWORD *)&v385[v390[12]];
                *(_QWORD *)&v384[v390[13]] = *(_QWORD *)&v385[v390[13]];
                *((_BYTE *)v377 + v919[7]) = *((_BYTE *)v378 + v919[7]);
                *((_BYTE *)v377 + v919[8]) = *((_BYTE *)v378 + v919[8]);
                *((_BYTE *)v377 + v919[9]) = *((_BYTE *)v378 + v919[9]);
                *((_BYTE *)v377 + v919[10]) = *((_BYTE *)v378 + v919[10]);
                *((_BYTE *)v377 + v919[11]) = *((_BYTE *)v378 + v919[11]);
                *((_BYTE *)v377 + v919[12]) = *((_BYTE *)v378 + v919[12]);
                *((_BYTE *)v377 + v919[13]) = *((_BYTE *)v378 + v919[13]);
                *((_BYTE *)v377 + v919[14]) = *((_BYTE *)v378 + v919[14]);
                *(_OWORD *)((char *)v377 + v919[15]) = *(_OWORD *)((char *)v378 + v919[15]);
                *(_OWORD *)((char *)v377 + v919[16]) = *(_OWORD *)((char *)v378 + v919[16]);
                *((_BYTE *)v377 + v919[17]) = *((_BYTE *)v378 + v919[17]);
                *((_BYTE *)v377 + v919[18]) = *((_BYTE *)v378 + v919[18]);
                v411 = v919[19];
                v412 = (_OWORD *)((char *)v377 + v411);
                v413 = (_OWORD *)((char *)v378 + v411);
                v414 = type metadata accessor for CloudKitSharingToken();
                v415 = *(_QWORD *)(v414 - 8);
                v14 = v932;
                if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v415 + 48))(v413, 1, v414))
                {
                  v416 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                  memcpy(v412, v413, *(_QWORD *)(*(_QWORD *)(v416 - 8) + 64));
                }
                else
                {
                  v417 = v413[13];
                  v412[12] = v413[12];
                  v412[13] = v417;
                  v412[14] = v413[14];
                  *((_QWORD *)v412 + 30) = *((_QWORD *)v413 + 30);
                  v418 = v413[9];
                  v412[8] = v413[8];
                  v412[9] = v418;
                  v419 = v413[11];
                  v412[10] = v413[10];
                  v412[11] = v419;
                  v420 = v413[5];
                  v412[4] = v413[4];
                  v412[5] = v420;
                  v421 = v413[7];
                  v412[6] = v413[6];
                  v412[7] = v421;
                  v422 = v413[1];
                  *v412 = *v413;
                  v412[1] = v422;
                  v423 = v413[3];
                  v412[2] = v413[2];
                  v412[3] = v423;
                  *(_OWORD *)((char *)v412 + 248) = *(_OWORD *)((char *)v413 + 248);
                  *(_OWORD *)((char *)v412 + 264) = *(_OWORD *)((char *)v413 + 264);
                  v424 = *(int *)(v414 + 24);
                  v425 = (char *)v412 + v424;
                  v426 = (char *)v413 + v424;
                  *(_OWORD *)((char *)v412 + v424) = *(_OWORD *)((char *)v413 + v424);
                  v427 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
                  __srcd = &v425[v427];
                  v428 = &v426[v427];
                  v429 = sub_1AD63AF28();
                  v430 = *(_QWORD *)(v429 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v430 + 48))(v428, 1, v429))
                  {
                    v431 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                    memcpy(__srcd, v428, *(_QWORD *)(*(_QWORD *)(v431 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v430 + 32))(__srcd, v428, v429);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v430 + 56))(__srcd, 0, 1, v429);
                  }
                  v441 = *(int *)(v414 + 28);
                  v442 = (_OWORD *)((char *)v412 + v441);
                  v443 = (_OWORD *)((char *)v413 + v441);
                  v444 = v443[1];
                  *v442 = *v443;
                  v442[1] = v444;
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v415 + 56))(v412, 0, 1, v414);
                  v14 = v932;
                }
                *(_OWORD *)((char *)v377 + v919[20]) = *(_OWORD *)((char *)v378 + v919[20]);
                *((_BYTE *)v377 + v919[21]) = *((_BYTE *)v378 + v919[21]);
                *((_BYTE *)v377 + v919[22]) = *((_BYTE *)v378 + v919[22]);
                *((_BYTE *)v377 + v919[23]) = *((_BYTE *)v378 + v919[23]);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v912 + 56))(v377, 0, 1, v919);
                v15 = v940;
                v5 = v948;
                v13 = v925;
LABEL_385:
                v606 = v15[7];
                v607 = (char *)v13 + v606;
                v608 = (char *)v14 + v606;
                *(_OWORD *)((char *)v13 + v606) = *(_OWORD *)((char *)v14 + v606);
                swift_release();
                v609 = v608 + 16;
                v4 = v953;
                a3 = v957;
                if (*((_QWORD *)v607 + 3) != 1)
                {
                  v610 = *((_QWORD *)v608 + 3);
                  if (v610 != 1)
                  {
                    *((_QWORD *)v607 + 2) = *v609;
                    *((_QWORD *)v607 + 3) = v610;
                    swift_bridgeObjectRelease();
LABEL_390:
                    *((_BYTE *)v13 + v15[8]) = *((_BYTE *)v14 + v15[8]);
                    v611 = v15[9];
                    v612 = (char *)v13 + v611;
                    v613 = (char *)v14 + v611;
                    *(_OWORD *)((char *)v13 + v611) = *(_OWORD *)((char *)v14 + v611);
                    swift_release();
                    v614 = v613 + 16;
                    if (*((_QWORD *)v612 + 3) != 1)
                    {
                      v615 = *((_QWORD *)v613 + 3);
                      if (v615 != 1)
                      {
                        *((_QWORD *)v612 + 2) = *v614;
                        *((_QWORD *)v612 + 3) = v615;
                        swift_bridgeObjectRelease();
                        goto LABEL_395;
                      }
                      sub_1AD009758((uint64_t)(v612 + 16), &qword_1ED2E3198);
                    }
                    *((_OWORD *)v612 + 1) = *(_OWORD *)v614;
LABEL_395:
                    *(_QWORD *)((char *)v13 + v15[10]) = *(_QWORD *)((char *)v14 + v15[10]);
                    swift_bridgeObjectRelease();
                    goto LABEL_396;
                  }
                  sub_1AD009758((uint64_t)(v607 + 16), &qword_1ED2E3198);
                }
                *((_OWORD *)v607 + 1) = *(_OWORD *)v609;
                goto LABEL_390;
              }
LABEL_221:
              v397 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
              memcpy(v377, v378, *(_QWORD *)(*(_QWORD *)(v397 - 8) + 64));
              goto LABEL_385;
            }
            if (v380)
            {
              sub_1AD066230((uint64_t)v377, type metadata accessor for CloudKitShareParticipant);
              goto LABEL_221;
            }
            *v377 = *v378;
            swift_release();
            v398 = *((_QWORD *)v378 + 3);
            *((_QWORD *)v377 + 2) = *((_QWORD *)v378 + 2);
            *((_QWORD *)v377 + 3) = v398;
            swift_bridgeObjectRelease();
            v377[2] = v378[2];
            swift_release();
            v399 = v378 + 3;
            v949 = v5;
            if (*((_QWORD *)v377 + 7) != 1)
            {
              v400 = *((_QWORD *)v378 + 7);
              if (v400 != 1)
              {
                *((_QWORD *)v377 + 6) = *v399;
                *((_QWORD *)v377 + 7) = v400;
                swift_bridgeObjectRelease();
LABEL_232:
                v920 = v50;
                v926 = v13;
                v432 = v50[6];
                v433 = (uint64_t)v377 + v432;
                v434 = (char *)v378 + v432;
                v933 = v14;
                v941 = v15;
                if (*(_QWORD *)((char *)v377 + v432))
                {
                  if (*(_QWORD *)v434)
                  {
                    v435 = *((_QWORD *)v434 + 1);
                    *(_QWORD *)v433 = *(_QWORD *)v434;
                    *(_QWORD *)(v433 + 8) = v435;
                    swift_release();
                    v436 = *((_QWORD *)v434 + 3);
                    *(_QWORD *)(v433 + 16) = *((_QWORD *)v434 + 2);
                    *(_QWORD *)(v433 + 24) = v436;
                    swift_bridgeObjectRelease();
                    *(_OWORD *)(v433 + 32) = *((_OWORD *)v434 + 2);
                    swift_release();
                    v437 = *((_QWORD *)v434 + 7);
                    *(_QWORD *)(v433 + 48) = *((_QWORD *)v434 + 6);
                    *(_QWORD *)(v433 + 56) = v437;
                    swift_bridgeObjectRelease();
                    *(_OWORD *)(v433 + 64) = *((_OWORD *)v434 + 4);
                    swift_release();
                    v438 = *((_QWORD *)v434 + 11);
                    *(_QWORD *)(v433 + 80) = *((_QWORD *)v434 + 10);
                    *(_QWORD *)(v433 + 88) = v438;
                    swift_bridgeObjectRelease();
                    *(_OWORD *)(v433 + 96) = *((_OWORD *)v434 + 6);
                    swift_release();
                    v439 = v434 + 112;
                    if (*(_QWORD *)(v433 + 120) != 1)
                    {
                      v440 = *((_QWORD *)v434 + 15);
                      if (v440 != 1)
                      {
                        *(_QWORD *)(v433 + 112) = *v439;
                        *(_QWORD *)(v433 + 120) = v440;
                        swift_bridgeObjectRelease();
                        goto LABEL_244;
                      }
                      sub_1AD009758(v433 + 112, &qword_1ED2E3198);
                    }
                    *(_OWORD *)(v433 + 112) = *(_OWORD *)v439;
LABEL_244:
                    *(_QWORD *)(v433 + 128) = *((_QWORD *)v434 + 16);
LABEL_245:
                    v913 = (int *)type metadata accessor for CloudKitUserIdentity(0);
                    v449 = v913[5];
                    v450 = (void *)(v433 + v449);
                    v451 = &v434[v449];
                    v452 = sub_1AD63AE2C();
                    v453 = *(_QWORD *)(v452 - 8);
                    v454 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v453 + 48);
                    v455 = v454(v450, 1, v452);
                    v456 = v454(v451, 1, v452);
                    if (v455)
                    {
                      if (!v456)
                      {
                        (*(void (**)(void *, char *, uint64_t))(v453 + 32))(v450, v451, v452);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v453 + 56))(v450, 0, 1, v452);
                        goto LABEL_251;
                      }
                    }
                    else
                    {
                      if (!v456)
                      {
                        (*(void (**)(void *, char *, uint64_t))(v453 + 40))(v450, v451, v452);
LABEL_251:
                        v458 = v913[6];
                        v459 = v433 + v458;
                        v460 = &v434[v458];
                        v13 = v926;
                        v14 = v933;
                        if (*(_QWORD *)(v433 + v458))
                        {
                          if (*(_QWORD *)v460)
                          {
                            v461 = *((_QWORD *)v460 + 1);
                            *(_QWORD *)v459 = *(_QWORD *)v460;
                            *(_QWORD *)(v459 + 8) = v461;
                            swift_release();
                            v462 = v460 + 16;
                            if (*(_QWORD *)(v459 + 24) != 1)
                            {
                              v463 = *((_QWORD *)v460 + 3);
                              if (v463 != 1)
                              {
                                *(_QWORD *)(v459 + 16) = *v462;
                                *(_QWORD *)(v459 + 24) = v463;
                                swift_bridgeObjectRelease();
LABEL_261:
                                *(_OWORD *)(v459 + 32) = *((_OWORD *)v460 + 2);
                                swift_release();
                                v471 = v460 + 48;
                                if (*(_QWORD *)(v459 + 56) != 1)
                                {
                                  v472 = *((_QWORD *)v460 + 7);
                                  if (v472 != 1)
                                  {
                                    *(_QWORD *)(v459 + 48) = *v471;
                                    *(_QWORD *)(v459 + 56) = v472;
                                    swift_bridgeObjectRelease();
LABEL_266:
                                    v473 = *((_QWORD *)v460 + 8);
                                    if (*(_QWORD *)(v459 + 64))
                                    {
                                      if (v473)
                                      {
                                        v474 = *((_QWORD *)v460 + 9);
                                        *(_QWORD *)(v459 + 64) = v473;
                                        *(_QWORD *)(v459 + 72) = v474;
                                        swift_release();
                                        v475 = *((_QWORD *)v460 + 11);
                                        *(_QWORD *)(v459 + 80) = *((_QWORD *)v460 + 10);
                                        *(_QWORD *)(v459 + 88) = v475;
                                        swift_bridgeObjectRelease();
                                        *(_OWORD *)(v459 + 96) = *((_OWORD *)v460 + 6);
                                        swift_release();
                                        v476 = *((_QWORD *)v460 + 15);
                                        *(_QWORD *)(v459 + 112) = *((_QWORD *)v460 + 14);
                                        *(_QWORD *)(v459 + 120) = v476;
                                        swift_bridgeObjectRelease();
                                        *(_OWORD *)(v459 + 128) = *((_OWORD *)v460 + 8);
                                        swift_release();
                                        v477 = *((_QWORD *)v460 + 19);
                                        *(_QWORD *)(v459 + 144) = *((_QWORD *)v460 + 18);
                                        *(_QWORD *)(v459 + 152) = v477;
                                        swift_bridgeObjectRelease();
                                        *(_OWORD *)(v459 + 160) = *((_OWORD *)v460 + 10);
                                        swift_release();
                                        v478 = v460 + 176;
                                        if (*(_QWORD *)(v459 + 184) != 1)
                                        {
                                          v479 = *((_QWORD *)v460 + 23);
                                          if (v479 != 1)
                                          {
                                            *(_QWORD *)(v459 + 176) = *v478;
                                            *(_QWORD *)(v459 + 184) = v479;
                                            swift_bridgeObjectRelease();
                                            goto LABEL_275;
                                          }
                                          sub_1AD009758(v459 + 176, &qword_1ED2E3198);
                                        }
                                        *(_OWORD *)(v459 + 176) = *(_OWORD *)v478;
LABEL_275:
                                        *(_QWORD *)(v459 + 192) = *((_QWORD *)v460 + 24);
LABEL_276:
                                        *(_BYTE *)(v459 + 200) = v460[200];
                                        v484 = v460 + 208;
                                        v485 = *(_QWORD *)(v459 + 216);
                                        if (v485 >> 60 != 15)
                                        {
                                          v486 = *((_QWORD *)v460 + 27);
                                          if (v486 >> 60 != 15)
                                          {
                                            v487 = *(_QWORD *)(v459 + 208);
                                            *(_QWORD *)(v459 + 208) = *v484;
                                            *(_QWORD *)(v459 + 216) = v486;
                                            sub_1AD00412C(v487, v485);
LABEL_281:
                                            *(_QWORD *)(v433 + v913[7]) = *(_QWORD *)&v434[v913[7]];
                                            swift_bridgeObjectRelease();
                                            v488 = v913[8];
                                            v489 = (uint64_t *)(v433 + v488);
                                            v490 = (uint64_t *)&v434[v488];
                                            v491 = *(_QWORD *)(v433 + v488 + 8);
                                            v15 = v941;
                                            if (v491 >> 60 != 15)
                                            {
                                              v492 = v490[1];
                                              if (v492 >> 60 != 15)
                                              {
                                                v493 = *v489;
                                                *v489 = *v490;
                                                v489[1] = v492;
                                                sub_1AD00412C(v493, v491);
LABEL_286:
                                                v494 = v913[9];
                                                v495 = (uint64_t *)(v433 + v494);
                                                v496 = (uint64_t *)&v434[v494];
                                                v497 = *(_QWORD *)(v433 + v494 + 8);
                                                if (v497 >> 60 != 15)
                                                {
                                                  v498 = v496[1];
                                                  if (v498 >> 60 != 15)
                                                  {
                                                    v499 = *v495;
                                                    *v495 = *v496;
                                                    v495[1] = v498;
                                                    sub_1AD00412C(v499, v497);
LABEL_291:
                                                    *(_BYTE *)(v433 + v913[10]) = v434[v913[10]];
                                                    *(_BYTE *)(v433 + v913[11]) = v434[v913[11]];
                                                    v500 = v913[12];
                                                    v501 = (uint64_t *)(v433 + v500);
                                                    v502 = (uint64_t *)&v434[v500];
                                                    v503 = *(_QWORD *)(v433 + v500 + 8);
                                                    if (v503 >> 60 != 15)
                                                    {
                                                      v504 = v502[1];
                                                      if (v504 >> 60 != 15)
                                                      {
                                                        v505 = *v501;
                                                        *v501 = *v502;
                                                        v501[1] = v504;
                                                        sub_1AD00412C(v505, v503);
LABEL_296:
                                                        *(_QWORD *)(v433 + v913[13]) = *(_QWORD *)&v434[v913[13]];
                                                        v506 = v920;
                                                        *((_BYTE *)v377 + v920[7]) = *((_BYTE *)v378 + v920[7]);
                                                        *((_BYTE *)v377 + v920[8]) = *((_BYTE *)v378 + v920[8]);
                                                        *((_BYTE *)v377 + v920[9]) = *((_BYTE *)v378 + v920[9]);
                                                        *((_BYTE *)v377 + v920[10]) = *((_BYTE *)v378 + v920[10]);
                                                        *((_BYTE *)v377 + v920[11]) = *((_BYTE *)v378 + v920[11]);
                                                        *((_BYTE *)v377 + v920[12]) = *((_BYTE *)v378 + v920[12]);
                                                        *((_BYTE *)v377 + v920[13]) = *((_BYTE *)v378 + v920[13]);
                                                        *((_BYTE *)v377 + v920[14]) = *((_BYTE *)v378 + v920[14]);
                                                        v507 = v920[15];
                                                        v508 = (uint64_t *)((char *)v377 + v507);
                                                        v509 = (uint64_t *)((char *)v378 + v507);
                                                        v510 = *(_QWORD *)((char *)v377 + v507 + 8);
                                                        if (v510 >> 60 != 15)
                                                        {
                                                          v511 = v509[1];
                                                          if (v511 >> 60 != 15)
                                                          {
                                                            v512 = *v508;
                                                            *v508 = *v509;
                                                            v508[1] = v511;
                                                            sub_1AD00412C(v512, v510);
LABEL_301:
                                                            v513 = v920[16];
                                                            v514 = (uint64_t *)((char *)v377 + v513);
                                                            v515 = (uint64_t *)((char *)v378 + v513);
                                                            v516 = *(_QWORD *)((char *)v377 + v513 + 8);
                                                            if (v516 >> 60 != 15)
                                                            {
                                                              v517 = v515[1];
                                                              if (v517 >> 60 != 15)
                                                              {
                                                                v518 = *v514;
                                                                *v514 = *v515;
                                                                v514[1] = v517;
                                                                sub_1AD00412C(v518, v516);
LABEL_306:
                                                                *((_BYTE *)v377 + v920[17]) = *((_BYTE *)v378 + v920[17]);
                                                                *((_BYTE *)v377 + v920[18]) = *((_BYTE *)v378 + v920[18]);
                                                                v519 = v920[19];
                                                                v520 = (char *)v377 + v519;
                                                                v521 = (_OWORD *)((char *)v378 + v519);
                                                                v522 = type metadata accessor for CloudKitSharingToken();
                                                                __dstd = *(_QWORD **)(v522 - 8);
                                                                v523 = (uint64_t (*)(char *, uint64_t, uint64_t))__dstd[6];
                                                                v914 = (uint64_t)v520;
                                                                LODWORD(v520) = v523(v520, 1, v522);
                                                                __srce = (char *)v521;
                                                                v524 = v523((char *)v521, 1, v522);
                                                                if ((_DWORD)v520)
                                                                {
                                                                  if (v524)
                                                                  {
                                                                    v525 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370)
                                                                                                 - 8)
                                                                                     + 64);
                                                                    v526 = (void *)v914;
LABEL_311:
                                                                    memcpy(v526, v521, v525);
                                                                    v5 = v949;
                                                                    goto LABEL_379;
                                                                  }
                                                                  v527 = v521[13];
                                                                  *(_OWORD *)(v914 + 192) = v521[12];
                                                                  *(_OWORD *)(v914 + 208) = v527;
                                                                  *(_OWORD *)(v914 + 224) = v521[14];
                                                                  *(_QWORD *)(v914 + 240) = *((_QWORD *)v521 + 30);
                                                                  v528 = v521[9];
                                                                  *(_OWORD *)(v914 + 128) = v521[8];
                                                                  *(_OWORD *)(v914 + 144) = v528;
                                                                  v529 = v521[11];
                                                                  *(_OWORD *)(v914 + 160) = v521[10];
                                                                  *(_OWORD *)(v914 + 176) = v529;
                                                                  v530 = v521[5];
                                                                  *(_OWORD *)(v914 + 64) = v521[4];
                                                                  *(_OWORD *)(v914 + 80) = v530;
                                                                  v531 = v521[7];
                                                                  *(_OWORD *)(v914 + 96) = v521[6];
                                                                  *(_OWORD *)(v914 + 112) = v531;
                                                                  v532 = v521[1];
                                                                  *(_OWORD *)v914 = *v521;
                                                                  *(_OWORD *)(v914 + 16) = v532;
                                                                  v533 = v521[3];
                                                                  *(_OWORD *)(v914 + 32) = v521[2];
                                                                  *(_OWORD *)(v914 + 48) = v533;
                                                                  *(_OWORD *)(v914 + 248) = *(_OWORD *)((char *)v521 + 248);
                                                                  *(_OWORD *)(v914 + 264) = *(_OWORD *)((char *)v521 + 264);
                                                                  v534 = *(int *)(v522 + 24);
                                                                  v535 = v914 + v534;
                                                                  v536 = (char *)v521 + v534;
                                                                  *(_OWORD *)(v914 + v534) = *(_OWORD *)((char *)v521 + v534);
                                                                  v537 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                                + 28);
                                                                  v538 = (void *)(v535 + v537);
                                                                  v539 = &v536[v537];
                                                                  v540 = sub_1AD63AF28();
                                                                  v541 = *(_QWORD *)(v540 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v541 + 48))(v539, 1, v540))
                                                                  {
                                                                    v542 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v538, v539, *(_QWORD *)(*(_QWORD *)(v542 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(void *, char *, uint64_t))(v541 + 32))(v538, v539, v540);
                                                                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v541 + 56))(v538, 0, 1, v540);
                                                                  }
                                                                  v14 = v933;
                                                                  v506 = v920;
                                                                  v547 = *(int *)(v522 + 28);
                                                                  v548 = (_OWORD *)(v914 + v547);
                                                                  v549 = (_OWORD *)((char *)v521 + v547);
                                                                  v550 = v549[1];
                                                                  *v548 = *v549;
                                                                  v548[1] = v550;
                                                                  ((void (*)(void))__dstd[7])();
                                                                  v15 = v941;
                                                                  v5 = v949;
                                                                  v13 = v926;
LABEL_379:
                                                                  v600 = v506[20];
                                                                  v601 = (uint64_t *)((char *)v377 + v600);
                                                                  v602 = (uint64_t *)((char *)v378 + v600);
                                                                  v603 = *(_QWORD *)((char *)v377 + v600 + 8);
                                                                  if (v603 >> 60 != 15)
                                                                  {
                                                                    v604 = v602[1];
                                                                    if (v604 >> 60 != 15)
                                                                    {
                                                                      v605 = *v601;
                                                                      *v601 = *v602;
                                                                      v601[1] = v604;
                                                                      sub_1AD00412C(v605, v603);
                                                                      goto LABEL_384;
                                                                    }
                                                                    sub_1AD007EC0((uint64_t)v601);
                                                                  }
                                                                  *(_OWORD *)v601 = *(_OWORD *)v602;
LABEL_384:
                                                                  *((_BYTE *)v377 + v506[21]) = *((_BYTE *)v378
                                                                                                + v506[21]);
                                                                  *((_BYTE *)v377 + v506[22]) = *((_BYTE *)v378
                                                                                                + v506[22]);
                                                                  *((_BYTE *)v377 + v506[23]) = *((_BYTE *)v378
                                                                                                + v506[23]);
                                                                  goto LABEL_385;
                                                                }
                                                                if (v524)
                                                                {
                                                                  sub_1AD066230(v914, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                                                                  v525 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370)
                                                                                               - 8)
                                                                                   + 64);
                                                                  v526 = (void *)v914;
                                                                  goto LABEL_311;
                                                                }
                                                                v543 = v522;
                                                                *(_DWORD *)v914 = *(_DWORD *)__srce;
                                                                *(_QWORD *)(v914 + 8) = *((_QWORD *)__srce + 1);
                                                                swift_bridgeObjectRelease();
                                                                *(_QWORD *)(v914 + 16) = *((_QWORD *)__srce + 2);
                                                                swift_bridgeObjectRelease();
                                                                *(_OWORD *)(v914 + 24) = *(_OWORD *)(__srce + 24);
                                                                swift_release();
                                                                v544 = __srce + 40;
                                                                v545 = *(_QWORD *)(v914 + 48);
                                                                if (v545 >> 60 != 11)
                                                                {
                                                                  v546 = *((_QWORD *)__srce + 6);
                                                                  if (v546 >> 60 == 11)
                                                                  {
                                                                    sub_1AD009758(v914 + 40, &qword_1ED2E3250);
                                                                  }
                                                                  else if (v545 >> 60 != 15)
                                                                  {
                                                                    if (v546 >> 60 != 15)
                                                                    {
                                                                      v892 = *(_QWORD *)(v914 + 40);
                                                                      *(_QWORD *)(v914 + 40) = *v544;
                                                                      *(_QWORD *)(v914 + 48) = v546;
                                                                      sub_1AD00412C(v892, v545);
LABEL_323:
                                                                      if (*(_QWORD *)(v914 + 72))
                                                                      {
                                                                        v551 = *((_QWORD *)__srce + 9);
                                                                        if (v551)
                                                                        {
                                                                          v552 = *((_DWORD *)__srce + 15);
                                                                          *(_DWORD *)(v914 + 56) = *((_DWORD *)__srce + 14);
                                                                          *(_DWORD *)(v914 + 60) = v552;
                                                                          *(_BYTE *)(v914 + 64) = __srce[64];
                                                                          v553 = *((_QWORD *)__srce + 10);
                                                                          *(_QWORD *)(v914 + 72) = v551;
                                                                          *(_QWORD *)(v914 + 80) = v553;
                                                                          swift_release();
                                                                          v554 = __srce + 88;
                                                                          v555 = *(_QWORD *)(v914 + 96);
                                                                          if (v555 >> 60 == 15)
                                                                          {
LABEL_328:
                                                                            *(_OWORD *)(v914 + 88) = *v554;
                                                                            goto LABEL_331;
                                                                          }
                                                                          v556 = *((_QWORD *)__srce + 12);
                                                                          if (v556 >> 60 == 15)
                                                                          {
                                                                            sub_1AD007EC0(v914 + 88);
                                                                            goto LABEL_328;
                                                                          }
                                                                          v572 = *(_QWORD *)(v914 + 88);
                                                                          *(_QWORD *)(v914 + 88) = *(_QWORD *)v554;
                                                                          *(_QWORD *)(v914 + 96) = v556;
                                                                          sub_1AD00412C(v572, v555);
LABEL_331:
                                                                          *(_OWORD *)(v914 + 104) = *(_OWORD *)(__srce + 104);
                                                                          swift_release();
                                                                          v558 = __srce + 120;
                                                                          v559 = *(_QWORD *)(v914 + 128);
                                                                          if (v559 >> 60 != 15)
                                                                          {
                                                                            v560 = *((_QWORD *)__srce + 16);
                                                                            if (v560 >> 60 != 15)
                                                                            {
                                                                              v561 = *(_QWORD *)(v914 + 120);
                                                                              *(_QWORD *)(v914 + 120) = *v558;
                                                                              *(_QWORD *)(v914 + 128) = v560;
                                                                              sub_1AD00412C(v561, v559);
LABEL_336:
                                                                              *(_OWORD *)(v914 + 136) = *(_OWORD *)(__srce + 136);
                                                                              swift_release();
                                                                              v562 = __srce + 152;
                                                                              v563 = *(_QWORD *)(v914 + 160);
                                                                              if (v563 >> 60 != 11)
                                                                              {
                                                                                v564 = *((_QWORD *)__srce + 20);
                                                                                if (v564 >> 60 == 11)
                                                                                {
                                                                                  sub_1AD009758(v914 + 152, &qword_1ED2E3250);
                                                                                }
                                                                                else if (v563 >> 60 != 15)
                                                                                {
                                                                                  if (v564 >> 60 != 15)
                                                                                  {
                                                                                    v893 = *(_QWORD *)(v914 + 152);
                                                                                    *(_QWORD *)(v914 + 152) = *v562;
                                                                                    *(_QWORD *)(v914 + 160) = v564;
                                                                                    sub_1AD00412C(v893, v563);
LABEL_343:
                                                                                    v565 = *((_QWORD *)__srce + 21);
                                                                                    if (*(_QWORD *)(v914 + 168))
                                                                                    {
                                                                                      if (v565)
                                                                                      {
                                                                                        v566 = *((_QWORD *)__srce + 22);
                                                                                        *(_QWORD *)(v914 + 168) = v565;
                                                                                        *(_QWORD *)(v914 + 176) = v566;
                                                                                        swift_release();
                                                                                        v567 = __srce + 184;
                                                                                        v568 = *(_QWORD *)(v914 + 192);
                                                                                        if (v568 >> 60 != 15)
                                                                                        {
                                                                                          v569 = *((_QWORD *)__srce + 24);
                                                                                          if (v569 >> 60 != 15)
                                                                                          {
                                                                                            v573 = *(_QWORD *)(v914 + 184);
                                                                                            *(_QWORD *)(v914 + 184) = *v567;
                                                                                            *(_QWORD *)(v914 + 192) = v569;
                                                                                            sub_1AD00412C(v573, v568);
                                                                                            goto LABEL_354;
                                                                                          }
                                                                                          sub_1AD007EC0(v914 + 184);
                                                                                        }
                                                                                        *(_OWORD *)(v914 + 184) = *(_OWORD *)v567;
LABEL_354:
                                                                                        *(_DWORD *)(v914 + 200) = *((_DWORD *)__srce + 50);
                                                                                        *(_OWORD *)(v914 + 208) = *((_OWORD *)__srce + 13);
                                                                                        swift_release();
                                                                                        v574 = __srce + 224;
                                                                                        v575 = *(_QWORD *)(v914 + 232);
                                                                                        if (v575 >> 60 != 15)
                                                                                        {
                                                                                          v576 = *((_QWORD *)__srce + 29);
                                                                                          if (v576 >> 60 != 15)
                                                                                          {
                                                                                            v577 = *(_QWORD *)(v914 + 224);
                                                                                            *(_QWORD *)(v914 + 224) = *v574;
                                                                                            *(_QWORD *)(v914 + 232) = v576;
                                                                                            sub_1AD00412C(v577, v575);
                                                                                            goto LABEL_359;
                                                                                          }
                                                                                          sub_1AD007EC0(v914 + 224);
                                                                                        }
                                                                                        *(_OWORD *)(v914 + 224) = *(_OWORD *)v574;
LABEL_359:
                                                                                        *(_QWORD *)(v914 + 240) = *((_QWORD *)__srce + 30);
                                                                                        swift_bridgeObjectRelease();
                                                                                        *(_OWORD *)(v914 + 248) = *(_OWORD *)(__srce + 248);
                                                                                        swift_release();
                                                                                        v578 = __srce + 264;
                                                                                        v579 = *(_QWORD *)(v914 + 272);
                                                                                        if (v579 >> 60 == 11)
                                                                                          goto LABEL_360;
                                                                                        v581 = *((_QWORD *)__srce + 34);
                                                                                        if (v581 >> 60 == 11)
                                                                                        {
                                                                                          v580 = v941;
                                                                                          sub_1AD009758(v914 + 264, &qword_1ED2E3250);
                                                                                          goto LABEL_366;
                                                                                        }
                                                                                        if (v579 >> 60 == 15)
                                                                                        {
LABEL_360:
                                                                                          v580 = v941;
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          v580 = v941;
                                                                                          if (v581 >> 60 != 15)
                                                                                          {
                                                                                            v894 = *(_QWORD *)(v914 + 264);
                                                                                            *(_QWORD *)(v914 + 264) = *v578;
                                                                                            *(_QWORD *)(v914 + 272) = v581;
                                                                                            sub_1AD00412C(v894, v579);
LABEL_367:
                                                                                            v582 = *(int *)(v522 + 24);
                                                                                            v583 = v914 + v582;
                                                                                            v584 = &__srce[v582];
                                                                                            *(_OWORD *)(v914 + v582) = *(_OWORD *)&__srce[v582];
                                                                                            swift_release();
                                                                                            v585 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
                                                                                            v586 = (void *)(v583 + v585);
                                                                                            v587 = &v584[v585];
                                                                                            v588 = sub_1AD63AF28();
                                                                                            v589 = *(_QWORD *)(v588 - 8);
                                                                                            v590 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v589 + 48);
                                                                                            v591 = v590(v586, 1, v588);
                                                                                            v592 = v590(v587, 1, v588);
                                                                                            if (v591)
                                                                                            {
                                                                                              if (!v592)
                                                                                              {
                                                                                                (*(void (**)(void *, char *, uint64_t))(v589 + 32))(v586, v587, v588);
                                                                                                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v589 + 56))(v586, 0, 1, v588);
LABEL_373:
                                                                                                v15 = v580;
                                                                                                v594 = *(int *)(v543 + 28);
                                                                                                v595 = v914 + v594;
                                                                                                v596 = &__srce[v594];
                                                                                                *(_OWORD *)(v914 + v594) = *(_OWORD *)&__srce[v594];
                                                                                                swift_release();
                                                                                                v597 = (_OWORD *)(v595 + 16);
                                                                                                v598 = v596 + 16;
                                                                                                v13 = v926;
                                                                                                v14 = v933;
                                                                                                if (*(_QWORD *)(v595 + 24) == 1)
                                                                                                {
                                                                                                  *v597 = *v598;
                                                                                                  v5 = v949;
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  v599 = *((_QWORD *)v596 + 3);
                                                                                                  v5 = v949;
                                                                                                  if (v599 == 1)
                                                                                                  {
                                                                                                    sub_1AD009758(v595 + 16, &qword_1ED2E3198);
                                                                                                    *v597 = *v598;
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    *(_QWORD *)(v595 + 16) = *(_QWORD *)v598;
                                                                                                    *(_QWORD *)(v595 + 24) = v599;
                                                                                                    swift_bridgeObjectRelease();
                                                                                                  }
                                                                                                }
                                                                                                v506 = v920;
                                                                                                goto LABEL_379;
                                                                                              }
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              if (!v592)
                                                                                              {
                                                                                                (*(void (**)(void *, char *, uint64_t))(v589 + 40))(v586, v587, v588);
                                                                                                goto LABEL_373;
                                                                                              }
                                                                                              (*(void (**)(void *, uint64_t))(v589 + 8))(v586, v588);
                                                                                            }
                                                                                            v593 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                                            memcpy(v586, v587, *(_QWORD *)(*(_QWORD *)(v593 - 8) + 64));
                                                                                            goto LABEL_373;
                                                                                          }
                                                                                          sub_1AD007EC0(v914 + 264);
                                                                                        }
LABEL_366:
                                                                                        *(_OWORD *)(v914 + 264) = *(_OWORD *)v578;
                                                                                        goto LABEL_367;
                                                                                      }
                                                                                      sub_1AD0AEC8C((uint64_t *)(v914 + 168));
                                                                                    }
                                                                                    v570 = *(_OWORD *)(__srce + 216);
                                                                                    *(_OWORD *)(v914 + 200) = *(_OWORD *)(__srce + 200);
                                                                                    *(_OWORD *)(v914 + 216) = v570;
                                                                                    *(_QWORD *)(v914 + 232) = *((_QWORD *)__srce + 29);
                                                                                    v571 = *(_OWORD *)(__srce + 184);
                                                                                    *(_OWORD *)(v914 + 168) = *(_OWORD *)(__srce + 168);
                                                                                    *(_OWORD *)(v914 + 184) = v571;
                                                                                    goto LABEL_359;
                                                                                  }
                                                                                  sub_1AD007EC0(v914 + 152);
                                                                                }
                                                                              }
                                                                              *(_OWORD *)(v914 + 152) = *(_OWORD *)v562;
                                                                              goto LABEL_343;
                                                                            }
                                                                            sub_1AD007EC0(v914 + 120);
                                                                          }
                                                                          *(_OWORD *)(v914 + 120) = *(_OWORD *)v558;
                                                                          goto LABEL_336;
                                                                        }
                                                                        sub_1AD0AEC58(v914 + 56);
                                                                      }
                                                                      v557 = *(_OWORD *)(__srce + 72);
                                                                      *(_OWORD *)(v914 + 56) = *(_OWORD *)(__srce + 56);
                                                                      *(_OWORD *)(v914 + 72) = v557;
                                                                      *(_OWORD *)(v914 + 88) = *(_OWORD *)(__srce + 88);
                                                                      goto LABEL_331;
                                                                    }
                                                                    sub_1AD007EC0(v914 + 40);
                                                                  }
                                                                }
                                                                *(_OWORD *)(v914 + 40) = *(_OWORD *)v544;
                                                                goto LABEL_323;
                                                              }
                                                              sub_1AD007EC0((uint64_t)v514);
                                                            }
                                                            *(_OWORD *)v514 = *(_OWORD *)v515;
                                                            goto LABEL_306;
                                                          }
                                                          sub_1AD007EC0((uint64_t)v508);
                                                        }
                                                        *(_OWORD *)v508 = *(_OWORD *)v509;
                                                        goto LABEL_301;
                                                      }
                                                      sub_1AD007EC0((uint64_t)v501);
                                                    }
                                                    *(_OWORD *)v501 = *(_OWORD *)v502;
                                                    goto LABEL_296;
                                                  }
                                                  sub_1AD007EC0((uint64_t)v495);
                                                }
                                                *(_OWORD *)v495 = *(_OWORD *)v496;
                                                goto LABEL_291;
                                              }
                                              sub_1AD007EC0((uint64_t)v489);
                                            }
                                            *(_OWORD *)v489 = *(_OWORD *)v490;
                                            goto LABEL_286;
                                          }
                                          sub_1AD007EC0(v459 + 208);
                                        }
                                        *(_OWORD *)(v459 + 208) = *(_OWORD *)v484;
                                        goto LABEL_281;
                                      }
                                      sub_1AD311474(v459 + 64);
                                    }
                                    v480 = *((_OWORD *)v460 + 11);
                                    *(_OWORD *)(v459 + 160) = *((_OWORD *)v460 + 10);
                                    *(_OWORD *)(v459 + 176) = v480;
                                    *(_QWORD *)(v459 + 192) = *((_QWORD *)v460 + 24);
                                    v481 = *((_OWORD *)v460 + 7);
                                    *(_OWORD *)(v459 + 96) = *((_OWORD *)v460 + 6);
                                    *(_OWORD *)(v459 + 112) = v481;
                                    v482 = *((_OWORD *)v460 + 9);
                                    *(_OWORD *)(v459 + 128) = *((_OWORD *)v460 + 8);
                                    *(_OWORD *)(v459 + 144) = v482;
                                    v483 = *((_OWORD *)v460 + 5);
                                    *(_OWORD *)(v459 + 64) = *((_OWORD *)v460 + 4);
                                    *(_OWORD *)(v459 + 80) = v483;
                                    goto LABEL_276;
                                  }
                                  sub_1AD009758(v459 + 48, &qword_1ED2E3198);
                                }
                                *(_OWORD *)(v459 + 48) = *(_OWORD *)v471;
                                goto LABEL_266;
                              }
                              sub_1AD009758(v459 + 16, &qword_1ED2E3198);
                            }
                            *(_OWORD *)(v459 + 16) = *(_OWORD *)v462;
                            goto LABEL_261;
                          }
                          sub_1AD3114A8((_QWORD *)v459);
                        }
                        v464 = *((_OWORD *)v460 + 11);
                        *(_OWORD *)(v459 + 160) = *((_OWORD *)v460 + 10);
                        *(_OWORD *)(v459 + 176) = v464;
                        v465 = *((_OWORD *)v460 + 13);
                        *(_OWORD *)(v459 + 192) = *((_OWORD *)v460 + 12);
                        *(_OWORD *)(v459 + 208) = v465;
                        v466 = *((_OWORD *)v460 + 7);
                        *(_OWORD *)(v459 + 96) = *((_OWORD *)v460 + 6);
                        *(_OWORD *)(v459 + 112) = v466;
                        v467 = *((_OWORD *)v460 + 9);
                        *(_OWORD *)(v459 + 128) = *((_OWORD *)v460 + 8);
                        *(_OWORD *)(v459 + 144) = v467;
                        v468 = *((_OWORD *)v460 + 3);
                        *(_OWORD *)(v459 + 32) = *((_OWORD *)v460 + 2);
                        *(_OWORD *)(v459 + 48) = v468;
                        v469 = *((_OWORD *)v460 + 5);
                        *(_OWORD *)(v459 + 64) = *((_OWORD *)v460 + 4);
                        *(_OWORD *)(v459 + 80) = v469;
                        v470 = *((_OWORD *)v460 + 1);
                        *(_OWORD *)v459 = *(_OWORD *)v460;
                        *(_OWORD *)(v459 + 16) = v470;
                        goto LABEL_281;
                      }
                      (*(void (**)(void *, uint64_t))(v453 + 8))(v450, v452);
                    }
                    v457 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
                    memcpy(v450, v451, *(_QWORD *)(*(_QWORD *)(v457 - 8) + 64));
                    goto LABEL_251;
                  }
                  sub_1AD311474(v433);
                }
                v445 = *((_OWORD *)v434 + 7);
                *(_OWORD *)(v433 + 96) = *((_OWORD *)v434 + 6);
                *(_OWORD *)(v433 + 112) = v445;
                *(_QWORD *)(v433 + 128) = *((_QWORD *)v434 + 16);
                v446 = *((_OWORD *)v434 + 3);
                *(_OWORD *)(v433 + 32) = *((_OWORD *)v434 + 2);
                *(_OWORD *)(v433 + 48) = v446;
                v447 = *((_OWORD *)v434 + 5);
                *(_OWORD *)(v433 + 64) = *((_OWORD *)v434 + 4);
                *(_OWORD *)(v433 + 80) = v447;
                v448 = *((_OWORD *)v434 + 1);
                *(_OWORD *)v433 = *(_OWORD *)v434;
                *(_OWORD *)(v433 + 16) = v448;
                goto LABEL_245;
              }
              sub_1AD009758((uint64_t)(v377 + 3), &qword_1ED2E3198);
            }
            v377[3] = *(_OWORD *)v399;
            goto LABEL_232;
          }
LABEL_31:
          v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          goto LABEL_215;
        }
        if (v54)
        {
          sub_1AD066230((uint64_t)v48, type metadata accessor for CloudKitShareParticipant);
          goto LABEL_31;
        }
        v910 = v51;
        *v48 = *v49;
        swift_release();
        v103 = *((_QWORD *)v49 + 3);
        *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
        *((_QWORD *)v48 + 3) = v103;
        swift_bridgeObjectRelease();
        v48[2] = v49[2];
        swift_release();
        v104 = v49 + 3;
        v946 = v5;
        if (*((_QWORD *)v48 + 7) != 1)
        {
          v105 = *((_QWORD *)v49 + 7);
          if (v105 != 1)
          {
            *((_QWORD *)v48 + 6) = *v104;
            *((_QWORD *)v48 + 7) = v105;
            swift_bridgeObjectRelease();
LABEL_63:
            v918 = v50;
            v924 = v13;
            v204 = v50[6];
            v205 = (uint64_t)v48 + v204;
            v206 = (char *)v49 + v204;
            v931 = v14;
            v939 = v15;
            __srcc = v52;
            if (*(_QWORD *)((char *)v48 + v204))
            {
              if (*(_QWORD *)v206)
              {
                v207 = *((_QWORD *)v206 + 1);
                *(_QWORD *)v205 = *(_QWORD *)v206;
                *(_QWORD *)(v205 + 8) = v207;
                swift_release();
                v208 = *((_QWORD *)v206 + 3);
                *(_QWORD *)(v205 + 16) = *((_QWORD *)v206 + 2);
                *(_QWORD *)(v205 + 24) = v208;
                swift_bridgeObjectRelease();
                *(_OWORD *)(v205 + 32) = *((_OWORD *)v206 + 2);
                swift_release();
                v209 = *((_QWORD *)v206 + 7);
                *(_QWORD *)(v205 + 48) = *((_QWORD *)v206 + 6);
                *(_QWORD *)(v205 + 56) = v209;
                swift_bridgeObjectRelease();
                *(_OWORD *)(v205 + 64) = *((_OWORD *)v206 + 4);
                swift_release();
                v210 = *((_QWORD *)v206 + 11);
                *(_QWORD *)(v205 + 80) = *((_QWORD *)v206 + 10);
                *(_QWORD *)(v205 + 88) = v210;
                swift_bridgeObjectRelease();
                *(_OWORD *)(v205 + 96) = *((_OWORD *)v206 + 6);
                swift_release();
                v211 = v206 + 112;
                if (*(_QWORD *)(v205 + 120) != 1)
                {
                  v212 = *((_QWORD *)v206 + 15);
                  if (v212 != 1)
                  {
                    *(_QWORD *)(v205 + 112) = *v211;
                    *(_QWORD *)(v205 + 120) = v212;
                    swift_bridgeObjectRelease();
                    goto LABEL_75;
                  }
                  sub_1AD009758(v205 + 112, &qword_1ED2E3198);
                }
                *(_OWORD *)(v205 + 112) = *(_OWORD *)v211;
LABEL_75:
                *(_QWORD *)(v205 + 128) = *((_QWORD *)v206 + 16);
LABEL_76:
                __dstb = (int *)type metadata accessor for CloudKitUserIdentity(0);
                v221 = __dstb[5];
                v222 = (void *)(v205 + v221);
                v223 = &v206[v221];
                v224 = sub_1AD63AE2C();
                v225 = *(_QWORD *)(v224 - 8);
                v226 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v225 + 48);
                v227 = v226(v222, 1, v224);
                v228 = v226(v223, 1, v224);
                if (v227)
                {
                  if (!v228)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v225 + 32))(v222, v223, v224);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v225 + 56))(v222, 0, 1, v224);
                    goto LABEL_82;
                  }
                }
                else
                {
                  if (!v228)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v225 + 40))(v222, v223, v224);
LABEL_82:
                    v230 = __dstb[6];
                    v231 = v205 + v230;
                    v232 = &v206[v230];
                    v13 = v924;
                    v14 = v931;
                    if (*(_QWORD *)(v205 + v230))
                    {
                      if (*(_QWORD *)v232)
                      {
                        v233 = *((_QWORD *)v232 + 1);
                        *(_QWORD *)v231 = *(_QWORD *)v232;
                        *(_QWORD *)(v231 + 8) = v233;
                        swift_release();
                        v234 = v232 + 16;
                        if (*(_QWORD *)(v231 + 24) != 1)
                        {
                          v235 = *((_QWORD *)v232 + 3);
                          if (v235 != 1)
                          {
                            *(_QWORD *)(v231 + 16) = *v234;
                            *(_QWORD *)(v231 + 24) = v235;
                            swift_bridgeObjectRelease();
LABEL_92:
                            *(_OWORD *)(v231 + 32) = *((_OWORD *)v232 + 2);
                            swift_release();
                            v243 = v232 + 48;
                            if (*(_QWORD *)(v231 + 56) != 1)
                            {
                              v244 = *((_QWORD *)v232 + 7);
                              if (v244 != 1)
                              {
                                *(_QWORD *)(v231 + 48) = *v243;
                                *(_QWORD *)(v231 + 56) = v244;
                                swift_bridgeObjectRelease();
LABEL_97:
                                v245 = *((_QWORD *)v232 + 8);
                                if (*(_QWORD *)(v231 + 64))
                                {
                                  if (v245)
                                  {
                                    v246 = *((_QWORD *)v232 + 9);
                                    *(_QWORD *)(v231 + 64) = v245;
                                    *(_QWORD *)(v231 + 72) = v246;
                                    swift_release();
                                    v247 = *((_QWORD *)v232 + 11);
                                    *(_QWORD *)(v231 + 80) = *((_QWORD *)v232 + 10);
                                    *(_QWORD *)(v231 + 88) = v247;
                                    swift_bridgeObjectRelease();
                                    *(_OWORD *)(v231 + 96) = *((_OWORD *)v232 + 6);
                                    swift_release();
                                    v248 = *((_QWORD *)v232 + 15);
                                    *(_QWORD *)(v231 + 112) = *((_QWORD *)v232 + 14);
                                    *(_QWORD *)(v231 + 120) = v248;
                                    swift_bridgeObjectRelease();
                                    *(_OWORD *)(v231 + 128) = *((_OWORD *)v232 + 8);
                                    swift_release();
                                    v249 = *((_QWORD *)v232 + 19);
                                    *(_QWORD *)(v231 + 144) = *((_QWORD *)v232 + 18);
                                    *(_QWORD *)(v231 + 152) = v249;
                                    swift_bridgeObjectRelease();
                                    *(_OWORD *)(v231 + 160) = *((_OWORD *)v232 + 10);
                                    swift_release();
                                    v250 = v232 + 176;
                                    if (*(_QWORD *)(v231 + 184) != 1)
                                    {
                                      v251 = *((_QWORD *)v232 + 23);
                                      if (v251 != 1)
                                      {
                                        *(_QWORD *)(v231 + 176) = *v250;
                                        *(_QWORD *)(v231 + 184) = v251;
                                        swift_bridgeObjectRelease();
                                        goto LABEL_106;
                                      }
                                      sub_1AD009758(v231 + 176, &qword_1ED2E3198);
                                    }
                                    *(_OWORD *)(v231 + 176) = *(_OWORD *)v250;
LABEL_106:
                                    *(_QWORD *)(v231 + 192) = *((_QWORD *)v232 + 24);
LABEL_107:
                                    *(_BYTE *)(v231 + 200) = v232[200];
                                    v256 = v232 + 208;
                                    v257 = *(_QWORD *)(v231 + 216);
                                    if (v257 >> 60 != 15)
                                    {
                                      v258 = *((_QWORD *)v232 + 27);
                                      if (v258 >> 60 != 15)
                                      {
                                        v259 = *(_QWORD *)(v231 + 208);
                                        *(_QWORD *)(v231 + 208) = *v256;
                                        *(_QWORD *)(v231 + 216) = v258;
                                        sub_1AD00412C(v259, v257);
LABEL_112:
                                        *(_QWORD *)(v205 + __dstb[7]) = *(_QWORD *)&v206[__dstb[7]];
                                        swift_bridgeObjectRelease();
                                        v260 = __dstb[8];
                                        v261 = (uint64_t *)(v205 + v260);
                                        v262 = (uint64_t *)&v206[v260];
                                        v263 = *(_QWORD *)(v205 + v260 + 8);
                                        v15 = v939;
                                        if (v263 >> 60 != 15)
                                        {
                                          v264 = v262[1];
                                          if (v264 >> 60 != 15)
                                          {
                                            v265 = *v261;
                                            *v261 = *v262;
                                            v261[1] = v264;
                                            sub_1AD00412C(v265, v263);
LABEL_117:
                                            v266 = __dstb[9];
                                            v267 = (uint64_t *)(v205 + v266);
                                            v268 = (uint64_t *)&v206[v266];
                                            v269 = *(_QWORD *)(v205 + v266 + 8);
                                            if (v269 >> 60 != 15)
                                            {
                                              v270 = v268[1];
                                              if (v270 >> 60 != 15)
                                              {
                                                v271 = *v267;
                                                *v267 = *v268;
                                                v267[1] = v270;
                                                sub_1AD00412C(v271, v269);
LABEL_122:
                                                *(_BYTE *)(v205 + __dstb[10]) = v206[__dstb[10]];
                                                *(_BYTE *)(v205 + __dstb[11]) = v206[__dstb[11]];
                                                v272 = __dstb[12];
                                                v273 = (uint64_t *)(v205 + v272);
                                                v274 = (uint64_t *)&v206[v272];
                                                v275 = *(_QWORD *)(v205 + v272 + 8);
                                                if (v275 >> 60 != 15)
                                                {
                                                  v276 = v274[1];
                                                  if (v276 >> 60 != 15)
                                                  {
                                                    v277 = *v273;
                                                    *v273 = *v274;
                                                    v273[1] = v276;
                                                    sub_1AD00412C(v277, v275);
LABEL_127:
                                                    *(_QWORD *)(v205 + __dstb[13]) = *(_QWORD *)&v206[__dstb[13]];
                                                    v50 = v918;
                                                    *((_BYTE *)v48 + v918[7]) = *((_BYTE *)v49 + v918[7]);
                                                    *((_BYTE *)v48 + v918[8]) = *((_BYTE *)v49 + v918[8]);
                                                    *((_BYTE *)v48 + v918[9]) = *((_BYTE *)v49 + v918[9]);
                                                    *((_BYTE *)v48 + v918[10]) = *((_BYTE *)v49 + v918[10]);
                                                    *((_BYTE *)v48 + v918[11]) = *((_BYTE *)v49 + v918[11]);
                                                    *((_BYTE *)v48 + v918[12]) = *((_BYTE *)v49 + v918[12]);
                                                    *((_BYTE *)v48 + v918[13]) = *((_BYTE *)v49 + v918[13]);
                                                    *((_BYTE *)v48 + v918[14]) = *((_BYTE *)v49 + v918[14]);
                                                    v278 = v918[15];
                                                    v279 = (uint64_t *)((char *)v48 + v278);
                                                    v280 = (uint64_t *)((char *)v49 + v278);
                                                    v281 = *(_QWORD *)((char *)v48 + v278 + 8);
                                                    if (v281 >> 60 != 15)
                                                    {
                                                      v282 = v280[1];
                                                      if (v282 >> 60 != 15)
                                                      {
                                                        v283 = *v279;
                                                        *v279 = *v280;
                                                        v279[1] = v282;
                                                        sub_1AD00412C(v283, v281);
LABEL_132:
                                                        v284 = v918[16];
                                                        v285 = (uint64_t *)((char *)v48 + v284);
                                                        v286 = (uint64_t *)((char *)v49 + v284);
                                                        v287 = *(_QWORD *)((char *)v48 + v284 + 8);
                                                        if (v287 >> 60 != 15)
                                                        {
                                                          v288 = v286[1];
                                                          if (v288 >> 60 != 15)
                                                          {
                                                            v289 = *v285;
                                                            *v285 = *v286;
                                                            v285[1] = v288;
                                                            sub_1AD00412C(v289, v287);
LABEL_137:
                                                            *((_BYTE *)v48 + v918[17]) = *((_BYTE *)v49 + v918[17]);
                                                            *((_BYTE *)v48 + v918[18]) = *((_BYTE *)v49 + v918[18]);
                                                            v290 = v918[19];
                                                            v291 = (_OWORD *)((char *)v48 + v290);
                                                            v292 = (_OWORD *)((char *)v49 + v290);
                                                            v293 = type metadata accessor for CloudKitSharingToken();
                                                            v895 = *(_QWORD *)(v293 - 8);
                                                            v294 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v895 + 48);
                                                            v896 = v291;
                                                            LODWORD(v291) = v294(v291, 1, v293);
                                                            __dstc = v292;
                                                            v295 = v294(v292, 1, v293);
                                                            if ((_DWORD)v291)
                                                            {
                                                              if (v295)
                                                              {
                                                                v296 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                                                                memcpy(v896, v292, *(_QWORD *)(*(_QWORD *)(v296 - 8) + 64));
                                                                v5 = v946;
                                                              }
                                                              else
                                                              {
                                                                v298 = v292[13];
                                                                v896[12] = v292[12];
                                                                v896[13] = v298;
                                                                v896[14] = v292[14];
                                                                *((_QWORD *)v896 + 30) = *((_QWORD *)v292 + 30);
                                                                v299 = v292[9];
                                                                v896[8] = v292[8];
                                                                v896[9] = v299;
                                                                v300 = v292[11];
                                                                v896[10] = v292[10];
                                                                v896[11] = v300;
                                                                v301 = v292[5];
                                                                v896[4] = v292[4];
                                                                v896[5] = v301;
                                                                v302 = v292[7];
                                                                v896[6] = v292[6];
                                                                v896[7] = v302;
                                                                v303 = v292[1];
                                                                *v896 = *v292;
                                                                v896[1] = v303;
                                                                v304 = v292[3];
                                                                v896[2] = v292[2];
                                                                v896[3] = v304;
                                                                *(_OWORD *)((char *)v896 + 248) = *(_OWORD *)((char *)v292 + 248);
                                                                *(_OWORD *)((char *)v896 + 264) = *(_OWORD *)((char *)v292 + 264);
                                                                v305 = *(int *)(v293 + 24);
                                                                v306 = (char *)v896 + v305;
                                                                v307 = (char *)v292 + v305;
                                                                *(_OWORD *)((char *)v896 + v305) = *(_OWORD *)((char *)v292 + v305);
                                                                v308 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                              + 28);
                                                                v309 = &v306[v308];
                                                                v310 = &v307[v308];
                                                                v311 = sub_1AD63AF28();
                                                                v312 = *(_QWORD *)(v311 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v312 + 48))(v310, 1, v311))
                                                                {
                                                                  v313 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                  memcpy(v309, v310, *(_QWORD *)(*(_QWORD *)(v313 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(char *, char *, uint64_t))(v312 + 32))(v309, v310, v311);
                                                                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v312 + 56))(v309, 0, 1, v311);
                                                                }
                                                                v14 = v931;
                                                                v50 = v918;
                                                                v317 = *(int *)(v293 + 28);
                                                                v318 = (_OWORD *)((char *)v896 + v317);
                                                                v319 = (_OWORD *)((char *)v292 + v317);
                                                                v320 = v319[1];
                                                                *v318 = *v319;
                                                                v318[1] = v320;
                                                                (*(void (**)(_OWORD *, _QWORD, uint64_t))(v895 + 56))(v896, 0, 1);
                                                                v15 = v939;
                                                                v5 = v946;
                                                                v13 = v924;
                                                              }
LABEL_208:
                                                              v52 = __srcc;
LABEL_209:
                                                              v370 = v50[20];
                                                              v371 = (uint64_t *)((char *)v48 + v370);
                                                              v372 = (uint64_t *)((char *)v49 + v370);
                                                              v373 = *(_QWORD *)((char *)v48 + v370 + 8);
                                                              if (v373 >> 60 != 15)
                                                              {
                                                                v374 = v372[1];
                                                                if (v374 >> 60 != 15)
                                                                {
                                                                  v375 = *v371;
                                                                  *v371 = *v372;
                                                                  v371[1] = v374;
                                                                  sub_1AD00412C(v375, v373);
                                                                  goto LABEL_214;
                                                                }
                                                                sub_1AD007EC0((uint64_t)v371);
                                                              }
                                                              *(_OWORD *)v371 = *(_OWORD *)v372;
LABEL_214:
                                                              *((_BYTE *)v48 + v50[21]) = *((_BYTE *)v49 + v50[21]);
                                                              *((_BYTE *)v48 + v50[22]) = *((_BYTE *)v49 + v50[22]);
                                                              *((_BYTE *)v48 + v50[23]) = *((_BYTE *)v49 + v50[23]);
                                                              v51 = v910;
                                                              goto LABEL_215;
                                                            }
                                                            v52 = __srcc;
                                                            if (v295)
                                                            {
                                                              sub_1AD066230((uint64_t)v896, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                                                              v297 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                                                              memcpy(v896, __dstc, *(_QWORD *)(*(_QWORD *)(v297 - 8) + 64));
                                                              v5 = v946;
                                                              goto LABEL_209;
                                                            }
                                                            *(_DWORD *)v896 = *__dstc;
                                                            *((_QWORD *)v896 + 1) = *((_QWORD *)__dstc + 1);
                                                            swift_bridgeObjectRelease();
                                                            *((_QWORD *)v896 + 2) = *((_QWORD *)__dstc + 2);
                                                            swift_bridgeObjectRelease();
                                                            *(_OWORD *)((char *)v896 + 24) = *(_OWORD *)(__dstc + 6);
                                                            swift_release();
                                                            v314 = __dstc + 10;
                                                            v315 = *((_QWORD *)v896 + 6);
                                                            if (v315 >> 60 != 11)
                                                            {
                                                              v316 = *((_QWORD *)__dstc + 6);
                                                              if (v316 >> 60 == 11)
                                                              {
                                                                sub_1AD009758((uint64_t)v896 + 40, &qword_1ED2E3250);
                                                              }
                                                              else if (v315 >> 60 != 15)
                                                              {
                                                                if (v316 >> 60 != 15)
                                                                {
                                                                  v889 = *((_QWORD *)v896 + 5);
                                                                  *((_QWORD *)v896 + 5) = *v314;
                                                                  *((_QWORD *)v896 + 6) = v316;
                                                                  sub_1AD00412C(v889, v315);
LABEL_153:
                                                                  if (*((_QWORD *)v896 + 9))
                                                                  {
                                                                    v321 = *((_QWORD *)__dstc + 9);
                                                                    if (v321)
                                                                    {
                                                                      v322 = __dstc[15];
                                                                      *((_DWORD *)v896 + 14) = __dstc[14];
                                                                      *((_DWORD *)v896 + 15) = v322;
                                                                      *((_BYTE *)v896 + 64) = *((_BYTE *)__dstc + 64);
                                                                      v323 = *((_QWORD *)__dstc + 10);
                                                                      *((_QWORD *)v896 + 9) = v321;
                                                                      *((_QWORD *)v896 + 10) = v323;
                                                                      swift_release();
                                                                      v324 = __dstc + 22;
                                                                      v325 = *((_QWORD *)v896 + 12);
                                                                      if (v325 >> 60 == 15)
                                                                      {
LABEL_158:
                                                                        *(_OWORD *)((char *)v896 + 88) = *v324;
                                                                        goto LABEL_161;
                                                                      }
                                                                      v326 = *((_QWORD *)__dstc + 12);
                                                                      if (v326 >> 60 == 15)
                                                                      {
                                                                        sub_1AD007EC0((uint64_t)v896 + 88);
                                                                        goto LABEL_158;
                                                                      }
                                                                      v342 = *((_QWORD *)v896 + 11);
                                                                      *((_QWORD *)v896 + 11) = *(_QWORD *)v324;
                                                                      *((_QWORD *)v896 + 12) = v326;
                                                                      sub_1AD00412C(v342, v325);
LABEL_161:
                                                                      *(_OWORD *)((char *)v896 + 104) = *(_OWORD *)(__dstc + 26);
                                                                      swift_release();
                                                                      v328 = __dstc + 30;
                                                                      v329 = *((_QWORD *)v896 + 16);
                                                                      if (v329 >> 60 != 15)
                                                                      {
                                                                        v330 = *((_QWORD *)__dstc + 16);
                                                                        if (v330 >> 60 != 15)
                                                                        {
                                                                          v331 = *((_QWORD *)v896 + 15);
                                                                          *((_QWORD *)v896 + 15) = *v328;
                                                                          *((_QWORD *)v896 + 16) = v330;
                                                                          sub_1AD00412C(v331, v329);
LABEL_166:
                                                                          *(_OWORD *)((char *)v896 + 136) = *(_OWORD *)(__dstc + 34);
                                                                          swift_release();
                                                                          v332 = __dstc + 38;
                                                                          v333 = *((_QWORD *)v896 + 20);
                                                                          if (v333 >> 60 != 11)
                                                                          {
                                                                            v334 = *((_QWORD *)__dstc + 20);
                                                                            if (v334 >> 60 == 11)
                                                                            {
                                                                              sub_1AD009758((uint64_t)v896 + 152, &qword_1ED2E3250);
                                                                            }
                                                                            else if (v333 >> 60 != 15)
                                                                            {
                                                                              if (v334 >> 60 != 15)
                                                                              {
                                                                                v890 = *((_QWORD *)v896 + 19);
                                                                                *((_QWORD *)v896 + 19) = *v332;
                                                                                *((_QWORD *)v896 + 20) = v334;
                                                                                sub_1AD00412C(v890, v333);
LABEL_173:
                                                                                v335 = *((_QWORD *)__dstc + 21);
                                                                                if (*((_QWORD *)v896 + 21))
                                                                                {
                                                                                  if (v335)
                                                                                  {
                                                                                    v336 = *((_QWORD *)__dstc + 22);
                                                                                    *((_QWORD *)v896 + 21) = v335;
                                                                                    *((_QWORD *)v896 + 22) = v336;
                                                                                    swift_release();
                                                                                    v337 = __dstc + 46;
                                                                                    v338 = *((_QWORD *)v896 + 24);
                                                                                    if (v338 >> 60 != 15)
                                                                                    {
                                                                                      v339 = *((_QWORD *)__dstc + 24);
                                                                                      if (v339 >> 60 != 15)
                                                                                      {
                                                                                        v343 = *((_QWORD *)v896 + 23);
                                                                                        *((_QWORD *)v896 + 23) = *v337;
                                                                                        *((_QWORD *)v896 + 24) = v339;
                                                                                        sub_1AD00412C(v343, v338);
                                                                                        goto LABEL_183;
                                                                                      }
                                                                                      sub_1AD007EC0((uint64_t)v896 + 184);
                                                                                    }
                                                                                    *(_OWORD *)((char *)v896 + 184) = *(_OWORD *)v337;
LABEL_183:
                                                                                    *((_DWORD *)v896 + 50) = __dstc[50];
                                                                                    v896[13] = *((_OWORD *)__dstc + 13);
                                                                                    swift_release();
                                                                                    v344 = __dstc + 56;
                                                                                    v345 = *((_QWORD *)v896 + 29);
                                                                                    if (v345 >> 60 != 15)
                                                                                    {
                                                                                      v346 = *((_QWORD *)__dstc + 29);
                                                                                      if (v346 >> 60 != 15)
                                                                                      {
                                                                                        v347 = *((_QWORD *)v896 + 28);
                                                                                        *((_QWORD *)v896 + 28) = *v344;
                                                                                        *((_QWORD *)v896 + 29) = v346;
                                                                                        sub_1AD00412C(v347, v345);
                                                                                        goto LABEL_188;
                                                                                      }
                                                                                      sub_1AD007EC0((uint64_t)(v896 + 14));
                                                                                    }
                                                                                    v896[14] = *(_OWORD *)v344;
LABEL_188:
                                                                                    *((_QWORD *)v896 + 30) = *((_QWORD *)__dstc + 30);
                                                                                    swift_bridgeObjectRelease();
                                                                                    *(_OWORD *)((char *)v896 + 248) = *(_OWORD *)(__dstc + 62);
                                                                                    swift_release();
                                                                                    v348 = __dstc + 66;
                                                                                    v349 = *((_QWORD *)v896 + 34);
                                                                                    if (v349 >> 60 == 11)
                                                                                      goto LABEL_189;
                                                                                    v351 = *((_QWORD *)__dstc + 34);
                                                                                    if (v351 >> 60 == 11)
                                                                                    {
                                                                                      v350 = v939;
                                                                                      sub_1AD009758((uint64_t)v896 + 264, &qword_1ED2E3250);
                                                                                      goto LABEL_195;
                                                                                    }
                                                                                    if (v349 >> 60 == 15)
                                                                                    {
LABEL_189:
                                                                                      v350 = v939;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      v350 = v939;
                                                                                      if (v351 >> 60 != 15)
                                                                                      {
                                                                                        v891 = *((_QWORD *)v896 + 33);
                                                                                        *((_QWORD *)v896 + 33) = *v348;
                                                                                        *((_QWORD *)v896 + 34) = v351;
                                                                                        sub_1AD00412C(v891, v349);
LABEL_196:
                                                                                        v352 = *(int *)(v293 + 24);
                                                                                        v353 = (char *)v896 + v352;
                                                                                        v354 = (char *)__dstc + v352;
                                                                                        *(_OWORD *)((char *)v896 + v352) = *(_OWORD *)((char *)__dstc + v352);
                                                                                        swift_release();
                                                                                        v355 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
                                                                                        v356 = &v353[v355];
                                                                                        v357 = &v354[v355];
                                                                                        v358 = sub_1AD63AF28();
                                                                                        v359 = *(_QWORD *)(v358 - 8);
                                                                                        v360 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v359 + 48);
                                                                                        v361 = v360(v356, 1, v358);
                                                                                        v362 = v360(v357, 1, v358);
                                                                                        if (v361)
                                                                                        {
                                                                                          if (!v362)
                                                                                          {
                                                                                            (*(void (**)(char *, char *, uint64_t))(v359 + 32))(v356, v357, v358);
                                                                                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v359 + 56))(v356, 0, 1, v358);
LABEL_202:
                                                                                            v15 = v350;
                                                                                            v364 = *(int *)(v293 + 28);
                                                                                            v365 = (char *)v896 + v364;
                                                                                            v366 = (char *)__dstc + v364;
                                                                                            *(_OWORD *)((char *)v896 + v364) = *(_OWORD *)((char *)__dstc + v364);
                                                                                            swift_release();
                                                                                            v367 = v365 + 16;
                                                                                            v368 = v366 + 16;
                                                                                            v13 = v924;
                                                                                            v14 = v931;
                                                                                            if (*((_QWORD *)v365 + 3) == 1)
                                                                                            {
                                                                                              *v367 = *v368;
                                                                                              v5 = v946;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              v369 = *((_QWORD *)v366 + 3);
                                                                                              v5 = v946;
                                                                                              if (v369 == 1)
                                                                                              {
                                                                                                sub_1AD009758((uint64_t)(v365 + 16), &qword_1ED2E3198);
                                                                                                *v367 = *v368;
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                *((_QWORD *)v365 + 2) = *(_QWORD *)v368;
                                                                                                *((_QWORD *)v365 + 3) = v369;
                                                                                                swift_bridgeObjectRelease();
                                                                                              }
                                                                                            }
                                                                                            v50 = v918;
                                                                                            goto LABEL_208;
                                                                                          }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          if (!v362)
                                                                                          {
                                                                                            (*(void (**)(char *, char *, uint64_t))(v359 + 40))(v356, v357, v358);
                                                                                            goto LABEL_202;
                                                                                          }
                                                                                          (*(void (**)(char *, uint64_t))(v359 + 8))(v356, v358);
                                                                                        }
                                                                                        v363 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                                        memcpy(v356, v357, *(_QWORD *)(*(_QWORD *)(v363 - 8) + 64));
                                                                                        goto LABEL_202;
                                                                                      }
                                                                                      sub_1AD007EC0((uint64_t)v896 + 264);
                                                                                    }
LABEL_195:
                                                                                    *(_OWORD *)((char *)v896 + 264) = *(_OWORD *)v348;
                                                                                    goto LABEL_196;
                                                                                  }
                                                                                  sub_1AD0AEC8C((uint64_t *)v896 + 21);
                                                                                }
                                                                                v340 = *(_OWORD *)(__dstc + 54);
                                                                                *(_OWORD *)((char *)v896 + 200) = *(_OWORD *)(__dstc + 50);
                                                                                *(_OWORD *)((char *)v896 + 216) = v340;
                                                                                *((_QWORD *)v896 + 29) = *((_QWORD *)__dstc + 29);
                                                                                v341 = *(_OWORD *)(__dstc + 46);
                                                                                *(_OWORD *)((char *)v896 + 168) = *(_OWORD *)(__dstc + 42);
                                                                                *(_OWORD *)((char *)v896 + 184) = v341;
                                                                                goto LABEL_188;
                                                                              }
                                                                              sub_1AD007EC0((uint64_t)v896 + 152);
                                                                            }
                                                                          }
                                                                          *(_OWORD *)((char *)v896 + 152) = *(_OWORD *)v332;
                                                                          goto LABEL_173;
                                                                        }
                                                                        sub_1AD007EC0((uint64_t)v896 + 120);
                                                                      }
                                                                      *(_OWORD *)((char *)v896 + 120) = *(_OWORD *)v328;
                                                                      goto LABEL_166;
                                                                    }
                                                                    sub_1AD0AEC58((uint64_t)v896 + 56);
                                                                  }
                                                                  v327 = *(_OWORD *)(__dstc + 18);
                                                                  *(_OWORD *)((char *)v896 + 56) = *(_OWORD *)(__dstc + 14);
                                                                  *(_OWORD *)((char *)v896 + 72) = v327;
                                                                  *(_OWORD *)((char *)v896 + 88) = *(_OWORD *)(__dstc + 22);
                                                                  goto LABEL_161;
                                                                }
                                                                sub_1AD007EC0((uint64_t)v896 + 40);
                                                              }
                                                            }
                                                            *(_OWORD *)((char *)v896 + 40) = *(_OWORD *)v314;
                                                            goto LABEL_153;
                                                          }
                                                          sub_1AD007EC0((uint64_t)v285);
                                                        }
                                                        *(_OWORD *)v285 = *(_OWORD *)v286;
                                                        goto LABEL_137;
                                                      }
                                                      sub_1AD007EC0((uint64_t)v279);
                                                    }
                                                    *(_OWORD *)v279 = *(_OWORD *)v280;
                                                    goto LABEL_132;
                                                  }
                                                  sub_1AD007EC0((uint64_t)v273);
                                                }
                                                *(_OWORD *)v273 = *(_OWORD *)v274;
                                                goto LABEL_127;
                                              }
                                              sub_1AD007EC0((uint64_t)v267);
                                            }
                                            *(_OWORD *)v267 = *(_OWORD *)v268;
                                            goto LABEL_122;
                                          }
                                          sub_1AD007EC0((uint64_t)v261);
                                        }
                                        *(_OWORD *)v261 = *(_OWORD *)v262;
                                        goto LABEL_117;
                                      }
                                      sub_1AD007EC0(v231 + 208);
                                    }
                                    *(_OWORD *)(v231 + 208) = *(_OWORD *)v256;
                                    goto LABEL_112;
                                  }
                                  sub_1AD311474(v231 + 64);
                                }
                                v252 = *((_OWORD *)v232 + 11);
                                *(_OWORD *)(v231 + 160) = *((_OWORD *)v232 + 10);
                                *(_OWORD *)(v231 + 176) = v252;
                                *(_QWORD *)(v231 + 192) = *((_QWORD *)v232 + 24);
                                v253 = *((_OWORD *)v232 + 7);
                                *(_OWORD *)(v231 + 96) = *((_OWORD *)v232 + 6);
                                *(_OWORD *)(v231 + 112) = v253;
                                v254 = *((_OWORD *)v232 + 9);
                                *(_OWORD *)(v231 + 128) = *((_OWORD *)v232 + 8);
                                *(_OWORD *)(v231 + 144) = v254;
                                v255 = *((_OWORD *)v232 + 5);
                                *(_OWORD *)(v231 + 64) = *((_OWORD *)v232 + 4);
                                *(_OWORD *)(v231 + 80) = v255;
                                goto LABEL_107;
                              }
                              sub_1AD009758(v231 + 48, &qword_1ED2E3198);
                            }
                            *(_OWORD *)(v231 + 48) = *(_OWORD *)v243;
                            goto LABEL_97;
                          }
                          sub_1AD009758(v231 + 16, &qword_1ED2E3198);
                        }
                        *(_OWORD *)(v231 + 16) = *(_OWORD *)v234;
                        goto LABEL_92;
                      }
                      sub_1AD3114A8((_QWORD *)v231);
                    }
                    v236 = *((_OWORD *)v232 + 11);
                    *(_OWORD *)(v231 + 160) = *((_OWORD *)v232 + 10);
                    *(_OWORD *)(v231 + 176) = v236;
                    v237 = *((_OWORD *)v232 + 13);
                    *(_OWORD *)(v231 + 192) = *((_OWORD *)v232 + 12);
                    *(_OWORD *)(v231 + 208) = v237;
                    v238 = *((_OWORD *)v232 + 7);
                    *(_OWORD *)(v231 + 96) = *((_OWORD *)v232 + 6);
                    *(_OWORD *)(v231 + 112) = v238;
                    v239 = *((_OWORD *)v232 + 9);
                    *(_OWORD *)(v231 + 128) = *((_OWORD *)v232 + 8);
                    *(_OWORD *)(v231 + 144) = v239;
                    v240 = *((_OWORD *)v232 + 3);
                    *(_OWORD *)(v231 + 32) = *((_OWORD *)v232 + 2);
                    *(_OWORD *)(v231 + 48) = v240;
                    v241 = *((_OWORD *)v232 + 5);
                    *(_OWORD *)(v231 + 64) = *((_OWORD *)v232 + 4);
                    *(_OWORD *)(v231 + 80) = v241;
                    v242 = *((_OWORD *)v232 + 1);
                    *(_OWORD *)v231 = *(_OWORD *)v232;
                    *(_OWORD *)(v231 + 16) = v242;
                    goto LABEL_112;
                  }
                  (*(void (**)(void *, uint64_t))(v225 + 8))(v222, v224);
                }
                v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
                memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
                goto LABEL_82;
              }
              sub_1AD311474(v205);
            }
            v217 = *((_OWORD *)v206 + 7);
            *(_OWORD *)(v205 + 96) = *((_OWORD *)v206 + 6);
            *(_OWORD *)(v205 + 112) = v217;
            *(_QWORD *)(v205 + 128) = *((_QWORD *)v206 + 16);
            v218 = *((_OWORD *)v206 + 3);
            *(_OWORD *)(v205 + 32) = *((_OWORD *)v206 + 2);
            *(_OWORD *)(v205 + 48) = v218;
            v219 = *((_OWORD *)v206 + 5);
            *(_OWORD *)(v205 + 64) = *((_OWORD *)v206 + 4);
            *(_OWORD *)(v205 + 80) = v219;
            v220 = *((_OWORD *)v206 + 1);
            *(_OWORD *)v205 = *(_OWORD *)v206;
            *(_OWORD *)(v205 + 16) = v220;
            goto LABEL_76;
          }
          sub_1AD009758((uint64_t)(v48 + 3), &qword_1ED2E3198);
        }
        v48[3] = *(_OWORD *)v104;
        goto LABEL_63;
      }
      sub_1AD009758((uint64_t)(v13 + 1), &qword_1ED2E3198);
    }
    v13[1] = *(_OWORD *)v29;
    goto LABEL_25;
  }
  if (v19)
  {
LABEL_17:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2400);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_396;
  }
  v956 = a3;
  v952 = v4;
  v20 = v14[1];
  *v13 = *v14;
  v13[1] = v20;
  v937 = v15;
  v21 = v15[5];
  v22 = (_OWORD *)((char *)v13 + v21);
  v23 = (_OWORD *)((char *)v14 + v21);
  v24 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    __src = v26;
    v908 = v25;
    v915 = v16;
    v921 = v13;
    v928 = v14;
    v944 = v5;
    v31 = v23[1];
    *v22 = *v23;
    v22[1] = v31;
    v32 = v23[3];
    v22[2] = v23[2];
    v22[3] = v32;
    v33 = v24[6];
    v34 = (char *)v22 + v33;
    v35 = (char *)v23 + v33;
    v36 = *(_OWORD *)((char *)v23 + v33 + 112);
    *((_OWORD *)v34 + 6) = *(_OWORD *)((char *)v23 + v33 + 96);
    *((_OWORD *)v34 + 7) = v36;
    *((_QWORD *)v34 + 16) = *(_QWORD *)((char *)v23 + v33 + 128);
    v37 = *(_OWORD *)((char *)v23 + v33 + 48);
    *((_OWORD *)v34 + 2) = *(_OWORD *)((char *)v23 + v33 + 32);
    *((_OWORD *)v34 + 3) = v37;
    v38 = *(_OWORD *)((char *)v23 + v33 + 80);
    *((_OWORD *)v34 + 4) = *(_OWORD *)((char *)v23 + v33 + 64);
    *((_OWORD *)v34 + 5) = v38;
    v39 = *(_OWORD *)((char *)v23 + v33 + 16);
    *(_OWORD *)v34 = *(_OWORD *)((char *)v23 + v33);
    *((_OWORD *)v34 + 1) = v39;
    v40 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v41 = v40[5];
    v42 = &v34[v41];
    v43 = &v35[v41];
    v44 = sub_1AD63AE2C();
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v72 = v40[6];
    v73 = &v34[v72];
    v74 = &v35[v72];
    v75 = *((_OWORD *)v74 + 5);
    *((_OWORD *)v73 + 4) = *((_OWORD *)v74 + 4);
    *((_OWORD *)v73 + 5) = v75;
    v76 = *((_OWORD *)v74 + 3);
    *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
    *((_OWORD *)v73 + 3) = v76;
    v77 = *((_OWORD *)v74 + 9);
    *((_OWORD *)v73 + 8) = *((_OWORD *)v74 + 8);
    *((_OWORD *)v73 + 9) = v77;
    v78 = *((_OWORD *)v74 + 7);
    *((_OWORD *)v73 + 6) = *((_OWORD *)v74 + 6);
    *((_OWORD *)v73 + 7) = v78;
    v79 = *((_OWORD *)v74 + 13);
    *((_OWORD *)v73 + 12) = *((_OWORD *)v74 + 12);
    *((_OWORD *)v73 + 13) = v79;
    v80 = *((_OWORD *)v74 + 11);
    *((_OWORD *)v73 + 10) = *((_OWORD *)v74 + 10);
    *((_OWORD *)v73 + 11) = v80;
    v81 = *((_OWORD *)v74 + 1);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *((_OWORD *)v73 + 1) = v81;
    *(_QWORD *)&v34[v40[7]] = *(_QWORD *)&v35[v40[7]];
    *(_OWORD *)&v34[v40[8]] = *(_OWORD *)&v35[v40[8]];
    *(_OWORD *)&v34[v40[9]] = *(_OWORD *)&v35[v40[9]];
    v34[v40[10]] = v35[v40[10]];
    v34[v40[11]] = v35[v40[11]];
    *(_OWORD *)&v34[v40[12]] = *(_OWORD *)&v35[v40[12]];
    *(_QWORD *)&v34[v40[13]] = *(_QWORD *)&v35[v40[13]];
    *((_BYTE *)v22 + v24[7]) = *((_BYTE *)v23 + v24[7]);
    *((_BYTE *)v22 + v24[8]) = *((_BYTE *)v23 + v24[8]);
    *((_BYTE *)v22 + v24[9]) = *((_BYTE *)v23 + v24[9]);
    *((_BYTE *)v22 + v24[10]) = *((_BYTE *)v23 + v24[10]);
    *((_BYTE *)v22 + v24[11]) = *((_BYTE *)v23 + v24[11]);
    *((_BYTE *)v22 + v24[12]) = *((_BYTE *)v23 + v24[12]);
    *((_BYTE *)v22 + v24[13]) = *((_BYTE *)v23 + v24[13]);
    *((_BYTE *)v22 + v24[14]) = *((_BYTE *)v23 + v24[14]);
    *(_OWORD *)((char *)v22 + v24[15]) = *(_OWORD *)((char *)v23 + v24[15]);
    *(_OWORD *)((char *)v22 + v24[16]) = *(_OWORD *)((char *)v23 + v24[16]);
    *((_BYTE *)v22 + v24[17]) = *((_BYTE *)v23 + v24[17]);
    *((_BYTE *)v22 + v24[18]) = *((_BYTE *)v23 + v24[18]);
    v82 = v24[19];
    v83 = (_OWORD *)((char *)v22 + v82);
    v84 = (_OWORD *)((char *)v23 + v82);
    v85 = type metadata accessor for CloudKitSharingToken();
    v86 = *(_QWORD *)(v85 - 8);
    v16 = v915;
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      v26 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))__src;
    }
    else
    {
      v88 = v84[13];
      v83[12] = v84[12];
      v83[13] = v88;
      v83[14] = v84[14];
      *((_QWORD *)v83 + 30) = *((_QWORD *)v84 + 30);
      v89 = v84[9];
      v83[8] = v84[8];
      v83[9] = v89;
      v90 = v84[11];
      v83[10] = v84[10];
      v83[11] = v90;
      v91 = v84[5];
      v83[4] = v84[4];
      v83[5] = v91;
      v92 = v84[7];
      v83[6] = v84[6];
      v83[7] = v92;
      v93 = v84[1];
      *v83 = *v84;
      v83[1] = v93;
      v94 = v84[3];
      v83[2] = v84[2];
      v83[3] = v94;
      *(_OWORD *)((char *)v83 + 248) = *(_OWORD *)((char *)v84 + 248);
      *(_OWORD *)((char *)v83 + 264) = *(_OWORD *)((char *)v84 + 264);
      v95 = *(int *)(v85 + 24);
      v96 = (char *)v83 + v95;
      v97 = (char *)v84 + v95;
      *(_OWORD *)((char *)v83 + v95) = *(_OWORD *)((char *)v84 + v95);
      v98 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      __dst = &v96[v98];
      v99 = &v97[v98];
      v100 = sub_1AD63AF28();
      v101 = *(_QWORD *)(v100 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
      {
        v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(__dst, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 32))(__dst, v99, v100);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(__dst, 0, 1, v100);
      }
      v16 = v915;
      v26 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))__src;
      v122 = *(int *)(v85 + 28);
      v123 = (_OWORD *)((char *)v83 + v122);
      v124 = (_OWORD *)((char *)v84 + v122);
      v125 = v124[1];
      *v123 = *v124;
      v123[1] = v125;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
    }
    *(_OWORD *)((char *)v22 + v24[20]) = *(_OWORD *)((char *)v23 + v24[20]);
    *((_BYTE *)v22 + v24[21]) = *((_BYTE *)v23 + v24[21]);
    *((_BYTE *)v22 + v24[22]) = *((_BYTE *)v23 + v24[22]);
    *((_BYTE *)v22 + v24[23]) = *((_BYTE *)v23 + v24[23]);
    v25 = v908;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v908 + 56))(v22, 0, 1, v24);
    v5 = v944;
    v13 = v921;
    v14 = v928;
  }
  v126 = v937[6];
  v127 = (_OWORD *)((char *)v13 + v126);
  v128 = (_OWORD *)((char *)v14 + v126);
  if (v26((char *)v14 + v126, 1, v24))
  {
    v129 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
  }
  else
  {
    v911 = v25;
    v917 = v16;
    v923 = v13;
    v930 = v14;
    v947 = v5;
    v130 = v128[1];
    *v127 = *v128;
    v127[1] = v130;
    v131 = v128[3];
    v127[2] = v128[2];
    v127[3] = v131;
    v132 = v24[6];
    v133 = (char *)v127 + v132;
    v134 = (char *)v128 + v132;
    v135 = *(_OWORD *)((char *)v128 + v132 + 112);
    *((_OWORD *)v133 + 6) = *(_OWORD *)((char *)v128 + v132 + 96);
    *((_OWORD *)v133 + 7) = v135;
    *((_QWORD *)v133 + 16) = *(_QWORD *)((char *)v128 + v132 + 128);
    v136 = *(_OWORD *)((char *)v128 + v132 + 48);
    *((_OWORD *)v133 + 2) = *(_OWORD *)((char *)v128 + v132 + 32);
    *((_OWORD *)v133 + 3) = v136;
    v137 = *(_OWORD *)((char *)v128 + v132 + 80);
    *((_OWORD *)v133 + 4) = *(_OWORD *)((char *)v128 + v132 + 64);
    *((_OWORD *)v133 + 5) = v137;
    v138 = *(_OWORD *)((char *)v128 + v132 + 16);
    *(_OWORD *)v133 = *(_OWORD *)((char *)v128 + v132);
    *((_OWORD *)v133 + 1) = v138;
    v139 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v140 = v139[5];
    v141 = &v133[v140];
    v142 = &v134[v140];
    v143 = sub_1AD63AE2C();
    v144 = *(_QWORD *)(v143 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143))
    {
      v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v141, v142, v143);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
    }
    v146 = v139[6];
    v147 = &v133[v146];
    v148 = &v134[v146];
    v149 = *((_OWORD *)v148 + 5);
    *((_OWORD *)v147 + 4) = *((_OWORD *)v148 + 4);
    *((_OWORD *)v147 + 5) = v149;
    v150 = *((_OWORD *)v148 + 3);
    *((_OWORD *)v147 + 2) = *((_OWORD *)v148 + 2);
    *((_OWORD *)v147 + 3) = v150;
    v151 = *((_OWORD *)v148 + 9);
    *((_OWORD *)v147 + 8) = *((_OWORD *)v148 + 8);
    *((_OWORD *)v147 + 9) = v151;
    v152 = *((_OWORD *)v148 + 7);
    *((_OWORD *)v147 + 6) = *((_OWORD *)v148 + 6);
    *((_OWORD *)v147 + 7) = v152;
    v153 = *((_OWORD *)v148 + 13);
    *((_OWORD *)v147 + 12) = *((_OWORD *)v148 + 12);
    *((_OWORD *)v147 + 13) = v153;
    v154 = *((_OWORD *)v148 + 11);
    *((_OWORD *)v147 + 10) = *((_OWORD *)v148 + 10);
    *((_OWORD *)v147 + 11) = v154;
    v155 = *((_OWORD *)v148 + 1);
    *(_OWORD *)v147 = *(_OWORD *)v148;
    *((_OWORD *)v147 + 1) = v155;
    *(_QWORD *)&v133[v139[7]] = *(_QWORD *)&v134[v139[7]];
    *(_OWORD *)&v133[v139[8]] = *(_OWORD *)&v134[v139[8]];
    *(_OWORD *)&v133[v139[9]] = *(_OWORD *)&v134[v139[9]];
    v133[v139[10]] = v134[v139[10]];
    v133[v139[11]] = v134[v139[11]];
    *(_OWORD *)&v133[v139[12]] = *(_OWORD *)&v134[v139[12]];
    *(_QWORD *)&v133[v139[13]] = *(_QWORD *)&v134[v139[13]];
    *((_BYTE *)v127 + v24[7]) = *((_BYTE *)v128 + v24[7]);
    *((_BYTE *)v127 + v24[8]) = *((_BYTE *)v128 + v24[8]);
    *((_BYTE *)v127 + v24[9]) = *((_BYTE *)v128 + v24[9]);
    *((_BYTE *)v127 + v24[10]) = *((_BYTE *)v128 + v24[10]);
    *((_BYTE *)v127 + v24[11]) = *((_BYTE *)v128 + v24[11]);
    *((_BYTE *)v127 + v24[12]) = *((_BYTE *)v128 + v24[12]);
    *((_BYTE *)v127 + v24[13]) = *((_BYTE *)v128 + v24[13]);
    *((_BYTE *)v127 + v24[14]) = *((_BYTE *)v128 + v24[14]);
    *(_OWORD *)((char *)v127 + v24[15]) = *(_OWORD *)((char *)v128 + v24[15]);
    *(_OWORD *)((char *)v127 + v24[16]) = *(_OWORD *)((char *)v128 + v24[16]);
    *((_BYTE *)v127 + v24[17]) = *((_BYTE *)v128 + v24[17]);
    *((_BYTE *)v127 + v24[18]) = *((_BYTE *)v128 + v24[18]);
    v156 = v24[19];
    v157 = (_OWORD *)((char *)v127 + v156);
    v158 = (_OWORD *)((char *)v128 + v156);
    v159 = type metadata accessor for CloudKitSharingToken();
    v160 = *(_QWORD *)(v159 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v160 + 48))(v158, 1, v159))
    {
      v161 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
      v16 = v917;
    }
    else
    {
      v162 = v158[13];
      v157[12] = v158[12];
      v157[13] = v162;
      v157[14] = v158[14];
      *((_QWORD *)v157 + 30) = *((_QWORD *)v158 + 30);
      v163 = v158[9];
      v157[8] = v158[8];
      v157[9] = v163;
      v164 = v158[11];
      v157[10] = v158[10];
      v157[11] = v164;
      v165 = v158[5];
      v157[4] = v158[4];
      v157[5] = v165;
      v166 = v158[7];
      v157[6] = v158[6];
      v157[7] = v166;
      v167 = v158[1];
      *v157 = *v158;
      v157[1] = v167;
      v168 = v158[3];
      v157[2] = v158[2];
      v157[3] = v168;
      *(_OWORD *)((char *)v157 + 248) = *(_OWORD *)((char *)v158 + 248);
      *(_OWORD *)((char *)v157 + 264) = *(_OWORD *)((char *)v158 + 264);
      v169 = *(int *)(v159 + 24);
      v170 = (char *)v157 + v169;
      v171 = (char *)v158 + v169;
      *(_OWORD *)((char *)v157 + v169) = *(_OWORD *)((char *)v158 + v169);
      v172 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      __srcb = &v170[v172];
      v173 = &v171[v172];
      v174 = sub_1AD63AF28();
      v175 = *(_QWORD *)(v174 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48))(v173, 1, v174))
      {
        v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(__srcb, v173, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v175 + 32))(__srcb, v173, v174);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(__srcb, 0, 1, v174);
      }
      v16 = v917;
      v192 = *(int *)(v159 + 28);
      v193 = (_OWORD *)((char *)v157 + v192);
      v194 = (_OWORD *)((char *)v158 + v192);
      v195 = v194[1];
      *v193 = *v194;
      v193[1] = v195;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v157, 0, 1, v159);
    }
    *(_OWORD *)((char *)v127 + v24[20]) = *(_OWORD *)((char *)v128 + v24[20]);
    *((_BYTE *)v127 + v24[21]) = *((_BYTE *)v128 + v24[21]);
    *((_BYTE *)v127 + v24[22]) = *((_BYTE *)v128 + v24[22]);
    *((_BYTE *)v127 + v24[23]) = *((_BYTE *)v128 + v24[23]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v911 + 56))(v127, 0, 1, v24);
    v5 = v947;
    v13 = v923;
    v14 = v930;
  }
  v196 = v937[7];
  v197 = (_OWORD *)((char *)v13 + v196);
  v198 = (_OWORD *)((char *)v14 + v196);
  v199 = v198[1];
  *v197 = *v198;
  v197[1] = v199;
  *((_BYTE *)v13 + v937[8]) = *((_BYTE *)v14 + v937[8]);
  v200 = v937[9];
  v201 = (_OWORD *)((char *)v13 + v200);
  v202 = (_OWORD *)((char *)v14 + v200);
  v203 = v202[1];
  *v201 = *v202;
  v201[1] = v203;
  *(_QWORD *)((char *)v13 + v937[10]) = *(_QWORD *)((char *)v14 + v937[10]);
  (*(void (**)(_OWORD *, _QWORD, uint64_t))(v16 + 56))(v13, 0, 1);
  v4 = v952;
  a3 = v956;
LABEL_396:
  v616 = a3[13];
  v617 = (char *)v5 + v616;
  v618 = (char *)v4 + v616;
  v619 = sub_1AD63B03C();
  v620 = *(_QWORD *)(v619 - 8);
  v621 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v620 + 48);
  v622 = v621(v617, 1, v619);
  v623 = v621(v618, 1, v619);
  if (v622)
  {
    if (!v623)
    {
      (*(void (**)(char *, char *, uint64_t))(v620 + 32))(v617, v618, v619);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v620 + 56))(v617, 0, 1, v619);
      goto LABEL_402;
    }
    goto LABEL_401;
  }
  if (v623)
  {
    (*(void (**)(char *, uint64_t))(v620 + 8))(v617, v619);
LABEL_401:
    v624 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v617, v618, *(_QWORD *)(*(_QWORD *)(v624 - 8) + 64));
    goto LABEL_402;
  }
  (*(void (**)(char *, char *, uint64_t))(v620 + 40))(v617, v618, v619);
LABEL_402:
  v625 = a3[14];
  v626 = (char *)v5 + v625;
  v627 = (char *)v4 + v625;
  v628 = v621((char *)v5 + v625, 1, v619);
  v629 = v621(v627, 1, v619);
  if (v628)
  {
    if (!v629)
    {
      (*(void (**)(char *, char *, uint64_t))(v620 + 32))(v626, v627, v619);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v620 + 56))(v626, 0, 1, v619);
      goto LABEL_408;
    }
    goto LABEL_407;
  }
  if (v629)
  {
    (*(void (**)(char *, uint64_t))(v620 + 8))(v626, v619);
LABEL_407:
    v630 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v626, v627, *(_QWORD *)(*(_QWORD *)(v630 - 8) + 64));
    goto LABEL_408;
  }
  (*(void (**)(char *, char *, uint64_t))(v620 + 40))(v626, v627, v619);
LABEL_408:
  v631 = a3[15];
  v632 = (char *)v5 + v631;
  v633 = (char *)v4 + v631;
  v634 = v621((char *)v5 + v631, 1, v619);
  v635 = v621(v633, 1, v619);
  if (v634)
  {
    if (!v635)
    {
      (*(void (**)(char *, char *, uint64_t))(v620 + 32))(v632, v633, v619);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v620 + 56))(v632, 0, 1, v619);
      goto LABEL_414;
    }
    goto LABEL_413;
  }
  if (v635)
  {
    (*(void (**)(char *, uint64_t))(v620 + 8))(v632, v619);
LABEL_413:
    v636 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v632, v633, *(_QWORD *)(*(_QWORD *)(v636 - 8) + 64));
    goto LABEL_414;
  }
  (*(void (**)(char *, char *, uint64_t))(v620 + 40))(v632, v633, v619);
LABEL_414:
  v637 = a3[16];
  v638 = (char *)v5 + v637;
  v639 = (char *)v4 + v637;
  *(_OWORD *)((char *)v5 + v637) = *(_OWORD *)((char *)v4 + v637);
  swift_release();
  v640 = v639 + 16;
  if (*((_QWORD *)v638 + 3) == 1)
  {
LABEL_417:
    *((_OWORD *)v638 + 1) = *v640;
    goto LABEL_419;
  }
  v641 = *((_QWORD *)v639 + 3);
  if (v641 == 1)
  {
    sub_1AD009758((uint64_t)(v638 + 16), &qword_1ED2E3198);
    goto LABEL_417;
  }
  *((_QWORD *)v638 + 2) = *(_QWORD *)v640;
  *((_QWORD *)v638 + 3) = v641;
  swift_bridgeObjectRelease();
LABEL_419:
  v642 = a3[17];
  v643 = (char *)v5 + v642;
  v644 = (char *)v4 + v642;
  *(_OWORD *)((char *)v5 + v642) = *(_OWORD *)((char *)v4 + v642);
  swift_release();
  v645 = v644 + 16;
  if (*((_QWORD *)v643 + 3) == 1)
  {
LABEL_422:
    *((_OWORD *)v643 + 1) = *v645;
    goto LABEL_424;
  }
  v646 = *((_QWORD *)v644 + 3);
  if (v646 == 1)
  {
    sub_1AD009758((uint64_t)(v643 + 16), &qword_1ED2E3198);
    goto LABEL_422;
  }
  *((_QWORD *)v643 + 2) = *(_QWORD *)v645;
  *((_QWORD *)v643 + 3) = v646;
  swift_bridgeObjectRelease();
LABEL_424:
  v647 = a3[18];
  v648 = (_OWORD *)((char *)v5 + v647);
  v649 = (_OWORD *)((char *)v4 + v647);
  v650 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v651 = *((_QWORD *)v650 - 1);
  v652 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v651 + 48);
  v653 = v652(v648, 1, v650);
  v654 = v652(v649, 1, v650);
  if (!v653)
  {
    if (v654)
    {
      sub_1AD066230((uint64_t)v648, type metadata accessor for CloudKitShareParticipant);
      goto LABEL_430;
    }
    *v648 = *v649;
    swift_release();
    v672 = *((_QWORD *)v649 + 3);
    *((_QWORD *)v648 + 2) = *((_QWORD *)v649 + 2);
    *((_QWORD *)v648 + 3) = v672;
    swift_bridgeObjectRelease();
    v648[2] = v649[2];
    swift_release();
    v673 = v649 + 3;
    if (*((_QWORD *)v648 + 7) != 1)
    {
      v674 = *((_QWORD *)v649 + 7);
      if (v674 != 1)
      {
        *((_QWORD *)v648 + 6) = *v673;
        *((_QWORD *)v648 + 7) = v674;
        swift_bridgeObjectRelease();
LABEL_444:
        v707 = v650[6];
        v708 = (uint64_t)v648 + v707;
        v709 = (char *)v649 + v707;
        v951 = v5;
        v955 = v4;
        v959 = a3;
        v943 = v649;
        if (*(_QWORD *)((char *)v648 + v707))
        {
          if (*(_QWORD *)v709)
          {
            v710 = *((_QWORD *)v709 + 1);
            *(_QWORD *)v708 = *(_QWORD *)v709;
            *(_QWORD *)(v708 + 8) = v710;
            swift_release();
            v711 = *((_QWORD *)v709 + 3);
            *(_QWORD *)(v708 + 16) = *((_QWORD *)v709 + 2);
            *(_QWORD *)(v708 + 24) = v711;
            swift_bridgeObjectRelease();
            *(_OWORD *)(v708 + 32) = *((_OWORD *)v709 + 2);
            swift_release();
            v712 = *((_QWORD *)v709 + 7);
            *(_QWORD *)(v708 + 48) = *((_QWORD *)v709 + 6);
            *(_QWORD *)(v708 + 56) = v712;
            swift_bridgeObjectRelease();
            *(_OWORD *)(v708 + 64) = *((_OWORD *)v709 + 4);
            swift_release();
            v713 = *((_QWORD *)v709 + 11);
            *(_QWORD *)(v708 + 80) = *((_QWORD *)v709 + 10);
            *(_QWORD *)(v708 + 88) = v713;
            swift_bridgeObjectRelease();
            *(_OWORD *)(v708 + 96) = *((_OWORD *)v709 + 6);
            swift_release();
            v714 = v709 + 112;
            if (*(_QWORD *)(v708 + 120) != 1)
            {
              v715 = *((_QWORD *)v709 + 15);
              if (v715 != 1)
              {
                *(_QWORD *)(v708 + 112) = *v714;
                *(_QWORD *)(v708 + 120) = v715;
                swift_bridgeObjectRelease();
                goto LABEL_456;
              }
              sub_1AD009758(v708 + 112, &qword_1ED2E3198);
            }
            *(_OWORD *)(v708 + 112) = *(_OWORD *)v714;
LABEL_456:
            *(_QWORD *)(v708 + 128) = *((_QWORD *)v709 + 16);
LABEL_457:
            v935 = (int *)type metadata accessor for CloudKitUserIdentity(0);
            v724 = v935[5];
            v725 = (void *)(v708 + v724);
            v726 = &v709[v724];
            v727 = sub_1AD63AE2C();
            v728 = *(_QWORD *)(v727 - 8);
            v729 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v728 + 48);
            v730 = v729(v725, 1, v727);
            v731 = v729(v726, 1, v727);
            if (v730)
            {
              if (!v731)
              {
                (*(void (**)(void *, char *, uint64_t))(v728 + 32))(v725, v726, v727);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v728 + 56))(v725, 0, 1, v727);
                goto LABEL_463;
              }
            }
            else
            {
              if (!v731)
              {
                (*(void (**)(void *, char *, uint64_t))(v728 + 40))(v725, v726, v727);
LABEL_463:
                v733 = v935[6];
                v734 = v708 + v733;
                v735 = &v709[v733];
                v5 = v951;
                if (*(_QWORD *)(v708 + v733))
                {
                  if (*(_QWORD *)v735)
                  {
                    v736 = *((_QWORD *)v735 + 1);
                    *(_QWORD *)v734 = *(_QWORD *)v735;
                    *(_QWORD *)(v734 + 8) = v736;
                    swift_release();
                    v737 = v735 + 16;
                    if (*(_QWORD *)(v734 + 24) != 1)
                    {
                      v738 = *((_QWORD *)v735 + 3);
                      if (v738 != 1)
                      {
                        *(_QWORD *)(v734 + 16) = *v737;
                        *(_QWORD *)(v734 + 24) = v738;
                        swift_bridgeObjectRelease();
LABEL_473:
                        *(_OWORD *)(v734 + 32) = *((_OWORD *)v735 + 2);
                        swift_release();
                        v746 = v735 + 48;
                        if (*(_QWORD *)(v734 + 56) != 1)
                        {
                          v747 = *((_QWORD *)v735 + 7);
                          if (v747 != 1)
                          {
                            *(_QWORD *)(v734 + 48) = *v746;
                            *(_QWORD *)(v734 + 56) = v747;
                            swift_bridgeObjectRelease();
LABEL_478:
                            v748 = *((_QWORD *)v735 + 8);
                            if (*(_QWORD *)(v734 + 64))
                            {
                              if (v748)
                              {
                                v749 = *((_QWORD *)v735 + 9);
                                *(_QWORD *)(v734 + 64) = v748;
                                *(_QWORD *)(v734 + 72) = v749;
                                swift_release();
                                v750 = *((_QWORD *)v735 + 11);
                                *(_QWORD *)(v734 + 80) = *((_QWORD *)v735 + 10);
                                *(_QWORD *)(v734 + 88) = v750;
                                swift_bridgeObjectRelease();
                                *(_OWORD *)(v734 + 96) = *((_OWORD *)v735 + 6);
                                swift_release();
                                v751 = *((_QWORD *)v735 + 15);
                                *(_QWORD *)(v734 + 112) = *((_QWORD *)v735 + 14);
                                *(_QWORD *)(v734 + 120) = v751;
                                swift_bridgeObjectRelease();
                                *(_OWORD *)(v734 + 128) = *((_OWORD *)v735 + 8);
                                swift_release();
                                v752 = *((_QWORD *)v735 + 19);
                                *(_QWORD *)(v734 + 144) = *((_QWORD *)v735 + 18);
                                *(_QWORD *)(v734 + 152) = v752;
                                swift_bridgeObjectRelease();
                                *(_OWORD *)(v734 + 160) = *((_OWORD *)v735 + 10);
                                swift_release();
                                v753 = v735 + 176;
                                if (*(_QWORD *)(v734 + 184) != 1)
                                {
                                  v754 = *((_QWORD *)v735 + 23);
                                  if (v754 != 1)
                                  {
                                    *(_QWORD *)(v734 + 176) = *v753;
                                    *(_QWORD *)(v734 + 184) = v754;
                                    swift_bridgeObjectRelease();
                                    goto LABEL_487;
                                  }
                                  sub_1AD009758(v734 + 176, &qword_1ED2E3198);
                                }
                                *(_OWORD *)(v734 + 176) = *(_OWORD *)v753;
LABEL_487:
                                *(_QWORD *)(v734 + 192) = *((_QWORD *)v735 + 24);
LABEL_488:
                                *(_BYTE *)(v734 + 200) = v735[200];
                                v759 = v735 + 208;
                                v760 = *(_QWORD *)(v734 + 216);
                                if (v760 >> 60 != 15)
                                {
                                  v761 = *((_QWORD *)v735 + 27);
                                  if (v761 >> 60 != 15)
                                  {
                                    v762 = *(_QWORD *)(v734 + 208);
                                    *(_QWORD *)(v734 + 208) = *v759;
                                    *(_QWORD *)(v734 + 216) = v761;
                                    sub_1AD00412C(v762, v760);
LABEL_493:
                                    *(_QWORD *)(v708 + v935[7]) = *(_QWORD *)&v709[v935[7]];
                                    swift_bridgeObjectRelease();
                                    v763 = v935[8];
                                    v764 = (uint64_t *)(v708 + v763);
                                    v765 = (uint64_t *)&v709[v763];
                                    v766 = *(_QWORD *)(v708 + v763 + 8);
                                    a3 = v959;
                                    if (v766 >> 60 != 15)
                                    {
                                      v767 = v765[1];
                                      if (v767 >> 60 != 15)
                                      {
                                        v768 = *v764;
                                        *v764 = *v765;
                                        v764[1] = v767;
                                        sub_1AD00412C(v768, v766);
LABEL_498:
                                        v769 = v935[9];
                                        v770 = (uint64_t *)(v708 + v769);
                                        v771 = (uint64_t *)&v709[v769];
                                        v772 = *(_QWORD *)(v708 + v769 + 8);
                                        if (v772 >> 60 != 15)
                                        {
                                          v773 = v771[1];
                                          if (v773 >> 60 != 15)
                                          {
                                            v774 = *v770;
                                            *v770 = *v771;
                                            v770[1] = v773;
                                            sub_1AD00412C(v774, v772);
LABEL_503:
                                            *(_BYTE *)(v708 + v935[10]) = v709[v935[10]];
                                            *(_BYTE *)(v708 + v935[11]) = v709[v935[11]];
                                            v775 = v935[12];
                                            v776 = (uint64_t *)(v708 + v775);
                                            v777 = (uint64_t *)&v709[v775];
                                            v778 = *(_QWORD *)(v708 + v775 + 8);
                                            if (v778 >> 60 != 15)
                                            {
                                              v779 = v777[1];
                                              if (v779 >> 60 != 15)
                                              {
                                                v780 = *v776;
                                                *v776 = *v777;
                                                v776[1] = v779;
                                                sub_1AD00412C(v780, v778);
LABEL_508:
                                                *(_QWORD *)(v708 + v935[13]) = *(_QWORD *)&v709[v935[13]];
                                                *((_BYTE *)v648 + v650[7]) = *((_BYTE *)v943 + v650[7]);
                                                *((_BYTE *)v648 + v650[8]) = *((_BYTE *)v943 + v650[8]);
                                                *((_BYTE *)v648 + v650[9]) = *((_BYTE *)v943 + v650[9]);
                                                *((_BYTE *)v648 + v650[10]) = *((_BYTE *)v943 + v650[10]);
                                                *((_BYTE *)v648 + v650[11]) = *((_BYTE *)v943 + v650[11]);
                                                *((_BYTE *)v648 + v650[12]) = *((_BYTE *)v943 + v650[12]);
                                                *((_BYTE *)v648 + v650[13]) = *((_BYTE *)v943 + v650[13]);
                                                *((_BYTE *)v648 + v650[14]) = *((_BYTE *)v943 + v650[14]);
                                                v781 = v650[15];
                                                v782 = (uint64_t *)((char *)v648 + v781);
                                                v783 = (uint64_t *)((char *)v943 + v781);
                                                v784 = *(_QWORD *)((char *)v648 + v781 + 8);
                                                if (v784 >> 60 != 15)
                                                {
                                                  v785 = v783[1];
                                                  if (v785 >> 60 != 15)
                                                  {
                                                    v786 = *v782;
                                                    *v782 = *v783;
                                                    v782[1] = v785;
                                                    sub_1AD00412C(v786, v784);
LABEL_513:
                                                    v787 = v650[16];
                                                    v788 = (uint64_t *)((char *)v648 + v787);
                                                    v789 = (uint64_t *)((char *)v943 + v787);
                                                    v790 = *(_QWORD *)((char *)v648 + v787 + 8);
                                                    if (v790 >> 60 != 15)
                                                    {
                                                      v791 = v789[1];
                                                      if (v791 >> 60 != 15)
                                                      {
                                                        v792 = *v788;
                                                        *v788 = *v789;
                                                        v788[1] = v791;
                                                        sub_1AD00412C(v792, v790);
LABEL_518:
                                                        *((_BYTE *)v648 + v650[17]) = *((_BYTE *)v943 + v650[17]);
                                                        *((_BYTE *)v648 + v650[18]) = *((_BYTE *)v943 + v650[18]);
                                                        v793 = v650[19];
                                                        v794 = (uint64_t)v648 + v793;
                                                        v795 = (char *)v943 + v793;
                                                        v796 = type metadata accessor for CloudKitSharingToken();
                                                        v927 = *(_QWORD **)(v796 - 8);
                                                        v797 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v927[6];
                                                        v798 = v797(v794, 1, v796);
                                                        v799 = v795;
                                                        v936 = (int *)v796;
                                                        v800 = v797((uint64_t)v795, 1, v796);
                                                        if (v798)
                                                        {
                                                          if (!v800)
                                                          {
                                                            v801 = *((_OWORD *)v795 + 13);
                                                            *(_OWORD *)(v794 + 192) = *((_OWORD *)v795 + 12);
                                                            *(_OWORD *)(v794 + 208) = v801;
                                                            *(_OWORD *)(v794 + 224) = *((_OWORD *)v795 + 14);
                                                            *(_QWORD *)(v794 + 240) = *((_QWORD *)v795 + 30);
                                                            v802 = *((_OWORD *)v795 + 9);
                                                            *(_OWORD *)(v794 + 128) = *((_OWORD *)v795 + 8);
                                                            *(_OWORD *)(v794 + 144) = v802;
                                                            v803 = *((_OWORD *)v795 + 11);
                                                            *(_OWORD *)(v794 + 160) = *((_OWORD *)v795 + 10);
                                                            *(_OWORD *)(v794 + 176) = v803;
                                                            v804 = *((_OWORD *)v795 + 5);
                                                            *(_OWORD *)(v794 + 64) = *((_OWORD *)v795 + 4);
                                                            *(_OWORD *)(v794 + 80) = v804;
                                                            v805 = *((_OWORD *)v795 + 7);
                                                            *(_OWORD *)(v794 + 96) = *((_OWORD *)v795 + 6);
                                                            *(_OWORD *)(v794 + 112) = v805;
                                                            v806 = *((_OWORD *)v795 + 1);
                                                            *(_OWORD *)v794 = *(_OWORD *)v795;
                                                            *(_OWORD *)(v794 + 16) = v806;
                                                            v807 = *((_OWORD *)v795 + 3);
                                                            *(_OWORD *)(v794 + 32) = *((_OWORD *)v795 + 2);
                                                            *(_OWORD *)(v794 + 48) = v807;
                                                            *(_OWORD *)(v794 + 248) = *(_OWORD *)(v795 + 248);
                                                            *(_OWORD *)(v794 + 264) = *(_OWORD *)(v795 + 264);
                                                            v808 = *(int *)(v796 + 24);
                                                            v809 = v794 + v808;
                                                            v810 = &v795[v808];
                                                            *(_OWORD *)(v794 + v808) = *(_OWORD *)&v795[v808];
                                                            v811 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                          + 28);
                                                            v812 = (void *)(v809 + v811);
                                                            v813 = &v810[v811];
                                                            v814 = sub_1AD63AF28();
                                                            v815 = *(_QWORD *)(v814 - 8);
                                                            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v815 + 48))(v813, 1, v814))
                                                            {
                                                              v816 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                              memcpy(v812, v813, *(_QWORD *)(*(_QWORD *)(v816 - 8) + 64));
                                                            }
                                                            else
                                                            {
                                                              (*(void (**)(void *, char *, uint64_t))(v815 + 32))(v812, v813, v814);
                                                              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v815 + 56))(v812, 0, 1, v814);
                                                            }
                                                            a3 = v959;
                                                            v818 = v943;
                                                            v823 = *(int *)(v796 + 28);
                                                            v824 = (_OWORD *)(v794 + v823);
                                                            v825 = &v795[v823];
                                                            v826 = *((_OWORD *)v825 + 1);
                                                            *v824 = *(_OWORD *)v825;
                                                            v824[1] = v826;
                                                            ((void (*)(uint64_t, _QWORD, uint64_t))v927[7])(v794, 0, 1);
                                                            v5 = v951;
                                                            v4 = v955;
LABEL_532:
                                                            v827 = v650[20];
                                                            v828 = (uint64_t *)((char *)v648 + v827);
                                                            v829 = (uint64_t *)((char *)v818 + v827);
                                                            v830 = *(_QWORD *)((char *)v648 + v827 + 8);
                                                            if (v830 >> 60 != 15)
                                                            {
                                                              v831 = v829[1];
                                                              if (v831 >> 60 != 15)
                                                              {
                                                                v832 = *v828;
                                                                *v828 = *v829;
                                                                v828[1] = v831;
                                                                sub_1AD00412C(v832, v830);
                                                                goto LABEL_537;
                                                              }
                                                              sub_1AD007EC0((uint64_t)v828);
                                                            }
                                                            *(_OWORD *)v828 = *(_OWORD *)v829;
LABEL_537:
                                                            *((_BYTE *)v648 + v650[21]) = *((_BYTE *)v818 + v650[21]);
                                                            *((_BYTE *)v648 + v650[22]) = *((_BYTE *)v818 + v650[22]);
                                                            *((_BYTE *)v648 + v650[23]) = *((_BYTE *)v818 + v650[23]);
                                                            goto LABEL_538;
                                                          }
                                                          goto LABEL_524;
                                                        }
                                                        if (v800)
                                                        {
                                                          sub_1AD066230(v794, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
LABEL_524:
                                                          v817 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                                                          memcpy((void *)v794, v795, *(_QWORD *)(*(_QWORD *)(v817 - 8) + 64));
                                                          goto LABEL_525;
                                                        }
                                                        v819 = v795;
                                                        *(_DWORD *)v794 = *(_DWORD *)v795;
                                                        *(_QWORD *)(v794 + 8) = *((_QWORD *)v795 + 1);
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)(v794 + 16) = *((_QWORD *)v795 + 2);
                                                        swift_bridgeObjectRelease();
                                                        *(_OWORD *)(v794 + 24) = *(_OWORD *)(v795 + 24);
                                                        swift_release();
                                                        v820 = v795 + 40;
                                                        v821 = *(_QWORD *)(v794 + 48);
                                                        if (v821 >> 60 != 11)
                                                        {
                                                          v822 = *((_QWORD *)v795 + 6);
                                                          if (v822 >> 60 == 11)
                                                          {
                                                            sub_1AD009758(v794 + 40, &qword_1ED2E3250);
                                                          }
                                                          else if (v821 >> 60 != 15)
                                                          {
                                                            if (v822 >> 60 != 15)
                                                            {
                                                              v886 = *(_QWORD *)(v794 + 40);
                                                              *(_QWORD *)(v794 + 40) = *v820;
                                                              *(_QWORD *)(v794 + 48) = v822;
                                                              sub_1AD00412C(v886, v821);
LABEL_543:
                                                              if (*(_QWORD *)(v794 + 72))
                                                              {
                                                                v838 = *((_QWORD *)v795 + 9);
                                                                if (v838)
                                                                {
                                                                  v839 = *((_DWORD *)v795 + 15);
                                                                  *(_DWORD *)(v794 + 56) = *((_DWORD *)v795 + 14);
                                                                  *(_DWORD *)(v794 + 60) = v839;
                                                                  *(_BYTE *)(v794 + 64) = v795[64];
                                                                  v840 = *((_QWORD *)v795 + 10);
                                                                  *(_QWORD *)(v794 + 72) = v838;
                                                                  *(_QWORD *)(v794 + 80) = v840;
                                                                  swift_release();
                                                                  v841 = v795 + 88;
                                                                  v842 = *(_QWORD *)(v794 + 96);
                                                                  if (v842 >> 60 == 15)
                                                                  {
LABEL_548:
                                                                    *(_OWORD *)(v794 + 88) = *v841;
                                                                    goto LABEL_551;
                                                                  }
                                                                  v843 = *((_QWORD *)v795 + 12);
                                                                  if (v843 >> 60 == 15)
                                                                  {
                                                                    sub_1AD007EC0(v794 + 88);
                                                                    goto LABEL_548;
                                                                  }
                                                                  v859 = *(_QWORD *)(v794 + 88);
                                                                  *(_QWORD *)(v794 + 88) = *(_QWORD *)v841;
                                                                  *(_QWORD *)(v794 + 96) = v843;
                                                                  sub_1AD00412C(v859, v842);
LABEL_551:
                                                                  *(_OWORD *)(v794 + 104) = *(_OWORD *)(v795 + 104);
                                                                  swift_release();
                                                                  v845 = v795 + 120;
                                                                  v846 = *(_QWORD *)(v794 + 128);
                                                                  if (v846 >> 60 != 15)
                                                                  {
                                                                    v847 = *((_QWORD *)v795 + 16);
                                                                    if (v847 >> 60 != 15)
                                                                    {
                                                                      v848 = *(_QWORD *)(v794 + 120);
                                                                      *(_QWORD *)(v794 + 120) = *v845;
                                                                      *(_QWORD *)(v794 + 128) = v847;
                                                                      sub_1AD00412C(v848, v846);
LABEL_556:
                                                                      *(_OWORD *)(v794 + 136) = *(_OWORD *)(v795 + 136);
                                                                      swift_release();
                                                                      v849 = v795 + 152;
                                                                      v850 = *(_QWORD *)(v794 + 160);
                                                                      if (v850 >> 60 != 11)
                                                                      {
                                                                        v851 = *((_QWORD *)v795 + 20);
                                                                        if (v851 >> 60 == 11)
                                                                        {
                                                                          sub_1AD009758(v794 + 152, &qword_1ED2E3250);
                                                                        }
                                                                        else if (v850 >> 60 != 15)
                                                                        {
                                                                          if (v851 >> 60 != 15)
                                                                          {
                                                                            v887 = *(_QWORD *)(v794 + 152);
                                                                            *(_QWORD *)(v794 + 152) = *v849;
                                                                            *(_QWORD *)(v794 + 160) = v851;
                                                                            sub_1AD00412C(v887, v850);
LABEL_563:
                                                                            v852 = *((_QWORD *)v795 + 21);
                                                                            if (*(_QWORD *)(v794 + 168))
                                                                            {
                                                                              if (v852)
                                                                              {
                                                                                v853 = *((_QWORD *)v795 + 22);
                                                                                *(_QWORD *)(v794 + 168) = v852;
                                                                                *(_QWORD *)(v794 + 176) = v853;
                                                                                swift_release();
                                                                                v854 = v795 + 184;
                                                                                v855 = *(_QWORD *)(v794 + 192);
                                                                                if (v855 >> 60 != 15)
                                                                                {
                                                                                  v856 = *((_QWORD *)v795 + 24);
                                                                                  if (v856 >> 60 != 15)
                                                                                  {
                                                                                    v860 = *(_QWORD *)(v794 + 184);
                                                                                    *(_QWORD *)(v794 + 184) = *v854;
                                                                                    *(_QWORD *)(v794 + 192) = v856;
                                                                                    sub_1AD00412C(v860, v855);
LABEL_573:
                                                                                    *(_DWORD *)(v794 + 200) = *((_DWORD *)v795 + 50);
                                                                                    *(_OWORD *)(v794 + 208) = *((_OWORD *)v795 + 13);
                                                                                    swift_release();
                                                                                    v861 = v795 + 224;
                                                                                    v862 = *(_QWORD *)(v794 + 232);
                                                                                    if (v862 >> 60 != 15)
                                                                                    {
                                                                                      v863 = *((_QWORD *)v795 + 29);
                                                                                      if (v863 >> 60 != 15)
                                                                                      {
                                                                                        v864 = *(_QWORD *)(v794 + 224);
                                                                                        *(_QWORD *)(v794 + 224) = *v861;
                                                                                        *(_QWORD *)(v794 + 232) = v863;
                                                                                        sub_1AD00412C(v864, v862);
LABEL_578:
                                                                                        *(_QWORD *)(v794 + 240) = *((_QWORD *)v795 + 30);
                                                                                        swift_bridgeObjectRelease();
                                                                                        *(_OWORD *)(v794 + 248) = *(_OWORD *)(v795 + 248);
                                                                                        swift_release();
                                                                                        v865 = v795 + 264;
                                                                                        v866 = *(_QWORD *)(v794 + 272);
                                                                                        if (v866 >> 60 != 11)
                                                                                        {
                                                                                          v867 = *((_QWORD *)v795 + 34);
                                                                                          if (v867 >> 60 == 11)
                                                                                          {
                                                                                            sub_1AD009758(v794 + 264, &qword_1ED2E3250);
                                                                                          }
                                                                                          else if (v866 >> 60 != 15)
                                                                                          {
                                                                                            if (v867 >> 60 != 15)
                                                                                            {
                                                                                              v888 = *(_QWORD *)(v794 + 264);
                                                                                              *(_QWORD *)(v794 + 264) = *v865;
                                                                                              *(_QWORD *)(v794 + 272) = v867;
                                                                                              sub_1AD00412C(v888, v866);
LABEL_585:
                                                                                              v868 = v936[6];
                                                                                              v869 = v794 + v868;
                                                                                              v870 = &v795[v868];
                                                                                              *(_OWORD *)(v794 + v868) = *(_OWORD *)&v799[v868];
                                                                                              swift_release();
                                                                                              v871 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
                                                                                              v872 = (void *)(v869 + v871);
                                                                                              v873 = &v870[v871];
                                                                                              v874 = sub_1AD63AF28();
                                                                                              v875 = *(_QWORD *)(v874 - 8);
                                                                                              v876 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v875 + 48);
                                                                                              v877 = v876(v872, 1, v874);
                                                                                              v878 = v876(v873, 1, v874);
                                                                                              if (v877)
                                                                                              {
                                                                                                if (!v878)
                                                                                                {
                                                                                                  (*(void (**)(void *, char *, uint64_t))(v875 + 32))(v872, v873, v874);
                                                                                                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v875 + 56))(v872, 0, 1, v874);
LABEL_591:
                                                                                                  a3 = v959;
                                                                                                  v880 = v936[7];
                                                                                                  v881 = v794 + v880;
                                                                                                  v882 = &v819[v880];
                                                                                                  *(_OWORD *)(v794 + v880) = *(_OWORD *)&v819[v880];
                                                                                                  swift_release();
                                                                                                  v883 = (_OWORD *)(v881 + 16);
                                                                                                  v884 = v882 + 16;
                                                                                                  v5 = v951;
                                                                                                  if (*(_QWORD *)(v881 + 24) != 1)
                                                                                                  {
                                                                                                    v885 = *((_QWORD *)v882 + 3);
                                                                                                    v4 = v955;
                                                                                                    if (v885 == 1)
                                                                                                    {
                                                                                                      sub_1AD009758(v881 + 16, &qword_1ED2E3198);
                                                                                                      *v883 = *v884;
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      *(_QWORD *)(v881 + 16) = *(_QWORD *)v884;
                                                                                                      *(_QWORD *)(v881 + 24) = v885;
                                                                                                      swift_bridgeObjectRelease();
                                                                                                    }
                                                                                                    goto LABEL_526;
                                                                                                  }
                                                                                                  *v883 = *v884;
LABEL_525:
                                                                                                  v4 = v955;
LABEL_526:
                                                                                                  v818 = v943;
                                                                                                  goto LABEL_532;
                                                                                                }
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                if (!v878)
                                                                                                {
                                                                                                  (*(void (**)(void *, char *, uint64_t))(v875 + 40))(v872, v873, v874);
                                                                                                  goto LABEL_591;
                                                                                                }
                                                                                                (*(void (**)(void *, uint64_t))(v875 + 8))(v872, v874);
                                                                                              }
                                                                                              v879 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                                              memcpy(v872, v873, *(_QWORD *)(*(_QWORD *)(v879 - 8) + 64));
                                                                                              goto LABEL_591;
                                                                                            }
                                                                                            sub_1AD007EC0(v794 + 264);
                                                                                          }
                                                                                        }
                                                                                        *(_OWORD *)(v794 + 264) = *(_OWORD *)v865;
                                                                                        goto LABEL_585;
                                                                                      }
                                                                                      sub_1AD007EC0(v794 + 224);
                                                                                    }
                                                                                    *(_OWORD *)(v794 + 224) = *(_OWORD *)v861;
                                                                                    goto LABEL_578;
                                                                                  }
                                                                                  sub_1AD007EC0(v794 + 184);
                                                                                }
                                                                                *(_OWORD *)(v794 + 184) = *(_OWORD *)v854;
                                                                                goto LABEL_573;
                                                                              }
                                                                              sub_1AD0AEC8C((uint64_t *)(v794 + 168));
                                                                            }
                                                                            v857 = *(_OWORD *)(v795 + 216);
                                                                            *(_OWORD *)(v794 + 200) = *(_OWORD *)(v795 + 200);
                                                                            *(_OWORD *)(v794 + 216) = v857;
                                                                            *(_QWORD *)(v794 + 232) = *((_QWORD *)v795 + 29);
                                                                            v858 = *(_OWORD *)(v795 + 184);
                                                                            *(_OWORD *)(v794 + 168) = *(_OWORD *)(v795 + 168);
                                                                            *(_OWORD *)(v794 + 184) = v858;
                                                                            goto LABEL_578;
                                                                          }
                                                                          sub_1AD007EC0(v794 + 152);
                                                                        }
                                                                      }
                                                                      *(_OWORD *)(v794 + 152) = *(_OWORD *)v849;
                                                                      goto LABEL_563;
                                                                    }
                                                                    sub_1AD007EC0(v794 + 120);
                                                                  }
                                                                  *(_OWORD *)(v794 + 120) = *(_OWORD *)v845;
                                                                  goto LABEL_556;
                                                                }
                                                                sub_1AD0AEC58(v794 + 56);
                                                              }
                                                              v844 = *(_OWORD *)(v795 + 72);
                                                              *(_OWORD *)(v794 + 56) = *(_OWORD *)(v795 + 56);
                                                              *(_OWORD *)(v794 + 72) = v844;
                                                              *(_OWORD *)(v794 + 88) = *(_OWORD *)(v795 + 88);
                                                              goto LABEL_551;
                                                            }
                                                            sub_1AD007EC0(v794 + 40);
                                                          }
                                                        }
                                                        *(_OWORD *)(v794 + 40) = *(_OWORD *)v820;
                                                        goto LABEL_543;
                                                      }
                                                      sub_1AD007EC0((uint64_t)v788);
                                                    }
                                                    *(_OWORD *)v788 = *(_OWORD *)v789;
                                                    goto LABEL_518;
                                                  }
                                                  sub_1AD007EC0((uint64_t)v782);
                                                }
                                                *(_OWORD *)v782 = *(_OWORD *)v783;
                                                goto LABEL_513;
                                              }
                                              sub_1AD007EC0((uint64_t)v776);
                                            }
                                            *(_OWORD *)v776 = *(_OWORD *)v777;
                                            goto LABEL_508;
                                          }
                                          sub_1AD007EC0((uint64_t)v770);
                                        }
                                        *(_OWORD *)v770 = *(_OWORD *)v771;
                                        goto LABEL_503;
                                      }
                                      sub_1AD007EC0((uint64_t)v764);
                                    }
                                    *(_OWORD *)v764 = *(_OWORD *)v765;
                                    goto LABEL_498;
                                  }
                                  sub_1AD007EC0(v734 + 208);
                                }
                                *(_OWORD *)(v734 + 208) = *(_OWORD *)v759;
                                goto LABEL_493;
                              }
                              sub_1AD311474(v734 + 64);
                            }
                            v755 = *((_OWORD *)v735 + 11);
                            *(_OWORD *)(v734 + 160) = *((_OWORD *)v735 + 10);
                            *(_OWORD *)(v734 + 176) = v755;
                            *(_QWORD *)(v734 + 192) = *((_QWORD *)v735 + 24);
                            v756 = *((_OWORD *)v735 + 7);
                            *(_OWORD *)(v734 + 96) = *((_OWORD *)v735 + 6);
                            *(_OWORD *)(v734 + 112) = v756;
                            v757 = *((_OWORD *)v735 + 9);
                            *(_OWORD *)(v734 + 128) = *((_OWORD *)v735 + 8);
                            *(_OWORD *)(v734 + 144) = v757;
                            v758 = *((_OWORD *)v735 + 5);
                            *(_OWORD *)(v734 + 64) = *((_OWORD *)v735 + 4);
                            *(_OWORD *)(v734 + 80) = v758;
                            goto LABEL_488;
                          }
                          sub_1AD009758(v734 + 48, &qword_1ED2E3198);
                        }
                        *(_OWORD *)(v734 + 48) = *(_OWORD *)v746;
                        goto LABEL_478;
                      }
                      sub_1AD009758(v734 + 16, &qword_1ED2E3198);
                    }
                    *(_OWORD *)(v734 + 16) = *(_OWORD *)v737;
                    goto LABEL_473;
                  }
                  sub_1AD3114A8((_QWORD *)v734);
                }
                v739 = *((_OWORD *)v735 + 11);
                *(_OWORD *)(v734 + 160) = *((_OWORD *)v735 + 10);
                *(_OWORD *)(v734 + 176) = v739;
                v740 = *((_OWORD *)v735 + 13);
                *(_OWORD *)(v734 + 192) = *((_OWORD *)v735 + 12);
                *(_OWORD *)(v734 + 208) = v740;
                v741 = *((_OWORD *)v735 + 7);
                *(_OWORD *)(v734 + 96) = *((_OWORD *)v735 + 6);
                *(_OWORD *)(v734 + 112) = v741;
                v742 = *((_OWORD *)v735 + 9);
                *(_OWORD *)(v734 + 128) = *((_OWORD *)v735 + 8);
                *(_OWORD *)(v734 + 144) = v742;
                v743 = *((_OWORD *)v735 + 3);
                *(_OWORD *)(v734 + 32) = *((_OWORD *)v735 + 2);
                *(_OWORD *)(v734 + 48) = v743;
                v744 = *((_OWORD *)v735 + 5);
                *(_OWORD *)(v734 + 64) = *((_OWORD *)v735 + 4);
                *(_OWORD *)(v734 + 80) = v744;
                v745 = *((_OWORD *)v735 + 1);
                *(_OWORD *)v734 = *(_OWORD *)v735;
                *(_OWORD *)(v734 + 16) = v745;
                goto LABEL_493;
              }
              (*(void (**)(void *, uint64_t))(v728 + 8))(v725, v727);
            }
            v732 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
            memcpy(v725, v726, *(_QWORD *)(*(_QWORD *)(v732 - 8) + 64));
            goto LABEL_463;
          }
          sub_1AD311474(v708);
        }
        v720 = *((_OWORD *)v709 + 7);
        *(_OWORD *)(v708 + 96) = *((_OWORD *)v709 + 6);
        *(_OWORD *)(v708 + 112) = v720;
        *(_QWORD *)(v708 + 128) = *((_QWORD *)v709 + 16);
        v721 = *((_OWORD *)v709 + 3);
        *(_OWORD *)(v708 + 32) = *((_OWORD *)v709 + 2);
        *(_OWORD *)(v708 + 48) = v721;
        v722 = *((_OWORD *)v709 + 5);
        *(_OWORD *)(v708 + 64) = *((_OWORD *)v709 + 4);
        *(_OWORD *)(v708 + 80) = v722;
        v723 = *((_OWORD *)v709 + 1);
        *(_OWORD *)v708 = *(_OWORD *)v709;
        *(_OWORD *)(v708 + 16) = v723;
        goto LABEL_457;
      }
      sub_1AD009758((uint64_t)(v648 + 3), &qword_1ED2E3198);
    }
    v648[3] = *(_OWORD *)v673;
    goto LABEL_444;
  }
  if (v654)
  {
LABEL_430:
    v671 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v648, v649, *(_QWORD *)(*(_QWORD *)(v671 - 8) + 64));
    goto LABEL_538;
  }
  v958 = a3;
  v950 = v5;
  v954 = v4;
  v655 = v649[1];
  *v648 = *v649;
  v648[1] = v655;
  v656 = v649[3];
  v648[2] = v649[2];
  v648[3] = v656;
  v657 = v650[6];
  v658 = (char *)v648 + v657;
  v942 = v649;
  v659 = (char *)v649 + v657;
  v660 = *(_OWORD *)((char *)v649 + v657 + 112);
  *((_OWORD *)v658 + 6) = *(_OWORD *)((char *)v649 + v657 + 96);
  *((_OWORD *)v658 + 7) = v660;
  *((_QWORD *)v658 + 16) = *(_QWORD *)((char *)v649 + v657 + 128);
  v661 = *(_OWORD *)((char *)v649 + v657 + 48);
  *((_OWORD *)v658 + 2) = *(_OWORD *)((char *)v649 + v657 + 32);
  *((_OWORD *)v658 + 3) = v661;
  v662 = *(_OWORD *)((char *)v649 + v657 + 80);
  *((_OWORD *)v658 + 4) = *(_OWORD *)((char *)v649 + v657 + 64);
  *((_OWORD *)v658 + 5) = v662;
  v663 = *(_OWORD *)((char *)v649 + v657 + 16);
  *(_OWORD *)v658 = *(_OWORD *)((char *)v649 + v657);
  *((_OWORD *)v658 + 1) = v663;
  v664 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v665 = v664[5];
  v666 = &v658[v665];
  v667 = &v659[v665];
  v668 = sub_1AD63AE2C();
  v669 = *(_QWORD *)(v668 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v669 + 48))(v667, 1, v668))
  {
    v670 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v666, v667, *(_QWORD *)(*(_QWORD *)(v670 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v669 + 32))(v666, v667, v668);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v669 + 56))(v666, 0, 1, v668);
  }
  v675 = v664[6];
  v676 = &v658[v675];
  v677 = &v659[v675];
  v678 = *((_OWORD *)v677 + 5);
  *((_OWORD *)v676 + 4) = *((_OWORD *)v677 + 4);
  *((_OWORD *)v676 + 5) = v678;
  v679 = *((_OWORD *)v677 + 3);
  *((_OWORD *)v676 + 2) = *((_OWORD *)v677 + 2);
  *((_OWORD *)v676 + 3) = v679;
  v680 = *((_OWORD *)v677 + 9);
  *((_OWORD *)v676 + 8) = *((_OWORD *)v677 + 8);
  *((_OWORD *)v676 + 9) = v680;
  v681 = *((_OWORD *)v677 + 7);
  *((_OWORD *)v676 + 6) = *((_OWORD *)v677 + 6);
  *((_OWORD *)v676 + 7) = v681;
  v682 = *((_OWORD *)v677 + 13);
  *((_OWORD *)v676 + 12) = *((_OWORD *)v677 + 12);
  *((_OWORD *)v676 + 13) = v682;
  v683 = *((_OWORD *)v677 + 11);
  *((_OWORD *)v676 + 10) = *((_OWORD *)v677 + 10);
  *((_OWORD *)v676 + 11) = v683;
  v684 = *((_OWORD *)v677 + 1);
  *(_OWORD *)v676 = *(_OWORD *)v677;
  *((_OWORD *)v676 + 1) = v684;
  *(_QWORD *)&v658[v664[7]] = *(_QWORD *)&v659[v664[7]];
  *(_OWORD *)&v658[v664[8]] = *(_OWORD *)&v659[v664[8]];
  *(_OWORD *)&v658[v664[9]] = *(_OWORD *)&v659[v664[9]];
  v658[v664[10]] = v659[v664[10]];
  v658[v664[11]] = v659[v664[11]];
  *(_OWORD *)&v658[v664[12]] = *(_OWORD *)&v659[v664[12]];
  *(_QWORD *)&v658[v664[13]] = *(_QWORD *)&v659[v664[13]];
  v685 = v942;
  *((_BYTE *)v648 + v650[7]) = *((_BYTE *)v942 + v650[7]);
  *((_BYTE *)v648 + v650[8]) = *((_BYTE *)v942 + v650[8]);
  *((_BYTE *)v648 + v650[9]) = *((_BYTE *)v942 + v650[9]);
  *((_BYTE *)v648 + v650[10]) = *((_BYTE *)v942 + v650[10]);
  *((_BYTE *)v648 + v650[11]) = *((_BYTE *)v942 + v650[11]);
  *((_BYTE *)v648 + v650[12]) = *((_BYTE *)v942 + v650[12]);
  *((_BYTE *)v648 + v650[13]) = *((_BYTE *)v942 + v650[13]);
  *((_BYTE *)v648 + v650[14]) = *((_BYTE *)v942 + v650[14]);
  *(_OWORD *)((char *)v648 + v650[15]) = *(_OWORD *)((char *)v942 + v650[15]);
  *(_OWORD *)((char *)v648 + v650[16]) = *(_OWORD *)((char *)v942 + v650[16]);
  *((_BYTE *)v648 + v650[17]) = *((_BYTE *)v942 + v650[17]);
  *((_BYTE *)v648 + v650[18]) = *((_BYTE *)v942 + v650[18]);
  v686 = v650[19];
  v687 = (_OWORD *)((char *)v648 + v686);
  v688 = (_OWORD *)((char *)v942 + v686);
  v689 = type metadata accessor for CloudKitSharingToken();
  v690 = *(_QWORD *)(v689 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v690 + 48))(v688, 1, v689))
  {
    v691 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy(v687, v688, *(_QWORD *)(*(_QWORD *)(v691 - 8) + 64));
    v5 = v950;
  }
  else
  {
    v692 = v688[13];
    v687[12] = v688[12];
    v687[13] = v692;
    v687[14] = v688[14];
    *((_QWORD *)v687 + 30) = *((_QWORD *)v688 + 30);
    v693 = v688[9];
    v687[8] = v688[8];
    v687[9] = v693;
    v694 = v688[11];
    v687[10] = v688[10];
    v687[11] = v694;
    v695 = v688[5];
    v687[4] = v688[4];
    v687[5] = v695;
    v696 = v688[7];
    v687[6] = v688[6];
    v687[7] = v696;
    v697 = v688[1];
    *v687 = *v688;
    v687[1] = v697;
    v698 = v688[3];
    v687[2] = v688[2];
    v687[3] = v698;
    *(_OWORD *)((char *)v687 + 248) = *(_OWORD *)((char *)v688 + 248);
    *(_OWORD *)((char *)v687 + 264) = *(_OWORD *)((char *)v688 + 264);
    v699 = *(int *)(v689 + 24);
    v700 = (char *)v687 + v699;
    v701 = (char *)v688 + v699;
    *(_OWORD *)((char *)v687 + v699) = *(_OWORD *)((char *)v688 + v699);
    v702 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    v934 = &v700[v702];
    v703 = &v701[v702];
    v704 = sub_1AD63AF28();
    v705 = *(_QWORD *)(v704 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v705 + 48))(v703, 1, v704))
    {
      v706 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v934, v703, *(_QWORD *)(*(_QWORD *)(v706 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v705 + 32))(v934, v703, v704);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v705 + 56))(v934, 0, 1, v704);
    }
    v716 = *(int *)(v689 + 28);
    v717 = (_OWORD *)((char *)v687 + v716);
    v718 = (_OWORD *)((char *)v688 + v716);
    v719 = v718[1];
    *v717 = *v718;
    v717[1] = v719;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v690 + 56))(v687, 0, 1, v689);
    v685 = v942;
    v5 = v950;
  }
  *(_OWORD *)((char *)v648 + v650[20]) = *(_OWORD *)((char *)v685 + v650[20]);
  *((_BYTE *)v648 + v650[21]) = *((_BYTE *)v685 + v650[21]);
  *((_BYTE *)v648 + v650[22]) = *((_BYTE *)v685 + v650[22]);
  *((_BYTE *)v648 + v650[23]) = *((_BYTE *)v685 + v650[23]);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v651 + 56))(v648, 0, 1, v650);
  v4 = v954;
  a3 = v958;
LABEL_538:
  v833 = a3[20];
  *((_BYTE *)v5 + a3[19]) = *((_BYTE *)v4 + a3[19]);
  *(_QWORD *)((char *)v5 + v833) = *(_QWORD *)((char *)v4 + v833);
  swift_bridgeObjectRelease();
  v834 = a3[22];
  *((_BYTE *)v5 + a3[21]) = *((_BYTE *)v4 + a3[21]);
  v835 = (char *)v5 + v834;
  v836 = (char *)v4 + v834;
  *(_OWORD *)((char *)v5 + v834) = *(_OWORD *)((char *)v4 + v834);
  swift_release();
  *((_QWORD *)v835 + 2) = *((_QWORD *)v836 + 2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1AD316E5C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD316E68(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2400);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[12];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[13];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[18];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1AD316F38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD316F44(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2400);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[12];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[13];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[18];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1AD317010()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1ACFFECF8(319, &qword_1EECDAA10, (void (*)(uint64_t))type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E5320, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
    {
      sub_1ACFFECF8(319, &qword_1EECDAA18, (void (*)(uint64_t))type metadata accessor for CloudKitShareParticipant);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.InvitationType()
{
  return &type metadata for IDSHealthInvitation.InvitationType;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Direction()
{
  return &type metadata for IDSHealthInvitation.Direction;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Status()
{
  return &type metadata for IDSHealthInvitation.Status;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.NotificationStatus()
{
  return &type metadata for IDSHealthInvitation.NotificationStatus;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.WheelchairUse()
{
  return &type metadata for IDSHealthInvitation.WheelchairUse;
}

uint64_t sub_1AD3171A0(uint64_t a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD *, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  _OWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  unint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _OWORD *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  unint64_t v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  _OWORD *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _OWORD *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _OWORD *v177;
  uint64_t v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  int *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  _OWORD *v195;
  uint64_t v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  uint64_t v204;
  _OWORD *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  uint64_t *v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t *v252;
  unint64_t v253;
  uint64_t v254;
  int v255;
  uint64_t v256;
  uint64_t *v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  __int128 v261;
  uint64_t v262;
  uint64_t *v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  _OWORD *v267;
  unint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t *v272;
  unint64_t v273;
  __int128 v274;
  __int128 v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t *v278;
  unint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t *v282;
  unint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  _OWORD *v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  char *v303;
  unint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  uint64_t v309;
  _OWORD *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  _OWORD *v315;
  uint64_t v316;
  _OWORD *v318;
  _OWORD *v319;
  unsigned int (*v320)(_QWORD *, uint64_t, int *);
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  _QWORD *v325;
  _QWORD *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  int *v331;
  int *v332;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return a1;
  }
  v6 = a3;
  v7 = a2;
  v8 = a2[1];
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v8;
  v9 = a2 + 2;
  v10 = a2[3];
  swift_retain();
  if (v10 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v9;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v9;
    *(_QWORD *)(a1 + 24) = v10;
    swift_bridgeObjectRetain();
  }
  v11 = v6[5];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)((char *)v7 + v11);
  v14 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_92;
  }
  v320 = v16;
  v329 = v15;
  v331 = v6;
  v18 = v13[1];
  *v12 = *v13;
  v12[1] = v18;
  v12[2] = v13[2];
  v19 = v13[5];
  *(_OWORD *)(v12 + 3) = *(_OWORD *)(v13 + 3);
  v12[5] = v19;
  v20 = v13 + 6;
  v21 = v13[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v21 == 1)
  {
    *((_OWORD *)v12 + 3) = *v20;
  }
  else
  {
    v12[6] = *(_QWORD *)v20;
    v12[7] = v21;
    swift_bridgeObjectRetain();
  }
  v22 = v14[6];
  v23 = (char *)v12 + v22;
  v24 = (char *)v13 + v22;
  v25 = *(_QWORD *)((char *)v13 + v22);
  v327 = a1;
  v325 = v7;
  if (v25)
  {
    v26 = *((_QWORD *)v24 + 1);
    v27 = *((_QWORD *)v24 + 2);
    *(_QWORD *)v23 = v25;
    *((_QWORD *)v23 + 1) = v26;
    *((_QWORD *)v23 + 2) = v27;
    *(_OWORD *)(v23 + 24) = *(_OWORD *)(v24 + 24);
    v28 = *((_QWORD *)v24 + 6);
    *((_QWORD *)v23 + 5) = *((_QWORD *)v24 + 5);
    *((_QWORD *)v23 + 6) = v28;
    *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
    v29 = *((_QWORD *)v24 + 10);
    *((_QWORD *)v23 + 9) = *((_QWORD *)v24 + 9);
    *((_QWORD *)v23 + 10) = v29;
    v30 = *((_QWORD *)v24 + 13);
    *(_OWORD *)(v23 + 88) = *(_OWORD *)(v24 + 88);
    *((_QWORD *)v23 + 13) = v30;
    v31 = v24 + 112;
    v32 = *((_QWORD *)v24 + 15);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v32 == 1)
    {
      *((_OWORD *)v23 + 7) = *v31;
    }
    else
    {
      *((_QWORD *)v23 + 14) = *(_QWORD *)v31;
      *((_QWORD *)v23 + 15) = v32;
      swift_bridgeObjectRetain();
    }
    *((_QWORD *)v23 + 16) = *((_QWORD *)v24 + 16);
  }
  else
  {
    v33 = *((_OWORD *)v24 + 7);
    *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
    *((_OWORD *)v23 + 7) = v33;
    *((_QWORD *)v23 + 16) = *((_QWORD *)v24 + 16);
    v34 = *((_OWORD *)v24 + 3);
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    *((_OWORD *)v23 + 3) = v34;
    v35 = *((_OWORD *)v24 + 5);
    *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
    *((_OWORD *)v23 + 5) = v35;
    v36 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v36;
  }
  v37 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v38 = v37[5];
  v39 = &v23[v38];
  v40 = &v24[v38];
  v41 = sub_1AD63AE2C();
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v44 = v37[6];
  v45 = &v23[v44];
  v46 = &v24[v44];
  v47 = *(_QWORD *)&v24[v44];
  if (v47)
  {
    v48 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = v47;
    *((_QWORD *)v45 + 1) = v48;
    v49 = v46 + 16;
    v50 = *((_QWORD *)v46 + 3);
    swift_retain();
    if (v50 == 1)
    {
      *((_OWORD *)v45 + 1) = *v49;
    }
    else
    {
      *((_QWORD *)v45 + 2) = *(_QWORD *)v49;
      *((_QWORD *)v45 + 3) = v50;
      swift_bridgeObjectRetain();
    }
    v58 = *((_QWORD *)v46 + 5);
    *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
    *((_QWORD *)v45 + 5) = v58;
    v59 = v46 + 48;
    v60 = *((_QWORD *)v46 + 7);
    swift_retain();
    if (v60 == 1)
    {
      *((_OWORD *)v45 + 3) = *v59;
    }
    else
    {
      *((_QWORD *)v45 + 6) = *(_QWORD *)v59;
      *((_QWORD *)v45 + 7) = v60;
      swift_bridgeObjectRetain();
    }
    v61 = *((_QWORD *)v46 + 8);
    if (v61)
    {
      v62 = *((_QWORD *)v46 + 9);
      v63 = *((_QWORD *)v46 + 10);
      *((_QWORD *)v45 + 8) = v61;
      *((_QWORD *)v45 + 9) = v62;
      *((_QWORD *)v45 + 10) = v63;
      *(_OWORD *)(v45 + 88) = *(_OWORD *)(v46 + 88);
      v64 = *((_QWORD *)v46 + 14);
      *((_QWORD *)v45 + 13) = *((_QWORD *)v46 + 13);
      *((_QWORD *)v45 + 14) = v64;
      *(_OWORD *)(v45 + 120) = *(_OWORD *)(v46 + 120);
      v65 = *((_QWORD *)v46 + 18);
      *((_QWORD *)v45 + 17) = *((_QWORD *)v46 + 17);
      *((_QWORD *)v45 + 18) = v65;
      v66 = *((_QWORD *)v46 + 21);
      *(_OWORD *)(v45 + 152) = *(_OWORD *)(v46 + 152);
      *((_QWORD *)v45 + 21) = v66;
      v318 = v46 + 176;
      v321 = *((_QWORD *)v46 + 23);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v321 == 1)
      {
        *((_OWORD *)v45 + 11) = *v318;
      }
      else
      {
        *((_QWORD *)v45 + 22) = *(_QWORD *)v318;
        *((_QWORD *)v45 + 23) = v321;
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v45 + 24) = *((_QWORD *)v46 + 24);
    }
    else
    {
      v67 = *((_OWORD *)v46 + 11);
      *((_OWORD *)v45 + 10) = *((_OWORD *)v46 + 10);
      *((_OWORD *)v45 + 11) = v67;
      *((_QWORD *)v45 + 24) = *((_QWORD *)v46 + 24);
      v68 = *((_OWORD *)v46 + 7);
      *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
      *((_OWORD *)v45 + 7) = v68;
      v69 = *((_OWORD *)v46 + 9);
      *((_OWORD *)v45 + 8) = *((_OWORD *)v46 + 8);
      *((_OWORD *)v45 + 9) = v69;
      v70 = *((_OWORD *)v46 + 5);
      *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
      *((_OWORD *)v45 + 5) = v70;
    }
    v45[200] = v46[200];
    v71 = (uint64_t *)(v46 + 208);
    v72 = *((_QWORD *)v46 + 27);
    if (v72 >> 60 == 15)
    {
      *((_OWORD *)v45 + 13) = *(_OWORD *)v71;
    }
    else
    {
      v73 = *v71;
      sub_1AD0040A0(*v71, v72);
      *((_QWORD *)v45 + 26) = v73;
      *((_QWORD *)v45 + 27) = v72;
    }
  }
  else
  {
    v51 = *((_OWORD *)v46 + 11);
    *((_OWORD *)v45 + 10) = *((_OWORD *)v46 + 10);
    *((_OWORD *)v45 + 11) = v51;
    v52 = *((_OWORD *)v46 + 13);
    *((_OWORD *)v45 + 12) = *((_OWORD *)v46 + 12);
    *((_OWORD *)v45 + 13) = v52;
    v53 = *((_OWORD *)v46 + 7);
    *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
    *((_OWORD *)v45 + 7) = v53;
    v54 = *((_OWORD *)v46 + 9);
    *((_OWORD *)v45 + 8) = *((_OWORD *)v46 + 8);
    *((_OWORD *)v45 + 9) = v54;
    v55 = *((_OWORD *)v46 + 3);
    *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
    *((_OWORD *)v45 + 3) = v55;
    v56 = *((_OWORD *)v46 + 5);
    *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
    *((_OWORD *)v45 + 5) = v56;
    v57 = *((_OWORD *)v46 + 1);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *((_OWORD *)v45 + 1) = v57;
  }
  *(_QWORD *)&v23[v37[7]] = *(_QWORD *)&v24[v37[7]];
  v74 = v37[8];
  v75 = &v23[v74];
  v76 = &v24[v74];
  v77 = *(_QWORD *)&v24[v74 + 8];
  swift_bridgeObjectRetain();
  if (v77 >> 60 == 15)
  {
    *(_OWORD *)v75 = *(_OWORD *)v76;
  }
  else
  {
    v78 = *(_QWORD *)v76;
    sub_1AD0040A0(v78, v77);
    *(_QWORD *)v75 = v78;
    *((_QWORD *)v75 + 1) = v77;
  }
  v79 = v37[9];
  v80 = &v23[v79];
  v81 = &v24[v79];
  v82 = *((_QWORD *)v81 + 1);
  if (v82 >> 60 == 15)
  {
    *(_OWORD *)v80 = *(_OWORD *)v81;
  }
  else
  {
    v83 = *(_QWORD *)v81;
    sub_1AD0040A0(*(_QWORD *)v81, *((_QWORD *)v81 + 1));
    *(_QWORD *)v80 = v83;
    *((_QWORD *)v80 + 1) = v82;
  }
  v23[v37[10]] = v24[v37[10]];
  v23[v37[11]] = v24[v37[11]];
  v84 = v37[12];
  v85 = &v23[v84];
  v86 = &v24[v84];
  v87 = *((_QWORD *)v86 + 1);
  if (v87 >> 60 == 15)
  {
    *(_OWORD *)v85 = *(_OWORD *)v86;
  }
  else
  {
    v88 = *(_QWORD *)v86;
    sub_1AD0040A0(*(_QWORD *)v86, *((_QWORD *)v86 + 1));
    *(_QWORD *)v85 = v88;
    *((_QWORD *)v85 + 1) = v87;
  }
  *(_QWORD *)&v23[v37[13]] = *(_QWORD *)&v24[v37[13]];
  *((_BYTE *)v12 + v14[7]) = *((_BYTE *)v13 + v14[7]);
  *((_BYTE *)v12 + v14[8]) = *((_BYTE *)v13 + v14[8]);
  *((_BYTE *)v12 + v14[9]) = *((_BYTE *)v13 + v14[9]);
  *((_BYTE *)v12 + v14[10]) = *((_BYTE *)v13 + v14[10]);
  *((_BYTE *)v12 + v14[11]) = *((_BYTE *)v13 + v14[11]);
  *((_BYTE *)v12 + v14[12]) = *((_BYTE *)v13 + v14[12]);
  *((_BYTE *)v12 + v14[13]) = *((_BYTE *)v13 + v14[13]);
  *((_BYTE *)v12 + v14[14]) = *((_BYTE *)v13 + v14[14]);
  v89 = v14[15];
  v90 = (char *)v12 + v89;
  v91 = (char *)v13 + v89;
  v92 = *((_QWORD *)v91 + 1);
  if (v92 >> 60 == 15)
  {
    *(_OWORD *)v90 = *(_OWORD *)v91;
  }
  else
  {
    v93 = *(_QWORD *)v91;
    sub_1AD0040A0(*(_QWORD *)v91, *((_QWORD *)v91 + 1));
    *(_QWORD *)v90 = v93;
    *((_QWORD *)v90 + 1) = v92;
  }
  v94 = v14[16];
  v95 = (char *)v12 + v94;
  v96 = (char *)v13 + v94;
  v97 = *((_QWORD *)v96 + 1);
  if (v97 >> 60 == 15)
  {
    *(_OWORD *)v95 = *(_OWORD *)v96;
  }
  else
  {
    v98 = *(_QWORD *)v96;
    sub_1AD0040A0(*(_QWORD *)v96, *((_QWORD *)v96 + 1));
    *(_QWORD *)v95 = v98;
    *((_QWORD *)v95 + 1) = v97;
  }
  *((_BYTE *)v12 + v14[17]) = *((_BYTE *)v13 + v14[17]);
  *((_BYTE *)v12 + v14[18]) = *((_BYTE *)v13 + v14[18]);
  v99 = v14[19];
  v100 = (char *)v12 + v99;
  v101 = (char *)v13 + v99;
  v102 = type metadata accessor for CloudKitSharingToken();
  v103 = *(_QWORD *)(v102 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
  {
    v322 = v102;
    *(_DWORD *)v100 = *(_DWORD *)v101;
    *((_QWORD *)v100 + 1) = *((_QWORD *)v101 + 1);
    v105 = *((_QWORD *)v101 + 4);
    *((_OWORD *)v100 + 1) = *((_OWORD *)v101 + 1);
    *((_QWORD *)v100 + 4) = v105;
    v106 = (uint64_t *)(v101 + 40);
    v107 = *((_QWORD *)v101 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v107 >> 60 == 11 || v107 >> 60 == 15)
    {
      *(_OWORD *)(v100 + 40) = *(_OWORD *)v106;
      v108 = *((_QWORD *)v101 + 9);
      if (v108)
        goto LABEL_57;
    }
    else
    {
      v114 = *v106;
      sub_1AD0040A0(*v106, v107);
      *((_QWORD *)v100 + 5) = v114;
      *((_QWORD *)v100 + 6) = v107;
      v108 = *((_QWORD *)v101 + 9);
      if (v108)
      {
LABEL_57:
        v109 = *((_DWORD *)v101 + 15);
        *((_DWORD *)v100 + 14) = *((_DWORD *)v101 + 14);
        *((_DWORD *)v100 + 15) = v109;
        v100[64] = v101[64];
        v110 = *((_QWORD *)v101 + 10);
        *((_QWORD *)v100 + 9) = v108;
        *((_QWORD *)v100 + 10) = v110;
        v111 = (uint64_t *)(v101 + 88);
        v112 = *((_QWORD *)v101 + 12);
        swift_retain();
        if (v112 >> 60 == 15)
        {
          *(_OWORD *)(v100 + 88) = *(_OWORD *)v111;
        }
        else
        {
          v113 = *v111;
          sub_1AD0040A0(*v111, v112);
          *((_QWORD *)v100 + 11) = v113;
          *((_QWORD *)v100 + 12) = v112;
        }
LABEL_62:
        v116 = *((_QWORD *)v101 + 14);
        *((_QWORD *)v100 + 13) = *((_QWORD *)v101 + 13);
        *((_QWORD *)v100 + 14) = v116;
        v117 = (uint64_t *)(v101 + 120);
        v118 = *((_QWORD *)v101 + 16);
        swift_retain();
        if (v118 >> 60 == 15)
        {
          *(_OWORD *)(v100 + 120) = *(_OWORD *)v117;
        }
        else
        {
          v119 = *v117;
          sub_1AD0040A0(*v117, v118);
          *((_QWORD *)v100 + 15) = v119;
          *((_QWORD *)v100 + 16) = v118;
        }
        v120 = *((_QWORD *)v101 + 18);
        *((_QWORD *)v100 + 17) = *((_QWORD *)v101 + 17);
        *((_QWORD *)v100 + 18) = v120;
        v121 = v101 + 152;
        v122 = *((_QWORD *)v101 + 20);
        swift_retain();
        if (v122 >> 60 == 11 || v122 >> 60 == 15)
        {
          *(_OWORD *)(v100 + 152) = *v121;
        }
        else
        {
          v123 = *(_QWORD *)v121;
          sub_1AD0040A0(v123, v122);
          *((_QWORD *)v100 + 19) = v123;
          *((_QWORD *)v100 + 20) = v122;
        }
        v124 = *((_QWORD *)v101 + 21);
        if (v124)
        {
          v125 = *((_QWORD *)v101 + 22);
          *((_QWORD *)v100 + 21) = v124;
          *((_QWORD *)v100 + 22) = v125;
          v126 = (uint64_t *)(v101 + 184);
          v127 = *((_QWORD *)v101 + 24);
          swift_retain();
          if (v127 >> 60 == 15)
          {
            *(_OWORD *)(v100 + 184) = *(_OWORD *)v126;
          }
          else
          {
            v130 = *v126;
            sub_1AD0040A0(*v126, v127);
            *((_QWORD *)v100 + 23) = v130;
            *((_QWORD *)v100 + 24) = v127;
          }
          *((_DWORD *)v100 + 50) = *((_DWORD *)v101 + 50);
          v131 = *((_QWORD *)v101 + 27);
          *((_QWORD *)v100 + 26) = *((_QWORD *)v101 + 26);
          *((_QWORD *)v100 + 27) = v131;
          v132 = (uint64_t *)(v101 + 224);
          v133 = *((_QWORD *)v101 + 29);
          swift_retain();
          if (v133 >> 60 == 15)
          {
            *((_OWORD *)v100 + 14) = *(_OWORD *)v132;
          }
          else
          {
            v134 = *v132;
            sub_1AD0040A0(*v132, v133);
            *((_QWORD *)v100 + 28) = v134;
            *((_QWORD *)v100 + 29) = v133;
          }
        }
        else
        {
          v128 = *(_OWORD *)(v101 + 216);
          *(_OWORD *)(v100 + 200) = *(_OWORD *)(v101 + 200);
          *(_OWORD *)(v100 + 216) = v128;
          *((_QWORD *)v100 + 29) = *((_QWORD *)v101 + 29);
          v129 = *(_OWORD *)(v101 + 184);
          *(_OWORD *)(v100 + 168) = *(_OWORD *)(v101 + 168);
          *(_OWORD *)(v100 + 184) = v129;
        }
        v135 = *((_QWORD *)v101 + 32);
        *((_OWORD *)v100 + 15) = *((_OWORD *)v101 + 15);
        *((_QWORD *)v100 + 32) = v135;
        v136 = (uint64_t *)(v101 + 264);
        v137 = *((_QWORD *)v101 + 34);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v137 >> 60 == 11 || v137 >> 60 == 15)
        {
          *(_OWORD *)(v100 + 264) = *(_OWORD *)v136;
        }
        else
        {
          v138 = *v136;
          sub_1AD0040A0(*v136, v137);
          *((_QWORD *)v100 + 33) = v138;
          *((_QWORD *)v100 + 34) = v137;
        }
        v139 = *(int *)(v322 + 24);
        v140 = &v100[v139];
        v141 = &v101[v139];
        v142 = *(_QWORD *)&v101[v139 + 8];
        *(_QWORD *)v140 = *(_QWORD *)&v101[v139];
        *((_QWORD *)v140 + 1) = v142;
        swift_retain();
        v143 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v144 = &v140[v143];
        v145 = &v141[v143];
        v146 = sub_1AD63AF28();
        v147 = *(_QWORD *)(v146 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48))(v145, 1, v146))
        {
          v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v144, v145, v146);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v144, 0, 1, v146);
        }
        v149 = *(int *)(v322 + 28);
        v150 = &v100[v149];
        v151 = &v101[v149];
        v152 = *((_QWORD *)v151 + 1);
        *(_QWORD *)v150 = *(_QWORD *)v151;
        *((_QWORD *)v150 + 1) = v152;
        v153 = v151 + 16;
        v154 = *((_QWORD *)v151 + 3);
        swift_retain();
        if (v154 == 1)
        {
          *((_OWORD *)v150 + 1) = *v153;
        }
        else
        {
          *((_QWORD *)v150 + 2) = *(_QWORD *)v153;
          *((_QWORD *)v150 + 3) = v154;
          swift_bridgeObjectRetain();
        }
        a1 = v327;
        v7 = v325;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v322);
        goto LABEL_88;
      }
    }
    v115 = *(_OWORD *)(v101 + 72);
    *(_OWORD *)(v100 + 56) = *(_OWORD *)(v101 + 56);
    *(_OWORD *)(v100 + 72) = v115;
    *(_OWORD *)(v100 + 88) = *(_OWORD *)(v101 + 88);
    goto LABEL_62;
  }
  v104 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
  a1 = v327;
  v7 = v325;
LABEL_88:
  v155 = v14[20];
  v156 = (char *)v12 + v155;
  v157 = (char *)v13 + v155;
  v158 = *((_QWORD *)v157 + 1);
  if (v158 >> 60 == 15)
  {
    *(_OWORD *)v156 = *(_OWORD *)v157;
  }
  else
  {
    v159 = *(_QWORD *)v157;
    sub_1AD0040A0(*(_QWORD *)v157, *((_QWORD *)v157 + 1));
    *(_QWORD *)v156 = v159;
    *((_QWORD *)v156 + 1) = v158;
  }
  v15 = v329;
  v6 = v331;
  v16 = v320;
  *((_BYTE *)v12 + v14[21]) = *((_BYTE *)v13 + v14[21]);
  *((_BYTE *)v12 + v14[22]) = *((_BYTE *)v13 + v14[22]);
  *((_BYTE *)v12 + v14[23]) = *((_BYTE *)v13 + v14[23]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v329 + 56))(v12, 0, 1, v14);
LABEL_92:
  v160 = v6[6];
  v161 = (char *)(a1 + v160);
  v162 = (char *)v7 + v160;
  if (!v16((_QWORD *)((char *)v7 + v160), 1, v14))
  {
    v330 = v15;
    v332 = v6;
    v164 = *((_QWORD *)v162 + 1);
    *(_QWORD *)v161 = *(_QWORD *)v162;
    *((_QWORD *)v161 + 1) = v164;
    *((_QWORD *)v161 + 2) = *((_QWORD *)v162 + 2);
    v165 = *((_QWORD *)v162 + 5);
    *(_OWORD *)(v161 + 24) = *(_OWORD *)(v162 + 24);
    *((_QWORD *)v161 + 5) = v165;
    v166 = v162 + 48;
    v167 = *((_QWORD *)v162 + 7);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v167 == 1)
    {
      *((_OWORD *)v161 + 3) = *v166;
    }
    else
    {
      *((_QWORD *)v161 + 6) = *(_QWORD *)v166;
      *((_QWORD *)v161 + 7) = v167;
      swift_bridgeObjectRetain();
    }
    v168 = v14[6];
    v169 = &v161[v168];
    v170 = &v162[v168];
    v171 = *(_QWORD *)&v162[v168];
    v328 = a1;
    v326 = v7;
    if (v171)
    {
      v172 = *((_QWORD *)v170 + 1);
      v173 = *((_QWORD *)v170 + 2);
      *(_QWORD *)v169 = v171;
      *((_QWORD *)v169 + 1) = v172;
      *((_QWORD *)v169 + 2) = v173;
      *(_OWORD *)(v169 + 24) = *(_OWORD *)(v170 + 24);
      v174 = *((_QWORD *)v170 + 6);
      *((_QWORD *)v169 + 5) = *((_QWORD *)v170 + 5);
      *((_QWORD *)v169 + 6) = v174;
      *(_OWORD *)(v169 + 56) = *(_OWORD *)(v170 + 56);
      v175 = *((_QWORD *)v170 + 10);
      *((_QWORD *)v169 + 9) = *((_QWORD *)v170 + 9);
      *((_QWORD *)v169 + 10) = v175;
      v176 = *((_QWORD *)v170 + 13);
      *(_OWORD *)(v169 + 88) = *(_OWORD *)(v170 + 88);
      *((_QWORD *)v169 + 13) = v176;
      v177 = v170 + 112;
      v178 = *((_QWORD *)v170 + 15);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v178 == 1)
      {
        *((_OWORD *)v169 + 7) = *v177;
      }
      else
      {
        *((_QWORD *)v169 + 14) = *(_QWORD *)v177;
        *((_QWORD *)v169 + 15) = v178;
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v169 + 16) = *((_QWORD *)v170 + 16);
    }
    else
    {
      v179 = *((_OWORD *)v170 + 7);
      *((_OWORD *)v169 + 6) = *((_OWORD *)v170 + 6);
      *((_OWORD *)v169 + 7) = v179;
      *((_QWORD *)v169 + 16) = *((_QWORD *)v170 + 16);
      v180 = *((_OWORD *)v170 + 3);
      *((_OWORD *)v169 + 2) = *((_OWORD *)v170 + 2);
      *((_OWORD *)v169 + 3) = v180;
      v181 = *((_OWORD *)v170 + 5);
      *((_OWORD *)v169 + 4) = *((_OWORD *)v170 + 4);
      *((_OWORD *)v169 + 5) = v181;
      v182 = *((_OWORD *)v170 + 1);
      *(_OWORD *)v169 = *(_OWORD *)v170;
      *((_OWORD *)v169 + 1) = v182;
    }
    v183 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v184 = v183[5];
    v185 = &v169[v184];
    v186 = &v170[v184];
    v187 = sub_1AD63AE2C();
    v188 = *(_QWORD *)(v187 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48))(v186, 1, v187))
    {
      v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v185, v186, v187);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
    }
    v190 = v183[6];
    v191 = &v169[v190];
    v192 = &v170[v190];
    v193 = *(_QWORD *)&v170[v190];
    if (v193)
    {
      v194 = *((_QWORD *)v192 + 1);
      *(_QWORD *)v191 = v193;
      *((_QWORD *)v191 + 1) = v194;
      v195 = v192 + 16;
      v196 = *((_QWORD *)v192 + 3);
      swift_retain();
      if (v196 == 1)
      {
        *((_OWORD *)v191 + 1) = *v195;
      }
      else
      {
        *((_QWORD *)v191 + 2) = *(_QWORD *)v195;
        *((_QWORD *)v191 + 3) = v196;
        swift_bridgeObjectRetain();
      }
      v204 = *((_QWORD *)v192 + 5);
      *((_QWORD *)v191 + 4) = *((_QWORD *)v192 + 4);
      *((_QWORD *)v191 + 5) = v204;
      v205 = v192 + 48;
      v206 = *((_QWORD *)v192 + 7);
      swift_retain();
      if (v206 == 1)
      {
        *((_OWORD *)v191 + 3) = *v205;
      }
      else
      {
        *((_QWORD *)v191 + 6) = *(_QWORD *)v205;
        *((_QWORD *)v191 + 7) = v206;
        swift_bridgeObjectRetain();
      }
      v207 = *((_QWORD *)v192 + 8);
      if (v207)
      {
        v208 = *((_QWORD *)v192 + 9);
        v209 = *((_QWORD *)v192 + 10);
        *((_QWORD *)v191 + 8) = v207;
        *((_QWORD *)v191 + 9) = v208;
        *((_QWORD *)v191 + 10) = v209;
        *(_OWORD *)(v191 + 88) = *(_OWORD *)(v192 + 88);
        v210 = *((_QWORD *)v192 + 14);
        *((_QWORD *)v191 + 13) = *((_QWORD *)v192 + 13);
        *((_QWORD *)v191 + 14) = v210;
        *(_OWORD *)(v191 + 120) = *(_OWORD *)(v192 + 120);
        v211 = *((_QWORD *)v192 + 18);
        *((_QWORD *)v191 + 17) = *((_QWORD *)v192 + 17);
        *((_QWORD *)v191 + 18) = v211;
        v212 = *((_QWORD *)v192 + 21);
        *(_OWORD *)(v191 + 152) = *(_OWORD *)(v192 + 152);
        *((_QWORD *)v191 + 21) = v212;
        v319 = v192 + 176;
        v323 = *((_QWORD *)v192 + 23);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v323 == 1)
        {
          *((_OWORD *)v191 + 11) = *v319;
        }
        else
        {
          *((_QWORD *)v191 + 22) = *(_QWORD *)v319;
          *((_QWORD *)v191 + 23) = v323;
          swift_bridgeObjectRetain();
        }
        *((_QWORD *)v191 + 24) = *((_QWORD *)v192 + 24);
      }
      else
      {
        v213 = *((_OWORD *)v192 + 11);
        *((_OWORD *)v191 + 10) = *((_OWORD *)v192 + 10);
        *((_OWORD *)v191 + 11) = v213;
        *((_QWORD *)v191 + 24) = *((_QWORD *)v192 + 24);
        v214 = *((_OWORD *)v192 + 7);
        *((_OWORD *)v191 + 6) = *((_OWORD *)v192 + 6);
        *((_OWORD *)v191 + 7) = v214;
        v215 = *((_OWORD *)v192 + 9);
        *((_OWORD *)v191 + 8) = *((_OWORD *)v192 + 8);
        *((_OWORD *)v191 + 9) = v215;
        v216 = *((_OWORD *)v192 + 5);
        *((_OWORD *)v191 + 4) = *((_OWORD *)v192 + 4);
        *((_OWORD *)v191 + 5) = v216;
      }
      v191[200] = v192[200];
      v217 = (uint64_t *)(v192 + 208);
      v218 = *((_QWORD *)v192 + 27);
      if (v218 >> 60 == 15)
      {
        *((_OWORD *)v191 + 13) = *(_OWORD *)v217;
      }
      else
      {
        v219 = *v217;
        sub_1AD0040A0(*v217, v218);
        *((_QWORD *)v191 + 26) = v219;
        *((_QWORD *)v191 + 27) = v218;
      }
    }
    else
    {
      v197 = *((_OWORD *)v192 + 11);
      *((_OWORD *)v191 + 10) = *((_OWORD *)v192 + 10);
      *((_OWORD *)v191 + 11) = v197;
      v198 = *((_OWORD *)v192 + 13);
      *((_OWORD *)v191 + 12) = *((_OWORD *)v192 + 12);
      *((_OWORD *)v191 + 13) = v198;
      v199 = *((_OWORD *)v192 + 7);
      *((_OWORD *)v191 + 6) = *((_OWORD *)v192 + 6);
      *((_OWORD *)v191 + 7) = v199;
      v200 = *((_OWORD *)v192 + 9);
      *((_OWORD *)v191 + 8) = *((_OWORD *)v192 + 8);
      *((_OWORD *)v191 + 9) = v200;
      v201 = *((_OWORD *)v192 + 3);
      *((_OWORD *)v191 + 2) = *((_OWORD *)v192 + 2);
      *((_OWORD *)v191 + 3) = v201;
      v202 = *((_OWORD *)v192 + 5);
      *((_OWORD *)v191 + 4) = *((_OWORD *)v192 + 4);
      *((_OWORD *)v191 + 5) = v202;
      v203 = *((_OWORD *)v192 + 1);
      *(_OWORD *)v191 = *(_OWORD *)v192;
      *((_OWORD *)v191 + 1) = v203;
    }
    *(_QWORD *)&v169[v183[7]] = *(_QWORD *)&v170[v183[7]];
    v220 = v183[8];
    v221 = &v169[v220];
    v222 = &v170[v220];
    v223 = *(_QWORD *)&v170[v220 + 8];
    swift_bridgeObjectRetain();
    if (v223 >> 60 == 15)
    {
      *(_OWORD *)v221 = *(_OWORD *)v222;
    }
    else
    {
      v224 = *(_QWORD *)v222;
      sub_1AD0040A0(v224, v223);
      *(_QWORD *)v221 = v224;
      *((_QWORD *)v221 + 1) = v223;
    }
    v225 = v183[9];
    v226 = &v169[v225];
    v227 = &v170[v225];
    v228 = *((_QWORD *)v227 + 1);
    if (v228 >> 60 == 15)
    {
      *(_OWORD *)v226 = *(_OWORD *)v227;
    }
    else
    {
      v229 = *(_QWORD *)v227;
      sub_1AD0040A0(*(_QWORD *)v227, *((_QWORD *)v227 + 1));
      *(_QWORD *)v226 = v229;
      *((_QWORD *)v226 + 1) = v228;
    }
    v169[v183[10]] = v170[v183[10]];
    v169[v183[11]] = v170[v183[11]];
    v230 = v183[12];
    v231 = &v169[v230];
    v232 = &v170[v230];
    v233 = *((_QWORD *)v232 + 1);
    if (v233 >> 60 == 15)
    {
      *(_OWORD *)v231 = *(_OWORD *)v232;
    }
    else
    {
      v234 = *(_QWORD *)v232;
      sub_1AD0040A0(*(_QWORD *)v232, *((_QWORD *)v232 + 1));
      *(_QWORD *)v231 = v234;
      *((_QWORD *)v231 + 1) = v233;
    }
    *(_QWORD *)&v169[v183[13]] = *(_QWORD *)&v170[v183[13]];
    v161[v14[7]] = v162[v14[7]];
    v161[v14[8]] = v162[v14[8]];
    v161[v14[9]] = v162[v14[9]];
    v161[v14[10]] = v162[v14[10]];
    v161[v14[11]] = v162[v14[11]];
    v161[v14[12]] = v162[v14[12]];
    v161[v14[13]] = v162[v14[13]];
    v161[v14[14]] = v162[v14[14]];
    v235 = v14[15];
    v236 = &v161[v235];
    v237 = &v162[v235];
    v238 = *((_QWORD *)v237 + 1);
    if (v238 >> 60 == 15)
    {
      *(_OWORD *)v236 = *(_OWORD *)v237;
    }
    else
    {
      v239 = *(_QWORD *)v237;
      sub_1AD0040A0(*(_QWORD *)v237, *((_QWORD *)v237 + 1));
      *(_QWORD *)v236 = v239;
      *((_QWORD *)v236 + 1) = v238;
    }
    v240 = v14[16];
    v241 = &v161[v240];
    v242 = &v162[v240];
    v243 = *((_QWORD *)v242 + 1);
    if (v243 >> 60 == 15)
    {
      *(_OWORD *)v241 = *(_OWORD *)v242;
    }
    else
    {
      v244 = *(_QWORD *)v242;
      sub_1AD0040A0(*(_QWORD *)v242, *((_QWORD *)v242 + 1));
      *(_QWORD *)v241 = v244;
      *((_QWORD *)v241 + 1) = v243;
    }
    v161[v14[17]] = v162[v14[17]];
    v161[v14[18]] = v162[v14[18]];
    v245 = v14[19];
    v246 = &v161[v245];
    v247 = &v162[v245];
    v248 = type metadata accessor for CloudKitSharingToken();
    v249 = *(_QWORD *)(v248 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v249 + 48))(v247, 1, v248))
    {
      v250 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      memcpy(v246, v247, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
      a1 = v328;
      v7 = v326;
LABEL_174:
      v301 = v14[20];
      v302 = &v161[v301];
      v303 = &v162[v301];
      v304 = *((_QWORD *)v303 + 1);
      if (v304 >> 60 == 15)
      {
        *(_OWORD *)v302 = *(_OWORD *)v303;
      }
      else
      {
        v305 = *(_QWORD *)v303;
        sub_1AD0040A0(*(_QWORD *)v303, *((_QWORD *)v303 + 1));
        *(_QWORD *)v302 = v305;
        *((_QWORD *)v302 + 1) = v304;
      }
      v6 = v332;
      v161[v14[21]] = v162[v14[21]];
      v161[v14[22]] = v162[v14[22]];
      v161[v14[23]] = v162[v14[23]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v330 + 56))(v161, 0, 1, v14);
      goto LABEL_178;
    }
    v324 = v248;
    *(_DWORD *)v246 = *(_DWORD *)v247;
    *((_QWORD *)v246 + 1) = *((_QWORD *)v247 + 1);
    v251 = *((_QWORD *)v247 + 4);
    *((_OWORD *)v246 + 1) = *((_OWORD *)v247 + 1);
    *((_QWORD *)v246 + 4) = v251;
    v252 = (uint64_t *)(v247 + 40);
    v253 = *((_QWORD *)v247 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v253 >> 60 == 11 || v253 >> 60 == 15)
    {
      *(_OWORD *)(v246 + 40) = *(_OWORD *)v252;
      v254 = *((_QWORD *)v247 + 9);
      if (v254)
        goto LABEL_143;
    }
    else
    {
      v260 = *v252;
      sub_1AD0040A0(*v252, v253);
      *((_QWORD *)v246 + 5) = v260;
      *((_QWORD *)v246 + 6) = v253;
      v254 = *((_QWORD *)v247 + 9);
      if (v254)
      {
LABEL_143:
        v255 = *((_DWORD *)v247 + 15);
        *((_DWORD *)v246 + 14) = *((_DWORD *)v247 + 14);
        *((_DWORD *)v246 + 15) = v255;
        v246[64] = v247[64];
        v256 = *((_QWORD *)v247 + 10);
        *((_QWORD *)v246 + 9) = v254;
        *((_QWORD *)v246 + 10) = v256;
        v257 = (uint64_t *)(v247 + 88);
        v258 = *((_QWORD *)v247 + 12);
        swift_retain();
        if (v258 >> 60 == 15)
        {
          *(_OWORD *)(v246 + 88) = *(_OWORD *)v257;
        }
        else
        {
          v259 = *v257;
          sub_1AD0040A0(*v257, v258);
          *((_QWORD *)v246 + 11) = v259;
          *((_QWORD *)v246 + 12) = v258;
        }
LABEL_148:
        v262 = *((_QWORD *)v247 + 14);
        *((_QWORD *)v246 + 13) = *((_QWORD *)v247 + 13);
        *((_QWORD *)v246 + 14) = v262;
        v263 = (uint64_t *)(v247 + 120);
        v264 = *((_QWORD *)v247 + 16);
        swift_retain();
        if (v264 >> 60 == 15)
        {
          *(_OWORD *)(v246 + 120) = *(_OWORD *)v263;
        }
        else
        {
          v265 = *v263;
          sub_1AD0040A0(*v263, v264);
          *((_QWORD *)v246 + 15) = v265;
          *((_QWORD *)v246 + 16) = v264;
        }
        v266 = *((_QWORD *)v247 + 18);
        *((_QWORD *)v246 + 17) = *((_QWORD *)v247 + 17);
        *((_QWORD *)v246 + 18) = v266;
        v267 = v247 + 152;
        v268 = *((_QWORD *)v247 + 20);
        swift_retain();
        if (v268 >> 60 == 11 || v268 >> 60 == 15)
        {
          *(_OWORD *)(v246 + 152) = *v267;
        }
        else
        {
          v269 = *(_QWORD *)v267;
          sub_1AD0040A0(v269, v268);
          *((_QWORD *)v246 + 19) = v269;
          *((_QWORD *)v246 + 20) = v268;
        }
        v270 = *((_QWORD *)v247 + 21);
        if (v270)
        {
          v271 = *((_QWORD *)v247 + 22);
          *((_QWORD *)v246 + 21) = v270;
          *((_QWORD *)v246 + 22) = v271;
          v272 = (uint64_t *)(v247 + 184);
          v273 = *((_QWORD *)v247 + 24);
          swift_retain();
          if (v273 >> 60 == 15)
          {
            *(_OWORD *)(v246 + 184) = *(_OWORD *)v272;
          }
          else
          {
            v276 = *v272;
            sub_1AD0040A0(*v272, v273);
            *((_QWORD *)v246 + 23) = v276;
            *((_QWORD *)v246 + 24) = v273;
          }
          *((_DWORD *)v246 + 50) = *((_DWORD *)v247 + 50);
          v277 = *((_QWORD *)v247 + 27);
          *((_QWORD *)v246 + 26) = *((_QWORD *)v247 + 26);
          *((_QWORD *)v246 + 27) = v277;
          v278 = (uint64_t *)(v247 + 224);
          v279 = *((_QWORD *)v247 + 29);
          swift_retain();
          if (v279 >> 60 == 15)
          {
            *((_OWORD *)v246 + 14) = *(_OWORD *)v278;
          }
          else
          {
            v280 = *v278;
            sub_1AD0040A0(*v278, v279);
            *((_QWORD *)v246 + 28) = v280;
            *((_QWORD *)v246 + 29) = v279;
          }
        }
        else
        {
          v274 = *(_OWORD *)(v247 + 216);
          *(_OWORD *)(v246 + 200) = *(_OWORD *)(v247 + 200);
          *(_OWORD *)(v246 + 216) = v274;
          *((_QWORD *)v246 + 29) = *((_QWORD *)v247 + 29);
          v275 = *(_OWORD *)(v247 + 184);
          *(_OWORD *)(v246 + 168) = *(_OWORD *)(v247 + 168);
          *(_OWORD *)(v246 + 184) = v275;
        }
        v281 = *((_QWORD *)v247 + 32);
        *((_OWORD *)v246 + 15) = *((_OWORD *)v247 + 15);
        *((_QWORD *)v246 + 32) = v281;
        v282 = (uint64_t *)(v247 + 264);
        v283 = *((_QWORD *)v247 + 34);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v283 >> 60 == 11 || v283 >> 60 == 15)
        {
          *(_OWORD *)(v246 + 264) = *(_OWORD *)v282;
        }
        else
        {
          v284 = *v282;
          sub_1AD0040A0(*v282, v283);
          *((_QWORD *)v246 + 33) = v284;
          *((_QWORD *)v246 + 34) = v283;
        }
        v285 = *(int *)(v324 + 24);
        v286 = &v246[v285];
        v287 = &v247[v285];
        v288 = *(_QWORD *)&v247[v285 + 8];
        *(_QWORD *)v286 = *(_QWORD *)&v247[v285];
        *((_QWORD *)v286 + 1) = v288;
        swift_retain();
        v289 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v290 = &v286[v289];
        v291 = &v287[v289];
        v292 = sub_1AD63AF28();
        v293 = *(_QWORD *)(v292 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v293 + 48))(v291, 1, v292))
        {
          v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v290, v291, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v293 + 16))(v290, v291, v292);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v293 + 56))(v290, 0, 1, v292);
        }
        v295 = *(int *)(v324 + 28);
        v296 = &v246[v295];
        v297 = &v247[v295];
        v298 = *((_QWORD *)v297 + 1);
        *(_QWORD *)v296 = *(_QWORD *)v297;
        *((_QWORD *)v296 + 1) = v298;
        v299 = v297 + 16;
        v300 = *((_QWORD *)v297 + 3);
        swift_retain();
        if (v300 == 1)
        {
          *((_OWORD *)v296 + 1) = *v299;
        }
        else
        {
          *((_QWORD *)v296 + 2) = *(_QWORD *)v299;
          *((_QWORD *)v296 + 3) = v300;
          swift_bridgeObjectRetain();
        }
        a1 = v328;
        v7 = v326;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v249 + 56))(v246, 0, 1, v324);
        goto LABEL_174;
      }
    }
    v261 = *(_OWORD *)(v247 + 72);
    *(_OWORD *)(v246 + 56) = *(_OWORD *)(v247 + 56);
    *(_OWORD *)(v246 + 72) = v261;
    *(_OWORD *)(v246 + 88) = *(_OWORD *)(v247 + 88);
    goto LABEL_148;
  }
  v163 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
  memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
LABEL_178:
  v306 = v6[7];
  v307 = a1 + v306;
  v308 = (_QWORD *)((char *)v7 + v306);
  v309 = v308[1];
  *(_QWORD *)v307 = *v308;
  *(_QWORD *)(v307 + 8) = v309;
  v310 = v308 + 2;
  v311 = v308[3];
  swift_retain();
  if (v311 == 1)
  {
    *(_OWORD *)(v307 + 16) = *v310;
  }
  else
  {
    *(_QWORD *)(v307 + 16) = *(_QWORD *)v310;
    *(_QWORD *)(v307 + 24) = v311;
    swift_bridgeObjectRetain();
  }
  v312 = v6[9];
  *(_BYTE *)(a1 + v6[8]) = *((_BYTE *)v7 + v6[8]);
  v313 = a1 + v312;
  v314 = *(_QWORD *)((char *)v7 + v312 + 8);
  *(_QWORD *)v313 = *(_QWORD *)((char *)v7 + v312);
  *(_QWORD *)(v313 + 8) = v314;
  v315 = (_OWORD *)((char *)v7 + v312 + 16);
  v316 = *(_QWORD *)((char *)v7 + v312 + 24);
  swift_retain();
  if (v316 == 1)
  {
    *(_OWORD *)(v313 + 16) = *v315;
  }
  else
  {
    *(_QWORD *)(v313 + 16) = *(_QWORD *)v315;
    *(_QWORD *)(v313 + 24) = v316;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)((char *)v7 + v6[10]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD3188D0(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  unsigned int (*v6)(uint64_t, uint64_t, int *);
  _QWORD *v7;
  int *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  int *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;

  swift_release();
  if (*(_QWORD *)(a1 + 24) != 1)
    swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(v4 + 56) != 1)
      swift_bridgeObjectRelease();
    v7 = (_QWORD *)(v4 + v5[6]);
    if (*v7)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if (v7[15] != 1)
        swift_bridgeObjectRelease();
    }
    v8 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v9 = (char *)v7 + v8[5];
    v10 = sub_1AD63AE2C();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    v12 = (_QWORD *)((char *)v7 + v8[6]);
    if (*v12)
    {
      swift_release();
      if (v12[3] != 1)
        swift_bridgeObjectRelease();
      swift_release();
      if (v12[7] != 1)
        swift_bridgeObjectRelease();
      if (v12[8])
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        if (v12[23] != 1)
          swift_bridgeObjectRelease();
      }
      v13 = v12[27];
      if (v13 >> 60 != 15)
        sub_1AD00412C(v12[26], v13);
    }
    swift_bridgeObjectRelease();
    v14 = (_QWORD *)((char *)v7 + v8[8]);
    v15 = v14[1];
    if (v15 >> 60 != 15)
      sub_1AD00412C(*v14, v15);
    v16 = (_QWORD *)((char *)v7 + v8[9]);
    v17 = v16[1];
    if (v17 >> 60 != 15)
      sub_1AD00412C(*v16, v17);
    v18 = (_QWORD *)((char *)v7 + v8[12]);
    v19 = v18[1];
    if (v19 >> 60 != 15)
      sub_1AD00412C(*v18, v19);
    v20 = (uint64_t *)(v4 + v5[15]);
    v21 = v20[1];
    if (v21 >> 60 != 15)
      sub_1AD00412C(*v20, v21);
    v22 = (uint64_t *)(v4 + v5[16]);
    v23 = v22[1];
    if (v23 >> 60 != 15)
      sub_1AD00412C(*v22, v23);
    v24 = (uint64_t *)(v4 + v5[19]);
    v25 = type metadata accessor for CloudKitSharingToken();
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v26 = v24[6];
      if (v26 >> 60 != 15 && (v26 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(v24[5], v26);
      if (v24[9])
      {
        swift_release();
        v27 = v24[12];
        if (v27 >> 60 != 15)
          sub_1AD00412C(v24[11], v27);
      }
      swift_release();
      v28 = v24[16];
      if (v28 >> 60 != 15)
        sub_1AD00412C(v24[15], v28);
      swift_release();
      v29 = v24[20];
      if (v29 >> 60 != 15 && (v29 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(v24[19], v29);
      if (v24[21])
      {
        swift_release();
        v30 = v24[24];
        if (v30 >> 60 != 15)
          sub_1AD00412C(v24[23], v30);
        swift_release();
        v31 = v24[29];
        if (v31 >> 60 != 15)
          sub_1AD00412C(v24[28], v31);
      }
      swift_bridgeObjectRelease();
      swift_release();
      v32 = v24[34];
      if (v32 >> 60 != 15 && (v32 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(v24[33], v32);
      v33 = (char *)v24 + *(int *)(v25 + 24);
      swift_release();
      v34 = &v33[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28)];
      v35 = sub_1AD63AF28();
      v36 = *(_QWORD *)(v35 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
      v37 = (char *)v24 + *(int *)(v25 + 28);
      swift_release();
      if (*((_QWORD *)v37 + 3) != 1)
        swift_bridgeObjectRelease();
    }
    v38 = (uint64_t *)(v4 + v5[20]);
    v39 = v38[1];
    if (v39 >> 60 != 15)
      sub_1AD00412C(*v38, v39);
  }
  v40 = a1 + a2[6];
  if (!v6(v40, 1, v5))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(v40 + 56) != 1)
      swift_bridgeObjectRelease();
    v41 = (_QWORD *)(v40 + v5[6]);
    if (*v41)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if (v41[15] != 1)
        swift_bridgeObjectRelease();
    }
    v42 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v43 = (char *)v41 + v42[5];
    v44 = sub_1AD63AE2C();
    v45 = *(_QWORD *)(v44 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v44);
    v46 = (_QWORD *)((char *)v41 + v42[6]);
    if (*v46)
    {
      swift_release();
      if (v46[3] != 1)
        swift_bridgeObjectRelease();
      swift_release();
      if (v46[7] != 1)
        swift_bridgeObjectRelease();
      if (v46[8])
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        if (v46[23] != 1)
          swift_bridgeObjectRelease();
      }
      v47 = v46[27];
      if (v47 >> 60 != 15)
        sub_1AD00412C(v46[26], v47);
    }
    swift_bridgeObjectRelease();
    v48 = (_QWORD *)((char *)v41 + v42[8]);
    v49 = v48[1];
    if (v49 >> 60 != 15)
      sub_1AD00412C(*v48, v49);
    v50 = (_QWORD *)((char *)v41 + v42[9]);
    v51 = v50[1];
    if (v51 >> 60 != 15)
      sub_1AD00412C(*v50, v51);
    v52 = (_QWORD *)((char *)v41 + v42[12]);
    v53 = v52[1];
    if (v53 >> 60 != 15)
      sub_1AD00412C(*v52, v53);
    v54 = (uint64_t *)(v40 + v5[15]);
    v55 = v54[1];
    if (v55 >> 60 != 15)
      sub_1AD00412C(*v54, v55);
    v56 = (uint64_t *)(v40 + v5[16]);
    v57 = v56[1];
    if (v57 >> 60 != 15)
      sub_1AD00412C(*v56, v57);
    v58 = (uint64_t *)(v40 + v5[19]);
    v59 = type metadata accessor for CloudKitSharingToken();
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v60 = v58[6];
      if (v60 >> 60 != 15 && (v60 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(v58[5], v60);
      if (v58[9])
      {
        swift_release();
        v61 = v58[12];
        if (v61 >> 60 != 15)
          sub_1AD00412C(v58[11], v61);
      }
      swift_release();
      v62 = v58[16];
      if (v62 >> 60 != 15)
        sub_1AD00412C(v58[15], v62);
      swift_release();
      v63 = v58[20];
      if (v63 >> 60 != 15 && (v63 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(v58[19], v63);
      if (v58[21])
      {
        swift_release();
        v64 = v58[24];
        if (v64 >> 60 != 15)
          sub_1AD00412C(v58[23], v64);
        swift_release();
        v65 = v58[29];
        if (v65 >> 60 != 15)
          sub_1AD00412C(v58[28], v65);
      }
      swift_bridgeObjectRelease();
      swift_release();
      v66 = v58[34];
      if (v66 >> 60 != 15 && (v66 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(v58[33], v66);
      v67 = (char *)v58 + *(int *)(v59 + 24);
      swift_release();
      v68 = &v67[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28)];
      v69 = sub_1AD63AF28();
      v70 = *(_QWORD *)(v69 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
        (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v69);
      v71 = (char *)v58 + *(int *)(v59 + 28);
      swift_release();
      if (*((_QWORD *)v71 + 3) != 1)
        swift_bridgeObjectRelease();
    }
    v72 = (uint64_t *)(v40 + v5[20]);
    v73 = v72[1];
    if (v73 >> 60 != 15)
      sub_1AD00412C(*v72, v73);
  }
  v74 = a1 + a2[7];
  swift_release();
  if (*(_QWORD *)(v74 + 24) != 1)
    swift_bridgeObjectRelease();
  v75 = a1 + a2[9];
  swift_release();
  if (*(_QWORD *)(v75 + 24) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD319204(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  unint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t *v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _OWORD *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  unint64_t v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  _OWORD *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _OWORD *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _OWORD *v175;
  uint64_t v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  int *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  _OWORD *v193;
  uint64_t v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  uint64_t v202;
  _OWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  uint64_t *v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t *v250;
  unint64_t v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  uint64_t *v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  __int128 v259;
  uint64_t v260;
  uint64_t *v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  _OWORD *v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t *v270;
  unint64_t v271;
  __int128 v272;
  __int128 v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t *v276;
  unint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t *v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  char *v295;
  uint64_t v296;
  _OWORD *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  uint64_t v307;
  _OWORD *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  _OWORD *v313;
  uint64_t v314;
  _OWORD *v316;
  _OWORD *v317;
  unsigned int (*v318)(_QWORD *, uint64_t, int *);
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  _QWORD *v323;
  _QWORD *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  int *v329;
  int *v330;

  v4 = a2;
  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 2;
  v8 = a2[3];
  swift_retain();
  if (v8 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v7;
    *(_QWORD *)(a1 + 24) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)((char *)v4 + v9);
  v12 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_90;
  }
  v318 = v14;
  v327 = v13;
  v329 = a3;
  v16 = v11[1];
  *v10 = *v11;
  v10[1] = v16;
  v10[2] = v11[2];
  v17 = v11[5];
  *(_OWORD *)(v10 + 3) = *(_OWORD *)(v11 + 3);
  v10[5] = v17;
  v18 = v11 + 6;
  v19 = v11[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v19 == 1)
  {
    *((_OWORD *)v10 + 3) = *v18;
  }
  else
  {
    v10[6] = *(_QWORD *)v18;
    v10[7] = v19;
    swift_bridgeObjectRetain();
  }
  v20 = v12[6];
  v21 = (char *)v10 + v20;
  v22 = (char *)v11 + v20;
  v23 = *(_QWORD *)((char *)v11 + v20);
  v325 = a1;
  v323 = v4;
  if (v23)
  {
    v24 = *((_QWORD *)v22 + 1);
    v25 = *((_QWORD *)v22 + 2);
    *(_QWORD *)v21 = v23;
    *((_QWORD *)v21 + 1) = v24;
    *((_QWORD *)v21 + 2) = v25;
    *(_OWORD *)(v21 + 24) = *(_OWORD *)(v22 + 24);
    v26 = *((_QWORD *)v22 + 6);
    *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
    *((_QWORD *)v21 + 6) = v26;
    *(_OWORD *)(v21 + 56) = *(_OWORD *)(v22 + 56);
    v27 = *((_QWORD *)v22 + 10);
    *((_QWORD *)v21 + 9) = *((_QWORD *)v22 + 9);
    *((_QWORD *)v21 + 10) = v27;
    v28 = *((_QWORD *)v22 + 13);
    *(_OWORD *)(v21 + 88) = *(_OWORD *)(v22 + 88);
    *((_QWORD *)v21 + 13) = v28;
    v29 = v22 + 112;
    v30 = *((_QWORD *)v22 + 15);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v30 == 1)
    {
      *((_OWORD *)v21 + 7) = *v29;
    }
    else
    {
      *((_QWORD *)v21 + 14) = *(_QWORD *)v29;
      *((_QWORD *)v21 + 15) = v30;
      swift_bridgeObjectRetain();
    }
    *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
  }
  else
  {
    v31 = *((_OWORD *)v22 + 7);
    *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
    *((_OWORD *)v21 + 7) = v31;
    *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
    v32 = *((_OWORD *)v22 + 3);
    *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
    *((_OWORD *)v21 + 3) = v32;
    v33 = *((_OWORD *)v22 + 5);
    *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
    *((_OWORD *)v21 + 5) = v33;
    v34 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v34;
  }
  v35 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v36 = v35[5];
  v37 = &v21[v36];
  v38 = &v22[v36];
  v39 = sub_1AD63AE2C();
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = v35[6];
  v43 = &v21[v42];
  v44 = &v22[v42];
  v45 = *(_QWORD *)&v22[v42];
  if (v45)
  {
    v46 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = v45;
    *((_QWORD *)v43 + 1) = v46;
    v47 = v44 + 16;
    v48 = *((_QWORD *)v44 + 3);
    swift_retain();
    if (v48 == 1)
    {
      *((_OWORD *)v43 + 1) = *v47;
    }
    else
    {
      *((_QWORD *)v43 + 2) = *(_QWORD *)v47;
      *((_QWORD *)v43 + 3) = v48;
      swift_bridgeObjectRetain();
    }
    v56 = *((_QWORD *)v44 + 5);
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    *((_QWORD *)v43 + 5) = v56;
    v57 = v44 + 48;
    v58 = *((_QWORD *)v44 + 7);
    swift_retain();
    if (v58 == 1)
    {
      *((_OWORD *)v43 + 3) = *v57;
    }
    else
    {
      *((_QWORD *)v43 + 6) = *(_QWORD *)v57;
      *((_QWORD *)v43 + 7) = v58;
      swift_bridgeObjectRetain();
    }
    v59 = *((_QWORD *)v44 + 8);
    if (v59)
    {
      v60 = *((_QWORD *)v44 + 9);
      v61 = *((_QWORD *)v44 + 10);
      *((_QWORD *)v43 + 8) = v59;
      *((_QWORD *)v43 + 9) = v60;
      *((_QWORD *)v43 + 10) = v61;
      *(_OWORD *)(v43 + 88) = *(_OWORD *)(v44 + 88);
      v62 = *((_QWORD *)v44 + 14);
      *((_QWORD *)v43 + 13) = *((_QWORD *)v44 + 13);
      *((_QWORD *)v43 + 14) = v62;
      *(_OWORD *)(v43 + 120) = *(_OWORD *)(v44 + 120);
      v63 = *((_QWORD *)v44 + 18);
      *((_QWORD *)v43 + 17) = *((_QWORD *)v44 + 17);
      *((_QWORD *)v43 + 18) = v63;
      v64 = *((_QWORD *)v44 + 21);
      *(_OWORD *)(v43 + 152) = *(_OWORD *)(v44 + 152);
      *((_QWORD *)v43 + 21) = v64;
      v316 = v44 + 176;
      v319 = *((_QWORD *)v44 + 23);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v319 == 1)
      {
        *((_OWORD *)v43 + 11) = *v316;
      }
      else
      {
        *((_QWORD *)v43 + 22) = *(_QWORD *)v316;
        *((_QWORD *)v43 + 23) = v319;
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v43 + 24) = *((_QWORD *)v44 + 24);
    }
    else
    {
      v65 = *((_OWORD *)v44 + 11);
      *((_OWORD *)v43 + 10) = *((_OWORD *)v44 + 10);
      *((_OWORD *)v43 + 11) = v65;
      *((_QWORD *)v43 + 24) = *((_QWORD *)v44 + 24);
      v66 = *((_OWORD *)v44 + 7);
      *((_OWORD *)v43 + 6) = *((_OWORD *)v44 + 6);
      *((_OWORD *)v43 + 7) = v66;
      v67 = *((_OWORD *)v44 + 9);
      *((_OWORD *)v43 + 8) = *((_OWORD *)v44 + 8);
      *((_OWORD *)v43 + 9) = v67;
      v68 = *((_OWORD *)v44 + 5);
      *((_OWORD *)v43 + 4) = *((_OWORD *)v44 + 4);
      *((_OWORD *)v43 + 5) = v68;
    }
    v43[200] = v44[200];
    v69 = (uint64_t *)(v44 + 208);
    v70 = *((_QWORD *)v44 + 27);
    if (v70 >> 60 == 15)
    {
      *((_OWORD *)v43 + 13) = *(_OWORD *)v69;
    }
    else
    {
      v71 = *v69;
      sub_1AD0040A0(*v69, v70);
      *((_QWORD *)v43 + 26) = v71;
      *((_QWORD *)v43 + 27) = v70;
    }
  }
  else
  {
    v49 = *((_OWORD *)v44 + 11);
    *((_OWORD *)v43 + 10) = *((_OWORD *)v44 + 10);
    *((_OWORD *)v43 + 11) = v49;
    v50 = *((_OWORD *)v44 + 13);
    *((_OWORD *)v43 + 12) = *((_OWORD *)v44 + 12);
    *((_OWORD *)v43 + 13) = v50;
    v51 = *((_OWORD *)v44 + 7);
    *((_OWORD *)v43 + 6) = *((_OWORD *)v44 + 6);
    *((_OWORD *)v43 + 7) = v51;
    v52 = *((_OWORD *)v44 + 9);
    *((_OWORD *)v43 + 8) = *((_OWORD *)v44 + 8);
    *((_OWORD *)v43 + 9) = v52;
    v53 = *((_OWORD *)v44 + 3);
    *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
    *((_OWORD *)v43 + 3) = v53;
    v54 = *((_OWORD *)v44 + 5);
    *((_OWORD *)v43 + 4) = *((_OWORD *)v44 + 4);
    *((_OWORD *)v43 + 5) = v54;
    v55 = *((_OWORD *)v44 + 1);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v55;
  }
  *(_QWORD *)&v21[v35[7]] = *(_QWORD *)&v22[v35[7]];
  v72 = v35[8];
  v73 = &v21[v72];
  v74 = &v22[v72];
  v75 = *(_QWORD *)&v22[v72 + 8];
  swift_bridgeObjectRetain();
  if (v75 >> 60 == 15)
  {
    *(_OWORD *)v73 = *(_OWORD *)v74;
  }
  else
  {
    v76 = *(_QWORD *)v74;
    sub_1AD0040A0(v76, v75);
    *(_QWORD *)v73 = v76;
    *((_QWORD *)v73 + 1) = v75;
  }
  v77 = v35[9];
  v78 = &v21[v77];
  v79 = &v22[v77];
  v80 = *((_QWORD *)v79 + 1);
  if (v80 >> 60 == 15)
  {
    *(_OWORD *)v78 = *(_OWORD *)v79;
  }
  else
  {
    v81 = *(_QWORD *)v79;
    sub_1AD0040A0(*(_QWORD *)v79, *((_QWORD *)v79 + 1));
    *(_QWORD *)v78 = v81;
    *((_QWORD *)v78 + 1) = v80;
  }
  v21[v35[10]] = v22[v35[10]];
  v21[v35[11]] = v22[v35[11]];
  v82 = v35[12];
  v83 = &v21[v82];
  v84 = &v22[v82];
  v85 = *((_QWORD *)v84 + 1);
  if (v85 >> 60 == 15)
  {
    *(_OWORD *)v83 = *(_OWORD *)v84;
  }
  else
  {
    v86 = *(_QWORD *)v84;
    sub_1AD0040A0(*(_QWORD *)v84, *((_QWORD *)v84 + 1));
    *(_QWORD *)v83 = v86;
    *((_QWORD *)v83 + 1) = v85;
  }
  *(_QWORD *)&v21[v35[13]] = *(_QWORD *)&v22[v35[13]];
  *((_BYTE *)v10 + v12[7]) = *((_BYTE *)v11 + v12[7]);
  *((_BYTE *)v10 + v12[8]) = *((_BYTE *)v11 + v12[8]);
  *((_BYTE *)v10 + v12[9]) = *((_BYTE *)v11 + v12[9]);
  *((_BYTE *)v10 + v12[10]) = *((_BYTE *)v11 + v12[10]);
  *((_BYTE *)v10 + v12[11]) = *((_BYTE *)v11 + v12[11]);
  *((_BYTE *)v10 + v12[12]) = *((_BYTE *)v11 + v12[12]);
  *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
  *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
  v87 = v12[15];
  v88 = (char *)v10 + v87;
  v89 = (char *)v11 + v87;
  v90 = *((_QWORD *)v89 + 1);
  if (v90 >> 60 == 15)
  {
    *(_OWORD *)v88 = *(_OWORD *)v89;
  }
  else
  {
    v91 = *(_QWORD *)v89;
    sub_1AD0040A0(*(_QWORD *)v89, *((_QWORD *)v89 + 1));
    *(_QWORD *)v88 = v91;
    *((_QWORD *)v88 + 1) = v90;
  }
  v92 = v12[16];
  v93 = (char *)v10 + v92;
  v94 = (char *)v11 + v92;
  v95 = *((_QWORD *)v94 + 1);
  if (v95 >> 60 == 15)
  {
    *(_OWORD *)v93 = *(_OWORD *)v94;
  }
  else
  {
    v96 = *(_QWORD *)v94;
    sub_1AD0040A0(*(_QWORD *)v94, *((_QWORD *)v94 + 1));
    *(_QWORD *)v93 = v96;
    *((_QWORD *)v93 + 1) = v95;
  }
  *((_BYTE *)v10 + v12[17]) = *((_BYTE *)v11 + v12[17]);
  *((_BYTE *)v10 + v12[18]) = *((_BYTE *)v11 + v12[18]);
  v97 = v12[19];
  v98 = (char *)v10 + v97;
  v99 = (char *)v11 + v97;
  v100 = type metadata accessor for CloudKitSharingToken();
  v101 = *(_QWORD *)(v100 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
  {
    v320 = v100;
    *(_DWORD *)v98 = *(_DWORD *)v99;
    *((_QWORD *)v98 + 1) = *((_QWORD *)v99 + 1);
    v103 = *((_QWORD *)v99 + 4);
    *((_OWORD *)v98 + 1) = *((_OWORD *)v99 + 1);
    *((_QWORD *)v98 + 4) = v103;
    v104 = (uint64_t *)(v99 + 40);
    v105 = *((_QWORD *)v99 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v105 >> 60 == 11 || v105 >> 60 == 15)
    {
      *(_OWORD *)(v98 + 40) = *(_OWORD *)v104;
      v106 = *((_QWORD *)v99 + 9);
      if (v106)
        goto LABEL_55;
    }
    else
    {
      v112 = *v104;
      sub_1AD0040A0(*v104, v105);
      *((_QWORD *)v98 + 5) = v112;
      *((_QWORD *)v98 + 6) = v105;
      v106 = *((_QWORD *)v99 + 9);
      if (v106)
      {
LABEL_55:
        v107 = *((_DWORD *)v99 + 15);
        *((_DWORD *)v98 + 14) = *((_DWORD *)v99 + 14);
        *((_DWORD *)v98 + 15) = v107;
        v98[64] = v99[64];
        v108 = *((_QWORD *)v99 + 10);
        *((_QWORD *)v98 + 9) = v106;
        *((_QWORD *)v98 + 10) = v108;
        v109 = (uint64_t *)(v99 + 88);
        v110 = *((_QWORD *)v99 + 12);
        swift_retain();
        if (v110 >> 60 == 15)
        {
          *(_OWORD *)(v98 + 88) = *(_OWORD *)v109;
        }
        else
        {
          v111 = *v109;
          sub_1AD0040A0(*v109, v110);
          *((_QWORD *)v98 + 11) = v111;
          *((_QWORD *)v98 + 12) = v110;
        }
LABEL_60:
        v114 = *((_QWORD *)v99 + 14);
        *((_QWORD *)v98 + 13) = *((_QWORD *)v99 + 13);
        *((_QWORD *)v98 + 14) = v114;
        v115 = (uint64_t *)(v99 + 120);
        v116 = *((_QWORD *)v99 + 16);
        swift_retain();
        if (v116 >> 60 == 15)
        {
          *(_OWORD *)(v98 + 120) = *(_OWORD *)v115;
        }
        else
        {
          v117 = *v115;
          sub_1AD0040A0(*v115, v116);
          *((_QWORD *)v98 + 15) = v117;
          *((_QWORD *)v98 + 16) = v116;
        }
        v118 = *((_QWORD *)v99 + 18);
        *((_QWORD *)v98 + 17) = *((_QWORD *)v99 + 17);
        *((_QWORD *)v98 + 18) = v118;
        v119 = v99 + 152;
        v120 = *((_QWORD *)v99 + 20);
        swift_retain();
        if (v120 >> 60 == 11 || v120 >> 60 == 15)
        {
          *(_OWORD *)(v98 + 152) = *v119;
        }
        else
        {
          v121 = *(_QWORD *)v119;
          sub_1AD0040A0(v121, v120);
          *((_QWORD *)v98 + 19) = v121;
          *((_QWORD *)v98 + 20) = v120;
        }
        v122 = *((_QWORD *)v99 + 21);
        if (v122)
        {
          v123 = *((_QWORD *)v99 + 22);
          *((_QWORD *)v98 + 21) = v122;
          *((_QWORD *)v98 + 22) = v123;
          v124 = (uint64_t *)(v99 + 184);
          v125 = *((_QWORD *)v99 + 24);
          swift_retain();
          if (v125 >> 60 == 15)
          {
            *(_OWORD *)(v98 + 184) = *(_OWORD *)v124;
          }
          else
          {
            v128 = *v124;
            sub_1AD0040A0(*v124, v125);
            *((_QWORD *)v98 + 23) = v128;
            *((_QWORD *)v98 + 24) = v125;
          }
          *((_DWORD *)v98 + 50) = *((_DWORD *)v99 + 50);
          v129 = *((_QWORD *)v99 + 27);
          *((_QWORD *)v98 + 26) = *((_QWORD *)v99 + 26);
          *((_QWORD *)v98 + 27) = v129;
          v130 = (uint64_t *)(v99 + 224);
          v131 = *((_QWORD *)v99 + 29);
          swift_retain();
          if (v131 >> 60 == 15)
          {
            *((_OWORD *)v98 + 14) = *(_OWORD *)v130;
          }
          else
          {
            v132 = *v130;
            sub_1AD0040A0(*v130, v131);
            *((_QWORD *)v98 + 28) = v132;
            *((_QWORD *)v98 + 29) = v131;
          }
        }
        else
        {
          v126 = *(_OWORD *)(v99 + 216);
          *(_OWORD *)(v98 + 200) = *(_OWORD *)(v99 + 200);
          *(_OWORD *)(v98 + 216) = v126;
          *((_QWORD *)v98 + 29) = *((_QWORD *)v99 + 29);
          v127 = *(_OWORD *)(v99 + 184);
          *(_OWORD *)(v98 + 168) = *(_OWORD *)(v99 + 168);
          *(_OWORD *)(v98 + 184) = v127;
        }
        v133 = *((_QWORD *)v99 + 32);
        *((_OWORD *)v98 + 15) = *((_OWORD *)v99 + 15);
        *((_QWORD *)v98 + 32) = v133;
        v134 = (uint64_t *)(v99 + 264);
        v135 = *((_QWORD *)v99 + 34);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v135 >> 60 == 11 || v135 >> 60 == 15)
        {
          *(_OWORD *)(v98 + 264) = *(_OWORD *)v134;
        }
        else
        {
          v136 = *v134;
          sub_1AD0040A0(*v134, v135);
          *((_QWORD *)v98 + 33) = v136;
          *((_QWORD *)v98 + 34) = v135;
        }
        v137 = *(int *)(v320 + 24);
        v138 = &v98[v137];
        v139 = &v99[v137];
        v140 = *(_QWORD *)&v99[v137 + 8];
        *(_QWORD *)v138 = *(_QWORD *)&v99[v137];
        *((_QWORD *)v138 + 1) = v140;
        swift_retain();
        v141 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v142 = &v138[v141];
        v143 = &v139[v141];
        v144 = sub_1AD63AF28();
        v145 = *(_QWORD *)(v144 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
        {
          v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v142, v143, v144);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
        }
        v147 = *(int *)(v320 + 28);
        v148 = &v98[v147];
        v149 = &v99[v147];
        v150 = *((_QWORD *)v149 + 1);
        *(_QWORD *)v148 = *(_QWORD *)v149;
        *((_QWORD *)v148 + 1) = v150;
        v151 = v149 + 16;
        v152 = *((_QWORD *)v149 + 3);
        swift_retain();
        if (v152 == 1)
        {
          *((_OWORD *)v148 + 1) = *v151;
        }
        else
        {
          *((_QWORD *)v148 + 2) = *(_QWORD *)v151;
          *((_QWORD *)v148 + 3) = v152;
          swift_bridgeObjectRetain();
        }
        a1 = v325;
        v4 = v323;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v320);
        goto LABEL_86;
      }
    }
    v113 = *(_OWORD *)(v99 + 72);
    *(_OWORD *)(v98 + 56) = *(_OWORD *)(v99 + 56);
    *(_OWORD *)(v98 + 72) = v113;
    *(_OWORD *)(v98 + 88) = *(_OWORD *)(v99 + 88);
    goto LABEL_60;
  }
  v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  a1 = v325;
  v4 = v323;
LABEL_86:
  v153 = v12[20];
  v154 = (char *)v10 + v153;
  v155 = (char *)v11 + v153;
  v156 = *((_QWORD *)v155 + 1);
  if (v156 >> 60 == 15)
  {
    *(_OWORD *)v154 = *(_OWORD *)v155;
  }
  else
  {
    v157 = *(_QWORD *)v155;
    sub_1AD0040A0(*(_QWORD *)v155, *((_QWORD *)v155 + 1));
    *(_QWORD *)v154 = v157;
    *((_QWORD *)v154 + 1) = v156;
  }
  v13 = v327;
  a3 = v329;
  v14 = v318;
  *((_BYTE *)v10 + v12[21]) = *((_BYTE *)v11 + v12[21]);
  *((_BYTE *)v10 + v12[22]) = *((_BYTE *)v11 + v12[22]);
  *((_BYTE *)v10 + v12[23]) = *((_BYTE *)v11 + v12[23]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v327 + 56))(v10, 0, 1, v12);
LABEL_90:
  v158 = a3[6];
  v159 = (_QWORD *)(a1 + v158);
  v160 = (_QWORD *)((char *)v4 + v158);
  if (v14((_QWORD *)((char *)v4 + v158), 1, v12))
  {
    v161 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
    goto LABEL_176;
  }
  v328 = v13;
  v330 = a3;
  v162 = v160[1];
  *v159 = *v160;
  v159[1] = v162;
  v159[2] = v160[2];
  v163 = v160[5];
  *(_OWORD *)(v159 + 3) = *(_OWORD *)(v160 + 3);
  v159[5] = v163;
  v164 = v160 + 6;
  v165 = v160[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v165 == 1)
  {
    *((_OWORD *)v159 + 3) = *v164;
  }
  else
  {
    v159[6] = *(_QWORD *)v164;
    v159[7] = v165;
    swift_bridgeObjectRetain();
  }
  v166 = v12[6];
  v167 = (char *)v159 + v166;
  v168 = (char *)v160 + v166;
  v169 = *(_QWORD *)((char *)v160 + v166);
  v326 = a1;
  v324 = v4;
  if (v169)
  {
    v170 = *((_QWORD *)v168 + 1);
    v171 = *((_QWORD *)v168 + 2);
    *(_QWORD *)v167 = v169;
    *((_QWORD *)v167 + 1) = v170;
    *((_QWORD *)v167 + 2) = v171;
    *(_OWORD *)(v167 + 24) = *(_OWORD *)(v168 + 24);
    v172 = *((_QWORD *)v168 + 6);
    *((_QWORD *)v167 + 5) = *((_QWORD *)v168 + 5);
    *((_QWORD *)v167 + 6) = v172;
    *(_OWORD *)(v167 + 56) = *(_OWORD *)(v168 + 56);
    v173 = *((_QWORD *)v168 + 10);
    *((_QWORD *)v167 + 9) = *((_QWORD *)v168 + 9);
    *((_QWORD *)v167 + 10) = v173;
    v174 = *((_QWORD *)v168 + 13);
    *(_OWORD *)(v167 + 88) = *(_OWORD *)(v168 + 88);
    *((_QWORD *)v167 + 13) = v174;
    v175 = v168 + 112;
    v176 = *((_QWORD *)v168 + 15);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v176 == 1)
    {
      *((_OWORD *)v167 + 7) = *v175;
    }
    else
    {
      *((_QWORD *)v167 + 14) = *(_QWORD *)v175;
      *((_QWORD *)v167 + 15) = v176;
      swift_bridgeObjectRetain();
    }
    *((_QWORD *)v167 + 16) = *((_QWORD *)v168 + 16);
  }
  else
  {
    v177 = *((_OWORD *)v168 + 7);
    *((_OWORD *)v167 + 6) = *((_OWORD *)v168 + 6);
    *((_OWORD *)v167 + 7) = v177;
    *((_QWORD *)v167 + 16) = *((_QWORD *)v168 + 16);
    v178 = *((_OWORD *)v168 + 3);
    *((_OWORD *)v167 + 2) = *((_OWORD *)v168 + 2);
    *((_OWORD *)v167 + 3) = v178;
    v179 = *((_OWORD *)v168 + 5);
    *((_OWORD *)v167 + 4) = *((_OWORD *)v168 + 4);
    *((_OWORD *)v167 + 5) = v179;
    v180 = *((_OWORD *)v168 + 1);
    *(_OWORD *)v167 = *(_OWORD *)v168;
    *((_OWORD *)v167 + 1) = v180;
  }
  v181 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v182 = v181[5];
  v183 = &v167[v182];
  v184 = &v168[v182];
  v185 = sub_1AD63AE2C();
  v186 = *(_QWORD *)(v185 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v184, 1, v185))
  {
    v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v183, v184, v185);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v186 + 56))(v183, 0, 1, v185);
  }
  v188 = v181[6];
  v189 = &v167[v188];
  v190 = &v168[v188];
  v191 = *(_QWORD *)&v168[v188];
  if (v191)
  {
    v192 = *((_QWORD *)v190 + 1);
    *(_QWORD *)v189 = v191;
    *((_QWORD *)v189 + 1) = v192;
    v193 = v190 + 16;
    v194 = *((_QWORD *)v190 + 3);
    swift_retain();
    if (v194 == 1)
    {
      *((_OWORD *)v189 + 1) = *v193;
    }
    else
    {
      *((_QWORD *)v189 + 2) = *(_QWORD *)v193;
      *((_QWORD *)v189 + 3) = v194;
      swift_bridgeObjectRetain();
    }
    v202 = *((_QWORD *)v190 + 5);
    *((_QWORD *)v189 + 4) = *((_QWORD *)v190 + 4);
    *((_QWORD *)v189 + 5) = v202;
    v203 = v190 + 48;
    v204 = *((_QWORD *)v190 + 7);
    swift_retain();
    if (v204 == 1)
    {
      *((_OWORD *)v189 + 3) = *v203;
    }
    else
    {
      *((_QWORD *)v189 + 6) = *(_QWORD *)v203;
      *((_QWORD *)v189 + 7) = v204;
      swift_bridgeObjectRetain();
    }
    v205 = *((_QWORD *)v190 + 8);
    if (v205)
    {
      v206 = *((_QWORD *)v190 + 9);
      v207 = *((_QWORD *)v190 + 10);
      *((_QWORD *)v189 + 8) = v205;
      *((_QWORD *)v189 + 9) = v206;
      *((_QWORD *)v189 + 10) = v207;
      *(_OWORD *)(v189 + 88) = *(_OWORD *)(v190 + 88);
      v208 = *((_QWORD *)v190 + 14);
      *((_QWORD *)v189 + 13) = *((_QWORD *)v190 + 13);
      *((_QWORD *)v189 + 14) = v208;
      *(_OWORD *)(v189 + 120) = *(_OWORD *)(v190 + 120);
      v209 = *((_QWORD *)v190 + 18);
      *((_QWORD *)v189 + 17) = *((_QWORD *)v190 + 17);
      *((_QWORD *)v189 + 18) = v209;
      v210 = *((_QWORD *)v190 + 21);
      *(_OWORD *)(v189 + 152) = *(_OWORD *)(v190 + 152);
      *((_QWORD *)v189 + 21) = v210;
      v317 = v190 + 176;
      v321 = *((_QWORD *)v190 + 23);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v321 == 1)
      {
        *((_OWORD *)v189 + 11) = *v317;
      }
      else
      {
        *((_QWORD *)v189 + 22) = *(_QWORD *)v317;
        *((_QWORD *)v189 + 23) = v321;
        swift_bridgeObjectRetain();
      }
      *((_QWORD *)v189 + 24) = *((_QWORD *)v190 + 24);
    }
    else
    {
      v211 = *((_OWORD *)v190 + 11);
      *((_OWORD *)v189 + 10) = *((_OWORD *)v190 + 10);
      *((_OWORD *)v189 + 11) = v211;
      *((_QWORD *)v189 + 24) = *((_QWORD *)v190 + 24);
      v212 = *((_OWORD *)v190 + 7);
      *((_OWORD *)v189 + 6) = *((_OWORD *)v190 + 6);
      *((_OWORD *)v189 + 7) = v212;
      v213 = *((_OWORD *)v190 + 9);
      *((_OWORD *)v189 + 8) = *((_OWORD *)v190 + 8);
      *((_OWORD *)v189 + 9) = v213;
      v214 = *((_OWORD *)v190 + 5);
      *((_OWORD *)v189 + 4) = *((_OWORD *)v190 + 4);
      *((_OWORD *)v189 + 5) = v214;
    }
    v189[200] = v190[200];
    v215 = (uint64_t *)(v190 + 208);
    v216 = *((_QWORD *)v190 + 27);
    if (v216 >> 60 == 15)
    {
      *((_OWORD *)v189 + 13) = *(_OWORD *)v215;
    }
    else
    {
      v217 = *v215;
      sub_1AD0040A0(*v215, v216);
      *((_QWORD *)v189 + 26) = v217;
      *((_QWORD *)v189 + 27) = v216;
    }
  }
  else
  {
    v195 = *((_OWORD *)v190 + 11);
    *((_OWORD *)v189 + 10) = *((_OWORD *)v190 + 10);
    *((_OWORD *)v189 + 11) = v195;
    v196 = *((_OWORD *)v190 + 13);
    *((_OWORD *)v189 + 12) = *((_OWORD *)v190 + 12);
    *((_OWORD *)v189 + 13) = v196;
    v197 = *((_OWORD *)v190 + 7);
    *((_OWORD *)v189 + 6) = *((_OWORD *)v190 + 6);
    *((_OWORD *)v189 + 7) = v197;
    v198 = *((_OWORD *)v190 + 9);
    *((_OWORD *)v189 + 8) = *((_OWORD *)v190 + 8);
    *((_OWORD *)v189 + 9) = v198;
    v199 = *((_OWORD *)v190 + 3);
    *((_OWORD *)v189 + 2) = *((_OWORD *)v190 + 2);
    *((_OWORD *)v189 + 3) = v199;
    v200 = *((_OWORD *)v190 + 5);
    *((_OWORD *)v189 + 4) = *((_OWORD *)v190 + 4);
    *((_OWORD *)v189 + 5) = v200;
    v201 = *((_OWORD *)v190 + 1);
    *(_OWORD *)v189 = *(_OWORD *)v190;
    *((_OWORD *)v189 + 1) = v201;
  }
  *(_QWORD *)&v167[v181[7]] = *(_QWORD *)&v168[v181[7]];
  v218 = v181[8];
  v219 = &v167[v218];
  v220 = &v168[v218];
  v221 = *(_QWORD *)&v168[v218 + 8];
  swift_bridgeObjectRetain();
  if (v221 >> 60 == 15)
  {
    *(_OWORD *)v219 = *(_OWORD *)v220;
  }
  else
  {
    v222 = *(_QWORD *)v220;
    sub_1AD0040A0(v222, v221);
    *(_QWORD *)v219 = v222;
    *((_QWORD *)v219 + 1) = v221;
  }
  v223 = v181[9];
  v224 = &v167[v223];
  v225 = &v168[v223];
  v226 = *((_QWORD *)v225 + 1);
  if (v226 >> 60 == 15)
  {
    *(_OWORD *)v224 = *(_OWORD *)v225;
  }
  else
  {
    v227 = *(_QWORD *)v225;
    sub_1AD0040A0(*(_QWORD *)v225, *((_QWORD *)v225 + 1));
    *(_QWORD *)v224 = v227;
    *((_QWORD *)v224 + 1) = v226;
  }
  v167[v181[10]] = v168[v181[10]];
  v167[v181[11]] = v168[v181[11]];
  v228 = v181[12];
  v229 = &v167[v228];
  v230 = &v168[v228];
  v231 = *((_QWORD *)v230 + 1);
  if (v231 >> 60 == 15)
  {
    *(_OWORD *)v229 = *(_OWORD *)v230;
  }
  else
  {
    v232 = *(_QWORD *)v230;
    sub_1AD0040A0(*(_QWORD *)v230, *((_QWORD *)v230 + 1));
    *(_QWORD *)v229 = v232;
    *((_QWORD *)v229 + 1) = v231;
  }
  *(_QWORD *)&v167[v181[13]] = *(_QWORD *)&v168[v181[13]];
  *((_BYTE *)v159 + v12[7]) = *((_BYTE *)v160 + v12[7]);
  *((_BYTE *)v159 + v12[8]) = *((_BYTE *)v160 + v12[8]);
  *((_BYTE *)v159 + v12[9]) = *((_BYTE *)v160 + v12[9]);
  *((_BYTE *)v159 + v12[10]) = *((_BYTE *)v160 + v12[10]);
  *((_BYTE *)v159 + v12[11]) = *((_BYTE *)v160 + v12[11]);
  *((_BYTE *)v159 + v12[12]) = *((_BYTE *)v160 + v12[12]);
  *((_BYTE *)v159 + v12[13]) = *((_BYTE *)v160 + v12[13]);
  *((_BYTE *)v159 + v12[14]) = *((_BYTE *)v160 + v12[14]);
  v233 = v12[15];
  v234 = (char *)v159 + v233;
  v235 = (char *)v160 + v233;
  v236 = *((_QWORD *)v235 + 1);
  if (v236 >> 60 == 15)
  {
    *(_OWORD *)v234 = *(_OWORD *)v235;
  }
  else
  {
    v237 = *(_QWORD *)v235;
    sub_1AD0040A0(*(_QWORD *)v235, *((_QWORD *)v235 + 1));
    *(_QWORD *)v234 = v237;
    *((_QWORD *)v234 + 1) = v236;
  }
  v238 = v12[16];
  v239 = (char *)v159 + v238;
  v240 = (char *)v160 + v238;
  v241 = *((_QWORD *)v240 + 1);
  if (v241 >> 60 == 15)
  {
    *(_OWORD *)v239 = *(_OWORD *)v240;
  }
  else
  {
    v242 = *(_QWORD *)v240;
    sub_1AD0040A0(*(_QWORD *)v240, *((_QWORD *)v240 + 1));
    *(_QWORD *)v239 = v242;
    *((_QWORD *)v239 + 1) = v241;
  }
  *((_BYTE *)v159 + v12[17]) = *((_BYTE *)v160 + v12[17]);
  *((_BYTE *)v159 + v12[18]) = *((_BYTE *)v160 + v12[18]);
  v243 = v12[19];
  v244 = (char *)v159 + v243;
  v245 = (char *)v160 + v243;
  v246 = type metadata accessor for CloudKitSharingToken();
  v247 = *(_QWORD *)(v246 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v247 + 48))(v245, 1, v246))
  {
    v322 = v246;
    *(_DWORD *)v244 = *(_DWORD *)v245;
    *((_QWORD *)v244 + 1) = *((_QWORD *)v245 + 1);
    v249 = *((_QWORD *)v245 + 4);
    *((_OWORD *)v244 + 1) = *((_OWORD *)v245 + 1);
    *((_QWORD *)v244 + 4) = v249;
    v250 = (uint64_t *)(v245 + 40);
    v251 = *((_QWORD *)v245 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v251 >> 60 == 11 || v251 >> 60 == 15)
    {
      *(_OWORD *)(v244 + 40) = *(_OWORD *)v250;
      v252 = *((_QWORD *)v245 + 9);
      if (v252)
        goto LABEL_141;
    }
    else
    {
      v258 = *v250;
      sub_1AD0040A0(*v250, v251);
      *((_QWORD *)v244 + 5) = v258;
      *((_QWORD *)v244 + 6) = v251;
      v252 = *((_QWORD *)v245 + 9);
      if (v252)
      {
LABEL_141:
        v253 = *((_DWORD *)v245 + 15);
        *((_DWORD *)v244 + 14) = *((_DWORD *)v245 + 14);
        *((_DWORD *)v244 + 15) = v253;
        v244[64] = v245[64];
        v254 = *((_QWORD *)v245 + 10);
        *((_QWORD *)v244 + 9) = v252;
        *((_QWORD *)v244 + 10) = v254;
        v255 = (uint64_t *)(v245 + 88);
        v256 = *((_QWORD *)v245 + 12);
        swift_retain();
        if (v256 >> 60 == 15)
        {
          *(_OWORD *)(v244 + 88) = *(_OWORD *)v255;
        }
        else
        {
          v257 = *v255;
          sub_1AD0040A0(*v255, v256);
          *((_QWORD *)v244 + 11) = v257;
          *((_QWORD *)v244 + 12) = v256;
        }
LABEL_146:
        v260 = *((_QWORD *)v245 + 14);
        *((_QWORD *)v244 + 13) = *((_QWORD *)v245 + 13);
        *((_QWORD *)v244 + 14) = v260;
        v261 = (uint64_t *)(v245 + 120);
        v262 = *((_QWORD *)v245 + 16);
        swift_retain();
        if (v262 >> 60 == 15)
        {
          *(_OWORD *)(v244 + 120) = *(_OWORD *)v261;
        }
        else
        {
          v263 = *v261;
          sub_1AD0040A0(*v261, v262);
          *((_QWORD *)v244 + 15) = v263;
          *((_QWORD *)v244 + 16) = v262;
        }
        v264 = *((_QWORD *)v245 + 18);
        *((_QWORD *)v244 + 17) = *((_QWORD *)v245 + 17);
        *((_QWORD *)v244 + 18) = v264;
        v265 = v245 + 152;
        v266 = *((_QWORD *)v245 + 20);
        swift_retain();
        if (v266 >> 60 == 11 || v266 >> 60 == 15)
        {
          *(_OWORD *)(v244 + 152) = *v265;
        }
        else
        {
          v267 = *(_QWORD *)v265;
          sub_1AD0040A0(v267, v266);
          *((_QWORD *)v244 + 19) = v267;
          *((_QWORD *)v244 + 20) = v266;
        }
        v268 = *((_QWORD *)v245 + 21);
        if (v268)
        {
          v269 = *((_QWORD *)v245 + 22);
          *((_QWORD *)v244 + 21) = v268;
          *((_QWORD *)v244 + 22) = v269;
          v270 = (uint64_t *)(v245 + 184);
          v271 = *((_QWORD *)v245 + 24);
          swift_retain();
          if (v271 >> 60 == 15)
          {
            *(_OWORD *)(v244 + 184) = *(_OWORD *)v270;
          }
          else
          {
            v274 = *v270;
            sub_1AD0040A0(*v270, v271);
            *((_QWORD *)v244 + 23) = v274;
            *((_QWORD *)v244 + 24) = v271;
          }
          *((_DWORD *)v244 + 50) = *((_DWORD *)v245 + 50);
          v275 = *((_QWORD *)v245 + 27);
          *((_QWORD *)v244 + 26) = *((_QWORD *)v245 + 26);
          *((_QWORD *)v244 + 27) = v275;
          v276 = (uint64_t *)(v245 + 224);
          v277 = *((_QWORD *)v245 + 29);
          swift_retain();
          if (v277 >> 60 == 15)
          {
            *((_OWORD *)v244 + 14) = *(_OWORD *)v276;
          }
          else
          {
            v278 = *v276;
            sub_1AD0040A0(*v276, v277);
            *((_QWORD *)v244 + 28) = v278;
            *((_QWORD *)v244 + 29) = v277;
          }
        }
        else
        {
          v272 = *(_OWORD *)(v245 + 216);
          *(_OWORD *)(v244 + 200) = *(_OWORD *)(v245 + 200);
          *(_OWORD *)(v244 + 216) = v272;
          *((_QWORD *)v244 + 29) = *((_QWORD *)v245 + 29);
          v273 = *(_OWORD *)(v245 + 184);
          *(_OWORD *)(v244 + 168) = *(_OWORD *)(v245 + 168);
          *(_OWORD *)(v244 + 184) = v273;
        }
        v279 = *((_QWORD *)v245 + 32);
        *((_OWORD *)v244 + 15) = *((_OWORD *)v245 + 15);
        *((_QWORD *)v244 + 32) = v279;
        v280 = (uint64_t *)(v245 + 264);
        v281 = *((_QWORD *)v245 + 34);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v281 >> 60 == 11 || v281 >> 60 == 15)
        {
          *(_OWORD *)(v244 + 264) = *(_OWORD *)v280;
        }
        else
        {
          v282 = *v280;
          sub_1AD0040A0(*v280, v281);
          *((_QWORD *)v244 + 33) = v282;
          *((_QWORD *)v244 + 34) = v281;
        }
        v283 = *(int *)(v322 + 24);
        v284 = &v244[v283];
        v285 = &v245[v283];
        v286 = *(_QWORD *)&v245[v283 + 8];
        *(_QWORD *)v284 = *(_QWORD *)&v245[v283];
        *((_QWORD *)v284 + 1) = v286;
        swift_retain();
        v287 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v288 = &v284[v287];
        v289 = &v285[v287];
        v290 = sub_1AD63AF28();
        v291 = *(_QWORD *)(v290 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v291 + 48))(v289, 1, v290))
        {
          v292 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v288, v289, *(_QWORD *)(*(_QWORD *)(v292 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v291 + 16))(v288, v289, v290);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v291 + 56))(v288, 0, 1, v290);
        }
        v293 = *(int *)(v322 + 28);
        v294 = &v244[v293];
        v295 = &v245[v293];
        v296 = *((_QWORD *)v295 + 1);
        *(_QWORD *)v294 = *(_QWORD *)v295;
        *((_QWORD *)v294 + 1) = v296;
        v297 = v295 + 16;
        v298 = *((_QWORD *)v295 + 3);
        swift_retain();
        if (v298 == 1)
        {
          *((_OWORD *)v294 + 1) = *v297;
        }
        else
        {
          *((_QWORD *)v294 + 2) = *(_QWORD *)v297;
          *((_QWORD *)v294 + 3) = v298;
          swift_bridgeObjectRetain();
        }
        a1 = v326;
        v4 = v324;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v244, 0, 1, v322);
        goto LABEL_172;
      }
    }
    v259 = *(_OWORD *)(v245 + 72);
    *(_OWORD *)(v244 + 56) = *(_OWORD *)(v245 + 56);
    *(_OWORD *)(v244 + 72) = v259;
    *(_OWORD *)(v244 + 88) = *(_OWORD *)(v245 + 88);
    goto LABEL_146;
  }
  v248 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  memcpy(v244, v245, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
  a1 = v326;
  v4 = v324;
LABEL_172:
  v299 = v12[20];
  v300 = (char *)v159 + v299;
  v301 = (char *)v160 + v299;
  v302 = *((_QWORD *)v301 + 1);
  if (v302 >> 60 == 15)
  {
    *(_OWORD *)v300 = *(_OWORD *)v301;
  }
  else
  {
    v303 = *(_QWORD *)v301;
    sub_1AD0040A0(*(_QWORD *)v301, *((_QWORD *)v301 + 1));
    *(_QWORD *)v300 = v303;
    *((_QWORD *)v300 + 1) = v302;
  }
  a3 = v330;
  *((_BYTE *)v159 + v12[21]) = *((_BYTE *)v160 + v12[21]);
  *((_BYTE *)v159 + v12[22]) = *((_BYTE *)v160 + v12[22]);
  *((_BYTE *)v159 + v12[23]) = *((_BYTE *)v160 + v12[23]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v328 + 56))(v159, 0, 1, v12);
LABEL_176:
  v304 = a3[7];
  v305 = a1 + v304;
  v306 = (_QWORD *)((char *)v4 + v304);
  v307 = v306[1];
  *(_QWORD *)v305 = *v306;
  *(_QWORD *)(v305 + 8) = v307;
  v308 = v306 + 2;
  v309 = v306[3];
  swift_retain();
  if (v309 == 1)
  {
    *(_OWORD *)(v305 + 16) = *v308;
  }
  else
  {
    *(_QWORD *)(v305 + 16) = *(_QWORD *)v308;
    *(_QWORD *)(v305 + 24) = v309;
    swift_bridgeObjectRetain();
  }
  v310 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)v4 + a3[8]);
  v311 = a1 + v310;
  v312 = *(_QWORD *)((char *)v4 + v310 + 8);
  *(_QWORD *)v311 = *(_QWORD *)((char *)v4 + v310);
  *(_QWORD *)(v311 + 8) = v312;
  v313 = (_OWORD *)((char *)v4 + v310 + 16);
  v314 = *(_QWORD *)((char *)v4 + v310 + 24);
  swift_retain();
  if (v314 == 1)
  {
    *(_OWORD *)(v311 + 16) = *v313;
  }
  else
  {
    *(_QWORD *)(v311 + 16) = *(_QWORD *)v313;
    *(_QWORD *)(v311 + 24) = v314;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)((char *)v4 + a3[10]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1AD31A904(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t *v112;
  unint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t *v116;
  unint64_t v117;
  _OWORD *v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  _OWORD *v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _OWORD *v154;
  unint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  _OWORD *v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  unint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  unint64_t v187;
  uint64_t v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;
  void *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t (*v200)(void *, uint64_t, uint64_t);
  int v201;
  int v202;
  uint64_t v203;
  _QWORD *v204;
  int *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  _OWORD *v244;
  uint64_t v245;
  _OWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  uint64_t *v268;
  unint64_t v269;
  uint64_t v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  uint64_t *v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t *v284;
  uint64_t *v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t *v292;
  uint64_t *v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  uint64_t v299;
  uint64_t *v300;
  uint64_t *v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  _QWORD *v307;
  uint64_t v308;
  uint64_t *v309;
  uint64_t *v310;
  unint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  unint64_t v315;
  uint64_t v316;
  uint64_t *v317;
  uint64_t *v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t (*v329)(uint64_t, uint64_t, uint64_t);
  int v330;
  int v331;
  uint64_t v332;
  uint64_t *v333;
  unint64_t v334;
  int v335;
  uint64_t v336;
  uint64_t *v337;
  unint64_t v338;
  _OWORD *v339;
  __int128 v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t *v343;
  unint64_t v344;
  unint64_t v345;
  uint64_t v346;
  uint64_t v347;
  __int128 v348;
  uint64_t v349;
  _OWORD *v350;
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t *v354;
  unint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  _OWORD *v359;
  unint64_t v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  uint64_t v364;
  uint64_t v365;
  _OWORD *v366;
  unint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t *v370;
  unint64_t v371;
  _QWORD *v372;
  uint64_t v373;
  uint64_t v374;
  _QWORD *v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  const void *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  _OWORD *v390;
  _OWORD *v391;
  uint64_t v392;
  uint64_t v393;
  int v394;
  uint64_t v395;
  uint64_t *v396;
  unint64_t v397;
  uint64_t v398;
  int v399;
  uint64_t v400;
  _OWORD *v401;
  unint64_t v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  unint64_t v410;
  uint64_t v411;
  uint64_t *v412;
  unint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  unint64_t v417;
  uint64_t v418;
  uint64_t *v419;
  unint64_t v420;
  unint64_t v421;
  uint64_t v422;
  _OWORD *v423;
  uint64_t v424;
  _OWORD *v425;
  uint64_t v426;
  uint64_t *v427;
  unint64_t v428;
  uint64_t v429;
  uint64_t v430;
  _OWORD *v431;
  unint64_t v432;
  __int128 v433;
  __int128 v434;
  __int128 v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  uint64_t v439;
  uint64_t v440;
  _OWORD *v441;
  unint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  unint64_t v446;
  uint64_t v447;
  uint64_t *v448;
  unint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  unint64_t v453;
  uint64_t v454;
  uint64_t *v455;
  unint64_t v456;
  unint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  _QWORD *v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  char *v465;
  char *v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t (*v469)(char *, uint64_t, uint64_t);
  int v470;
  int v471;
  uint64_t v472;
  uint64_t v473;
  _QWORD *v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t *v479;
  uint64_t *v480;
  unint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  unint64_t v485;
  uint64_t v486;
  _QWORD *v487;
  _QWORD *v488;
  int v489;
  int v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  _QWORD *v498;
  uint64_t v499;
  char *v500;
  char *v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  int *v514;
  uint64_t v515;
  char *v516;
  char *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  char *v522;
  char *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  uint64_t *v550;
  unint64_t v551;
  uint64_t v552;
  int *v553;
  uint64_t v554;
  char *v555;
  char *v556;
  unint64_t v557;
  uint64_t v558;
  uint64_t v559;
  char *v560;
  char *v561;
  unint64_t v562;
  uint64_t v563;
  uint64_t v564;
  char *v565;
  char *v566;
  unint64_t v567;
  uint64_t v568;
  uint64_t v569;
  char *v570;
  uint64_t *v571;
  unint64_t v572;
  uint64_t v573;
  uint64_t v574;
  char *v575;
  uint64_t *v576;
  unint64_t v577;
  uint64_t v578;
  uint64_t v579;
  char *v580;
  char *v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  _QWORD *v586;
  uint64_t v587;
  uint64_t *v588;
  unint64_t v589;
  int v590;
  uint64_t v591;
  uint64_t *v592;
  unint64_t v593;
  _OWORD *v594;
  __int128 v595;
  uint64_t v596;
  uint64_t v597;
  char *v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  __int128 v611;
  __int128 v612;
  __int128 v613;
  __int128 v614;
  __int128 v615;
  __int128 v616;
  uint64_t v617;
  uint64_t v618;
  __int128 v619;
  uint64_t v620;
  _OWORD *v621;
  unint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t *v625;
  unint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  _OWORD *v630;
  unint64_t v631;
  __int128 v632;
  __int128 v633;
  __int128 v634;
  uint64_t v635;
  uint64_t v636;
  _OWORD *v637;
  unint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t *v641;
  unint64_t v642;
  _QWORD *v643;
  uint64_t v644;
  uint64_t v645;
  char *v646;
  char *v647;
  uint64_t v648;
  uint64_t v649;
  char *v650;
  char *v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  char *v656;
  char *v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t *v662;
  unint64_t v663;
  uint64_t v664;
  __int128 v665;
  __int128 v666;
  __int128 v667;
  __int128 v668;
  __int128 v669;
  __int128 v670;
  uint64_t v671;
  void *v672;
  char *v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t (*v676)(void *, uint64_t, uint64_t);
  int v677;
  int v678;
  uint64_t v679;
  int *v680;
  _QWORD *v681;
  uint64_t v682;
  uint64_t v683;
  char *v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  __int128 v691;
  __int128 v692;
  __int128 v693;
  __int128 v694;
  __int128 v695;
  __int128 v696;
  __int128 v697;
  __int128 v698;
  __int128 v699;
  __int128 v700;
  __int128 v701;
  __int128 v702;
  __int128 v703;
  __int128 v704;
  __int128 v705;
  __int128 v706;
  __int128 v707;
  __int128 v708;
  __int128 v709;
  __int128 v710;
  int *v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  _OWORD *v721;
  uint64_t v722;
  _OWORD *v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  __int128 v733;
  __int128 v734;
  __int128 v735;
  __int128 v736;
  __int128 v737;
  __int128 v738;
  __int128 v739;
  __int128 v740;
  __int128 v741;
  __int128 v742;
  __int128 v743;
  __int128 v744;
  uint64_t *v745;
  unint64_t v746;
  uint64_t v747;
  __int128 v748;
  __int128 v749;
  __int128 v750;
  __int128 v751;
  __int128 v752;
  __int128 v753;
  uint64_t *v754;
  unint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  unint64_t v759;
  uint64_t v760;
  uint64_t *v761;
  uint64_t *v762;
  unint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  unint64_t v767;
  uint64_t v768;
  uint64_t *v769;
  uint64_t *v770;
  unint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  unint64_t v775;
  uint64_t v776;
  uint64_t *v777;
  uint64_t *v778;
  unint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  unint64_t v783;
  _QWORD *v784;
  uint64_t v785;
  uint64_t *v786;
  uint64_t *v787;
  unint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  unint64_t v792;
  uint64_t v793;
  uint64_t *v794;
  uint64_t *v795;
  unint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  unint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t (*v806)(uint64_t, uint64_t, uint64_t);
  int v807;
  int v808;
  _QWORD *v809;
  uint64_t v810;
  uint64_t *v811;
  unint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t *v815;
  unint64_t v816;
  unint64_t v817;
  uint64_t v818;
  int v819;
  uint64_t v820;
  uint64_t *v821;
  unint64_t v822;
  _OWORD *v823;
  __int128 v824;
  __int128 v825;
  uint64_t v826;
  uint64_t v827;
  _OWORD *v828;
  unint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t *v832;
  unint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  _OWORD *v837;
  unint64_t v838;
  __int128 v839;
  __int128 v840;
  __int128 v841;
  uint64_t v842;
  uint64_t v843;
  _OWORD *v844;
  unint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t *v848;
  unint64_t v849;
  uint64_t v850;
  uint64_t v851;
  _QWORD *v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  char *v856;
  const void *v857;
  uint64_t v858;
  uint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  _OWORD *v867;
  _OWORD *v868;
  uint64_t v869;
  uint64_t v870;
  int v871;
  uint64_t v872;
  uint64_t *v873;
  unint64_t v874;
  uint64_t v875;
  int v876;
  uint64_t v877;
  _OWORD *v878;
  unint64_t v879;
  __int128 v880;
  __int128 v881;
  __int128 v882;
  __int128 v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t v886;
  unint64_t v887;
  uint64_t v888;
  uint64_t *v889;
  unint64_t v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  unint64_t v894;
  uint64_t v895;
  uint64_t *v896;
  unint64_t v897;
  unint64_t v898;
  uint64_t v899;
  _OWORD *v900;
  uint64_t v901;
  _OWORD *v902;
  uint64_t v903;
  uint64_t *v904;
  unint64_t v905;
  uint64_t v906;
  uint64_t v907;
  _OWORD *v908;
  unint64_t v909;
  __int128 v910;
  __int128 v911;
  __int128 v912;
  __int128 v913;
  __int128 v914;
  __int128 v915;
  uint64_t v916;
  uint64_t v917;
  _OWORD *v918;
  unint64_t v919;
  uint64_t v920;
  uint64_t v921;
  uint64_t v922;
  unint64_t v923;
  uint64_t v924;
  uint64_t *v925;
  unint64_t v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  unint64_t v930;
  uint64_t v931;
  uint64_t *v932;
  unint64_t v933;
  unint64_t v934;
  uint64_t v935;
  uint64_t v936;
  uint64_t v937;
  _QWORD *v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  char *v942;
  char *v943;
  uint64_t v944;
  uint64_t v945;
  uint64_t (*v946)(char *, uint64_t, uint64_t);
  int v947;
  int v948;
  uint64_t v949;
  uint64_t v950;
  _QWORD *v951;
  uint64_t v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  uint64_t *v956;
  uint64_t *v957;
  unint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  unint64_t v962;
  uint64_t v963;
  _QWORD *v964;
  char *v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  _QWORD *v969;
  char *v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v974;
  uint64_t v975;
  unint64_t v976;
  uint64_t v977;
  uint64_t v978;
  unint64_t v979;
  uint64_t v980;
  uint64_t v981;
  unint64_t v982;
  uint64_t v983;
  uint64_t v984;
  unint64_t v985;
  uint64_t v986;
  uint64_t v987;
  unint64_t v988;
  uint64_t v989;
  uint64_t v990;
  unint64_t v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t (*v997)(_QWORD *, uint64_t, int *);
  uint64_t (*v998)(_QWORD *, uint64_t, int *);
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  _QWORD *v1002;
  _QWORD *v1003;
  _QWORD *v1004;
  _QWORD *v1005;
  _QWORD *v1006;
  _QWORD *v1007;
  _QWORD *v1008;
  _QWORD *v1009;
  _QWORD *v1010;
  _QWORD *v1011;
  _QWORD *v1012;
  uint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  _QWORD *v1018;
  _QWORD *v1019;
  _QWORD *v1020;
  _QWORD *v1021;
  int *v1022;
  int *v1023;
  int *v1024;
  int *v1025;
  int *v1026;

  v4 = a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = v4[3];
  if (a1[3] == 1)
  {
    if (v7 != 1)
    {
      a1[2] = v4[2];
      a1[3] = v4[3];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == 1)
  {
    sub_1AD009758((uint64_t)(a1 + 2), &qword_1ED2E3198);
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)v4 + 1);
    goto LABEL_8;
  }
  a1[2] = v4[2];
  a1[3] = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)v4 + v8);
  v11 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  v1026 = v11;
  if (!v14)
  {
    if (v15)
    {
      sub_1AD066230((uint64_t)v9, type metadata accessor for CloudKitShareParticipant);
      goto LABEL_14;
    }
    v998 = v13;
    v20 = v10[1];
    *v9 = *v10;
    v9[1] = v20;
    swift_retain();
    swift_release();
    v9[2] = v10[2];
    v9[3] = v10[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21 = v10[5];
    v9[4] = v10[4];
    v9[5] = v21;
    swift_retain();
    swift_release();
    v22 = v10[7];
    v1022 = a3;
    v1013 = v12;
    if (v9[7] == 1)
    {
      if (v22 != 1)
      {
        v9[6] = v10[6];
        v9[7] = v10[7];
        swift_bridgeObjectRetain();
        goto LABEL_71;
      }
    }
    else
    {
      if (v22 != 1)
      {
        v9[6] = v10[6];
        v9[7] = v10[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_71:
        v120 = v11[6];
        v121 = (uint64_t)v9 + v120;
        v122 = (char *)v10 + v120;
        v123 = *(_QWORD *)((char *)v9 + v120);
        v124 = *(_QWORD *)((char *)v10 + v120);
        v1003 = a1;
        v1007 = v9;
        v1019 = v10;
        if (v123)
        {
          if (!v124)
          {
            sub_1AD311474(v121);
            *(_OWORD *)v121 = *(_OWORD *)v122;
            v135 = *((_OWORD *)v122 + 4);
            v137 = *((_OWORD *)v122 + 1);
            v136 = *((_OWORD *)v122 + 2);
            *(_OWORD *)(v121 + 48) = *((_OWORD *)v122 + 3);
            *(_OWORD *)(v121 + 64) = v135;
            *(_OWORD *)(v121 + 16) = v137;
            *(_OWORD *)(v121 + 32) = v136;
            v139 = *((_OWORD *)v122 + 6);
            v138 = *((_OWORD *)v122 + 7);
            v140 = *((_OWORD *)v122 + 5);
            *(_QWORD *)(v121 + 128) = *((_QWORD *)v122 + 16);
            *(_OWORD *)(v121 + 96) = v139;
            *(_OWORD *)(v121 + 112) = v138;
            *(_OWORD *)(v121 + 80) = v140;
            goto LABEL_121;
          }
          v125 = *((_QWORD *)v122 + 1);
          *(_QWORD *)v121 = v124;
          *(_QWORD *)(v121 + 8) = v125;
          swift_retain();
          swift_release();
          *(_QWORD *)(v121 + 16) = *((_QWORD *)v122 + 2);
          *(_QWORD *)(v121 + 24) = *((_QWORD *)v122 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v126 = *((_QWORD *)v122 + 5);
          *(_QWORD *)(v121 + 32) = *((_QWORD *)v122 + 4);
          *(_QWORD *)(v121 + 40) = v126;
          swift_retain();
          swift_release();
          *(_QWORD *)(v121 + 48) = *((_QWORD *)v122 + 6);
          *(_QWORD *)(v121 + 56) = *((_QWORD *)v122 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v127 = *((_QWORD *)v122 + 9);
          *(_QWORD *)(v121 + 64) = *((_QWORD *)v122 + 8);
          *(_QWORD *)(v121 + 72) = v127;
          swift_retain();
          swift_release();
          *(_QWORD *)(v121 + 80) = *((_QWORD *)v122 + 10);
          *(_QWORD *)(v121 + 88) = *((_QWORD *)v122 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v128 = *((_QWORD *)v122 + 13);
          *(_QWORD *)(v121 + 96) = *((_QWORD *)v122 + 12);
          *(_QWORD *)(v121 + 104) = v128;
          swift_retain();
          swift_release();
          v129 = *((_QWORD *)v122 + 15);
          if (*(_QWORD *)(v121 + 120) != 1)
          {
            if (v129 != 1)
            {
              *(_QWORD *)(v121 + 112) = *((_QWORD *)v122 + 14);
              *(_QWORD *)(v121 + 120) = *((_QWORD *)v122 + 15);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_120;
            }
            sub_1AD009758(v121 + 112, &qword_1ED2E3198);
            goto LABEL_84;
          }
          if (v129 == 1)
          {
LABEL_84:
            *(_OWORD *)(v121 + 112) = *((_OWORD *)v122 + 7);
            goto LABEL_120;
          }
        }
        else
        {
          if (!v124)
          {
            *(_OWORD *)v121 = *(_OWORD *)v122;
            v189 = *((_OWORD *)v122 + 1);
            v190 = *((_OWORD *)v122 + 2);
            v191 = *((_OWORD *)v122 + 4);
            *(_OWORD *)(v121 + 48) = *((_OWORD *)v122 + 3);
            *(_OWORD *)(v121 + 64) = v191;
            *(_OWORD *)(v121 + 16) = v189;
            *(_OWORD *)(v121 + 32) = v190;
            v192 = *((_OWORD *)v122 + 5);
            v193 = *((_OWORD *)v122 + 6);
            v194 = *((_OWORD *)v122 + 7);
            *(_QWORD *)(v121 + 128) = *((_QWORD *)v122 + 16);
            *(_OWORD *)(v121 + 96) = v193;
            *(_OWORD *)(v121 + 112) = v194;
            *(_OWORD *)(v121 + 80) = v192;
            goto LABEL_121;
          }
          v130 = *((_QWORD *)v122 + 1);
          *(_QWORD *)v121 = v124;
          *(_QWORD *)(v121 + 8) = v130;
          *(_QWORD *)(v121 + 16) = *((_QWORD *)v122 + 2);
          *(_QWORD *)(v121 + 24) = *((_QWORD *)v122 + 3);
          v131 = *((_QWORD *)v122 + 5);
          *(_QWORD *)(v121 + 32) = *((_QWORD *)v122 + 4);
          *(_QWORD *)(v121 + 40) = v131;
          *(_QWORD *)(v121 + 48) = *((_QWORD *)v122 + 6);
          *(_QWORD *)(v121 + 56) = *((_QWORD *)v122 + 7);
          v132 = *((_QWORD *)v122 + 9);
          *(_QWORD *)(v121 + 64) = *((_QWORD *)v122 + 8);
          *(_QWORD *)(v121 + 72) = v132;
          *(_QWORD *)(v121 + 80) = *((_QWORD *)v122 + 10);
          *(_QWORD *)(v121 + 88) = *((_QWORD *)v122 + 11);
          v133 = *((_QWORD *)v122 + 13);
          *(_QWORD *)(v121 + 96) = *((_QWORD *)v122 + 12);
          *(_QWORD *)(v121 + 104) = v133;
          v134 = *((_QWORD *)v122 + 15);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (v134 == 1)
          {
            *(_OWORD *)(v121 + 112) = *((_OWORD *)v122 + 7);
LABEL_120:
            *(_QWORD *)(v121 + 128) = *((_QWORD *)v122 + 16);
LABEL_121:
            v995 = type metadata accessor for CloudKitUserIdentity(0);
            v195 = *(int *)(v995 + 20);
            v196 = (void *)(v121 + v195);
            v197 = &v122[v195];
            v198 = sub_1AD63AE2C();
            v199 = *(_QWORD *)(v198 - 8);
            v200 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v199 + 48);
            v201 = v200(v196, 1, v198);
            v202 = v200(v197, 1, v198);
            if (v201)
            {
              if (!v202)
              {
                (*(void (**)(void *, char *, uint64_t))(v199 + 16))(v196, v197, v198);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v196, 0, 1, v198);
                goto LABEL_127;
              }
            }
            else
            {
              if (!v202)
              {
                (*(void (**)(void *, char *, uint64_t))(v199 + 24))(v196, v197, v198);
LABEL_127:
                v204 = v1019;
                v205 = (int *)v995;
                v206 = *(int *)(v995 + 24);
                v207 = v121 + v206;
                v208 = &v122[v206];
                v209 = *(_QWORD *)(v121 + v206);
                v210 = *(_QWORD *)&v122[v206];
                if (v209)
                {
                  if (v210)
                  {
                    v211 = *((_QWORD *)v208 + 1);
                    *(_QWORD *)v207 = v210;
                    *(_QWORD *)(v207 + 8) = v211;
                    swift_retain();
                    swift_release();
                    v212 = *((_QWORD *)v208 + 3);
                    if (*(_QWORD *)(v207 + 24) == 1)
                    {
                      if (v212 != 1)
                      {
                        *(_QWORD *)(v207 + 16) = *((_QWORD *)v208 + 2);
                        *(_QWORD *)(v207 + 24) = *((_QWORD *)v208 + 3);
                        swift_bridgeObjectRetain();
                        goto LABEL_150;
                      }
                    }
                    else
                    {
                      if (v212 != 1)
                      {
                        *(_QWORD *)(v207 + 16) = *((_QWORD *)v208 + 2);
                        *(_QWORD *)(v207 + 24) = *((_QWORD *)v208 + 3);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
LABEL_150:
                        v242 = *((_QWORD *)v208 + 5);
                        *(_QWORD *)(v207 + 32) = *((_QWORD *)v208 + 4);
                        *(_QWORD *)(v207 + 40) = v242;
                        swift_retain();
                        swift_release();
                        v243 = *((_QWORD *)v208 + 7);
                        if (*(_QWORD *)(v207 + 56) == 1)
                        {
                          if (v243 != 1)
                          {
                            *(_QWORD *)(v207 + 48) = *((_QWORD *)v208 + 6);
                            *(_QWORD *)(v207 + 56) = *((_QWORD *)v208 + 7);
                            swift_bridgeObjectRetain();
                            goto LABEL_157;
                          }
                        }
                        else
                        {
                          if (v243 != 1)
                          {
                            *(_QWORD *)(v207 + 48) = *((_QWORD *)v208 + 6);
                            *(_QWORD *)(v207 + 56) = *((_QWORD *)v208 + 7);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
LABEL_157:
                            v244 = (_OWORD *)(v207 + 64);
                            v246 = v208 + 64;
                            v245 = *((_QWORD *)v208 + 8);
                            if (*(_QWORD *)(v207 + 64))
                            {
                              if (!v245)
                              {
                                sub_1AD311474(v207 + 64);
                                *v244 = *v246;
                                v256 = *((_OWORD *)v208 + 8);
                                v258 = *((_OWORD *)v208 + 5);
                                v257 = *((_OWORD *)v208 + 6);
                                *(_OWORD *)(v207 + 112) = *((_OWORD *)v208 + 7);
                                *(_OWORD *)(v207 + 128) = v256;
                                *(_OWORD *)(v207 + 80) = v258;
                                *(_OWORD *)(v207 + 96) = v257;
                                v260 = *((_OWORD *)v208 + 10);
                                v259 = *((_OWORD *)v208 + 11);
                                v261 = *((_OWORD *)v208 + 9);
                                *(_QWORD *)(v207 + 192) = *((_QWORD *)v208 + 24);
                                *(_OWORD *)(v207 + 160) = v260;
                                *(_OWORD *)(v207 + 176) = v259;
                                *(_OWORD *)(v207 + 144) = v261;
                                goto LABEL_180;
                              }
                              v247 = *((_QWORD *)v208 + 9);
                              *(_QWORD *)(v207 + 64) = v245;
                              *(_QWORD *)(v207 + 72) = v247;
                              swift_retain();
                              swift_release();
                              *(_QWORD *)(v207 + 80) = *((_QWORD *)v208 + 10);
                              *(_QWORD *)(v207 + 88) = *((_QWORD *)v208 + 11);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              v248 = *((_QWORD *)v208 + 13);
                              *(_QWORD *)(v207 + 96) = *((_QWORD *)v208 + 12);
                              *(_QWORD *)(v207 + 104) = v248;
                              swift_retain();
                              swift_release();
                              *(_QWORD *)(v207 + 112) = *((_QWORD *)v208 + 14);
                              *(_QWORD *)(v207 + 120) = *((_QWORD *)v208 + 15);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              v249 = *((_QWORD *)v208 + 17);
                              *(_QWORD *)(v207 + 128) = *((_QWORD *)v208 + 16);
                              *(_QWORD *)(v207 + 136) = v249;
                              swift_retain();
                              swift_release();
                              *(_QWORD *)(v207 + 144) = *((_QWORD *)v208 + 18);
                              *(_QWORD *)(v207 + 152) = *((_QWORD *)v208 + 19);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              v250 = *((_QWORD *)v208 + 21);
                              *(_QWORD *)(v207 + 160) = *((_QWORD *)v208 + 20);
                              *(_QWORD *)(v207 + 168) = v250;
                              swift_retain();
                              swift_release();
                              v251 = *((_QWORD *)v208 + 23);
                              if (*(_QWORD *)(v207 + 184) == 1)
                              {
                                if (v251 != 1)
                                {
                                  *(_QWORD *)(v207 + 176) = *((_QWORD *)v208 + 22);
                                  *(_QWORD *)(v207 + 184) = *((_QWORD *)v208 + 23);
                                  swift_bridgeObjectRetain();
                                  goto LABEL_179;
                                }
                              }
                              else
                              {
                                if (v251 != 1)
                                {
                                  *(_QWORD *)(v207 + 176) = *((_QWORD *)v208 + 22);
                                  *(_QWORD *)(v207 + 184) = *((_QWORD *)v208 + 23);
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  goto LABEL_179;
                                }
                                sub_1AD009758(v207 + 176, &qword_1ED2E3198);
                              }
                              *(_OWORD *)(v207 + 176) = *((_OWORD *)v208 + 11);
                              goto LABEL_179;
                            }
                            if (!v245)
                            {
                              *v244 = *v246;
                              v271 = *((_OWORD *)v208 + 5);
                              v272 = *((_OWORD *)v208 + 6);
                              v273 = *((_OWORD *)v208 + 8);
                              *(_OWORD *)(v207 + 112) = *((_OWORD *)v208 + 7);
                              *(_OWORD *)(v207 + 128) = v273;
                              *(_OWORD *)(v207 + 80) = v271;
                              *(_OWORD *)(v207 + 96) = v272;
                              v274 = *((_OWORD *)v208 + 9);
                              v275 = *((_OWORD *)v208 + 10);
                              v276 = *((_OWORD *)v208 + 11);
                              *(_QWORD *)(v207 + 192) = *((_QWORD *)v208 + 24);
                              *(_OWORD *)(v207 + 160) = v275;
                              *(_OWORD *)(v207 + 176) = v276;
                              *(_OWORD *)(v207 + 144) = v274;
                              goto LABEL_180;
                            }
                            v252 = *((_QWORD *)v208 + 9);
                            *(_QWORD *)(v207 + 64) = v245;
                            *(_QWORD *)(v207 + 72) = v252;
                            *(_QWORD *)(v207 + 80) = *((_QWORD *)v208 + 10);
                            *(_QWORD *)(v207 + 88) = *((_QWORD *)v208 + 11);
                            v253 = *((_QWORD *)v208 + 13);
                            *(_QWORD *)(v207 + 96) = *((_QWORD *)v208 + 12);
                            *(_QWORD *)(v207 + 104) = v253;
                            *(_QWORD *)(v207 + 112) = *((_QWORD *)v208 + 14);
                            *(_QWORD *)(v207 + 120) = *((_QWORD *)v208 + 15);
                            v254 = *((_QWORD *)v208 + 17);
                            *(_QWORD *)(v207 + 128) = *((_QWORD *)v208 + 16);
                            *(_QWORD *)(v207 + 136) = v254;
                            *(_QWORD *)(v207 + 144) = *((_QWORD *)v208 + 18);
                            *(_QWORD *)(v207 + 152) = *((_QWORD *)v208 + 19);
                            v255 = *((_QWORD *)v208 + 21);
                            *(_QWORD *)(v207 + 160) = *((_QWORD *)v208 + 20);
                            *(_QWORD *)(v207 + 168) = v255;
                            v993 = *((_QWORD *)v208 + 23);
                            swift_retain();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            if (v993 == 1)
                            {
                              *(_OWORD *)(v207 + 176) = *((_OWORD *)v208 + 11);
                            }
                            else
                            {
                              *(_QWORD *)(v207 + 176) = *((_QWORD *)v208 + 22);
                              *(_QWORD *)(v207 + 184) = *((_QWORD *)v208 + 23);
                              swift_bridgeObjectRetain();
                            }
                            v204 = v1019;
LABEL_179:
                            *(_QWORD *)(v207 + 192) = *((_QWORD *)v208 + 24);
LABEL_180:
                            *(_BYTE *)(v207 + 200) = v208[200];
                            v277 = (uint64_t *)(v208 + 208);
                            v278 = *((_QWORD *)v208 + 27);
                            if (*(_QWORD *)(v207 + 216) >> 60 == 15)
                            {
                              if (v278 >> 60 != 15)
                              {
                                v279 = *v277;
                                sub_1AD0040A0(v279, *((_QWORD *)v208 + 27));
                                *(_QWORD *)(v207 + 208) = v279;
                                *(_QWORD *)(v207 + 216) = v278;
LABEL_187:
                                a1 = v1003;
                                v11 = v1026;
                                v205 = (int *)v995;
LABEL_188:
                                *(_QWORD *)(v121 + v205[7]) = *(_QWORD *)&v122[v205[7]];
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                v283 = v205[8];
                                v284 = (uint64_t *)(v121 + v283);
                                v285 = (uint64_t *)&v122[v283];
                                v286 = *(_QWORD *)&v122[v283 + 8];
                                if (*(_QWORD *)(v121 + v283 + 8) >> 60 == 15)
                                {
                                  if (v286 >> 60 != 15)
                                  {
                                    v287 = *v285;
                                    sub_1AD0040A0(v287, v286);
                                    *v284 = v287;
                                    v284[1] = v286;
                                    goto LABEL_195;
                                  }
                                }
                                else
                                {
                                  if (v286 >> 60 != 15)
                                  {
                                    v288 = *v285;
                                    sub_1AD0040A0(v288, v286);
                                    v289 = *v284;
                                    v290 = v284[1];
                                    *v284 = v288;
                                    v284[1] = v286;
                                    sub_1AD00412C(v289, v290);
LABEL_195:
                                    v291 = v205[9];
                                    v292 = (uint64_t *)(v121 + v291);
                                    v293 = (uint64_t *)&v122[v291];
                                    v294 = *(_QWORD *)&v122[v291 + 8];
                                    if (*(_QWORD *)(v121 + v291 + 8) >> 60 == 15)
                                    {
                                      if (v294 >> 60 != 15)
                                      {
                                        v295 = *v293;
                                        sub_1AD0040A0(v295, v294);
                                        *v292 = v295;
                                        v292[1] = v294;
                                        goto LABEL_202;
                                      }
                                    }
                                    else
                                    {
                                      if (v294 >> 60 != 15)
                                      {
                                        v296 = *v293;
                                        sub_1AD0040A0(v296, v294);
                                        v297 = *v292;
                                        v298 = v292[1];
                                        *v292 = v296;
                                        v292[1] = v294;
                                        sub_1AD00412C(v297, v298);
LABEL_202:
                                        *(_BYTE *)(v121 + v205[10]) = v122[v205[10]];
                                        *(_BYTE *)(v121 + v205[11]) = v122[v205[11]];
                                        v299 = v205[12];
                                        v300 = (uint64_t *)(v121 + v299);
                                        v301 = (uint64_t *)&v122[v299];
                                        v302 = *(_QWORD *)&v122[v299 + 8];
                                        if (*(_QWORD *)(v121 + v299 + 8) >> 60 == 15)
                                        {
                                          if (v302 >> 60 != 15)
                                          {
                                            v303 = *v301;
                                            sub_1AD0040A0(v303, v302);
                                            *v300 = v303;
                                            v300[1] = v302;
                                            goto LABEL_209;
                                          }
                                        }
                                        else
                                        {
                                          if (v302 >> 60 != 15)
                                          {
                                            v304 = *v301;
                                            sub_1AD0040A0(v304, v302);
                                            v305 = *v300;
                                            v306 = v300[1];
                                            *v300 = v304;
                                            v300[1] = v302;
                                            sub_1AD00412C(v305, v306);
LABEL_209:
                                            v307 = v1007;
                                            *(_QWORD *)(v121 + v205[13]) = *(_QWORD *)&v122[v205[13]];
                                            *((_BYTE *)v1007 + v11[7]) = *((_BYTE *)v204 + v11[7]);
                                            *((_BYTE *)v1007 + v11[8]) = *((_BYTE *)v204 + v11[8]);
                                            *((_BYTE *)v1007 + v11[9]) = *((_BYTE *)v204 + v11[9]);
                                            *((_BYTE *)v1007 + v11[10]) = *((_BYTE *)v204 + v11[10]);
                                            *((_BYTE *)v1007 + v11[11]) = *((_BYTE *)v204 + v11[11]);
                                            *((_BYTE *)v1007 + v11[12]) = *((_BYTE *)v204 + v11[12]);
                                            *((_BYTE *)v1007 + v11[13]) = *((_BYTE *)v204 + v11[13]);
                                            *((_BYTE *)v1007 + v11[14]) = *((_BYTE *)v204 + v11[14]);
                                            v308 = v11[15];
                                            v309 = (_QWORD *)((char *)v1007 + v308);
                                            v310 = (_QWORD *)((char *)v204 + v308);
                                            v311 = *(_QWORD *)((char *)v204 + v308 + 8);
                                            if (*(_QWORD *)((char *)v1007 + v308 + 8) >> 60 == 15)
                                            {
                                              if (v311 >> 60 != 15)
                                              {
                                                v312 = *v310;
                                                sub_1AD0040A0(v312, v311);
                                                *v309 = v312;
                                                v309[1] = v311;
                                                goto LABEL_216;
                                              }
                                            }
                                            else
                                            {
                                              if (v311 >> 60 != 15)
                                              {
                                                v313 = *v310;
                                                sub_1AD0040A0(v313, v311);
                                                v314 = *v309;
                                                v315 = v309[1];
                                                *v309 = v313;
                                                v309[1] = v311;
                                                sub_1AD00412C(v314, v315);
LABEL_216:
                                                v316 = v11[16];
                                                v317 = (_QWORD *)((char *)v1007 + v316);
                                                v318 = (_QWORD *)((char *)v204 + v316);
                                                v319 = *(_QWORD *)((char *)v204 + v316 + 8);
                                                if (*(_QWORD *)((char *)v1007 + v316 + 8) >> 60 == 15)
                                                {
                                                  if (v319 >> 60 != 15)
                                                  {
                                                    v320 = *v318;
                                                    sub_1AD0040A0(v320, v319);
                                                    *v317 = v320;
                                                    v317[1] = v319;
                                                    goto LABEL_223;
                                                  }
                                                }
                                                else
                                                {
                                                  if (v319 >> 60 != 15)
                                                  {
                                                    v321 = *v318;
                                                    sub_1AD0040A0(v321, v319);
                                                    v322 = *v317;
                                                    v323 = v317[1];
                                                    *v317 = v321;
                                                    v317[1] = v319;
                                                    sub_1AD00412C(v322, v323);
LABEL_223:
                                                    *((_BYTE *)v1007 + v11[17]) = *((_BYTE *)v204 + v11[17]);
                                                    *((_BYTE *)v1007 + v11[18]) = *((_BYTE *)v204 + v11[18]);
                                                    v324 = v11[19];
                                                    v325 = (uint64_t)v1007 + v324;
                                                    v326 = (uint64_t)v204 + v324;
                                                    v327 = type metadata accessor for CloudKitSharingToken();
                                                    v328 = *(_QWORD *)(v327 - 8);
                                                    v329 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v328 + 48);
                                                    v330 = v329(v325, 1, v327);
                                                    v331 = v329(v326, 1, v327);
                                                    if (v330)
                                                    {
                                                      if (!v331)
                                                      {
                                                        v996 = v327;
                                                        v1011 = v4;
                                                        *(_DWORD *)v325 = *(_DWORD *)v326;
                                                        *(_QWORD *)(v325 + 8) = *(_QWORD *)(v326 + 8);
                                                        *(_QWORD *)(v325 + 16) = *(_QWORD *)(v326 + 16);
                                                        v332 = *(_QWORD *)(v326 + 32);
                                                        *(_QWORD *)(v325 + 24) = *(_QWORD *)(v326 + 24);
                                                        *(_QWORD *)(v325 + 32) = v332;
                                                        v333 = (uint64_t *)(v326 + 40);
                                                        v334 = *(_QWORD *)(v326 + 48);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_retain();
                                                        if (v334 >> 60 == 11 || v334 >> 60 == 15)
                                                        {
                                                          *(_OWORD *)(v325 + 40) = *(_OWORD *)v333;
                                                          if (*(_QWORD *)(v326 + 72))
                                                          {
LABEL_228:
                                                            *(_DWORD *)(v325 + 56) = *(_DWORD *)(v326 + 56);
                                                            v335 = *(_DWORD *)(v326 + 60);
                                                            *(_BYTE *)(v325 + 64) = *(_BYTE *)(v326 + 64);
                                                            *(_DWORD *)(v325 + 60) = v335;
                                                            v336 = *(_QWORD *)(v326 + 80);
                                                            *(_QWORD *)(v325 + 72) = *(_QWORD *)(v326 + 72);
                                                            *(_QWORD *)(v325 + 80) = v336;
                                                            v337 = (uint64_t *)(v326 + 88);
                                                            v338 = *(_QWORD *)(v326 + 96);
                                                            swift_retain();
                                                            if (v338 >> 60 != 15)
                                                            {
                                                              v346 = *v337;
                                                              sub_1AD0040A0(v346, v338);
                                                              *(_QWORD *)(v325 + 88) = v346;
                                                              *(_QWORD *)(v325 + 96) = v338;
LABEL_242:
                                                              v349 = *(_QWORD *)(v326 + 112);
                                                              *(_QWORD *)(v325 + 104) = *(_QWORD *)(v326 + 104);
                                                              *(_QWORD *)(v325 + 112) = v349;
                                                              v350 = (_OWORD *)(v326 + 120);
                                                              v351 = *(_QWORD *)(v326 + 128);
                                                              swift_retain();
                                                              if (v351 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v325 + 120) = *v350;
                                                              }
                                                              else
                                                              {
                                                                v352 = *(_QWORD *)v350;
                                                                sub_1AD0040A0(v352, v351);
                                                                *(_QWORD *)(v325 + 120) = v352;
                                                                *(_QWORD *)(v325 + 128) = v351;
                                                              }
                                                              v353 = *(_QWORD *)(v326 + 144);
                                                              *(_QWORD *)(v325 + 136) = *(_QWORD *)(v326 + 136);
                                                              *(_QWORD *)(v325 + 144) = v353;
                                                              v354 = (uint64_t *)(v326 + 152);
                                                              v355 = *(_QWORD *)(v326 + 160);
                                                              swift_retain();
                                                              if (v355 >> 60 == 11 || v355 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v325 + 152) = *(_OWORD *)v354;
                                                              }
                                                              else
                                                              {
                                                                v356 = *v354;
                                                                sub_1AD0040A0(*v354, v355);
                                                                *(_QWORD *)(v325 + 152) = v356;
                                                                *(_QWORD *)(v325 + 160) = v355;
                                                              }
                                                              v357 = *(_QWORD *)(v326 + 168);
                                                              if (v357)
                                                              {
                                                                v358 = *(_QWORD *)(v326 + 176);
                                                                *(_QWORD *)(v325 + 168) = v357;
                                                                *(_QWORD *)(v325 + 176) = v358;
                                                                v359 = (_OWORD *)(v326 + 184);
                                                                v360 = *(_QWORD *)(v326 + 192);
                                                                swift_retain();
                                                                if (v360 >> 60 == 15)
                                                                {
                                                                  *(_OWORD *)(v325 + 184) = *v359;
                                                                }
                                                                else
                                                                {
                                                                  v364 = *(_QWORD *)v359;
                                                                  sub_1AD0040A0(v364, v360);
                                                                  *(_QWORD *)(v325 + 184) = v364;
                                                                  *(_QWORD *)(v325 + 192) = v360;
                                                                }
                                                                *(_DWORD *)(v325 + 200) = *(_DWORD *)(v326 + 200);
                                                                v365 = *(_QWORD *)(v326 + 216);
                                                                *(_QWORD *)(v325 + 208) = *(_QWORD *)(v326 + 208);
                                                                *(_QWORD *)(v325 + 216) = v365;
                                                                v366 = (_OWORD *)(v326 + 224);
                                                                v367 = *(_QWORD *)(v326 + 232);
                                                                swift_retain();
                                                                if (v367 >> 60 == 15)
                                                                {
                                                                  *(_OWORD *)(v325 + 224) = *v366;
                                                                }
                                                                else
                                                                {
                                                                  v368 = *(_QWORD *)v366;
                                                                  sub_1AD0040A0(v368, v367);
                                                                  *(_QWORD *)(v325 + 224) = v368;
                                                                  *(_QWORD *)(v325 + 232) = v367;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                *(_OWORD *)(v325 + 168) = *(_OWORD *)(v326 + 168);
                                                                v361 = *(_OWORD *)(v326 + 184);
                                                                v362 = *(_OWORD *)(v326 + 200);
                                                                v363 = *(_OWORD *)(v326 + 216);
                                                                *(_QWORD *)(v325 + 232) = *(_QWORD *)(v326 + 232);
                                                                *(_OWORD *)(v325 + 200) = v362;
                                                                *(_OWORD *)(v325 + 216) = v363;
                                                                *(_OWORD *)(v325 + 184) = v361;
                                                              }
                                                              *(_QWORD *)(v325 + 240) = *(_QWORD *)(v326 + 240);
                                                              v369 = *(_QWORD *)(v326 + 256);
                                                              *(_QWORD *)(v325 + 248) = *(_QWORD *)(v326 + 248);
                                                              *(_QWORD *)(v325 + 256) = v369;
                                                              v370 = (uint64_t *)(v326 + 264);
                                                              v371 = *(_QWORD *)(v326 + 272);
                                                              swift_bridgeObjectRetain();
                                                              swift_retain();
                                                              v372 = a1;
                                                              if (v371 >> 60 == 11 || v371 >> 60 == 15)
                                                              {
                                                                *(_OWORD *)(v325 + 264) = *(_OWORD *)v370;
                                                              }
                                                              else
                                                              {
                                                                v373 = *v370;
                                                                sub_1AD0040A0(*v370, v371);
                                                                *(_QWORD *)(v325 + 264) = v373;
                                                                *(_QWORD *)(v325 + 272) = v371;
                                                              }
                                                              v11 = v1026;
                                                              v374 = *(int *)(v996 + 24);
                                                              v375 = (_QWORD *)(v325 + v374);
                                                              v376 = v326 + v374;
                                                              v377 = *(_QWORD *)(v326 + v374 + 8);
                                                              *v375 = *(_QWORD *)(v326 + v374);
                                                              v375[1] = v377;
                                                              swift_retain();
                                                              v378 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                            + 28);
                                                              v379 = (char *)v375 + v378;
                                                              v380 = (const void *)(v376 + v378);
                                                              v381 = sub_1AD63AF28();
                                                              v382 = *(_QWORD *)(v381 - 8);
                                                              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
                                                              {
                                                                v383 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                memcpy(v379, v380, *(_QWORD *)(*(_QWORD *)(v383 - 8) + 64));
                                                              }
                                                              else
                                                              {
                                                                (*(void (**)(char *, const void *, uint64_t))(v382 + 16))(v379, v380, v381);
                                                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v382 + 56))(v379, 0, 1, v381);
                                                              }
                                                              a1 = v372;
                                                              v307 = v1007;
                                                              v4 = v1011;
                                                              v384 = *(int *)(v996 + 28);
                                                              v385 = v325 + v384;
                                                              v386 = v326 + v384;
                                                              v387 = *(_QWORD *)(v326 + v384 + 8);
                                                              *(_QWORD *)v385 = *(_QWORD *)(v326 + v384);
                                                              *(_QWORD *)(v385 + 8) = v387;
                                                              v388 = *(_QWORD *)(v326 + v384 + 24);
                                                              swift_retain();
                                                              if (v388 == 1)
                                                              {
                                                                *(_OWORD *)(v385 + 16) = *(_OWORD *)(v386 + 16);
                                                              }
                                                              else
                                                              {
                                                                *(_QWORD *)(v385 + 16) = *(_QWORD *)(v386 + 16);
                                                                *(_QWORD *)(v385 + 24) = *(_QWORD *)(v386 + 24);
                                                                swift_bridgeObjectRetain();
                                                              }
                                                              a3 = v1022;
                                                              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v328 + 56))(v325, 0, 1, v996);
LABEL_358:
                                                              v478 = v11[20];
                                                              v479 = (_QWORD *)((char *)v307 + v478);
                                                              v480 = (_QWORD *)((char *)v1019 + v478);
                                                              v481 = *(_QWORD *)((char *)v1019 + v478 + 8);
                                                              if (*(_QWORD *)((char *)v307 + v478 + 8) >> 60 == 15)
                                                              {
                                                                if (v481 >> 60 != 15)
                                                                {
                                                                  v482 = *v480;
                                                                  sub_1AD0040A0(v482, v481);
                                                                  *v479 = v482;
                                                                  v479[1] = v481;
LABEL_365:
                                                                  v12 = v1013;
                                                                  v13 = v998;
                                                                  *((_BYTE *)v307 + v11[21]) = *((_BYTE *)v1019 + v11[21]);
                                                                  *((_BYTE *)v307 + v11[22]) = *((_BYTE *)v1019 + v11[22]);
                                                                  *((_BYTE *)v307 + v11[23]) = *((_BYTE *)v1019 + v11[23]);
                                                                  goto LABEL_366;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                if (v481 >> 60 != 15)
                                                                {
                                                                  v483 = *v480;
                                                                  sub_1AD0040A0(v483, v481);
                                                                  v484 = *v479;
                                                                  v485 = v479[1];
                                                                  *v479 = v483;
                                                                  v479[1] = v481;
                                                                  sub_1AD00412C(v484, v485);
                                                                  goto LABEL_365;
                                                                }
                                                                sub_1AD007EC0((uint64_t)v479);
                                                              }
                                                              *(_OWORD *)v479 = *(_OWORD *)v480;
                                                              goto LABEL_365;
                                                            }
                                                            v339 = (_OWORD *)(v325 + 88);
                                                            v340 = *(_OWORD *)v337;
LABEL_241:
                                                            *v339 = v340;
                                                            goto LABEL_242;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          v347 = *v333;
                                                          sub_1AD0040A0(*v333, v334);
                                                          *(_QWORD *)(v325 + 40) = v347;
                                                          *(_QWORD *)(v325 + 48) = v334;
                                                          if (*(_QWORD *)(v326 + 72))
                                                            goto LABEL_228;
                                                        }
                                                        v339 = (_OWORD *)(v325 + 56);
                                                        v340 = *(_OWORD *)(v326 + 56);
                                                        v348 = *(_OWORD *)(v326 + 88);
                                                        *(_OWORD *)(v325 + 72) = *(_OWORD *)(v326 + 72);
                                                        *(_OWORD *)(v325 + 88) = v348;
                                                        goto LABEL_241;
                                                      }
LABEL_232:
                                                      v341 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                                                      memcpy((void *)v325, (const void *)v326, *(_QWORD *)(*(_QWORD *)(v341 - 8) + 64));
                                                      a3 = v1022;
                                                      goto LABEL_358;
                                                    }
                                                    if (v331)
                                                    {
                                                      sub_1AD066230(v325, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                                                      goto LABEL_232;
                                                    }
                                                    *(_DWORD *)v325 = *(_DWORD *)v326;
                                                    *(_QWORD *)(v325 + 8) = *(_QWORD *)(v326 + 8);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(_QWORD *)(v325 + 16) = *(_QWORD *)(v326 + 16);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    v342 = *(_QWORD *)(v326 + 32);
                                                    *(_QWORD *)(v325 + 24) = *(_QWORD *)(v326 + 24);
                                                    *(_QWORD *)(v325 + 32) = v342;
                                                    swift_retain();
                                                    swift_release();
                                                    v343 = (uint64_t *)(v326 + 40);
                                                    v344 = *(_QWORD *)(v326 + 48);
                                                    v345 = v344 & 0xF000000000000000;
                                                    if (*(_QWORD *)(v325 + 48) >> 60 == 11)
                                                    {
                                                      if (v345 == 0xB000000000000000)
                                                        goto LABEL_273;
LABEL_269:
                                                      if (v344 >> 60 != 15)
                                                      {
                                                        v389 = *v343;
                                                        sub_1AD0040A0(v389, *(_QWORD *)(v326 + 48));
                                                        *(_QWORD *)(v325 + 40) = v389;
                                                        *(_QWORD *)(v325 + 48) = v344;
                                                        goto LABEL_274;
                                                      }
                                                      goto LABEL_273;
                                                    }
                                                    if (v345 == 0xB000000000000000)
                                                    {
                                                      sub_1AD009758(v325 + 40, &qword_1ED2E3250);
                                                    }
                                                    else
                                                    {
                                                      if (*(_QWORD *)(v325 + 48) >> 60 == 15)
                                                        goto LABEL_269;
                                                      if (v344 >> 60 != 15)
                                                      {
                                                        v974 = *v343;
                                                        sub_1AD0040A0(v974, *(_QWORD *)(v326 + 48));
                                                        v975 = *(_QWORD *)(v325 + 40);
                                                        v976 = *(_QWORD *)(v325 + 48);
                                                        *(_QWORD *)(v325 + 40) = v974;
                                                        *(_QWORD *)(v325 + 48) = v344;
                                                        sub_1AD00412C(v975, v976);
LABEL_274:
                                                        v390 = (_OWORD *)(v325 + 56);
                                                        v391 = (_OWORD *)(v326 + 56);
                                                        v392 = *(_QWORD *)(v326 + 72);
                                                        if (*(_QWORD *)(v325 + 72))
                                                        {
                                                          v393 = v327;
                                                          if (!v392)
                                                          {
                                                            sub_1AD0AEC58(v325 + 56);
                                                            v404 = *(_OWORD *)(v326 + 72);
                                                            v403 = *(_OWORD *)(v326 + 88);
                                                            *v390 = *v391;
                                                            *(_OWORD *)(v325 + 72) = v404;
                                                            *(_OWORD *)(v325 + 88) = v403;
                                                            goto LABEL_290;
                                                          }
                                                          *(_DWORD *)(v325 + 56) = *(_DWORD *)(v326 + 56);
                                                          v394 = *(_DWORD *)(v326 + 60);
                                                          *(_BYTE *)(v325 + 64) = *(_BYTE *)(v326 + 64);
                                                          *(_DWORD *)(v325 + 60) = v394;
                                                          v395 = *(_QWORD *)(v326 + 80);
                                                          *(_QWORD *)(v325 + 72) = *(_QWORD *)(v326 + 72);
                                                          *(_QWORD *)(v325 + 80) = v395;
                                                          swift_retain();
                                                          swift_release();
                                                          v390 = (_OWORD *)(v325 + 88);
                                                          v396 = (uint64_t *)(v326 + 88);
                                                          v397 = *(_QWORD *)(v326 + 96);
                                                          if (*(_QWORD *)(v325 + 96) >> 60 == 15)
                                                          {
                                                            if (v397 >> 60 != 15)
                                                            {
                                                              v398 = *v396;
                                                              sub_1AD0040A0(v398, *(_QWORD *)(v326 + 96));
                                                              *(_QWORD *)(v325 + 88) = v398;
                                                              *(_QWORD *)(v325 + 96) = v397;
                                                              goto LABEL_290;
                                                            }
                                                            goto LABEL_285;
                                                          }
                                                          if (v397 >> 60 == 15)
                                                          {
                                                            sub_1AD007EC0(v325 + 88);
LABEL_285:
                                                            v405 = *(_OWORD *)v396;
LABEL_287:
                                                            *v390 = v405;
                                                            goto LABEL_290;
                                                          }
                                                          v408 = *v396;
                                                          sub_1AD0040A0(v408, *(_QWORD *)(v326 + 96));
                                                          v409 = *(_QWORD *)(v325 + 88);
                                                          v410 = *(_QWORD *)(v325 + 96);
                                                          *(_QWORD *)(v325 + 88) = v408;
                                                          *(_QWORD *)(v325 + 96) = v397;
                                                          sub_1AD00412C(v409, v410);
                                                        }
                                                        else
                                                        {
                                                          if (!v392)
                                                          {
                                                            v393 = v327;
                                                            v405 = *v391;
                                                            v406 = *(_OWORD *)(v326 + 88);
                                                            *(_OWORD *)(v325 + 72) = *(_OWORD *)(v326 + 72);
                                                            *(_OWORD *)(v325 + 88) = v406;
                                                            goto LABEL_287;
                                                          }
                                                          *(_DWORD *)(v325 + 56) = *(_DWORD *)(v326 + 56);
                                                          v399 = *(_DWORD *)(v326 + 60);
                                                          *(_BYTE *)(v325 + 64) = *(_BYTE *)(v326 + 64);
                                                          *(_DWORD *)(v325 + 60) = v399;
                                                          v400 = *(_QWORD *)(v326 + 80);
                                                          *(_QWORD *)(v325 + 72) = *(_QWORD *)(v326 + 72);
                                                          *(_QWORD *)(v325 + 80) = v400;
                                                          v401 = (_OWORD *)(v326 + 88);
                                                          v402 = *(_QWORD *)(v326 + 96);
                                                          swift_retain();
                                                          v393 = v327;
                                                          if (v402 >> 60 == 15)
                                                          {
                                                            *(_OWORD *)(v325 + 88) = *v401;
                                                          }
                                                          else
                                                          {
                                                            v407 = *(_QWORD *)v401;
                                                            sub_1AD0040A0(v407, v402);
                                                            *(_QWORD *)(v325 + 88) = v407;
                                                            *(_QWORD *)(v325 + 96) = v402;
                                                          }
                                                        }
LABEL_290:
                                                        v411 = *(_QWORD *)(v326 + 112);
                                                        *(_QWORD *)(v325 + 104) = *(_QWORD *)(v326 + 104);
                                                        *(_QWORD *)(v325 + 112) = v411;
                                                        swift_retain();
                                                        swift_release();
                                                        v412 = (uint64_t *)(v326 + 120);
                                                        v413 = *(_QWORD *)(v326 + 128);
                                                        if (*(_QWORD *)(v325 + 128) >> 60 == 15)
                                                        {
                                                          if (v413 >> 60 != 15)
                                                          {
                                                            v414 = *v412;
                                                            sub_1AD0040A0(v414, *(_QWORD *)(v326 + 128));
                                                            *(_QWORD *)(v325 + 120) = v414;
                                                            *(_QWORD *)(v325 + 128) = v413;
                                                            goto LABEL_297;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if (v413 >> 60 != 15)
                                                          {
                                                            v415 = *v412;
                                                            sub_1AD0040A0(v415, *(_QWORD *)(v326 + 128));
                                                            v416 = *(_QWORD *)(v325 + 120);
                                                            v417 = *(_QWORD *)(v325 + 128);
                                                            *(_QWORD *)(v325 + 120) = v415;
                                                            *(_QWORD *)(v325 + 128) = v413;
                                                            sub_1AD00412C(v416, v417);
LABEL_297:
                                                            v418 = *(_QWORD *)(v326 + 144);
                                                            *(_QWORD *)(v325 + 136) = *(_QWORD *)(v326 + 136);
                                                            *(_QWORD *)(v325 + 144) = v418;
                                                            swift_retain();
                                                            swift_release();
                                                            v419 = (uint64_t *)(v326 + 152);
                                                            v420 = *(_QWORD *)(v326 + 160);
                                                            v421 = v420 & 0xF000000000000000;
                                                            if (*(_QWORD *)(v325 + 160) >> 60 == 11)
                                                            {
                                                              if (v421 == 0xB000000000000000)
                                                                goto LABEL_307;
LABEL_303:
                                                              if (v420 >> 60 != 15)
                                                              {
                                                                v422 = *v419;
                                                                sub_1AD0040A0(v422, *(_QWORD *)(v326 + 160));
                                                                *(_QWORD *)(v325 + 152) = v422;
                                                                *(_QWORD *)(v325 + 160) = v420;
                                                                goto LABEL_308;
                                                              }
                                                              goto LABEL_307;
                                                            }
                                                            if (v421 == 0xB000000000000000)
                                                            {
                                                              sub_1AD009758(v325 + 152, &qword_1ED2E3250);
                                                            }
                                                            else
                                                            {
                                                              if (*(_QWORD *)(v325 + 160) >> 60 == 15)
                                                                goto LABEL_303;
                                                              if (v420 >> 60 != 15)
                                                              {
                                                                v977 = *v419;
                                                                sub_1AD0040A0(v977, *(_QWORD *)(v326 + 160));
                                                                v978 = *(_QWORD *)(v325 + 152);
                                                                v979 = *(_QWORD *)(v325 + 160);
                                                                *(_QWORD *)(v325 + 152) = v977;
                                                                *(_QWORD *)(v325 + 160) = v420;
                                                                sub_1AD00412C(v978, v979);
LABEL_308:
                                                                v423 = (_OWORD *)(v325 + 168);
                                                                v425 = (_OWORD *)(v326 + 168);
                                                                v424 = *(_QWORD *)(v326 + 168);
                                                                if (!*(_QWORD *)(v325 + 168))
                                                                {
                                                                  if (v424)
                                                                  {
                                                                    v430 = *(_QWORD *)(v326 + 176);
                                                                    *(_QWORD *)(v325 + 168) = v424;
                                                                    *(_QWORD *)(v325 + 176) = v430;
                                                                    v431 = (_OWORD *)(v326 + 184);
                                                                    v432 = *(_QWORD *)(v326 + 192);
                                                                    swift_retain();
                                                                    if (v432 >> 60 == 15)
                                                                    {
                                                                      *(_OWORD *)(v325 + 184) = *v431;
                                                                    }
                                                                    else
                                                                    {
                                                                      v439 = *(_QWORD *)v431;
                                                                      sub_1AD0040A0(v439, v432);
                                                                      *(_QWORD *)(v325 + 184) = v439;
                                                                      *(_QWORD *)(v325 + 192) = v432;
                                                                    }
                                                                    *(_DWORD *)(v325 + 200) = *(_DWORD *)(v326 + 200);
                                                                    v440 = *(_QWORD *)(v326 + 216);
                                                                    *(_QWORD *)(v325 + 208) = *(_QWORD *)(v326 + 208);
                                                                    *(_QWORD *)(v325 + 216) = v440;
                                                                    v441 = (_OWORD *)(v326 + 224);
                                                                    v442 = *(_QWORD *)(v326 + 232);
                                                                    swift_retain();
                                                                    if (v442 >> 60 == 15)
                                                                    {
                                                                      *(_OWORD *)(v325 + 224) = *v441;
                                                                    }
                                                                    else
                                                                    {
                                                                      v443 = *(_QWORD *)v441;
                                                                      sub_1AD0040A0(v443, v442);
                                                                      *(_QWORD *)(v325 + 224) = v443;
                                                                      *(_QWORD *)(v325 + 232) = v442;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    *v423 = *v425;
                                                                    v436 = *(_OWORD *)(v326 + 184);
                                                                    v437 = *(_OWORD *)(v326 + 200);
                                                                    v438 = *(_OWORD *)(v326 + 216);
                                                                    *(_QWORD *)(v325 + 232) = *(_QWORD *)(v326 + 232);
                                                                    *(_OWORD *)(v325 + 200) = v437;
                                                                    *(_OWORD *)(v325 + 216) = v438;
                                                                    *(_OWORD *)(v325 + 184) = v436;
                                                                  }
                                                                  goto LABEL_333;
                                                                }
                                                                if (!v424)
                                                                {
                                                                  sub_1AD0AEC8C((uint64_t *)(v325 + 168));
                                                                  *v423 = *v425;
                                                                  v434 = *(_OWORD *)(v326 + 200);
                                                                  v433 = *(_OWORD *)(v326 + 216);
                                                                  v435 = *(_OWORD *)(v326 + 184);
                                                                  *(_QWORD *)(v325 + 232) = *(_QWORD *)(v326 + 232);
                                                                  *(_OWORD *)(v325 + 200) = v434;
                                                                  *(_OWORD *)(v325 + 216) = v433;
                                                                  *(_OWORD *)(v325 + 184) = v435;
                                                                  goto LABEL_333;
                                                                }
                                                                v426 = *(_QWORD *)(v326 + 176);
                                                                *(_QWORD *)(v325 + 168) = v424;
                                                                *(_QWORD *)(v325 + 176) = v426;
                                                                swift_retain();
                                                                swift_release();
                                                                v427 = (uint64_t *)(v326 + 184);
                                                                v428 = *(_QWORD *)(v326 + 192);
                                                                if (*(_QWORD *)(v325 + 192) >> 60 == 15)
                                                                {
                                                                  if (v428 >> 60 != 15)
                                                                  {
                                                                    v429 = *v427;
                                                                    sub_1AD0040A0(v429, *(_QWORD *)(v326 + 192));
                                                                    *(_QWORD *)(v325 + 184) = v429;
                                                                    *(_QWORD *)(v325 + 192) = v428;
LABEL_326:
                                                                    *(_DWORD *)(v325 + 200) = *(_DWORD *)(v326 + 200);
                                                                    v447 = *(_QWORD *)(v326 + 216);
                                                                    *(_QWORD *)(v325 + 208) = *(_QWORD *)(v326 + 208);
                                                                    *(_QWORD *)(v325 + 216) = v447;
                                                                    swift_retain();
                                                                    swift_release();
                                                                    v448 = (uint64_t *)(v326 + 224);
                                                                    v449 = *(_QWORD *)(v326 + 232);
                                                                    if (*(_QWORD *)(v325 + 232) >> 60 == 15)
                                                                    {
                                                                      if (v449 >> 60 != 15)
                                                                      {
                                                                        v450 = *v448;
                                                                        sub_1AD0040A0(v450, *(_QWORD *)(v326 + 232));
                                                                        *(_QWORD *)(v325 + 224) = v450;
                                                                        *(_QWORD *)(v325 + 232) = v449;
                                                                        goto LABEL_333;
                                                                      }
                                                                      goto LABEL_331;
                                                                    }
                                                                    if (v449 >> 60 == 15)
                                                                    {
                                                                      sub_1AD007EC0(v325 + 224);
LABEL_331:
                                                                      *(_OWORD *)(v325 + 224) = *(_OWORD *)v448;
                                                                      goto LABEL_333;
                                                                    }
                                                                    v451 = *v448;
                                                                    sub_1AD0040A0(v451, *(_QWORD *)(v326 + 232));
                                                                    v452 = *(_QWORD *)(v325 + 224);
                                                                    v453 = *(_QWORD *)(v325 + 232);
                                                                    *(_QWORD *)(v325 + 224) = v451;
                                                                    *(_QWORD *)(v325 + 232) = v449;
                                                                    sub_1AD00412C(v452, v453);
LABEL_333:
                                                                    *(_QWORD *)(v325 + 240) = *(_QWORD *)(v326 + 240);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    v454 = *(_QWORD *)(v326 + 256);
                                                                    *(_QWORD *)(v325 + 248) = *(_QWORD *)(v326 + 248);
                                                                    *(_QWORD *)(v325 + 256) = v454;
                                                                    swift_retain();
                                                                    swift_release();
                                                                    v455 = (uint64_t *)(v326 + 264);
                                                                    v456 = *(_QWORD *)(v326 + 272);
                                                                    v457 = v456 & 0xF000000000000000;
                                                                    if (*(_QWORD *)(v325 + 272) >> 60 == 11)
                                                                    {
                                                                      if (v457 == 0xB000000000000000)
                                                                        goto LABEL_343;
LABEL_339:
                                                                      if (v456 >> 60 != 15)
                                                                      {
                                                                        v458 = *v455;
                                                                        sub_1AD0040A0(v458, *(_QWORD *)(v326 + 272));
                                                                        *(_QWORD *)(v325 + 264) = v458;
                                                                        *(_QWORD *)(v325 + 272) = v456;
                                                                        goto LABEL_344;
                                                                      }
                                                                      goto LABEL_343;
                                                                    }
                                                                    if (v457 == 0xB000000000000000)
                                                                    {
                                                                      sub_1AD009758(v325 + 264, &qword_1ED2E3250);
                                                                    }
                                                                    else
                                                                    {
                                                                      if (*(_QWORD *)(v325 + 272) >> 60 == 15)
                                                                        goto LABEL_339;
                                                                      if (v456 >> 60 != 15)
                                                                      {
                                                                        v980 = *v455;
                                                                        sub_1AD0040A0(v980, *(_QWORD *)(v326 + 272));
                                                                        v981 = *(_QWORD *)(v325 + 264);
                                                                        v982 = *(_QWORD *)(v325 + 272);
                                                                        *(_QWORD *)(v325 + 264) = v980;
                                                                        *(_QWORD *)(v325 + 272) = v456;
                                                                        sub_1AD00412C(v981, v982);
LABEL_344:
                                                                        v459 = v393;
                                                                        v460 = *(int *)(v393 + 24);
                                                                        v461 = (_QWORD *)(v325 + v460);
                                                                        v462 = v326 + v460;
                                                                        v463 = *(_QWORD *)(v326 + v460 + 8);
                                                                        *v461 = *(_QWORD *)(v326 + v460);
                                                                        v461[1] = v463;
                                                                        swift_retain();
                                                                        swift_release();
                                                                        v464 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                                      + 28);
                                                                        v465 = (char *)v461 + v464;
                                                                        v466 = (char *)(v462 + v464);
                                                                        v467 = sub_1AD63AF28();
                                                                        v468 = *(_QWORD *)(v467 - 8);
                                                                        v469 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v468 + 48);
                                                                        v470 = v469(v465, 1, v467);
                                                                        v471 = v469(v466, 1, v467);
                                                                        if (v470)
                                                                        {
                                                                          if (!v471)
                                                                          {
                                                                            (*(void (**)(char *, char *, uint64_t))(v468 + 16))(v465, v466, v467);
                                                                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v468 + 56))(v465, 0, 1, v467);
                                                                            goto LABEL_350;
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          if (!v471)
                                                                          {
                                                                            (*(void (**)(char *, char *, uint64_t))(v468 + 24))(v465, v466, v467);
LABEL_350:
                                                                            a1 = v1003;
                                                                            v307 = v1007;
                                                                            v473 = *(int *)(v459 + 28);
                                                                            v474 = (_QWORD *)(v325 + v473);
                                                                            v475 = v326 + v473;
                                                                            v476 = *(_QWORD *)(v326 + v473 + 8);
                                                                            *v474 = *(_QWORD *)(v326 + v473);
                                                                            v474[1] = v476;
                                                                            swift_retain();
                                                                            swift_release();
                                                                            v477 = *(_QWORD *)(v475 + 24);
                                                                            if (v474[3] == 1)
                                                                            {
                                                                              if (v477 != 1)
                                                                              {
                                                                                v474[2] = *(_QWORD *)(v475 + 16);
                                                                                v474[3] = *(_QWORD *)(v475 + 24);
                                                                                swift_bridgeObjectRetain();
LABEL_357:
                                                                                a3 = v1022;
                                                                                v11 = v1026;
                                                                                goto LABEL_358;
                                                                              }
                                                                            }
                                                                            else
                                                                            {
                                                                              if (v477 != 1)
                                                                              {
                                                                                v474[2] = *(_QWORD *)(v475 + 16);
                                                                                v474[3] = *(_QWORD *)(v475 + 24);
                                                                                swift_bridgeObjectRetain();
                                                                                swift_bridgeObjectRelease();
                                                                                goto LABEL_357;
                                                                              }
                                                                              sub_1AD009758((uint64_t)(v474 + 2), &qword_1ED2E3198);
                                                                            }
                                                                            *((_OWORD *)v474 + 1) = *(_OWORD *)(v475 + 16);
                                                                            goto LABEL_357;
                                                                          }
                                                                          (*(void (**)(char *, uint64_t))(v468 + 8))(v465, v467);
                                                                        }
                                                                        v472 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                        memcpy(v465, v466, *(_QWORD *)(*(_QWORD *)(v472 - 8) + 64));
                                                                        goto LABEL_350;
                                                                      }
                                                                      sub_1AD007EC0(v325 + 264);
                                                                    }
LABEL_343:
                                                                    *(_OWORD *)(v325 + 264) = *(_OWORD *)v455;
                                                                    goto LABEL_344;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  if (v428 >> 60 != 15)
                                                                  {
                                                                    v444 = *v427;
                                                                    sub_1AD0040A0(v444, *(_QWORD *)(v326 + 192));
                                                                    v445 = *(_QWORD *)(v325 + 184);
                                                                    v446 = *(_QWORD *)(v325 + 192);
                                                                    *(_QWORD *)(v325 + 184) = v444;
                                                                    *(_QWORD *)(v325 + 192) = v428;
                                                                    sub_1AD00412C(v445, v446);
                                                                    goto LABEL_326;
                                                                  }
                                                                  sub_1AD007EC0(v325 + 184);
                                                                }
                                                                *(_OWORD *)(v325 + 184) = *(_OWORD *)v427;
                                                                goto LABEL_326;
                                                              }
                                                              sub_1AD007EC0(v325 + 152);
                                                            }
LABEL_307:
                                                            *(_OWORD *)(v325 + 152) = *(_OWORD *)v419;
                                                            goto LABEL_308;
                                                          }
                                                          sub_1AD007EC0(v325 + 120);
                                                        }
                                                        *(_OWORD *)(v325 + 120) = *(_OWORD *)v412;
                                                        goto LABEL_297;
                                                      }
                                                      sub_1AD007EC0(v325 + 40);
                                                    }
LABEL_273:
                                                    *(_OWORD *)(v325 + 40) = *(_OWORD *)v343;
                                                    goto LABEL_274;
                                                  }
                                                  sub_1AD007EC0((uint64_t)v317);
                                                }
                                                *(_OWORD *)v317 = *(_OWORD *)v318;
                                                goto LABEL_223;
                                              }
                                              sub_1AD007EC0((uint64_t)v309);
                                            }
                                            *(_OWORD *)v309 = *(_OWORD *)v310;
                                            goto LABEL_216;
                                          }
                                          sub_1AD007EC0((uint64_t)v300);
                                        }
                                        *(_OWORD *)v300 = *(_OWORD *)v301;
                                        goto LABEL_209;
                                      }
                                      sub_1AD007EC0((uint64_t)v292);
                                    }
                                    *(_OWORD *)v292 = *(_OWORD *)v293;
                                    goto LABEL_202;
                                  }
                                  sub_1AD007EC0((uint64_t)v284);
                                }
                                *(_OWORD *)v284 = *(_OWORD *)v285;
                                goto LABEL_195;
                              }
                            }
                            else
                            {
                              if (v278 >> 60 != 15)
                              {
                                v280 = *v277;
                                sub_1AD0040A0(v280, *((_QWORD *)v208 + 27));
                                v281 = *(_QWORD *)(v207 + 208);
                                v282 = *(_QWORD *)(v207 + 216);
                                *(_QWORD *)(v207 + 208) = v280;
                                *(_QWORD *)(v207 + 216) = v278;
                                sub_1AD00412C(v281, v282);
                                goto LABEL_187;
                              }
                              sub_1AD007EC0(v207 + 208);
                            }
                            *(_OWORD *)(v207 + 208) = *(_OWORD *)v277;
                            goto LABEL_187;
                          }
                          sub_1AD009758(v207 + 48, &qword_1ED2E3198);
                        }
                        *(_OWORD *)(v207 + 48) = *((_OWORD *)v208 + 3);
                        goto LABEL_157;
                      }
                      sub_1AD009758(v207 + 16, &qword_1ED2E3198);
                    }
                    *(_OWORD *)(v207 + 16) = *((_OWORD *)v208 + 1);
                    goto LABEL_150;
                  }
                  sub_1AD3114A8((_QWORD *)v207);
                  v215 = *((_OWORD *)v208 + 1);
                  *(_OWORD *)v207 = *(_OWORD *)v208;
                  *(_OWORD *)(v207 + 16) = v215;
                  v216 = *((_OWORD *)v208 + 5);
                  v218 = *((_OWORD *)v208 + 2);
                  v217 = *((_OWORD *)v208 + 3);
                  *(_OWORD *)(v207 + 64) = *((_OWORD *)v208 + 4);
                  *(_OWORD *)(v207 + 80) = v216;
                  *(_OWORD *)(v207 + 32) = v218;
                  *(_OWORD *)(v207 + 48) = v217;
                  v219 = *((_OWORD *)v208 + 9);
                  v221 = *((_OWORD *)v208 + 6);
                  v220 = *((_OWORD *)v208 + 7);
                  *(_OWORD *)(v207 + 128) = *((_OWORD *)v208 + 8);
                  *(_OWORD *)(v207 + 144) = v219;
                  *(_OWORD *)(v207 + 96) = v221;
                  *(_OWORD *)(v207 + 112) = v220;
                  v222 = *((_OWORD *)v208 + 13);
                  v224 = *((_OWORD *)v208 + 10);
                  v223 = *((_OWORD *)v208 + 11);
                  *(_OWORD *)(v207 + 192) = *((_OWORD *)v208 + 12);
                  *(_OWORD *)(v207 + 208) = v222;
                  *(_OWORD *)(v207 + 160) = v224;
                  *(_OWORD *)(v207 + 176) = v223;
                }
                else
                {
                  if (v210)
                  {
                    v213 = *((_QWORD *)v208 + 1);
                    *(_QWORD *)v207 = v210;
                    *(_QWORD *)(v207 + 8) = v213;
                    v214 = *((_QWORD *)v208 + 3);
                    swift_retain();
                    if (v214 == 1)
                    {
                      *(_OWORD *)(v207 + 16) = *((_OWORD *)v208 + 1);
                    }
                    else
                    {
                      *(_QWORD *)(v207 + 16) = *((_QWORD *)v208 + 2);
                      *(_QWORD *)(v207 + 24) = *((_QWORD *)v208 + 3);
                      swift_bridgeObjectRetain();
                    }
                    v235 = *((_QWORD *)v208 + 5);
                    *(_QWORD *)(v207 + 32) = *((_QWORD *)v208 + 4);
                    *(_QWORD *)(v207 + 40) = v235;
                    v236 = *((_QWORD *)v208 + 7);
                    swift_retain();
                    if (v236 == 1)
                    {
                      *(_OWORD *)(v207 + 48) = *((_OWORD *)v208 + 3);
                    }
                    else
                    {
                      *(_QWORD *)(v207 + 48) = *((_QWORD *)v208 + 6);
                      *(_QWORD *)(v207 + 56) = *((_QWORD *)v208 + 7);
                      swift_bridgeObjectRetain();
                    }
                    v237 = *((_QWORD *)v208 + 8);
                    if (v237)
                    {
                      v238 = *((_QWORD *)v208 + 9);
                      *(_QWORD *)(v207 + 64) = v237;
                      *(_QWORD *)(v207 + 72) = v238;
                      *(_QWORD *)(v207 + 80) = *((_QWORD *)v208 + 10);
                      *(_QWORD *)(v207 + 88) = *((_QWORD *)v208 + 11);
                      v239 = *((_QWORD *)v208 + 13);
                      *(_QWORD *)(v207 + 96) = *((_QWORD *)v208 + 12);
                      *(_QWORD *)(v207 + 104) = v239;
                      *(_QWORD *)(v207 + 112) = *((_QWORD *)v208 + 14);
                      *(_QWORD *)(v207 + 120) = *((_QWORD *)v208 + 15);
                      v240 = *((_QWORD *)v208 + 17);
                      *(_QWORD *)(v207 + 128) = *((_QWORD *)v208 + 16);
                      *(_QWORD *)(v207 + 136) = v240;
                      *(_QWORD *)(v207 + 144) = *((_QWORD *)v208 + 18);
                      *(_QWORD *)(v207 + 152) = *((_QWORD *)v208 + 19);
                      v241 = *((_QWORD *)v208 + 21);
                      *(_QWORD *)(v207 + 160) = *((_QWORD *)v208 + 20);
                      *(_QWORD *)(v207 + 168) = v241;
                      v992 = *((_QWORD *)v208 + 23);
                      swift_retain();
                      swift_bridgeObjectRetain();
                      swift_retain();
                      swift_bridgeObjectRetain();
                      swift_retain();
                      swift_bridgeObjectRetain();
                      swift_retain();
                      if (v992 == 1)
                      {
                        *(_OWORD *)(v207 + 176) = *((_OWORD *)v208 + 11);
                      }
                      else
                      {
                        *(_QWORD *)(v207 + 176) = *((_QWORD *)v208 + 22);
                        *(_QWORD *)(v207 + 184) = *((_QWORD *)v208 + 23);
                        swift_bridgeObjectRetain();
                      }
                      v204 = v1019;
                      *(_QWORD *)(v207 + 192) = *((_QWORD *)v208 + 24);
                    }
                    else
                    {
                      *(_OWORD *)(v207 + 64) = *((_OWORD *)v208 + 4);
                      v262 = *((_OWORD *)v208 + 5);
                      v263 = *((_OWORD *)v208 + 6);
                      v264 = *((_OWORD *)v208 + 8);
                      *(_OWORD *)(v207 + 112) = *((_OWORD *)v208 + 7);
                      *(_OWORD *)(v207 + 128) = v264;
                      *(_OWORD *)(v207 + 80) = v262;
                      *(_OWORD *)(v207 + 96) = v263;
                      v265 = *((_OWORD *)v208 + 9);
                      v266 = *((_OWORD *)v208 + 10);
                      v267 = *((_OWORD *)v208 + 11);
                      *(_QWORD *)(v207 + 192) = *((_QWORD *)v208 + 24);
                      *(_OWORD *)(v207 + 160) = v266;
                      *(_OWORD *)(v207 + 176) = v267;
                      *(_OWORD *)(v207 + 144) = v265;
                      v204 = v1019;
                    }
                    *(_BYTE *)(v207 + 200) = v208[200];
                    v268 = (uint64_t *)(v208 + 208);
                    v269 = *((_QWORD *)v208 + 27);
                    if (v269 >> 60 == 15)
                    {
                      *(_OWORD *)(v207 + 208) = *(_OWORD *)v268;
                    }
                    else
                    {
                      v270 = *v268;
                      sub_1AD0040A0(*v268, *((_QWORD *)v208 + 27));
                      *(_QWORD *)(v207 + 208) = v270;
                      *(_QWORD *)(v207 + 216) = v269;
                    }
                    goto LABEL_187;
                  }
                  v225 = *((_OWORD *)v208 + 1);
                  *(_OWORD *)v207 = *(_OWORD *)v208;
                  *(_OWORD *)(v207 + 16) = v225;
                  v226 = *((_OWORD *)v208 + 2);
                  v227 = *((_OWORD *)v208 + 3);
                  v228 = *((_OWORD *)v208 + 5);
                  *(_OWORD *)(v207 + 64) = *((_OWORD *)v208 + 4);
                  *(_OWORD *)(v207 + 80) = v228;
                  *(_OWORD *)(v207 + 32) = v226;
                  *(_OWORD *)(v207 + 48) = v227;
                  v229 = *((_OWORD *)v208 + 6);
                  v230 = *((_OWORD *)v208 + 7);
                  v231 = *((_OWORD *)v208 + 9);
                  *(_OWORD *)(v207 + 128) = *((_OWORD *)v208 + 8);
                  *(_OWORD *)(v207 + 144) = v231;
                  *(_OWORD *)(v207 + 96) = v229;
                  *(_OWORD *)(v207 + 112) = v230;
                  v232 = *((_OWORD *)v208 + 10);
                  v233 = *((_OWORD *)v208 + 11);
                  v234 = *((_OWORD *)v208 + 13);
                  *(_OWORD *)(v207 + 192) = *((_OWORD *)v208 + 12);
                  *(_OWORD *)(v207 + 208) = v234;
                  *(_OWORD *)(v207 + 160) = v232;
                  *(_OWORD *)(v207 + 176) = v233;
                }
                a1 = v1003;
                v11 = v1026;
                goto LABEL_188;
              }
              (*(void (**)(void *, uint64_t))(v199 + 8))(v196, v198);
            }
            v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
            memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
            goto LABEL_127;
          }
        }
        *(_QWORD *)(v121 + 112) = *((_QWORD *)v122 + 14);
        *(_QWORD *)(v121 + 120) = *((_QWORD *)v122 + 15);
        swift_bridgeObjectRetain();
        goto LABEL_120;
      }
      sub_1AD009758((uint64_t)(v9 + 6), &qword_1ED2E3198);
    }
    *((_OWORD *)v9 + 3) = *((_OWORD *)v10 + 3);
    goto LABEL_71;
  }
  if (v15)
  {
LABEL_14:
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_366;
  }
  v997 = v13;
  v16 = v10[1];
  *v9 = *v10;
  v9[1] = v16;
  v9[2] = v10[2];
  v9[3] = v10[3];
  v17 = v10[5];
  v9[4] = v10[4];
  v9[5] = v17;
  v18 = v10[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v1010 = v4;
  if (v18 == 1)
  {
    *((_OWORD *)v9 + 3) = *((_OWORD *)v10 + 3);
  }
  else
  {
    v9[6] = v10[6];
    v9[7] = v10[7];
    swift_bridgeObjectRetain();
  }
  v23 = v10;
  v24 = v11[6];
  v25 = (char *)v9 + v24;
  v1018 = v23;
  v1023 = a3;
  v26 = (char *)v23 + v24;
  v27 = *(_QWORD *)((char *)v23 + v24);
  v1014 = v12;
  v1006 = v9;
  if (v27)
  {
    v28 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = v27;
    *((_QWORD *)v25 + 1) = v28;
    *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
    *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
    v29 = *((_QWORD *)v26 + 5);
    *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
    *((_QWORD *)v25 + 5) = v29;
    *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
    *((_QWORD *)v25 + 7) = *((_QWORD *)v26 + 7);
    v30 = *((_QWORD *)v26 + 9);
    *((_QWORD *)v25 + 8) = *((_QWORD *)v26 + 8);
    *((_QWORD *)v25 + 9) = v30;
    *((_QWORD *)v25 + 10) = *((_QWORD *)v26 + 10);
    *((_QWORD *)v25 + 11) = *((_QWORD *)v26 + 11);
    v31 = *((_QWORD *)v26 + 13);
    *((_QWORD *)v25 + 12) = *((_QWORD *)v26 + 12);
    *((_QWORD *)v25 + 13) = v31;
    v32 = *((_QWORD *)v26 + 15);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v32 == 1)
    {
      *((_OWORD *)v25 + 7) = *((_OWORD *)v26 + 7);
    }
    else
    {
      *((_QWORD *)v25 + 14) = *((_QWORD *)v26 + 14);
      *((_QWORD *)v25 + 15) = *((_QWORD *)v26 + 15);
      swift_bridgeObjectRetain();
    }
    *((_QWORD *)v25 + 16) = *((_QWORD *)v26 + 16);
  }
  else
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
    v33 = *((_OWORD *)v26 + 1);
    v34 = *((_OWORD *)v26 + 2);
    v35 = *((_OWORD *)v26 + 4);
    *((_OWORD *)v25 + 3) = *((_OWORD *)v26 + 3);
    *((_OWORD *)v25 + 4) = v35;
    *((_OWORD *)v25 + 1) = v33;
    *((_OWORD *)v25 + 2) = v34;
    v36 = *((_OWORD *)v26 + 5);
    v37 = *((_OWORD *)v26 + 6);
    v38 = *((_OWORD *)v26 + 7);
    *((_QWORD *)v25 + 16) = *((_QWORD *)v26 + 16);
    *((_OWORD *)v25 + 6) = v37;
    *((_OWORD *)v25 + 7) = v38;
    *((_OWORD *)v25 + 5) = v36;
  }
  v39 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v40 = v39[5];
  v41 = &v25[v40];
  v42 = &v26[v40];
  v43 = sub_1AD63AE2C();
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v46 = v1006;
  v47 = v39[6];
  v48 = &v25[v47];
  v49 = &v26[v47];
  v50 = *(_QWORD *)&v26[v47];
  if (v50)
  {
    v51 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = v50;
    *((_QWORD *)v48 + 1) = v51;
    v52 = *((_QWORD *)v49 + 3);
    swift_retain();
    if (v52 == 1)
    {
      *((_OWORD *)v48 + 1) = *((_OWORD *)v49 + 1);
    }
    else
    {
      *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
      *((_QWORD *)v48 + 3) = *((_QWORD *)v49 + 3);
      swift_bridgeObjectRetain();
    }
    v63 = *((_QWORD *)v49 + 5);
    *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
    *((_QWORD *)v48 + 5) = v63;
    v64 = *((_QWORD *)v49 + 7);
    swift_retain();
    if (v64 == 1)
    {
      *((_OWORD *)v48 + 3) = *((_OWORD *)v49 + 3);
    }
    else
    {
      *((_QWORD *)v48 + 6) = *((_QWORD *)v49 + 6);
      *((_QWORD *)v48 + 7) = *((_QWORD *)v49 + 7);
      swift_bridgeObjectRetain();
    }
    v65 = *((_QWORD *)v49 + 8);
    if (v65)
    {
      v1002 = a1;
      v66 = *((_QWORD *)v49 + 9);
      *((_QWORD *)v48 + 8) = v65;
      *((_QWORD *)v48 + 9) = v66;
      *((_QWORD *)v48 + 10) = *((_QWORD *)v49 + 10);
      *((_QWORD *)v48 + 11) = *((_QWORD *)v49 + 11);
      v67 = *((_QWORD *)v49 + 13);
      *((_QWORD *)v48 + 12) = *((_QWORD *)v49 + 12);
      *((_QWORD *)v48 + 13) = v67;
      *((_QWORD *)v48 + 14) = *((_QWORD *)v49 + 14);
      *((_QWORD *)v48 + 15) = *((_QWORD *)v49 + 15);
      v68 = *((_QWORD *)v49 + 17);
      *((_QWORD *)v48 + 16) = *((_QWORD *)v49 + 16);
      *((_QWORD *)v48 + 17) = v68;
      *((_QWORD *)v48 + 18) = *((_QWORD *)v49 + 18);
      *((_QWORD *)v48 + 19) = *((_QWORD *)v49 + 19);
      v69 = *((_QWORD *)v49 + 21);
      *((_QWORD *)v48 + 20) = *((_QWORD *)v49 + 20);
      *((_QWORD *)v48 + 21) = v69;
      v994 = *((_QWORD *)v49 + 23);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v994 == 1)
      {
        *((_OWORD *)v48 + 11) = *((_OWORD *)v49 + 11);
      }
      else
      {
        *((_QWORD *)v48 + 22) = *((_QWORD *)v49 + 22);
        *((_QWORD *)v48 + 23) = *((_QWORD *)v49 + 23);
        swift_bridgeObjectRetain();
      }
      a1 = v1002;
      v46 = v1006;
      *((_QWORD *)v48 + 24) = *((_QWORD *)v49 + 24);
    }
    else
    {
      *((_OWORD *)v48 + 4) = *((_OWORD *)v49 + 4);
      v70 = *((_OWORD *)v49 + 5);
      v71 = *((_OWORD *)v49 + 6);
      v72 = *((_OWORD *)v49 + 8);
      *((_OWORD *)v48 + 7) = *((_OWORD *)v49 + 7);
      *((_OWORD *)v48 + 8) = v72;
      *((_OWORD *)v48 + 5) = v70;
      *((_OWORD *)v48 + 6) = v71;
      v73 = *((_OWORD *)v49 + 9);
      v74 = *((_OWORD *)v49 + 10);
      v75 = *((_OWORD *)v49 + 11);
      *((_QWORD *)v48 + 24) = *((_QWORD *)v49 + 24);
      *((_OWORD *)v48 + 10) = v74;
      *((_OWORD *)v48 + 11) = v75;
      *((_OWORD *)v48 + 9) = v73;
    }
    v48[200] = v49[200];
    v76 = (uint64_t *)(v49 + 208);
    v77 = *((_QWORD *)v49 + 27);
    if (v77 >> 60 == 15)
    {
      *((_OWORD *)v48 + 13) = *(_OWORD *)v76;
    }
    else
    {
      v78 = *v76;
      sub_1AD0040A0(*v76, v77);
      *((_QWORD *)v48 + 26) = v78;
      *((_QWORD *)v48 + 27) = v77;
    }
  }
  else
  {
    v53 = *((_OWORD *)v49 + 1);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v53;
    v54 = *((_OWORD *)v49 + 2);
    v55 = *((_OWORD *)v49 + 3);
    v56 = *((_OWORD *)v49 + 5);
    *((_OWORD *)v48 + 4) = *((_OWORD *)v49 + 4);
    *((_OWORD *)v48 + 5) = v56;
    *((_OWORD *)v48 + 2) = v54;
    *((_OWORD *)v48 + 3) = v55;
    v57 = *((_OWORD *)v49 + 6);
    v58 = *((_OWORD *)v49 + 7);
    v59 = *((_OWORD *)v49 + 9);
    *((_OWORD *)v48 + 8) = *((_OWORD *)v49 + 8);
    *((_OWORD *)v48 + 9) = v59;
    *((_OWORD *)v48 + 6) = v57;
    *((_OWORD *)v48 + 7) = v58;
    v60 = *((_OWORD *)v49 + 10);
    v61 = *((_OWORD *)v49 + 11);
    v62 = *((_OWORD *)v49 + 13);
    *((_OWORD *)v48 + 12) = *((_OWORD *)v49 + 12);
    *((_OWORD *)v48 + 13) = v62;
    *((_OWORD *)v48 + 10) = v60;
    *((_OWORD *)v48 + 11) = v61;
  }
  v11 = v1026;
  *(_QWORD *)&v25[v39[7]] = *(_QWORD *)&v26[v39[7]];
  v79 = v39[8];
  v80 = &v25[v79];
  v81 = &v26[v79];
  v82 = *(_QWORD *)&v26[v79 + 8];
  swift_bridgeObjectRetain();
  if (v82 >> 60 == 15)
  {
    *(_OWORD *)v80 = *(_OWORD *)v81;
  }
  else
  {
    v83 = *(_QWORD *)v81;
    sub_1AD0040A0(v83, v82);
    *(_QWORD *)v80 = v83;
    *((_QWORD *)v80 + 1) = v82;
  }
  v84 = v39[9];
  v85 = &v25[v84];
  v86 = &v26[v84];
  v87 = *((_QWORD *)v86 + 1);
  if (v87 >> 60 == 15)
  {
    *(_OWORD *)v85 = *(_OWORD *)v86;
  }
  else
  {
    v88 = *(_QWORD *)v86;
    sub_1AD0040A0(*(_QWORD *)v86, *((_QWORD *)v86 + 1));
    *(_QWORD *)v85 = v88;
    *((_QWORD *)v85 + 1) = v87;
  }
  v25[v39[10]] = v26[v39[10]];
  v25[v39[11]] = v26[v39[11]];
  v89 = v39[12];
  v90 = &v25[v89];
  v91 = &v26[v89];
  v92 = *((_QWORD *)v91 + 1);
  if (v92 >> 60 == 15)
  {
    *(_OWORD *)v90 = *(_OWORD *)v91;
  }
  else
  {
    v93 = *(_QWORD *)v91;
    sub_1AD0040A0(*(_QWORD *)v91, *((_QWORD *)v91 + 1));
    *(_QWORD *)v90 = v93;
    *((_QWORD *)v90 + 1) = v92;
  }
  *(_QWORD *)&v25[v39[13]] = *(_QWORD *)&v26[v39[13]];
  *((_BYTE *)v46 + v1026[7]) = *((_BYTE *)v1018 + v1026[7]);
  *((_BYTE *)v46 + v1026[8]) = *((_BYTE *)v1018 + v1026[8]);
  *((_BYTE *)v46 + v1026[9]) = *((_BYTE *)v1018 + v1026[9]);
  *((_BYTE *)v46 + v1026[10]) = *((_BYTE *)v1018 + v1026[10]);
  *((_BYTE *)v46 + v1026[11]) = *((_BYTE *)v1018 + v1026[11]);
  *((_BYTE *)v46 + v1026[12]) = *((_BYTE *)v1018 + v1026[12]);
  *((_BYTE *)v46 + v1026[13]) = *((_BYTE *)v1018 + v1026[13]);
  *((_BYTE *)v46 + v1026[14]) = *((_BYTE *)v1018 + v1026[14]);
  v94 = v1026[15];
  v95 = (uint64_t)v46 + v94;
  v96 = (_QWORD *)((char *)v1018 + v94);
  v97 = v96[1];
  if (v97 >> 60 == 15)
  {
    *(_OWORD *)v95 = *(_OWORD *)v96;
  }
  else
  {
    v98 = *v96;
    sub_1AD0040A0(*v96, v96[1]);
    *(_QWORD *)v95 = v98;
    *(_QWORD *)(v95 + 8) = v97;
  }
  v4 = v1010;
  v99 = v1026[16];
  v100 = (uint64_t)v46 + v99;
  v101 = (_QWORD *)((char *)v1018 + v99);
  v102 = v101[1];
  if (v102 >> 60 == 15)
  {
    *(_OWORD *)v100 = *(_OWORD *)v101;
  }
  else
  {
    v103 = *v101;
    sub_1AD0040A0(*v101, v101[1]);
    *(_QWORD *)v100 = v103;
    *(_QWORD *)(v100 + 8) = v102;
  }
  *((_BYTE *)v46 + v1026[17]) = *((_BYTE *)v1018 + v1026[17]);
  *((_BYTE *)v46 + v1026[18]) = *((_BYTE *)v1018 + v1026[18]);
  v104 = v1026[19];
  v105 = (char *)v46 + v104;
  v106 = (char *)v1018 + v104;
  v107 = type metadata accessor for CloudKitSharingToken();
  v108 = *(_QWORD *)(v107 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
  {
    *(_DWORD *)v105 = *(_DWORD *)v106;
    *((_QWORD *)v105 + 1) = *((_QWORD *)v106 + 1);
    *((_QWORD *)v105 + 2) = *((_QWORD *)v106 + 2);
    v111 = *((_QWORD *)v106 + 4);
    *((_QWORD *)v105 + 3) = *((_QWORD *)v106 + 3);
    *((_QWORD *)v105 + 4) = v111;
    v112 = (uint64_t *)(v106 + 40);
    v113 = *((_QWORD *)v106 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v113 >> 60 == 11 || v113 >> 60 == 15)
    {
      *(_OWORD *)(v105 + 40) = *(_OWORD *)v112;
      if (*((_QWORD *)v106 + 9))
      {
LABEL_68:
        *((_DWORD *)v105 + 14) = *((_DWORD *)v106 + 14);
        v114 = *((_DWORD *)v106 + 15);
        v105[64] = v106[64];
        *((_DWORD *)v105 + 15) = v114;
        v115 = *((_QWORD *)v106 + 10);
        *((_QWORD *)v105 + 9) = *((_QWORD *)v106 + 9);
        *((_QWORD *)v105 + 10) = v115;
        v116 = (uint64_t *)(v106 + 88);
        v117 = *((_QWORD *)v106 + 12);
        swift_retain();
        if (v117 >> 60 != 15)
        {
          v141 = *v116;
          sub_1AD0040A0(v141, v117);
          *((_QWORD *)v105 + 11) = v141;
          *((_QWORD *)v105 + 12) = v117;
LABEL_88:
          v144 = *((_QWORD *)v106 + 14);
          *((_QWORD *)v105 + 13) = *((_QWORD *)v106 + 13);
          *((_QWORD *)v105 + 14) = v144;
          v145 = v106 + 120;
          v146 = *((_QWORD *)v106 + 16);
          swift_retain();
          if (v146 >> 60 == 15)
          {
            *(_OWORD *)(v105 + 120) = *v145;
          }
          else
          {
            v147 = *(_QWORD *)v145;
            sub_1AD0040A0(v147, v146);
            *((_QWORD *)v105 + 15) = v147;
            *((_QWORD *)v105 + 16) = v146;
          }
          v148 = *((_QWORD *)v106 + 18);
          *((_QWORD *)v105 + 17) = *((_QWORD *)v106 + 17);
          *((_QWORD *)v105 + 18) = v148;
          v149 = (uint64_t *)(v106 + 152);
          v150 = *((_QWORD *)v106 + 20);
          swift_retain();
          if (v150 >> 60 == 11 || v150 >> 60 == 15)
          {
            *(_OWORD *)(v105 + 152) = *(_OWORD *)v149;
          }
          else
          {
            v151 = *v149;
            sub_1AD0040A0(*v149, v150);
            *((_QWORD *)v105 + 19) = v151;
            *((_QWORD *)v105 + 20) = v150;
          }
          v152 = *((_QWORD *)v106 + 21);
          if (v152)
          {
            v153 = *((_QWORD *)v106 + 22);
            *((_QWORD *)v105 + 21) = v152;
            *((_QWORD *)v105 + 22) = v153;
            v154 = v106 + 184;
            v155 = *((_QWORD *)v106 + 24);
            swift_retain();
            if (v155 >> 60 == 15)
            {
              *(_OWORD *)(v105 + 184) = *v154;
            }
            else
            {
              v159 = *(_QWORD *)v154;
              sub_1AD0040A0(v159, v155);
              *((_QWORD *)v105 + 23) = v159;
              *((_QWORD *)v105 + 24) = v155;
            }
            *((_DWORD *)v105 + 50) = *((_DWORD *)v106 + 50);
            v160 = *((_QWORD *)v106 + 27);
            *((_QWORD *)v105 + 26) = *((_QWORD *)v106 + 26);
            *((_QWORD *)v105 + 27) = v160;
            v161 = v106 + 224;
            v162 = *((_QWORD *)v106 + 29);
            swift_retain();
            if (v162 >> 60 == 15)
            {
              *((_OWORD *)v105 + 14) = *v161;
            }
            else
            {
              v163 = *(_QWORD *)v161;
              sub_1AD0040A0(v163, v162);
              *((_QWORD *)v105 + 28) = v163;
              *((_QWORD *)v105 + 29) = v162;
            }
          }
          else
          {
            *(_OWORD *)(v105 + 168) = *(_OWORD *)(v106 + 168);
            v156 = *(_OWORD *)(v106 + 184);
            v157 = *(_OWORD *)(v106 + 200);
            v158 = *(_OWORD *)(v106 + 216);
            *((_QWORD *)v105 + 29) = *((_QWORD *)v106 + 29);
            *(_OWORD *)(v105 + 200) = v157;
            *(_OWORD *)(v105 + 216) = v158;
            *(_OWORD *)(v105 + 184) = v156;
          }
          *((_QWORD *)v105 + 30) = *((_QWORD *)v106 + 30);
          v164 = *((_QWORD *)v106 + 32);
          *((_QWORD *)v105 + 31) = *((_QWORD *)v106 + 31);
          *((_QWORD *)v105 + 32) = v164;
          v165 = (uint64_t *)(v106 + 264);
          v166 = *((_QWORD *)v106 + 34);
          swift_bridgeObjectRetain();
          swift_retain();
          if (v166 >> 60 == 11 || v166 >> 60 == 15)
          {
            v167 = a1;
            *(_OWORD *)(v105 + 264) = *(_OWORD *)v165;
          }
          else
          {
            v167 = a1;
            v168 = *v165;
            sub_1AD0040A0(*v165, v166);
            *((_QWORD *)v105 + 33) = v168;
            *((_QWORD *)v105 + 34) = v166;
          }
          v169 = *(int *)(v107 + 24);
          v170 = &v105[v169];
          v171 = &v106[v169];
          v172 = *(_QWORD *)&v106[v169 + 8];
          *(_QWORD *)v170 = *(_QWORD *)&v106[v169];
          *((_QWORD *)v170 + 1) = v172;
          swift_retain();
          v173 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
          v174 = &v170[v173];
          v175 = &v171[v173];
          v176 = sub_1AD63AF28();
          v177 = *(_QWORD *)(v176 - 8);
          v11 = v1026;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v175, 1, v176))
          {
            v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v174, v175, v176);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v174, 0, 1, v176);
          }
          v179 = *(int *)(v107 + 28);
          v180 = &v105[v179];
          v181 = &v106[v179];
          v182 = *(_QWORD *)&v106[v179 + 8];
          *(_QWORD *)v180 = *(_QWORD *)&v106[v179];
          *((_QWORD *)v180 + 1) = v182;
          v183 = *(_QWORD *)&v106[v179 + 24];
          swift_retain();
          a1 = v167;
          if (v183 == 1)
          {
            *((_OWORD *)v180 + 1) = *((_OWORD *)v181 + 1);
          }
          else
          {
            *((_QWORD *)v180 + 2) = *((_QWORD *)v181 + 2);
            *((_QWORD *)v180 + 3) = *((_QWORD *)v181 + 3);
            swift_bridgeObjectRetain();
          }
          v110 = v1006;
          v4 = v1010;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
          a3 = v1023;
          v12 = v1014;
          goto LABEL_114;
        }
        v118 = v105 + 88;
        v119 = *(_OWORD *)v116;
LABEL_87:
        *v118 = v119;
        goto LABEL_88;
      }
    }
    else
    {
      v142 = *v112;
      sub_1AD0040A0(*v112, v113);
      *((_QWORD *)v105 + 5) = v142;
      *((_QWORD *)v105 + 6) = v113;
      if (*((_QWORD *)v106 + 9))
        goto LABEL_68;
    }
    v118 = v105 + 56;
    v119 = *(_OWORD *)(v106 + 56);
    v143 = *(_OWORD *)(v106 + 88);
    *(_OWORD *)(v105 + 72) = *(_OWORD *)(v106 + 72);
    *(_OWORD *)(v105 + 88) = v143;
    goto LABEL_87;
  }
  v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
  a3 = v1023;
  v12 = v1014;
  v110 = v1006;
LABEL_114:
  v184 = v11[20];
  v185 = (uint64_t)v110 + v184;
  v186 = (_QWORD *)((char *)v1018 + v184);
  v187 = v186[1];
  if (v187 >> 60 == 15)
  {
    *(_OWORD *)v185 = *(_OWORD *)v186;
  }
  else
  {
    v188 = *v186;
    sub_1AD0040A0(*v186, v186[1]);
    *(_QWORD *)v185 = v188;
    *(_QWORD *)(v185 + 8) = v187;
  }
  v13 = v997;
  *((_BYTE *)v110 + v11[21]) = *((_BYTE *)v1018 + v11[21]);
  *((_BYTE *)v110 + v11[22]) = *((_BYTE *)v1018 + v11[22]);
  *((_BYTE *)v110 + v11[23]) = *((_BYTE *)v1018 + v11[23]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v110, 0, 1, v11);
LABEL_366:
  v486 = a3[6];
  v487 = (_QWORD *)((char *)a1 + v486);
  v488 = (_QWORD *)((char *)v4 + v486);
  v489 = v13((_QWORD *)((char *)a1 + v486), 1, v11);
  v490 = v13(v488, 1, v11);
  if (!v489)
  {
    if (v490)
    {
      sub_1AD066230((uint64_t)v487, type metadata accessor for CloudKitShareParticipant);
      goto LABEL_372;
    }
    v495 = v488[1];
    *v487 = *v488;
    v487[1] = v495;
    swift_retain();
    swift_release();
    v487[2] = v488[2];
    v487[3] = v488[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v496 = v488[5];
    v487[4] = v488[4];
    v487[5] = v496;
    swift_retain();
    swift_release();
    v497 = v488[7];
    v1024 = a3;
    if (v487[7] == 1)
    {
      if (v497 != 1)
      {
        v487[6] = v488[6];
        v487[7] = v488[7];
        swift_bridgeObjectRetain();
        goto LABEL_429;
      }
    }
    else
    {
      if (v497 != 1)
      {
        v487[6] = v488[6];
        v487[7] = v488[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_429:
        v596 = v11[6];
        v597 = (uint64_t)v487 + v596;
        v598 = (char *)v488 + v596;
        v599 = *(_QWORD *)((char *)v487 + v596);
        v600 = *(_QWORD *)((char *)v488 + v596);
        v1005 = a1;
        v1009 = v487;
        v1021 = v488;
        if (v599)
        {
          if (!v600)
          {
            sub_1AD311474(v597);
            *(_OWORD *)v597 = *(_OWORD *)v598;
            v611 = *((_OWORD *)v598 + 4);
            v613 = *((_OWORD *)v598 + 1);
            v612 = *((_OWORD *)v598 + 2);
            *(_OWORD *)(v597 + 48) = *((_OWORD *)v598 + 3);
            *(_OWORD *)(v597 + 64) = v611;
            *(_OWORD *)(v597 + 16) = v613;
            *(_OWORD *)(v597 + 32) = v612;
            v615 = *((_OWORD *)v598 + 6);
            v614 = *((_OWORD *)v598 + 7);
            v616 = *((_OWORD *)v598 + 5);
            *(_QWORD *)(v597 + 128) = *((_QWORD *)v598 + 16);
            *(_OWORD *)(v597 + 96) = v615;
            *(_OWORD *)(v597 + 112) = v614;
            *(_OWORD *)(v597 + 80) = v616;
            goto LABEL_479;
          }
          v601 = *((_QWORD *)v598 + 1);
          *(_QWORD *)v597 = v600;
          *(_QWORD *)(v597 + 8) = v601;
          swift_retain();
          swift_release();
          *(_QWORD *)(v597 + 16) = *((_QWORD *)v598 + 2);
          *(_QWORD *)(v597 + 24) = *((_QWORD *)v598 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v602 = *((_QWORD *)v598 + 5);
          *(_QWORD *)(v597 + 32) = *((_QWORD *)v598 + 4);
          *(_QWORD *)(v597 + 40) = v602;
          swift_retain();
          swift_release();
          *(_QWORD *)(v597 + 48) = *((_QWORD *)v598 + 6);
          *(_QWORD *)(v597 + 56) = *((_QWORD *)v598 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v603 = *((_QWORD *)v598 + 9);
          *(_QWORD *)(v597 + 64) = *((_QWORD *)v598 + 8);
          *(_QWORD *)(v597 + 72) = v603;
          swift_retain();
          swift_release();
          *(_QWORD *)(v597 + 80) = *((_QWORD *)v598 + 10);
          *(_QWORD *)(v597 + 88) = *((_QWORD *)v598 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v604 = *((_QWORD *)v598 + 13);
          *(_QWORD *)(v597 + 96) = *((_QWORD *)v598 + 12);
          *(_QWORD *)(v597 + 104) = v604;
          swift_retain();
          swift_release();
          v605 = *((_QWORD *)v598 + 15);
          if (*(_QWORD *)(v597 + 120) != 1)
          {
            if (v605 != 1)
            {
              *(_QWORD *)(v597 + 112) = *((_QWORD *)v598 + 14);
              *(_QWORD *)(v597 + 120) = *((_QWORD *)v598 + 15);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_478;
            }
            sub_1AD009758(v597 + 112, &qword_1ED2E3198);
            goto LABEL_442;
          }
          if (v605 == 1)
          {
LABEL_442:
            *(_OWORD *)(v597 + 112) = *((_OWORD *)v598 + 7);
            goto LABEL_478;
          }
        }
        else
        {
          if (!v600)
          {
            *(_OWORD *)v597 = *(_OWORD *)v598;
            v665 = *((_OWORD *)v598 + 1);
            v666 = *((_OWORD *)v598 + 2);
            v667 = *((_OWORD *)v598 + 4);
            *(_OWORD *)(v597 + 48) = *((_OWORD *)v598 + 3);
            *(_OWORD *)(v597 + 64) = v667;
            *(_OWORD *)(v597 + 16) = v665;
            *(_OWORD *)(v597 + 32) = v666;
            v668 = *((_OWORD *)v598 + 5);
            v669 = *((_OWORD *)v598 + 6);
            v670 = *((_OWORD *)v598 + 7);
            *(_QWORD *)(v597 + 128) = *((_QWORD *)v598 + 16);
            *(_OWORD *)(v597 + 96) = v669;
            *(_OWORD *)(v597 + 112) = v670;
            *(_OWORD *)(v597 + 80) = v668;
            goto LABEL_479;
          }
          v606 = *((_QWORD *)v598 + 1);
          *(_QWORD *)v597 = v600;
          *(_QWORD *)(v597 + 8) = v606;
          *(_QWORD *)(v597 + 16) = *((_QWORD *)v598 + 2);
          *(_QWORD *)(v597 + 24) = *((_QWORD *)v598 + 3);
          v607 = *((_QWORD *)v598 + 5);
          *(_QWORD *)(v597 + 32) = *((_QWORD *)v598 + 4);
          *(_QWORD *)(v597 + 40) = v607;
          *(_QWORD *)(v597 + 48) = *((_QWORD *)v598 + 6);
          *(_QWORD *)(v597 + 56) = *((_QWORD *)v598 + 7);
          v608 = *((_QWORD *)v598 + 9);
          *(_QWORD *)(v597 + 64) = *((_QWORD *)v598 + 8);
          *(_QWORD *)(v597 + 72) = v608;
          *(_QWORD *)(v597 + 80) = *((_QWORD *)v598 + 10);
          *(_QWORD *)(v597 + 88) = *((_QWORD *)v598 + 11);
          v609 = *((_QWORD *)v598 + 13);
          *(_QWORD *)(v597 + 96) = *((_QWORD *)v598 + 12);
          *(_QWORD *)(v597 + 104) = v609;
          v610 = *((_QWORD *)v598 + 15);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (v610 == 1)
          {
            *(_OWORD *)(v597 + 112) = *((_OWORD *)v598 + 7);
LABEL_478:
            *(_QWORD *)(v597 + 128) = *((_QWORD *)v598 + 16);
LABEL_479:
            v1016 = type metadata accessor for CloudKitUserIdentity(0);
            v671 = *(int *)(v1016 + 20);
            v672 = (void *)(v597 + v671);
            v673 = &v598[v671];
            v674 = sub_1AD63AE2C();
            v675 = *(_QWORD *)(v674 - 8);
            v676 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v675 + 48);
            v677 = v676(v672, 1, v674);
            v678 = v676(v673, 1, v674);
            if (v677)
            {
              if (!v678)
              {
                (*(void (**)(void *, char *, uint64_t))(v675 + 16))(v672, v673, v674);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v675 + 56))(v672, 0, 1, v674);
                goto LABEL_485;
              }
            }
            else
            {
              if (!v678)
              {
                (*(void (**)(void *, char *, uint64_t))(v675 + 24))(v672, v673, v674);
LABEL_485:
                v680 = (int *)v1016;
                v681 = v1021;
                v682 = *(int *)(v1016 + 24);
                v683 = v597 + v682;
                v684 = &v598[v682];
                v685 = *(_QWORD *)(v597 + v682);
                v686 = *(_QWORD *)&v598[v682];
                if (v685)
                {
                  if (v686)
                  {
                    v687 = *((_QWORD *)v684 + 1);
                    *(_QWORD *)v683 = v686;
                    *(_QWORD *)(v683 + 8) = v687;
                    swift_retain();
                    swift_release();
                    v688 = *((_QWORD *)v684 + 3);
                    if (*(_QWORD *)(v683 + 24) == 1)
                    {
                      if (v688 != 1)
                      {
                        *(_QWORD *)(v683 + 16) = *((_QWORD *)v684 + 2);
                        *(_QWORD *)(v683 + 24) = *((_QWORD *)v684 + 3);
                        swift_bridgeObjectRetain();
                        goto LABEL_508;
                      }
                    }
                    else
                    {
                      if (v688 != 1)
                      {
                        *(_QWORD *)(v683 + 16) = *((_QWORD *)v684 + 2);
                        *(_QWORD *)(v683 + 24) = *((_QWORD *)v684 + 3);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
LABEL_508:
                        v719 = *((_QWORD *)v684 + 5);
                        *(_QWORD *)(v683 + 32) = *((_QWORD *)v684 + 4);
                        *(_QWORD *)(v683 + 40) = v719;
                        swift_retain();
                        swift_release();
                        v720 = *((_QWORD *)v684 + 7);
                        if (*(_QWORD *)(v683 + 56) == 1)
                        {
                          if (v720 != 1)
                          {
                            *(_QWORD *)(v683 + 48) = *((_QWORD *)v684 + 6);
                            *(_QWORD *)(v683 + 56) = *((_QWORD *)v684 + 7);
                            swift_bridgeObjectRetain();
                            goto LABEL_515;
                          }
                        }
                        else
                        {
                          if (v720 != 1)
                          {
                            *(_QWORD *)(v683 + 48) = *((_QWORD *)v684 + 6);
                            *(_QWORD *)(v683 + 56) = *((_QWORD *)v684 + 7);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
LABEL_515:
                            v721 = (_OWORD *)(v683 + 64);
                            v723 = v684 + 64;
                            v722 = *((_QWORD *)v684 + 8);
                            if (*(_QWORD *)(v683 + 64))
                            {
                              if (!v722)
                              {
                                sub_1AD311474(v683 + 64);
                                *v721 = *v723;
                                v733 = *((_OWORD *)v684 + 8);
                                v735 = *((_OWORD *)v684 + 5);
                                v734 = *((_OWORD *)v684 + 6);
                                *(_OWORD *)(v683 + 112) = *((_OWORD *)v684 + 7);
                                *(_OWORD *)(v683 + 128) = v733;
                                *(_OWORD *)(v683 + 80) = v735;
                                *(_OWORD *)(v683 + 96) = v734;
                                v737 = *((_OWORD *)v684 + 10);
                                v736 = *((_OWORD *)v684 + 11);
                                v738 = *((_OWORD *)v684 + 9);
                                *(_QWORD *)(v683 + 192) = *((_QWORD *)v684 + 24);
                                *(_OWORD *)(v683 + 160) = v737;
                                *(_OWORD *)(v683 + 176) = v736;
                                *(_OWORD *)(v683 + 144) = v738;
                                goto LABEL_538;
                              }
                              v724 = *((_QWORD *)v684 + 9);
                              *(_QWORD *)(v683 + 64) = v722;
                              *(_QWORD *)(v683 + 72) = v724;
                              swift_retain();
                              swift_release();
                              *(_QWORD *)(v683 + 80) = *((_QWORD *)v684 + 10);
                              *(_QWORD *)(v683 + 88) = *((_QWORD *)v684 + 11);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              v725 = *((_QWORD *)v684 + 13);
                              *(_QWORD *)(v683 + 96) = *((_QWORD *)v684 + 12);
                              *(_QWORD *)(v683 + 104) = v725;
                              swift_retain();
                              swift_release();
                              *(_QWORD *)(v683 + 112) = *((_QWORD *)v684 + 14);
                              *(_QWORD *)(v683 + 120) = *((_QWORD *)v684 + 15);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              v726 = *((_QWORD *)v684 + 17);
                              *(_QWORD *)(v683 + 128) = *((_QWORD *)v684 + 16);
                              *(_QWORD *)(v683 + 136) = v726;
                              swift_retain();
                              swift_release();
                              *(_QWORD *)(v683 + 144) = *((_QWORD *)v684 + 18);
                              *(_QWORD *)(v683 + 152) = *((_QWORD *)v684 + 19);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              v727 = *((_QWORD *)v684 + 21);
                              *(_QWORD *)(v683 + 160) = *((_QWORD *)v684 + 20);
                              *(_QWORD *)(v683 + 168) = v727;
                              swift_retain();
                              swift_release();
                              v728 = *((_QWORD *)v684 + 23);
                              if (*(_QWORD *)(v683 + 184) == 1)
                              {
                                if (v728 != 1)
                                {
                                  *(_QWORD *)(v683 + 176) = *((_QWORD *)v684 + 22);
                                  *(_QWORD *)(v683 + 184) = *((_QWORD *)v684 + 23);
                                  swift_bridgeObjectRetain();
                                  goto LABEL_537;
                                }
                              }
                              else
                              {
                                if (v728 != 1)
                                {
                                  *(_QWORD *)(v683 + 176) = *((_QWORD *)v684 + 22);
                                  *(_QWORD *)(v683 + 184) = *((_QWORD *)v684 + 23);
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  goto LABEL_537;
                                }
                                sub_1AD009758(v683 + 176, &qword_1ED2E3198);
                              }
                              *(_OWORD *)(v683 + 176) = *((_OWORD *)v684 + 11);
                              goto LABEL_537;
                            }
                            if (!v722)
                            {
                              *v721 = *v723;
                              v748 = *((_OWORD *)v684 + 5);
                              v749 = *((_OWORD *)v684 + 6);
                              v750 = *((_OWORD *)v684 + 8);
                              *(_OWORD *)(v683 + 112) = *((_OWORD *)v684 + 7);
                              *(_OWORD *)(v683 + 128) = v750;
                              *(_OWORD *)(v683 + 80) = v748;
                              *(_OWORD *)(v683 + 96) = v749;
                              v751 = *((_OWORD *)v684 + 9);
                              v752 = *((_OWORD *)v684 + 10);
                              v753 = *((_OWORD *)v684 + 11);
                              *(_QWORD *)(v683 + 192) = *((_QWORD *)v684 + 24);
                              *(_OWORD *)(v683 + 160) = v752;
                              *(_OWORD *)(v683 + 176) = v753;
                              *(_OWORD *)(v683 + 144) = v751;
                              goto LABEL_538;
                            }
                            v729 = *((_QWORD *)v684 + 9);
                            *(_QWORD *)(v683 + 64) = v722;
                            *(_QWORD *)(v683 + 72) = v729;
                            *(_QWORD *)(v683 + 80) = *((_QWORD *)v684 + 10);
                            *(_QWORD *)(v683 + 88) = *((_QWORD *)v684 + 11);
                            v730 = *((_QWORD *)v684 + 13);
                            *(_QWORD *)(v683 + 96) = *((_QWORD *)v684 + 12);
                            *(_QWORD *)(v683 + 104) = v730;
                            *(_QWORD *)(v683 + 112) = *((_QWORD *)v684 + 14);
                            *(_QWORD *)(v683 + 120) = *((_QWORD *)v684 + 15);
                            v731 = *((_QWORD *)v684 + 17);
                            *(_QWORD *)(v683 + 128) = *((_QWORD *)v684 + 16);
                            *(_QWORD *)(v683 + 136) = v731;
                            *(_QWORD *)(v683 + 144) = *((_QWORD *)v684 + 18);
                            *(_QWORD *)(v683 + 152) = *((_QWORD *)v684 + 19);
                            v732 = *((_QWORD *)v684 + 21);
                            *(_QWORD *)(v683 + 160) = *((_QWORD *)v684 + 20);
                            *(_QWORD *)(v683 + 168) = v732;
                            v1001 = *((_QWORD *)v684 + 23);
                            swift_retain();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            if (v1001 == 1)
                            {
                              *(_OWORD *)(v683 + 176) = *((_OWORD *)v684 + 11);
                            }
                            else
                            {
                              *(_QWORD *)(v683 + 176) = *((_QWORD *)v684 + 22);
                              *(_QWORD *)(v683 + 184) = *((_QWORD *)v684 + 23);
                              swift_bridgeObjectRetain();
                            }
                            v681 = v1021;
LABEL_537:
                            *(_QWORD *)(v683 + 192) = *((_QWORD *)v684 + 24);
LABEL_538:
                            *(_BYTE *)(v683 + 200) = v684[200];
                            v754 = (uint64_t *)(v684 + 208);
                            v755 = *((_QWORD *)v684 + 27);
                            if (*(_QWORD *)(v683 + 216) >> 60 == 15)
                            {
                              if (v755 >> 60 != 15)
                              {
                                v756 = *v754;
                                sub_1AD0040A0(v756, *((_QWORD *)v684 + 27));
                                *(_QWORD *)(v683 + 208) = v756;
                                *(_QWORD *)(v683 + 216) = v755;
LABEL_545:
                                a1 = v1005;
                                v711 = v1026;
                                v680 = (int *)v1016;
LABEL_546:
                                *(_QWORD *)(v597 + v680[7]) = *(_QWORD *)&v598[v680[7]];
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                v760 = v680[8];
                                v761 = (uint64_t *)(v597 + v760);
                                v762 = (uint64_t *)&v598[v760];
                                v763 = *(_QWORD *)&v598[v760 + 8];
                                if (*(_QWORD *)(v597 + v760 + 8) >> 60 == 15)
                                {
                                  if (v763 >> 60 != 15)
                                  {
                                    v764 = *v762;
                                    sub_1AD0040A0(v764, v763);
                                    *v761 = v764;
                                    v761[1] = v763;
                                    goto LABEL_553;
                                  }
                                }
                                else
                                {
                                  if (v763 >> 60 != 15)
                                  {
                                    v765 = *v762;
                                    sub_1AD0040A0(v765, v763);
                                    v766 = *v761;
                                    v767 = v761[1];
                                    *v761 = v765;
                                    v761[1] = v763;
                                    sub_1AD00412C(v766, v767);
LABEL_553:
                                    v768 = v680[9];
                                    v769 = (uint64_t *)(v597 + v768);
                                    v770 = (uint64_t *)&v598[v768];
                                    v771 = *(_QWORD *)&v598[v768 + 8];
                                    if (*(_QWORD *)(v597 + v768 + 8) >> 60 == 15)
                                    {
                                      if (v771 >> 60 != 15)
                                      {
                                        v772 = *v770;
                                        sub_1AD0040A0(v772, v771);
                                        *v769 = v772;
                                        v769[1] = v771;
                                        goto LABEL_560;
                                      }
                                    }
                                    else
                                    {
                                      if (v771 >> 60 != 15)
                                      {
                                        v773 = *v770;
                                        sub_1AD0040A0(v773, v771);
                                        v774 = *v769;
                                        v775 = v769[1];
                                        *v769 = v773;
                                        v769[1] = v771;
                                        sub_1AD00412C(v774, v775);
LABEL_560:
                                        *(_BYTE *)(v597 + v680[10]) = v598[v680[10]];
                                        *(_BYTE *)(v597 + v680[11]) = v598[v680[11]];
                                        v776 = v680[12];
                                        v777 = (uint64_t *)(v597 + v776);
                                        v778 = (uint64_t *)&v598[v776];
                                        v779 = *(_QWORD *)&v598[v776 + 8];
                                        if (*(_QWORD *)(v597 + v776 + 8) >> 60 == 15)
                                        {
                                          if (v779 >> 60 != 15)
                                          {
                                            v780 = *v778;
                                            sub_1AD0040A0(v780, v779);
                                            *v777 = v780;
                                            v777[1] = v779;
                                            goto LABEL_567;
                                          }
                                        }
                                        else
                                        {
                                          if (v779 >> 60 != 15)
                                          {
                                            v781 = *v778;
                                            sub_1AD0040A0(v781, v779);
                                            v782 = *v777;
                                            v783 = v777[1];
                                            *v777 = v781;
                                            v777[1] = v779;
                                            sub_1AD00412C(v782, v783);
LABEL_567:
                                            v784 = v1009;
                                            *(_QWORD *)(v597 + v680[13]) = *(_QWORD *)&v598[v680[13]];
                                            *((_BYTE *)v1009 + v711[7]) = *((_BYTE *)v681 + v711[7]);
                                            *((_BYTE *)v1009 + v711[8]) = *((_BYTE *)v681 + v711[8]);
                                            *((_BYTE *)v1009 + v711[9]) = *((_BYTE *)v681 + v711[9]);
                                            *((_BYTE *)v1009 + v711[10]) = *((_BYTE *)v681 + v711[10]);
                                            *((_BYTE *)v1009 + v711[11]) = *((_BYTE *)v681 + v711[11]);
                                            *((_BYTE *)v1009 + v711[12]) = *((_BYTE *)v681 + v711[12]);
                                            *((_BYTE *)v1009 + v711[13]) = *((_BYTE *)v681 + v711[13]);
                                            *((_BYTE *)v1009 + v711[14]) = *((_BYTE *)v681 + v711[14]);
                                            v785 = v711[15];
                                            v786 = (_QWORD *)((char *)v1009 + v785);
                                            v787 = (_QWORD *)((char *)v681 + v785);
                                            v788 = *(_QWORD *)((char *)v681 + v785 + 8);
                                            if (*(_QWORD *)((char *)v1009 + v785 + 8) >> 60 == 15)
                                            {
                                              if (v788 >> 60 != 15)
                                              {
                                                v789 = *v787;
                                                sub_1AD0040A0(v789, v788);
                                                *v786 = v789;
                                                v786[1] = v788;
                                                goto LABEL_574;
                                              }
                                            }
                                            else
                                            {
                                              if (v788 >> 60 != 15)
                                              {
                                                v790 = *v787;
                                                sub_1AD0040A0(v790, v788);
                                                v791 = *v786;
                                                v792 = v786[1];
                                                *v786 = v790;
                                                v786[1] = v788;
                                                sub_1AD00412C(v791, v792);
LABEL_574:
                                                v793 = v711[16];
                                                v794 = (_QWORD *)((char *)v1009 + v793);
                                                v795 = (_QWORD *)((char *)v681 + v793);
                                                v796 = *(_QWORD *)((char *)v681 + v793 + 8);
                                                if (*(_QWORD *)((char *)v1009 + v793 + 8) >> 60 == 15)
                                                {
                                                  if (v796 >> 60 != 15)
                                                  {
                                                    v797 = *v795;
                                                    sub_1AD0040A0(v797, v796);
                                                    *v794 = v797;
                                                    v794[1] = v796;
                                                    goto LABEL_581;
                                                  }
                                                }
                                                else
                                                {
                                                  if (v796 >> 60 != 15)
                                                  {
                                                    v798 = *v795;
                                                    sub_1AD0040A0(v798, v796);
                                                    v799 = *v794;
                                                    v800 = v794[1];
                                                    *v794 = v798;
                                                    v794[1] = v796;
                                                    sub_1AD00412C(v799, v800);
LABEL_581:
                                                    *((_BYTE *)v1009 + v711[17]) = *((_BYTE *)v681 + v711[17]);
                                                    *((_BYTE *)v1009 + v711[18]) = *((_BYTE *)v681 + v711[18]);
                                                    v801 = v711[19];
                                                    v802 = (uint64_t)v1009 + v801;
                                                    v803 = (uint64_t)v681 + v801;
                                                    v804 = type metadata accessor for CloudKitSharingToken();
                                                    v805 = *(_QWORD *)(v804 - 8);
                                                    v806 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v805 + 48);
                                                    v807 = v806(v802, 1, v804);
                                                    v808 = v806(v803, 1, v804);
                                                    if (v807)
                                                    {
                                                      if (!v808)
                                                      {
                                                        v1017 = v804;
                                                        v809 = v4;
                                                        *(_DWORD *)v802 = *(_DWORD *)v803;
                                                        *(_QWORD *)(v802 + 8) = *(_QWORD *)(v803 + 8);
                                                        *(_QWORD *)(v802 + 16) = *(_QWORD *)(v803 + 16);
                                                        v810 = *(_QWORD *)(v803 + 32);
                                                        *(_QWORD *)(v802 + 24) = *(_QWORD *)(v803 + 24);
                                                        *(_QWORD *)(v802 + 32) = v810;
                                                        v811 = (uint64_t *)(v803 + 40);
                                                        v812 = *(_QWORD *)(v803 + 48);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRetain();
                                                        swift_retain();
                                                        if (v812 >> 60 == 11 || v812 >> 60 == 15)
                                                        {
                                                          *(_OWORD *)(v802 + 40) = *(_OWORD *)v811;
                                                        }
                                                        else
                                                        {
                                                          v818 = *v811;
                                                          sub_1AD0040A0(*v811, v812);
                                                          *(_QWORD *)(v802 + 40) = v818;
                                                          *(_QWORD *)(v802 + 48) = v812;
                                                        }
                                                        v4 = v809;
                                                        if (*(_QWORD *)(v803 + 72))
                                                        {
                                                          *(_DWORD *)(v802 + 56) = *(_DWORD *)(v803 + 56);
                                                          v819 = *(_DWORD *)(v803 + 60);
                                                          *(_BYTE *)(v802 + 64) = *(_BYTE *)(v803 + 64);
                                                          *(_DWORD *)(v802 + 60) = v819;
                                                          v820 = *(_QWORD *)(v803 + 80);
                                                          *(_QWORD *)(v802 + 72) = *(_QWORD *)(v803 + 72);
                                                          *(_QWORD *)(v802 + 80) = v820;
                                                          v821 = (uint64_t *)(v803 + 88);
                                                          v822 = *(_QWORD *)(v803 + 96);
                                                          swift_retain();
                                                          if (v822 >> 60 != 15)
                                                          {
                                                            v826 = *v821;
                                                            sub_1AD0040A0(v826, v822);
                                                            *(_QWORD *)(v802 + 88) = v826;
                                                            *(_QWORD *)(v802 + 96) = v822;
                                                            goto LABEL_601;
                                                          }
                                                          v823 = (_OWORD *)(v802 + 88);
                                                          v824 = *(_OWORD *)v821;
                                                        }
                                                        else
                                                        {
                                                          v823 = (_OWORD *)(v802 + 56);
                                                          v824 = *(_OWORD *)(v803 + 56);
                                                          v825 = *(_OWORD *)(v803 + 88);
                                                          *(_OWORD *)(v802 + 72) = *(_OWORD *)(v803 + 72);
                                                          *(_OWORD *)(v802 + 88) = v825;
                                                        }
                                                        *v823 = v824;
LABEL_601:
                                                        v827 = *(_QWORD *)(v803 + 112);
                                                        *(_QWORD *)(v802 + 104) = *(_QWORD *)(v803 + 104);
                                                        *(_QWORD *)(v802 + 112) = v827;
                                                        v828 = (_OWORD *)(v803 + 120);
                                                        v829 = *(_QWORD *)(v803 + 128);
                                                        swift_retain();
                                                        if (v829 >> 60 == 15)
                                                        {
                                                          *(_OWORD *)(v802 + 120) = *v828;
                                                        }
                                                        else
                                                        {
                                                          v830 = *(_QWORD *)v828;
                                                          sub_1AD0040A0(v830, v829);
                                                          *(_QWORD *)(v802 + 120) = v830;
                                                          *(_QWORD *)(v802 + 128) = v829;
                                                        }
                                                        v831 = *(_QWORD *)(v803 + 144);
                                                        *(_QWORD *)(v802 + 136) = *(_QWORD *)(v803 + 136);
                                                        *(_QWORD *)(v802 + 144) = v831;
                                                        v832 = (uint64_t *)(v803 + 152);
                                                        v833 = *(_QWORD *)(v803 + 160);
                                                        swift_retain();
                                                        if (v833 >> 60 == 11 || v833 >> 60 == 15)
                                                        {
                                                          *(_OWORD *)(v802 + 152) = *(_OWORD *)v832;
                                                        }
                                                        else
                                                        {
                                                          v834 = *v832;
                                                          sub_1AD0040A0(*v832, v833);
                                                          *(_QWORD *)(v802 + 152) = v834;
                                                          *(_QWORD *)(v802 + 160) = v833;
                                                        }
                                                        v835 = *(_QWORD *)(v803 + 168);
                                                        if (v835)
                                                        {
                                                          v836 = *(_QWORD *)(v803 + 176);
                                                          *(_QWORD *)(v802 + 168) = v835;
                                                          *(_QWORD *)(v802 + 176) = v836;
                                                          v837 = (_OWORD *)(v803 + 184);
                                                          v838 = *(_QWORD *)(v803 + 192);
                                                          swift_retain();
                                                          if (v838 >> 60 == 15)
                                                          {
                                                            *(_OWORD *)(v802 + 184) = *v837;
                                                          }
                                                          else
                                                          {
                                                            v842 = *(_QWORD *)v837;
                                                            sub_1AD0040A0(v842, v838);
                                                            *(_QWORD *)(v802 + 184) = v842;
                                                            *(_QWORD *)(v802 + 192) = v838;
                                                          }
                                                          *(_DWORD *)(v802 + 200) = *(_DWORD *)(v803 + 200);
                                                          v843 = *(_QWORD *)(v803 + 216);
                                                          *(_QWORD *)(v802 + 208) = *(_QWORD *)(v803 + 208);
                                                          *(_QWORD *)(v802 + 216) = v843;
                                                          v844 = (_OWORD *)(v803 + 224);
                                                          v845 = *(_QWORD *)(v803 + 232);
                                                          swift_retain();
                                                          if (v845 >> 60 == 15)
                                                          {
                                                            *(_OWORD *)(v802 + 224) = *v844;
                                                          }
                                                          else
                                                          {
                                                            v846 = *(_QWORD *)v844;
                                                            sub_1AD0040A0(v846, v845);
                                                            *(_QWORD *)(v802 + 224) = v846;
                                                            *(_QWORD *)(v802 + 232) = v845;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          *(_OWORD *)(v802 + 168) = *(_OWORD *)(v803 + 168);
                                                          v839 = *(_OWORD *)(v803 + 184);
                                                          v840 = *(_OWORD *)(v803 + 200);
                                                          v841 = *(_OWORD *)(v803 + 216);
                                                          *(_QWORD *)(v802 + 232) = *(_QWORD *)(v803 + 232);
                                                          *(_OWORD *)(v802 + 200) = v840;
                                                          *(_OWORD *)(v802 + 216) = v841;
                                                          *(_OWORD *)(v802 + 184) = v839;
                                                        }
                                                        *(_QWORD *)(v802 + 240) = *(_QWORD *)(v803 + 240);
                                                        v847 = *(_QWORD *)(v803 + 256);
                                                        *(_QWORD *)(v802 + 248) = *(_QWORD *)(v803 + 248);
                                                        *(_QWORD *)(v802 + 256) = v847;
                                                        v848 = (uint64_t *)(v803 + 264);
                                                        v849 = *(_QWORD *)(v803 + 272);
                                                        swift_bridgeObjectRetain();
                                                        swift_retain();
                                                        if (v849 >> 60 == 11 || v849 >> 60 == 15)
                                                        {
                                                          *(_OWORD *)(v802 + 264) = *(_OWORD *)v848;
                                                        }
                                                        else
                                                        {
                                                          v850 = *v848;
                                                          sub_1AD0040A0(*v848, v849);
                                                          *(_QWORD *)(v802 + 264) = v850;
                                                          *(_QWORD *)(v802 + 272) = v849;
                                                        }
                                                        v711 = v1026;
                                                        v851 = *(int *)(v1017 + 24);
                                                        v852 = (_QWORD *)(v802 + v851);
                                                        v853 = v803 + v851;
                                                        v854 = *(_QWORD *)(v803 + v851 + 8);
                                                        *v852 = *(_QWORD *)(v803 + v851);
                                                        v852[1] = v854;
                                                        swift_retain();
                                                        v855 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                      + 28);
                                                        v856 = (char *)v852 + v855;
                                                        v857 = (const void *)(v853 + v855);
                                                        v858 = sub_1AD63AF28();
                                                        v859 = *(_QWORD *)(v858 - 8);
                                                        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v859 + 48))(v857, 1, v858))
                                                        {
                                                          v860 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                          memcpy(v856, v857, *(_QWORD *)(*(_QWORD *)(v860 - 8) + 64));
                                                        }
                                                        else
                                                        {
                                                          (*(void (**)(char *, const void *, uint64_t))(v859 + 16))(v856, v857, v858);
                                                          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v859 + 56))(v856, 0, 1, v858);
                                                        }
                                                        v784 = v1009;
                                                        v861 = *(int *)(v1017 + 28);
                                                        v862 = v802 + v861;
                                                        v863 = v803 + v861;
                                                        v864 = *(_QWORD *)(v803 + v861 + 8);
                                                        *(_QWORD *)v862 = *(_QWORD *)(v803 + v861);
                                                        *(_QWORD *)(v862 + 8) = v864;
                                                        v865 = *(_QWORD *)(v803 + v861 + 24);
                                                        swift_retain();
                                                        if (v865 == 1)
                                                        {
                                                          *(_OWORD *)(v862 + 16) = *(_OWORD *)(v863 + 16);
                                                        }
                                                        else
                                                        {
                                                          *(_QWORD *)(v862 + 16) = *(_QWORD *)(v863 + 16);
                                                          *(_QWORD *)(v862 + 24) = *(_QWORD *)(v863 + 24);
                                                          swift_bridgeObjectRetain();
                                                        }
                                                        a3 = v1024;
                                                        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v805 + 56))(v802, 0, 1, v1017);
LABEL_718:
                                                        v955 = v711[20];
                                                        v956 = (_QWORD *)((char *)v784 + v955);
                                                        v957 = (_QWORD *)((char *)v1021 + v955);
                                                        v958 = *(_QWORD *)((char *)v1021 + v955 + 8);
                                                        if (*(_QWORD *)((char *)v784 + v955 + 8) >> 60 == 15)
                                                        {
                                                          if (v958 >> 60 != 15)
                                                          {
                                                            v959 = *v957;
                                                            sub_1AD0040A0(v959, v958);
                                                            *v956 = v959;
                                                            v956[1] = v958;
LABEL_725:
                                                            *((_BYTE *)v784 + v711[21]) = *((_BYTE *)v1021 + v711[21]);
                                                            *((_BYTE *)v784 + v711[22]) = *((_BYTE *)v1021 + v711[22]);
                                                            *((_BYTE *)v784 + v711[23]) = *((_BYTE *)v1021 + v711[23]);
                                                            goto LABEL_726;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if (v958 >> 60 != 15)
                                                          {
                                                            v960 = *v957;
                                                            sub_1AD0040A0(v960, v958);
                                                            v961 = *v956;
                                                            v962 = v956[1];
                                                            *v956 = v960;
                                                            v956[1] = v958;
                                                            sub_1AD00412C(v961, v962);
                                                            goto LABEL_725;
                                                          }
                                                          sub_1AD007EC0((uint64_t)v956);
                                                        }
                                                        *(_OWORD *)v956 = *(_OWORD *)v957;
                                                        goto LABEL_725;
                                                      }
LABEL_588:
                                                      v813 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                                                      memcpy((void *)v802, (const void *)v803, *(_QWORD *)(*(_QWORD *)(v813 - 8) + 64));
                                                      a3 = v1024;
                                                      goto LABEL_718;
                                                    }
                                                    if (v808)
                                                    {
                                                      sub_1AD066230(v802, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                                                      goto LABEL_588;
                                                    }
                                                    *(_DWORD *)v802 = *(_DWORD *)v803;
                                                    *(_QWORD *)(v802 + 8) = *(_QWORD *)(v803 + 8);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(_QWORD *)(v802 + 16) = *(_QWORD *)(v803 + 16);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    v814 = *(_QWORD *)(v803 + 32);
                                                    *(_QWORD *)(v802 + 24) = *(_QWORD *)(v803 + 24);
                                                    *(_QWORD *)(v802 + 32) = v814;
                                                    swift_retain();
                                                    swift_release();
                                                    v815 = (uint64_t *)(v803 + 40);
                                                    v816 = *(_QWORD *)(v803 + 48);
                                                    v817 = v816 & 0xF000000000000000;
                                                    if (*(_QWORD *)(v802 + 48) >> 60 == 11)
                                                    {
                                                      if (v817 == 0xB000000000000000)
                                                        goto LABEL_633;
LABEL_628:
                                                      if (v816 >> 60 != 15)
                                                      {
                                                        v866 = *v815;
                                                        sub_1AD0040A0(v866, *(_QWORD *)(v803 + 48));
                                                        *(_QWORD *)(v802 + 40) = v866;
                                                        *(_QWORD *)(v802 + 48) = v816;
                                                        goto LABEL_634;
                                                      }
                                                      goto LABEL_633;
                                                    }
                                                    if (v817 == 0xB000000000000000)
                                                    {
                                                      sub_1AD009758(v802 + 40, &qword_1ED2E3250);
                                                    }
                                                    else
                                                    {
                                                      if (*(_QWORD *)(v802 + 48) >> 60 == 15)
                                                        goto LABEL_628;
                                                      if (v816 >> 60 != 15)
                                                      {
                                                        v983 = *v815;
                                                        sub_1AD0040A0(v983, *(_QWORD *)(v803 + 48));
                                                        v984 = *(_QWORD *)(v802 + 40);
                                                        v985 = *(_QWORD *)(v802 + 48);
                                                        *(_QWORD *)(v802 + 40) = v983;
                                                        *(_QWORD *)(v802 + 48) = v816;
                                                        sub_1AD00412C(v984, v985);
LABEL_634:
                                                        v867 = (_OWORD *)(v802 + 56);
                                                        v868 = (_OWORD *)(v803 + 56);
                                                        v869 = *(_QWORD *)(v803 + 72);
                                                        if (*(_QWORD *)(v802 + 72))
                                                        {
                                                          v870 = v804;
                                                          if (!v869)
                                                          {
                                                            sub_1AD0AEC58(v802 + 56);
                                                            v881 = *(_OWORD *)(v803 + 72);
                                                            v880 = *(_OWORD *)(v803 + 88);
                                                            *v867 = *v868;
                                                            *(_OWORD *)(v802 + 72) = v881;
                                                            *(_OWORD *)(v802 + 88) = v880;
                                                            goto LABEL_650;
                                                          }
                                                          *(_DWORD *)(v802 + 56) = *(_DWORD *)(v803 + 56);
                                                          v871 = *(_DWORD *)(v803 + 60);
                                                          *(_BYTE *)(v802 + 64) = *(_BYTE *)(v803 + 64);
                                                          *(_DWORD *)(v802 + 60) = v871;
                                                          v872 = *(_QWORD *)(v803 + 80);
                                                          *(_QWORD *)(v802 + 72) = *(_QWORD *)(v803 + 72);
                                                          *(_QWORD *)(v802 + 80) = v872;
                                                          swift_retain();
                                                          swift_release();
                                                          v867 = (_OWORD *)(v802 + 88);
                                                          v873 = (uint64_t *)(v803 + 88);
                                                          v874 = *(_QWORD *)(v803 + 96);
                                                          if (*(_QWORD *)(v802 + 96) >> 60 == 15)
                                                          {
                                                            if (v874 >> 60 != 15)
                                                            {
                                                              v875 = *v873;
                                                              sub_1AD0040A0(v875, *(_QWORD *)(v803 + 96));
                                                              *(_QWORD *)(v802 + 88) = v875;
                                                              *(_QWORD *)(v802 + 96) = v874;
                                                              goto LABEL_650;
                                                            }
                                                            goto LABEL_645;
                                                          }
                                                          if (v874 >> 60 == 15)
                                                          {
                                                            sub_1AD007EC0(v802 + 88);
LABEL_645:
                                                            v882 = *(_OWORD *)v873;
LABEL_647:
                                                            *v867 = v882;
                                                            goto LABEL_650;
                                                          }
                                                          v885 = *v873;
                                                          sub_1AD0040A0(v885, *(_QWORD *)(v803 + 96));
                                                          v886 = *(_QWORD *)(v802 + 88);
                                                          v887 = *(_QWORD *)(v802 + 96);
                                                          *(_QWORD *)(v802 + 88) = v885;
                                                          *(_QWORD *)(v802 + 96) = v874;
                                                          sub_1AD00412C(v886, v887);
                                                        }
                                                        else
                                                        {
                                                          if (!v869)
                                                          {
                                                            v870 = v804;
                                                            v882 = *v868;
                                                            v883 = *(_OWORD *)(v803 + 88);
                                                            *(_OWORD *)(v802 + 72) = *(_OWORD *)(v803 + 72);
                                                            *(_OWORD *)(v802 + 88) = v883;
                                                            goto LABEL_647;
                                                          }
                                                          *(_DWORD *)(v802 + 56) = *(_DWORD *)(v803 + 56);
                                                          v876 = *(_DWORD *)(v803 + 60);
                                                          *(_BYTE *)(v802 + 64) = *(_BYTE *)(v803 + 64);
                                                          *(_DWORD *)(v802 + 60) = v876;
                                                          v877 = *(_QWORD *)(v803 + 80);
                                                          *(_QWORD *)(v802 + 72) = *(_QWORD *)(v803 + 72);
                                                          *(_QWORD *)(v802 + 80) = v877;
                                                          v878 = (_OWORD *)(v803 + 88);
                                                          v879 = *(_QWORD *)(v803 + 96);
                                                          swift_retain();
                                                          v870 = v804;
                                                          if (v879 >> 60 == 15)
                                                          {
                                                            *(_OWORD *)(v802 + 88) = *v878;
                                                          }
                                                          else
                                                          {
                                                            v884 = *(_QWORD *)v878;
                                                            sub_1AD0040A0(v884, v879);
                                                            *(_QWORD *)(v802 + 88) = v884;
                                                            *(_QWORD *)(v802 + 96) = v879;
                                                          }
                                                        }
LABEL_650:
                                                        v888 = *(_QWORD *)(v803 + 112);
                                                        *(_QWORD *)(v802 + 104) = *(_QWORD *)(v803 + 104);
                                                        *(_QWORD *)(v802 + 112) = v888;
                                                        swift_retain();
                                                        swift_release();
                                                        v889 = (uint64_t *)(v803 + 120);
                                                        v890 = *(_QWORD *)(v803 + 128);
                                                        if (*(_QWORD *)(v802 + 128) >> 60 == 15)
                                                        {
                                                          if (v890 >> 60 != 15)
                                                          {
                                                            v891 = *v889;
                                                            sub_1AD0040A0(v891, *(_QWORD *)(v803 + 128));
                                                            *(_QWORD *)(v802 + 120) = v891;
                                                            *(_QWORD *)(v802 + 128) = v890;
                                                            goto LABEL_657;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if (v890 >> 60 != 15)
                                                          {
                                                            v892 = *v889;
                                                            sub_1AD0040A0(v892, *(_QWORD *)(v803 + 128));
                                                            v893 = *(_QWORD *)(v802 + 120);
                                                            v894 = *(_QWORD *)(v802 + 128);
                                                            *(_QWORD *)(v802 + 120) = v892;
                                                            *(_QWORD *)(v802 + 128) = v890;
                                                            sub_1AD00412C(v893, v894);
LABEL_657:
                                                            v895 = *(_QWORD *)(v803 + 144);
                                                            *(_QWORD *)(v802 + 136) = *(_QWORD *)(v803 + 136);
                                                            *(_QWORD *)(v802 + 144) = v895;
                                                            swift_retain();
                                                            swift_release();
                                                            v896 = (uint64_t *)(v803 + 152);
                                                            v897 = *(_QWORD *)(v803 + 160);
                                                            v898 = v897 & 0xF000000000000000;
                                                            if (*(_QWORD *)(v802 + 160) >> 60 == 11)
                                                            {
                                                              if (v898 == 0xB000000000000000)
                                                                goto LABEL_667;
LABEL_663:
                                                              if (v897 >> 60 != 15)
                                                              {
                                                                v899 = *v896;
                                                                sub_1AD0040A0(v899, *(_QWORD *)(v803 + 160));
                                                                *(_QWORD *)(v802 + 152) = v899;
                                                                *(_QWORD *)(v802 + 160) = v897;
                                                                goto LABEL_668;
                                                              }
                                                              goto LABEL_667;
                                                            }
                                                            if (v898 == 0xB000000000000000)
                                                            {
                                                              sub_1AD009758(v802 + 152, &qword_1ED2E3250);
                                                            }
                                                            else
                                                            {
                                                              if (*(_QWORD *)(v802 + 160) >> 60 == 15)
                                                                goto LABEL_663;
                                                              if (v897 >> 60 != 15)
                                                              {
                                                                v986 = *v896;
                                                                sub_1AD0040A0(v986, *(_QWORD *)(v803 + 160));
                                                                v987 = *(_QWORD *)(v802 + 152);
                                                                v988 = *(_QWORD *)(v802 + 160);
                                                                *(_QWORD *)(v802 + 152) = v986;
                                                                *(_QWORD *)(v802 + 160) = v897;
                                                                sub_1AD00412C(v987, v988);
LABEL_668:
                                                                v900 = (_OWORD *)(v802 + 168);
                                                                v902 = (_OWORD *)(v803 + 168);
                                                                v901 = *(_QWORD *)(v803 + 168);
                                                                if (!*(_QWORD *)(v802 + 168))
                                                                {
                                                                  if (v901)
                                                                  {
                                                                    v907 = *(_QWORD *)(v803 + 176);
                                                                    *(_QWORD *)(v802 + 168) = v901;
                                                                    *(_QWORD *)(v802 + 176) = v907;
                                                                    v908 = (_OWORD *)(v803 + 184);
                                                                    v909 = *(_QWORD *)(v803 + 192);
                                                                    swift_retain();
                                                                    if (v909 >> 60 == 15)
                                                                    {
                                                                      *(_OWORD *)(v802 + 184) = *v908;
                                                                    }
                                                                    else
                                                                    {
                                                                      v916 = *(_QWORD *)v908;
                                                                      sub_1AD0040A0(v916, v909);
                                                                      *(_QWORD *)(v802 + 184) = v916;
                                                                      *(_QWORD *)(v802 + 192) = v909;
                                                                    }
                                                                    *(_DWORD *)(v802 + 200) = *(_DWORD *)(v803 + 200);
                                                                    v917 = *(_QWORD *)(v803 + 216);
                                                                    *(_QWORD *)(v802 + 208) = *(_QWORD *)(v803 + 208);
                                                                    *(_QWORD *)(v802 + 216) = v917;
                                                                    v918 = (_OWORD *)(v803 + 224);
                                                                    v919 = *(_QWORD *)(v803 + 232);
                                                                    swift_retain();
                                                                    if (v919 >> 60 == 15)
                                                                    {
                                                                      *(_OWORD *)(v802 + 224) = *v918;
                                                                    }
                                                                    else
                                                                    {
                                                                      v920 = *(_QWORD *)v918;
                                                                      sub_1AD0040A0(v920, v919);
                                                                      *(_QWORD *)(v802 + 224) = v920;
                                                                      *(_QWORD *)(v802 + 232) = v919;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    *v900 = *v902;
                                                                    v913 = *(_OWORD *)(v803 + 184);
                                                                    v914 = *(_OWORD *)(v803 + 200);
                                                                    v915 = *(_OWORD *)(v803 + 216);
                                                                    *(_QWORD *)(v802 + 232) = *(_QWORD *)(v803 + 232);
                                                                    *(_OWORD *)(v802 + 200) = v914;
                                                                    *(_OWORD *)(v802 + 216) = v915;
                                                                    *(_OWORD *)(v802 + 184) = v913;
                                                                  }
                                                                  goto LABEL_693;
                                                                }
                                                                if (!v901)
                                                                {
                                                                  sub_1AD0AEC8C((uint64_t *)(v802 + 168));
                                                                  *v900 = *v902;
                                                                  v911 = *(_OWORD *)(v803 + 200);
                                                                  v910 = *(_OWORD *)(v803 + 216);
                                                                  v912 = *(_OWORD *)(v803 + 184);
                                                                  *(_QWORD *)(v802 + 232) = *(_QWORD *)(v803 + 232);
                                                                  *(_OWORD *)(v802 + 200) = v911;
                                                                  *(_OWORD *)(v802 + 216) = v910;
                                                                  *(_OWORD *)(v802 + 184) = v912;
                                                                  goto LABEL_693;
                                                                }
                                                                v903 = *(_QWORD *)(v803 + 176);
                                                                *(_QWORD *)(v802 + 168) = v901;
                                                                *(_QWORD *)(v802 + 176) = v903;
                                                                swift_retain();
                                                                swift_release();
                                                                v904 = (uint64_t *)(v803 + 184);
                                                                v905 = *(_QWORD *)(v803 + 192);
                                                                if (*(_QWORD *)(v802 + 192) >> 60 == 15)
                                                                {
                                                                  if (v905 >> 60 != 15)
                                                                  {
                                                                    v906 = *v904;
                                                                    sub_1AD0040A0(v906, *(_QWORD *)(v803 + 192));
                                                                    *(_QWORD *)(v802 + 184) = v906;
                                                                    *(_QWORD *)(v802 + 192) = v905;
LABEL_686:
                                                                    *(_DWORD *)(v802 + 200) = *(_DWORD *)(v803 + 200);
                                                                    v924 = *(_QWORD *)(v803 + 216);
                                                                    *(_QWORD *)(v802 + 208) = *(_QWORD *)(v803 + 208);
                                                                    *(_QWORD *)(v802 + 216) = v924;
                                                                    swift_retain();
                                                                    swift_release();
                                                                    v925 = (uint64_t *)(v803 + 224);
                                                                    v926 = *(_QWORD *)(v803 + 232);
                                                                    if (*(_QWORD *)(v802 + 232) >> 60 == 15)
                                                                    {
                                                                      if (v926 >> 60 != 15)
                                                                      {
                                                                        v927 = *v925;
                                                                        sub_1AD0040A0(v927, *(_QWORD *)(v803 + 232));
                                                                        *(_QWORD *)(v802 + 224) = v927;
                                                                        *(_QWORD *)(v802 + 232) = v926;
                                                                        goto LABEL_693;
                                                                      }
                                                                      goto LABEL_691;
                                                                    }
                                                                    if (v926 >> 60 == 15)
                                                                    {
                                                                      sub_1AD007EC0(v802 + 224);
LABEL_691:
                                                                      *(_OWORD *)(v802 + 224) = *(_OWORD *)v925;
                                                                      goto LABEL_693;
                                                                    }
                                                                    v928 = *v925;
                                                                    sub_1AD0040A0(v928, *(_QWORD *)(v803 + 232));
                                                                    v929 = *(_QWORD *)(v802 + 224);
                                                                    v930 = *(_QWORD *)(v802 + 232);
                                                                    *(_QWORD *)(v802 + 224) = v928;
                                                                    *(_QWORD *)(v802 + 232) = v926;
                                                                    sub_1AD00412C(v929, v930);
LABEL_693:
                                                                    *(_QWORD *)(v802 + 240) = *(_QWORD *)(v803 + 240);
                                                                    swift_bridgeObjectRetain();
                                                                    swift_bridgeObjectRelease();
                                                                    v931 = *(_QWORD *)(v803 + 256);
                                                                    *(_QWORD *)(v802 + 248) = *(_QWORD *)(v803 + 248);
                                                                    *(_QWORD *)(v802 + 256) = v931;
                                                                    swift_retain();
                                                                    swift_release();
                                                                    v932 = (uint64_t *)(v803 + 264);
                                                                    v933 = *(_QWORD *)(v803 + 272);
                                                                    v934 = v933 & 0xF000000000000000;
                                                                    if (*(_QWORD *)(v802 + 272) >> 60 == 11)
                                                                    {
                                                                      if (v934 == 0xB000000000000000)
                                                                        goto LABEL_703;
LABEL_699:
                                                                      if (v933 >> 60 != 15)
                                                                      {
                                                                        v935 = *v932;
                                                                        sub_1AD0040A0(v935, *(_QWORD *)(v803 + 272));
                                                                        *(_QWORD *)(v802 + 264) = v935;
                                                                        *(_QWORD *)(v802 + 272) = v933;
                                                                        goto LABEL_704;
                                                                      }
                                                                      goto LABEL_703;
                                                                    }
                                                                    if (v934 == 0xB000000000000000)
                                                                    {
                                                                      sub_1AD009758(v802 + 264, &qword_1ED2E3250);
                                                                    }
                                                                    else
                                                                    {
                                                                      if (*(_QWORD *)(v802 + 272) >> 60 == 15)
                                                                        goto LABEL_699;
                                                                      if (v933 >> 60 != 15)
                                                                      {
                                                                        v989 = *v932;
                                                                        sub_1AD0040A0(v989, *(_QWORD *)(v803 + 272));
                                                                        v990 = *(_QWORD *)(v802 + 264);
                                                                        v991 = *(_QWORD *)(v802 + 272);
                                                                        *(_QWORD *)(v802 + 264) = v989;
                                                                        *(_QWORD *)(v802 + 272) = v933;
                                                                        sub_1AD00412C(v990, v991);
LABEL_704:
                                                                        v936 = v870;
                                                                        v937 = *(int *)(v870 + 24);
                                                                        v938 = (_QWORD *)(v802 + v937);
                                                                        v939 = v803 + v937;
                                                                        v940 = *(_QWORD *)(v803 + v937 + 8);
                                                                        *v938 = *(_QWORD *)(v803 + v937);
                                                                        v938[1] = v940;
                                                                        swift_retain();
                                                                        swift_release();
                                                                        v941 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                                      + 28);
                                                                        v942 = (char *)v938 + v941;
                                                                        v943 = (char *)(v939 + v941);
                                                                        v944 = sub_1AD63AF28();
                                                                        v945 = *(_QWORD *)(v944 - 8);
                                                                        v946 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v945 + 48);
                                                                        v947 = v946(v942, 1, v944);
                                                                        v948 = v946(v943, 1, v944);
                                                                        if (v947)
                                                                        {
                                                                          if (!v948)
                                                                          {
                                                                            (*(void (**)(char *, char *, uint64_t))(v945 + 16))(v942, v943, v944);
                                                                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v945 + 56))(v942, 0, 1, v944);
                                                                            goto LABEL_710;
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          if (!v948)
                                                                          {
                                                                            (*(void (**)(char *, char *, uint64_t))(v945 + 24))(v942, v943, v944);
LABEL_710:
                                                                            a1 = v1005;
                                                                            v784 = v1009;
                                                                            v950 = *(int *)(v936 + 28);
                                                                            v951 = (_QWORD *)(v802 + v950);
                                                                            v952 = v803 + v950;
                                                                            v953 = *(_QWORD *)(v803 + v950 + 8);
                                                                            *v951 = *(_QWORD *)(v803 + v950);
                                                                            v951[1] = v953;
                                                                            swift_retain();
                                                                            swift_release();
                                                                            v954 = *(_QWORD *)(v952 + 24);
                                                                            if (v951[3] == 1)
                                                                            {
                                                                              if (v954 != 1)
                                                                              {
                                                                                v951[2] = *(_QWORD *)(v952 + 16);
                                                                                v951[3] = *(_QWORD *)(v952 + 24);
                                                                                swift_bridgeObjectRetain();
LABEL_717:
                                                                                a3 = v1024;
                                                                                v711 = v1026;
                                                                                goto LABEL_718;
                                                                              }
                                                                            }
                                                                            else
                                                                            {
                                                                              if (v954 != 1)
                                                                              {
                                                                                v951[2] = *(_QWORD *)(v952 + 16);
                                                                                v951[3] = *(_QWORD *)(v952 + 24);
                                                                                swift_bridgeObjectRetain();
                                                                                swift_bridgeObjectRelease();
                                                                                goto LABEL_717;
                                                                              }
                                                                              sub_1AD009758((uint64_t)(v951 + 2), &qword_1ED2E3198);
                                                                            }
                                                                            *((_OWORD *)v951 + 1) = *(_OWORD *)(v952 + 16);
                                                                            goto LABEL_717;
                                                                          }
                                                                          (*(void (**)(char *, uint64_t))(v945 + 8))(v942, v944);
                                                                        }
                                                                        v949 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                        memcpy(v942, v943, *(_QWORD *)(*(_QWORD *)(v949 - 8) + 64));
                                                                        goto LABEL_710;
                                                                      }
                                                                      sub_1AD007EC0(v802 + 264);
                                                                    }
LABEL_703:
                                                                    *(_OWORD *)(v802 + 264) = *(_OWORD *)v932;
                                                                    goto LABEL_704;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  if (v905 >> 60 != 15)
                                                                  {
                                                                    v921 = *v904;
                                                                    sub_1AD0040A0(v921, *(_QWORD *)(v803 + 192));
                                                                    v922 = *(_QWORD *)(v802 + 184);
                                                                    v923 = *(_QWORD *)(v802 + 192);
                                                                    *(_QWORD *)(v802 + 184) = v921;
                                                                    *(_QWORD *)(v802 + 192) = v905;
                                                                    sub_1AD00412C(v922, v923);
                                                                    goto LABEL_686;
                                                                  }
                                                                  sub_1AD007EC0(v802 + 184);
                                                                }
                                                                *(_OWORD *)(v802 + 184) = *(_OWORD *)v904;
                                                                goto LABEL_686;
                                                              }
                                                              sub_1AD007EC0(v802 + 152);
                                                            }
LABEL_667:
                                                            *(_OWORD *)(v802 + 152) = *(_OWORD *)v896;
                                                            goto LABEL_668;
                                                          }
                                                          sub_1AD007EC0(v802 + 120);
                                                        }
                                                        *(_OWORD *)(v802 + 120) = *(_OWORD *)v889;
                                                        goto LABEL_657;
                                                      }
                                                      sub_1AD007EC0(v802 + 40);
                                                    }
LABEL_633:
                                                    *(_OWORD *)(v802 + 40) = *(_OWORD *)v815;
                                                    goto LABEL_634;
                                                  }
                                                  sub_1AD007EC0((uint64_t)v794);
                                                }
                                                *(_OWORD *)v794 = *(_OWORD *)v795;
                                                goto LABEL_581;
                                              }
                                              sub_1AD007EC0((uint64_t)v786);
                                            }
                                            *(_OWORD *)v786 = *(_OWORD *)v787;
                                            goto LABEL_574;
                                          }
                                          sub_1AD007EC0((uint64_t)v777);
                                        }
                                        *(_OWORD *)v777 = *(_OWORD *)v778;
                                        goto LABEL_567;
                                      }
                                      sub_1AD007EC0((uint64_t)v769);
                                    }
                                    *(_OWORD *)v769 = *(_OWORD *)v770;
                                    goto LABEL_560;
                                  }
                                  sub_1AD007EC0((uint64_t)v761);
                                }
                                *(_OWORD *)v761 = *(_OWORD *)v762;
                                goto LABEL_553;
                              }
                            }
                            else
                            {
                              if (v755 >> 60 != 15)
                              {
                                v757 = *v754;
                                sub_1AD0040A0(v757, *((_QWORD *)v684 + 27));
                                v758 = *(_QWORD *)(v683 + 208);
                                v759 = *(_QWORD *)(v683 + 216);
                                *(_QWORD *)(v683 + 208) = v757;
                                *(_QWORD *)(v683 + 216) = v755;
                                sub_1AD00412C(v758, v759);
                                goto LABEL_545;
                              }
                              sub_1AD007EC0(v683 + 208);
                            }
                            *(_OWORD *)(v683 + 208) = *(_OWORD *)v754;
                            goto LABEL_545;
                          }
                          sub_1AD009758(v683 + 48, &qword_1ED2E3198);
                        }
                        *(_OWORD *)(v683 + 48) = *((_OWORD *)v684 + 3);
                        goto LABEL_515;
                      }
                      sub_1AD009758(v683 + 16, &qword_1ED2E3198);
                    }
                    *(_OWORD *)(v683 + 16) = *((_OWORD *)v684 + 1);
                    goto LABEL_508;
                  }
                  sub_1AD3114A8((_QWORD *)v683);
                  v691 = *((_OWORD *)v684 + 1);
                  *(_OWORD *)v683 = *(_OWORD *)v684;
                  *(_OWORD *)(v683 + 16) = v691;
                  v692 = *((_OWORD *)v684 + 5);
                  v694 = *((_OWORD *)v684 + 2);
                  v693 = *((_OWORD *)v684 + 3);
                  *(_OWORD *)(v683 + 64) = *((_OWORD *)v684 + 4);
                  *(_OWORD *)(v683 + 80) = v692;
                  *(_OWORD *)(v683 + 32) = v694;
                  *(_OWORD *)(v683 + 48) = v693;
                  v695 = *((_OWORD *)v684 + 9);
                  v697 = *((_OWORD *)v684 + 6);
                  v696 = *((_OWORD *)v684 + 7);
                  *(_OWORD *)(v683 + 128) = *((_OWORD *)v684 + 8);
                  *(_OWORD *)(v683 + 144) = v695;
                  *(_OWORD *)(v683 + 96) = v697;
                  *(_OWORD *)(v683 + 112) = v696;
                  v698 = *((_OWORD *)v684 + 13);
                  v700 = *((_OWORD *)v684 + 10);
                  v699 = *((_OWORD *)v684 + 11);
                  *(_OWORD *)(v683 + 192) = *((_OWORD *)v684 + 12);
                  *(_OWORD *)(v683 + 208) = v698;
                  *(_OWORD *)(v683 + 160) = v700;
                  *(_OWORD *)(v683 + 176) = v699;
                }
                else
                {
                  if (v686)
                  {
                    v689 = *((_QWORD *)v684 + 1);
                    *(_QWORD *)v683 = v686;
                    *(_QWORD *)(v683 + 8) = v689;
                    v690 = *((_QWORD *)v684 + 3);
                    swift_retain();
                    if (v690 == 1)
                    {
                      *(_OWORD *)(v683 + 16) = *((_OWORD *)v684 + 1);
                    }
                    else
                    {
                      *(_QWORD *)(v683 + 16) = *((_QWORD *)v684 + 2);
                      *(_QWORD *)(v683 + 24) = *((_QWORD *)v684 + 3);
                      swift_bridgeObjectRetain();
                    }
                    v712 = *((_QWORD *)v684 + 5);
                    *(_QWORD *)(v683 + 32) = *((_QWORD *)v684 + 4);
                    *(_QWORD *)(v683 + 40) = v712;
                    v713 = *((_QWORD *)v684 + 7);
                    swift_retain();
                    if (v713 == 1)
                    {
                      *(_OWORD *)(v683 + 48) = *((_OWORD *)v684 + 3);
                    }
                    else
                    {
                      *(_QWORD *)(v683 + 48) = *((_QWORD *)v684 + 6);
                      *(_QWORD *)(v683 + 56) = *((_QWORD *)v684 + 7);
                      swift_bridgeObjectRetain();
                    }
                    v714 = *((_QWORD *)v684 + 8);
                    if (v714)
                    {
                      v715 = *((_QWORD *)v684 + 9);
                      *(_QWORD *)(v683 + 64) = v714;
                      *(_QWORD *)(v683 + 72) = v715;
                      *(_QWORD *)(v683 + 80) = *((_QWORD *)v684 + 10);
                      *(_QWORD *)(v683 + 88) = *((_QWORD *)v684 + 11);
                      v716 = *((_QWORD *)v684 + 13);
                      *(_QWORD *)(v683 + 96) = *((_QWORD *)v684 + 12);
                      *(_QWORD *)(v683 + 104) = v716;
                      *(_QWORD *)(v683 + 112) = *((_QWORD *)v684 + 14);
                      *(_QWORD *)(v683 + 120) = *((_QWORD *)v684 + 15);
                      v717 = *((_QWORD *)v684 + 17);
                      *(_QWORD *)(v683 + 128) = *((_QWORD *)v684 + 16);
                      *(_QWORD *)(v683 + 136) = v717;
                      *(_QWORD *)(v683 + 144) = *((_QWORD *)v684 + 18);
                      *(_QWORD *)(v683 + 152) = *((_QWORD *)v684 + 19);
                      v718 = *((_QWORD *)v684 + 21);
                      *(_QWORD *)(v683 + 160) = *((_QWORD *)v684 + 20);
                      *(_QWORD *)(v683 + 168) = v718;
                      v1000 = *((_QWORD *)v684 + 23);
                      swift_retain();
                      swift_bridgeObjectRetain();
                      swift_retain();
                      swift_bridgeObjectRetain();
                      swift_retain();
                      swift_bridgeObjectRetain();
                      swift_retain();
                      if (v1000 == 1)
                      {
                        *(_OWORD *)(v683 + 176) = *((_OWORD *)v684 + 11);
                      }
                      else
                      {
                        *(_QWORD *)(v683 + 176) = *((_QWORD *)v684 + 22);
                        *(_QWORD *)(v683 + 184) = *((_QWORD *)v684 + 23);
                        swift_bridgeObjectRetain();
                      }
                      v681 = v1021;
                      *(_QWORD *)(v683 + 192) = *((_QWORD *)v684 + 24);
                    }
                    else
                    {
                      *(_OWORD *)(v683 + 64) = *((_OWORD *)v684 + 4);
                      v739 = *((_OWORD *)v684 + 5);
                      v740 = *((_OWORD *)v684 + 6);
                      v741 = *((_OWORD *)v684 + 8);
                      *(_OWORD *)(v683 + 112) = *((_OWORD *)v684 + 7);
                      *(_OWORD *)(v683 + 128) = v741;
                      *(_OWORD *)(v683 + 80) = v739;
                      *(_OWORD *)(v683 + 96) = v740;
                      v742 = *((_OWORD *)v684 + 9);
                      v743 = *((_OWORD *)v684 + 10);
                      v744 = *((_OWORD *)v684 + 11);
                      *(_QWORD *)(v683 + 192) = *((_QWORD *)v684 + 24);
                      *(_OWORD *)(v683 + 160) = v743;
                      *(_OWORD *)(v683 + 176) = v744;
                      *(_OWORD *)(v683 + 144) = v742;
                      v681 = v1021;
                    }
                    *(_BYTE *)(v683 + 200) = v684[200];
                    v745 = (uint64_t *)(v684 + 208);
                    v746 = *((_QWORD *)v684 + 27);
                    if (v746 >> 60 == 15)
                    {
                      *(_OWORD *)(v683 + 208) = *(_OWORD *)v745;
                    }
                    else
                    {
                      v747 = *v745;
                      sub_1AD0040A0(*v745, *((_QWORD *)v684 + 27));
                      *(_QWORD *)(v683 + 208) = v747;
                      *(_QWORD *)(v683 + 216) = v746;
                    }
                    goto LABEL_545;
                  }
                  v701 = *((_OWORD *)v684 + 1);
                  *(_OWORD *)v683 = *(_OWORD *)v684;
                  *(_OWORD *)(v683 + 16) = v701;
                  v702 = *((_OWORD *)v684 + 2);
                  v703 = *((_OWORD *)v684 + 3);
                  v704 = *((_OWORD *)v684 + 5);
                  *(_OWORD *)(v683 + 64) = *((_OWORD *)v684 + 4);
                  *(_OWORD *)(v683 + 80) = v704;
                  *(_OWORD *)(v683 + 32) = v702;
                  *(_OWORD *)(v683 + 48) = v703;
                  v705 = *((_OWORD *)v684 + 6);
                  v706 = *((_OWORD *)v684 + 7);
                  v707 = *((_OWORD *)v684 + 9);
                  *(_OWORD *)(v683 + 128) = *((_OWORD *)v684 + 8);
                  *(_OWORD *)(v683 + 144) = v707;
                  *(_OWORD *)(v683 + 96) = v705;
                  *(_OWORD *)(v683 + 112) = v706;
                  v708 = *((_OWORD *)v684 + 10);
                  v709 = *((_OWORD *)v684 + 11);
                  v710 = *((_OWORD *)v684 + 13);
                  *(_OWORD *)(v683 + 192) = *((_OWORD *)v684 + 12);
                  *(_OWORD *)(v683 + 208) = v710;
                  *(_OWORD *)(v683 + 160) = v708;
                  *(_OWORD *)(v683 + 176) = v709;
                }
                a1 = v1005;
                v711 = v1026;
                goto LABEL_546;
              }
              (*(void (**)(void *, uint64_t))(v675 + 8))(v672, v674);
            }
            v679 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
            memcpy(v672, v673, *(_QWORD *)(*(_QWORD *)(v679 - 8) + 64));
            goto LABEL_485;
          }
        }
        *(_QWORD *)(v597 + 112) = *((_QWORD *)v598 + 14);
        *(_QWORD *)(v597 + 120) = *((_QWORD *)v598 + 15);
        swift_bridgeObjectRetain();
        goto LABEL_478;
      }
      sub_1AD009758((uint64_t)(v487 + 6), &qword_1ED2E3198);
    }
    *((_OWORD *)v487 + 3) = *((_OWORD *)v488 + 3);
    goto LABEL_429;
  }
  if (v490)
  {
LABEL_372:
    v494 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v487, v488, *(_QWORD *)(*(_QWORD *)(v494 - 8) + 64));
    goto LABEL_726;
  }
  v491 = v488[1];
  *v487 = *v488;
  v487[1] = v491;
  v487[2] = v488[2];
  v487[3] = v488[3];
  v492 = v488[5];
  v487[4] = v488[4];
  v487[5] = v492;
  v493 = v488[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v1012 = v4;
  if (v493 == 1)
  {
    *((_OWORD *)v487 + 3) = *((_OWORD *)v488 + 3);
  }
  else
  {
    v487[6] = v488[6];
    v487[7] = v488[7];
    swift_bridgeObjectRetain();
  }
  v498 = v488;
  v499 = v11[6];
  v500 = (char *)v487 + v499;
  v1020 = v498;
  v1025 = a3;
  v501 = (char *)v498 + v499;
  v502 = *(_QWORD *)((char *)v498 + v499);
  v1015 = v12;
  v1008 = v487;
  if (v502)
  {
    v503 = *((_QWORD *)v501 + 1);
    *(_QWORD *)v500 = v502;
    *((_QWORD *)v500 + 1) = v503;
    *((_QWORD *)v500 + 2) = *((_QWORD *)v501 + 2);
    *((_QWORD *)v500 + 3) = *((_QWORD *)v501 + 3);
    v504 = *((_QWORD *)v501 + 5);
    *((_QWORD *)v500 + 4) = *((_QWORD *)v501 + 4);
    *((_QWORD *)v500 + 5) = v504;
    *((_QWORD *)v500 + 6) = *((_QWORD *)v501 + 6);
    *((_QWORD *)v500 + 7) = *((_QWORD *)v501 + 7);
    v505 = *((_QWORD *)v501 + 9);
    *((_QWORD *)v500 + 8) = *((_QWORD *)v501 + 8);
    *((_QWORD *)v500 + 9) = v505;
    *((_QWORD *)v500 + 10) = *((_QWORD *)v501 + 10);
    *((_QWORD *)v500 + 11) = *((_QWORD *)v501 + 11);
    v506 = *((_QWORD *)v501 + 13);
    *((_QWORD *)v500 + 12) = *((_QWORD *)v501 + 12);
    *((_QWORD *)v500 + 13) = v506;
    v507 = *((_QWORD *)v501 + 15);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v507 == 1)
    {
      *((_OWORD *)v500 + 7) = *((_OWORD *)v501 + 7);
    }
    else
    {
      *((_QWORD *)v500 + 14) = *((_QWORD *)v501 + 14);
      *((_QWORD *)v500 + 15) = *((_QWORD *)v501 + 15);
      swift_bridgeObjectRetain();
    }
    *((_QWORD *)v500 + 16) = *((_QWORD *)v501 + 16);
    v487 = v1008;
  }
  else
  {
    *(_OWORD *)v500 = *(_OWORD *)v501;
    v508 = *((_OWORD *)v501 + 1);
    v509 = *((_OWORD *)v501 + 2);
    v510 = *((_OWORD *)v501 + 4);
    *((_OWORD *)v500 + 3) = *((_OWORD *)v501 + 3);
    *((_OWORD *)v500 + 4) = v510;
    *((_OWORD *)v500 + 1) = v508;
    *((_OWORD *)v500 + 2) = v509;
    v511 = *((_OWORD *)v501 + 5);
    v512 = *((_OWORD *)v501 + 6);
    v513 = *((_OWORD *)v501 + 7);
    *((_QWORD *)v500 + 16) = *((_QWORD *)v501 + 16);
    *((_OWORD *)v500 + 6) = v512;
    *((_OWORD *)v500 + 7) = v513;
    *((_OWORD *)v500 + 5) = v511;
  }
  v514 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v515 = v514[5];
  v516 = &v500[v515];
  v517 = &v501[v515];
  v518 = sub_1AD63AE2C();
  v519 = *(_QWORD *)(v518 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v519 + 48))(v517, 1, v518))
  {
    v520 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v516, v517, *(_QWORD *)(*(_QWORD *)(v520 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v519 + 16))(v516, v517, v518);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v519 + 56))(v516, 0, 1, v518);
  }
  v521 = v514[6];
  v522 = &v500[v521];
  v523 = &v501[v521];
  v524 = *(_QWORD *)&v501[v521];
  if (v524)
  {
    v525 = *((_QWORD *)v523 + 1);
    *(_QWORD *)v522 = v524;
    *((_QWORD *)v522 + 1) = v525;
    v526 = *((_QWORD *)v523 + 3);
    swift_retain();
    if (v526 == 1)
    {
      *((_OWORD *)v522 + 1) = *((_OWORD *)v523 + 1);
    }
    else
    {
      *((_QWORD *)v522 + 2) = *((_QWORD *)v523 + 2);
      *((_QWORD *)v522 + 3) = *((_QWORD *)v523 + 3);
      swift_bridgeObjectRetain();
    }
    v537 = *((_QWORD *)v523 + 5);
    *((_QWORD *)v522 + 4) = *((_QWORD *)v523 + 4);
    *((_QWORD *)v522 + 5) = v537;
    v538 = *((_QWORD *)v523 + 7);
    swift_retain();
    if (v538 == 1)
    {
      *((_OWORD *)v522 + 3) = *((_OWORD *)v523 + 3);
    }
    else
    {
      *((_QWORD *)v522 + 6) = *((_QWORD *)v523 + 6);
      *((_QWORD *)v522 + 7) = *((_QWORD *)v523 + 7);
      swift_bridgeObjectRetain();
    }
    v539 = *((_QWORD *)v523 + 8);
    if (v539)
    {
      v1004 = a1;
      v540 = *((_QWORD *)v523 + 9);
      *((_QWORD *)v522 + 8) = v539;
      *((_QWORD *)v522 + 9) = v540;
      *((_QWORD *)v522 + 10) = *((_QWORD *)v523 + 10);
      *((_QWORD *)v522 + 11) = *((_QWORD *)v523 + 11);
      v541 = *((_QWORD *)v523 + 13);
      *((_QWORD *)v522 + 12) = *((_QWORD *)v523 + 12);
      *((_QWORD *)v522 + 13) = v541;
      *((_QWORD *)v522 + 14) = *((_QWORD *)v523 + 14);
      *((_QWORD *)v522 + 15) = *((_QWORD *)v523 + 15);
      v542 = *((_QWORD *)v523 + 17);
      *((_QWORD *)v522 + 16) = *((_QWORD *)v523 + 16);
      *((_QWORD *)v522 + 17) = v542;
      *((_QWORD *)v522 + 18) = *((_QWORD *)v523 + 18);
      *((_QWORD *)v522 + 19) = *((_QWORD *)v523 + 19);
      v543 = *((_QWORD *)v523 + 21);
      *((_QWORD *)v522 + 20) = *((_QWORD *)v523 + 20);
      *((_QWORD *)v522 + 21) = v543;
      v999 = *((_QWORD *)v523 + 23);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v999 == 1)
      {
        *((_OWORD *)v522 + 11) = *((_OWORD *)v523 + 11);
      }
      else
      {
        *((_QWORD *)v522 + 22) = *((_QWORD *)v523 + 22);
        *((_QWORD *)v522 + 23) = *((_QWORD *)v523 + 23);
        swift_bridgeObjectRetain();
      }
      a1 = v1004;
      v487 = v1008;
      *((_QWORD *)v522 + 24) = *((_QWORD *)v523 + 24);
    }
    else
    {
      *((_OWORD *)v522 + 4) = *((_OWORD *)v523 + 4);
      v544 = *((_OWORD *)v523 + 5);
      v545 = *((_OWORD *)v523 + 6);
      v546 = *((_OWORD *)v523 + 8);
      *((_OWORD *)v522 + 7) = *((_OWORD *)v523 + 7);
      *((_OWORD *)v522 + 8) = v546;
      *((_OWORD *)v522 + 5) = v544;
      *((_OWORD *)v522 + 6) = v545;
      v547 = *((_OWORD *)v523 + 9);
      v548 = *((_OWORD *)v523 + 10);
      v549 = *((_OWORD *)v523 + 11);
      *((_QWORD *)v522 + 24) = *((_QWORD *)v523 + 24);
      *((_OWORD *)v522 + 10) = v548;
      *((_OWORD *)v522 + 11) = v549;
      *((_OWORD *)v522 + 9) = v547;
    }
    v522[200] = v523[200];
    v550 = (uint64_t *)(v523 + 208);
    v551 = *((_QWORD *)v523 + 27);
    if (v551 >> 60 == 15)
    {
      *((_OWORD *)v522 + 13) = *(_OWORD *)v550;
    }
    else
    {
      v552 = *v550;
      sub_1AD0040A0(*v550, v551);
      *((_QWORD *)v522 + 26) = v552;
      *((_QWORD *)v522 + 27) = v551;
    }
  }
  else
  {
    v527 = *((_OWORD *)v523 + 1);
    *(_OWORD *)v522 = *(_OWORD *)v523;
    *((_OWORD *)v522 + 1) = v527;
    v528 = *((_OWORD *)v523 + 2);
    v529 = *((_OWORD *)v523 + 3);
    v530 = *((_OWORD *)v523 + 5);
    *((_OWORD *)v522 + 4) = *((_OWORD *)v523 + 4);
    *((_OWORD *)v522 + 5) = v530;
    *((_OWORD *)v522 + 2) = v528;
    *((_OWORD *)v522 + 3) = v529;
    v531 = *((_OWORD *)v523 + 6);
    v532 = *((_OWORD *)v523 + 7);
    v533 = *((_OWORD *)v523 + 9);
    *((_OWORD *)v522 + 8) = *((_OWORD *)v523 + 8);
    *((_OWORD *)v522 + 9) = v533;
    *((_OWORD *)v522 + 6) = v531;
    *((_OWORD *)v522 + 7) = v532;
    v534 = *((_OWORD *)v523 + 10);
    v535 = *((_OWORD *)v523 + 11);
    v536 = *((_OWORD *)v523 + 13);
    *((_OWORD *)v522 + 12) = *((_OWORD *)v523 + 12);
    *((_OWORD *)v522 + 13) = v536;
    *((_OWORD *)v522 + 10) = v534;
    *((_OWORD *)v522 + 11) = v535;
  }
  v553 = v1026;
  *(_QWORD *)&v500[v514[7]] = *(_QWORD *)&v501[v514[7]];
  v554 = v514[8];
  v555 = &v500[v554];
  v556 = &v501[v554];
  v557 = *(_QWORD *)&v501[v554 + 8];
  swift_bridgeObjectRetain();
  if (v557 >> 60 == 15)
  {
    *(_OWORD *)v555 = *(_OWORD *)v556;
  }
  else
  {
    v558 = *(_QWORD *)v556;
    sub_1AD0040A0(v558, v557);
    *(_QWORD *)v555 = v558;
    *((_QWORD *)v555 + 1) = v557;
  }
  v559 = v514[9];
  v560 = &v500[v559];
  v561 = &v501[v559];
  v562 = *((_QWORD *)v561 + 1);
  if (v562 >> 60 == 15)
  {
    *(_OWORD *)v560 = *(_OWORD *)v561;
  }
  else
  {
    v563 = *(_QWORD *)v561;
    sub_1AD0040A0(*(_QWORD *)v561, *((_QWORD *)v561 + 1));
    *(_QWORD *)v560 = v563;
    *((_QWORD *)v560 + 1) = v562;
  }
  v500[v514[10]] = v501[v514[10]];
  v500[v514[11]] = v501[v514[11]];
  v564 = v514[12];
  v565 = &v500[v564];
  v566 = &v501[v564];
  v567 = *((_QWORD *)v566 + 1);
  if (v567 >> 60 == 15)
  {
    *(_OWORD *)v565 = *(_OWORD *)v566;
  }
  else
  {
    v568 = *(_QWORD *)v566;
    sub_1AD0040A0(*(_QWORD *)v566, *((_QWORD *)v566 + 1));
    *(_QWORD *)v565 = v568;
    *((_QWORD *)v565 + 1) = v567;
  }
  *(_QWORD *)&v500[v514[13]] = *(_QWORD *)&v501[v514[13]];
  *((_BYTE *)v487 + v1026[7]) = *((_BYTE *)v1020 + v1026[7]);
  *((_BYTE *)v487 + v1026[8]) = *((_BYTE *)v1020 + v1026[8]);
  *((_BYTE *)v487 + v1026[9]) = *((_BYTE *)v1020 + v1026[9]);
  *((_BYTE *)v487 + v1026[10]) = *((_BYTE *)v1020 + v1026[10]);
  *((_BYTE *)v487 + v1026[11]) = *((_BYTE *)v1020 + v1026[11]);
  *((_BYTE *)v487 + v1026[12]) = *((_BYTE *)v1020 + v1026[12]);
  *((_BYTE *)v487 + v1026[13]) = *((_BYTE *)v1020 + v1026[13]);
  *((_BYTE *)v487 + v1026[14]) = *((_BYTE *)v1020 + v1026[14]);
  v569 = v1026[15];
  v570 = (char *)v487 + v569;
  v571 = (_QWORD *)((char *)v1020 + v569);
  v572 = v571[1];
  if (v572 >> 60 == 15)
  {
    *(_OWORD *)v570 = *(_OWORD *)v571;
  }
  else
  {
    v573 = *v571;
    sub_1AD0040A0(*v571, v571[1]);
    *(_QWORD *)v570 = v573;
    *((_QWORD *)v570 + 1) = v572;
  }
  v4 = v1012;
  v574 = v1026[16];
  v575 = (char *)v487 + v574;
  v576 = (_QWORD *)((char *)v1020 + v574);
  v577 = v576[1];
  if (v577 >> 60 == 15)
  {
    *(_OWORD *)v575 = *(_OWORD *)v576;
  }
  else
  {
    v578 = *v576;
    sub_1AD0040A0(*v576, v576[1]);
    *(_QWORD *)v575 = v578;
    *((_QWORD *)v575 + 1) = v577;
  }
  *((_BYTE *)v487 + v1026[17]) = *((_BYTE *)v1020 + v1026[17]);
  *((_BYTE *)v487 + v1026[18]) = *((_BYTE *)v1020 + v1026[18]);
  v579 = v1026[19];
  v580 = (char *)v487 + v579;
  v581 = (char *)v1020 + v579;
  v582 = type metadata accessor for CloudKitSharingToken();
  v583 = *(_QWORD *)(v582 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v583 + 48))(v581, 1, v582))
  {
    *(_DWORD *)v580 = *(_DWORD *)v581;
    *((_QWORD *)v580 + 1) = *((_QWORD *)v581 + 1);
    *((_QWORD *)v580 + 2) = *((_QWORD *)v581 + 2);
    v587 = *((_QWORD *)v581 + 4);
    *((_QWORD *)v580 + 3) = *((_QWORD *)v581 + 3);
    *((_QWORD *)v580 + 4) = v587;
    v588 = (uint64_t *)(v581 + 40);
    v589 = *((_QWORD *)v581 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v589 >> 60 == 11 || v589 >> 60 == 15)
    {
      *(_OWORD *)(v580 + 40) = *(_OWORD *)v588;
      if (*((_QWORD *)v581 + 9))
      {
LABEL_426:
        *((_DWORD *)v580 + 14) = *((_DWORD *)v581 + 14);
        v590 = *((_DWORD *)v581 + 15);
        v580[64] = v581[64];
        *((_DWORD *)v580 + 15) = v590;
        v591 = *((_QWORD *)v581 + 10);
        *((_QWORD *)v580 + 9) = *((_QWORD *)v581 + 9);
        *((_QWORD *)v580 + 10) = v591;
        v592 = (uint64_t *)(v581 + 88);
        v593 = *((_QWORD *)v581 + 12);
        swift_retain();
        if (v593 >> 60 != 15)
        {
          v617 = *v592;
          sub_1AD0040A0(v617, v593);
          *((_QWORD *)v580 + 11) = v617;
          *((_QWORD *)v580 + 12) = v593;
LABEL_446:
          v620 = *((_QWORD *)v581 + 14);
          *((_QWORD *)v580 + 13) = *((_QWORD *)v581 + 13);
          *((_QWORD *)v580 + 14) = v620;
          v621 = v581 + 120;
          v622 = *((_QWORD *)v581 + 16);
          swift_retain();
          if (v622 >> 60 == 15)
          {
            *(_OWORD *)(v580 + 120) = *v621;
          }
          else
          {
            v623 = *(_QWORD *)v621;
            sub_1AD0040A0(v623, v622);
            *((_QWORD *)v580 + 15) = v623;
            *((_QWORD *)v580 + 16) = v622;
          }
          v624 = *((_QWORD *)v581 + 18);
          *((_QWORD *)v580 + 17) = *((_QWORD *)v581 + 17);
          *((_QWORD *)v580 + 18) = v624;
          v625 = (uint64_t *)(v581 + 152);
          v626 = *((_QWORD *)v581 + 20);
          swift_retain();
          if (v626 >> 60 == 11 || v626 >> 60 == 15)
          {
            *(_OWORD *)(v580 + 152) = *(_OWORD *)v625;
          }
          else
          {
            v627 = *v625;
            sub_1AD0040A0(*v625, v626);
            *((_QWORD *)v580 + 19) = v627;
            *((_QWORD *)v580 + 20) = v626;
          }
          v628 = *((_QWORD *)v581 + 21);
          if (v628)
          {
            v629 = *((_QWORD *)v581 + 22);
            *((_QWORD *)v580 + 21) = v628;
            *((_QWORD *)v580 + 22) = v629;
            v630 = v581 + 184;
            v631 = *((_QWORD *)v581 + 24);
            swift_retain();
            if (v631 >> 60 == 15)
            {
              *(_OWORD *)(v580 + 184) = *v630;
            }
            else
            {
              v635 = *(_QWORD *)v630;
              sub_1AD0040A0(v635, v631);
              *((_QWORD *)v580 + 23) = v635;
              *((_QWORD *)v580 + 24) = v631;
            }
            *((_DWORD *)v580 + 50) = *((_DWORD *)v581 + 50);
            v636 = *((_QWORD *)v581 + 27);
            *((_QWORD *)v580 + 26) = *((_QWORD *)v581 + 26);
            *((_QWORD *)v580 + 27) = v636;
            v637 = v581 + 224;
            v638 = *((_QWORD *)v581 + 29);
            swift_retain();
            if (v638 >> 60 == 15)
            {
              *((_OWORD *)v580 + 14) = *v637;
            }
            else
            {
              v639 = *(_QWORD *)v637;
              sub_1AD0040A0(v639, v638);
              *((_QWORD *)v580 + 28) = v639;
              *((_QWORD *)v580 + 29) = v638;
            }
          }
          else
          {
            *(_OWORD *)(v580 + 168) = *(_OWORD *)(v581 + 168);
            v632 = *(_OWORD *)(v581 + 184);
            v633 = *(_OWORD *)(v581 + 200);
            v634 = *(_OWORD *)(v581 + 216);
            *((_QWORD *)v580 + 29) = *((_QWORD *)v581 + 29);
            *(_OWORD *)(v580 + 200) = v633;
            *(_OWORD *)(v580 + 216) = v634;
            *(_OWORD *)(v580 + 184) = v632;
          }
          *((_QWORD *)v580 + 30) = *((_QWORD *)v581 + 30);
          v640 = *((_QWORD *)v581 + 32);
          *((_QWORD *)v580 + 31) = *((_QWORD *)v581 + 31);
          *((_QWORD *)v580 + 32) = v640;
          v641 = (uint64_t *)(v581 + 264);
          v642 = *((_QWORD *)v581 + 34);
          swift_bridgeObjectRetain();
          swift_retain();
          if (v642 >> 60 == 11 || v642 >> 60 == 15)
          {
            v643 = a1;
            *(_OWORD *)(v580 + 264) = *(_OWORD *)v641;
          }
          else
          {
            v643 = a1;
            v644 = *v641;
            sub_1AD0040A0(*v641, v642);
            *((_QWORD *)v580 + 33) = v644;
            *((_QWORD *)v580 + 34) = v642;
          }
          v645 = *(int *)(v582 + 24);
          v646 = &v580[v645];
          v647 = &v581[v645];
          v648 = *(_QWORD *)&v581[v645 + 8];
          *(_QWORD *)v646 = *(_QWORD *)&v581[v645];
          *((_QWORD *)v646 + 1) = v648;
          swift_retain();
          v649 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
          v650 = &v646[v649];
          v651 = &v647[v649];
          v652 = sub_1AD63AF28();
          v653 = *(_QWORD *)(v652 - 8);
          v553 = v1026;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v653 + 48))(v651, 1, v652))
          {
            v654 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v650, v651, *(_QWORD *)(*(_QWORD *)(v654 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v653 + 16))(v650, v651, v652);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v653 + 56))(v650, 0, 1, v652);
          }
          v655 = *(int *)(v582 + 28);
          v656 = &v580[v655];
          v657 = &v581[v655];
          v658 = *(_QWORD *)&v581[v655 + 8];
          *(_QWORD *)v656 = *(_QWORD *)&v581[v655];
          *((_QWORD *)v656 + 1) = v658;
          v659 = *(_QWORD *)&v581[v655 + 24];
          swift_retain();
          a1 = v643;
          if (v659 == 1)
          {
            *((_OWORD *)v656 + 1) = *((_OWORD *)v657 + 1);
          }
          else
          {
            *((_QWORD *)v656 + 2) = *((_QWORD *)v657 + 2);
            *((_QWORD *)v656 + 3) = *((_QWORD *)v657 + 3);
            swift_bridgeObjectRetain();
          }
          v586 = v1008;
          v4 = v1012;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v583 + 56))(v580, 0, 1, v582);
          a3 = v1025;
          v585 = v1015;
          goto LABEL_472;
        }
        v594 = v580 + 88;
        v595 = *(_OWORD *)v592;
LABEL_445:
        *v594 = v595;
        goto LABEL_446;
      }
    }
    else
    {
      v618 = *v588;
      sub_1AD0040A0(*v588, v589);
      *((_QWORD *)v580 + 5) = v618;
      *((_QWORD *)v580 + 6) = v589;
      if (*((_QWORD *)v581 + 9))
        goto LABEL_426;
    }
    v594 = v580 + 56;
    v595 = *(_OWORD *)(v581 + 56);
    v619 = *(_OWORD *)(v581 + 88);
    *(_OWORD *)(v580 + 72) = *(_OWORD *)(v581 + 72);
    *(_OWORD *)(v580 + 88) = v619;
    goto LABEL_445;
  }
  v584 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  memcpy(v580, v581, *(_QWORD *)(*(_QWORD *)(v584 - 8) + 64));
  a3 = v1025;
  v585 = v1015;
  v586 = v1008;
LABEL_472:
  v660 = v553[20];
  v661 = (uint64_t)v586 + v660;
  v662 = (_QWORD *)((char *)v1020 + v660);
  v663 = v662[1];
  if (v663 >> 60 == 15)
  {
    *(_OWORD *)v661 = *(_OWORD *)v662;
  }
  else
  {
    v664 = *v662;
    sub_1AD0040A0(*v662, v662[1]);
    *(_QWORD *)v661 = v664;
    *(_QWORD *)(v661 + 8) = v663;
  }
  *((_BYTE *)v586 + v553[21]) = *((_BYTE *)v1020 + v553[21]);
  *((_BYTE *)v586 + v553[22]) = *((_BYTE *)v1020 + v553[22]);
  *((_BYTE *)v586 + v553[23]) = *((_BYTE *)v1020 + v553[23]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v585 + 56))(v586, 0, 1, v553);
LABEL_726:
  v963 = a3[7];
  v964 = (_QWORD *)((char *)a1 + v963);
  v965 = (char *)v4 + v963;
  v966 = *(_QWORD *)((char *)v4 + v963 + 8);
  *v964 = *(_QWORD *)((char *)v4 + v963);
  v964[1] = v966;
  swift_retain();
  swift_release();
  v967 = *((_QWORD *)v965 + 3);
  if (v964[3] == 1)
  {
    if (v967 != 1)
    {
      v964[2] = *((_QWORD *)v965 + 2);
      v964[3] = *((_QWORD *)v965 + 3);
      swift_bridgeObjectRetain();
      goto LABEL_733;
    }
    goto LABEL_731;
  }
  if (v967 == 1)
  {
    sub_1AD009758((uint64_t)(v964 + 2), &qword_1ED2E3198);
LABEL_731:
    *((_OWORD *)v964 + 1) = *((_OWORD *)v965 + 1);
    goto LABEL_733;
  }
  v964[2] = *((_QWORD *)v965 + 2);
  v964[3] = *((_QWORD *)v965 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_733:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)v4 + a3[8]);
  v968 = a3[9];
  v969 = (_QWORD *)((char *)a1 + v968);
  v970 = (char *)v4 + v968;
  v971 = *(_QWORD *)((char *)v4 + v968 + 8);
  *v969 = *(_QWORD *)((char *)v4 + v968);
  v969[1] = v971;
  swift_retain();
  swift_release();
  v972 = *((_QWORD *)v970 + 3);
  if (v969[3] != 1)
  {
    if (v972 != 1)
    {
      v969[2] = *((_QWORD *)v970 + 2);
      v969[3] = *((_QWORD *)v970 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_740;
    }
    sub_1AD009758((uint64_t)(v969 + 2), &qword_1ED2E3198);
    goto LABEL_738;
  }
  if (v972 == 1)
  {
LABEL_738:
    *((_OWORD *)v969 + 1) = *((_OWORD *)v970 + 1);
    goto LABEL_740;
  }
  v969[2] = *((_QWORD *)v970 + 2);
  v969[3] = *((_QWORD *)v970 + 3);
  swift_bridgeObjectRetain();
LABEL_740:
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)v4 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AD31F930(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v3;
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD, _QWORD, _QWORD);
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  _OWORD *v63;
  __int128 v64;
  uint64_t v65;
  _OWORD *v66;
  _OWORD *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  int *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  _OWORD *v96;
  _OWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _OWORD *v117;
  _OWORD *v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  _OWORD *v124;
  uint64_t v125;
  uint64_t v126;
  _OWORD *v127;
  _OWORD *v128;
  __int128 v129;
  char *__dst;
  void *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  int *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v132 = v12;
    v134 = v11;
    v136 = v3;
    v138 = v4;
    v140 = v5;
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    v15 = v9[3];
    v8[2] = v9[2];
    v8[3] = v15;
    v16 = v10[6];
    v17 = (char *)v8 + v16;
    v18 = (char *)v9 + v16;
    v19 = *(_OWORD *)((char *)v9 + v16 + 112);
    *((_OWORD *)v17 + 6) = *(_OWORD *)((char *)v9 + v16 + 96);
    *((_OWORD *)v17 + 7) = v19;
    *((_QWORD *)v17 + 16) = *(_QWORD *)((char *)v9 + v16 + 128);
    v20 = *(_OWORD *)((char *)v9 + v16 + 48);
    *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)v9 + v16 + 32);
    *((_OWORD *)v17 + 3) = v20;
    v21 = *(_OWORD *)((char *)v9 + v16 + 80);
    *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)v9 + v16 + 64);
    *((_OWORD *)v17 + 5) = v21;
    v22 = *(_OWORD *)((char *)v9 + v16 + 16);
    *(_OWORD *)v17 = *(_OWORD *)((char *)v9 + v16);
    *((_OWORD *)v17 + 1) = v22;
    v23 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v24 = v23[5];
    v25 = &v17[v24];
    v26 = &v18[v24];
    v27 = sub_1AD63AE2C();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v30 = v23[6];
    v31 = &v17[v30];
    v32 = &v18[v30];
    v33 = *((_OWORD *)v32 + 5);
    *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
    *((_OWORD *)v31 + 5) = v33;
    v34 = *((_OWORD *)v32 + 3);
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 3) = v34;
    v35 = *((_OWORD *)v32 + 9);
    *((_OWORD *)v31 + 8) = *((_OWORD *)v32 + 8);
    *((_OWORD *)v31 + 9) = v35;
    v36 = *((_OWORD *)v32 + 7);
    *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
    *((_OWORD *)v31 + 7) = v36;
    v37 = *((_OWORD *)v32 + 13);
    *((_OWORD *)v31 + 12) = *((_OWORD *)v32 + 12);
    *((_OWORD *)v31 + 13) = v37;
    v38 = *((_OWORD *)v32 + 11);
    *((_OWORD *)v31 + 10) = *((_OWORD *)v32 + 10);
    *((_OWORD *)v31 + 11) = v38;
    v39 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v39;
    *(_QWORD *)&v17[v23[7]] = *(_QWORD *)&v18[v23[7]];
    *(_OWORD *)&v17[v23[8]] = *(_OWORD *)&v18[v23[8]];
    *(_OWORD *)&v17[v23[9]] = *(_OWORD *)&v18[v23[9]];
    v17[v23[10]] = v18[v23[10]];
    v17[v23[11]] = v18[v23[11]];
    *(_OWORD *)&v17[v23[12]] = *(_OWORD *)&v18[v23[12]];
    *(_QWORD *)&v17[v23[13]] = *(_QWORD *)&v18[v23[13]];
    *((_BYTE *)v8 + v10[7]) = *((_BYTE *)v9 + v10[7]);
    *((_BYTE *)v8 + v10[8]) = *((_BYTE *)v9 + v10[8]);
    *((_BYTE *)v8 + v10[9]) = *((_BYTE *)v9 + v10[9]);
    *((_BYTE *)v8 + v10[10]) = *((_BYTE *)v9 + v10[10]);
    *((_BYTE *)v8 + v10[11]) = *((_BYTE *)v9 + v10[11]);
    *((_BYTE *)v8 + v10[12]) = *((_BYTE *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *(_OWORD *)((char *)v8 + v10[15]) = *(_OWORD *)((char *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    *((_BYTE *)v8 + v10[17]) = *((_BYTE *)v9 + v10[17]);
    *((_BYTE *)v8 + v10[18]) = *((_BYTE *)v9 + v10[18]);
    v40 = v10[19];
    v41 = (_OWORD *)((char *)v8 + v40);
    v42 = (_OWORD *)((char *)v9 + v40);
    v43 = type metadata accessor for CloudKitSharingToken();
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      v3 = v136;
    }
    else
    {
      v46 = v42[13];
      v41[12] = v42[12];
      v41[13] = v46;
      v41[14] = v42[14];
      *((_QWORD *)v41 + 30) = *((_QWORD *)v42 + 30);
      v47 = v42[9];
      v41[8] = v42[8];
      v41[9] = v47;
      v48 = v42[11];
      v41[10] = v42[10];
      v41[11] = v48;
      v49 = v42[5];
      v41[4] = v42[4];
      v41[5] = v49;
      v50 = v42[7];
      v41[6] = v42[6];
      v41[7] = v50;
      v51 = v42[1];
      *v41 = *v42;
      v41[1] = v51;
      v52 = v42[3];
      v41[2] = v42[2];
      v41[3] = v52;
      *(_OWORD *)((char *)v41 + 248) = *(_OWORD *)((char *)v42 + 248);
      *(_OWORD *)((char *)v41 + 264) = *(_OWORD *)((char *)v42 + 264);
      v53 = *(int *)(v43 + 24);
      v54 = (char *)v41 + v53;
      v55 = (char *)v42 + v53;
      *(_OWORD *)((char *)v41 + v53) = *(_OWORD *)((char *)v42 + v53);
      v56 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      __dst = &v54[v56];
      v57 = &v55[v56];
      v58 = sub_1AD63AF28();
      v59 = *(_QWORD *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(__dst, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 32))(__dst, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v58);
      }
      v3 = v136;
      v61 = *(int *)(v43 + 28);
      v62 = (_OWORD *)((char *)v41 + v61);
      v63 = (_OWORD *)((char *)v42 + v61);
      v64 = v63[1];
      *v62 = *v63;
      v62[1] = v64;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    *(_OWORD *)((char *)v8 + v10[20]) = *(_OWORD *)((char *)v9 + v10[20]);
    *((_BYTE *)v8 + v10[21]) = *((_BYTE *)v9 + v10[21]);
    *((_BYTE *)v8 + v10[22]) = *((_BYTE *)v9 + v10[22]);
    *((_BYTE *)v8 + v10[23]) = *((_BYTE *)v9 + v10[23]);
    v11 = v134;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v134 + 56))(v8, 0, 1, v10);
    v4 = v138;
    v5 = v140;
    v12 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v132;
  }
  v65 = v3[6];
  v66 = (_OWORD *)((char *)v5 + v65);
  v67 = (_OWORD *)((char *)v4 + v65);
  if (v12((char *)v4 + v65, 1, v10))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    v135 = v11;
    v137 = v3;
    v139 = v4;
    v141 = v5;
    v69 = v67[1];
    *v66 = *v67;
    v66[1] = v69;
    v70 = v67[3];
    v66[2] = v67[2];
    v66[3] = v70;
    v71 = v10[6];
    v72 = (char *)v66 + v71;
    v73 = (char *)v67 + v71;
    v74 = *(_OWORD *)((char *)v67 + v71 + 112);
    *((_OWORD *)v72 + 6) = *(_OWORD *)((char *)v67 + v71 + 96);
    *((_OWORD *)v72 + 7) = v74;
    *((_QWORD *)v72 + 16) = *(_QWORD *)((char *)v67 + v71 + 128);
    v75 = *(_OWORD *)((char *)v67 + v71 + 48);
    *((_OWORD *)v72 + 2) = *(_OWORD *)((char *)v67 + v71 + 32);
    *((_OWORD *)v72 + 3) = v75;
    v76 = *(_OWORD *)((char *)v67 + v71 + 80);
    *((_OWORD *)v72 + 4) = *(_OWORD *)((char *)v67 + v71 + 64);
    *((_OWORD *)v72 + 5) = v76;
    v77 = *(_OWORD *)((char *)v67 + v71 + 16);
    *(_OWORD *)v72 = *(_OWORD *)((char *)v67 + v71);
    *((_OWORD *)v72 + 1) = v77;
    v78 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    v79 = v78[5];
    v80 = &v72[v79];
    v81 = &v73[v79];
    v82 = sub_1AD63AE2C();
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
    {
      v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v80, v81, v82);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
    v85 = v78[6];
    v86 = &v72[v85];
    v87 = &v73[v85];
    v88 = *((_OWORD *)v87 + 5);
    *((_OWORD *)v86 + 4) = *((_OWORD *)v87 + 4);
    *((_OWORD *)v86 + 5) = v88;
    v89 = *((_OWORD *)v87 + 3);
    *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
    *((_OWORD *)v86 + 3) = v89;
    v90 = *((_OWORD *)v87 + 9);
    *((_OWORD *)v86 + 8) = *((_OWORD *)v87 + 8);
    *((_OWORD *)v86 + 9) = v90;
    v91 = *((_OWORD *)v87 + 7);
    *((_OWORD *)v86 + 6) = *((_OWORD *)v87 + 6);
    *((_OWORD *)v86 + 7) = v91;
    v92 = *((_OWORD *)v87 + 13);
    *((_OWORD *)v86 + 12) = *((_OWORD *)v87 + 12);
    *((_OWORD *)v86 + 13) = v92;
    v93 = *((_OWORD *)v87 + 11);
    *((_OWORD *)v86 + 10) = *((_OWORD *)v87 + 10);
    *((_OWORD *)v86 + 11) = v93;
    v94 = *((_OWORD *)v87 + 1);
    *(_OWORD *)v86 = *(_OWORD *)v87;
    *((_OWORD *)v86 + 1) = v94;
    *(_QWORD *)&v72[v78[7]] = *(_QWORD *)&v73[v78[7]];
    *(_OWORD *)&v72[v78[8]] = *(_OWORD *)&v73[v78[8]];
    *(_OWORD *)&v72[v78[9]] = *(_OWORD *)&v73[v78[9]];
    v72[v78[10]] = v73[v78[10]];
    v72[v78[11]] = v73[v78[11]];
    *(_OWORD *)&v72[v78[12]] = *(_OWORD *)&v73[v78[12]];
    *(_QWORD *)&v72[v78[13]] = *(_QWORD *)&v73[v78[13]];
    *((_BYTE *)v66 + v10[7]) = *((_BYTE *)v67 + v10[7]);
    *((_BYTE *)v66 + v10[8]) = *((_BYTE *)v67 + v10[8]);
    *((_BYTE *)v66 + v10[9]) = *((_BYTE *)v67 + v10[9]);
    *((_BYTE *)v66 + v10[10]) = *((_BYTE *)v67 + v10[10]);
    *((_BYTE *)v66 + v10[11]) = *((_BYTE *)v67 + v10[11]);
    *((_BYTE *)v66 + v10[12]) = *((_BYTE *)v67 + v10[12]);
    *((_BYTE *)v66 + v10[13]) = *((_BYTE *)v67 + v10[13]);
    *((_BYTE *)v66 + v10[14]) = *((_BYTE *)v67 + v10[14]);
    *(_OWORD *)((char *)v66 + v10[15]) = *(_OWORD *)((char *)v67 + v10[15]);
    *(_OWORD *)((char *)v66 + v10[16]) = *(_OWORD *)((char *)v67 + v10[16]);
    *((_BYTE *)v66 + v10[17]) = *((_BYTE *)v67 + v10[17]);
    *((_BYTE *)v66 + v10[18]) = *((_BYTE *)v67 + v10[18]);
    v95 = v10[19];
    v96 = (_OWORD *)((char *)v66 + v95);
    v97 = (_OWORD *)((char *)v67 + v95);
    v98 = type metadata accessor for CloudKitSharingToken();
    v99 = *(_QWORD *)(v98 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
    {
      v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
      memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      v3 = v137;
    }
    else
    {
      v101 = v97[13];
      v96[12] = v97[12];
      v96[13] = v101;
      v96[14] = v97[14];
      *((_QWORD *)v96 + 30) = *((_QWORD *)v97 + 30);
      v102 = v97[9];
      v96[8] = v97[8];
      v96[9] = v102;
      v103 = v97[11];
      v96[10] = v97[10];
      v96[11] = v103;
      v104 = v97[5];
      v96[4] = v97[4];
      v96[5] = v104;
      v105 = v97[7];
      v96[6] = v97[6];
      v96[7] = v105;
      v106 = v97[1];
      *v96 = *v97;
      v96[1] = v106;
      v107 = v97[3];
      v96[2] = v97[2];
      v96[3] = v107;
      *(_OWORD *)((char *)v96 + 248) = *(_OWORD *)((char *)v97 + 248);
      *(_OWORD *)((char *)v96 + 264) = *(_OWORD *)((char *)v97 + 264);
      v108 = *(int *)(v98 + 24);
      v109 = (char *)v96 + v108;
      v110 = (char *)v97 + v108;
      *(_OWORD *)((char *)v96 + v108) = *(_OWORD *)((char *)v97 + v108);
      v111 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v133 = &v109[v111];
      v112 = &v110[v111];
      v113 = sub_1AD63AF28();
      v114 = *(_QWORD *)(v113 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
      {
        v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v133, v112, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v133, v112, v113);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v133, 0, 1, v113);
      }
      v3 = v137;
      v116 = *(int *)(v98 + 28);
      v117 = (_OWORD *)((char *)v96 + v116);
      v118 = (_OWORD *)((char *)v97 + v116);
      v119 = v118[1];
      *v117 = *v118;
      v117[1] = v119;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
    }
    *(_OWORD *)((char *)v66 + v10[20]) = *(_OWORD *)((char *)v67 + v10[20]);
    *((_BYTE *)v66 + v10[21]) = *((_BYTE *)v67 + v10[21]);
    *((_BYTE *)v66 + v10[22]) = *((_BYTE *)v67 + v10[22]);
    *((_BYTE *)v66 + v10[23]) = *((_BYTE *)v67 + v10[23]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v135 + 56))(v66, 0, 1, v10);
    v4 = v139;
    v5 = v141;
  }
  v120 = v3[7];
  v121 = v3[8];
  v122 = *(_OWORD *)((char *)v4 + v120);
  v123 = *(_OWORD *)((char *)v4 + v120 + 16);
  v124 = (_OWORD *)((char *)v5 + v120);
  *v124 = v122;
  v124[1] = v123;
  *((_BYTE *)v5 + v121) = *((_BYTE *)v4 + v121);
  v125 = v3[9];
  v126 = v3[10];
  v127 = (_OWORD *)((char *)v5 + v125);
  v128 = (_OWORD *)((char *)v4 + v125);
  v129 = v128[1];
  *v127 = *v128;
  v127[1] = v129;
  *(_QWORD *)((char *)v5 + v126) = *(_QWORD *)((char *)v4 + v126);
  return v5;
}

_OWORD *sub_1AD32023C(_OWORD *a1, _OWORD *a2, int *a3)
{
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_OWORD *, uint64_t, int *);
  int v14;
  int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  _OWORD *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  void *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void *, uint64_t, uint64_t);
  int v90;
  int v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _OWORD *v114;
  _OWORD *v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  _QWORD *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t *v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t *v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t *v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  _OWORD *v157;
  uint64_t v158;
  uint64_t (*v159)(char *, uint64_t, uint64_t);
  int v160;
  size_t v161;
  void *v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  char *v183;
  _OWORD *v184;
  __int128 v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  _OWORD *v189;
  unint64_t v190;
  unint64_t v191;
  __int128 v192;
  _QWORD *v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  unint64_t v203;
  unint64_t v204;
  __int128 v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t (*v224)(char *, uint64_t, uint64_t);
  int v225;
  size_t v226;
  char *v227;
  uint64_t v228;
  char *v229;
  char *v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t *v235;
  unint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _OWORD *v240;
  _OWORD *v241;
  int v242;
  int v243;
  __int128 v244;
  __int128 v245;
  uint64_t v246;
  char *v247;
  char *v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  int *v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  uint64_t v274;
  _OWORD *v275;
  _OWORD *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  uint64_t v303;
  uint64_t v304;
  _OWORD *v305;
  _OWORD *v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  uint64_t v312;
  void *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t (*v317)(void *, uint64_t, uint64_t);
  int v318;
  int v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  _QWORD *v326;
  uint64_t v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  _QWORD *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  _OWORD *v342;
  _OWORD *v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  uint64_t v348;
  _QWORD *v349;
  unint64_t v350;
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t *v354;
  uint64_t *v355;
  unint64_t v356;
  unint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t *v360;
  uint64_t *v361;
  unint64_t v362;
  unint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t *v366;
  uint64_t *v367;
  unint64_t v368;
  unint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t *v372;
  uint64_t *v373;
  unint64_t v374;
  unint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t *v378;
  uint64_t *v379;
  unint64_t v380;
  unint64_t v381;
  uint64_t v382;
  uint64_t v383;
  _OWORD *v384;
  _OWORD *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t (*v388)(_OWORD *, uint64_t, uint64_t);
  int v389;
  int v390;
  uint64_t v391;
  uint64_t v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  uint64_t v400;
  char *v401;
  char *v402;
  uint64_t v403;
  char *v404;
  char *v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  _QWORD *v409;
  unint64_t v410;
  unint64_t v411;
  uint64_t v412;
  _OWORD *v413;
  _OWORD *v414;
  __int128 v415;
  uint64_t v416;
  int v417;
  uint64_t v418;
  _OWORD *v419;
  unint64_t v420;
  unint64_t v421;
  __int128 v422;
  _QWORD *v423;
  unint64_t v424;
  unint64_t v425;
  uint64_t v426;
  _QWORD *v427;
  unint64_t v428;
  unint64_t v429;
  uint64_t v430;
  uint64_t v431;
  _QWORD *v432;
  unint64_t v433;
  unint64_t v434;
  __int128 v435;
  __int128 v436;
  uint64_t v437;
  uint64_t v438;
  _QWORD *v439;
  unint64_t v440;
  unint64_t v441;
  uint64_t v442;
  _QWORD *v443;
  unint64_t v444;
  unint64_t v445;
  uint64_t v446;
  char *v447;
  char *v448;
  uint64_t v449;
  char *v450;
  char *v451;
  uint64_t v452;
  uint64_t (*v453)(char *, uint64_t, uint64_t);
  int v454;
  size_t v455;
  char *v456;
  uint64_t v457;
  char *v458;
  char *v459;
  _QWORD *v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t *v463;
  uint64_t *v464;
  unint64_t v465;
  unint64_t v466;
  uint64_t v467;
  uint64_t v468;
  char *v469;
  char *v470;
  _OWORD *v471;
  uint64_t v472;
  uint64_t v473;
  char *v474;
  char *v475;
  _QWORD *v476;
  uint64_t v477;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  _OWORD *v485;
  _QWORD *__src;
  int *v487;
  uint64_t v488;
  uint64_t v489;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t (*v493)(_OWORD *, uint64_t, int *);
  uint64_t (*v494)(_OWORD *, uint64_t, int *);
  char *v495;
  int *v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  char *v500;
  uint64_t v501;
  uint64_t v502;
  _OWORD *v503;
  _OWORD *v504;
  _OWORD *v505;
  _OWORD *v506;
  _OWORD *v507;
  _OWORD *v508;
  _OWORD *v509;
  _OWORD *v510;
  int *v511;
  int *v512;
  int *v513;
  int *v514;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  swift_release();
  v6 = v4 + 1;
  if (*((_QWORD *)v5 + 3) == 1)
    goto LABEL_4;
  v7 = *((_QWORD *)v4 + 3);
  if (v7 == 1)
  {
    sub_1AD009758((uint64_t)(v5 + 1), &qword_1ED2E3198);
LABEL_4:
    v5[1] = *v6;
    goto LABEL_6;
  }
  *((_QWORD *)v5 + 2) = *(_QWORD *)v6;
  *((_QWORD *)v5 + 3) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = a3[5];
  v9 = (_OWORD *)((char *)v5 + v8);
  v10 = (_OWORD *)((char *)v4 + v8);
  v11 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_1AD066230((uint64_t)v9, type metadata accessor for CloudKitShareParticipant);
      goto LABEL_12;
    }
    v498 = v12;
    *v9 = *v10;
    swift_release();
    v33 = *((_QWORD *)v10 + 3);
    *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 3) = v33;
    swift_bridgeObjectRelease();
    v9[2] = v10[2];
    swift_release();
    v34 = v10 + 3;
    v504 = v4;
    if (*((_QWORD *)v9 + 7) != 1)
    {
      v35 = *((_QWORD *)v10 + 7);
      if (v35 != 1)
      {
        *((_QWORD *)v9 + 6) = *v34;
        *((_QWORD *)v9 + 7) = v35;
        swift_bridgeObjectRelease();
LABEL_23:
        v67 = v11[6];
        v68 = (uint64_t)v9 + v67;
        v69 = (char *)v10 + v67;
        v508 = v5;
        v512 = a3;
        v494 = v13;
        if (*(_QWORD *)((char *)v9 + v67))
        {
          if (*(_QWORD *)v69)
          {
            v70 = *((_QWORD *)v69 + 1);
            *(_QWORD *)v68 = *(_QWORD *)v69;
            *(_QWORD *)(v68 + 8) = v70;
            swift_release();
            v71 = *((_QWORD *)v69 + 3);
            *(_QWORD *)(v68 + 16) = *((_QWORD *)v69 + 2);
            *(_QWORD *)(v68 + 24) = v71;
            swift_bridgeObjectRelease();
            *(_OWORD *)(v68 + 32) = *((_OWORD *)v69 + 2);
            swift_release();
            v72 = *((_QWORD *)v69 + 7);
            *(_QWORD *)(v68 + 48) = *((_QWORD *)v69 + 6);
            *(_QWORD *)(v68 + 56) = v72;
            swift_bridgeObjectRelease();
            *(_OWORD *)(v68 + 64) = *((_OWORD *)v69 + 4);
            swift_release();
            v73 = *((_QWORD *)v69 + 11);
            *(_QWORD *)(v68 + 80) = *((_QWORD *)v69 + 10);
            *(_QWORD *)(v68 + 88) = v73;
            swift_bridgeObjectRelease();
            *(_OWORD *)(v68 + 96) = *((_OWORD *)v69 + 6);
            swift_release();
            v74 = v69 + 112;
            if (*(_QWORD *)(v68 + 120) != 1)
            {
              v75 = *((_QWORD *)v69 + 15);
              if (v75 != 1)
              {
                *(_QWORD *)(v68 + 112) = *v74;
                *(_QWORD *)(v68 + 120) = v75;
                swift_bridgeObjectRelease();
                goto LABEL_35;
              }
              sub_1AD009758(v68 + 112, &qword_1ED2E3198);
            }
            *(_OWORD *)(v68 + 112) = *(_OWORD *)v74;
LABEL_35:
            *(_QWORD *)(v68 + 128) = *((_QWORD *)v69 + 16);
LABEL_36:
            v487 = (int *)type metadata accessor for CloudKitUserIdentity(0);
            __dsta = v69;
            v84 = v487[5];
            v85 = (void *)(v68 + v84);
            v86 = &v69[v84];
            v87 = sub_1AD63AE2C();
            v88 = *(_QWORD *)(v87 - 8);
            v89 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v88 + 48);
            v90 = v89(v85, 1, v87);
            v91 = v89(v86, 1, v87);
            if (v90)
            {
              if (!v91)
              {
                (*(void (**)(void *, char *, uint64_t))(v88 + 32))(v85, v86, v87);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
                goto LABEL_42;
              }
            }
            else
            {
              if (!v91)
              {
                (*(void (**)(void *, char *, uint64_t))(v88 + 40))(v85, v86, v87);
LABEL_42:
                v93 = __dsta;
                v94 = v487[6];
                v95 = v68 + v94;
                v96 = &__dsta[v94];
                if (*(_QWORD *)(v68 + v94))
                {
                  if (*(_QWORD *)v96)
                  {
                    v97 = *((_QWORD *)v96 + 1);
                    *(_QWORD *)v95 = *(_QWORD *)v96;
                    *(_QWORD *)(v95 + 8) = v97;
                    swift_release();
                    v98 = v96 + 16;
                    if (*(_QWORD *)(v95 + 24) != 1)
                    {
                      v99 = *((_QWORD *)v96 + 3);
                      if (v99 != 1)
                      {
                        *(_QWORD *)(v95 + 16) = *v98;
                        *(_QWORD *)(v95 + 24) = v99;
                        swift_bridgeObjectRelease();
LABEL_52:
                        *(_OWORD *)(v95 + 32) = *((_OWORD *)v96 + 2);
                        swift_release();
                        v107 = v96 + 48;
                        if (*(_QWORD *)(v95 + 56) != 1)
                        {
                          v108 = *((_QWORD *)v96 + 7);
                          if (v108 != 1)
                          {
                            *(_QWORD *)(v95 + 48) = *v107;
                            *(_QWORD *)(v95 + 56) = v108;
                            swift_bridgeObjectRelease();
LABEL_57:
                            v109 = *((_QWORD *)v96 + 8);
                            if (*(_QWORD *)(v95 + 64))
                            {
                              if (v109)
                              {
                                v110 = *((_QWORD *)v96 + 9);
                                *(_QWORD *)(v95 + 64) = v109;
                                *(_QWORD *)(v95 + 72) = v110;
                                swift_release();
                                v111 = *((_QWORD *)v96 + 11);
                                *(_QWORD *)(v95 + 80) = *((_QWORD *)v96 + 10);
                                *(_QWORD *)(v95 + 88) = v111;
                                swift_bridgeObjectRelease();
                                *(_OWORD *)(v95 + 96) = *((_OWORD *)v96 + 6);
                                swift_release();
                                v112 = *((_QWORD *)v96 + 15);
                                *(_QWORD *)(v95 + 112) = *((_QWORD *)v96 + 14);
                                *(_QWORD *)(v95 + 120) = v112;
                                swift_bridgeObjectRelease();
                                *(_OWORD *)(v95 + 128) = *((_OWORD *)v96 + 8);
                                swift_release();
                                v113 = *((_QWORD *)v96 + 19);
                                *(_QWORD *)(v95 + 144) = *((_QWORD *)v96 + 18);
                                *(_QWORD *)(v95 + 152) = v113;
                                swift_bridgeObjectRelease();
                                *(_OWORD *)(v95 + 160) = *((_OWORD *)v96 + 10);
                                swift_release();
                                v114 = (_OWORD *)(v95 + 176);
                                v115 = v96 + 176;
                                if (*(_QWORD *)(v95 + 184) == 1)
                                {
                                  *v114 = *v115;
                                  v93 = __dsta;
                                }
                                else
                                {
                                  v120 = *((_QWORD *)v96 + 23);
                                  v93 = __dsta;
                                  if (v120 == 1)
                                  {
                                    sub_1AD009758(v95 + 176, &qword_1ED2E3198);
                                    *v114 = *v115;
                                  }
                                  else
                                  {
                                    *(_QWORD *)(v95 + 176) = *(_QWORD *)v115;
                                    *(_QWORD *)(v95 + 184) = v120;
                                    swift_bridgeObjectRelease();
                                  }
                                }
                                *(_QWORD *)(v95 + 192) = *((_QWORD *)v96 + 24);
LABEL_67:
                                *(_BYTE *)(v95 + 200) = v96[200];
                                v121 = v96 + 208;
                                v122 = *(_QWORD *)(v95 + 216);
                                if (v122 >> 60 != 15)
                                {
                                  v123 = *((_QWORD *)v96 + 27);
                                  if (v123 >> 60 != 15)
                                  {
                                    v124 = *(_QWORD *)(v95 + 208);
                                    *(_QWORD *)(v95 + 208) = *v121;
                                    *(_QWORD *)(v95 + 216) = v123;
                                    sub_1AD00412C(v124, v122);
LABEL_72:
                                    a3 = v512;
                                    v13 = v494;
                                    *(_QWORD *)(v68 + v487[7]) = *(_QWORD *)&v93[v487[7]];
                                    swift_bridgeObjectRelease();
                                    v125 = v487[8];
                                    v126 = (uint64_t *)(v68 + v125);
                                    v127 = (uint64_t *)&v93[v125];
                                    v128 = *(_QWORD *)(v68 + v125 + 8);
                                    if (v128 >> 60 != 15)
                                    {
                                      v129 = v127[1];
                                      if (v129 >> 60 != 15)
                                      {
                                        v130 = *v126;
                                        *v126 = *v127;
                                        v126[1] = v129;
                                        sub_1AD00412C(v130, v128);
LABEL_77:
                                        v131 = v487[9];
                                        v132 = (uint64_t *)(v68 + v131);
                                        v133 = (uint64_t *)&v93[v131];
                                        v134 = *(_QWORD *)(v68 + v131 + 8);
                                        if (v134 >> 60 != 15)
                                        {
                                          v135 = v133[1];
                                          if (v135 >> 60 != 15)
                                          {
                                            v136 = *v132;
                                            *v132 = *v133;
                                            v132[1] = v135;
                                            sub_1AD00412C(v136, v134);
LABEL_82:
                                            *(_BYTE *)(v68 + v487[10]) = v93[v487[10]];
                                            *(_BYTE *)(v68 + v487[11]) = v93[v487[11]];
                                            v137 = v487[12];
                                            v138 = (uint64_t *)(v68 + v137);
                                            v139 = (uint64_t *)&v93[v137];
                                            v140 = *(_QWORD *)(v68 + v137 + 8);
                                            if (v140 >> 60 != 15)
                                            {
                                              v141 = v139[1];
                                              if (v141 >> 60 != 15)
                                              {
                                                v142 = *v138;
                                                *v138 = *v139;
                                                v138[1] = v141;
                                                sub_1AD00412C(v142, v140);
LABEL_87:
                                                *(_QWORD *)(v68 + v487[13]) = *(_QWORD *)&v93[v487[13]];
                                                *((_BYTE *)v9 + v11[7]) = *((_BYTE *)v10 + v11[7]);
                                                *((_BYTE *)v9 + v11[8]) = *((_BYTE *)v10 + v11[8]);
                                                *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
                                                *((_BYTE *)v9 + v11[10]) = *((_BYTE *)v10 + v11[10]);
                                                *((_BYTE *)v9 + v11[11]) = *((_BYTE *)v10 + v11[11]);
                                                *((_BYTE *)v9 + v11[12]) = *((_BYTE *)v10 + v11[12]);
                                                *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
                                                *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
                                                v143 = v11[15];
                                                v144 = (uint64_t *)((char *)v9 + v143);
                                                v145 = (uint64_t *)((char *)v10 + v143);
                                                v146 = *(_QWORD *)((char *)v9 + v143 + 8);
                                                if (v146 >> 60 != 15)
                                                {
                                                  v147 = v145[1];
                                                  if (v147 >> 60 != 15)
                                                  {
                                                    v148 = *v144;
                                                    *v144 = *v145;
                                                    v144[1] = v147;
                                                    sub_1AD00412C(v148, v146);
LABEL_92:
                                                    v149 = v11[16];
                                                    v150 = (uint64_t *)((char *)v9 + v149);
                                                    v151 = (uint64_t *)((char *)v10 + v149);
                                                    v152 = *(_QWORD *)((char *)v9 + v149 + 8);
                                                    if (v152 >> 60 != 15)
                                                    {
                                                      v153 = v151[1];
                                                      if (v153 >> 60 != 15)
                                                      {
                                                        v154 = *v150;
                                                        *v150 = *v151;
                                                        v150[1] = v153;
                                                        sub_1AD00412C(v154, v152);
LABEL_97:
                                                        *((_BYTE *)v9 + v11[17]) = *((_BYTE *)v10 + v11[17]);
                                                        *((_BYTE *)v9 + v11[18]) = *((_BYTE *)v10 + v11[18]);
                                                        v155 = v11[19];
                                                        v156 = (char *)v9 + v155;
                                                        v157 = (_OWORD *)((char *)v10 + v155);
                                                        v158 = type metadata accessor for CloudKitSharingToken();
                                                        __src = *(_QWORD **)(v158 - 8);
                                                        v159 = (uint64_t (*)(char *, uint64_t, uint64_t))__src[6];
                                                        __dstb = v156;
                                                        LODWORD(v156) = v159(v156, 1, v158);
                                                        v488 = v158;
                                                        v160 = v159((char *)v157, 1, v158);
                                                        if ((_DWORD)v156)
                                                        {
                                                          if (v160)
                                                          {
                                                            v161 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370)
                                                                                         - 8)
                                                                             + 64);
                                                            v162 = __dstb;
LABEL_102:
                                                            memcpy(v162, v157, v161);
                                                            goto LABEL_169;
                                                          }
                                                          v163 = v157[13];
                                                          *((_OWORD *)__dstb + 12) = v157[12];
                                                          *((_OWORD *)__dstb + 13) = v163;
                                                          *((_OWORD *)__dstb + 14) = v157[14];
                                                          *((_QWORD *)__dstb + 30) = *((_QWORD *)v157 + 30);
                                                          v164 = v157[9];
                                                          *((_OWORD *)__dstb + 8) = v157[8];
                                                          *((_OWORD *)__dstb + 9) = v164;
                                                          v165 = v157[11];
                                                          *((_OWORD *)__dstb + 10) = v157[10];
                                                          *((_OWORD *)__dstb + 11) = v165;
                                                          v166 = v157[5];
                                                          *((_OWORD *)__dstb + 4) = v157[4];
                                                          *((_OWORD *)__dstb + 5) = v166;
                                                          v167 = v157[7];
                                                          *((_OWORD *)__dstb + 6) = v157[6];
                                                          *((_OWORD *)__dstb + 7) = v167;
                                                          v168 = v157[1];
                                                          *(_OWORD *)__dstb = *v157;
                                                          *((_OWORD *)__dstb + 1) = v168;
                                                          v169 = v157[3];
                                                          *((_OWORD *)__dstb + 2) = v157[2];
                                                          *((_OWORD *)__dstb + 3) = v169;
                                                          *(_OWORD *)(__dstb + 248) = *(_OWORD *)((char *)v157 + 248);
                                                          *(_OWORD *)(__dstb + 264) = *(_OWORD *)((char *)v157 + 264);
                                                          v170 = *(int *)(v158 + 24);
                                                          v171 = &__dstb[v170];
                                                          v172 = (char *)v157 + v170;
                                                          *(_OWORD *)&__dstb[v170] = *(_OWORD *)((char *)v157 + v170);
                                                          v173 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                        + 28);
                                                          v174 = &v171[v173];
                                                          v175 = &v172[v173];
                                                          v176 = sub_1AD63AF28();
                                                          v177 = *(_QWORD *)(v176 - 8);
                                                          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v175, 1, v176))
                                                          {
                                                            v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                            memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
                                                          }
                                                          else
                                                          {
                                                            (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v174, v175, v176);
                                                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v174, 0, 1, v176);
                                                          }
                                                          a3 = v512;
                                                          v13 = v494;
                                                          v182 = *(int *)(v158 + 28);
                                                          v183 = &__dstb[v182];
                                                          v184 = (_OWORD *)((char *)v157 + v182);
                                                          v185 = v184[1];
                                                          *(_OWORD *)v183 = *v184;
                                                          *((_OWORD *)v183 + 1) = v185;
                                                          ((void (*)(void))__src[7])();
LABEL_169:
                                                          v4 = v504;
                                                          v5 = v508;
                                                          v233 = v11[20];
                                                          v234 = (uint64_t *)((char *)v9 + v233);
                                                          v235 = (uint64_t *)((char *)v10 + v233);
                                                          v236 = *(_QWORD *)((char *)v9 + v233 + 8);
                                                          if (v236 >> 60 != 15)
                                                          {
                                                            v237 = v235[1];
                                                            if (v237 >> 60 != 15)
                                                            {
                                                              v238 = *v234;
                                                              *v234 = *v235;
                                                              v234[1] = v237;
                                                              sub_1AD00412C(v238, v236);
                                                              goto LABEL_174;
                                                            }
                                                            sub_1AD007EC0((uint64_t)v234);
                                                          }
                                                          *(_OWORD *)v234 = *(_OWORD *)v235;
LABEL_174:
                                                          v12 = v498;
                                                          *((_BYTE *)v9 + v11[21]) = *((_BYTE *)v10 + v11[21]);
                                                          *((_BYTE *)v9 + v11[22]) = *((_BYTE *)v10 + v11[22]);
                                                          *((_BYTE *)v9 + v11[23]) = *((_BYTE *)v10 + v11[23]);
                                                          goto LABEL_175;
                                                        }
                                                        if (v160)
                                                        {
                                                          sub_1AD066230((uint64_t)__dstb, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                                                          v161 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370)
                                                                                       - 8)
                                                                           + 64);
                                                          v162 = __dstb;
                                                          goto LABEL_102;
                                                        }
                                                        *(_DWORD *)__dstb = *(_DWORD *)v157;
                                                        *((_QWORD *)__dstb + 1) = *((_QWORD *)v157 + 1);
                                                        swift_bridgeObjectRelease();
                                                        *((_QWORD *)__dstb + 2) = *((_QWORD *)v157 + 2);
                                                        swift_bridgeObjectRelease();
                                                        *(_OWORD *)(__dstb + 24) = *(_OWORD *)((char *)v157 + 24);
                                                        swift_release();
                                                        v179 = (_QWORD *)v157 + 5;
                                                        v180 = *((_QWORD *)__dstb + 6);
                                                        if (v180 >> 60 != 11)
                                                        {
                                                          v181 = *((_QWORD *)v157 + 6);
                                                          if (v181 >> 60 == 11)
                                                          {
                                                            sub_1AD009758((uint64_t)(__dstb + 40), &qword_1ED2E3250);
                                                          }
                                                          else if (v180 >> 60 != 15)
                                                          {
                                                            if (v181 >> 60 != 15)
                                                            {
                                                              v479 = *((_QWORD *)__dstb + 5);
                                                              *((_QWORD *)__dstb + 5) = *v179;
                                                              *((_QWORD *)__dstb + 6) = v181;
                                                              sub_1AD00412C(v479, v180);
LABEL_114:
                                                              if (*((_QWORD *)__dstb + 9))
                                                              {
                                                                v186 = *((_QWORD *)v157 + 9);
                                                                if (v186)
                                                                {
                                                                  v187 = *((_DWORD *)v157 + 15);
                                                                  *((_DWORD *)__dstb + 14) = *((_DWORD *)v157 + 14);
                                                                  *((_DWORD *)__dstb + 15) = v187;
                                                                  __dstb[64] = *((_BYTE *)v157 + 64);
                                                                  v188 = *((_QWORD *)v157 + 10);
                                                                  *((_QWORD *)__dstb + 9) = v186;
                                                                  *((_QWORD *)__dstb + 10) = v188;
                                                                  swift_release();
                                                                  v189 = (_OWORD *)((char *)v157 + 88);
                                                                  v190 = *((_QWORD *)__dstb + 12);
                                                                  if (v190 >> 60 == 15)
                                                                  {
LABEL_119:
                                                                    *(_OWORD *)(__dstb + 88) = *v189;
                                                                    goto LABEL_122;
                                                                  }
                                                                  v191 = *((_QWORD *)v157 + 12);
                                                                  if (v191 >> 60 == 15)
                                                                  {
                                                                    sub_1AD007EC0((uint64_t)(__dstb + 88));
                                                                    goto LABEL_119;
                                                                  }
                                                                  v207 = *((_QWORD *)__dstb + 11);
                                                                  *((_QWORD *)__dstb + 11) = *(_QWORD *)v189;
                                                                  *((_QWORD *)__dstb + 12) = v191;
                                                                  sub_1AD00412C(v207, v190);
LABEL_122:
                                                                  *(_OWORD *)(__dstb + 104) = *(_OWORD *)((char *)v157 + 104);
                                                                  swift_release();
                                                                  v193 = (_QWORD *)v157 + 15;
                                                                  v194 = *((_QWORD *)__dstb + 16);
                                                                  if (v194 >> 60 != 15)
                                                                  {
                                                                    v195 = *((_QWORD *)v157 + 16);
                                                                    if (v195 >> 60 != 15)
                                                                    {
                                                                      v196 = *((_QWORD *)__dstb + 15);
                                                                      *((_QWORD *)__dstb + 15) = *v193;
                                                                      *((_QWORD *)__dstb + 16) = v195;
                                                                      sub_1AD00412C(v196, v194);
LABEL_127:
                                                                      *(_OWORD *)(__dstb + 136) = *(_OWORD *)((char *)v157 + 136);
                                                                      swift_release();
                                                                      v197 = (_QWORD *)v157 + 19;
                                                                      v198 = *((_QWORD *)__dstb + 20);
                                                                      if (v198 >> 60 != 11)
                                                                      {
                                                                        v199 = *((_QWORD *)v157 + 20);
                                                                        if (v199 >> 60 == 11)
                                                                        {
                                                                          sub_1AD009758((uint64_t)(__dstb + 152), &qword_1ED2E3250);
                                                                        }
                                                                        else if (v198 >> 60 != 15)
                                                                        {
                                                                          if (v199 >> 60 != 15)
                                                                          {
                                                                            v480 = *((_QWORD *)__dstb + 19);
                                                                            *((_QWORD *)__dstb + 19) = *v197;
                                                                            *((_QWORD *)__dstb + 20) = v199;
                                                                            sub_1AD00412C(v480, v198);
LABEL_134:
                                                                            v200 = *((_QWORD *)v157 + 21);
                                                                            if (*((_QWORD *)__dstb + 21))
                                                                            {
                                                                              if (v200)
                                                                              {
                                                                                v201 = *((_QWORD *)v157 + 22);
                                                                                *((_QWORD *)__dstb + 21) = v200;
                                                                                *((_QWORD *)__dstb + 22) = v201;
                                                                                swift_release();
                                                                                v202 = (_QWORD *)v157 + 23;
                                                                                v203 = *((_QWORD *)__dstb + 24);
                                                                                if (v203 >> 60 != 15)
                                                                                {
                                                                                  v204 = *((_QWORD *)v157 + 24);
                                                                                  if (v204 >> 60 != 15)
                                                                                  {
                                                                                    v208 = *((_QWORD *)__dstb + 23);
                                                                                    *((_QWORD *)__dstb + 23) = *v202;
                                                                                    *((_QWORD *)__dstb + 24) = v204;
                                                                                    sub_1AD00412C(v208, v203);
LABEL_144:
                                                                                    *((_DWORD *)__dstb + 50) = *((_DWORD *)v157 + 50);
                                                                                    *((_OWORD *)__dstb + 13) = v157[13];
                                                                                    swift_release();
                                                                                    v209 = v157 + 14;
                                                                                    v210 = *((_QWORD *)__dstb + 29);
                                                                                    if (v210 >> 60 != 15)
                                                                                    {
                                                                                      v211 = *((_QWORD *)v157 + 29);
                                                                                      if (v211 >> 60 != 15)
                                                                                      {
                                                                                        v212 = *((_QWORD *)__dstb + 28);
                                                                                        *((_QWORD *)__dstb + 28) = *v209;
                                                                                        *((_QWORD *)__dstb + 29) = v211;
                                                                                        sub_1AD00412C(v212, v210);
LABEL_149:
                                                                                        *((_QWORD *)__dstb + 30) = *((_QWORD *)v157 + 30);
                                                                                        swift_bridgeObjectRelease();
                                                                                        *(_OWORD *)(__dstb + 248) = *(_OWORD *)((char *)v157 + 248);
                                                                                        swift_release();
                                                                                        v213 = (_QWORD *)v157 + 33;
                                                                                        v214 = *((_QWORD *)__dstb + 34);
                                                                                        if (v214 >> 60 != 11)
                                                                                        {
                                                                                          v215 = *((_QWORD *)v157 + 34);
                                                                                          if (v215 >> 60 == 11)
                                                                                          {
                                                                                            sub_1AD009758((uint64_t)(__dstb + 264), &qword_1ED2E3250);
                                                                                          }
                                                                                          else if (v214 >> 60 != 15)
                                                                                          {
                                                                                            if (v215 >> 60 != 15)
                                                                                            {
                                                                                              v481 = *((_QWORD *)__dstb + 33);
                                                                                              *((_QWORD *)__dstb + 33) = *v213;
                                                                                              *((_QWORD *)__dstb + 34) = v215;
                                                                                              sub_1AD00412C(v481, v214);
LABEL_156:
                                                                                              v216 = *(int *)(v158 + 24);
                                                                                              v217 = &__dstb[v216];
                                                                                              v485 = v157;
                                                                                              v218 = (char *)v157 + v216;
                                                                                              *(_OWORD *)&__dstb[v216] = *(_OWORD *)((char *)v157 + v216);
                                                                                              swift_release();
                                                                                              v219 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
                                                                                              v220 = &v217[v219];
                                                                                              v221 = &v218[v219];
                                                                                              v222 = sub_1AD63AF28();
                                                                                              v223 = *(_QWORD *)(v222 - 8);
                                                                                              v224 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v223 + 48);
                                                                                              LODWORD(v218) = v224(v220, 1, v222);
                                                                                              v225 = v224(v221, 1, v222);
                                                                                              if ((_DWORD)v218)
                                                                                              {
                                                                                                if (v225)
                                                                                                {
                                                                                                  v226 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
                                                                                                  v227 = v220;
LABEL_161:
                                                                                                  memcpy(v227, v221, v226);
                                                                                                  goto LABEL_164;
                                                                                                }
                                                                                                (*(void (**)(char *, char *, uint64_t))(v223 + 32))(v220, v221, v222);
                                                                                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v223 + 56))(v220, 0, 1, v222);
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                if (v225)
                                                                                                {
                                                                                                  (*(void (**)(char *, uint64_t))(v223 + 8))(v220, v222);
                                                                                                  v226 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
                                                                                                  v227 = v220;
                                                                                                  goto LABEL_161;
                                                                                                }
                                                                                                (*(void (**)(char *, char *, uint64_t))(v223 + 40))(v220, v221, v222);
                                                                                              }
LABEL_164:
                                                                                              a3 = v512;
                                                                                              v13 = v494;
                                                                                              v228 = *(int *)(v488 + 28);
                                                                                              v229 = &__dstb[v228];
                                                                                              v230 = (char *)v485 + v228;
                                                                                              *(_OWORD *)v229 = *(_OWORD *)((char *)v485 + v228);
                                                                                              swift_release();
                                                                                              v231 = v230 + 16;
                                                                                              if (*((_QWORD *)v229 + 3) != 1)
                                                                                              {
                                                                                                v232 = *((_QWORD *)v230 + 3);
                                                                                                if (v232 != 1)
                                                                                                {
                                                                                                  *((_QWORD *)v229 + 2) = *v231;
                                                                                                  *((_QWORD *)v229 + 3) = v232;
                                                                                                  swift_bridgeObjectRelease();
                                                                                                  goto LABEL_169;
                                                                                                }
                                                                                                sub_1AD009758((uint64_t)(v229 + 16), &qword_1ED2E3198);
                                                                                              }
                                                                                              *((_OWORD *)v229 + 1) = *(_OWORD *)v231;
                                                                                              goto LABEL_169;
                                                                                            }
                                                                                            sub_1AD007EC0((uint64_t)(__dstb + 264));
                                                                                          }
                                                                                        }
                                                                                        *(_OWORD *)(__dstb + 264) = *(_OWORD *)v213;
                                                                                        goto LABEL_156;
                                                                                      }
                                                                                      sub_1AD007EC0((uint64_t)(__dstb + 224));
                                                                                    }
                                                                                    *((_OWORD *)__dstb + 14) = *(_OWORD *)v209;
                                                                                    goto LABEL_149;
                                                                                  }
                                                                                  sub_1AD007EC0((uint64_t)(__dstb + 184));
                                                                                }
                                                                                *(_OWORD *)(__dstb + 184) = *(_OWORD *)v202;
                                                                                goto LABEL_144;
                                                                              }
                                                                              sub_1AD0AEC8C((uint64_t *)__dstb + 21);
                                                                            }
                                                                            v205 = *(_OWORD *)((char *)v157 + 216);
                                                                            *(_OWORD *)(__dstb + 200) = *(_OWORD *)((char *)v157 + 200);
                                                                            *(_OWORD *)(__dstb + 216) = v205;
                                                                            *((_QWORD *)__dstb + 29) = *((_QWORD *)v157 + 29);
                                                                            v206 = *(_OWORD *)((char *)v157 + 184);
                                                                            *(_OWORD *)(__dstb + 168) = *(_OWORD *)((char *)v157 + 168);
                                                                            *(_OWORD *)(__dstb + 184) = v206;
                                                                            goto LABEL_149;
                                                                          }
                                                                          sub_1AD007EC0((uint64_t)(__dstb + 152));
                                                                        }
                                                                      }
                                                                      *(_OWORD *)(__dstb + 152) = *(_OWORD *)v197;
                                                                      goto LABEL_134;
                                                                    }
                                                                    sub_1AD007EC0((uint64_t)(__dstb + 120));
                                                                  }
                                                                  *(_OWORD *)(__dstb + 120) = *(_OWORD *)v193;
                                                                  goto LABEL_127;
                                                                }
                                                                sub_1AD0AEC58((uint64_t)(__dstb + 56));
                                                              }
                                                              v192 = *(_OWORD *)((char *)v157 + 72);
                                                              *(_OWORD *)(__dstb + 56) = *(_OWORD *)((char *)v157 + 56);
                                                              *(_OWORD *)(__dstb + 72) = v192;
                                                              *(_OWORD *)(__dstb + 88) = *(_OWORD *)((char *)v157 + 88);
                                                              goto LABEL_122;
                                                            }
                                                            sub_1AD007EC0((uint64_t)(__dstb + 40));
                                                          }
                                                        }
                                                        *(_OWORD *)(__dstb + 40) = *(_OWORD *)v179;
                                                        goto LABEL_114;
                                                      }
                                                      sub_1AD007EC0((uint64_t)v150);
                                                    }
                                                    *(_OWORD *)v150 = *(_OWORD *)v151;
                                                    goto LABEL_97;
                                                  }
                                                  sub_1AD007EC0((uint64_t)v144);
                                                }
                                                *(_OWORD *)v144 = *(_OWORD *)v145;
                                                goto LABEL_92;
                                              }
                                              sub_1AD007EC0((uint64_t)v138);
                                            }
                                            *(_OWORD *)v138 = *(_OWORD *)v139;
                                            goto LABEL_87;
                                          }
                                          sub_1AD007EC0((uint64_t)v132);
                                        }
                                        *(_OWORD *)v132 = *(_OWORD *)v133;
                                        goto LABEL_82;
                                      }
                                      sub_1AD007EC0((uint64_t)v126);
                                    }
                                    *(_OWORD *)v126 = *(_OWORD *)v127;
                                    goto LABEL_77;
                                  }
                                  sub_1AD007EC0(v95 + 208);
                                }
                                *(_OWORD *)(v95 + 208) = *(_OWORD *)v121;
                                goto LABEL_72;
                              }
                              sub_1AD311474(v95 + 64);
                            }
                            v116 = *((_OWORD *)v96 + 11);
                            *(_OWORD *)(v95 + 160) = *((_OWORD *)v96 + 10);
                            *(_OWORD *)(v95 + 176) = v116;
                            *(_QWORD *)(v95 + 192) = *((_QWORD *)v96 + 24);
                            v117 = *((_OWORD *)v96 + 7);
                            *(_OWORD *)(v95 + 96) = *((_OWORD *)v96 + 6);
                            *(_OWORD *)(v95 + 112) = v117;
                            v118 = *((_OWORD *)v96 + 9);
                            *(_OWORD *)(v95 + 128) = *((_OWORD *)v96 + 8);
                            *(_OWORD *)(v95 + 144) = v118;
                            v119 = *((_OWORD *)v96 + 5);
                            *(_OWORD *)(v95 + 64) = *((_OWORD *)v96 + 4);
                            *(_OWORD *)(v95 + 80) = v119;
                            v93 = __dsta;
                            goto LABEL_67;
                          }
                          sub_1AD009758(v95 + 48, &qword_1ED2E3198);
                        }
                        *(_OWORD *)(v95 + 48) = *(_OWORD *)v107;
                        goto LABEL_57;
                      }
                      sub_1AD009758(v95 + 16, &qword_1ED2E3198);
                    }
                    *(_OWORD *)(v95 + 16) = *(_OWORD *)v98;
                    goto LABEL_52;
                  }
                  sub_1AD3114A8((_QWORD *)v95);
                }
                v100 = *((_OWORD *)v96 + 11);
                *(_OWORD *)(v95 + 160) = *((_OWORD *)v96 + 10);
                *(_OWORD *)(v95 + 176) = v100;
                v101 = *((_OWORD *)v96 + 13);
                *(_OWORD *)(v95 + 192) = *((_OWORD *)v96 + 12);
                *(_OWORD *)(v95 + 208) = v101;
                v102 = *((_OWORD *)v96 + 7);
                *(_OWORD *)(v95 + 96) = *((_OWORD *)v96 + 6);
                *(_OWORD *)(v95 + 112) = v102;
                v103 = *((_OWORD *)v96 + 9);
                *(_OWORD *)(v95 + 128) = *((_OWORD *)v96 + 8);
                *(_OWORD *)(v95 + 144) = v103;
                v104 = *((_OWORD *)v96 + 3);
                *(_OWORD *)(v95 + 32) = *((_OWORD *)v96 + 2);
                *(_OWORD *)(v95 + 48) = v104;
                v105 = *((_OWORD *)v96 + 5);
                *(_OWORD *)(v95 + 64) = *((_OWORD *)v96 + 4);
                *(_OWORD *)(v95 + 80) = v105;
                v106 = *((_OWORD *)v96 + 1);
                *(_OWORD *)v95 = *(_OWORD *)v96;
                *(_OWORD *)(v95 + 16) = v106;
                goto LABEL_72;
              }
              (*(void (**)(void *, uint64_t))(v88 + 8))(v85, v87);
            }
            v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
            memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
            goto LABEL_42;
          }
          sub_1AD311474(v68);
        }
        v80 = *((_OWORD *)v69 + 7);
        *(_OWORD *)(v68 + 96) = *((_OWORD *)v69 + 6);
        *(_OWORD *)(v68 + 112) = v80;
        *(_QWORD *)(v68 + 128) = *((_QWORD *)v69 + 16);
        v81 = *((_OWORD *)v69 + 3);
        *(_OWORD *)(v68 + 32) = *((_OWORD *)v69 + 2);
        *(_OWORD *)(v68 + 48) = v81;
        v82 = *((_OWORD *)v69 + 5);
        *(_OWORD *)(v68 + 64) = *((_OWORD *)v69 + 4);
        *(_OWORD *)(v68 + 80) = v82;
        v83 = *((_OWORD *)v69 + 1);
        *(_OWORD *)v68 = *(_OWORD *)v69;
        *(_OWORD *)(v68 + 16) = v83;
        goto LABEL_36;
      }
      sub_1AD009758((uint64_t)(v9 + 3), &qword_1ED2E3198);
    }
    v9[3] = *(_OWORD *)v34;
    goto LABEL_23;
  }
  if (v15)
  {
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_175;
  }
  v493 = v13;
  v497 = v12;
  v507 = v5;
  v511 = a3;
  v503 = v4;
  v16 = v10[1];
  *v9 = *v10;
  v9[1] = v16;
  v17 = v10[3];
  v9[2] = v10[2];
  v9[3] = v17;
  v18 = v11[6];
  v19 = (char *)v9 + v18;
  v20 = (char *)v10 + v18;
  v21 = *(_OWORD *)((char *)v10 + v18 + 112);
  *((_OWORD *)v19 + 6) = *(_OWORD *)((char *)v10 + v18 + 96);
  *((_OWORD *)v19 + 7) = v21;
  *((_QWORD *)v19 + 16) = *(_QWORD *)((char *)v10 + v18 + 128);
  v22 = *(_OWORD *)((char *)v10 + v18 + 48);
  *((_OWORD *)v19 + 2) = *(_OWORD *)((char *)v10 + v18 + 32);
  *((_OWORD *)v19 + 3) = v22;
  v23 = *(_OWORD *)((char *)v10 + v18 + 80);
  *((_OWORD *)v19 + 4) = *(_OWORD *)((char *)v10 + v18 + 64);
  *((_OWORD *)v19 + 5) = v23;
  v24 = *(_OWORD *)((char *)v10 + v18 + 16);
  *(_OWORD *)v19 = *(_OWORD *)((char *)v10 + v18);
  *((_OWORD *)v19 + 1) = v24;
  v25 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v26 = v25[5];
  v27 = &v19[v26];
  v28 = &v20[v26];
  v29 = sub_1AD63AE2C();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v36 = v25[6];
  v37 = &v19[v36];
  v38 = &v20[v36];
  v39 = *((_OWORD *)v38 + 5);
  *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
  *((_OWORD *)v37 + 5) = v39;
  v40 = *((_OWORD *)v38 + 3);
  *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
  *((_OWORD *)v37 + 3) = v40;
  v41 = *((_OWORD *)v38 + 9);
  *((_OWORD *)v37 + 8) = *((_OWORD *)v38 + 8);
  *((_OWORD *)v37 + 9) = v41;
  v42 = *((_OWORD *)v38 + 7);
  *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
  *((_OWORD *)v37 + 7) = v42;
  v43 = *((_OWORD *)v38 + 13);
  *((_OWORD *)v37 + 12) = *((_OWORD *)v38 + 12);
  *((_OWORD *)v37 + 13) = v43;
  v44 = *((_OWORD *)v38 + 11);
  *((_OWORD *)v37 + 10) = *((_OWORD *)v38 + 10);
  *((_OWORD *)v37 + 11) = v44;
  v45 = *((_OWORD *)v38 + 1);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *((_OWORD *)v37 + 1) = v45;
  *(_QWORD *)&v19[v25[7]] = *(_QWORD *)&v20[v25[7]];
  *(_OWORD *)&v19[v25[8]] = *(_OWORD *)&v20[v25[8]];
  *(_OWORD *)&v19[v25[9]] = *(_OWORD *)&v20[v25[9]];
  v19[v25[10]] = v20[v25[10]];
  v19[v25[11]] = v20[v25[11]];
  *(_OWORD *)&v19[v25[12]] = *(_OWORD *)&v20[v25[12]];
  *(_QWORD *)&v19[v25[13]] = *(_QWORD *)&v20[v25[13]];
  *((_BYTE *)v9 + v11[7]) = *((_BYTE *)v10 + v11[7]);
  *((_BYTE *)v9 + v11[8]) = *((_BYTE *)v10 + v11[8]);
  *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
  *((_BYTE *)v9 + v11[10]) = *((_BYTE *)v10 + v11[10]);
  *((_BYTE *)v9 + v11[11]) = *((_BYTE *)v10 + v11[11]);
  *((_BYTE *)v9 + v11[12]) = *((_BYTE *)v10 + v11[12]);
  *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
  *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
  *(_OWORD *)((char *)v9 + v11[15]) = *(_OWORD *)((char *)v10 + v11[15]);
  *(_OWORD *)((char *)v9 + v11[16]) = *(_OWORD *)((char *)v10 + v11[16]);
  *((_BYTE *)v9 + v11[17]) = *((_BYTE *)v10 + v11[17]);
  *((_BYTE *)v9 + v11[18]) = *((_BYTE *)v10 + v11[18]);
  v46 = v11[19];
  v47 = (_OWORD *)((char *)v9 + v46);
  v48 = (_OWORD *)((char *)v10 + v46);
  v49 = type metadata accessor for CloudKitSharingToken();
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v52 = v48[13];
    v47[12] = v48[12];
    v47[13] = v52;
    v47[14] = v48[14];
    *((_QWORD *)v47 + 30) = *((_QWORD *)v48 + 30);
    v53 = v48[9];
    v47[8] = v48[8];
    v47[9] = v53;
    v54 = v48[11];
    v47[10] = v48[10];
    v47[11] = v54;
    v55 = v48[5];
    v47[4] = v48[4];
    v47[5] = v55;
    v56 = v48[7];
    v47[6] = v48[6];
    v47[7] = v56;
    v57 = v48[1];
    *v47 = *v48;
    v47[1] = v57;
    v58 = v48[3];
    v47[2] = v48[2];
    v47[3] = v58;
    *(_OWORD *)((char *)v47 + 248) = *(_OWORD *)((char *)v48 + 248);
    *(_OWORD *)((char *)v47 + 264) = *(_OWORD *)((char *)v48 + 264);
    v59 = *(int *)(v49 + 24);
    v60 = (char *)v47 + v59;
    v61 = (char *)v48 + v59;
    *(_OWORD *)((char *)v47 + v59) = *(_OWORD *)((char *)v48 + v59);
    v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    __dst = &v60[v62];
    v63 = &v61[v62];
    v64 = sub_1AD63AF28();
    v65 = *(_QWORD *)(v64 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(__dst, v63, v64);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(__dst, 0, 1, v64);
    }
    v76 = *(int *)(v49 + 28);
    v77 = (_OWORD *)((char *)v47 + v76);
    v78 = (_OWORD *)((char *)v48 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  v4 = v503;
  v5 = v507;
  a3 = v511;
  v13 = v493;
  v12 = v497;
  *(_OWORD *)((char *)v9 + v11[20]) = *(_OWORD *)((char *)v10 + v11[20]);
  *((_BYTE *)v9 + v11[21]) = *((_BYTE *)v10 + v11[21]);
  *((_BYTE *)v9 + v11[22]) = *((_BYTE *)v10 + v11[22]);
  *((_BYTE *)v9 + v11[23]) = *((_BYTE *)v10 + v11[23]);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v497 + 56))(v9, 0, 1, v11);
LABEL_175:
  v239 = a3[6];
  v240 = (_OWORD *)((char *)v5 + v239);
  v241 = (_OWORD *)((char *)v4 + v239);
  v242 = v13((_OWORD *)((char *)v5 + v239), 1, v11);
  v243 = v13(v241, 1, v11);
  if (!v242)
  {
    if (v243)
    {
      sub_1AD066230((uint64_t)v240, type metadata accessor for CloudKitShareParticipant);
      goto LABEL_181;
    }
    *v240 = *v241;
    swift_release();
    v261 = *((_QWORD *)v241 + 3);
    *((_QWORD *)v240 + 2) = *((_QWORD *)v241 + 2);
    *((_QWORD *)v240 + 3) = v261;
    swift_bridgeObjectRelease();
    v240[2] = v241[2];
    swift_release();
    v262 = v241 + 3;
    v506 = v4;
    if (*((_QWORD *)v240 + 7) != 1)
    {
      v263 = *((_QWORD *)v241 + 7);
      if (v263 != 1)
      {
        *((_QWORD *)v240 + 6) = *v262;
        *((_QWORD *)v240 + 7) = v263;
        swift_bridgeObjectRelease();
LABEL_192:
        v295 = v11[6];
        v296 = (uint64_t)v240 + v295;
        v297 = (char *)v241 + v295;
        v510 = v5;
        v514 = a3;
        if (*(_QWORD *)((char *)v240 + v295))
        {
          if (*(_QWORD *)v297)
          {
            v298 = *((_QWORD *)v297 + 1);
            *(_QWORD *)v296 = *(_QWORD *)v297;
            *(_QWORD *)(v296 + 8) = v298;
            swift_release();
            v299 = *((_QWORD *)v297 + 3);
            *(_QWORD *)(v296 + 16) = *((_QWORD *)v297 + 2);
            *(_QWORD *)(v296 + 24) = v299;
            swift_bridgeObjectRelease();
            *(_OWORD *)(v296 + 32) = *((_OWORD *)v297 + 2);
            swift_release();
            v300 = *((_QWORD *)v297 + 7);
            *(_QWORD *)(v296 + 48) = *((_QWORD *)v297 + 6);
            *(_QWORD *)(v296 + 56) = v300;
            swift_bridgeObjectRelease();
            *(_OWORD *)(v296 + 64) = *((_OWORD *)v297 + 4);
            swift_release();
            v301 = *((_QWORD *)v297 + 11);
            *(_QWORD *)(v296 + 80) = *((_QWORD *)v297 + 10);
            *(_QWORD *)(v296 + 88) = v301;
            swift_bridgeObjectRelease();
            *(_OWORD *)(v296 + 96) = *((_OWORD *)v297 + 6);
            swift_release();
            v302 = v297 + 112;
            if (*(_QWORD *)(v296 + 120) != 1)
            {
              v303 = *((_QWORD *)v297 + 15);
              if (v303 != 1)
              {
                *(_QWORD *)(v296 + 112) = *v302;
                *(_QWORD *)(v296 + 120) = v303;
                swift_bridgeObjectRelease();
                goto LABEL_204;
              }
              sub_1AD009758(v296 + 112, &qword_1ED2E3198);
            }
            *(_OWORD *)(v296 + 112) = *(_OWORD *)v302;
LABEL_204:
            *(_QWORD *)(v296 + 128) = *((_QWORD *)v297 + 16);
LABEL_205:
            v496 = (int *)type metadata accessor for CloudKitUserIdentity(0);
            v500 = v297;
            v312 = v496[5];
            v313 = (void *)(v296 + v312);
            v314 = &v297[v312];
            v315 = sub_1AD63AE2C();
            v316 = *(_QWORD *)(v315 - 8);
            v317 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v316 + 48);
            v318 = v317(v313, 1, v315);
            v319 = v317(v314, 1, v315);
            if (v318)
            {
              if (!v319)
              {
                (*(void (**)(void *, char *, uint64_t))(v316 + 32))(v313, v314, v315);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v316 + 56))(v313, 0, 1, v315);
                goto LABEL_211;
              }
            }
            else
            {
              if (!v319)
              {
                (*(void (**)(void *, char *, uint64_t))(v316 + 40))(v313, v314, v315);
LABEL_211:
                v321 = v500;
                v322 = v496[6];
                v323 = v296 + v322;
                v324 = &v500[v322];
                if (*(_QWORD *)(v296 + v322))
                {
                  if (*(_QWORD *)v324)
                  {
                    v325 = *((_QWORD *)v324 + 1);
                    *(_QWORD *)v323 = *(_QWORD *)v324;
                    *(_QWORD *)(v323 + 8) = v325;
                    swift_release();
                    v326 = v324 + 16;
                    if (*(_QWORD *)(v323 + 24) != 1)
                    {
                      v327 = *((_QWORD *)v324 + 3);
                      if (v327 != 1)
                      {
                        *(_QWORD *)(v323 + 16) = *v326;
                        *(_QWORD *)(v323 + 24) = v327;
                        swift_bridgeObjectRelease();
LABEL_221:
                        *(_OWORD *)(v323 + 32) = *((_OWORD *)v324 + 2);
                        swift_release();
                        v335 = v324 + 48;
                        if (*(_QWORD *)(v323 + 56) != 1)
                        {
                          v336 = *((_QWORD *)v324 + 7);
                          if (v336 != 1)
                          {
                            *(_QWORD *)(v323 + 48) = *v335;
                            *(_QWORD *)(v323 + 56) = v336;
                            swift_bridgeObjectRelease();
LABEL_226:
                            v337 = *((_QWORD *)v324 + 8);
                            if (*(_QWORD *)(v323 + 64))
                            {
                              if (v337)
                              {
                                v338 = *((_QWORD *)v324 + 9);
                                *(_QWORD *)(v323 + 64) = v337;
                                *(_QWORD *)(v323 + 72) = v338;
                                swift_release();
                                v339 = *((_QWORD *)v324 + 11);
                                *(_QWORD *)(v323 + 80) = *((_QWORD *)v324 + 10);
                                *(_QWORD *)(v323 + 88) = v339;
                                swift_bridgeObjectRelease();
                                *(_OWORD *)(v323 + 96) = *((_OWORD *)v324 + 6);
                                swift_release();
                                v340 = *((_QWORD *)v324 + 15);
                                *(_QWORD *)(v323 + 112) = *((_QWORD *)v324 + 14);
                                *(_QWORD *)(v323 + 120) = v340;
                                swift_bridgeObjectRelease();
                                *(_OWORD *)(v323 + 128) = *((_OWORD *)v324 + 8);
                                swift_release();
                                v341 = *((_QWORD *)v324 + 19);
                                *(_QWORD *)(v323 + 144) = *((_QWORD *)v324 + 18);
                                *(_QWORD *)(v323 + 152) = v341;
                                swift_bridgeObjectRelease();
                                *(_OWORD *)(v323 + 160) = *((_OWORD *)v324 + 10);
                                swift_release();
                                v342 = (_OWORD *)(v323 + 176);
                                v343 = v324 + 176;
                                if (*(_QWORD *)(v323 + 184) == 1)
                                {
                                  *v342 = *v343;
                                  v321 = v500;
                                }
                                else
                                {
                                  v348 = *((_QWORD *)v324 + 23);
                                  v321 = v500;
                                  if (v348 == 1)
                                  {
                                    sub_1AD009758(v323 + 176, &qword_1ED2E3198);
                                    *v342 = *v343;
                                  }
                                  else
                                  {
                                    *(_QWORD *)(v323 + 176) = *(_QWORD *)v343;
                                    *(_QWORD *)(v323 + 184) = v348;
                                    swift_bridgeObjectRelease();
                                  }
                                }
                                *(_QWORD *)(v323 + 192) = *((_QWORD *)v324 + 24);
LABEL_236:
                                *(_BYTE *)(v323 + 200) = v324[200];
                                v349 = v324 + 208;
                                v350 = *(_QWORD *)(v323 + 216);
                                if (v350 >> 60 != 15)
                                {
                                  v351 = *((_QWORD *)v324 + 27);
                                  if (v351 >> 60 != 15)
                                  {
                                    v352 = *(_QWORD *)(v323 + 208);
                                    *(_QWORD *)(v323 + 208) = *v349;
                                    *(_QWORD *)(v323 + 216) = v351;
                                    sub_1AD00412C(v352, v350);
LABEL_241:
                                    *(_QWORD *)(v296 + v496[7]) = *(_QWORD *)&v321[v496[7]];
                                    swift_bridgeObjectRelease();
                                    v353 = v496[8];
                                    v354 = (uint64_t *)(v296 + v353);
                                    v355 = (uint64_t *)&v321[v353];
                                    v356 = *(_QWORD *)(v296 + v353 + 8);
                                    if (v356 >> 60 != 15)
                                    {
                                      v357 = v355[1];
                                      if (v357 >> 60 != 15)
                                      {
                                        v358 = *v354;
                                        *v354 = *v355;
                                        v354[1] = v357;
                                        sub_1AD00412C(v358, v356);
LABEL_246:
                                        v359 = v496[9];
                                        v360 = (uint64_t *)(v296 + v359);
                                        v361 = (uint64_t *)&v321[v359];
                                        v362 = *(_QWORD *)(v296 + v359 + 8);
                                        if (v362 >> 60 != 15)
                                        {
                                          v363 = v361[1];
                                          if (v363 >> 60 != 15)
                                          {
                                            v364 = *v360;
                                            *v360 = *v361;
                                            v360[1] = v363;
                                            sub_1AD00412C(v364, v362);
LABEL_251:
                                            *(_BYTE *)(v296 + v496[10]) = v321[v496[10]];
                                            *(_BYTE *)(v296 + v496[11]) = v321[v496[11]];
                                            v365 = v496[12];
                                            v366 = (uint64_t *)(v296 + v365);
                                            v367 = (uint64_t *)&v321[v365];
                                            v368 = *(_QWORD *)(v296 + v365 + 8);
                                            if (v368 >> 60 != 15)
                                            {
                                              v369 = v367[1];
                                              if (v369 >> 60 != 15)
                                              {
                                                v370 = *v366;
                                                *v366 = *v367;
                                                v366[1] = v369;
                                                sub_1AD00412C(v370, v368);
LABEL_256:
                                                *(_QWORD *)(v296 + v496[13]) = *(_QWORD *)&v321[v496[13]];
                                                *((_BYTE *)v240 + v11[7]) = *((_BYTE *)v241 + v11[7]);
                                                *((_BYTE *)v240 + v11[8]) = *((_BYTE *)v241 + v11[8]);
                                                *((_BYTE *)v240 + v11[9]) = *((_BYTE *)v241 + v11[9]);
                                                *((_BYTE *)v240 + v11[10]) = *((_BYTE *)v241 + v11[10]);
                                                *((_BYTE *)v240 + v11[11]) = *((_BYTE *)v241 + v11[11]);
                                                *((_BYTE *)v240 + v11[12]) = *((_BYTE *)v241 + v11[12]);
                                                *((_BYTE *)v240 + v11[13]) = *((_BYTE *)v241 + v11[13]);
                                                *((_BYTE *)v240 + v11[14]) = *((_BYTE *)v241 + v11[14]);
                                                v371 = v11[15];
                                                v372 = (uint64_t *)((char *)v240 + v371);
                                                v373 = (uint64_t *)((char *)v241 + v371);
                                                v374 = *(_QWORD *)((char *)v240 + v371 + 8);
                                                if (v374 >> 60 != 15)
                                                {
                                                  v375 = v373[1];
                                                  if (v375 >> 60 != 15)
                                                  {
                                                    v376 = *v372;
                                                    *v372 = *v373;
                                                    v372[1] = v375;
                                                    sub_1AD00412C(v376, v374);
LABEL_261:
                                                    v377 = v11[16];
                                                    v378 = (uint64_t *)((char *)v240 + v377);
                                                    v379 = (uint64_t *)((char *)v241 + v377);
                                                    v380 = *(_QWORD *)((char *)v240 + v377 + 8);
                                                    if (v380 >> 60 != 15)
                                                    {
                                                      v381 = v379[1];
                                                      if (v381 >> 60 != 15)
                                                      {
                                                        v382 = *v378;
                                                        *v378 = *v379;
                                                        v378[1] = v381;
                                                        sub_1AD00412C(v382, v380);
LABEL_266:
                                                        *((_BYTE *)v240 + v11[17]) = *((_BYTE *)v241 + v11[17]);
                                                        *((_BYTE *)v240 + v11[18]) = *((_BYTE *)v241 + v11[18]);
                                                        v383 = v11[19];
                                                        v384 = (_OWORD *)((char *)v240 + v383);
                                                        v385 = (_OWORD *)((char *)v241 + v383);
                                                        v386 = type metadata accessor for CloudKitSharingToken();
                                                        v387 = *(_QWORD *)(v386 - 8);
                                                        v388 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v387 + 48);
                                                        v389 = v388(v384, 1, v386);
                                                        v390 = v388(v385, 1, v386);
                                                        if (v389)
                                                        {
                                                          if (v390)
                                                          {
                                                            v391 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                                                            memcpy(v384, v385, *(_QWORD *)(*(_QWORD *)(v391 - 8) + 64));
                                                          }
                                                          else
                                                          {
                                                            v393 = v385[13];
                                                            v384[12] = v385[12];
                                                            v384[13] = v393;
                                                            v384[14] = v385[14];
                                                            *((_QWORD *)v384 + 30) = *((_QWORD *)v385 + 30);
                                                            v394 = v385[9];
                                                            v384[8] = v385[8];
                                                            v384[9] = v394;
                                                            v395 = v385[11];
                                                            v384[10] = v385[10];
                                                            v384[11] = v395;
                                                            v396 = v385[5];
                                                            v384[4] = v385[4];
                                                            v384[5] = v396;
                                                            v397 = v385[7];
                                                            v384[6] = v385[6];
                                                            v384[7] = v397;
                                                            v398 = v385[1];
                                                            *v384 = *v385;
                                                            v384[1] = v398;
                                                            v399 = v385[3];
                                                            v384[2] = v385[2];
                                                            v384[3] = v399;
                                                            *(_OWORD *)((char *)v384 + 248) = *(_OWORD *)((char *)v385 + 248);
                                                            *(_OWORD *)((char *)v384 + 264) = *(_OWORD *)((char *)v385 + 264);
                                                            v501 = v386;
                                                            v400 = *(int *)(v386 + 24);
                                                            v401 = (char *)v384 + v400;
                                                            v402 = (char *)v385 + v400;
                                                            *(_OWORD *)((char *)v384 + v400) = *(_OWORD *)((char *)v385 + v400);
                                                            v403 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30)
                                                                          + 28);
                                                            v404 = &v401[v403];
                                                            v405 = &v402[v403];
                                                            v406 = sub_1AD63AF28();
                                                            v407 = *(_QWORD *)(v406 - 8);
                                                            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v407 + 48))(v405, 1, v406))
                                                            {
                                                              v408 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                              memcpy(v404, v405, *(_QWORD *)(*(_QWORD *)(v408 - 8) + 64));
                                                            }
                                                            else
                                                            {
                                                              (*(void (**)(char *, char *, uint64_t))(v407 + 32))(v404, v405, v406);
                                                              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v407 + 56))(v404, 0, 1, v406);
                                                            }
                                                            v412 = *(int *)(v501 + 28);
                                                            v413 = (_OWORD *)((char *)v384 + v412);
                                                            v414 = (_OWORD *)((char *)v385 + v412);
                                                            v415 = v414[1];
                                                            *v413 = *v414;
                                                            v413[1] = v415;
                                                            (*(void (**)(_OWORD *, _QWORD, uint64_t))(v387 + 56))(v384, 0, 1);
                                                          }
                                                          v4 = v506;
                                                          v5 = v510;
                                                          a3 = v514;
LABEL_339:
                                                          v462 = v11[20];
                                                          v463 = (uint64_t *)((char *)v240 + v462);
                                                          v464 = (uint64_t *)((char *)v241 + v462);
                                                          v465 = *(_QWORD *)((char *)v240 + v462 + 8);
                                                          if (v465 >> 60 != 15)
                                                          {
                                                            v466 = v464[1];
                                                            if (v466 >> 60 != 15)
                                                            {
                                                              v467 = *v463;
                                                              *v463 = *v464;
                                                              v463[1] = v466;
                                                              sub_1AD00412C(v467, v465);
                                                              goto LABEL_344;
                                                            }
                                                            sub_1AD007EC0((uint64_t)v463);
                                                          }
                                                          *(_OWORD *)v463 = *(_OWORD *)v464;
LABEL_344:
                                                          *((_BYTE *)v240 + v11[21]) = *((_BYTE *)v241 + v11[21]);
                                                          *((_BYTE *)v240 + v11[22]) = *((_BYTE *)v241 + v11[22]);
                                                          *((_BYTE *)v240 + v11[23]) = *((_BYTE *)v241 + v11[23]);
                                                          goto LABEL_345;
                                                        }
                                                        a3 = v514;
                                                        if (v390)
                                                        {
                                                          sub_1AD066230((uint64_t)v384, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                                                          v392 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
                                                          memcpy(v384, v385, *(_QWORD *)(*(_QWORD *)(v392 - 8) + 64));
                                                          goto LABEL_338;
                                                        }
                                                        *(_DWORD *)v384 = *(_DWORD *)v385;
                                                        *((_QWORD *)v384 + 1) = *((_QWORD *)v385 + 1);
                                                        swift_bridgeObjectRelease();
                                                        *((_QWORD *)v384 + 2) = *((_QWORD *)v385 + 2);
                                                        swift_bridgeObjectRelease();
                                                        *(_OWORD *)((char *)v384 + 24) = *(_OWORD *)((char *)v385 + 24);
                                                        swift_release();
                                                        v409 = (_QWORD *)v385 + 5;
                                                        v410 = *((_QWORD *)v384 + 6);
                                                        if (v410 >> 60 != 11)
                                                        {
                                                          v411 = *((_QWORD *)v385 + 6);
                                                          if (v411 >> 60 == 11)
                                                          {
                                                            sub_1AD009758((uint64_t)v384 + 40, &qword_1ED2E3250);
                                                          }
                                                          else if (v410 >> 60 != 15)
                                                          {
                                                            if (v411 >> 60 != 15)
                                                            {
                                                              v482 = *((_QWORD *)v384 + 5);
                                                              *((_QWORD *)v384 + 5) = *v409;
                                                              *((_QWORD *)v384 + 6) = v411;
                                                              sub_1AD00412C(v482, v410);
LABEL_283:
                                                              if (*((_QWORD *)v384 + 9))
                                                              {
                                                                v416 = *((_QWORD *)v385 + 9);
                                                                if (v416)
                                                                {
                                                                  v417 = *((_DWORD *)v385 + 15);
                                                                  *((_DWORD *)v384 + 14) = *((_DWORD *)v385 + 14);
                                                                  *((_DWORD *)v384 + 15) = v417;
                                                                  *((_BYTE *)v384 + 64) = *((_BYTE *)v385 + 64);
                                                                  v418 = *((_QWORD *)v385 + 10);
                                                                  *((_QWORD *)v384 + 9) = v416;
                                                                  *((_QWORD *)v384 + 10) = v418;
                                                                  swift_release();
                                                                  v419 = (_OWORD *)((char *)v385 + 88);
                                                                  v420 = *((_QWORD *)v384 + 12);
                                                                  if (v420 >> 60 == 15)
                                                                  {
LABEL_288:
                                                                    *(_OWORD *)((char *)v384 + 88) = *v419;
                                                                    goto LABEL_291;
                                                                  }
                                                                  v421 = *((_QWORD *)v385 + 12);
                                                                  if (v421 >> 60 == 15)
                                                                  {
                                                                    sub_1AD007EC0((uint64_t)v384 + 88);
                                                                    goto LABEL_288;
                                                                  }
                                                                  v437 = *((_QWORD *)v384 + 11);
                                                                  *((_QWORD *)v384 + 11) = *(_QWORD *)v419;
                                                                  *((_QWORD *)v384 + 12) = v421;
                                                                  sub_1AD00412C(v437, v420);
LABEL_291:
                                                                  *(_OWORD *)((char *)v384 + 104) = *(_OWORD *)((char *)v385 + 104);
                                                                  swift_release();
                                                                  v423 = (_QWORD *)v385 + 15;
                                                                  v424 = *((_QWORD *)v384 + 16);
                                                                  if (v424 >> 60 != 15)
                                                                  {
                                                                    v425 = *((_QWORD *)v385 + 16);
                                                                    if (v425 >> 60 != 15)
                                                                    {
                                                                      v426 = *((_QWORD *)v384 + 15);
                                                                      *((_QWORD *)v384 + 15) = *v423;
                                                                      *((_QWORD *)v384 + 16) = v425;
                                                                      sub_1AD00412C(v426, v424);
LABEL_296:
                                                                      *(_OWORD *)((char *)v384 + 136) = *(_OWORD *)((char *)v385 + 136);
                                                                      swift_release();
                                                                      v427 = (_QWORD *)v385 + 19;
                                                                      v428 = *((_QWORD *)v384 + 20);
                                                                      if (v428 >> 60 != 11)
                                                                      {
                                                                        v429 = *((_QWORD *)v385 + 20);
                                                                        if (v429 >> 60 == 11)
                                                                        {
                                                                          sub_1AD009758((uint64_t)v384 + 152, &qword_1ED2E3250);
                                                                        }
                                                                        else if (v428 >> 60 != 15)
                                                                        {
                                                                          if (v429 >> 60 != 15)
                                                                          {
                                                                            v483 = *((_QWORD *)v384 + 19);
                                                                            *((_QWORD *)v384 + 19) = *v427;
                                                                            *((_QWORD *)v384 + 20) = v429;
                                                                            sub_1AD00412C(v483, v428);
LABEL_303:
                                                                            v430 = *((_QWORD *)v385 + 21);
                                                                            if (*((_QWORD *)v384 + 21))
                                                                            {
                                                                              if (v430)
                                                                              {
                                                                                v431 = *((_QWORD *)v385 + 22);
                                                                                *((_QWORD *)v384 + 21) = v430;
                                                                                *((_QWORD *)v384 + 22) = v431;
                                                                                swift_release();
                                                                                v432 = (_QWORD *)v385 + 23;
                                                                                v433 = *((_QWORD *)v384 + 24);
                                                                                if (v433 >> 60 != 15)
                                                                                {
                                                                                  v434 = *((_QWORD *)v385 + 24);
                                                                                  if (v434 >> 60 != 15)
                                                                                  {
                                                                                    v438 = *((_QWORD *)v384 + 23);
                                                                                    *((_QWORD *)v384 + 23) = *v432;
                                                                                    *((_QWORD *)v384 + 24) = v434;
                                                                                    sub_1AD00412C(v438, v433);
LABEL_313:
                                                                                    *((_DWORD *)v384 + 50) = *((_DWORD *)v385 + 50);
                                                                                    v384[13] = v385[13];
                                                                                    swift_release();
                                                                                    v439 = v385 + 14;
                                                                                    v440 = *((_QWORD *)v384 + 29);
                                                                                    if (v440 >> 60 != 15)
                                                                                    {
                                                                                      v441 = *((_QWORD *)v385 + 29);
                                                                                      if (v441 >> 60 != 15)
                                                                                      {
                                                                                        v442 = *((_QWORD *)v384 + 28);
                                                                                        *((_QWORD *)v384 + 28) = *v439;
                                                                                        *((_QWORD *)v384 + 29) = v441;
                                                                                        sub_1AD00412C(v442, v440);
LABEL_318:
                                                                                        *((_QWORD *)v384 + 30) = *((_QWORD *)v385 + 30);
                                                                                        swift_bridgeObjectRelease();
                                                                                        *(_OWORD *)((char *)v384 + 248) = *(_OWORD *)((char *)v385 + 248);
                                                                                        swift_release();
                                                                                        v443 = (_QWORD *)v385 + 33;
                                                                                        v444 = *((_QWORD *)v384 + 34);
                                                                                        if (v444 >> 60 != 11)
                                                                                        {
                                                                                          v445 = *((_QWORD *)v385 + 34);
                                                                                          if (v445 >> 60 == 11)
                                                                                          {
                                                                                            sub_1AD009758((uint64_t)v384 + 264, &qword_1ED2E3250);
                                                                                          }
                                                                                          else if (v444 >> 60 != 15)
                                                                                          {
                                                                                            if (v445 >> 60 != 15)
                                                                                            {
                                                                                              v484 = *((_QWORD *)v384 + 33);
                                                                                              *((_QWORD *)v384 + 33) = *v443;
                                                                                              *((_QWORD *)v384 + 34) = v445;
                                                                                              sub_1AD00412C(v484, v444);
LABEL_325:
                                                                                              v502 = v386;
                                                                                              v446 = *(int *)(v386 + 24);
                                                                                              v447 = (char *)v384 + v446;
                                                                                              v448 = (char *)v385 + v446;
                                                                                              *(_OWORD *)((char *)v384 + v446) = *(_OWORD *)((char *)v385 + v446);
                                                                                              swift_release();
                                                                                              v449 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
                                                                                              v450 = &v447[v449];
                                                                                              v451 = &v448[v449];
                                                                                              v452 = sub_1AD63AF28();
                                                                                              v489 = *(_QWORD *)(v452 - 8);
                                                                                              v453 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v489 + 48);
                                                                                              LODWORD(v448) = v453(v450, 1, v452);
                                                                                              v454 = v453(v451, 1, v452);
                                                                                              if ((_DWORD)v448)
                                                                                              {
                                                                                                if (!v454)
                                                                                                {
                                                                                                  (*(void (**)(char *, char *, uint64_t))(v489 + 32))(v450, v451, v452);
                                                                                                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v489 + 56))(v450, 0, 1, v452);
                                                                                                  goto LABEL_333;
                                                                                                }
                                                                                                v455 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
                                                                                                v456 = v450;
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                if (!v454)
                                                                                                {
                                                                                                  (*(void (**)(char *, char *, uint64_t))(v489 + 40))(v450, v451, v452);
                                                                                                  goto LABEL_333;
                                                                                                }
                                                                                                (*(void (**)(char *, uint64_t))(v489 + 8))(v450, v452);
                                                                                                v455 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
                                                                                                v456 = v450;
                                                                                              }
                                                                                              memcpy(v456, v451, v455);
LABEL_333:
                                                                                              a3 = v514;
                                                                                              v457 = *(int *)(v502 + 28);
                                                                                              v458 = (char *)v384 + v457;
                                                                                              v459 = (char *)v385 + v457;
                                                                                              *(_OWORD *)v458 = *(_OWORD *)((char *)v385 + v457);
                                                                                              swift_release();
                                                                                              v460 = v459 + 16;
                                                                                              if (*((_QWORD *)v458 + 3) != 1)
                                                                                              {
                                                                                                v461 = *((_QWORD *)v459 + 3);
                                                                                                if (v461 != 1)
                                                                                                {
                                                                                                  *((_QWORD *)v458 + 2) = *v460;
                                                                                                  *((_QWORD *)v458 + 3) = v461;
                                                                                                  swift_bridgeObjectRelease();
                                                                                                  goto LABEL_338;
                                                                                                }
                                                                                                sub_1AD009758((uint64_t)(v458 + 16), &qword_1ED2E3198);
                                                                                              }
                                                                                              *((_OWORD *)v458 + 1) = *(_OWORD *)v460;
LABEL_338:
                                                                                              v4 = v506;
                                                                                              v5 = v510;
                                                                                              goto LABEL_339;
                                                                                            }
                                                                                            sub_1AD007EC0((uint64_t)v384 + 264);
                                                                                          }
                                                                                        }
                                                                                        *(_OWORD *)((char *)v384 + 264) = *(_OWORD *)v443;
                                                                                        goto LABEL_325;
                                                                                      }
                                                                                      sub_1AD007EC0((uint64_t)(v384 + 14));
                                                                                    }
                                                                                    v384[14] = *(_OWORD *)v439;
                                                                                    goto LABEL_318;
                                                                                  }
                                                                                  sub_1AD007EC0((uint64_t)v384 + 184);
                                                                                }
                                                                                *(_OWORD *)((char *)v384 + 184) = *(_OWORD *)v432;
                                                                                goto LABEL_313;
                                                                              }
                                                                              sub_1AD0AEC8C((uint64_t *)v384 + 21);
                                                                            }
                                                                            v435 = *(_OWORD *)((char *)v385 + 216);
                                                                            *(_OWORD *)((char *)v384 + 200) = *(_OWORD *)((char *)v385 + 200);
                                                                            *(_OWORD *)((char *)v384 + 216) = v435;
                                                                            *((_QWORD *)v384 + 29) = *((_QWORD *)v385 + 29);
                                                                            v436 = *(_OWORD *)((char *)v385 + 184);
                                                                            *(_OWORD *)((char *)v384 + 168) = *(_OWORD *)((char *)v385 + 168);
                                                                            *(_OWORD *)((char *)v384 + 184) = v436;
                                                                            goto LABEL_318;
                                                                          }
                                                                          sub_1AD007EC0((uint64_t)v384 + 152);
                                                                        }
                                                                      }
                                                                      *(_OWORD *)((char *)v384 + 152) = *(_OWORD *)v427;
                                                                      goto LABEL_303;
                                                                    }
                                                                    sub_1AD007EC0((uint64_t)v384 + 120);
                                                                  }
                                                                  *(_OWORD *)((char *)v384 + 120) = *(_OWORD *)v423;
                                                                  goto LABEL_296;
                                                                }
                                                                sub_1AD0AEC58((uint64_t)v384 + 56);
                                                              }
                                                              v422 = *(_OWORD *)((char *)v385 + 72);
                                                              *(_OWORD *)((char *)v384 + 56) = *(_OWORD *)((char *)v385 + 56);
                                                              *(_OWORD *)((char *)v384 + 72) = v422;
                                                              *(_OWORD *)((char *)v384 + 88) = *(_OWORD *)((char *)v385 + 88);
                                                              goto LABEL_291;
                                                            }
                                                            sub_1AD007EC0((uint64_t)v384 + 40);
                                                          }
                                                        }
                                                        *(_OWORD *)((char *)v384 + 40) = *(_OWORD *)v409;
                                                        goto LABEL_283;
                                                      }
                                                      sub_1AD007EC0((uint64_t)v378);
                                                    }
                                                    *(_OWORD *)v378 = *(_OWORD *)v379;
                                                    goto LABEL_266;
                                                  }
                                                  sub_1AD007EC0((uint64_t)v372);
                                                }
                                                *(_OWORD *)v372 = *(_OWORD *)v373;
                                                goto LABEL_261;
                                              }
                                              sub_1AD007EC0((uint64_t)v366);
                                            }
                                            *(_OWORD *)v366 = *(_OWORD *)v367;
                                            goto LABEL_256;
                                          }
                                          sub_1AD007EC0((uint64_t)v360);
                                        }
                                        *(_OWORD *)v360 = *(_OWORD *)v361;
                                        goto LABEL_251;
                                      }
                                      sub_1AD007EC0((uint64_t)v354);
                                    }
                                    *(_OWORD *)v354 = *(_OWORD *)v355;
                                    goto LABEL_246;
                                  }
                                  sub_1AD007EC0(v323 + 208);
                                }
                                *(_OWORD *)(v323 + 208) = *(_OWORD *)v349;
                                goto LABEL_241;
                              }
                              sub_1AD311474(v323 + 64);
                            }
                            v344 = *((_OWORD *)v324 + 11);
                            *(_OWORD *)(v323 + 160) = *((_OWORD *)v324 + 10);
                            *(_OWORD *)(v323 + 176) = v344;
                            *(_QWORD *)(v323 + 192) = *((_QWORD *)v324 + 24);
                            v345 = *((_OWORD *)v324 + 7);
                            *(_OWORD *)(v323 + 96) = *((_OWORD *)v324 + 6);
                            *(_OWORD *)(v323 + 112) = v345;
                            v346 = *((_OWORD *)v324 + 9);
                            *(_OWORD *)(v323 + 128) = *((_OWORD *)v324 + 8);
                            *(_OWORD *)(v323 + 144) = v346;
                            v347 = *((_OWORD *)v324 + 5);
                            *(_OWORD *)(v323 + 64) = *((_OWORD *)v324 + 4);
                            *(_OWORD *)(v323 + 80) = v347;
                            v321 = v500;
                            goto LABEL_236;
                          }
                          sub_1AD009758(v323 + 48, &qword_1ED2E3198);
                        }
                        *(_OWORD *)(v323 + 48) = *(_OWORD *)v335;
                        goto LABEL_226;
                      }
                      sub_1AD009758(v323 + 16, &qword_1ED2E3198);
                    }
                    *(_OWORD *)(v323 + 16) = *(_OWORD *)v326;
                    goto LABEL_221;
                  }
                  sub_1AD3114A8((_QWORD *)v323);
                }
                v328 = *((_OWORD *)v324 + 11);
                *(_OWORD *)(v323 + 160) = *((_OWORD *)v324 + 10);
                *(_OWORD *)(v323 + 176) = v328;
                v329 = *((_OWORD *)v324 + 13);
                *(_OWORD *)(v323 + 192) = *((_OWORD *)v324 + 12);
                *(_OWORD *)(v323 + 208) = v329;
                v330 = *((_OWORD *)v324 + 7);
                *(_OWORD *)(v323 + 96) = *((_OWORD *)v324 + 6);
                *(_OWORD *)(v323 + 112) = v330;
                v331 = *((_OWORD *)v324 + 9);
                *(_OWORD *)(v323 + 128) = *((_OWORD *)v324 + 8);
                *(_OWORD *)(v323 + 144) = v331;
                v332 = *((_OWORD *)v324 + 3);
                *(_OWORD *)(v323 + 32) = *((_OWORD *)v324 + 2);
                *(_OWORD *)(v323 + 48) = v332;
                v333 = *((_OWORD *)v324 + 5);
                *(_OWORD *)(v323 + 64) = *((_OWORD *)v324 + 4);
                *(_OWORD *)(v323 + 80) = v333;
                v334 = *((_OWORD *)v324 + 1);
                *(_OWORD *)v323 = *(_OWORD *)v324;
                *(_OWORD *)(v323 + 16) = v334;
                goto LABEL_241;
              }
              (*(void (**)(void *, uint64_t))(v316 + 8))(v313, v315);
            }
            v320 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
            memcpy(v313, v314, *(_QWORD *)(*(_QWORD *)(v320 - 8) + 64));
            goto LABEL_211;
          }
          sub_1AD311474(v296);
        }
        v308 = *((_OWORD *)v297 + 7);
        *(_OWORD *)(v296 + 96) = *((_OWORD *)v297 + 6);
        *(_OWORD *)(v296 + 112) = v308;
        *(_QWORD *)(v296 + 128) = *((_QWORD *)v297 + 16);
        v309 = *((_OWORD *)v297 + 3);
        *(_OWORD *)(v296 + 32) = *((_OWORD *)v297 + 2);
        *(_OWORD *)(v296 + 48) = v309;
        v310 = *((_OWORD *)v297 + 5);
        *(_OWORD *)(v296 + 64) = *((_OWORD *)v297 + 4);
        *(_OWORD *)(v296 + 80) = v310;
        v311 = *((_OWORD *)v297 + 1);
        *(_OWORD *)v296 = *(_OWORD *)v297;
        *(_OWORD *)(v296 + 16) = v311;
        goto LABEL_205;
      }
      sub_1AD009758((uint64_t)(v240 + 3), &qword_1ED2E3198);
    }
    v240[3] = *(_OWORD *)v262;
    goto LABEL_192;
  }
  if (v243)
  {
LABEL_181:
    v260 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    memcpy(v240, v241, *(_QWORD *)(*(_QWORD *)(v260 - 8) + 64));
    goto LABEL_345;
  }
  v499 = v12;
  v505 = v4;
  v509 = v5;
  v513 = a3;
  v244 = v241[1];
  *v240 = *v241;
  v240[1] = v244;
  v245 = v241[3];
  v240[2] = v241[2];
  v240[3] = v245;
  v246 = v11[6];
  v247 = (char *)v240 + v246;
  v248 = (char *)v241 + v246;
  v249 = *(_OWORD *)((char *)v241 + v246 + 112);
  *((_OWORD *)v247 + 6) = *(_OWORD *)((char *)v241 + v246 + 96);
  *((_OWORD *)v247 + 7) = v249;
  *((_QWORD *)v247 + 16) = *(_QWORD *)((char *)v241 + v246 + 128);
  v250 = *(_OWORD *)((char *)v241 + v246 + 48);
  *((_OWORD *)v247 + 2) = *(_OWORD *)((char *)v241 + v246 + 32);
  *((_OWORD *)v247 + 3) = v250;
  v251 = *(_OWORD *)((char *)v241 + v246 + 80);
  *((_OWORD *)v247 + 4) = *(_OWORD *)((char *)v241 + v246 + 64);
  *((_OWORD *)v247 + 5) = v251;
  v252 = *(_OWORD *)((char *)v241 + v246 + 16);
  *(_OWORD *)v247 = *(_OWORD *)((char *)v241 + v246);
  *((_OWORD *)v247 + 1) = v252;
  v253 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  v254 = v253[5];
  v255 = &v247[v254];
  v256 = &v248[v254];
  v257 = sub_1AD63AE2C();
  v258 = *(_QWORD *)(v257 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v258 + 48))(v256, 1, v257))
  {
    v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
    memcpy(v255, v256, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v258 + 32))(v255, v256, v257);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v258 + 56))(v255, 0, 1, v257);
  }
  v264 = v253[6];
  v265 = &v247[v264];
  v266 = &v248[v264];
  v267 = *((_OWORD *)v266 + 5);
  *((_OWORD *)v265 + 4) = *((_OWORD *)v266 + 4);
  *((_OWORD *)v265 + 5) = v267;
  v268 = *((_OWORD *)v266 + 3);
  *((_OWORD *)v265 + 2) = *((_OWORD *)v266 + 2);
  *((_OWORD *)v265 + 3) = v268;
  v269 = *((_OWORD *)v266 + 9);
  *((_OWORD *)v265 + 8) = *((_OWORD *)v266 + 8);
  *((_OWORD *)v265 + 9) = v269;
  v270 = *((_OWORD *)v266 + 7);
  *((_OWORD *)v265 + 6) = *((_OWORD *)v266 + 6);
  *((_OWORD *)v265 + 7) = v270;
  v271 = *((_OWORD *)v266 + 13);
  *((_OWORD *)v265 + 12) = *((_OWORD *)v266 + 12);
  *((_OWORD *)v265 + 13) = v271;
  v272 = *((_OWORD *)v266 + 11);
  *((_OWORD *)v265 + 10) = *((_OWORD *)v266 + 10);
  *((_OWORD *)v265 + 11) = v272;
  v273 = *((_OWORD *)v266 + 1);
  *(_OWORD *)v265 = *(_OWORD *)v266;
  *((_OWORD *)v265 + 1) = v273;
  *(_QWORD *)&v247[v253[7]] = *(_QWORD *)&v248[v253[7]];
  *(_OWORD *)&v247[v253[8]] = *(_OWORD *)&v248[v253[8]];
  *(_OWORD *)&v247[v253[9]] = *(_OWORD *)&v248[v253[9]];
  v247[v253[10]] = v248[v253[10]];
  v247[v253[11]] = v248[v253[11]];
  *(_OWORD *)&v247[v253[12]] = *(_OWORD *)&v248[v253[12]];
  *(_QWORD *)&v247[v253[13]] = *(_QWORD *)&v248[v253[13]];
  *((_BYTE *)v240 + v11[7]) = *((_BYTE *)v241 + v11[7]);
  *((_BYTE *)v240 + v11[8]) = *((_BYTE *)v241 + v11[8]);
  *((_BYTE *)v240 + v11[9]) = *((_BYTE *)v241 + v11[9]);
  *((_BYTE *)v240 + v11[10]) = *((_BYTE *)v241 + v11[10]);
  *((_BYTE *)v240 + v11[11]) = *((_BYTE *)v241 + v11[11]);
  *((_BYTE *)v240 + v11[12]) = *((_BYTE *)v241 + v11[12]);
  *((_BYTE *)v240 + v11[13]) = *((_BYTE *)v241 + v11[13]);
  *((_BYTE *)v240 + v11[14]) = *((_BYTE *)v241 + v11[14]);
  *(_OWORD *)((char *)v240 + v11[15]) = *(_OWORD *)((char *)v241 + v11[15]);
  *(_OWORD *)((char *)v240 + v11[16]) = *(_OWORD *)((char *)v241 + v11[16]);
  *((_BYTE *)v240 + v11[17]) = *((_BYTE *)v241 + v11[17]);
  *((_BYTE *)v240 + v11[18]) = *((_BYTE *)v241 + v11[18]);
  v274 = v11[19];
  v275 = (_OWORD *)((char *)v240 + v274);
  v276 = (_OWORD *)((char *)v241 + v274);
  v277 = type metadata accessor for CloudKitSharingToken();
  v278 = *(_QWORD *)(v277 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v278 + 48))(v276, 1, v277))
  {
    v279 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
    memcpy(v275, v276, *(_QWORD *)(*(_QWORD *)(v279 - 8) + 64));
  }
  else
  {
    v280 = v276[13];
    v275[12] = v276[12];
    v275[13] = v280;
    v275[14] = v276[14];
    *((_QWORD *)v275 + 30) = *((_QWORD *)v276 + 30);
    v281 = v276[9];
    v275[8] = v276[8];
    v275[9] = v281;
    v282 = v276[11];
    v275[10] = v276[10];
    v275[11] = v282;
    v283 = v276[5];
    v275[4] = v276[4];
    v275[5] = v283;
    v284 = v276[7];
    v275[6] = v276[6];
    v275[7] = v284;
    v285 = v276[1];
    *v275 = *v276;
    v275[1] = v285;
    v286 = v276[3];
    v275[2] = v276[2];
    v275[3] = v286;
    *(_OWORD *)((char *)v275 + 248) = *(_OWORD *)((char *)v276 + 248);
    *(_OWORD *)((char *)v275 + 264) = *(_OWORD *)((char *)v276 + 264);
    v287 = *(int *)(v277 + 24);
    v288 = (char *)v275 + v287;
    v289 = (char *)v276 + v287;
    *(_OWORD *)((char *)v275 + v287) = *(_OWORD *)((char *)v276 + v287);
    v290 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    v495 = &v288[v290];
    v291 = &v289[v290];
    v292 = sub_1AD63AF28();
    v293 = *(_QWORD *)(v292 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v293 + 48))(v291, 1, v292))
    {
      v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v495, v291, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v293 + 32))(v495, v291, v292);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v293 + 56))(v495, 0, 1, v292);
    }
    v304 = *(int *)(v277 + 28);
    v305 = (_OWORD *)((char *)v275 + v304);
    v306 = (_OWORD *)((char *)v276 + v304);
    v307 = v306[1];
    *v305 = *v306;
    v305[1] = v307;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v278 + 56))(v275, 0, 1, v277);
  }
  v4 = v505;
  v5 = v509;
  a3 = v513;
  *(_OWORD *)((char *)v240 + v11[20]) = *(_OWORD *)((char *)v241 + v11[20]);
  *((_BYTE *)v240 + v11[21]) = *((_BYTE *)v241 + v11[21]);
  *((_BYTE *)v240 + v11[22]) = *((_BYTE *)v241 + v11[22]);
  *((_BYTE *)v240 + v11[23]) = *((_BYTE *)v241 + v11[23]);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v499 + 56))(v240, 0, 1, v11);
LABEL_345:
  v468 = a3[7];
  v469 = (char *)v5 + v468;
  v470 = (char *)v4 + v468;
  *(_OWORD *)((char *)v5 + v468) = *(_OWORD *)((char *)v4 + v468);
  swift_release();
  v471 = v470 + 16;
  if (*((_QWORD *)v469 + 3) == 1)
  {
LABEL_348:
    *((_OWORD *)v469 + 1) = *v471;
    goto LABEL_350;
  }
  v472 = *((_QWORD *)v470 + 3);
  if (v472 == 1)
  {
    sub_1AD009758((uint64_t)(v469 + 16), &qword_1ED2E3198);
    goto LABEL_348;
  }
  *((_QWORD *)v469 + 2) = *(_QWORD *)v471;
  *((_QWORD *)v469 + 3) = v472;
  swift_bridgeObjectRelease();
LABEL_350:
  v473 = a3[9];
  *((_BYTE *)v5 + a3[8]) = *((_BYTE *)v4 + a3[8]);
  v474 = (char *)v5 + v473;
  v475 = (char *)v4 + v473;
  *(_OWORD *)((char *)v5 + v473) = *(_OWORD *)((char *)v4 + v473);
  swift_release();
  v476 = v475 + 16;
  if (*((_QWORD *)v474 + 3) != 1)
  {
    v477 = *((_QWORD *)v475 + 3);
    if (v477 != 1)
    {
      *((_QWORD *)v474 + 2) = *v476;
      *((_QWORD *)v474 + 3) = v477;
      swift_bridgeObjectRelease();
      goto LABEL_355;
    }
    sub_1AD009758((uint64_t)(v474 + 16), &qword_1ED2E3198);
  }
  *((_OWORD *)v474 + 1) = *(_OWORD *)v476;
LABEL_355:
  *(_QWORD *)((char *)v5 + a3[10]) = *(_QWORD *)((char *)v4 + a3[10]);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1AD322A58()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD322A64(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1AD322AE4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD322AF0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1AD322B68()
{
  unint64_t v0;

  sub_1ACFFECF8(319, &qword_1EECDAA18, (void (*)(uint64_t))type metadata accessor for CloudKitShareParticipant);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for IDSHealthInvitation.SharingAuthorization(uint64_t a1)
{
  swift_release();
  if (*(_QWORD *)(a1 + 24) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IDSHealthInvitation.SharingAuthorization(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = a2[3];
  swift_retain();
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v5;
    *(_QWORD *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
  }
  v7 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v7;
  v8 = a2[6];
  v9 = a2[7];
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IDSHealthInvitation.SharingAuthorization(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  if (a1[3] != 1)
  {
    if (v5 != 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1AD009758((uint64_t)(a1 + 2), &qword_1ED2E3198);
    goto LABEL_6;
  }
  if (v5 == 1)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_8;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
LABEL_8:
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IDSHealthInvitation.SharingAuthorization(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = (_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 16) = *v4;
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AD009758(a1 + 16, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
LABEL_6:
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSHealthInvitation.SharingAuthorization(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSHealthInvitation.SharingAuthorization(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.SharingAuthorization()
{
  return &type metadata for IDSHealthInvitation.SharingAuthorization;
}

ValueMetadata *type metadata accessor for HKProfileType()
{
  return &type metadata for HKProfileType;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.WheelchairUse.CodingKeys()
{
  return &type metadata for IDSHealthInvitation.WheelchairUse.CodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.WheelchairUse.NotSetCodingKeys()
{
  return &type metadata for IDSHealthInvitation.WheelchairUse.NotSetCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.WheelchairUse.NoCodingKeys()
{
  return &type metadata for IDSHealthInvitation.WheelchairUse.NoCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.WheelchairUse.YesCodingKeys()
{
  return &type metadata for IDSHealthInvitation.WheelchairUse.YesCodingKeys;
}

uint64_t _s9BlastDoor19IDSHealthInvitationV18NotificationStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD322FB8 + 4 * byte_1AD6776B8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD322FEC + 4 * byte_1AD6776B3[v4]))();
}

uint64_t sub_1AD322FEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD322FF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD322FFCLL);
  return result;
}

uint64_t sub_1AD323008(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD323010);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD323014(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD32301C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.NotificationStatus.CodingKeys()
{
  return &type metadata for IDSHealthInvitation.NotificationStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.NotificationStatus.NoneCodingKeys()
{
  return &type metadata for IDSHealthInvitation.NotificationStatus.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.NotificationStatus.PendingCodingKeys()
{
  return &type metadata for IDSHealthInvitation.NotificationStatus.PendingCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.NotificationStatus.AcceptedCodingKeys()
{
  return &type metadata for IDSHealthInvitation.NotificationStatus.AcceptedCodingKeys;
}

uint64_t _s9BlastDoor19IDSHealthInvitationV6StatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD3230B4 + 4 * byte_1AD6776C2[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD3230E8 + 4 * byte_1AD6776BD[v4]))();
}

uint64_t sub_1AD3230E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3230F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3230F8);
  return result;
}

uint64_t sub_1AD323104(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD32310CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD323110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD323118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Status.CodingKeys()
{
  return &type metadata for IDSHealthInvitation.Status.CodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Status.PendingCodingKeys()
{
  return &type metadata for IDSHealthInvitation.Status.PendingCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Status.AcceptedCodingKeys()
{
  return &type metadata for IDSHealthInvitation.Status.AcceptedCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Status.DeclinedCodingKeys()
{
  return &type metadata for IDSHealthInvitation.Status.DeclinedCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Status.RescindedCodingKeys()
{
  return &type metadata for IDSHealthInvitation.Status.RescindedCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Status.RevokedCodingKeys()
{
  return &type metadata for IDSHealthInvitation.Status.RevokedCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Direction.CodingKeys()
{
  return &type metadata for IDSHealthInvitation.Direction.CodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Direction.OutgoingCodingKeys()
{
  return &type metadata for IDSHealthInvitation.Direction.OutgoingCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.Direction.IncomingCodingKeys()
{
  return &type metadata for IDSHealthInvitation.Direction.IncomingCodingKeys;
}

uint64_t _s9BlastDoor19IDSHealthInvitationV14InvitationTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD323200 + 4 * byte_1AD6776CC[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD323234 + 4 * byte_1AD6776C7[v4]))();
}

uint64_t sub_1AD323234(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD32323C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD323244);
  return result;
}

uint64_t sub_1AD323250(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD323258);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD32325C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD323264(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.InvitationType.CodingKeys()
{
  return &type metadata for IDSHealthInvitation.InvitationType.CodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.InvitationType.InviteCodingKeys()
{
  return &type metadata for IDSHealthInvitation.InvitationType.InviteCodingKeys;
}

ValueMetadata *type metadata accessor for IDSHealthInvitation.InvitationType.RequestCodingKeys()
{
  return &type metadata for IDSHealthInvitation.InvitationType.RequestCodingKeys;
}

unint64_t sub_1AD3232A4()
{
  unint64_t result;

  result = qword_1EECDAA30;
  if (!qword_1EECDAA30)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678104, &type metadata for IDSHealthInvitation.InvitationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA30);
  }
  return result;
}

unint64_t sub_1AD3232EC()
{
  unint64_t result;

  result = qword_1EECDAA38;
  if (!qword_1EECDAA38)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67825C, &type metadata for IDSHealthInvitation.Direction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA38);
  }
  return result;
}

unint64_t sub_1AD323334()
{
  unint64_t result;

  result = qword_1EECDAA40;
  if (!qword_1EECDAA40)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6784A4, &type metadata for IDSHealthInvitation.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA40);
  }
  return result;
}

unint64_t sub_1AD32337C()
{
  unint64_t result;

  result = qword_1EECDAA48;
  if (!qword_1EECDAA48)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67864C, &type metadata for IDSHealthInvitation.NotificationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA48);
  }
  return result;
}

unint64_t sub_1AD3233C4()
{
  unint64_t result;

  result = qword_1EECDAA50;
  if (!qword_1EECDAA50)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6787F4, &type metadata for IDSHealthInvitation.WheelchairUse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA50);
  }
  return result;
}

unint64_t sub_1AD32340C()
{
  unint64_t result;

  result = qword_1EECDAA58;
  if (!qword_1EECDAA58)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678714, &type metadata for IDSHealthInvitation.WheelchairUse.NotSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA58);
  }
  return result;
}

unint64_t sub_1AD323454()
{
  unint64_t result;

  result = qword_1EECDAA60;
  if (!qword_1EECDAA60)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67873C, &type metadata for IDSHealthInvitation.WheelchairUse.NotSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA60);
  }
  return result;
}

unint64_t sub_1AD32349C()
{
  unint64_t result;

  result = qword_1EECDAA68;
  if (!qword_1EECDAA68)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6786C4, &type metadata for IDSHealthInvitation.WheelchairUse.NoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA68);
  }
  return result;
}

unint64_t sub_1AD3234E4()
{
  unint64_t result;

  result = qword_1EECDAA70;
  if (!qword_1EECDAA70)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6786EC, &type metadata for IDSHealthInvitation.WheelchairUse.NoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA70);
  }
  return result;
}

unint64_t sub_1AD32352C()
{
  unint64_t result;

  result = qword_1EECDAA78;
  if (!qword_1EECDAA78)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678674, &type metadata for IDSHealthInvitation.WheelchairUse.YesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA78);
  }
  return result;
}

unint64_t sub_1AD323574()
{
  unint64_t result;

  result = qword_1EECDAA80;
  if (!qword_1EECDAA80)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67869C, &type metadata for IDSHealthInvitation.WheelchairUse.YesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA80);
  }
  return result;
}

unint64_t sub_1AD3235BC()
{
  unint64_t result;

  result = qword_1EECDAA88;
  if (!qword_1EECDAA88)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678764, &type metadata for IDSHealthInvitation.WheelchairUse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA88);
  }
  return result;
}

unint64_t sub_1AD323604()
{
  unint64_t result;

  result = qword_1EECDAA90;
  if (!qword_1EECDAA90)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67878C, &type metadata for IDSHealthInvitation.WheelchairUse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA90);
  }
  return result;
}

unint64_t sub_1AD32364C()
{
  unint64_t result;

  result = qword_1EECDAA98;
  if (!qword_1EECDAA98)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67856C, &type metadata for IDSHealthInvitation.NotificationStatus.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAA98);
  }
  return result;
}

unint64_t sub_1AD323694()
{
  unint64_t result;

  result = qword_1EECDAAA0;
  if (!qword_1EECDAAA0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678594, &type metadata for IDSHealthInvitation.NotificationStatus.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAA0);
  }
  return result;
}

unint64_t sub_1AD3236DC()
{
  unint64_t result;

  result = qword_1EECDAAA8;
  if (!qword_1EECDAAA8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67851C, &type metadata for IDSHealthInvitation.NotificationStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAA8);
  }
  return result;
}

unint64_t sub_1AD323724()
{
  unint64_t result;

  result = qword_1EECDAAB0;
  if (!qword_1EECDAAB0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678544, &type metadata for IDSHealthInvitation.NotificationStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAB0);
  }
  return result;
}

unint64_t sub_1AD32376C()
{
  unint64_t result;

  result = qword_1EECDAAB8;
  if (!qword_1EECDAAB8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6784CC, &type metadata for IDSHealthInvitation.NotificationStatus.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAB8);
  }
  return result;
}

unint64_t sub_1AD3237B4()
{
  unint64_t result;

  result = qword_1EECDAAC0;
  if (!qword_1EECDAAC0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6784F4, &type metadata for IDSHealthInvitation.NotificationStatus.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAC0);
  }
  return result;
}

unint64_t sub_1AD3237FC()
{
  unint64_t result;

  result = qword_1EECDAAC8;
  if (!qword_1EECDAAC8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6785BC, &type metadata for IDSHealthInvitation.NotificationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAC8);
  }
  return result;
}

unint64_t sub_1AD323844()
{
  unint64_t result;

  result = qword_1EECDAAD0;
  if (!qword_1EECDAAD0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6785E4, &type metadata for IDSHealthInvitation.NotificationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAD0);
  }
  return result;
}

unint64_t sub_1AD32388C()
{
  unint64_t result;

  result = qword_1EECDAAD8;
  if (!qword_1EECDAAD8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6783C4, &type metadata for IDSHealthInvitation.Status.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAD8);
  }
  return result;
}

unint64_t sub_1AD3238D4()
{
  unint64_t result;

  result = qword_1EECDAAE0;
  if (!qword_1EECDAAE0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6783EC, &type metadata for IDSHealthInvitation.Status.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAE0);
  }
  return result;
}

unint64_t sub_1AD32391C()
{
  unint64_t result;

  result = qword_1EECDAAE8;
  if (!qword_1EECDAAE8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678374, &type metadata for IDSHealthInvitation.Status.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAE8);
  }
  return result;
}

unint64_t sub_1AD323964()
{
  unint64_t result;

  result = qword_1EECDAAF0;
  if (!qword_1EECDAAF0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67839C, &type metadata for IDSHealthInvitation.Status.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAF0);
  }
  return result;
}

unint64_t sub_1AD3239AC()
{
  unint64_t result;

  result = qword_1EECDAAF8;
  if (!qword_1EECDAAF8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678324, &type metadata for IDSHealthInvitation.Status.DeclinedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAAF8);
  }
  return result;
}

unint64_t sub_1AD3239F4()
{
  unint64_t result;

  result = qword_1EECDAB00;
  if (!qword_1EECDAB00)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67834C, &type metadata for IDSHealthInvitation.Status.DeclinedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB00);
  }
  return result;
}

unint64_t sub_1AD323A3C()
{
  unint64_t result;

  result = qword_1EECDAB08;
  if (!qword_1EECDAB08)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6782D4, &type metadata for IDSHealthInvitation.Status.RescindedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB08);
  }
  return result;
}

unint64_t sub_1AD323A84()
{
  unint64_t result;

  result = qword_1EECDAB10;
  if (!qword_1EECDAB10)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6782FC, &type metadata for IDSHealthInvitation.Status.RescindedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB10);
  }
  return result;
}

unint64_t sub_1AD323ACC()
{
  unint64_t result;

  result = qword_1EECDAB18;
  if (!qword_1EECDAB18)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678284, &type metadata for IDSHealthInvitation.Status.RevokedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB18);
  }
  return result;
}

unint64_t sub_1AD323B14()
{
  unint64_t result;

  result = qword_1EECDAB20;
  if (!qword_1EECDAB20)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6782AC, &type metadata for IDSHealthInvitation.Status.RevokedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB20);
  }
  return result;
}

unint64_t sub_1AD323B5C()
{
  unint64_t result;

  result = qword_1EECDAB28;
  if (!qword_1EECDAB28)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678414, &type metadata for IDSHealthInvitation.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB28);
  }
  return result;
}

unint64_t sub_1AD323BA4()
{
  unint64_t result;

  result = qword_1EECDAB30;
  if (!qword_1EECDAB30)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67843C, &type metadata for IDSHealthInvitation.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB30);
  }
  return result;
}

unint64_t sub_1AD323BEC()
{
  unint64_t result;

  result = qword_1EECDAB38;
  if (!qword_1EECDAB38)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67817C, &type metadata for IDSHealthInvitation.Direction.OutgoingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB38);
  }
  return result;
}

unint64_t sub_1AD323C34()
{
  unint64_t result;

  result = qword_1EECDAB40;
  if (!qword_1EECDAB40)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6781A4, &type metadata for IDSHealthInvitation.Direction.OutgoingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB40);
  }
  return result;
}

unint64_t sub_1AD323C7C()
{
  unint64_t result;

  result = qword_1EECDAB48;
  if (!qword_1EECDAB48)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67812C, &type metadata for IDSHealthInvitation.Direction.IncomingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB48);
  }
  return result;
}

unint64_t sub_1AD323CC4()
{
  unint64_t result;

  result = qword_1EECDAB50;
  if (!qword_1EECDAB50)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678154, &type metadata for IDSHealthInvitation.Direction.IncomingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB50);
  }
  return result;
}

unint64_t sub_1AD323D0C()
{
  unint64_t result;

  result = qword_1EECDAB58;
  if (!qword_1EECDAB58)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6781CC, &type metadata for IDSHealthInvitation.Direction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB58);
  }
  return result;
}

unint64_t sub_1AD323D54()
{
  unint64_t result;

  result = qword_1EECDAB60;
  if (!qword_1EECDAB60)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6781F4, &type metadata for IDSHealthInvitation.Direction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB60);
  }
  return result;
}

unint64_t sub_1AD323D9C()
{
  unint64_t result;

  result = qword_1EECDAB68;
  if (!qword_1EECDAB68)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678024, &type metadata for IDSHealthInvitation.InvitationType.InviteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB68);
  }
  return result;
}

unint64_t sub_1AD323DE4()
{
  unint64_t result;

  result = qword_1EECDAB70;
  if (!qword_1EECDAB70)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67804C, &type metadata for IDSHealthInvitation.InvitationType.InviteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB70);
  }
  return result;
}

unint64_t sub_1AD323E2C()
{
  unint64_t result;

  result = qword_1EECDAB78;
  if (!qword_1EECDAB78)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD677FD4, &type metadata for IDSHealthInvitation.InvitationType.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB78);
  }
  return result;
}

unint64_t sub_1AD323E74()
{
  unint64_t result;

  result = qword_1EECDAB80;
  if (!qword_1EECDAB80)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD677FFC, &type metadata for IDSHealthInvitation.InvitationType.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB80);
  }
  return result;
}

unint64_t sub_1AD323EBC()
{
  unint64_t result;

  result = qword_1EECDAB88;
  if (!qword_1EECDAB88)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD678074, &type metadata for IDSHealthInvitation.InvitationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB88);
  }
  return result;
}

unint64_t sub_1AD323F04()
{
  unint64_t result;

  result = qword_1EECDAB90;
  if (!qword_1EECDAB90)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67809C, &type metadata for IDSHealthInvitation.InvitationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAB90);
  }
  return result;
}

uint64_t sub_1AD323F48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657469766E69 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AD324030(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E696F6774756FLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696D6F636E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AD324120(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646E6570 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465747065636361 && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656E696C636564 && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646E6963736572 && a2 == 0xE900000000000064 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64656B6F766572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1AD324348(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E6570 && a2 == 0xE700000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465747065636361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1AD32448C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746553746F6ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 28526 && a2 == 0xE200000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7562617 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD3245B0()
{
  unint64_t result;

  result = qword_1EECDAB98;
  if (!qword_1EECDAB98)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for HKProfileType, &type metadata for HKProfileType);
    atomic_store(result, (unint64_t *)&qword_1EECDAB98);
  }
  return result;
}

uint64_t sub_1AD3245F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD324618(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD28104C(a1, v1 + 16);
}

uint64_t sub_1AD324620()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD324648()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD32466C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AD37ED74(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_1AD324674(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AD280E54(a1, (uint64_t (**)(_QWORD *))(v1 + 16));
}

uint64_t sub_1AD3246C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD3246D4(v1, a1);
}

uint64_t sub_1AD3246D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RCSFileInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD324718(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD324720(a1, v1);
}

uint64_t sub_1AD324720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RCSFileInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD324764())()
{
  return nullsub_1;
}

uint64_t sub_1AD324774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RCSFileTransferInfo() + 20);
  return sub_1AD3247E0(v3, a1);
}

uint64_t type metadata accessor for RCSFileTransferInfo()
{
  uint64_t result;

  result = qword_1EECDABB0;
  if (!qword_1EECDABB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD3247E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD41D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD324828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RCSFileTransferInfo() + 20);
  return sub_1AD324858(a1, v3);
}

uint64_t sub_1AD324858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD41D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD3248A0())(_QWORD)
{
  type metadata accessor for RCSFileTransferInfo();
  return nullsub_1;
}

uint64_t sub_1AD3248C8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD324914(&qword_1EECDABA0, (uint64_t)&unk_1AD652258);
  result = sub_1AD324914(&qword_1EECDABA8, (uint64_t)&unk_1AD652280);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD324914(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RCSFileTransferInfo();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_BYTE *sub_1AD324954(_BYTE *a1, uint64_t *a2, uint64_t a3)
{
  _BYTE *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(const void *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, uint64_t, uint64_t);
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  unsigned int (*v39)(_BYTE *, uint64_t, int *);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  void (*v59)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v61;
  void (*v62)(_BYTE *, _BYTE *, uint64_t);
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_BYTE *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    a1[1] = *((_BYTE *)a2 + 1);
    v7 = a2[2];
    *((_QWORD *)v4 + 1) = a2[1];
    *((_QWORD *)v4 + 2) = v7;
    *((_QWORD *)v4 + 3) = a2[3];
    v4[32] = *((_BYTE *)a2 + 32);
    v8 = a2[6];
    *((_QWORD *)v4 + 5) = a2[5];
    *((_QWORD *)v4 + 6) = v8;
    v9 = a2 + 7;
    v10 = a2[8];
    swift_retain();
    swift_retain();
    if (v10 == 1)
    {
      *(_OWORD *)(v4 + 56) = *v9;
    }
    else
    {
      *((_QWORD *)v4 + 7) = *(_QWORD *)v9;
      *((_QWORD *)v4 + 8) = v10;
      swift_bridgeObjectRetain();
    }
    v12 = a2[10];
    *((_QWORD *)v4 + 9) = a2[9];
    *((_QWORD *)v4 + 10) = v12;
    v13 = a2[12];
    *((_QWORD *)v4 + 11) = a2[11];
    *((_QWORD *)v4 + 12) = v13;
    v14 = (int *)type metadata accessor for RCSFileInfo();
    v15 = v14[9];
    v16 = &v4[v15];
    v17 = (uint64_t)a2 + v15;
    v18 = *(uint64_t *)((char *)a2 + v15 + 8);
    *v16 = *(uint64_t *)((char *)a2 + v15);
    v16[1] = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
    v19 = *(int *)(v65 + 28);
    v20 = (char *)v16 + v19;
    v21 = (const void *)(v17 + v19);
    v22 = sub_1AD63AF28();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
    v64 = v23;
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v26 = v14[10];
    v27 = &v4[v26];
    v28 = (uint64_t)a2 + v26;
    v29 = sub_1AD63B03C();
    v30 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    v30(v27, v28, v29);
    v31 = v14[11];
    v32 = &v4[v31];
    v33 = (uint64_t)a2 + v31;
    v34 = *(_QWORD *)(v33 + 8);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    *((_WORD *)v32 + 12) = *(_WORD *)(v33 + 24);
    *((_QWORD *)v32 + 2) = *(_QWORD *)(v33 + 16);
    v35 = *(int *)(a3 + 20);
    v36 = &v4[v35];
    v37 = (char *)a2 + v35;
    v38 = *((_QWORD *)v14 - 1);
    v39 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v38 + 48);
    swift_retain();
    if (v39(v37, 1, v14))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD41D8);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v61 = v38;
      v62 = (void (*)(_BYTE *, _BYTE *, uint64_t))v30;
      v63 = (unsigned int (*)(char *, uint64_t, uint64_t))v24;
      *v36 = *v37;
      v36[1] = v37[1];
      v41 = *((_QWORD *)v37 + 2);
      *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
      *((_QWORD *)v36 + 2) = v41;
      *((_QWORD *)v36 + 3) = *((_QWORD *)v37 + 3);
      v36[32] = v37[32];
      v42 = *((_QWORD *)v37 + 6);
      *((_QWORD *)v36 + 5) = *((_QWORD *)v37 + 5);
      *((_QWORD *)v36 + 6) = v42;
      v43 = v37 + 56;
      v44 = *((_QWORD *)v37 + 8);
      swift_retain();
      swift_retain();
      if (v44 == 1)
      {
        *(_OWORD *)(v36 + 56) = *v43;
      }
      else
      {
        *((_QWORD *)v36 + 7) = *(_QWORD *)v43;
        *((_QWORD *)v36 + 8) = v44;
        swift_bridgeObjectRetain();
      }
      v45 = *((_QWORD *)v37 + 10);
      *((_QWORD *)v36 + 9) = *((_QWORD *)v37 + 9);
      *((_QWORD *)v36 + 10) = v45;
      v46 = *((_QWORD *)v37 + 12);
      *((_QWORD *)v36 + 11) = *((_QWORD *)v37 + 11);
      *((_QWORD *)v36 + 12) = v46;
      v47 = v14[9];
      v48 = &v36[v47];
      v49 = &v37[v47];
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      v51 = *(int *)(v65 + 28);
      v52 = (char *)v48 + v51;
      v53 = (char *)v49 + v51;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v63(v53, 1, v22))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v52, v53, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v52, 0, 1, v22);
      }
      v62(&v36[v14[10]], &v37[v14[10]], v29);
      v55 = v14[11];
      v56 = &v36[v55];
      v57 = &v37[v55];
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      *((_WORD *)v56 + 12) = *((_WORD *)v57 + 12);
      *((_QWORD *)v56 + 2) = *((_QWORD *)v57 + 2);
      v59 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v61 + 56);
      swift_retain();
      v59(v36, 0, 1, v14);
    }
  }
  return v4;
}

uint64_t sub_1AD324D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 64) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for RCSFileInfo();
  v5 = a1 + *(int *)(v4 + 36);
  swift_release();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v7 = v5 + *(int *)(v6 + 28);
  v8 = sub_1AD63AF28();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = a1 + *(int *)(v4 + 40);
  v12 = sub_1AD63B03C();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  swift_release();
  v14 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v14, 1, v4);
  if (!(_DWORD)result)
  {
    swift_release();
    swift_release();
    if (*(_QWORD *)(v14 + 64) != 1)
      swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v16 = v14 + *(int *)(v4 + 36);
    swift_release();
    v17 = v16 + *(int *)(v6 + 28);
    if (!v10(v17, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    v13(v14 + *(int *)(v4 + 40), v12);
    return swift_release();
  }
  return result;
}

uint64_t sub_1AD324F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(const void *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  unsigned int (*v37)(_BYTE *, uint64_t, int *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  void (*v57)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = (_OWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_retain();
  if (v9 == 1)
  {
    *(_OWORD *)(a1 + 56) = *v8;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)v8;
    *(_QWORD *)(a1 + 64) = v9;
    swift_bridgeObjectRetain();
  }
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  v12 = (int *)type metadata accessor for RCSFileInfo();
  v13 = v12[9];
  v14 = (_QWORD *)(a1 + v13);
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v17 = *(int *)(v63 + 28);
  v18 = (char *)v14 + v17;
  v19 = (const void *)(v15 + v17);
  v20 = sub_1AD63AF28();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  v62 = v21;
  if (v22(v19, 1, v20))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v24 = v12[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_1AD63B03C();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v28(v25, v26, v27);
  v29 = v12[11];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  *(_WORD *)(v30 + 24) = *(_WORD *)(v31 + 24);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  v33 = *(int *)(a3 + 20);
  v34 = (_BYTE *)(a1 + v33);
  v35 = (_BYTE *)(a2 + v33);
  v36 = *((_QWORD *)v12 - 1);
  v37 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v36 + 48);
  swift_retain();
  if (v37(v35, 1, v12))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD41D8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v59 = v36;
    v60 = v28;
    v61 = (unsigned int (*)(char *, uint64_t, uint64_t))v22;
    *v34 = *v35;
    v34[1] = v35[1];
    v39 = *((_QWORD *)v35 + 2);
    *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
    *((_QWORD *)v34 + 2) = v39;
    *((_QWORD *)v34 + 3) = *((_QWORD *)v35 + 3);
    v34[32] = v35[32];
    v40 = *((_QWORD *)v35 + 6);
    *((_QWORD *)v34 + 5) = *((_QWORD *)v35 + 5);
    *((_QWORD *)v34 + 6) = v40;
    v41 = v35 + 56;
    v42 = *((_QWORD *)v35 + 8);
    swift_retain();
    swift_retain();
    if (v42 == 1)
    {
      *(_OWORD *)(v34 + 56) = *v41;
    }
    else
    {
      *((_QWORD *)v34 + 7) = *(_QWORD *)v41;
      *((_QWORD *)v34 + 8) = v42;
      swift_bridgeObjectRetain();
    }
    v43 = *((_QWORD *)v35 + 10);
    *((_QWORD *)v34 + 9) = *((_QWORD *)v35 + 9);
    *((_QWORD *)v34 + 10) = v43;
    v44 = *((_QWORD *)v35 + 12);
    *((_QWORD *)v34 + 11) = *((_QWORD *)v35 + 11);
    *((_QWORD *)v34 + 12) = v44;
    v45 = v12[9];
    v46 = &v34[v45];
    v47 = &v35[v45];
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = *(int *)(v63 + 28);
    v50 = (char *)v46 + v49;
    v51 = (char *)v47 + v49;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v61(v51, 1, v20))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v50, v51, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v50, 0, 1, v20);
    }
    v60((uint64_t)&v34[v12[10]], (uint64_t)&v35[v12[10]], v27);
    v53 = v12[11];
    v54 = &v34[v53];
    v55 = &v35[v53];
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    *((_WORD *)v54 + 12) = *((_WORD *)v55 + 12);
    *((_QWORD *)v54 + 2) = *((_QWORD *)v55 + 2);
    v57 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v59 + 56);
    swift_retain();
    v57(v34, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_1AD3252E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, int *);
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v63;
  void (*v64)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  int *__dst;
  char *__dsta;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) == 1)
  {
    if (v9 != 1)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 == 1)
  {
    sub_1AD0256E4(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for RCSFileInfo();
  v12 = v11[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  swift_retain();
  swift_release();
  __dst = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v16 = __dst[7];
  v17 = (char *)v13 + v16;
  v18 = (char *)(v14 + v16);
  v19 = sub_1AD63AF28();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  v82 = v20;
  v85 = v21;
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_13:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_14:
  v25 = v11[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_1AD63B03C();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(void (**)(uint64_t, uint64_t))(v29 + 24);
  v86 = v28;
  v30(v26, v27);
  v31 = v11[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = v34;
  swift_retain();
  swift_release();
  v35 = *(_QWORD *)(v33 + 16);
  *(_WORD *)(v32 + 24) = *(_WORD *)(v33 + 24);
  *(_QWORD *)(v32 + 16) = v35;
  v36 = *(int *)(a3 + 20);
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *((_QWORD *)v11 - 1);
  v40 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v39 + 48);
  LODWORD(v26) = v40(a1 + v36, 1, v11);
  v41 = v40(v38, 1, v11);
  if (!(_DWORD)v26)
  {
    if (v41)
    {
      sub_1AD3259C8(v37);
      goto LABEL_20;
    }
    *(_BYTE *)v37 = *(_BYTE *)v38;
    *(_BYTE *)(v37 + 1) = *(_BYTE *)(v38 + 1);
    v47 = *(_QWORD *)(v38 + 16);
    *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
    *(_QWORD *)(v37 + 16) = v47;
    swift_retain();
    swift_release();
    v48 = *(_QWORD *)(v38 + 24);
    *(_BYTE *)(v37 + 32) = *(_BYTE *)(v38 + 32);
    *(_QWORD *)(v37 + 24) = v48;
    v49 = *(_QWORD *)(v38 + 48);
    *(_QWORD *)(v37 + 40) = *(_QWORD *)(v38 + 40);
    *(_QWORD *)(v37 + 48) = v49;
    swift_retain();
    swift_release();
    v50 = *(_QWORD *)(v38 + 64);
    if (*(_QWORD *)(v37 + 64) == 1)
    {
      if (v50 != 1)
      {
        *(_QWORD *)(v37 + 56) = *(_QWORD *)(v38 + 56);
        *(_QWORD *)(v37 + 64) = *(_QWORD *)(v38 + 64);
        swift_bridgeObjectRetain();
        goto LABEL_34;
      }
    }
    else
    {
      if (v50 != 1)
      {
        *(_QWORD *)(v37 + 56) = *(_QWORD *)(v38 + 56);
        *(_QWORD *)(v37 + 64) = *(_QWORD *)(v38 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_34:
        v65 = *(_QWORD *)(v38 + 80);
        *(_QWORD *)(v37 + 72) = *(_QWORD *)(v38 + 72);
        *(_QWORD *)(v37 + 80) = v65;
        swift_retain();
        swift_release();
        *(_QWORD *)(v37 + 88) = *(_QWORD *)(v38 + 88);
        *(_QWORD *)(v37 + 96) = *(_QWORD *)(v38 + 96);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v66 = v11[9];
        v67 = (_QWORD *)(v37 + v66);
        v68 = v38 + v66;
        v69 = *(_QWORD *)(v38 + v66 + 8);
        *v67 = *(_QWORD *)(v38 + v66);
        v67[1] = v69;
        swift_retain();
        swift_release();
        v70 = __dst[7];
        v71 = (char *)v67 + v70;
        v72 = (char *)(v68 + v70);
        v73 = v85(v71, 1, v19);
        v74 = v85(v72, 1, v19);
        if (v73)
        {
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v71, v72, v19);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v71, 0, 1, v19);
LABEL_40:
            ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v37 + v11[10], v38 + v11[10], v86);
            v76 = v11[11];
            v77 = v37 + v76;
            v78 = v38 + v76;
            v79 = *(_QWORD *)(v38 + v76 + 8);
            *(_QWORD *)v77 = *(_QWORD *)(v38 + v76);
            *(_QWORD *)(v77 + 8) = v79;
            swift_retain();
            swift_release();
            v80 = *(_QWORD *)(v78 + 16);
            *(_WORD *)(v77 + 24) = *(_WORD *)(v78 + 24);
            *(_QWORD *)(v77 + 16) = v80;
            return a1;
          }
        }
        else
        {
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v82 + 24))(v71, v72, v19);
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v82 + 8))(v71, v19);
        }
        v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        goto LABEL_40;
      }
      sub_1AD0256E4(v37 + 56);
    }
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    goto LABEL_34;
  }
  if (v41)
  {
LABEL_20:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD41D8);
    memcpy((void *)v37, (const void *)v38, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    return a1;
  }
  *(_BYTE *)v37 = *(_BYTE *)v38;
  *(_BYTE *)(v37 + 1) = *(_BYTE *)(v38 + 1);
  v42 = *(_QWORD *)(v38 + 16);
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  *(_QWORD *)(v37 + 16) = v42;
  v43 = *(_QWORD *)(v38 + 24);
  *(_BYTE *)(v37 + 32) = *(_BYTE *)(v38 + 32);
  *(_QWORD *)(v37 + 24) = v43;
  v44 = *(_QWORD *)(v38 + 48);
  *(_QWORD *)(v37 + 40) = *(_QWORD *)(v38 + 40);
  *(_QWORD *)(v37 + 48) = v44;
  v45 = *(_QWORD *)(v38 + 64);
  swift_retain();
  swift_retain();
  if (v45 == 1)
  {
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
  }
  else
  {
    *(_QWORD *)(v37 + 56) = *(_QWORD *)(v38 + 56);
    *(_QWORD *)(v37 + 64) = *(_QWORD *)(v38 + 64);
    swift_bridgeObjectRetain();
  }
  v51 = *(_QWORD *)(v38 + 80);
  *(_QWORD *)(v37 + 72) = *(_QWORD *)(v38 + 72);
  *(_QWORD *)(v37 + 80) = v51;
  *(_QWORD *)(v37 + 88) = *(_QWORD *)(v38 + 88);
  *(_QWORD *)(v37 + 96) = *(_QWORD *)(v38 + 96);
  v52 = v11[9];
  v53 = (_QWORD *)(v37 + v52);
  v54 = (_QWORD *)(v38 + v52);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  v56 = __dst[7];
  __dsta = (char *)v53 + v56;
  v57 = (char *)v54 + v56;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v85(v57, 1, v19))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(__dsta, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(__dsta, v57, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dsta, 0, 1, v19);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v37 + v11[10], v38 + v11[10], v86);
  v59 = v11[11];
  v60 = v37 + v59;
  v61 = v38 + v59;
  v62 = *(_QWORD *)(v61 + 8);
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *(_QWORD *)(v60 + 8) = v62;
  v63 = *(_WORD *)(v61 + 24);
  *(_QWORD *)(v60 + 16) = *(_QWORD *)(v61 + 16);
  *(_WORD *)(v60 + 24) = v63;
  v64 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v39 + 56);
  swift_retain();
  v64(v37, 0, 1, v11);
  return a1;
}

uint64_t sub_1AD3259C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RCSFileInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD325A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  unsigned int (*v39)(const void *, uint64_t, uint64_t);
  int *__dst;
  char *__dsta;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v6 = (int *)type metadata accessor for RCSFileInfo();
  v7 = v6[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  __dst = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v10 = __dst[7];
  v11 = (void *)(v8 + v10);
  v12 = (const void *)(v9 + v10);
  v13 = sub_1AD63AF28();
  v14 = *(_QWORD *)(v13 - 8);
  v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v39(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = v6[10];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1AD63B03C();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  v21 = v6[11];
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  *v22 = *v23;
  *(_OWORD *)((char *)v22 + 10) = *(_OWORD *)((char *)v23 + 10);
  v24 = *(int *)(a3 + 20);
  v25 = (_BYTE *)(a1 + v24);
  v26 = (_BYTE *)(a2 + v24);
  v27 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, int *))(v27 + 48))(v26, 1, v6))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD41D8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v25 = *v26;
    v25[1] = v26[1];
    *(_OWORD *)(v25 + 8) = *(_OWORD *)(v26 + 8);
    *(_OWORD *)(v25 + 17) = *(_OWORD *)(v26 + 17);
    *(_OWORD *)(v25 + 40) = *(_OWORD *)(v26 + 40);
    *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
    *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
    *(_OWORD *)(v25 + 88) = *(_OWORD *)(v26 + 88);
    v29 = v6[9];
    v30 = &v25[v29];
    v31 = &v26[v29];
    *v30 = *v31;
    v32 = __dst[7];
    __dsta = (char *)v30 + v32;
    v33 = (char *)v31 + v32;
    if (v39((char *)v31 + v32, 1, v13))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(__dsta, v33, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dsta, 0, 1, v13);
    }
    v20((uint64_t)&v25[v6[10]], (uint64_t)&v26[v6[10]], v19);
    v35 = v6[11];
    v36 = &v25[v35];
    v37 = &v26[v35];
    *v36 = *v37;
    *(_OWORD *)((char *)v36 + 10) = *(_OWORD *)((char *)v37 + 10);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v27 + 56))(v25, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_1AD325CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, int *);
  int v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v6 = (_OWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 64) == 1)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 64);
  if (v7 == 1)
  {
    sub_1AD0256E4(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for RCSFileInfo();
  v10 = v9[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  swift_release();
  v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v13 = *(int *)(v66 + 28);
  v14 = (void *)(v11 + v13);
  v15 = (void *)(v12 + v13);
  v16 = sub_1AD63AF28();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  v64 = v17;
  v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v18;
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_11:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_12:
  v22 = v9[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1AD63B03C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(uint64_t, uint64_t))(v26 + 40);
  v67 = v25;
  v27(v23, v24);
  v28 = v9[11];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  swift_release();
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  *(_WORD *)(v29 + 24) = *(_WORD *)(v30 + 24);
  v31 = *(int *)(a3 + 20);
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *((_QWORD *)v9 - 1);
  v35 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v34 + 48);
  LODWORD(v29) = v35(a1 + v31, 1, v9);
  v36 = v35(v33, 1, v9);
  if (!(_DWORD)v29)
  {
    if (v36)
    {
      sub_1AD3259C8(v32);
      goto LABEL_18;
    }
    *(_BYTE *)v32 = *(_BYTE *)v33;
    *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
    *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
    swift_release();
    *(_QWORD *)(v32 + 24) = *(_QWORD *)(v33 + 24);
    *(_BYTE *)(v32 + 32) = *(_BYTE *)(v33 + 32);
    *(_OWORD *)(v32 + 40) = *(_OWORD *)(v33 + 40);
    swift_release();
    v45 = (_QWORD *)(v33 + 56);
    if (*(_QWORD *)(v32 + 64) != 1)
    {
      v46 = *(_QWORD *)(v33 + 64);
      if (v46 != 1)
      {
        *(_QWORD *)(v32 + 56) = *v45;
        *(_QWORD *)(v32 + 64) = v46;
        swift_bridgeObjectRelease();
LABEL_27:
        *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
        swift_release();
        v50 = *(_QWORD *)(v33 + 96);
        *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
        *(_QWORD *)(v32 + 96) = v50;
        swift_bridgeObjectRelease();
        v51 = v9[9];
        v52 = v32 + v51;
        v53 = v33 + v51;
        *(_OWORD *)(v32 + v51) = *(_OWORD *)(v33 + v51);
        swift_release();
        v54 = *(int *)(v66 + 28);
        v55 = (void *)(v52 + v54);
        v56 = (const void *)(v53 + v54);
        v57 = v65(v52 + v54, 1, v16);
        v58 = v65((uint64_t)v56, 1, v16);
        if (v57)
        {
          if (!v58)
          {
            (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v55, v56, v16);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v55, 0, 1, v16);
LABEL_33:
            ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v32 + v9[10], v33 + v9[10], v67);
            v60 = v9[11];
            v61 = v32 + v60;
            v62 = v33 + v60;
            *(_OWORD *)(v32 + v60) = *(_OWORD *)(v33 + v60);
            swift_release();
            *(_QWORD *)(v61 + 16) = *(_QWORD *)(v62 + 16);
            *(_WORD *)(v61 + 24) = *(_WORD *)(v62 + 24);
            return a1;
          }
        }
        else
        {
          if (!v58)
          {
            (*(void (**)(void *, const void *, uint64_t))(v64 + 40))(v55, v56, v16);
            goto LABEL_33;
          }
          (*(void (**)(void *, uint64_t))(v64 + 8))(v55, v16);
        }
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        goto LABEL_33;
      }
      sub_1AD0256E4(v32 + 56);
    }
    *(_OWORD *)(v32 + 56) = *(_OWORD *)v45;
    goto LABEL_27;
  }
  if (v36)
  {
LABEL_18:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD41D8);
    memcpy((void *)v32, (const void *)v33, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    return a1;
  }
  *(_BYTE *)v32 = *(_BYTE *)v33;
  *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
  *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
  *(_OWORD *)(v32 + 17) = *(_OWORD *)(v33 + 17);
  *(_OWORD *)(v32 + 40) = *(_OWORD *)(v33 + 40);
  *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
  *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
  *(_OWORD *)(v32 + 88) = *(_OWORD *)(v33 + 88);
  v37 = v9[9];
  v38 = (_OWORD *)(v32 + v37);
  v39 = (_OWORD *)(v33 + v37);
  *v38 = *v39;
  v40 = *(int *)(v66 + 28);
  v41 = (char *)v38 + v40;
  v42 = (char *)v39 + v40;
  if (v65((uint64_t)v39 + v40, 1, v16))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v41, v42, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v41, 0, 1, v16);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v32 + v9[10], v33 + v9[10], v67);
  v47 = v9[11];
  v48 = (_OWORD *)(v32 + v47);
  v49 = (_OWORD *)(v33 + v47);
  *v48 = *v49;
  *(_OWORD *)((char *)v48 + 10) = *(_OWORD *)((char *)v49 + 10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v34 + 56))(v32, 0, 1, v9);
  return a1;
}

uint64_t sub_1AD3262A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3262B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for RCSFileInfo();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD41D8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1AD326328()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD326334(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for RCSFileInfo();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD41D8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1AD3263B4()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for RCSFileInfo();
  if (v0 <= 0x3F)
  {
    sub_1AD326438();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1AD326438()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EECDABC0)
  {
    type metadata accessor for RCSFileInfo();
    v0 = sub_1AD63BC48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EECDABC0);
  }
}

uint64_t sub_1AD32648C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[1];
  v2 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD00408C(v4, v5);
}

__n128 sub_1AD3264C0(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  swift_release();
  sub_1AD004118(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  return result;
}

uint64_t sub_1AD326514()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 24);
    sub_1AD0040A0(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD326598@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[2];
  v2 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD00408C(v4, v5);
}

__n128 sub_1AD3265CC(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[2].n128_i64[0];
  v6 = v1[2].n128_u64[1];
  swift_release();
  sub_1AD004118(v5, v6);
  result = *a1;
  v1[1] = *a1;
  v1[2].n128_u64[0] = v3;
  v1[2].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD326620()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 32);
    sub_1AD0040A0(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD3266A4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[6];
  v2 = v1[7];
  v4 = v1[8];
  v5 = v1[9];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD00408C(v4, v5);
}

__n128 sub_1AD3266D8(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[4].n128_i64[0];
  v6 = v1[4].n128_u64[1];
  swift_release();
  sub_1AD004118(v5, v6);
  result = *a1;
  v1[3] = *a1;
  v1[4].n128_u64[0] = v3;
  v1[4].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD32672C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 64);
    sub_1AD0040A0(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD3267B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD00408C(v4, v5);
}

__n128 sub_1AD3267E4(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[1].n128_i64[0];
  v6 = v1[1].n128_u64[1];
  swift_release();
  sub_1AD004118(v5, v6);
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD326838@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[5];
  v2 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD00408C(v4, v5);
}

__n128 sub_1AD32686C(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  swift_release();
  sub_1AD004118(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 40) = *a1;
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v4;
  return result;
}

uint64_t sub_1AD3268C0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 16);
    sub_1AD0040A0(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD326944()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 56);
    sub_1AD0040A0(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD3269C8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[3];
  v2 = v1[4];
  v4 = v1[5];
  v5 = v1[6];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD285EE4(v4, v5);
}

__n128 sub_1AD3269FC(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  swift_release();
  sub_1AD009794(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 24) = *a1;
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 48) = v4;
  return result;
}

uint64_t sub_1AD326A50@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[13];
  v2 = v1[14];
  v4 = v1[15];
  v5 = v1[16];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD00408C(v4, v5);
}

__n128 sub_1AD326A84(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 128);
  swift_release();
  sub_1AD004118(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 104) = *a1;
  *(_QWORD *)(v1 + 120) = v3;
  *(_QWORD *)(v1 + 128) = v4;
  return result;
}

uint64_t sub_1AD326AD8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[17];
  v2 = v1[18];
  v4 = v1[19];
  v5 = v1[20];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD285EE4(v4, v5);
}

__n128 sub_1AD326B0C(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 152);
  v6 = *(_QWORD *)(v1 + 160);
  swift_release();
  sub_1AD009794(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 136) = *a1;
  *(_QWORD *)(v1 + 152) = v3;
  *(_QWORD *)(v1 + 160) = v4;
  return result;
}

uint64_t sub_1AD326B60()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 40);
    sub_1AD00408C(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD326BE4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 128);
  if (v1 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 120);
    sub_1AD0040A0(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD326C68()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 160);
  if (v1 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 152);
    sub_1AD00408C(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD326CEC@<X0>(uint64_t (**a1)(uint64_t)@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648170;
  v3 = sub_1AD043FDC((uint64_t)&unk_1E5CB6460);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD28D484;
  *(_QWORD *)(inited + 40) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2438);
  v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD648170;
  *(_QWORD *)(v5 + 32) = 0x64756F6C6369;
  *(_QWORD *)(v5 + 40) = 0xE600000000000000;
  *(_QWORD *)(v5 + 48) = &unk_1E5CB63F0;
  *(_QWORD *)(v5 + 56) = 0x64756F6C6369;
  *(_QWORD *)(v5 + 64) = 0xE600000000000000;
  *(_QWORD *)(v5 + 72) = &unk_1E5CB6420;
  v6 = sub_1AD0440D4(v5);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2610);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 48) = sub_1AD32DFD8;
  *(_QWORD *)(inited + 56) = v7;
  return sub_1AD2809E4((_QWORD *)inited, a1);
}

uint64_t sub_1AD326E50@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[31];
  v2 = v1[32];
  v4 = v1[33];
  v5 = v1[34];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD285EE4(v4, v5);
}

__n128 sub_1AD326E84(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 264);
  v6 = *(_QWORD *)(v1 + 272);
  swift_release();
  sub_1AD009794(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 248) = *a1;
  *(_QWORD *)(v1 + 264) = v3;
  *(_QWORD *)(v1 + 272) = v4;
  return result;
}

uint64_t sub_1AD326ED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CloudKitSharingToken();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t type metadata accessor for CloudKitSharingToken()
{
  uint64_t result;

  result = qword_1EECDABC8;
  if (!qword_1EECDABC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD326F50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACFF64C0(a1, (uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  v6 = type metadata accessor for CloudKitSharingToken();
  sub_1AD326FE8((uint64_t)v5, v1 + *(int *)(v6 + 24));
  return sub_1AD009758(a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t sub_1AD326FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD327030@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for CloudKitSharingToken() + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 sub_1AD327080(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for CloudKitSharingToken() + 28));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD3270E4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 272);
  if (v1 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 264);
    sub_1AD00408C(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD327168@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + *(int *)(type metadata accessor for CloudKitSharingToken() + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(v6 + *(int *)(v7 + 28), (uint64_t)v5, &qword_1ED2E1A40);
  v8 = sub_1AD63AF28();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD327290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for CloudKitSharingToken() + 28);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD32731C()
{
  unsigned int *v0;

  return *v0;
}

uint64_t sub_1AD327324(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD32732C())()
{
  return nullsub_1;
}

uint64_t sub_1AD32733C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 24);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD0040A0(v3, v2);
  }
  return result;
}

uint64_t sub_1AD3273A8(uint64_t a1, uint64_t a2)
{
  return sub_1AD003184(a1, a2);
}

uint64_t (*sub_1AD3273C8(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 32);
  if (v2 >> 60 == 15)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 24);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD0040A0(v4, v2);
    return sub_1AD327454;
  }
  return result;
}

uint64_t sub_1AD327454(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003184(*a1, v3);
  sub_1AD0040A0(*a1, v3);
  sub_1AD003184(v2, v3);
  return sub_1AD00412C(v2, v3);
}

uint64_t sub_1AD3274C0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[3];
  v8 = a2[4];
  swift_retain();
  sub_1AD00408C(v5, v6);
  swift_release();
  result = sub_1AD004118(v7, v8);
  a2[1] = v4;
  a2[2] = v3;
  a2[3] = v5;
  a2[4] = v6;
  return result;
}

void (*sub_1AD327534(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[1];
  v4 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD00408C(v6, v7);
  return sub_1AD327598;
}

void sub_1AD327598(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[3];
  v9 = v4[4];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD00408C(v7, v3);
    swift_release();
    sub_1AD004118(v8, v9);
    v4[1] = v6;
    v4[2] = v5;
    v4[3] = v7;
    v4[4] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD004118(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD004118(v8, v9);
    v4[1] = v6;
    v4[2] = v5;
    v4[3] = v7;
    v4[4] = v3;
  }
  free(v2);
}

uint64_t sub_1AD327658()
{
  unsigned int *v0;

  return *v0;
}

uint64_t sub_1AD327660(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD327668())()
{
  return nullsub_1;
}

unint64_t sub_1AD327678()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4) | ((unint64_t)*(unsigned __int8 *)(v0 + 8) << 32);
}

uint64_t sub_1AD327698(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  *(_BYTE *)(v1 + 8) = BYTE4(result) & 1;
  return result;
}

uint64_t (*sub_1AD3276A8())()
{
  return nullsub_1;
}

uint64_t sub_1AD3276B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 32);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD0040A0(v3, v2);
  }
  return result;
}

uint64_t sub_1AD327724(uint64_t a1, uint64_t a2)
{
  return sub_1AD003184(a1, a2);
}

uint64_t (*sub_1AD327744(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 40);
  if (v2 >> 60 == 15)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 32);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD0040A0(v4, v2);
    return sub_1AD3277D0;
  }
  return result;
}

uint64_t sub_1AD3277D0(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003184(*a1, v3);
  sub_1AD0040A0(*a1, v3);
  sub_1AD003184(v2, v3);
  return sub_1AD00412C(v2, v3);
}

uint64_t sub_1AD32783C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[4];
  v8 = a2[5];
  swift_retain();
  sub_1AD00408C(v5, v6);
  swift_release();
  result = sub_1AD004118(v7, v8);
  a2[2] = v4;
  a2[3] = v3;
  a2[4] = v5;
  a2[5] = v6;
  return result;
}

void (*sub_1AD3278B0(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[2];
  v4 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD00408C(v6, v7);
  return sub_1AD327914;
}

void sub_1AD327914(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[4];
  v9 = v4[5];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD00408C(v7, v3);
    swift_release();
    sub_1AD004118(v8, v9);
    v4[2] = v6;
    v4[3] = v5;
    v4[4] = v7;
    v4[5] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD004118(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD004118(v8, v9);
    v4[2] = v6;
    v4[3] = v5;
    v4[4] = v7;
    v4[5] = v3;
  }
  free(v2);
}

uint64_t sub_1AD3279D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *(_BYTE *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain();
  return sub_1AD00408C(v5, v6);
}

__n128 sub_1AD327A20(__n128 *a1)
{
  __n128 *v1;
  unsigned __int8 v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 result;

  v3 = a1->n128_u8[8];
  v4 = a1[2].n128_u64[0];
  v5 = a1[2].n128_u64[1];
  v6 = v1[2].n128_i64[0];
  v7 = v1[2].n128_u64[1];
  swift_release();
  sub_1AD004118(v6, v7);
  v1->n128_u64[0] = a1->n128_u64[0];
  v1->n128_u8[8] = v3;
  result = a1[1];
  v1[1] = result;
  v1[2].n128_u64[0] = v4;
  v1[2].n128_u64[1] = v5;
  return result;
}

uint64_t (*sub_1AD327A8C())()
{
  return nullsub_1;
}

uint64_t sub_1AD327A9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 72);
  if (v2 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 64);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD0040A0(v3, v2);
  }
  return result;
}

uint64_t sub_1AD327B08(uint64_t a1, uint64_t a2)
{
  return sub_1AD003184(a1, a2);
}

uint64_t (*sub_1AD327B28(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 72);
  if (v2 >> 60 == 15)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 64);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD0040A0(v4, v2);
    return sub_1AD327BB4;
  }
  return result;
}

uint64_t sub_1AD327BB4(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003184(*a1, v3);
  sub_1AD0040A0(*a1, v3);
  sub_1AD003184(v2, v3);
  return sub_1AD00412C(v2, v3);
}

uint64_t sub_1AD327C20(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[8];
  v8 = a2[9];
  swift_retain();
  sub_1AD00408C(v5, v6);
  swift_release();
  result = sub_1AD004118(v7, v8);
  a2[6] = v4;
  a2[7] = v3;
  a2[8] = v5;
  a2[9] = v6;
  return result;
}

void (*sub_1AD327C94(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[6];
  v4 = v1[7];
  v6 = v1[8];
  v7 = v1[9];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD00408C(v6, v7);
  return sub_1AD327CF8;
}

void sub_1AD327CF8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[8];
  v9 = v4[9];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD00408C(v7, v3);
    swift_release();
    sub_1AD004118(v8, v9);
    v4[6] = v6;
    v4[7] = v5;
    v4[8] = v7;
    v4[9] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD004118(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD004118(v8, v9);
    v4[6] = v6;
    v4[7] = v5;
    v4[8] = v7;
    v4[9] = v3;
  }
  free(v2);
}

unint64_t sub_1AD327DB8()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 80) | ((unint64_t)*(unsigned __int8 *)(v0 + 84) << 32);
}

uint64_t sub_1AD327DD8(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 80) = result;
  *(_BYTE *)(v1 + 84) = BYTE4(result) & 1;
  return result;
}

uint64_t (*sub_1AD327DE8())()
{
  return nullsub_1;
}

uint64_t sub_1AD327DF8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD327E00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_1AD327E28())()
{
  return nullsub_1;
}

uint64_t sub_1AD327E38()
{
  unsigned int *v0;

  return *v0;
}

uint64_t sub_1AD327E40(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD327E48())()
{
  return nullsub_1;
}

uint64_t sub_1AD327E58()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD327E60(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_1AD327E88())()
{
  return nullsub_1;
}

uint64_t sub_1AD327E98@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD327EA4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*sub_1AD327ECC())()
{
  return nullsub_1;
}

uint64_t sub_1AD327EDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 16);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD0040A0(v3, v2);
  }
  return result;
}

uint64_t (*sub_1AD327F4C(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 24);
  if (v2 >> 60 == 15)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 16);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD0040A0(v4, v2);
    return sub_1AD327FD8;
  }
  return result;
}

uint64_t sub_1AD327FD8(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003184(*a1, v3);
  sub_1AD0040A0(*a1, v3);
  sub_1AD003184(v2, v3);
  return sub_1AD00412C(v2, v3);
}

uint64_t sub_1AD328040(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[2];
  v8 = a2[3];
  swift_retain();
  sub_1AD00408C(v5, v6);
  swift_release();
  result = sub_1AD004118(v7, v8);
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v6;
  return result;
}

void (*sub_1AD3280B4(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v7 = v1[3];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD00408C(v6, v7);
  return sub_1AD328118;
}

void sub_1AD328118(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[2];
  v9 = v4[3];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD00408C(v7, v3);
    swift_release();
    sub_1AD004118(v8, v9);
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD004118(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD004118(v8, v9);
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v3;
  }
  free(v2);
}

uint64_t sub_1AD3281D8()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 32);
}

uint64_t sub_1AD3281E0(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*sub_1AD3281E8())()
{
  return nullsub_1;
}

uint64_t sub_1AD3281F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 56);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD0040A0(v3, v2);
  }
  return result;
}

uint64_t sub_1AD328264(uint64_t a1, uint64_t a2)
{
  return sub_1AD003184(a1, a2);
}

uint64_t (*sub_1AD328284(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 64);
  if (v2 >> 60 == 15)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 56);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD0040A0(v4, v2);
    return sub_1AD328310;
  }
  return result;
}

uint64_t sub_1AD328310(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003184(*a1, v3);
  sub_1AD0040A0(*a1, v3);
  sub_1AD003184(v2, v3);
  return sub_1AD00412C(v2, v3);
}

uint64_t sub_1AD32837C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[7];
  v8 = a2[8];
  swift_retain();
  sub_1AD00408C(v5, v6);
  swift_release();
  result = sub_1AD004118(v7, v8);
  a2[5] = v4;
  a2[6] = v3;
  a2[7] = v5;
  a2[8] = v6;
  return result;
}

void (*sub_1AD3283F0(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[5];
  v4 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD00408C(v6, v7);
  return sub_1AD328454;
}

void sub_1AD328454(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[7];
  v9 = v4[8];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD00408C(v7, v3);
    swift_release();
    sub_1AD004118(v8, v9);
    v4[5] = v6;
    v4[6] = v5;
    v4[7] = v7;
    v4[8] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD004118(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD004118(v8, v9);
    v4[5] = v6;
    v4[6] = v5;
    v4[7] = v7;
    v4[8] = v3;
  }
  free(v2);
}

uint64_t sub_1AD328514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  *(_DWORD *)a1 = *(_DWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD328544(int *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_DWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  return result;
}

uint64_t (*sub_1AD32858C())()
{
  return nullsub_1;
}

uint64_t sub_1AD32859C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 40);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD00408C(v3, v2);
  }
  return result;
}

uint64_t sub_1AD328608(uint64_t a1, uint64_t a2)
{
  return sub_1AD003258(a1, a2);
}

uint64_t (*sub_1AD328628(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 48);
  if (v2 >> 60 == 11)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 40);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD00408C(v4, v2);
    return sub_1AD3286B4;
  }
  return result;
}

uint64_t sub_1AD3286B4(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003258(*a1, v3);
  sub_1AD00408C(*a1, v3);
  sub_1AD003258(v2, v3);
  return sub_1AD004118(v2, v3);
}

uint64_t sub_1AD328720(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[5];
  v8 = a2[6];
  swift_retain();
  sub_1AD285EE4(v5, v6);
  swift_release();
  result = sub_1AD009794(v7, v8);
  a2[3] = v4;
  a2[4] = v3;
  a2[5] = v5;
  a2[6] = v6;
  return result;
}

void (*sub_1AD328794(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD285EE4(v6, v7);
  return sub_1AD3287F8;
}

void sub_1AD3287F8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[5];
  v9 = v4[6];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD285EE4(v7, v3);
    swift_release();
    sub_1AD009794(v8, v9);
    v4[3] = v6;
    v4[4] = v5;
    v4[5] = v7;
    v4[6] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD009794(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD009794(v8, v9);
    v4[3] = v6;
    v4[4] = v5;
    v4[5] = v7;
    v4[6] = v3;
  }
  free(v2);
}

uint64_t sub_1AD3288B8@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = v1[7];
  v3 = v1[8];
  v4 = v1[9];
  v5 = v1[10];
  v6 = v1[11];
  v7 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1AD2861AC(v2, v3, v4, v5, v6, v7);
}

__n128 sub_1AD3288D4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  sub_1AD286040(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
  *(_OWORD *)(v1 + 56) = v6;
  result = v5;
  *(__n128 *)(v1 + 72) = v5;
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v3;
  return result;
}

uint64_t (*sub_1AD328930())()
{
  return nullsub_1;
}

uint64_t sub_1AD328940@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 128);
  if (v2 >> 60 == 15)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 120);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD0040A0(v3, v2);
  }
  return result;
}

uint64_t sub_1AD3289AC(uint64_t a1, uint64_t a2)
{
  return sub_1AD003184(a1, a2);
}

uint64_t (*sub_1AD3289CC(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 128);
  if (v2 >> 60 == 15)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 120);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD0040A0(v4, v2);
    return sub_1AD328A58;
  }
  return result;
}

uint64_t sub_1AD328A58(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003184(*a1, v3);
  sub_1AD0040A0(*a1, v3);
  sub_1AD003184(v2, v3);
  return sub_1AD00412C(v2, v3);
}

uint64_t sub_1AD328AC4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[15];
  v8 = a2[16];
  swift_retain();
  sub_1AD00408C(v5, v6);
  swift_release();
  result = sub_1AD004118(v7, v8);
  a2[13] = v4;
  a2[14] = v3;
  a2[15] = v5;
  a2[16] = v6;
  return result;
}

void (*sub_1AD328B38(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[13];
  v4 = v1[14];
  v6 = v1[15];
  v7 = v1[16];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD00408C(v6, v7);
  return sub_1AD328B9C;
}

void sub_1AD328B9C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[15];
  v9 = v4[16];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD00408C(v7, v3);
    swift_release();
    sub_1AD004118(v8, v9);
    v4[13] = v6;
    v4[14] = v5;
    v4[15] = v7;
    v4[16] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD004118(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD004118(v8, v9);
    v4[13] = v6;
    v4[14] = v5;
    v4[15] = v7;
    v4[16] = v3;
  }
  free(v2);
}

uint64_t sub_1AD328C5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 160);
  if (v2 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 152);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD00408C(v3, v2);
  }
  return result;
}

uint64_t sub_1AD328CC8(uint64_t a1, uint64_t a2)
{
  return sub_1AD003258(a1, a2);
}

uint64_t (*sub_1AD328CE8(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 160);
  if (v2 >> 60 == 11)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 152);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD00408C(v4, v2);
    return sub_1AD328D74;
  }
  return result;
}

uint64_t sub_1AD328D74(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003258(*a1, v3);
  sub_1AD00408C(*a1, v3);
  sub_1AD003258(v2, v3);
  return sub_1AD004118(v2, v3);
}

uint64_t sub_1AD328DE0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[19];
  v8 = a2[20];
  swift_retain();
  sub_1AD285EE4(v5, v6);
  swift_release();
  result = sub_1AD009794(v7, v8);
  a2[17] = v4;
  a2[18] = v3;
  a2[19] = v5;
  a2[20] = v6;
  return result;
}

void (*sub_1AD328E54(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[17];
  v4 = v1[18];
  v6 = v1[19];
  v7 = v1[20];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD285EE4(v6, v7);
  return sub_1AD328EB8;
}

void sub_1AD328EB8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[19];
  v9 = v4[20];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD285EE4(v7, v3);
    swift_release();
    sub_1AD009794(v8, v9);
    v4[17] = v6;
    v4[18] = v5;
    v4[19] = v7;
    v4[20] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD009794(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD009794(v8, v9);
    v4[17] = v6;
    v4[18] = v5;
    v4[19] = v7;
    v4[20] = v3;
  }
  free(v2);
}

uint64_t sub_1AD328F78@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v2 = v1[21];
  v3 = v1[22];
  v4 = v1[23];
  v5 = v1[24];
  v6 = v1[25];
  v7 = v1[26];
  v8 = v1[27];
  v9 = v1[28];
  v10 = v1[29];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_1AD2861E4(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

__n128 sub_1AD328FC0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v7 = *a1;
  v5 = a1[2];
  v6 = a1[1];
  v4 = (__n128)a1[3];
  v2 = *((_QWORD *)a1 + 8);
  sub_1AD286078(*(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
  *(_OWORD *)(v1 + 168) = v7;
  *(_OWORD *)(v1 + 184) = v6;
  *(_OWORD *)(v1 + 200) = v5;
  result = v4;
  *(__n128 *)(v1 + 216) = v4;
  *(_QWORD *)(v1 + 232) = v2;
  return result;
}

uint64_t (*sub_1AD329040())()
{
  return nullsub_1;
}

uint64_t sub_1AD329050@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 240);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD32905C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 240) = v2;
  return result;
}

uint64_t (*sub_1AD329084())()
{
  return nullsub_1;
}

_QWORD *sub_1AD329094@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v2 = v1[13];
  v3 = v1[11];
  v34 = v1[12];
  v35 = v2;
  v4 = v1[13];
  v36 = v1[14];
  v5 = v1[9];
  v7 = v1[7];
  v30 = v1[8];
  v6 = v30;
  v31 = v5;
  v8 = v1[9];
  v9 = v1[11];
  v32 = v1[10];
  v10 = v32;
  v33 = v9;
  v11 = v1[5];
  v13 = v1[3];
  v26 = v1[4];
  v12 = v26;
  v27 = v11;
  v14 = v1[5];
  v15 = v1[7];
  v28 = v1[6];
  v16 = v28;
  v29 = v15;
  v17 = v1[1];
  v23[0] = *v1;
  v23[1] = v17;
  v18 = v1[3];
  v20 = *v1;
  v19 = v1[1];
  v24 = v1[2];
  v21 = v24;
  v25 = v18;
  *(_OWORD *)(a1 + 192) = v34;
  *(_OWORD *)(a1 + 208) = v4;
  *(_OWORD *)(a1 + 224) = v1[14];
  *(_OWORD *)(a1 + 128) = v6;
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 160) = v10;
  *(_OWORD *)(a1 + 176) = v3;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = v16;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)a1 = v20;
  *(_OWORD *)(a1 + 16) = v19;
  v37 = *((_QWORD *)v1 + 30);
  *(_QWORD *)(a1 + 240) = *((_QWORD *)v1 + 30);
  *(_OWORD *)(a1 + 32) = v21;
  *(_OWORD *)(a1 + 48) = v13;
  return sub_1AD28624C(v23);
}

__n128 sub_1AD32914C(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __n128 result;
  __int128 v17;
  _OWORD v18[15];
  uint64_t v19;

  v3 = *(_OWORD *)(v1 + 208);
  v18[12] = *(_OWORD *)(v1 + 192);
  v18[13] = v3;
  v18[14] = *(_OWORD *)(v1 + 224);
  v19 = *(_QWORD *)(v1 + 240);
  v4 = *(_OWORD *)(v1 + 144);
  v18[8] = *(_OWORD *)(v1 + 128);
  v18[9] = v4;
  v5 = *(_OWORD *)(v1 + 176);
  v18[10] = *(_OWORD *)(v1 + 160);
  v18[11] = v5;
  v6 = *(_OWORD *)(v1 + 80);
  v18[4] = *(_OWORD *)(v1 + 64);
  v18[5] = v6;
  v7 = *(_OWORD *)(v1 + 112);
  v18[6] = *(_OWORD *)(v1 + 96);
  v18[7] = v7;
  v8 = *(_OWORD *)(v1 + 16);
  v18[0] = *(_OWORD *)v1;
  v18[1] = v8;
  v9 = *(_OWORD *)(v1 + 48);
  v18[2] = *(_OWORD *)(v1 + 32);
  v18[3] = v9;
  sub_1AD285EF8(v18);
  v10 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)(v1 + 192) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v1 + 208) = v10;
  *(_OWORD *)(v1 + 224) = *(_OWORD *)(a1 + 224);
  *(_QWORD *)(v1 + 240) = *(_QWORD *)(a1 + 240);
  v11 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 144) = v11;
  v12 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v1 + 160) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v1 + 176) = v12;
  v13 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 80) = v13;
  v14 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 112) = v14;
  v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v15;
  result = *(__n128 *)(a1 + 32);
  v17 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(v1 + 32) = result;
  *(_OWORD *)(v1 + 48) = v17;
  return result;
}

uint64_t (*sub_1AD329208())()
{
  return nullsub_1;
}

uint64_t sub_1AD329218@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 272);
  if (v2 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 264);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD00408C(v3, v2);
  }
  return result;
}

uint64_t sub_1AD329284(uint64_t a1, uint64_t a2)
{
  return sub_1AD003258(a1, a2);
}

uint64_t (*sub_1AD3292A4(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 272);
  if (v2 >> 60 == 11)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 264);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD00408C(v4, v2);
    return sub_1AD329330;
  }
  return result;
}

uint64_t sub_1AD329330(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003258(*a1, v3);
  sub_1AD00408C(*a1, v3);
  sub_1AD003258(v2, v3);
  return sub_1AD004118(v2, v3);
}

uint64_t sub_1AD32939C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[33];
  v8 = a2[34];
  swift_retain();
  sub_1AD285EE4(v5, v6);
  swift_release();
  result = sub_1AD009794(v7, v8);
  a2[31] = v4;
  a2[32] = v3;
  a2[33] = v5;
  a2[34] = v6;
  return result;
}

void (*sub_1AD329410(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[31];
  v4 = v1[32];
  v6 = v1[33];
  v7 = v1[34];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD285EE4(v6, v7);
  return sub_1AD329474;
}

void sub_1AD329474(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[33];
  v9 = v4[34];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD285EE4(v7, v3);
    swift_release();
    sub_1AD009794(v8, v9);
    v4[31] = v6;
    v4[32] = v5;
    v4[33] = v7;
    v4[34] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD009794(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD009794(v8, v9);
    v4[31] = v6;
    v4[32] = v5;
    v4[33] = v7;
    v4[34] = v3;
  }
  free(v2);
}

uint64_t sub_1AD329534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + *(int *)(type metadata accessor for CloudKitSharingToken() + 24);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(v7 + *(int *)(v8 + 28), (uint64_t)v6, &qword_1ED2E1A40);
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v6, v9);
  sub_1AD009758((uint64_t)v6, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD329660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_1AD63AF28();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  type metadata accessor for CloudKitSharingToken();
  sub_1AD003344((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1AD32973C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t (**v8)(char *);
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;

  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, a1, v3);
  v8 = (uint64_t (**)(char *))(v1 + *(int *)(type metadata accessor for CloudKitSharingToken() + 24));
  if (((*v8)(v6) & 1) != 0)
  {
    v9 = (uint64_t)v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    sub_1AD009758(v9, &qword_1ED2E1A40);
    v7((char *)v9, (uint64_t)v6, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    v10 = *(void (**)(char *, uint64_t))(v4 + 8);
    v10(v6, v3);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v3);
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v12 = 0x6E776F6E6B6E753CLL;
    v12[1] = 0xE90000000000003ELL;
    v12[2] = 0xD00000000000001CLL;
    v12[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*sub_1AD3298CC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*result)(uint64_t *, char);

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_1AD63AF28();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for CloudKitSharingToken() + 24);
  *((_DWORD *)v3 + 12) = v10;
  v11 = v1 + v10;
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  *((_DWORD *)v3 + 13) = v12;
  sub_1ACFF64C0(v11 + v12, (uint64_t)v5, &qword_1ED2E1A40);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
    result = (void (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    return sub_1AD329A38;
  }
  return result;
}

void sub_1AD329A38(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (**v5)(uint64_t);
  void (*v6)(uint64_t, void *, uint64_t);
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void (*v13)(void *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v2 = *a1;
  v3 = *(int *)(*a1 + 48);
  if ((a2 & 1) != 0)
  {
    v4 = *(_QWORD *)(v2 + 32);
    v5 = (uint64_t (**)(uint64_t))(*(_QWORD *)v2 + v3);
    v6 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v2 + 24) + 16);
    v6(v4, *(void **)(*a1 + 40), *(_QWORD *)(v2 + 16));
    if (((*v5)(v4) & 1) != 0)
    {
      v8 = *(void **)(v2 + 32);
      v7 = *(void **)(v2 + 40);
      v9 = *(_QWORD *)(v2 + 16);
      v10 = *(_QWORD *)(v2 + 24);
      v11 = *(void **)(v2 + 8);
      v12 = *(_QWORD *)v2 + *(int *)(v2 + 48) + *(int *)(v2 + 52);
      sub_1AD009758(v12, &qword_1ED2E1A40);
      v6(v12, v8, v9);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
      v13 = *(void (**)(void *, uint64_t))(v10 + 8);
      v13(v8, v9);
      v13(v7, v9);
LABEL_6:
      free(v7);
      free(v8);
      free(v11);
      free((void *)v2);
      return;
    }
  }
  else if (((*(uint64_t (**)(_QWORD))(*(_QWORD *)v2 + v3))(*(_QWORD *)(*a1 + 40)) & 1) != 0)
  {
    v8 = *(void **)(v2 + 32);
    v7 = *(void **)(v2 + 40);
    v14 = *(_QWORD *)(v2 + 16);
    v15 = *(_QWORD *)(v2 + 24);
    v11 = *(void **)(v2 + 8);
    v16 = *(_QWORD *)v2 + *(int *)(v2 + 48) + *(int *)(v2 + 52);
    sub_1AD009758(v16, &qword_1ED2E1A40);
    (*(void (**)(uint64_t, void *, uint64_t))(v15 + 16))(v16, v7, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v16, 0, 1, v14);
    (*(void (**)(void *, uint64_t))(v15 + 8))(v7, v14);
    goto LABEL_6;
  }
  sub_1AD009690();
  swift_allocError();
  *v17 = 0x6E776F6E6B6E753CLL;
  v17[1] = 0xE90000000000003ELL;
  v17[2] = 0xD00000000000001CLL;
  v17[3] = 0x80000001AD69E8C0;
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

uint64_t sub_1AD329C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  sub_1ACFF64C0(a1, (uint64_t)&v12 - v8, (uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1ED2E1A30);
  v10 = type metadata accessor for CloudKitSharingToken();
  sub_1AD326FE8((uint64_t)v7, a2 + *(int *)(v10 + 24));
  return sub_1AD009758((uint64_t)v9, (uint64_t *)&unk_1ED2E1A30);
}

void (*sub_1AD329D08(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v5 = malloc(v4);
  v3[3] = v5;
  v6 = *(int *)(type metadata accessor for CloudKitSharingToken() + 24);
  *((_DWORD *)v3 + 8) = v6;
  sub_1ACFF64C0(v1 + v6, (uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  return sub_1AD329DAC;
}

void sub_1AD329DAC(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  sub_1ACFF64C0(*(_QWORD *)(*(_QWORD *)a1 + 24), *(_QWORD *)(*(_QWORD *)a1 + 16), (uint64_t *)&unk_1ED2E1A30);
  v4 = *((int *)v3 + 8);
  v5 = (void *)v3[2];
  v6 = (void *)v3[3];
  v7 = (void *)v3[1];
  v8 = *v3 + v4;
  if ((a2 & 1) != 0)
  {
    sub_1ACFF64C0(v3[2], v3[1], (uint64_t *)&unk_1ED2E1A30);
    sub_1AD326FE8((uint64_t)v7, v8);
    sub_1AD009758((uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  }
  else
  {
    sub_1AD326FE8(v3[2], *v3 + v4);
  }
  sub_1AD009758((uint64_t)v6, (uint64_t *)&unk_1ED2E1A30);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t sub_1AD329E6C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for CloudKitSharingToken() + 28);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD329EF4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for CloudKitSharingToken();
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD329F40(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CloudKitSharingToken();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD329F84(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for CloudKitSharingToken() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD012C64;
  }
  return result;
}

uint64_t sub_1AD32A024@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for CloudKitSharingToken() + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD32A078(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for CloudKitSharingToken() + 28));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD32A0FC(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for CloudKitSharingToken() + 28);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD012ED0;
}

uint64_t sub_1AD32A174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD285B9C, (uint64_t (*)(void))sub_1AD285BE0);
}

uint64_t sub_1AD32A188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD285AD0, (uint64_t (*)(void))sub_1AD285B14);
}

uint64_t sub_1AD32A19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD285C68, (uint64_t (*)(void))sub_1AD285CF0);
}

uint64_t sub_1AD32A1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD285CAC, (uint64_t (*)(void))sub_1AD285D34);
}

uint64_t sub_1AD32A1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD286124, (uint64_t (*)(void))sub_1AD286394);
}

uint64_t sub_1AD32A1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD286168, (uint64_t (*)(void))sub_1AD2863D8);
}

uint64_t sub_1AD32A1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD286460, (uint64_t (*)(void))sub_1AD2864A4);
}

uint64_t sub_1AD32A200(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD32A24C(&qword_1EECD29D0, (uint64_t)&unk_1AD64FE68);
  result = sub_1AD32A24C(&qword_1EECD2A10, (uint64_t)&unk_1AD64FE90);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD32A24C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CloudKitSharingToken();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD32A290(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD0040A0(*a1, v2);
  return sub_1AD003184(v1, v2);
}

uint64_t sub_1AD32A2D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  *a2 = a1[1];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD00408C(v3, v4);
}

uint64_t sub_1AD32A310(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD0040A0(*a1, v2);
  return sub_1AD003184(v1, v2);
}

uint64_t sub_1AD32A350@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  *a2 = a1[2];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD00408C(v3, v4);
}

uint64_t sub_1AD32A390(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD0040A0(*a1, v2);
  return sub_1AD003184(v1, v2);
}

uint64_t sub_1AD32A3D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[7];
  v3 = a1[8];
  v4 = a1[9];
  *a2 = a1[6];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD00408C(v3, v4);
}

uint64_t sub_1AD32A410(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD0040A0(*a1, v2);
  return sub_1AD003184(v1, v2);
}

uint64_t sub_1AD32A450@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD00408C(v3, v4);
}

uint64_t sub_1AD32A490(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD0040A0(*a1, v2);
  return sub_1AD003184(v1, v2);
}

uint64_t sub_1AD32A4D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  *a2 = a1[5];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD00408C(v3, v4);
}

uint64_t sub_1AD32A510(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD00408C(*a1, v2);
  return sub_1AD003258(v1, v2);
}

uint64_t sub_1AD32A550@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[6];
  *a2 = a1[3];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD285EE4(v3, v4);
}

uint64_t sub_1AD32A590(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD0040A0(*a1, v2);
  return sub_1AD003184(v1, v2);
}

uint64_t sub_1AD32A5D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[14];
  v3 = a1[15];
  v4 = a1[16];
  *a2 = a1[13];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD00408C(v3, v4);
}

uint64_t sub_1AD32A610(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD00408C(*a1, v2);
  return sub_1AD003258(v1, v2);
}

uint64_t sub_1AD32A650@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[18];
  v3 = a1[19];
  v4 = a1[20];
  *a2 = a1[17];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD285EE4(v3, v4);
}

uint64_t sub_1AD32A690(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD00408C(*a1, v2);
  return sub_1AD003258(v1, v2);
}

uint64_t sub_1AD32A6D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[32];
  v3 = a1[33];
  v4 = a1[34];
  *a2 = a1[31];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD285EE4(v3, v4);
}

uint64_t sub_1AD32A714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for CloudKitSharingToken();
  return sub_1ACFF64C0(a1 + *(int *)(v4 + 24), a2, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t destroy for CloudStorageValue(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_release();
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >> 60 != 15)
    return sub_1AD00412C(*(_QWORD *)(a1 + 24), v3);
  return result;
}

uint64_t initializeWithCopy for CloudStorageValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  uint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = (_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  swift_retain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v4;
  }
  else
  {
    v6 = *(_QWORD *)v4;
    sub_1AD0040A0(v6, v5);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t assignWithCopy for CloudStorageValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  v5 = (uint64_t *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      v8 = *v5;
      sub_1AD0040A0(*v5, v6);
      v9 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v6;
      sub_1AD00412C(v9, v10);
      return a1;
    }
    sub_1AD007EC0(a1 + 24);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
    return a1;
  }
  v7 = *v5;
  sub_1AD0040A0(*v5, v6);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithTake for CloudStorageValue(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = (_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  if (v5 >> 60 != 15)
  {
    v6 = *(_QWORD *)(a2 + 32);
    if (v6 >> 60 != 15)
    {
      v7 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v4;
      *(_QWORD *)(a1 + 32) = v6;
      sub_1AD00412C(v7, v5);
      return a1;
    }
    sub_1AD007EC0(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudStorageValue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudStorageValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudStorageValue()
{
  return &type metadata for CloudStorageValue;
}

uint64_t destroy for CloudStorageSPKey(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_release();
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >> 60 != 15)
    return sub_1AD00412C(*(_QWORD *)(a1 + 32), v3);
  return result;
}

uint64_t initializeWithCopy for CloudStorageSPKey(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v3;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  swift_retain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_1AD0040A0(v7, v6);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for CloudStorageSPKey(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  v6 = (uint64_t *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_1AD0040A0(*v6, v7);
      v10 = *(_QWORD *)(a1 + 32);
      v11 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v7;
      sub_1AD00412C(v10, v11);
      return a1;
    }
    sub_1AD007EC0(a1 + 32);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    return a1;
  }
  v8 = *v6;
  sub_1AD0040A0(*v6, v7);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  return a1;
}

uint64_t assignWithTake for CloudStorageSPKey(uint64_t a1, uint64_t a2)
{
  int v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v4;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v5 = (_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 40);
    if (v7 >> 60 != 15)
    {
      v8 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *v5;
      *(_QWORD *)(a1 + 40) = v7;
      sub_1AD00412C(v8, v6);
      return a1;
    }
    sub_1AD007EC0(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudStorageSPKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudStorageSPKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudStorageSPKey()
{
  return &type metadata for CloudStorageSPKey;
}

uint64_t destroy for CloudStorageShareEntry(uint64_t *a1)
{
  unint64_t v2;
  uint64_t result;
  unint64_t v4;

  swift_release();
  v2 = a1[5];
  if (v2 >> 60 != 15)
    sub_1AD00412C(a1[4], v2);
  result = swift_release();
  v4 = a1[9];
  if (v4 >> 60 != 15)
    return sub_1AD00412C(a1[8], v4);
  return result;
}

uint64_t initializeWithCopy for CloudStorageShareEntry(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  _OWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  uint64_t v12;

  v4 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v4;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = (_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  swift_retain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  else
  {
    v8 = *(_QWORD *)v6;
    sub_1AD0040A0(v8, v7);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v7;
  }
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = (_OWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  swift_retain();
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 64) = *v10;
  }
  else
  {
    v12 = *(_QWORD *)v10;
    sub_1AD0040A0(v12, v11);
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v11;
  }
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  return a1;
}

uint64_t assignWithCopy for CloudStorageShareEntry(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  v6 = (uint64_t *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      v8 = *v6;
      sub_1AD0040A0(*v6, *(_QWORD *)(a2 + 40));
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 32);
LABEL_6:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v9 = *v6;
  sub_1AD0040A0(*v6, *(_QWORD *)(a2 + 40));
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v7;
  sub_1AD00412C(v10, v11);
LABEL_8:
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v12;
  swift_retain();
  swift_release();
  v13 = (uint64_t *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      v16 = *v13;
      sub_1AD0040A0(*v13, *(_QWORD *)(a2 + 72));
      v17 = *(_QWORD *)(a1 + 64);
      v18 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = v16;
      *(_QWORD *)(a1 + 72) = v14;
      sub_1AD00412C(v17, v18);
      goto LABEL_15;
    }
    sub_1AD007EC0(a1 + 64);
    goto LABEL_13;
  }
  if (v14 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v13;
    goto LABEL_15;
  }
  v15 = *v13;
  sub_1AD0040A0(*v13, *(_QWORD *)(a2 + 72));
  *(_QWORD *)(a1 + 64) = v15;
  *(_QWORD *)(a1 + 72) = v14;
LABEL_15:
  v19 = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v19;
  return a1;
}

__n128 __swift_memcpy85_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CloudStorageShareEntry(uint64_t a1, uint64_t a2)
{
  int v4;
  _OWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v4;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (v6 >> 60 == 15)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 40);
  if (v7 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *v5;
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)v5;
  *(_QWORD *)(a1 + 40) = v7;
  sub_1AD00412C(v8, v6);
LABEL_6:
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  v9 = (_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  if (v10 >> 60 != 15)
  {
    v11 = *(_QWORD *)(a2 + 72);
    if (v11 >> 60 != 15)
    {
      v12 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 64) = *v9;
      *(_QWORD *)(a1 + 72) = v11;
      sub_1AD00412C(v12, v10);
      goto LABEL_11;
    }
    sub_1AD007EC0(a1 + 64);
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)v9;
LABEL_11:
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudStorageShareEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 85))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudStorageShareEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 84) = 0;
    *(_DWORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 85) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 85) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudStorageShareEntry()
{
  return &type metadata for CloudStorageShareEntry;
}

ValueMetadata *type metadata accessor for CloudStorageAttributes()
{
  return &type metadata for CloudStorageAttributes;
}

uint64_t destroy for CloudStorageSignedShareProtection()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s9BlastDoor33CloudStorageSignedShareProtectionVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CloudStorageSignedShareProtection(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CloudStorageSignedShareProtection(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CloudStorageSignedShareProtection()
{
  return &type metadata for CloudStorageSignedShareProtection;
}

uint64_t destroy for CloudStorageSignature(uint64_t *a1)
{
  unint64_t v2;
  uint64_t result;
  unint64_t v4;

  swift_release();
  v2 = a1[3];
  if (v2 >> 60 != 15)
    sub_1AD00412C(a1[2], v2);
  result = swift_release();
  v4 = a1[8];
  if (v4 >> 60 != 15)
    return sub_1AD00412C(a1[7], v4);
  return result;
}

uint64_t initializeWithCopy for CloudStorageSignature(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  swift_retain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_1AD0040A0(v7, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
  }
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  v9 = (_OWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  swift_retain();
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 56) = *v9;
  }
  else
  {
    v11 = *(_QWORD *)v9;
    sub_1AD0040A0(v11, v10);
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for CloudStorageSignature(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = (uint64_t *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      v7 = *v5;
      sub_1AD0040A0(*v5, *(_QWORD *)(a2 + 24));
      *(_QWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 24) = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 16);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    goto LABEL_8;
  }
  v8 = *v5;
  sub_1AD0040A0(*v5, *(_QWORD *)(a2 + 24));
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v6;
  sub_1AD00412C(v9, v10);
LABEL_8:
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_retain();
  swift_release();
  v12 = (uint64_t *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      v15 = *v12;
      sub_1AD0040A0(*v12, v13);
      v16 = *(_QWORD *)(a1 + 56);
      v17 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 56) = v15;
      *(_QWORD *)(a1 + 64) = v13;
      sub_1AD00412C(v16, v17);
      return a1;
    }
    sub_1AD007EC0(a1 + 56);
    goto LABEL_13;
  }
  if (v13 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v12;
    return a1;
  }
  v14 = *v12;
  sub_1AD0040A0(*v12, v13);
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = v13;
  return a1;
}

uint64_t assignWithTake for CloudStorageSignature(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (v5 >> 60 == 15)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 24);
  if (v6 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v4;
    goto LABEL_6;
  }
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v4;
  *(_QWORD *)(a1 + 24) = v6;
  sub_1AD00412C(v7, v5);
LABEL_6:
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v8 = (_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  if (v9 >> 60 != 15)
  {
    v10 = *(_QWORD *)(a2 + 64);
    if (v10 >> 60 != 15)
    {
      v11 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 56) = *v8;
      *(_QWORD *)(a1 + 64) = v10;
      sub_1AD00412C(v11, v9);
      return a1;
    }
    sub_1AD007EC0(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)v8;
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudStorageSignature(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudStorageSignature(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudStorageSignature()
{
  return &type metadata for CloudStorageSignature;
}

uint64_t destroy for CloudStorageShareProtection(uint64_t *a1)
{
  unint64_t v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v2 = a1[6];
  if (v2 >> 60 != 15 && (v2 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(a1[5], v2);
  if (a1[9])
  {
    swift_release();
    v4 = a1[12];
    if (v4 >> 60 != 15)
      sub_1AD00412C(a1[11], v4);
  }
  swift_release();
  v5 = a1[16];
  if (v5 >> 60 != 15)
    sub_1AD00412C(a1[15], v5);
  swift_release();
  v6 = a1[20];
  if (v6 >> 60 != 15 && (v6 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(a1[19], v6);
  if (a1[21])
  {
    swift_release();
    v7 = a1[24];
    if (v7 >> 60 != 15)
      sub_1AD00412C(a1[23], v7);
    swift_release();
    v8 = a1[29];
    if (v8 >> 60 != 15)
      sub_1AD00412C(a1[28], v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CloudStorageShareProtection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _OWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  unint64_t v32;
  uint64_t v33;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = (uint64_t *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6 >> 60 == 11 || v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
    v7 = *(_QWORD *)(a2 + 72);
    if (v7)
      goto LABEL_4;
  }
  else
  {
    v13 = *v5;
    sub_1AD0040A0(*v5, v6);
    *(_QWORD *)(a1 + 40) = v13;
    *(_QWORD *)(a1 + 48) = v6;
    v7 = *(_QWORD *)(a2 + 72);
    if (v7)
    {
LABEL_4:
      v8 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 60) = v8;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      v9 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v7;
      *(_QWORD *)(a1 + 80) = v9;
      v10 = (_OWORD *)(a2 + 88);
      v11 = *(_QWORD *)(a2 + 96);
      swift_retain();
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 88) = *v10;
      }
      else
      {
        v12 = *(_QWORD *)v10;
        sub_1AD0040A0(v12, v11);
        *(_QWORD *)(a1 + 88) = v12;
        *(_QWORD *)(a1 + 96) = v11;
      }
      goto LABEL_9;
    }
  }
  v14 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v14;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_9:
  v15 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v15;
  v16 = (_OWORD *)(a2 + 120);
  v17 = *(_QWORD *)(a2 + 128);
  swift_retain();
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 120) = *v16;
  }
  else
  {
    v18 = *(_QWORD *)v16;
    sub_1AD0040A0(v18, v17);
    *(_QWORD *)(a1 + 120) = v18;
    *(_QWORD *)(a1 + 128) = v17;
  }
  v19 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v19;
  v20 = (uint64_t *)(a2 + 152);
  v21 = *(_QWORD *)(a2 + 160);
  swift_retain();
  if (v21 >> 60 == 11 || v21 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)v20;
  }
  else
  {
    v22 = *v20;
    sub_1AD0040A0(*v20, v21);
    *(_QWORD *)(a1 + 152) = v22;
    *(_QWORD *)(a1 + 160) = v21;
  }
  v23 = *(_QWORD *)(a2 + 168);
  if (v23)
  {
    v24 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v23;
    *(_QWORD *)(a1 + 176) = v24;
    v25 = (_OWORD *)(a2 + 184);
    v26 = *(_QWORD *)(a2 + 192);
    swift_retain();
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 184) = *v25;
    }
    else
    {
      v29 = *(_QWORD *)v25;
      sub_1AD0040A0(v29, v26);
      *(_QWORD *)(a1 + 184) = v29;
      *(_QWORD *)(a1 + 192) = v26;
    }
    *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
    v30 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v30;
    v31 = (_OWORD *)(a2 + 224);
    v32 = *(_QWORD *)(a2 + 232);
    swift_retain();
    if (v32 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 224) = *v31;
    }
    else
    {
      v33 = *(_QWORD *)v31;
      sub_1AD0040A0(v33, v32);
      *(_QWORD *)(a1 + 224) = v33;
      *(_QWORD *)(a1 + 232) = v32;
    }
  }
  else
  {
    v27 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v27;
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    v28 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v28;
  }
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CloudStorageShareProtection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  v5 = (uint64_t *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = v6 & 0xF000000000000000;
  if (*(_QWORD *)(a1 + 48) >> 60 == 11)
  {
    if (v7 == 0xB000000000000000 || v6 >> 60 == 15)
      goto LABEL_12;
LABEL_9:
    v8 = *v5;
    sub_1AD0040A0(*v5, *(_QWORD *)(a2 + 48));
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v6;
    goto LABEL_13;
  }
  if (v7 == 0xB000000000000000)
  {
    sub_1AD009758(a1 + 40, &qword_1ED2E3250);
    goto LABEL_12;
  }
  if (*(_QWORD *)(a1 + 48) >> 60 == 15)
  {
    if (v6 >> 60 != 15)
      goto LABEL_9;
LABEL_12:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
    goto LABEL_13;
  }
  if (v6 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 40);
    goto LABEL_12;
  }
  v69 = *v5;
  sub_1AD0040A0(*v5, *(_QWORD *)(a2 + 48));
  v70 = *(_QWORD *)(a1 + 40);
  v71 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v69;
  *(_QWORD *)(a1 + 48) = v6;
  sub_1AD00412C(v70, v71);
LABEL_13:
  v9 = (__int128 *)(a1 + 56);
  v10 = (__int128 *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (!v11)
    {
      v22 = *v10;
      v23 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v23;
      *v9 = v22;
      goto LABEL_29;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    v17 = *(_DWORD *)(a2 + 60);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_DWORD *)(a1 + 60) = v17;
    v18 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v18;
    v19 = (_OWORD *)(a2 + 88);
    v15 = *(_QWORD *)(a2 + 96);
    swift_retain();
    if (v15 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 88) = *v19;
      goto LABEL_29;
    }
    v16 = *(_QWORD *)v19;
    goto LABEL_27;
  }
  if (!v11)
  {
    sub_1AD0AEC58(a1 + 56);
    v21 = *(_OWORD *)(a2 + 72);
    v20 = *(_OWORD *)(a2 + 88);
    *v9 = *v10;
    *(_OWORD *)(a1 + 72) = v21;
    *(_OWORD *)(a1 + 88) = v20;
    goto LABEL_29;
  }
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  v12 = *(_DWORD *)(a2 + 60);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v12;
  v13 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v13;
  swift_retain();
  swift_release();
  v14 = (uint64_t *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) >> 60 == 15)
  {
    if (v15 >> 60 != 15)
    {
      v16 = *v14;
LABEL_27:
      sub_1AD0040A0(v16, v15);
      *(_QWORD *)(a1 + 88) = v16;
      *(_QWORD *)(a1 + 96) = v15;
      goto LABEL_29;
    }
LABEL_24:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v14;
    goto LABEL_29;
  }
  if (v15 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 88);
    goto LABEL_24;
  }
  v24 = *v14;
  sub_1AD0040A0(*v14, *(_QWORD *)(a2 + 96));
  v25 = *(_QWORD *)(a1 + 88);
  v26 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v24;
  *(_QWORD *)(a1 + 96) = v15;
  sub_1AD00412C(v25, v26);
LABEL_29:
  v27 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v27;
  swift_retain();
  swift_release();
  v28 = (uint64_t *)(a2 + 120);
  v29 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128) >> 60 == 15)
  {
    if (v29 >> 60 != 15)
    {
      v30 = *v28;
      sub_1AD0040A0(*v28, *(_QWORD *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v30;
      *(_QWORD *)(a1 + 128) = v29;
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  if (v29 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 120);
LABEL_34:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v28;
    goto LABEL_36;
  }
  v31 = *v28;
  sub_1AD0040A0(*v28, *(_QWORD *)(a2 + 128));
  v32 = *(_QWORD *)(a1 + 120);
  v33 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = v31;
  *(_QWORD *)(a1 + 128) = v29;
  sub_1AD00412C(v32, v33);
LABEL_36:
  v34 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v34;
  swift_retain();
  swift_release();
  v35 = (uint64_t *)(a2 + 152);
  v36 = *(_QWORD *)(a2 + 160);
  v37 = v36 & 0xF000000000000000;
  if (*(_QWORD *)(a1 + 160) >> 60 == 11)
  {
    if (v37 == 0xB000000000000000)
      goto LABEL_46;
LABEL_42:
    if (v36 >> 60 != 15)
    {
      v38 = *v35;
      sub_1AD0040A0(*v35, *(_QWORD *)(a2 + 160));
      *(_QWORD *)(a1 + 152) = v38;
      *(_QWORD *)(a1 + 160) = v36;
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v37 == 0xB000000000000000)
  {
    sub_1AD009758(a1 + 152, &qword_1ED2E3250);
LABEL_46:
    *(_OWORD *)(a1 + 152) = *(_OWORD *)v35;
    goto LABEL_47;
  }
  if (*(_QWORD *)(a1 + 160) >> 60 == 15)
    goto LABEL_42;
  if (v36 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 152);
    goto LABEL_46;
  }
  v72 = *v35;
  sub_1AD0040A0(*v35, *(_QWORD *)(a2 + 160));
  v73 = *(_QWORD *)(a1 + 152);
  v74 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = v72;
  *(_QWORD *)(a1 + 160) = v36;
  sub_1AD00412C(v73, v74);
LABEL_47:
  v39 = (_OWORD *)(a1 + 168);
  v41 = (_OWORD *)(a2 + 168);
  v40 = *(_QWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 168))
  {
    if (v40)
    {
      v42 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = v40;
      *(_QWORD *)(a1 + 176) = v42;
      swift_retain();
      swift_release();
      v43 = (uint64_t *)(a2 + 184);
      v44 = *(_QWORD *)(a2 + 192);
      if (*(_QWORD *)(a1 + 192) >> 60 == 15)
      {
        if (v44 >> 60 != 15)
        {
          v45 = *v43;
          sub_1AD0040A0(*v43, *(_QWORD *)(a2 + 192));
          *(_QWORD *)(a1 + 184) = v45;
          *(_QWORD *)(a1 + 192) = v44;
          goto LABEL_65;
        }
      }
      else
      {
        if (v44 >> 60 != 15)
        {
          v60 = *v43;
          sub_1AD0040A0(*v43, *(_QWORD *)(a2 + 192));
          v61 = *(_QWORD *)(a1 + 184);
          v62 = *(_QWORD *)(a1 + 192);
          *(_QWORD *)(a1 + 184) = v60;
          *(_QWORD *)(a1 + 192) = v44;
          sub_1AD00412C(v61, v62);
LABEL_65:
          *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
          v63 = *(_QWORD *)(a2 + 216);
          *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
          *(_QWORD *)(a1 + 216) = v63;
          swift_retain();
          swift_release();
          v64 = (uint64_t *)(a2 + 224);
          v58 = *(_QWORD *)(a2 + 232);
          if (*(_QWORD *)(a1 + 232) >> 60 == 15)
          {
            if (v58 >> 60 != 15)
            {
              v59 = *v64;
              goto LABEL_68;
            }
          }
          else
          {
            if (v58 >> 60 != 15)
            {
              v65 = *v64;
              sub_1AD0040A0(*v64, *(_QWORD *)(a2 + 232));
              v66 = *(_QWORD *)(a1 + 224);
              v67 = *(_QWORD *)(a1 + 232);
              *(_QWORD *)(a1 + 224) = v65;
              *(_QWORD *)(a1 + 232) = v58;
              sub_1AD00412C(v66, v67);
              goto LABEL_73;
            }
            sub_1AD007EC0(a1 + 224);
          }
          *(_OWORD *)(a1 + 224) = *(_OWORD *)v64;
          goto LABEL_73;
        }
        sub_1AD007EC0(a1 + 184);
      }
      *(_OWORD *)(a1 + 184) = *(_OWORD *)v43;
      goto LABEL_65;
    }
    sub_1AD0AEC8C((uint64_t *)(a1 + 168));
    *v39 = *v41;
    v50 = *(_OWORD *)(a2 + 200);
    v49 = *(_OWORD *)(a2 + 216);
    v51 = *(_OWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 200) = v50;
    *(_OWORD *)(a1 + 216) = v49;
    *(_OWORD *)(a1 + 184) = v51;
  }
  else if (v40)
  {
    v46 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v40;
    *(_QWORD *)(a1 + 176) = v46;
    v47 = (_OWORD *)(a2 + 184);
    v48 = *(_QWORD *)(a2 + 192);
    swift_retain();
    if (v48 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 184) = *v47;
    }
    else
    {
      v55 = *(_QWORD *)v47;
      sub_1AD0040A0(v55, v48);
      *(_QWORD *)(a1 + 184) = v55;
      *(_QWORD *)(a1 + 192) = v48;
    }
    *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
    v56 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v56;
    v57 = (uint64_t *)(a2 + 224);
    v58 = *(_QWORD *)(a2 + 232);
    swift_retain();
    if (v58 >> 60 != 15)
    {
      v59 = *v57;
LABEL_68:
      sub_1AD0040A0(v59, v58);
      *(_QWORD *)(a1 + 224) = v59;
      *(_QWORD *)(a1 + 232) = v58;
      goto LABEL_73;
    }
    *(_OWORD *)(a1 + 224) = *(_OWORD *)v57;
  }
  else
  {
    *v39 = *v41;
    v52 = *(_OWORD *)(a2 + 184);
    v53 = *(_OWORD *)(a2 + 200);
    v54 = *(_OWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 200) = v53;
    *(_OWORD *)(a1 + 216) = v54;
    *(_OWORD *)(a1 + 184) = v52;
  }
LABEL_73:
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CloudStorageShareProtection(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  _OWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v4 = (_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  if (v5 >> 60 == 11)
    goto LABEL_7;
  v6 = *(_QWORD *)(a2 + 48);
  if (v6 >> 60 == 11)
  {
    sub_1AD009758(a1 + 40, &qword_1ED2E3250);
LABEL_7:
    *(_OWORD *)(a1 + 40) = *v4;
    goto LABEL_8;
  }
  if (v5 >> 60 == 15)
    goto LABEL_7;
  if (v6 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 40);
    goto LABEL_7;
  }
  v35 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)v4;
  *(_QWORD *)(a1 + 48) = v6;
  sub_1AD00412C(v35, v5);
LABEL_8:
  if (!*(_QWORD *)(a1 + 72))
  {
LABEL_15:
    v13 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v13;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_16;
  }
  v7 = *(_QWORD *)(a2 + 72);
  if (!v7)
  {
    sub_1AD0AEC58(a1 + 56);
    goto LABEL_15;
  }
  v8 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = v8;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v9;
  swift_release();
  v10 = (_OWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 96);
  if (v11 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 88) = *v10;
    goto LABEL_16;
  }
  v12 = *(_QWORD *)(a2 + 96);
  if (v12 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 88);
    goto LABEL_13;
  }
  v28 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)v10;
  *(_QWORD *)(a1 + 96) = v12;
  sub_1AD00412C(v28, v11);
LABEL_16:
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  v14 = (_OWORD *)(a2 + 120);
  v15 = *(_QWORD *)(a1 + 128);
  if (v15 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)(a1 + 120) = *v14;
    goto LABEL_21;
  }
  v16 = *(_QWORD *)(a2 + 128);
  if (v16 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 120);
    goto LABEL_19;
  }
  v17 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)v14;
  *(_QWORD *)(a1 + 128) = v16;
  sub_1AD00412C(v17, v15);
LABEL_21:
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_release();
  v18 = (_OWORD *)(a2 + 152);
  v19 = *(_QWORD *)(a1 + 160);
  if (v19 >> 60 == 11)
  {
LABEL_27:
    *(_OWORD *)(a1 + 152) = *v18;
    goto LABEL_28;
  }
  v20 = *(_QWORD *)(a2 + 160);
  if (v20 >> 60 == 11)
  {
    sub_1AD009758(a1 + 152, &qword_1ED2E3250);
    goto LABEL_27;
  }
  if (v19 >> 60 == 15)
    goto LABEL_27;
  if (v20 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 152);
    goto LABEL_27;
  }
  v36 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)v18;
  *(_QWORD *)(a1 + 160) = v20;
  sub_1AD00412C(v36, v19);
LABEL_28:
  v21 = *(_QWORD *)(a2 + 168);
  if (!*(_QWORD *)(a1 + 168))
  {
LABEL_35:
    v26 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v26;
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    v27 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v27;
    goto LABEL_43;
  }
  if (!v21)
  {
    sub_1AD0AEC8C((uint64_t *)(a1 + 168));
    goto LABEL_35;
  }
  v22 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v21;
  *(_QWORD *)(a1 + 176) = v22;
  swift_release();
  v23 = (_QWORD *)(a2 + 184);
  v24 = *(_QWORD *)(a1 + 192);
  if (v24 >> 60 != 15)
  {
    v25 = *(_QWORD *)(a2 + 192);
    if (v25 >> 60 != 15)
    {
      v29 = *(_QWORD *)(a1 + 184);
      *(_QWORD *)(a1 + 184) = *v23;
      *(_QWORD *)(a1 + 192) = v25;
      sub_1AD00412C(v29, v24);
      goto LABEL_38;
    }
    sub_1AD007EC0(a1 + 184);
  }
  *(_OWORD *)(a1 + 184) = *(_OWORD *)v23;
LABEL_38:
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  swift_release();
  v30 = (_QWORD *)(a2 + 224);
  v31 = *(_QWORD *)(a1 + 232);
  if (v31 >> 60 != 15)
  {
    v32 = *(_QWORD *)(a2 + 232);
    if (v32 >> 60 != 15)
    {
      v33 = *(_QWORD *)(a1 + 224);
      *(_QWORD *)(a1 + 224) = *v30;
      *(_QWORD *)(a1 + 232) = v32;
      sub_1AD00412C(v33, v31);
      goto LABEL_43;
    }
    sub_1AD007EC0(a1 + 224);
  }
  *(_OWORD *)(a1 + 224) = *(_OWORD *)v30;
LABEL_43:
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudStorageShareProtection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 248))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudStorageShareProtection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 248) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 248) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudStorageShareProtection()
{
  return &type metadata for CloudStorageShareProtection;
}

uint64_t sub_1AD32C4C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _OWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _OWORD *v56;
  uint64_t v57;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return v4;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = a2[4];
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = a2 + 5;
  v9 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v9 >> 60 == 11 || v9 >> 60 == 15)
  {
    *(_OWORD *)(v4 + 40) = *(_OWORD *)v8;
    v10 = a2[9];
    if (v10)
      goto LABEL_5;
LABEL_10:
    v18 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(v4 + 72) = v18;
    *(_OWORD *)(v4 + 88) = *(_OWORD *)(a2 + 11);
    goto LABEL_11;
  }
  v17 = *v8;
  sub_1AD0040A0(*v8, v9);
  *(_QWORD *)(v4 + 40) = v17;
  *(_QWORD *)(v4 + 48) = v9;
  v10 = a2[9];
  if (!v10)
    goto LABEL_10;
LABEL_5:
  v11 = *((_DWORD *)a2 + 15);
  *(_DWORD *)(v4 + 56) = *((_DWORD *)a2 + 14);
  *(_DWORD *)(v4 + 60) = v11;
  *(_BYTE *)(v4 + 64) = *((_BYTE *)a2 + 64);
  v12 = a2[10];
  *(_QWORD *)(v4 + 72) = v10;
  *(_QWORD *)(v4 + 80) = v12;
  v13 = a2 + 11;
  v14 = a2[12];
  swift_retain();
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)(v4 + 88) = *v13;
  }
  else
  {
    v16 = *(_QWORD *)v13;
    sub_1AD0040A0(v16, v14);
    *(_QWORD *)(v4 + 88) = v16;
    *(_QWORD *)(v4 + 96) = v14;
  }
LABEL_11:
  v19 = a2[14];
  *(_QWORD *)(v4 + 104) = a2[13];
  *(_QWORD *)(v4 + 112) = v19;
  v20 = a2 + 15;
  v21 = a2[16];
  swift_retain();
  if (v21 >> 60 == 15)
  {
    *(_OWORD *)(v4 + 120) = *v20;
  }
  else
  {
    v22 = *(_QWORD *)v20;
    sub_1AD0040A0(v22, v21);
    *(_QWORD *)(v4 + 120) = v22;
    *(_QWORD *)(v4 + 128) = v21;
  }
  v23 = a2[18];
  *(_QWORD *)(v4 + 136) = a2[17];
  *(_QWORD *)(v4 + 144) = v23;
  v24 = a2 + 19;
  v25 = a2[20];
  swift_retain();
  if (v25 >> 60 == 11 || v25 >> 60 == 15)
  {
    *(_OWORD *)(v4 + 152) = *(_OWORD *)v24;
  }
  else
  {
    v26 = *v24;
    sub_1AD0040A0(*v24, v25);
    *(_QWORD *)(v4 + 152) = v26;
    *(_QWORD *)(v4 + 160) = v25;
  }
  v27 = a2[21];
  if (v27)
  {
    v28 = a2[22];
    *(_QWORD *)(v4 + 168) = v27;
    *(_QWORD *)(v4 + 176) = v28;
    v29 = a2 + 23;
    v30 = a2[24];
    swift_retain();
    if (v30 >> 60 == 15)
    {
      *(_OWORD *)(v4 + 184) = *v29;
    }
    else
    {
      v33 = *(_QWORD *)v29;
      sub_1AD0040A0(v33, v30);
      *(_QWORD *)(v4 + 184) = v33;
      *(_QWORD *)(v4 + 192) = v30;
    }
    *(_DWORD *)(v4 + 200) = *((_DWORD *)a2 + 50);
    v34 = a2[27];
    *(_QWORD *)(v4 + 208) = a2[26];
    *(_QWORD *)(v4 + 216) = v34;
    v35 = a2 + 28;
    v36 = a2[29];
    swift_retain();
    if (v36 >> 60 == 15)
    {
      *(_OWORD *)(v4 + 224) = *v35;
    }
    else
    {
      v37 = *(_QWORD *)v35;
      sub_1AD0040A0(v37, v36);
      *(_QWORD *)(v4 + 224) = v37;
      *(_QWORD *)(v4 + 232) = v36;
    }
  }
  else
  {
    v31 = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(v4 + 200) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(v4 + 216) = v31;
    *(_QWORD *)(v4 + 232) = a2[29];
    v32 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(v4 + 168) = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(v4 + 184) = v32;
  }
  v38 = a2[32];
  *(_OWORD *)(v4 + 240) = *((_OWORD *)a2 + 15);
  *(_QWORD *)(v4 + 256) = v38;
  v39 = a2 + 33;
  v40 = a2[34];
  swift_bridgeObjectRetain();
  swift_retain();
  if (v40 >> 60 == 11 || v40 >> 60 == 15)
  {
    *(_OWORD *)(v4 + 264) = *(_OWORD *)v39;
  }
  else
  {
    v41 = *v39;
    sub_1AD0040A0(*v39, v40);
    *(_QWORD *)(v4 + 264) = v41;
    *(_QWORD *)(v4 + 272) = v40;
  }
  v42 = *(int *)(a3 + 24);
  v43 = (_QWORD *)(v4 + v42);
  v44 = (uint64_t)a2 + v42;
  v45 = *(uint64_t *)((char *)a2 + v42 + 8);
  *v43 = *(uint64_t *)((char *)a2 + v42);
  v43[1] = v45;
  swift_retain();
  v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v47 = (char *)v43 + v46;
  v48 = (const void *)(v44 + v46);
  v49 = sub_1AD63AF28();
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v50 + 16))(v47, v48, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  v52 = *(int *)(a3 + 28);
  v53 = v4 + v52;
  v54 = (uint64_t *)((char *)a2 + v52);
  v55 = v54[1];
  *(_QWORD *)v53 = *v54;
  *(_QWORD *)(v53 + 8) = v55;
  v56 = v54 + 2;
  v57 = v54[3];
  swift_retain();
  if (v57 == 1)
  {
    *(_OWORD *)(v53 + 16) = *v56;
  }
  else
  {
    *(_QWORD *)(v53 + 16) = *(_QWORD *)v56;
    *(_QWORD *)(v53 + 24) = v57;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1AD32C8CC(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1[6];
  if (v4 >> 60 != 15 && (v4 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(a1[5], v4);
  if (a1[9])
  {
    swift_release();
    v6 = a1[12];
    if (v6 >> 60 != 15)
      sub_1AD00412C(a1[11], v6);
  }
  swift_release();
  v7 = a1[16];
  if (v7 >> 60 != 15)
    sub_1AD00412C(a1[15], v7);
  swift_release();
  v8 = a1[20];
  if (v8 >> 60 != 15 && (v8 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(a1[19], v8);
  if (a1[21])
  {
    swift_release();
    v9 = a1[24];
    if (v9 >> 60 != 15)
      sub_1AD00412C(a1[23], v9);
    swift_release();
    v10 = a1[29];
    if (v10 >> 60 != 15)
      sub_1AD00412C(a1[28], v10);
  }
  swift_bridgeObjectRelease();
  swift_release();
  v11 = a1[34];
  if (v11 >> 60 != 15 && (v11 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(a1[33], v11);
  v12 = (char *)a1 + *(int *)(a2 + 24);
  swift_release();
  v13 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28)];
  v14 = sub_1AD63AF28();
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  v16 = (char *)a1 + *(int *)(a2 + 28);
  swift_release();
  result = *((_QWORD *)v16 + 3);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1AD32CABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _OWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = (uint64_t *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v8 >> 60 == 11 || v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v7;
    v9 = *(_QWORD *)(a2 + 72);
    if (v9)
      goto LABEL_4;
  }
  else
  {
    v15 = *v7;
    sub_1AD0040A0(*v7, v8);
    *(_QWORD *)(a1 + 40) = v15;
    *(_QWORD *)(a1 + 48) = v8;
    v9 = *(_QWORD *)(a2 + 72);
    if (v9)
    {
LABEL_4:
      v10 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 60) = v10;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      v11 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v9;
      *(_QWORD *)(a1 + 80) = v11;
      v12 = (_OWORD *)(a2 + 88);
      v13 = *(_QWORD *)(a2 + 96);
      swift_retain();
      if (v13 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 88) = *v12;
      }
      else
      {
        v14 = *(_QWORD *)v12;
        sub_1AD0040A0(v14, v13);
        *(_QWORD *)(a1 + 88) = v14;
        *(_QWORD *)(a1 + 96) = v13;
      }
      goto LABEL_9;
    }
  }
  v16 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v16;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_9:
  v17 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v17;
  v18 = (_OWORD *)(a2 + 120);
  v19 = *(_QWORD *)(a2 + 128);
  swift_retain();
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 120) = *v18;
  }
  else
  {
    v20 = *(_QWORD *)v18;
    sub_1AD0040A0(v20, v19);
    *(_QWORD *)(a1 + 120) = v20;
    *(_QWORD *)(a1 + 128) = v19;
  }
  v21 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v21;
  v22 = (uint64_t *)(a2 + 152);
  v23 = *(_QWORD *)(a2 + 160);
  swift_retain();
  if (v23 >> 60 == 11 || v23 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)v22;
  }
  else
  {
    v24 = *v22;
    sub_1AD0040A0(*v22, v23);
    *(_QWORD *)(a1 + 152) = v24;
    *(_QWORD *)(a1 + 160) = v23;
  }
  v25 = *(_QWORD *)(a2 + 168);
  if (v25)
  {
    v26 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v25;
    *(_QWORD *)(a1 + 176) = v26;
    v27 = (_OWORD *)(a2 + 184);
    v28 = *(_QWORD *)(a2 + 192);
    swift_retain();
    if (v28 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 184) = *v27;
    }
    else
    {
      v31 = *(_QWORD *)v27;
      sub_1AD0040A0(v31, v28);
      *(_QWORD *)(a1 + 184) = v31;
      *(_QWORD *)(a1 + 192) = v28;
    }
    *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
    v32 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v32;
    v33 = (_OWORD *)(a2 + 224);
    v34 = *(_QWORD *)(a2 + 232);
    swift_retain();
    if (v34 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 224) = *v33;
    }
    else
    {
      v35 = *(_QWORD *)v33;
      sub_1AD0040A0(v35, v34);
      *(_QWORD *)(a1 + 224) = v35;
      *(_QWORD *)(a1 + 232) = v34;
    }
  }
  else
  {
    v29 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v29;
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    v30 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v30;
  }
  v36 = *(_QWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 256) = v36;
  v37 = (uint64_t *)(a2 + 264);
  v38 = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v38 >> 60 == 11 || v38 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 264) = *(_OWORD *)v37;
  }
  else
  {
    v39 = *v37;
    sub_1AD0040A0(*v37, v38);
    *(_QWORD *)(a1 + 264) = v39;
    *(_QWORD *)(a1 + 272) = v38;
  }
  v40 = *(int *)(a3 + 24);
  v41 = (_QWORD *)(a1 + v40);
  v42 = a2 + v40;
  v43 = *(_QWORD *)(a2 + v40 + 8);
  *v41 = *(_QWORD *)(a2 + v40);
  v41[1] = v43;
  swift_retain();
  v44 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v45 = (char *)v41 + v44;
  v46 = (const void *)(v42 + v44);
  v47 = sub_1AD63AF28();
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v50 = *(int *)(a3 + 28);
  v51 = a1 + v50;
  v52 = (_QWORD *)(a2 + v50);
  v53 = v52[1];
  *(_QWORD *)v51 = *v52;
  *(_QWORD *)(v51 + 8) = v53;
  v54 = v52 + 2;
  v55 = v52[3];
  swift_retain();
  if (v55 == 1)
  {
    *(_OWORD *)(v51 + 16) = *v54;
  }
  else
  {
    *(_QWORD *)(v51 + 16) = *(_QWORD *)v54;
    *(_QWORD *)(v51 + 24) = v55;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD32CE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 *v11;
  __int128 *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(char *, uint64_t, uint64_t);
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  v7 = (uint64_t *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = v8 & 0xF000000000000000;
  if (*(_QWORD *)(a1 + 48) >> 60 == 11)
  {
    if (v9 == 0xB000000000000000 || v8 >> 60 == 15)
      goto LABEL_12;
LABEL_9:
    v10 = *v7;
    sub_1AD0040A0(*v7, *(_QWORD *)(a2 + 48));
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v8;
    goto LABEL_13;
  }
  if (v9 == 0xB000000000000000)
  {
    sub_1AD009758(a1 + 40, &qword_1ED2E3250);
    goto LABEL_12;
  }
  if (*(_QWORD *)(a1 + 48) >> 60 == 15)
  {
    if (v8 >> 60 != 15)
      goto LABEL_9;
LABEL_12:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v7;
    goto LABEL_13;
  }
  if (v8 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 40);
    goto LABEL_12;
  }
  v94 = *v7;
  sub_1AD0040A0(*v7, *(_QWORD *)(a2 + 48));
  v95 = *(_QWORD *)(a1 + 40);
  v96 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v94;
  *(_QWORD *)(a1 + 48) = v8;
  sub_1AD00412C(v95, v96);
LABEL_13:
  v11 = (__int128 *)(a1 + 56);
  v12 = (__int128 *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (!v13)
    {
      v24 = *v12;
      v25 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v25;
      *v11 = v24;
      goto LABEL_29;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    v19 = *(_DWORD *)(a2 + 60);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_DWORD *)(a1 + 60) = v19;
    v20 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v20;
    v21 = (_OWORD *)(a2 + 88);
    v17 = *(_QWORD *)(a2 + 96);
    swift_retain();
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 88) = *v21;
      goto LABEL_29;
    }
    v18 = *(_QWORD *)v21;
    goto LABEL_27;
  }
  if (!v13)
  {
    sub_1AD0AEC58(a1 + 56);
    v23 = *(_OWORD *)(a2 + 72);
    v22 = *(_OWORD *)(a2 + 88);
    *v11 = *v12;
    *(_OWORD *)(a1 + 72) = v23;
    *(_OWORD *)(a1 + 88) = v22;
    goto LABEL_29;
  }
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  v14 = *(_DWORD *)(a2 + 60);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = v14;
  v15 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v15;
  swift_retain();
  swift_release();
  v16 = (uint64_t *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) >> 60 == 15)
  {
    if (v17 >> 60 != 15)
    {
      v18 = *v16;
LABEL_27:
      sub_1AD0040A0(v18, v17);
      *(_QWORD *)(a1 + 88) = v18;
      *(_QWORD *)(a1 + 96) = v17;
      goto LABEL_29;
    }
LABEL_24:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v16;
    goto LABEL_29;
  }
  if (v17 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 88);
    goto LABEL_24;
  }
  v26 = *v16;
  sub_1AD0040A0(*v16, *(_QWORD *)(a2 + 96));
  v27 = *(_QWORD *)(a1 + 88);
  v28 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v26;
  *(_QWORD *)(a1 + 96) = v17;
  sub_1AD00412C(v27, v28);
LABEL_29:
  v29 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v29;
  swift_retain();
  swift_release();
  v30 = (uint64_t *)(a2 + 120);
  v31 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128) >> 60 == 15)
  {
    if (v31 >> 60 != 15)
    {
      v32 = *v30;
      sub_1AD0040A0(*v30, *(_QWORD *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v32;
      *(_QWORD *)(a1 + 128) = v31;
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  if (v31 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 120);
LABEL_34:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v30;
    goto LABEL_36;
  }
  v33 = *v30;
  sub_1AD0040A0(*v30, *(_QWORD *)(a2 + 128));
  v34 = *(_QWORD *)(a1 + 120);
  v35 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = v33;
  *(_QWORD *)(a1 + 128) = v31;
  sub_1AD00412C(v34, v35);
LABEL_36:
  v36 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v36;
  swift_retain();
  swift_release();
  v37 = (uint64_t *)(a2 + 152);
  v38 = *(_QWORD *)(a2 + 160);
  v39 = v38 & 0xF000000000000000;
  if (*(_QWORD *)(a1 + 160) >> 60 == 11)
  {
    if (v39 == 0xB000000000000000 || v38 >> 60 == 15)
      goto LABEL_47;
LABEL_44:
    v40 = *v37;
    sub_1AD0040A0(*v37, *(_QWORD *)(a2 + 160));
    *(_QWORD *)(a1 + 152) = v40;
    *(_QWORD *)(a1 + 160) = v38;
    goto LABEL_48;
  }
  if (v39 == 0xB000000000000000)
  {
    sub_1AD009758(a1 + 152, &qword_1ED2E3250);
    goto LABEL_47;
  }
  if (*(_QWORD *)(a1 + 160) >> 60 == 15)
  {
    if (v38 >> 60 != 15)
      goto LABEL_44;
LABEL_47:
    *(_OWORD *)(a1 + 152) = *(_OWORD *)v37;
    goto LABEL_48;
  }
  if (v38 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 152);
    goto LABEL_47;
  }
  v97 = *v37;
  sub_1AD0040A0(*v37, *(_QWORD *)(a2 + 160));
  v98 = *(_QWORD *)(a1 + 152);
  v99 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = v97;
  *(_QWORD *)(a1 + 160) = v38;
  sub_1AD00412C(v98, v99);
LABEL_48:
  v41 = (_OWORD *)(a1 + 168);
  v43 = (_OWORD *)(a2 + 168);
  v42 = *(_QWORD *)(a2 + 168);
  if (!*(_QWORD *)(a1 + 168))
  {
    if (!v42)
    {
      *v41 = *v43;
      v54 = *(_OWORD *)(a2 + 184);
      v55 = *(_OWORD *)(a2 + 200);
      v56 = *(_OWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 200) = v55;
      *(_OWORD *)(a1 + 216) = v56;
      *(_OWORD *)(a1 + 184) = v54;
      goto LABEL_74;
    }
    v48 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v42;
    *(_QWORD *)(a1 + 176) = v48;
    v49 = (_OWORD *)(a2 + 184);
    v50 = *(_QWORD *)(a2 + 192);
    swift_retain();
    if (v50 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 184) = *v49;
    }
    else
    {
      v57 = *(_QWORD *)v49;
      sub_1AD0040A0(v57, v50);
      *(_QWORD *)(a1 + 184) = v57;
      *(_QWORD *)(a1 + 192) = v50;
    }
    *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
    v58 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v58;
    v59 = (_OWORD *)(a2 + 224);
    v60 = *(_QWORD *)(a2 + 232);
    swift_retain();
    if (v60 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 224) = *v59;
      goto LABEL_74;
    }
    v61 = *(_QWORD *)v59;
    goto LABEL_69;
  }
  if (!v42)
  {
    sub_1AD0AEC8C((uint64_t *)(a1 + 168));
    *v41 = *v43;
    v52 = *(_OWORD *)(a2 + 200);
    v51 = *(_OWORD *)(a2 + 216);
    v53 = *(_OWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 200) = v52;
    *(_OWORD *)(a1 + 216) = v51;
    *(_OWORD *)(a1 + 184) = v53;
    goto LABEL_74;
  }
  v44 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v42;
  *(_QWORD *)(a1 + 176) = v44;
  swift_retain();
  swift_release();
  v45 = (uint64_t *)(a2 + 184);
  v46 = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 192) >> 60 == 15)
  {
    if (v46 >> 60 != 15)
    {
      v47 = *v45;
      sub_1AD0040A0(*v45, *(_QWORD *)(a2 + 192));
      *(_QWORD *)(a1 + 184) = v47;
      *(_QWORD *)(a1 + 192) = v46;
      goto LABEL_66;
    }
    goto LABEL_59;
  }
  if (v46 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 184);
LABEL_59:
    *(_OWORD *)(a1 + 184) = *(_OWORD *)v45;
    goto LABEL_66;
  }
  v62 = *v45;
  sub_1AD0040A0(*v45, *(_QWORD *)(a2 + 192));
  v63 = *(_QWORD *)(a1 + 184);
  v64 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = v62;
  *(_QWORD *)(a1 + 192) = v46;
  sub_1AD00412C(v63, v64);
LABEL_66:
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  v65 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v65;
  swift_retain();
  swift_release();
  v66 = (uint64_t *)(a2 + 224);
  v60 = *(_QWORD *)(a2 + 232);
  if (*(_QWORD *)(a1 + 232) >> 60 == 15)
  {
    if (v60 >> 60 != 15)
    {
      v61 = *v66;
LABEL_69:
      sub_1AD0040A0(v61, v60);
      *(_QWORD *)(a1 + 224) = v61;
      *(_QWORD *)(a1 + 232) = v60;
      goto LABEL_74;
    }
    goto LABEL_72;
  }
  if (v60 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 224);
LABEL_72:
    *(_OWORD *)(a1 + 224) = *(_OWORD *)v66;
    goto LABEL_74;
  }
  v67 = *v66;
  sub_1AD0040A0(*v66, *(_QWORD *)(a2 + 232));
  v68 = *(_QWORD *)(a1 + 224);
  v69 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = v67;
  *(_QWORD *)(a1 + 232) = v60;
  sub_1AD00412C(v68, v69);
LABEL_74:
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v70 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v70;
  swift_retain();
  swift_release();
  v71 = (uint64_t *)(a2 + 264);
  v72 = *(_QWORD *)(a2 + 272);
  v73 = v72 & 0xF000000000000000;
  if (*(_QWORD *)(a1 + 272) >> 60 == 11)
  {
    if (v73 == 0xB000000000000000)
      goto LABEL_84;
LABEL_80:
    if (v72 >> 60 != 15)
    {
      v74 = *v71;
      sub_1AD0040A0(*v71, *(_QWORD *)(a2 + 272));
      *(_QWORD *)(a1 + 264) = v74;
      *(_QWORD *)(a1 + 272) = v72;
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v73 == 0xB000000000000000)
  {
    sub_1AD009758(a1 + 264, &qword_1ED2E3250);
LABEL_84:
    *(_OWORD *)(a1 + 264) = *(_OWORD *)v71;
    goto LABEL_85;
  }
  if (*(_QWORD *)(a1 + 272) >> 60 == 15)
    goto LABEL_80;
  if (v72 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 264);
    goto LABEL_84;
  }
  v100 = *v71;
  sub_1AD0040A0(*v71, *(_QWORD *)(a2 + 272));
  v101 = *(_QWORD *)(a1 + 264);
  v102 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 264) = v100;
  *(_QWORD *)(a1 + 272) = v72;
  sub_1AD00412C(v101, v102);
LABEL_85:
  v75 = *(int *)(a3 + 24);
  v76 = (_QWORD *)(a1 + v75);
  v77 = a2 + v75;
  v78 = *(_QWORD *)(a2 + v75 + 8);
  *v76 = *(_QWORD *)(a2 + v75);
  v76[1] = v78;
  swift_retain();
  swift_release();
  v79 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v80 = (char *)v76 + v79;
  v81 = (char *)(v77 + v79);
  v82 = sub_1AD63AF28();
  v83 = *(_QWORD *)(v82 - 8);
  v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
  v85 = v84(v80, 1, v82);
  v86 = v84(v81, 1, v82);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v81, v82);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v80, v82);
LABEL_90:
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v83 + 24))(v80, v81, v82);
LABEL_91:
  v88 = *(int *)(a3 + 28);
  v89 = (_QWORD *)(a1 + v88);
  v90 = a2 + v88;
  v91 = *(_QWORD *)(a2 + v88 + 8);
  *v89 = *(_QWORD *)(a2 + v88);
  v89[1] = v91;
  swift_retain();
  swift_release();
  v92 = *(_QWORD *)(v90 + 24);
  if (v89[3] != 1)
  {
    if (v92 != 1)
    {
      v89[2] = *(_QWORD *)(v90 + 16);
      v89[3] = *(_QWORD *)(v90 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758((uint64_t)(v89 + 2), &qword_1ED2E3198);
    goto LABEL_96;
  }
  if (v92 == 1)
  {
LABEL_96:
    *((_OWORD *)v89 + 1) = *(_OWORD *)(v90 + 16);
    return a1;
  }
  v89[2] = *(_QWORD *)(v90 + 16);
  v89[3] = *(_QWORD *)(v90 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD32D730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;

  v6 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v6;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v17 = (void *)(v14 + v16);
  v18 = (const void *)(v15 + v16);
  v19 = sub_1AD63AF28();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = *(int *)(a3 + 28);
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  return a1;
}

uint64_t sub_1AD32D888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  unint64_t v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v6 = (_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  if (v7 >> 60 == 11)
    goto LABEL_7;
  v8 = *(_QWORD *)(a2 + 48);
  if (v8 >> 60 == 11)
  {
    sub_1AD009758(a1 + 40, &qword_1ED2E3250);
LABEL_7:
    *(_OWORD *)(a1 + 40) = *v6;
    goto LABEL_8;
  }
  if (v7 >> 60 == 15)
    goto LABEL_7;
  if (v8 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 40);
    goto LABEL_7;
  }
  v57 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 48) = v8;
  sub_1AD00412C(v57, v7);
LABEL_8:
  if (!*(_QWORD *)(a1 + 72))
  {
LABEL_15:
    v15 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v15;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_16;
  }
  v9 = *(_QWORD *)(a2 + 72);
  if (!v9)
  {
    sub_1AD0AEC58(a1 + 56);
    goto LABEL_15;
  }
  v10 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = v10;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v11;
  swift_release();
  v12 = (_OWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 96);
  if (v13 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 88) = *v12;
    goto LABEL_16;
  }
  v14 = *(_QWORD *)(a2 + 96);
  if (v14 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 88);
    goto LABEL_13;
  }
  v30 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)v12;
  *(_QWORD *)(a1 + 96) = v14;
  sub_1AD00412C(v30, v13);
LABEL_16:
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  v16 = (_OWORD *)(a2 + 120);
  v17 = *(_QWORD *)(a1 + 128);
  if (v17 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)(a1 + 120) = *v16;
    goto LABEL_21;
  }
  v18 = *(_QWORD *)(a2 + 128);
  if (v18 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 120);
    goto LABEL_19;
  }
  v19 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)v16;
  *(_QWORD *)(a1 + 128) = v18;
  sub_1AD00412C(v19, v17);
LABEL_21:
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_release();
  v20 = (_OWORD *)(a2 + 152);
  v21 = *(_QWORD *)(a1 + 160);
  if (v21 >> 60 == 11)
  {
LABEL_27:
    *(_OWORD *)(a1 + 152) = *v20;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(a2 + 160);
  if (v22 >> 60 == 11)
  {
    sub_1AD009758(a1 + 152, &qword_1ED2E3250);
    goto LABEL_27;
  }
  if (v21 >> 60 == 15)
    goto LABEL_27;
  if (v22 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 152);
    goto LABEL_27;
  }
  v58 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)v20;
  *(_QWORD *)(a1 + 160) = v22;
  sub_1AD00412C(v58, v21);
LABEL_28:
  v23 = *(_QWORD *)(a2 + 168);
  if (!*(_QWORD *)(a1 + 168))
  {
LABEL_35:
    v28 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v28;
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    v29 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v29;
    goto LABEL_43;
  }
  if (!v23)
  {
    sub_1AD0AEC8C((uint64_t *)(a1 + 168));
    goto LABEL_35;
  }
  v24 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v23;
  *(_QWORD *)(a1 + 176) = v24;
  swift_release();
  v25 = (_OWORD *)(a2 + 184);
  v26 = *(_QWORD *)(a1 + 192);
  if (v26 >> 60 == 15)
  {
LABEL_33:
    *(_OWORD *)(a1 + 184) = *v25;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(a2 + 192);
  if (v27 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 184);
    goto LABEL_33;
  }
  v31 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)v25;
  *(_QWORD *)(a1 + 192) = v27;
  sub_1AD00412C(v31, v26);
LABEL_38:
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  swift_release();
  v32 = (_OWORD *)(a2 + 224);
  v33 = *(_QWORD *)(a1 + 232);
  if (v33 >> 60 == 15)
  {
LABEL_41:
    *(_OWORD *)(a1 + 224) = *v32;
    goto LABEL_43;
  }
  v34 = *(_QWORD *)(a2 + 232);
  if (v34 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 224);
    goto LABEL_41;
  }
  v35 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)v32;
  *(_QWORD *)(a1 + 232) = v34;
  sub_1AD00412C(v35, v33);
LABEL_43:
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  swift_release();
  v36 = (_OWORD *)(a2 + 264);
  v37 = *(_QWORD *)(a1 + 272);
  if (v37 >> 60 == 11)
  {
LABEL_49:
    *(_OWORD *)(a1 + 264) = *v36;
    goto LABEL_50;
  }
  v38 = *(_QWORD *)(a2 + 272);
  if (v38 >> 60 == 11)
  {
    sub_1AD009758(a1 + 264, &qword_1ED2E3250);
    goto LABEL_49;
  }
  if (v37 >> 60 == 15)
    goto LABEL_49;
  if (v38 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 264);
    goto LABEL_49;
  }
  v59 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)v36;
  *(_QWORD *)(a1 + 272) = v38;
  sub_1AD00412C(v59, v37);
LABEL_50:
  v39 = *(int *)(a3 + 24);
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_OWORD *)(a1 + v39) = *(_OWORD *)(a2 + v39);
  swift_release();
  v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v43 = (void *)(v40 + v42);
  v44 = (void *)(v41 + v42);
  v45 = sub_1AD63AF28();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 32))(v43, v44, v45);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      goto LABEL_56;
    }
    goto LABEL_55;
  }
  if (v49)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
LABEL_55:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_56;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 40))(v43, v44, v45);
LABEL_56:
  v51 = *(int *)(a3 + 28);
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_OWORD *)(a1 + v51) = *(_OWORD *)(a2 + v51);
  swift_release();
  v54 = (_QWORD *)(v53 + 16);
  if (*(_QWORD *)(v52 + 24) != 1)
  {
    v55 = *(_QWORD *)(v53 + 24);
    if (v55 != 1)
    {
      *(_QWORD *)(v52 + 16) = *v54;
      *(_QWORD *)(v52 + 24) = v55;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(v52 + 16, &qword_1ED2E3198);
  }
  *(_OWORD *)(v52 + 16) = *(_OWORD *)v54;
  return a1;
}

uint64_t sub_1AD32DDD4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD32DDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1AD32DE60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD32DE6C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1AD32DEE4()
{
  unint64_t v0;

  sub_1AD32DF60(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1AD32DF60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED2E1FE8)
  {
    v2 = sub_1AD63AF28();
    v5 = type metadata accessor for Untrusted(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED2E1FE8);
  }
}

uint64_t sub_1AD32DFB4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL sub_1AD32DFD8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD4E84EC(a1, (_QWORD **)(v1 + 16));
}

uint64_t sub_1AD32DFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *__return_ptr, _BYTE *, uint64_t (*)@<X0>(uint64_t *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *__return_ptr, _BYTE *, uint64_t (*)@<X0>(CGImage *@<X0>, uint64_t *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD v22[4];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  _BYTE v27[192];
  _BYTE v28[192];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[192];
  _QWORD v33[7];
  uint64_t v34;
  _BYTE v35[192];
  _BYTE v36[192];
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[200];

  v24 = a2;
  v4 = v3;
  sub_1AD0CFC4C(v4, (uint64_t)v38);
  v7 = v39;
  v8 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  sub_1AD00FF28(v4 + 56, (uint64_t)v42, qword_1ED2E2EE0);
  sub_1AD00FF28((uint64_t)v42, (uint64_t)v36, qword_1ED2E2EE0);
  *(double *)&v26[2] = a3;
  v26[3] = a1;
  v9 = *(void (**)(uint64_t *__return_ptr, _BYTE *, uint64_t (*)@<X0>(uint64_t *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v8 + 8);
  sub_1AD0CFA58((uint64_t)v42, (uint64_t (*)(void))sub_1AD00FEAC);
  type metadata accessor for CGImage(0);
  v11 = v10;
  v9(&v37, v36, sub_1AD32E338, v26, v10, v7, v8);
  if (v25)
  {
    sub_1AD00FF28((uint64_t)v36, (uint64_t)v33, qword_1ED2E2EE0);
    sub_1AD0CFA58((uint64_t)v33, (uint64_t (*)(void))sub_1AD00E8B0);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  else
  {
    v25 = v4 + 56;
    v13 = v24;
    sub_1AD00FF28((uint64_t)v36, (uint64_t)v35, qword_1ED2E2EE0);
    sub_1AD0CFA58((uint64_t)v35, (uint64_t (*)(void))sub_1AD00E8B0);
    v14 = v37;
    sub_1AD0CFB8C(v4, (uint64_t)v33);
    if (v14)
    {
      sub_1AD046A30(v33);
      v41 = v14;
    }
    else
    {
      sub_1AD0CFC4C((uint64_t)v33, (uint64_t)v29);
      v17 = v30;
      v18 = v31;
      __swift_project_boxed_opaque_existential_1(v29, v30);
      sub_1AD00FF28((uint64_t)&v34, (uint64_t)v32, qword_1ED2E2EE0);
      v19 = sub_1AD00FF28((uint64_t)v32, (uint64_t)v28, qword_1ED2E2EE0);
      v23[1] = v23;
      MEMORY[0x1E0C80A78](v19);
      *(double *)&v22[2] = a3;
      v20 = *(void (**)(uint64_t *__return_ptr, _BYTE *, uint64_t (*)@<X0>(CGImage *@<X0>, uint64_t *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v18 + 16);
      sub_1AD0CFA58((uint64_t)v32, (uint64_t (*)(void))sub_1AD00FEAC);
      v20(&v41, v28, sub_1AD32E6F4, v22, v11, v17, v18);
      sub_1AD00FF28((uint64_t)v28, (uint64_t)v27, qword_1ED2E2EE0);
      sub_1AD0CFA58((uint64_t)v27, (uint64_t (*)(void))sub_1AD00E8B0);
      sub_1AD046A30(v33);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    v15 = v41;
    v16 = v25;
    if (v41)
    {
      *(_QWORD *)(v13 + 24) = v11;
      *(_QWORD *)(v13 + 32) = &off_1E5CCB028;
      *(_QWORD *)v13 = v15;
      sub_1AD00FF28(v16, (uint64_t)v32, qword_1ED2E2EE0);
      *(_QWORD *)(v13 + 40) = 0;
      *(_BYTE *)(v13 + 48) = 1;
      sub_1AD00FF28((uint64_t)v32, v13 + 56, qword_1ED2E2EE0);
      return sub_1AD0CFA58((uint64_t)v32, (uint64_t (*)(void))sub_1AD00FEAC);
    }
    else
    {
      sub_1AD32E70C();
      swift_allocError();
      *(_QWORD *)v21 = 0;
      *(_QWORD *)(v21 + 8) = 0;
      *(_BYTE *)(v21 + 16) = 3;
      return swift_willThrow();
    }
  }
}

uint64_t sub_1AD32E338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_1AD32E370(*(_QWORD *)(v1 + 24), *(double *)(v1 + 16));
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1AD32E370(int64_t a1, double a2)
{
  CGImageSource *v2;
  uint64_t result;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void **v14;
  void *v15;
  void **v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  const __CFDictionary *v24;
  uint64_t ThumbnailAtIndex;
  const __CFString *v26;
  __CFString *v27;
  uint64_t v28;
  uint64_t v29;
  const __CFString *v30;
  __CFString *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  if (a1 < 0 || (uint64_t)CGImageSourceGetCount(v2) <= a1)
  {
    v30 = (id)CGImageSourceGetType(v2);
    if (v30)
    {
      v31 = (__CFString *)v30;
      ThumbnailAtIndex = sub_1AD63B768();
      v29 = v32;

    }
    else
    {
      ThumbnailAtIndex = 0;
      v29 = 0;
    }
    sub_1AD32E70C();
    swift_allocError();
    v34 = 0;
    *(_QWORD *)v33 = ThumbnailAtIndex;
    goto LABEL_15;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2E10);
  result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_1AD679140;
  v6 = (void *)*MEMORY[0x1E0CBD288];
  *(_QWORD *)(result + 32) = *MEMORY[0x1E0CBD288];
  v7 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(result + 40) = 1;
  v8 = (void *)*MEMORY[0x1E0CBD178];
  *(_QWORD *)(result + 64) = v7;
  *(_QWORD *)(result + 72) = v8;
  *(_BYTE *)(result + 80) = 1;
  v9 = (void *)*MEMORY[0x1E0CBD2A0];
  *(_QWORD *)(result + 104) = v7;
  *(_QWORD *)(result + 112) = v9;
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (a2 < 9.22337204e18)
  {
    v10 = result;
    v11 = (uint64_t)a2;
    v12 = MEMORY[0x1E0DEB418];
    if ((uint64_t)a2 >= 0x3FFFFFFFFFFFFFFFLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(result + 120) = v11;
    v13 = (void *)*MEMORY[0x1E0CBD190];
    *(_QWORD *)(result + 144) = v12;
    *(_QWORD *)(result + 152) = v13;
    v14 = (void **)MEMORY[0x1E0CBD2B8];
    *(_BYTE *)(result + 160) = 1;
    v15 = *v14;
    *(_QWORD *)(result + 184) = v7;
    *(_QWORD *)(result + 192) = v15;
    v16 = (void **)MEMORY[0x1E0CBD240];
    *(_BYTE *)(result + 200) = 0;
    v17 = *v16;
    *(_QWORD *)(result + 224) = v7;
    *(_QWORD *)(result + 232) = v17;
    *(_QWORD *)(result + 264) = v7;
    *(_BYTE *)(result + 240) = 1;
    v18 = v6;
    v19 = v8;
    v20 = v9;
    v21 = v13;
    v22 = v15;
    v23 = v17;
    sub_1AD438F14(v10);
    type metadata accessor for CFString(0);
    sub_1AD32EFC0();
    v24 = (const __CFDictionary *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    ThumbnailAtIndex = (uint64_t)CGImageSourceCreateThumbnailAtIndex(v2, a1, v24);

    if (ThumbnailAtIndex)
      return ThumbnailAtIndex;
    v26 = (id)CGImageSourceGetType(v2);
    if (v26)
    {
      v27 = (__CFString *)v26;
      ThumbnailAtIndex = sub_1AD63B768();
      v29 = v28;

    }
    else
    {
      ThumbnailAtIndex = 0;
      v29 = 0;
    }
    sub_1AD32E70C();
    swift_allocError();
    *(_QWORD *)v33 = ThumbnailAtIndex;
    v34 = 1;
LABEL_15:
    *(_QWORD *)(v33 + 8) = v29;
    *(_BYTE *)(v33 + 16) = v34;
    swift_willThrow();
    return ThumbnailAtIndex;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1AD32E62C@<X0>(CGImage *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  CGImageGetRenderingIntent(a1);
  result = CGImageCreateCopyWithParameters();
  if (result)
  {
    *a2 = result;
  }
  else
  {
    sub_1AD32E70C();
    swift_allocError();
    *(_OWORD *)v4 = xmmword_1AD679150;
    *(_BYTE *)(v4 + 16) = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD32E6F4@<X0>(CGImage *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AD32E62C(a1, a2);
}

unint64_t sub_1AD32E70C()
{
  unint64_t result;

  result = qword_1EECDABD8;
  if (!qword_1EECDABD8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679174, &type metadata for ThumbnailError);
    atomic_store(result, (unint64_t *)&qword_1EECDABD8);
  }
  return result;
}

uint64_t sub_1AD32E750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *__return_ptr, _BYTE *, void (*)(CGImageSource *@<X0>, CGImageRef *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];
  _BYTE v19[192];
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[192];

  sub_1AD00FF28(v4 + 56, (uint64_t)v24, qword_1ED2E2EE0);
  sub_1AD0CFC4C(v4, (uint64_t)v21);
  v10 = v22;
  v11 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  sub_1AD00FF28((uint64_t)v24, (uint64_t)v19, qword_1ED2E2EE0);
  v18[2] = a1;
  *(double *)&v18[3] = a4;
  v18[4] = a2;
  v12 = *(void (**)(uint64_t *__return_ptr, _BYTE *, void (*)(CGImageSource *@<X0>, CGImageRef *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v11 + 8);
  type metadata accessor for CGImage(0);
  v14 = v13;
  v12(&v20, v19, sub_1AD32F008, v18, v13, v10, v11);
  if (v5)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  v16 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (v16)
  {
    *(_QWORD *)(a3 + 24) = v14;
    *(_QWORD *)(a3 + 32) = &off_1E5CCB028;
    *(_QWORD *)a3 = v16;
    *(_QWORD *)(a3 + 40) = 0;
    *(_BYTE *)(a3 + 48) = 1;
    sub_1AD00FF28((uint64_t)v24, a3 + 56, qword_1ED2E2EE0);
    return sub_1AD0CFA58((uint64_t)v24, (uint64_t (*)(void))sub_1AD00FEAC);
  }
  else
  {
    sub_1AD32E70C();
    swift_allocError();
    *(_QWORD *)v17 = 0;
    *(_QWORD *)(v17 + 8) = 0;
    *(_BYTE *)(v17 + 16) = 3;
    return swift_willThrow();
  }
}

void sub_1AD32E8D8(CGImageSource *a1@<X0>, int64_t a2@<X1>, double *a3@<X2>, CGImageRef *a4@<X8>, double a5@<D0>)
{
  int64_t Count;
  uint64_t inited;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void **v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  const __CFDictionary *v27;
  CGImageRef ImageAtIndex;
  CGImage *v29;
  int64_t Width;
  int64_t Height;
  double v32;
  double v33;
  CFDictionaryRef v34;
  CFDictionaryRef v35;
  id v36;
  const __CFDictionary *v37;
  const __CFString *v38;
  __CFString *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const __CFString *v43;
  __CFString *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const __CFString *v49;
  __CFString *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  double v63;
  double v64;
  double v65;
  double v66;
  void *v67;
  double *v68;
  CGImageRef *v69;
  __int128 v70;
  __int128 v71;
  _BYTE v72[24];
  uint64_t v73;
  void *v74;

  Count = CGImageSourceGetCount(a1);
  if (a2 < 0 || Count <= a2)
  {
    v38 = (id)CGImageSourceGetType(a1);
    if (v38)
    {
      v39 = (__CFString *)v38;
      v40 = sub_1AD63B768();
      v42 = v41;

    }
    else
    {
      v40 = 0;
      v42 = 0;
    }
    sub_1AD32E70C();
    swift_allocError();
    *(_QWORD *)v48 = v40;
    *(_QWORD *)(v48 + 8) = v42;
    *(_BYTE *)(v48 + 16) = 0;
    goto LABEL_24;
  }
  v68 = a3;
  v69 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2E10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD679140;
  v12 = (void *)*MEMORY[0x1E0CBD288];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD288];
  v13 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 40) = 1;
  v14 = (void *)*MEMORY[0x1E0CBD2B8];
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = v14;
  *(_BYTE *)(inited + 80) = 0;
  v15 = (void *)*MEMORY[0x1E0CBD240];
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 112) = v15;
  *(_BYTE *)(inited + 120) = 1;
  v16 = (void *)*MEMORY[0x1E0CBD250];
  *(_QWORD *)(inited + 144) = v13;
  *(_QWORD *)(inited + 152) = v16;
  *(_BYTE *)(inited + 160) = 1;
  v17 = (void *)*MEMORY[0x1E0CBD2A8];
  v18 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 200) = 0x682E63696C627570;
  *(_QWORD *)(inited + 208) = 0xEB00000000636965;
  v19 = (void **)MEMORY[0x1E0CBD1C8];
  *(_QWORD *)(inited + 184) = v13;
  *(_QWORD *)(inited + 192) = v17;
  v20 = *v19;
  *(_QWORD *)(inited + 224) = v18;
  *(_QWORD *)(inited + 232) = v20;
  *(_QWORD *)(inited + 264) = v13;
  *(_BYTE *)(inited + 240) = 1;
  v21 = v12;
  v22 = v14;
  v23 = v15;
  v24 = v16;
  v25 = v17;
  v26 = v20;
  sub_1AD438F14(inited);
  type metadata accessor for CFString(0);
  sub_1AD32EFC0();
  v27 = (const __CFDictionary *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  ImageAtIndex = CGImageSourceCreateImageAtIndex(a1, a2, v27);

  if (!ImageAtIndex)
  {
    v43 = (id)CGImageSourceGetType(a1);
    if (v43)
    {
      v44 = (__CFString *)v43;
      v45 = sub_1AD63B768();
      v47 = v46;

    }
    else
    {
      v45 = 0;
      v47 = 0;
    }
    sub_1AD32E70C();
    swift_allocError();
    *(_QWORD *)v55 = v45;
    *(_QWORD *)(v55 + 8) = v47;
    *(_BYTE *)(v55 + 16) = 1;
LABEL_24:
    swift_willThrow();
    return;
  }
  v29 = ImageAtIndex;
  Width = CGImageGetWidth(v29);
  Height = CGImageGetHeight(v29);
  if (Width < 1 || (v32 = (double)Width, (double)Width > a5))
  {
    v49 = (id)CGImageSourceGetType(a1);
    if (!v49)
    {
LABEL_20:
      v51 = 0;
      v53 = 0;
      goto LABEL_21;
    }
LABEL_18:
    v50 = (__CFString *)v49;
    v51 = sub_1AD63B768();
    v53 = v52;

LABEL_21:
    sub_1AD32E70C();
    swift_allocError();
    *(_QWORD *)v54 = v51;
    *(_QWORD *)(v54 + 8) = v53;
    *(_BYTE *)(v54 + 16) = 2;
    swift_willThrow();

    return;
  }
  if (Height < 1 || (v33 = (double)Height, (double)Height > a5))
  {
    v49 = (id)CGImageSourceGetType(a1);
    if (!v49)
      goto LABEL_20;
    goto LABEL_18;
  }
  v34 = CGImageSourceCopyPropertiesAtIndex(a1, a2, 0);
  if (!v34)
  {

LABEL_34:
    *v69 = ImageAtIndex;
    return;
  }
  v35 = v34;
  v36 = (id)*MEMORY[0x1E0CBD090];
  v37 = v35;
  if (-[__CFDictionary __swift_objectForKeyedSubscript:](v37, sel___swift_objectForKeyedSubscript_, v36))
  {
    sub_1AD63BCC0();
    swift_unknownObjectRelease();
  }
  else
  {
    v70 = 0u;
    v71 = 0u;
  }
  sub_1AD00FF28((uint64_t)&v70, (uint64_t)v72, &qword_1EECDC5F0);
  if (!v73)
  {

    sub_1AD32F28C((uint64_t)v72);
    goto LABEL_34;
  }
  sub_1AD32F2CC(0, &qword_1EECDABE0);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_33:
    goto LABEL_34;
  }
  v56 = v74;

  v57 = (id)*MEMORY[0x1E0CBD0F0];
  if (objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, v57))
  {
    sub_1AD63BCC0();
    swift_unknownObjectRelease();
  }
  else
  {
    v70 = 0u;
    v71 = 0u;
  }
  sub_1AD00FF28((uint64_t)&v70, (uint64_t)v72, &qword_1EECDC5F0);
  if (v73)
  {
    sub_1AD32F2CC(0, &qword_1EECDABE8);
    if (swift_dynamicCast())
    {
      v58 = v74;

      goto LABEL_42;
    }

  }
  else
  {

    sub_1AD32F28C((uint64_t)v72);
  }
  v58 = 0;
LABEL_42:
  v59 = (id)*MEMORY[0x1E0CBD100];
  if (objc_msgSend(v56, (SEL)&selRef_setDuration_ + 6, v59))
  {
    sub_1AD63BCC0();
    swift_unknownObjectRelease();
  }
  else
  {
    v70 = 0u;
    v71 = 0u;
  }
  sub_1AD00FF28((uint64_t)&v70, (uint64_t)v72, &qword_1EECDC5F0);
  if (!v73)
  {

    sub_1AD32F28C((uint64_t)v72);
    if (!v58)
    {
LABEL_57:
      v67 = v56;
      v60 = 0;
      goto LABEL_59;
    }
LABEL_55:

    *v69 = ImageAtIndex;
    return;
  }
  sub_1AD32F2CC(0, &qword_1EECDABE8);
  if (!swift_dynamicCast())
  {

    if (!v58)
      goto LABEL_57;
    goto LABEL_55;
  }
  v60 = v74;

  if (v58)
  {
    if (v60)
    {
      v61 = v58;
      v62 = v60;
      objc_msgSend(v61, sel_doubleValue);
      v64 = v63;
      objc_msgSend(v62, sel_doubleValue);
      if (v64 <= v32)
      {
        v66 = v65;
        if (v64 >= -v32 && v65 <= v33 && v65 >= -v33)
        {

          *v68 = v64;
          v68[1] = v66;
          goto LABEL_34;
        }
      }

      goto LABEL_33;
    }
    goto LABEL_55;
  }
  v67 = v56;
LABEL_59:

  *v69 = ImageAtIndex;
}

unint64_t sub_1AD32EFC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2E2DD0;
  if (!qword_1ED2E2DD0)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x1AF44BDF0](&unk_1AD647CA8, v1);
    atomic_store(result, (unint64_t *)&qword_1ED2E2DD0);
  }
  return result;
}

void sub_1AD32F008(CGImageSource *a1@<X0>, CGImageRef *a2@<X8>)
{
  uint64_t v2;

  sub_1AD32E8D8(a1, *(_QWORD *)(v2 + 16), *(double **)(v2 + 32), a2, *(double *)(v2 + 24));
}

CGImageRef sub_1AD32F028(CFDictionaryRef options)
{
  CGImageSource *v1;
  const __CFDictionary *v2;
  CGImageRef ImageAtIndex;

  v2 = options;
  if (options)
  {
    type metadata accessor for CFString(0);
    sub_1AD32EFC0();
    v2 = (const __CFDictionary *)sub_1AD63B678();
  }
  ImageAtIndex = CGImageSourceCreateImageAtIndex(v1, 0, v2);

  return ImageAtIndex;
}

uint64_t sub_1AD32F0A0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ThumbnailError(uint64_t a1)
{
  return sub_1AD32F0C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1AD32F0C8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s9BlastDoor14ThumbnailErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AD32F0A0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ThumbnailError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AD32F0A0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AD32F0C8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ThumbnailError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1AD32F0C8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThumbnailError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ThumbnailError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AD32F24C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1AD32F264(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailError()
{
  return &type metadata for ThumbnailError;
}

uint64_t sub_1AD32F28C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC5F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD32F2CC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1AD32F304()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD32F30C(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD32F314())()
{
  return nullsub_1;
}

uint64_t sub_1AD32F324()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD32F32C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_1AD32F354())()
{
  return nullsub_1;
}

unint64_t sub_1AD32F364(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD2A1308();
  result = sub_1AD2A1134();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BasicTypingIndicator(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BasicTypingIndicator(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BasicTypingIndicator(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BasicTypingIndicator()
{
  return &type metadata for BasicTypingIndicator;
}

uint64_t sub_1AD32F450(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t ObjCClassFromMetadata;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  id v18;
  void *v19;
  id v20;
  uint64_t ObjCClassMetadata;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t (*v30)(_BYTE *, uint64_t, uint64_t);
  unint64_t v31;
  _BYTE v32[8960];
  _QWORD v33[1121];

  MEMORY[0x1E0C80A78](a1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v32[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1AD63AF28();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v7);
  v11 = &v32[-v10 - 8];
  v31 = *v1;
  type metadata accessor for ClientConnection();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = (void *)sub_1AD63B744();
  v15 = (void *)sub_1AD63B744();
  v16 = objc_msgSend(v13, sel_URLForResource_withExtension_, v14, v15);

  if (!v16)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_14;
  }
  sub_1AD63AED4();

  v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
  v17(v4, v9, v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_14:
    sub_1AD009758((uint64_t)v4, &qword_1ED2E1A40);
    return 0;
  }
  v17(v11, v4, v5);
  v18 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
  v19 = (void *)sub_1AD63AE98();
  v20 = objc_msgSend(v18, sel_initWithURL_, v19);

  if (!v20)
  {
LABEL_16:
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
    return 0;
  }
  objc_msgSend(v20, sel_load);
  if (!objc_msgSend(v20, sel_principalClass))
    goto LABEL_15;
  ObjCClassMetadata = swift_getObjCClassMetadata();
  v22 = swift_conformsToProtocol2();
  v23 = v22 ? v22 : 0;
  if (!v22)
    ObjCClassMetadata = 0;
  if (!ObjCClassMetadata)
  {
LABEL_15:

    goto LABEL_16;
  }
  if ((v31 & 0x8000000000000000) != 0)
  {
    memcpy(v33, (const void *)((v31 & 0x7FFFFFFFFFFFFFFFLL) + 16), 0x22F9uLL);
    memcpy(v32, (const void *)((v31 & 0x7FFFFFFFFFFFFFFFLL) + 16), 0x22F9uLL);
    v30 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v23 + 16);
    sub_1AD29BD5C();
    v28 = v30(v32, ObjCClassMetadata, v23);

    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
    sub_1AD29BD5C();
  }
  else
  {
    v24 = *(_QWORD *)(v31 + 24);
    v25 = *(_QWORD *)(v31 + 32);
    v26 = *(_QWORD *)(v31 + 40);
    v33[0] = *(_QWORD *)(v31 + 16);
    v33[1] = v24;
    v33[2] = v25;
    v33[3] = v26;
    v27 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v23 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    v28 = v27(v33, ObjCClassMetadata, v23);

    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v28;
}

uint64_t PosterArchive.bridgedToObjectiveC.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v11[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD3A20);
  v1 = MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for PosterArchive();
  v3 = MEMORY[0x1E0C80A78](v2);
  v11[4] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1AD32FC34();
  v8 = v7;
  v9 = sub_1AD63AFA0();
  sub_1AD00412C((uint64_t)v6, v8);
  return v9;
}

_QWORD *sub_1AD32FC34()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  void (*v34)(char *, uint64_t, _QWORD *);
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, _QWORD *);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43;
  void *v44;
  unsigned int v45;
  void *v46;
  _OWORD *v47;
  char *v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  _QWORD *v69;
  os_log_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  int v78;
  id v79;
  void *v80;
  void *v81;
  char *v82;
  id v83;
  id v84;
  id v85;
  unsigned int v86;
  id v87;
  void *v88;
  NSObject *v89;
  id v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  id v94;
  void *v95;
  void *v96;
  char *v97;
  id v98;
  id v99;
  unint64_t v100;
  unint64_t v101;
  char *v102;
  NSObject *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  void (*v108)(char *, uint64_t);
  os_log_t v109;
  _QWORD *v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  NSObject *v118;
  char *v119;
  char *v120;
  _QWORD *v121;
  id v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  _QWORD *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  _OWORD v131[13];
  uint64_t v132;
  _OWORD v133[13];
  uint64_t v134;
  _OWORD v135[12];
  _BYTE v136[26];
  char v137;
  uint64_t v138;

  v138 = *MEMORY[0x1E0C80C00];
  v0 = (_QWORD *)sub_1AD63AE68();
  v121 = (_QWORD *)*(v0 - 1);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v109 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AD63AF28();
  v4 = *(_QWORD **)(v3 - 8);
  v126 = v3;
  v127 = v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v115 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v116 = (char *)&v109 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v120 = (char *)&v109 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v123 = (char *)&v109 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v125 = (char *)&v109 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v128 = (char *)&v109 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v109 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v109 - v20;
  v22 = (void *)objc_opt_self();
  v23 = objc_msgSend(v22, sel_defaultManager);
  v24 = objc_msgSend(v23, sel_temporaryDirectory);

  sub_1AD63AED4();
  v122 = v22;
  v25 = objc_msgSend(v22, sel_defaultManager);
  v26 = (void *)sub_1AD63AE98();
  *(_QWORD *)&v135[0] = 0;
  v27 = objc_msgSend(v25, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 99, 1, v26, 1, v135);

  v28 = *(void **)&v135[0];
  if (v27)
  {
    v124 = v19;
    sub_1AD63AED4();
    v29 = v28;

    v117 = v129 + 224;
    sub_1AD2A15B0((uint64_t)(v129 + 224), (uint64_t)v135);
    v119 = v21;
    if (v137)
    {
      v30 = v121;
      if (v137 == 1)
      {
        sub_1AD28B36C((uint64_t)v135);
        v31 = 0x80000001AD69DC10;
        v32 = 0xD000000000000028;
      }
      else
      {
        sub_1AD28B36C((uint64_t)v135);
        v32 = 0xD00000000000002CLL;
        v31 = 0x80000001AD69DC40;
      }
    }
    else
    {
      sub_1AD28B36C((uint64_t)v135);
      v32 = 0xD00000000000002ELL;
      v31 = 0x80000001AD69DBE0;
      v30 = v121;
    }
    *(_QWORD *)&v135[0] = v32;
    *((_QWORD *)&v135[0] + 1) = v31;
    v34 = (void (*)(char *, uint64_t, _QWORD *))v30[13];
    v34(v2, *MEMORY[0x1E0CAFD60], v0);
    sub_1AD0442F4();
    v35 = v0;
    sub_1AD63AF1C();
    v121 = (_QWORD *)v30[1];
    ((void (*)(char *, _QWORD *))v121)(v2, v0);
    swift_bridgeObjectRelease();
    strcpy((char *)v135, "configurations");
    HIBYTE(v135[0]) = -18;
    v36 = *MEMORY[0x1E0CAFD78];
    v34(v2, v36, v0);
    v37 = v123;
    sub_1AD63AF1C();
    v38 = (void (*)(char *, _QWORD *))v121;
    ((void (*)(char *, _QWORD *))v121)(v2, v35);
    swift_bridgeObjectRelease();
    v39 = type metadata accessor for PosterArchive();
    v113 = &v129[*(int *)(v39 + 24)];
    v114 = v39;
    *(_QWORD *)&v135[0] = sub_1AD63B054();
    *((_QWORD *)&v135[0] + 1) = v40;
    v34(v2, v36, v35);
    v41 = v125;
    sub_1AD63AF1C();
    v38(v2, v35);
    swift_bridgeObjectRelease();
    v42 = v126;
    v0 = (_QWORD *)v127[1];
    ((void (*)(char *, uint64_t))v0)(v37, v126);
    v43 = objc_msgSend(v122, sel_defaultManager);
    v44 = (void *)sub_1AD63AE98();
    *(_QWORD *)&v135[0] = 0;
    v45 = objc_msgSend(v43, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v44, 1, 0, v135);

    v46 = *(void **)&v135[0];
    if (v45)
    {
      v123 = (char *)v0;
      sub_1AD2A15B0((uint64_t)v117, (uint64_t)v135);
      v0 = v128;
      if (v137)
      {
        v47 = v129;
        v48 = v120;
        v49 = v46;
        sub_1AD28B36C((uint64_t)v135);
      }
      else
      {
        v51 = v46;
        sub_1AD28B36C((uint64_t)v135);
        v47 = v129;
        v48 = v120;
      }
      v52 = (void *)objc_opt_self();
      v53 = (void *)sub_1AD63B744();
      swift_bridgeObjectRelease();
      v54 = (void *)sub_1AD63B060();
      v55 = objc_msgSend(v52, sel_configurationIdentityWithProvider_identifier_posterUUID_version_supplement_, v53, 0, v54, *(_QWORD *)((char *)v47 + *(int *)(v114 + 28)), *(_QWORD *)((char *)v47 + *(int *)(v114 + 32)));

      v56 = (void *)sub_1AD63AE98();
      v57 = objc_msgSend(v52, sel_serverPathWithProviderURL_identity_, v56, v55);

      v121 = v57;
      v122 = v52;
      v58 = objc_msgSend(v52, sel_configurationWithPath_, v57);
      if (qword_1EECD1420 != -1)
        swift_once();
      v59 = sub_1AD63B4B0();
      v60 = __swift_project_value_buffer(v59, (uint64_t)qword_1EECD1C48);
      v112 = (void (*)(char *, char *, uint64_t))v127[2];
      v112(v48, (char *)v0, v42);
      v61 = (char *)v55;
      v113 = (char *)v60;
      v62 = sub_1AD63B498();
      v63 = sub_1AD63BB94();
      LODWORD(v114) = v63;
      v64 = os_log_type_enabled(v62, v63);
      v127 = v58;
      v120 = v61;
      if (v64)
      {
        v65 = swift_slowAlloc();
        v110 = (_QWORD *)swift_slowAlloc();
        v111 = swift_slowAlloc();
        *(_QWORD *)&v135[0] = v111;
        *(_DWORD *)v65 = 136315394;
        sub_1AD335B4C();
        v109 = v62;
        v66 = sub_1AD63C0D4();
        *(_QWORD *)&v133[0] = sub_1AD43D1D0(v66, v67, (uint64_t *)v135);
        sub_1AD63BC60();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v123)(v48, v42);
        *(_WORD *)(v65 + 12) = 2112;
        *(_QWORD *)&v133[0] = v61;
        v68 = v61;
        v0 = v128;
        v47 = v129;
        sub_1AD63BC60();
        v69 = v110;
        *v110 = v61;

        v42 = v126;
        v70 = v109;
        _os_log_impl(&dword_1ACFC8000, v109, (os_log_type_t)v114, "Creating data from poster archive using provider URL: %s identity: %@", (uint8_t *)v65, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC98);
        swift_arrayDestroy();
        MEMORY[0x1AF44BED4](v69, -1, -1);
        v71 = v111;
        swift_arrayDestroy();
        MEMORY[0x1AF44BED4](v71, -1, -1);
        MEMORY[0x1AF44BED4](v65, -1, -1);

      }
      else
      {
        ((void (*)(char *, uint64_t))v123)(v48, v42);

      }
      v72 = v47[11];
      v135[10] = v47[10];
      v135[11] = v72;
      *(_OWORD *)v136 = v47[12];
      *(_OWORD *)&v136[10] = *(_OWORD *)((char *)v47 + 202);
      v73 = v47[7];
      v135[6] = v47[6];
      v135[7] = v73;
      v74 = v47[9];
      v135[8] = v47[8];
      v135[9] = v74;
      v75 = v47[3];
      v135[2] = v47[2];
      v135[3] = v75;
      v76 = v47[5];
      v135[4] = v47[4];
      v135[5] = v76;
      v77 = v47[1];
      v135[0] = *v47;
      v135[1] = v77;
      sub_1AD00FF28((uint64_t)v135, (uint64_t)v133, &qword_1EECD51F0);
      v78 = sub_1AD335B34((uint64_t)v133);
      v79 = v122;
      if (v78 == 1)
      {
        v80 = 0;
      }
      else
      {
        v131[10] = v133[10];
        v131[11] = v133[11];
        v131[12] = v133[12];
        v132 = v134;
        v131[6] = v133[6];
        v131[7] = v133[7];
        v131[8] = v133[8];
        v131[9] = v133[9];
        v131[2] = v133[2];
        v131[3] = v133[3];
        v131[4] = v133[4];
        v131[5] = v133[5];
        v131[0] = v133[0];
        v131[1] = v133[1];
        sub_1AD335B94(v135, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD335C08);
        sub_1AD3310D0();
        v80 = v81;
      }
      v82 = v125;
      v83 = v121;
      if (v136[24] == 2)
        v84 = 0;
      else
        v84 = objc_msgSend(v79, sel_renderingConfigurationWithDepthEffectDisabled_parallaxEnabled_, v136[24] & 1, HIBYTE(*(unsigned __int16 *)&v136[24]) & 1);
      v85 = objc_msgSend(v79, sel_configuredPropertiesWithTitleStyleConfiguration_renderingConfiguration_, v80, v84);

      sub_1AD335B94(v135, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD28B238);
      *(_QWORD *)&v131[0] = 0;
      v86 = objc_msgSend(v79, sel_storeConfiguredPropertiesForPath_configuredProperties_error_, v83, v85, v131);

      if (!v86)
      {
        v90 = *(id *)&v131[0];
        sub_1AD63AE50();

        swift_willThrow();
        goto LABEL_28;
      }
      v87 = *(id *)&v131[0];
      v88 = v127;
      v89 = v118;
      sub_1AD334A1C(v127);
      if (v89)
      {

LABEL_28:
        v91 = (void (*)(char *, uint64_t))v123;
        ((void (*)(char *, uint64_t))v123)(v82, v42);
        v92 = (char *)v0;
LABEL_29:
        v91(v92, v42);
        v91(v124, v42);
        v91(v119, v42);
        return v0;
      }
      v0 = objc_msgSend(v122, sel_archiver);
      *(_QWORD *)&v131[0] = 0;
      v94 = objc_msgSend(v0, sel_archiveConfiguration_error_, v88, v131);
      v95 = *(void **)&v131[0];
      if (!v94)
      {
        v99 = *(id *)&v131[0];
        sub_1AD63AE50();

        swift_willThrow();
        v91 = (void (*)(char *, uint64_t))v123;
        ((void (*)(char *, uint64_t))v123)(v82, v42);
        v92 = v128;
        goto LABEL_29;
      }
      v96 = v94;
      v129 = (char *)v0;
      v97 = v116;
      sub_1AD63AED4();
      v98 = v95;

      v0 = (_QWORD *)sub_1AD63AF40();
      v101 = v100;
      v102 = v115;
      v112(v115, v97, v42);
      sub_1AD0040A0((uint64_t)v0, v101);
      sub_1AD0040A0((uint64_t)v0, v101);
      v103 = sub_1AD63B498();
      v104 = sub_1AD63BB94();
      if (os_log_type_enabled(v103, (os_log_type_t)v104))
      {
        LODWORD(v117) = v104;
        v118 = v103;
        v122 = (id)(v101 >> 62);
        v105 = swift_slowAlloc();
        v114 = swift_slowAlloc();
        *(_QWORD *)&v131[0] = v114;
        *(_DWORD *)v105 = 136315394;
        sub_1AD335B4C();
        v106 = sub_1AD63C0D4();
        v130 = sub_1AD43D1D0(v106, v107, (uint64_t *)v131);
        sub_1AD63BC60();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v123)(v102, v42);
        *(_WORD *)(v105 + 12) = 2048;
        __asm { BR              X9 }
      }
      sub_1AD00412C((uint64_t)v0, v101);

      sub_1AD00412C((uint64_t)v0, v101);
      v108 = (void (*)(char *, uint64_t))v123;
      ((void (*)(char *, uint64_t))v123)(v102, v42);

      v108(v97, v42);
      v108(v125, v42);
      v108(v128, v42);
      v108(v124, v42);
      v108(v119, v42);
    }
    else
    {
      v50 = *(id *)&v135[0];
      sub_1AD63AE50();

      swift_willThrow();
      ((void (*)(char *, uint64_t))v0)(v41, v42);
      ((void (*)(char *, uint64_t))v0)(v128, v42);
      ((void (*)(char *, uint64_t))v0)(v124, v42);
      ((void (*)(char *, uint64_t))v0)(v119, v42);
    }
  }
  else
  {
    v33 = *(id *)&v135[0];
    sub_1AD63AE50();

    swift_willThrow();
    ((void (*)(char *, uint64_t))v127[1])(v21, v126);
  }
  return v0;
}

void sub_1AD330BE8()
{
  __asm { BR              X10 }
}

id sub_1AD330C48()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  int64_t v4;
  __int128 *v5;
  __int128 v6;
  CGColorRef v7;
  CGColorRef v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  _OWORD v19[6];
  __int128 v20;
  uint64_t v21;

  if (!v1 || v0 == 2)
    return 0;
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    *(_QWORD *)(v2 - 144) = MEMORY[0x1E0DEE9D8];
    sub_1AD147838(0, v4, 0);
    if (qword_1EECD1638 != -1)
      swift_once();
    v5 = (__int128 *)(v1 + 48);
    do
    {
      v6 = *v5;
      v19[0] = *(v5 - 1);
      v19[1] = v6;
      v7 = CGColorCreate((CGColorSpaceRef)qword_1EECDEA20, (const CGFloat *)v19);
      if (!v7)
      {
        __break(1u);
        JUMPOUT(0x1AD3310C0);
      }
      v8 = v7;
      type metadata accessor for CGColor(0);
      v21 = v9;
      *(_QWORD *)&v20 = v8;
      v10 = *(_QWORD *)(v2 - 144);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AD147838(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = *(_QWORD *)(v2 - 144);
      }
      v12 = *(_QWORD *)(v10 + 16);
      v11 = *(_QWORD *)(v10 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1AD147838(v11 > 1, v12 + 1, 1);
        v10 = *(_QWORD *)(v2 - 144);
      }
      *(_QWORD *)(v10 + 16) = v12 + 1;
      sub_1AD002F7C(&v20, (_OWORD *)(v10 + 32 * v12 + 32));
      v5 += 2;
      --v4;
    }
    while (v4);
  }
  v15 = (v0 >> 8) & 1;
  v16 = v0 & 1;
  v17 = (void *)objc_opt_self();
  v18 = (void *)sub_1AD63B990();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v17, sel_discreteColorsContentStyleForColors_vibrant_supportsVariation_variation_, v18, v16, v15, v3);

  return v13;
}

void sub_1AD3310D0()
{
  uint64_t v0;
  double v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v1 = *(double *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(unsigned __int8 *)(v0 + 160);
  v5 = objc_opt_self();
  if (v2 == 2)
  {
    if (v3 == 1)
      goto LABEL_5;
  }
  else
  {
    v6 = (void *)v5;
    PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.rawValue.getter();
    v7 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_systemTimeFontConfigurationWithTimeFontIdentifier_weight_systemItem_, v7, v2 & 1, v1);

    if (v3 == 1)
LABEL_5:
      __asm { BR              X9 }
  }
  sub_1AD330BE8();
  goto LABEL_5;
}

id sub_1AD331268(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18, int a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  double v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v56;
  void *v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;

  v52 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  if (v49)
  {
    if (v49 == 1)
    {
      sub_1AD63BE28();
      __break(1u);
      JUMPOUT(0x1AD331390);
    }
    swift_bridgeObjectRetain();
    v53 = (void *)sub_1AD63B744();
    sub_1AD003F24(v47, v49);
  }
  else
  {
    v53 = 0;
  }
  LOBYTE(v56) = v58;
  v54 = objc_msgSend(v57, sel_titleStyleConfigurationWithTimeFontConfiguration_preferredTitleAlignment_preferredTitleLayout_titleContentStyle_timeNumberingSystem_userConfigured_contentsLuminance_alternateDateEnabled_groupName_, v50, v61, v60, v48, v52, v59, v51, v56, v53);

  swift_unknownObjectRelease();
  return v54;
}

id sub_1AD3313A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;

  v21 = *(double *)(v0 + 8);
  v22 = *(double *)v0;
  v19 = *(double *)(v0 + 24);
  v20 = *(double *)(v0 + 16);
  v17 = *(double *)(v0 + 40);
  v18 = *(double *)(v0 + 32);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 72);
  v14 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(unsigned __int8 *)(v0 + 145);
  if (*(_BYTE *)(v0 + 144) == 2)
  {
    v10 = 0;
  }
  else
  {
    v10 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
  }
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D75228]), sel_initWithImageSize_deviceResolution_parallaxPadding_visibleFrame_inactiveFrame_timeFrame_clockLayerOrder_clockIntersection_debugLayouts_, v10, v9, 0, v22, v21, v20, v19, v18, v17, v16, v15, v14, v13, v1, v2, v3, v4,
          v5,
          v7,
          v6,
          v8);

  return v11;
}

void sub_1AD3314FC(void *a1@<X0>, double *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  os_log_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  int v37;
  id v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[63];
  unint64_t v43;
  _QWORD v44[55];
  __int128 v45;
  __int128 v46;

  v7 = sub_1AD63B4B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EECD1420 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v7, (uint64_t)qword_1EECD1C48);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_1AD335D80((uint64_t)a2, (uint64_t)v44);
  sub_1AD335D80((uint64_t)a2, (uint64_t)v42);
  v12 = a1;
  v13 = sub_1AD63B498();
  v37 = sub_1AD63BB94();
  v14 = os_log_type_enabled(v13, (os_log_type_t)v37);
  v38 = v12;
  if (v14)
  {
    v33 = v13;
    v34 = v8;
    v35 = a3;
    v36 = v3;
    v15 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v41 = v32;
    *(_DWORD *)v15 = 134218754;
    *(_QWORD *)&v39 = CVPixelBufferGetWidth((CVPixelBufferRef)v12);
    sub_1AD63BC60();
    *(_WORD *)(v15 + 12) = 2048;
    *(_QWORD *)&v39 = CVPixelBufferGetHeight((CVPixelBufferRef)v12);
    sub_1AD63BC60();

    *(_WORD *)(v15 + 22) = 2080;
    v39 = v45;
    v40 = v46;
    type metadata accessor for CGRect(0);
    v16 = sub_1AD63B7A4();
    *(_QWORD *)&v39 = sub_1AD43D1D0(v16, v17, &v41);
    sub_1AD63BC60();
    swift_bridgeObjectRelease();
    sub_1AD2939B4(v44);
    *(_WORD *)(v15 + 32) = 2080;
    v18 = v43;
    if (!v43)
      goto LABEL_9;
    v19 = v42[62];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v39 = sub_1AD43D1D0(v19, v18, &v41);
    sub_1AD63BC60();
    swift_bridgeObjectRelease();
    sub_1AD2939B4(v42);
    v20 = v33;
    _os_log_impl(&dword_1ACFC8000, v33, (os_log_type_t)v37, "Creating parallax image layer from image: (width: %ld, height: %ld) frame: %s identifier: %s", (uint8_t *)v15, 0x2Au);
    v21 = v32;
    swift_arrayDestroy();
    MEMORY[0x1AF44BED4](v21, -1, -1);
    MEMORY[0x1AF44BED4](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v7);
    a3 = v35;
  }
  else
  {

    sub_1AD2939B4(v44);
    sub_1AD2939B4(v42);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*((_QWORD *)a2 + 63))
  {
    v23 = a2[58];
    v22 = a2[59];
    v25 = a2[56];
    v24 = a2[57];
    v26 = a2[55];
    v27 = objc_allocWithZone(MEMORY[0x1E0D75178]);
    v28 = v38;
    swift_bridgeObjectRetain();
    v29 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v27, sel_initWithImage_frame_zPosition_identifier_, v28, v29, v26, v25, v24, v23, v22);

    *a3 = v30;
    return;
  }
LABEL_9:
  sub_1AD63BE28();
  __break(1u);
}

void sub_1AD33190C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  unsigned int v14;
  double v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint8_t *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void (*v33)(uint64_t *__return_ptr, void (*)(void *@<X0>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int16 v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  _OWORD v90[15];
  uint64_t v91;
  id v92[67];

  v3 = v2;
  v92[64] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1AD63AF28();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = *(_OWORD *)(v1 + 15);
  v69 = *(_OWORD *)(v1 + 13);
  v70 = v10;
  v71 = *(_OWORD *)(v1 + 17);
  v72 = *((_WORD *)v1 + 76);
  v11 = *(_OWORD *)(v1 + 7);
  v65 = *(_OWORD *)(v1 + 5);
  v66 = v11;
  v12 = *(_OWORD *)(v1 + 11);
  v67 = *(_OWORD *)(v1 + 9);
  v68 = v12;
  v13 = *(_OWORD *)(v1 + 3);
  v63 = *(_OWORD *)(v1 + 1);
  v64 = v13;
  v14 = *((unsigned __int8 *)v1 + 154);
  v52 = *((unsigned __int8 *)v1 + 155);
  v53 = v14;
  v15 = *((double *)v1 + 20);
  v54 = *((unsigned __int8 *)v1 + 168);
  if (qword_1EECD1420 != -1)
    swift_once();
  v16 = sub_1AD63B4B0();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EECD1C48);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v55 = a1;
  v17(v8, a1, v5);
  v18 = v6;
  v19 = sub_1AD63B498();
  v20 = sub_1AD63BB94();
  v21 = os_log_type_enabled(v19, v20);
  v56 = v9;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v58 = v2;
    v23 = (uint8_t *)v22;
    v57 = (char *)swift_slowAlloc();
    v92[0] = v57;
    *(_DWORD *)v23 = 136315138;
    v51[1] = v23 + 4;
    sub_1AD335B4C();
    v24 = sub_1AD63C0D4();
    *(_QWORD *)&v90[0] = sub_1AD43D1D0(v24, v25, (uint64_t *)v92);
    v9 = v56;
    sub_1AD63BC60();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v5);
    _os_log_impl(&dword_1ACFC8000, v19, v20, "Saving unpacked layer stack to wallpaper URL: %s", v23, 0xCu);
    v26 = v57;
    swift_arrayDestroy();
    MEMORY[0x1AF44BED4](v26, -1, -1);
    v27 = v23;
    v3 = v58;
    MEMORY[0x1AF44BED4](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v5);
  }

  v28 = *(char **)(v9 + 16);
  if (v28)
  {
    v62 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1AD63BDE0();
    v29 = v9 + 32;
    while (1)
    {
      v57 = v28;
      v58 = v3;
      sub_1AD335D80(v29, (uint64_t)v92);
      sub_1ACFF64C0((uint64_t)v92, (uint64_t)&v74, &qword_1ED2E2680);
      if (!*((_QWORD *)&v75 + 1))
        __break(1u);
      v90[12] = v86;
      v90[13] = v87;
      v90[14] = v88;
      v91 = v89;
      v90[8] = v82;
      v90[9] = v83;
      v90[10] = v84;
      v90[11] = v85;
      v90[4] = v78;
      v90[5] = v79;
      v90[6] = v80;
      v90[7] = v81;
      v90[0] = v74;
      v90[1] = v75;
      v90[2] = v76;
      v90[3] = v77;
      sub_1AD0CFC4C((uint64_t)v90, (uint64_t)&v74);
      sub_1AD046A30(v90);
      v30 = *((_QWORD *)&v75 + 1);
      v31 = v76;
      v32 = __swift_project_boxed_opaque_existential_1(&v74, *((uint64_t *)&v75 + 1));
      MEMORY[0x1E0C80A78](v32);
      v51[-2] = v92;
      v33 = *(void (**)(uint64_t *__return_ptr, void (*)(void *@<X0>, _QWORD *@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v31 + 24);
      v34 = sub_1AD32F2CC(0, &qword_1EECDACA8);
      v35 = v58;
      v33(&v73, sub_1AD335DBC, &v51[-4], v34, v30, v31);
      v3 = v35;
      if (v35)
        break;
      if (!v73)
      {
        v60 = 0xD000000000000067;
        v61 = 0x80000001AD6A7EA0;
        v59 = 170;
        sub_1AD63C0D4();
        sub_1AD63B810();
        swift_bridgeObjectRelease();
        sub_1AD63B810();
        sub_1AD63B810();
        v48 = v60;
        v49 = v61;
        sub_1AD0DDA60();
        swift_allocError();
        *(_QWORD *)v50 = 0xD00000000000002ELL;
        *(_QWORD *)(v50 + 8) = 0x80000001AD6A7E70;
        strcpy((char *)(v50 + 16), "Expected Value");
        *(_BYTE *)(v50 + 31) = -18;
        *(_QWORD *)(v50 + 32) = v48;
        *(_QWORD *)(v50 + 40) = v49;
        swift_willThrow();
        break;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v74);
      sub_1AD2939B4(v92);
      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      v29 += 512;
      v28 = v57 - 1;
      if (v57 == (char *)1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v74);
    sub_1AD2939B4(v92);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_13:
    v37 = v52;
    v36 = v53;
    v38 = sub_1AD3313A8();
    v39 = objc_allocWithZone(MEMORY[0x1E0D75190]);
    sub_1AD32F2CC(0, &qword_1EECDACB0);
    v40 = (void *)sub_1AD63B990();
    swift_bridgeObjectRelease();
    v41 = objc_msgSend(v39, sel_initWithLayers_layout_depthEnabled_parallaxDisabled_clockAreaLuminance_settlingEffectEnabled_, v40, v38, v36, v37, v54, v15);

    v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D75348]), sel_initWithPortraitLayerStack_landscapeLayerStack_, v41, 0);
    v43 = objc_opt_self();
    v44 = v42;
    v45 = (void *)sub_1AD63AE98();
    v92[0] = 0;
    LOBYTE(v43) = objc_msgSend((id)v43, sel_saveCompoundLayerStack_toWallpaperURL_error_, v44, v45, v92);

    if ((v43 & 1) != 0)
    {
      v46 = v92[0];

    }
    else
    {
      v47 = v92[0];
      sub_1AD63AE50();

      swift_willThrow();
    }
  }
}

uint64_t sub_1AD331FAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t result;

  v1 = v0[4];
  v2 = v0[8];
  v3 = v0[9];
  if (v1)
  {
    if (v1 == 1)
      goto LABEL_7;
    v5 = v0[3];
    swift_bridgeObjectRetain();
    v4 = (void *)sub_1AD63B744();
    sub_1AD003F24(v5, v1);
  }
  else
  {
    v4 = 0;
  }
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D75210]), sel_initWithAssetUUID_, v4);

  if (v2)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubpath_, v7);

    objc_msgSend(v6, sel_setVersion_, v3);
    return (uint64_t)v6;
  }
LABEL_7:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

void sub_1AD3320D8(void *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  id v47;
  void *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  void *v72;
  unsigned __int8 v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  double v92;
  int v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  _OWORD v114[2];
  _OWORD v115[2];
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  _OWORD v125[2];
  _OWORD v126[2];
  _OWORD v127[2];
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  _OWORD v133[2];
  _QWORD v134[7];
  __int128 v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  _QWORD v153[30];

  v153[27] = *MEMORY[0x1E0C80C00];
  v3 = sub_1AD63AE68();
  v96 = *(_QWORD *)(v3 - 8);
  v97 = v3;
  MEMORY[0x1E0C80A78](v3);
  v95 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1AD63AF28();
  v99 = *(_QWORD *)(v101 - 8);
  v5 = MEMORY[0x1E0C80A78](v101);
  v98 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v76 - v7;
  v9 = *v1;
  v10 = v1[1];
  v11 = v1[40];
  v12 = *((_QWORD *)v1 + 8);
  v94 = *((_QWORD *)v1 + 9);
  v13 = *((_QWORD *)v1 + 12);
  v14 = *((_QWORD *)v1 + 13);
  v92 = *((double *)v1 + 14);
  v15 = *(_OWORD *)(v1 + 232);
  v16 = *(_OWORD *)(v1 + 264);
  v113 = *(_OWORD *)(v1 + 248);
  v114[0] = v16;
  *(_OWORD *)((char *)v114 + 9) = *(_OWORD *)(v1 + 273);
  v17 = *(_OWORD *)(v1 + 168);
  v18 = *(_OWORD *)(v1 + 200);
  v109 = *(_OWORD *)(v1 + 184);
  v110 = v18;
  v111 = *(_OWORD *)(v1 + 216);
  v112 = v15;
  v19 = *(_OWORD *)(v1 + 136);
  v105 = *(_OWORD *)(v1 + 120);
  v106 = v19;
  v20 = v9 == 0;
  v107 = *(_OWORD *)(v1 + 152);
  v108 = v17;
  v21 = 32;
  if (v20)
    v21 = 0;
  if (v10)
    v22 = v21 | 0x10;
  else
    v22 = v21;
  v23 = *((_OWORD *)v1 + 5);
  v90 = *((_OWORD *)v1 + 3);
  v91 = v23;
  sub_1AD00FF28((uint64_t)(v1 + 296), (uint64_t)v153, &qword_1EECD3B48);
  v93 = v1[506];
  v89 = *((_QWORD *)v1 + 66);
  v102 = *((_QWORD *)v1 + 67);
  v24 = objc_msgSend(a1, sel_assetDirectory);
  v103 = v8;
  sub_1AD63AED4();

  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D751F0]), sel_initWithConfigurationType_, 0);
  objc_msgSend(v25, sel_setOptions_, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2740);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1AD64DF60;
  LOBYTE(v126[0]) = v11;
  *(_OWORD *)((char *)v126 + 8) = v90;
  *((_QWORD *)&v126[1] + 1) = v12;
  *(_QWORD *)&v127[0] = v94;
  *(_OWORD *)((char *)v127 + 8) = v91;
  v94 = v13;
  *((_QWORD *)&v127[1] + 1) = v13;
  *(_QWORD *)&v128 = v14;
  *((double *)&v128 + 1) = v92;
  *(_QWORD *)(v26 + 32) = sub_1AD331FAC();
  *(_QWORD *)&v126[0] = v26;
  sub_1AD63B9CC();
  sub_1AD32F2CC(0, &qword_1EECDACA0);
  v27 = (void *)sub_1AD63B990();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setMedia_, v27);

  sub_1AD00FF28((uint64_t)v153, (uint64_t)v134, &qword_1EECD3B48);
  v28 = 0;
  if (sub_1AD335D3C((uint64_t)v134) != 1)
  {
    v29 = *(double *)v134;
    v92 = *(double *)&v134[1];
    v30 = *(double *)&v134[2];
    v31 = *(double *)&v134[3];
    v32 = *(double *)&v134[4];
    v33 = *(double *)&v134[5];
    v34 = *(double *)&v134[6];
    v35 = v136;
    v90 = v137;
    v91 = v135;
    v36 = v138;
    v87 = v140;
    v88 = v139;
    v85 = v142;
    v86 = v141;
    v83 = v144;
    v84 = v143;
    v81 = v146;
    v82 = v145;
    v79 = v148;
    v80 = v147;
    v77 = v150;
    v78 = v149;
    v76 = v151;
    v37 = v152;
    v38 = objc_allocWithZone(MEMORY[0x1E0D751A8]);
    v39 = objc_msgSend(v38, sel_initWithScreenSize_screenScale_timeRect_inactiveTimeRect_parallaxPadding_, v29, v92, v30, v31, v32, v33, v34, (_QWORD)v91, *((_QWORD *)&v91 + 1), v35, (_QWORD)v90, *((_QWORD *)&v90 + 1), v36);
    if ((v37 & 1) != 0)
    {
      v40 = 0;
    }
    else
    {
      v41 = objc_allocWithZone(MEMORY[0x1E0D751A8]);
      v40 = objc_msgSend(v41, sel_initWithScreenSize_screenScale_timeRect_inactiveTimeRect_parallaxPadding_, v88, v87, v86, v85, v84, v83, v82, v81, v80, v79, v78, v77, v76);
    }
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D75340]), sel_initWithPortraitConfiguration_landscapeConfiguration_, v39, v40);

  }
  objc_msgSend(v25, sel_setLayoutConfiguration_, v28);

  sub_1AD438DD4(MEMORY[0x1E0DEE9D8]);
  v42 = (void *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setUserInfo_, v42);

  v43 = v93;
  v44 = v102;
  v45 = v103;
  v46 = (uint64_t)v98;
  if (v93 != 2)
  {
    v47 = objc_msgSend(v25, sel_userInfo);
    if (v47)
    {
      v48 = v47;
      v49 = v43 & 1;
      v50 = sub_1AD63B690();

      *(_QWORD *)&v116 = sub_1AD63B768();
      *((_QWORD *)&v116 + 1) = v51;
      sub_1AD63BD08();
      *((_QWORD *)&v117 + 1) = MEMORY[0x1E0DEAFA0];
      LOBYTE(v116) = v49;
      sub_1AD002F7C(&v116, v115);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v104 = v50;
      sub_1AD43F578(v115, (uint64_t)v126, isUniquelyReferenced_nonNull_native);
      v53 = v104;
      swift_bridgeObjectRelease();
      sub_1AD0E0BF4((uint64_t)v126);
      if (v53)
      {
        v54 = (void *)sub_1AD63B678();
        swift_bridgeObjectRelease();
      }
      else
      {
        v54 = 0;
      }
      v44 = v102;
      v45 = v103;
      objc_msgSend(v25, sel_setUserInfo_, v54);

      if (!v44)
        goto LABEL_28;
      goto LABEL_21;
    }
    objc_msgSend(v25, sel_setUserInfo_, 0);
    swift_bridgeObjectRelease();
  }
  if (!v44)
    goto LABEL_28;
LABEL_21:
  if (v44 == 1)
  {
LABEL_34:
    sub_1AD63BE28();
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v55 = objc_msgSend(v25, sel_userInfo);
  if (v55)
  {
    v56 = v55;
    v57 = sub_1AD63B690();

    *(_QWORD *)&v116 = sub_1AD63B768();
    *((_QWORD *)&v116 + 1) = v58;
    v59 = MEMORY[0x1E0DEA968];
    sub_1AD63BD08();
    *((_QWORD *)&v117 + 1) = v59;
    *(_QWORD *)&v116 = v89;
    *((_QWORD *)&v116 + 1) = v44;
    sub_1AD002F7C(&v116, v115);
    v60 = swift_isUniquelyReferenced_nonNull_native();
    v104 = v57;
    sub_1AD43F578(v115, (uint64_t)v126, v60);
    v61 = v104;
    swift_bridgeObjectRelease();
    sub_1AD0E0BF4((uint64_t)v126);
    if (v61)
    {
      v62 = (void *)sub_1AD63B678();
      swift_bridgeObjectRelease();
    }
    else
    {
      v62 = 0;
    }
    v45 = v103;
    objc_msgSend(v25, sel_setUserInfo_, v62);

  }
  else
  {
    sub_1AD003F24(v89, v44);
    objc_msgSend(v25, sel_setUserInfo_, 0);
    swift_bridgeObjectRelease();
  }
LABEL_28:
  v131 = v112;
  v132 = v113;
  v133[0] = v114[0];
  *(_OWORD *)((char *)v133 + 9) = *(_OWORD *)((char *)v114 + 9);
  v128 = v109;
  v129 = v110;
  v130 = v111;
  v126[0] = v105;
  v126[1] = v106;
  v127[0] = v107;
  v127[1] = v108;
  if (!v14)
    goto LABEL_34;
  *(_QWORD *)&v116 = v94;
  *((_QWORD *)&v116 + 1) = v14;
  v64 = v96;
  v63 = v97;
  v65 = v95;
  (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v95, *MEMORY[0x1E0CAFD78], v97);
  sub_1AD335D58((uint64_t)&v105);
  sub_1AD0442F4();
  swift_bridgeObjectRetain();
  sub_1AD63AF10();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v63);
  swift_bridgeObjectRelease();
  v66 = v100;
  sub_1AD33190C(v46);
  if (v66)
  {

    v67 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
    v68 = v101;
    v67(v46, v101);
    v124 = v132;
    v125[0] = v133[0];
    *(_OWORD *)((char *)v125 + 9) = *(_OWORD *)((char *)v133 + 9);
    v120 = v128;
    v121 = v129;
    v122 = v130;
    v123 = v131;
    v116 = v126[0];
    v117 = v126[1];
    v118 = v127[0];
    v119 = v127[1];
    sub_1AD28B63C((uint64_t)&v116);
    v67((uint64_t)v45, v68);
  }
  else
  {
    v69 = v46;
    v70 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
    v71 = v101;
    v70(v69, v101);
    v123 = v131;
    v124 = v132;
    v125[0] = v133[0];
    *(_OWORD *)((char *)v125 + 9) = *(_OWORD *)((char *)v133 + 9);
    v120 = v128;
    v121 = v129;
    v122 = v130;
    v116 = v126[0];
    v117 = v126[1];
    v118 = v127[0];
    v119 = v127[1];
    sub_1AD28B63C((uint64_t)&v116);
    v72 = (void *)sub_1AD63AE98();
    *(_QWORD *)&v115[0] = 0;
    v73 = objc_msgSend(v25, sel_saveToURL_error_, v72, v115);

    if ((v73 & 1) != 0)
    {
      v74 = *(id *)&v115[0];
      v70((uint64_t)v45, v71);

    }
    else
    {
      v75 = *(id *)&v115[0];
      sub_1AD63AE50();

      swift_willThrow();
      v70((uint64_t)v45, v71);
    }
  }
}

uint64_t sub_1AD332B0C@<X0>(char *a1@<X8>)
{
  return sub_1AD333AC4(a1);
}

unint64_t sub_1AD332B18()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0xD00000000000001ALL;
}

uint64_t sub_1AD332B58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD433C8C(*a1, *a2);
}

uint64_t sub_1AD332B64()
{
  unsigned __int8 *v0;

  return sub_1AD14BC4C(*v0);
}

uint64_t sub_1AD332B70(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AD14CD50(a1, *v1);
}

uint64_t sub_1AD332B78@<X0>(char *a1@<X8>)
{
  return sub_1AD332B0C(a1);
}

void sub_1AD332B84(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000012;
  else
    v2 = 0xD00000000000001ALL;
  v3 = 0x80000001AD69D7B0;
  if (*v1)
    v3 = 0x80000001AD69D7D0;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AD332BC8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD332BD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_1AD332BF8())()
{
  return nullsub_1;
}

uint64_t sub_1AD332C08()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1AD332C10(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*sub_1AD332C18())()
{
  return nullsub_1;
}

uint64_t sub_1AD332C28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t sub_1AD332C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD004118(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD332C8C())()
{
  return nullsub_1;
}

uint64_t sub_1AD332C9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t sub_1AD332CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD004118(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1AD332D00())()
{
  return nullsub_1;
}

uint64_t sub_1AD332D10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AD332D4C + 4 * byte_1AD679250[*v0]))(0xD00000000000001ALL, 0x80000001AD69D7B0);
}

uint64_t sub_1AD332D4C()
{
  return 0x79646F42736168;
}

uint64_t sub_1AD332D64()
{
  return 0x6D49726174617661;
}

unint64_t sub_1AD332D88()
{
  return 0xD000000000000010;
}

uint64_t sub_1AD332DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD3357B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD332DC8()
{
  sub_1AD334BF8();
  return sub_1AD63C560();
}

uint64_t sub_1AD332DF0()
{
  sub_1AD334BF8();
  return sub_1AD63C56C();
}

uint64_t sub_1AD332E18(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDABF0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v22 = *((unsigned __int8 *)v1 + 8);
  v9 = v1[2];
  v18 = v1[3];
  v19 = v9;
  v10 = v1[4];
  v16 = v1[5];
  v17 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD334BF8();
  sub_1AD63C53C();
  v20 = v8;
  v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC00);
  sub_1AD334C80(&qword_1EECDAC08, (uint64_t (*)(void))sub_1AD334C3C, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_1AD63C068();
  if (!v2)
  {
    v12 = v18;
    v11 = v19;
    v14 = v16;
    v13 = v17;
    LOBYTE(v20) = 1;
    sub_1AD63C02C();
    v20 = v11;
    v21 = v12;
    v23 = 2;
    sub_1AD00FDFC();
    sub_1AD63C014();
    v20 = v13;
    v21 = v14;
    v23 = 3;
    sub_1AD63C014();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AD333014@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  unint64_t v22;
  int v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD334BF8();
  sub_1AD63C524();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1AD004118(0, 0xF000000000000000);
    v18 = 0;
    v19 = 0xF000000000000000;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC00);
    v24 = 0;
    sub_1AD334C80(&qword_1EECDAC20, (uint64_t (*)(void))sub_1AD334CF4, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1AD63BF54();
    v10 = v21;
    LOBYTE(v21) = 1;
    swift_bridgeObjectRetain();
    v11 = sub_1AD63BF18();
    v24 = 2;
    v20[1] = sub_1AD00F97C();
    sub_1AD63BF00();
    v23 = v11;
    v20[0] = a2;
    v12 = v21;
    v13 = v22;
    v24 = 3;
    sub_1AD00408C(v21, v22);
    sub_1AD63BF00();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v23 & 1;
    v15 = v21;
    v16 = v22;
    sub_1AD00408C(v21, v22);
    sub_1AD004118(0, 0xF000000000000000);
    swift_bridgeObjectRetain();
    sub_1AD00408C(v12, v13);
    sub_1AD00408C(v15, v16);
    sub_1AD004118(v15, v16);
    sub_1AD004118(v12, v13);
    swift_bridgeObjectRelease();
    v17 = v20[0];
    *(_QWORD *)v20[0] = v10;
    *(_BYTE *)(v17 + 8) = v14;
    *(_QWORD *)(v17 + 16) = v12;
    *(_QWORD *)(v17 + 24) = v13;
    *(_QWORD *)(v17 + 32) = v15;
    *(_QWORD *)(v17 + 40) = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_1AD004118(v12, v13);
    v18 = v15;
    v19 = v16;
  }
  return sub_1AD004118(v18, v19);
}

uint64_t sub_1AD333340@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD333014(a1, a2);
}

uint64_t sub_1AD333354(_QWORD *a1)
{
  return sub_1AD332E18(a1);
}

uint64_t sub_1AD333368(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(v1 + 472))
  {
    v4 = *(_QWORD *)(v1 + 504);
    v5 = *(_QWORD *)(v1 + 480);
    *(_QWORD *)&v56 = *(_QWORD *)(v1 + 472);
    *((_QWORD *)&v56 + 1) = v5;
    v57 = *(_OWORD *)(v1 + 488);
    *(_QWORD *)&v58 = v4;
    sub_1AD3338E8((uint64_t)&v56, (uint64_t)&v40);
    v6 = *((_QWORD *)&v40 + 1);
    v7 = v40;
  }
  else
  {
    v7 = 0;
    v6 = 0xF000000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDACB8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1AD679240;
  v9 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)v1;
  *(_QWORD *)(v8 + 72) = v9;
  v10 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v8 + 32) = 6579570;
  *(_QWORD *)(v8 + 40) = 0xE300000000000000;
  *(_QWORD *)(v8 + 56) = 0x6E65657267;
  *(_QWORD *)(v8 + 64) = 0xE500000000000000;
  *(_QWORD *)(v8 + 80) = 1702194274;
  *(_QWORD *)(v8 + 88) = 0xE400000000000000;
  *(_QWORD *)(v8 + 104) = 0x6168706C61;
  *(_QWORD *)(v8 + 112) = 0xE500000000000000;
  *(_QWORD *)(v8 + 120) = v10;
  v11 = sub_1AD439370(v8);
  v12 = *(_BYTE *)(v1 + 512);
  sub_1ACFF64C0(v1 + 32, (uint64_t)&v40, &qword_1ED2E2680);
  if (!*((_QWORD *)&v41 + 1))
    __break(1u);
  v68 = v52;
  v69 = v53;
  v70 = v54;
  v71 = v55;
  v64 = v48;
  v65 = v49;
  v66 = v50;
  v67 = v51;
  v60 = v44;
  v61 = v45;
  v62 = v46;
  v63 = v47;
  v56 = v40;
  v57 = v41;
  v58 = v42;
  v59 = v43;
  LOWORD(v39) = 0;
  sub_1AD00FD58(&v39);
  sub_1AD00E830(&v39, (uint64_t)&v34);
  sub_1AD59A20C(&v34);
  if (v2)
  {
    sub_1AD046A30(&v56);
    sub_1AD004118(v7, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v13;
    v33 = v14;
    sub_1AD046A30(&v56);
    sub_1AD63AE08();
    swift_allocObject();
    sub_1AD00408C(v7, v6);
    sub_1AD63ADFC();
    *(_QWORD *)&v34 = v11;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC00);
    sub_1AD334C80(&qword_1EECDAC08, (uint64_t (*)(void))sub_1AD334C3C, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    v31 = sub_1AD63ADF0();
    v32 = v17;
    swift_bridgeObjectRelease();
    swift_release();
    swift_allocObject();
    sub_1AD63ADFC();
    *(_QWORD *)&v34 = v11;
    BYTE8(v34) = v12;
    v35 = v15;
    v36 = v33;
    v37 = v7;
    v38 = v6;
    sub_1AD335DD4();
    v18 = sub_1AD63ADF0();
    v20 = v19;
    v21 = v18;
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDACC8);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1AD648170;
    *(_QWORD *)(v22 + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(v22 + 40) = 0x80000001AD69D7B0;
    *(_QWORD *)(v22 + 48) = v31;
    *(_QWORD *)(v22 + 56) = v32;
    *(_QWORD *)(v22 + 64) = 0xD000000000000012;
    *(_QWORD *)(v22 + 72) = 0x80000001AD69D7D0;
    *(_QWORD *)(v22 + 80) = v21;
    *(_QWORD *)(v22 + 88) = v20;
    sub_1AD0040A0(v31, v32);
    v30 = v20;
    sub_1AD0040A0(v21, v20);
    v23 = sub_1AD439480(v22);
    v24 = objc_msgSend(a1, sel__path);
    sub_1AD35644C(v23);
    swift_bridgeObjectRelease();
    v25 = (void *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v34 = 0;
    LOBYTE(v20) = objc_msgSend(v24, sel_storeUserInfo_error_, v25, &v34);

    if ((v20 & 1) != 0)
    {
      v26 = (id)v34;
      sub_1AD00412C(v21, v30);
      sub_1AD00412C(v31, v32);
      swift_bridgeObjectRelease();
      sub_1AD004118(v15, v33);
      v27 = v7;
      v28 = v6;
    }
    else
    {
      v29 = (id)v34;
      sub_1AD63AE50();

      swift_willThrow();
      sub_1AD004118(v7, v6);
      sub_1AD00412C(v31, v32);
      sub_1AD00412C(v21, v30);
      swift_bridgeObjectRelease();
      v27 = v15;
      v28 = v33;
    }
    sub_1AD004118(v27, v28);
    return sub_1AD004118(v7, v6);
  }
}

void sub_1AD3338E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];

  v24[0] = a2;
  v3 = sub_1AD63B03C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 24);
  v24[3] = *(_QWORD *)(a1 + 32);
  v9 = sub_1AD32F450(v5);
  if (v8)
  {
    v11 = v9;
    v12 = v10;
    swift_bridgeObjectRetain();
    blastdoor_AVTAvatarRecordGetClass();
    swift_getObjCClassMetadata();
    v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v14 = (void *)sub_1AD63AFA0();
    v15 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
    sub_1AD63B030();
    v16 = v11;
    v17 = (void *)sub_1AD63B018();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v18 = objc_msgSend(v13, sel_initWithAvatarData_identifier_orderDate_, v14, v15, v17);

    blastdoor_AVTAvatarRecordSerializerGetClass();
    swift_getObjCClassMetadata();
    v19 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_dataFromAvatarRecord_, v18);
    v20 = sub_1AD63AFB8();
    v22 = v21;
    sub_1AD00412C(v16, v12);
    swift_unknownObjectRelease();

    v23 = v24[0];
    *(_QWORD *)v24[0] = v20;
    *(_QWORD *)(v23 + 8) = v22;
  }
  else
  {
    sub_1AD63BE28();
    __break(1u);
  }
}

uint64_t sub_1AD333AB8@<X0>(char *a1@<X8>)
{
  return sub_1AD333AC4(a1);
}

uint64_t sub_1AD333AC4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD333B20()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD333B80@<X0>(char *a1@<X8>)
{
  return sub_1AD333AB8(a1);
}

uint64_t sub_1AD333B8C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD333B94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_1AD333BBC())()
{
  return nullsub_1;
}

uint64_t sub_1AD333BCC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD333BD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_1AD333BFC())()
{
  return nullsub_1;
}

uint64_t sub_1AD333C0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD333C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD333C6C())()
{
  return nullsub_1;
}

uint64_t sub_1AD333C7C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1AD333C84(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*sub_1AD333C8C())()
{
  return nullsub_1;
}

uint64_t sub_1AD333C9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AD333CDC + 4 * byte_1AD679254[a1]))(0xD00000000000001DLL, 0x80000001AD6A7E30);
}

uint64_t sub_1AD333CDC()
{
  uint64_t v0;

  return v0 + 2;
}

uint64_t sub_1AD333CF4()
{
  return 0x736C616974696E69;
}

unint64_t sub_1AD333D0C()
{
  return 0xD000000000000018;
}

uint64_t sub_1AD333D28()
{
  unsigned __int8 *v0;

  return sub_1AD333C9C(*v0);
}

uint64_t sub_1AD333D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD33598C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD333D54()
{
  sub_1AD334D38();
  return sub_1AD63C560();
}

uint64_t sub_1AD333D7C()
{
  sub_1AD334D38();
  return sub_1AD63C56C();
}

uint64_t sub_1AD333DA4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v11[4];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC30);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v13 = v1[2];
  v14 = v8;
  v12 = v1[3];
  v11[3] = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD334D38();
  sub_1AD63C53C();
  v16 = v9;
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC00);
  sub_1AD334C80(&qword_1EECDAC08, (uint64_t (*)(void))sub_1AD334C3C, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_1AD63C068();
  if (!v2)
  {
    v16 = v14;
    v15 = 1;
    sub_1AD63C068();
    LOBYTE(v16) = 2;
    sub_1AD63C020();
    LOBYTE(v16) = 3;
    sub_1AD63BFE4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AD333F84@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD334D38();
  sub_1AD63C524();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC00);
  v19 = 0;
  sub_1AD334C80(&qword_1EECDAC20, (uint64_t (*)(void))sub_1AD334CF4, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  sub_1AD63BF54();
  v9 = v20;
  v19 = 1;
  swift_bridgeObjectRetain();
  sub_1AD63BF54();
  v10 = v20;
  LOBYTE(v20) = 2;
  swift_bridgeObjectRetain();
  v16 = sub_1AD63BF0C();
  v17 = v11;
  LOBYTE(v20) = 3;
  swift_bridgeObjectRetain();
  v13 = sub_1AD63BED0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v17;
  v14 = v18;
  *v18 = v9;
  v14[1] = v10;
  v14[2] = v16;
  v14[3] = v15;
  *((_BYTE *)v14 + 32) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD334268@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD333F84(a1, a2);
}

uint64_t sub_1AD33427C(_QWORD *a1)
{
  return sub_1AD333DA4(a1);
}

uint64_t sub_1AD334290@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD3342E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AD334310 + 4 * byte_1AD679258[*v0]))(6579570, 0xE300000000000000);
}

uint64_t sub_1AD334310()
{
  return 0x6E65657267;
}

uint64_t sub_1AD334324()
{
  return 1702194274;
}

uint64_t sub_1AD334334()
{
  return 0x6168706C61;
}

void sub_1AD334348(char *a1)
{
  sub_1AD433910(*a1);
}

void sub_1AD334354()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1AD63C4AC();
  __asm { BR              X9 }
}

uint64_t sub_1AD334398()
{
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

void sub_1AD3343F8()
{
  __asm { BR              X10 }
}

uint64_t sub_1AD33442C()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

void sub_1AD334478()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1AD63C4AC();
  __asm { BR              X9 }
}

uint64_t sub_1AD3344B8()
{
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD334518@<X0>(char *a1@<X8>)
{
  return sub_1AD334290(a1);
}

uint64_t sub_1AD334524()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1AD33454C + 4 * byte_1AD679268[*v0]))();
}

void sub_1AD33454C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E65657267;
  a1[1] = 0xE500000000000000;
}

void sub_1AD334564(_QWORD *a1@<X8>)
{
  *a1 = 1702194274;
  a1[1] = 0xE400000000000000;
}

void sub_1AD334578(_QWORD *a1@<X8>)
{
  *a1 = 0x6168706C61;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1AD334590(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  unsigned __int8 v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  char v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  id v32[4];
  char v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(v1 + 32);
  v2 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  v28 = *(void **)(v1 + 64);
  v29 = *(void **)(v1 + 72);
  v27 = *(_BYTE *)(v1 + 80);
  sub_1AD63AE08();
  swift_allocObject();
  sub_1AD63ADFC();
  sub_1AD63ADE4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDACB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD679240;
  *(_QWORD *)(inited + 32) = 6579570;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = 0x6E65657267;
  *(_QWORD *)(inited + 64) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = v2;
  *(_QWORD *)(inited + 80) = 1702194274;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  *(_QWORD *)(inited + 96) = v5;
  *(_QWORD *)(inited + 104) = 0x6168706C61;
  *(_QWORD *)(inited + 112) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = v4;
  sub_1AD439370(inited);
  v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AD679240;
  *(_QWORD *)(v7 + 32) = 6579570;
  *(_QWORD *)(v7 + 40) = 0xE300000000000000;
  *(_QWORD *)(v7 + 48) = v3;
  *(_QWORD *)(v7 + 56) = 0x6E65657267;
  *(_QWORD *)(v7 + 64) = 0xE500000000000000;
  *(_QWORD *)(v7 + 72) = v2;
  *(_QWORD *)(v7 + 80) = 1702194274;
  *(_QWORD *)(v7 + 88) = 0xE400000000000000;
  *(_QWORD *)(v7 + 96) = v5;
  *(_QWORD *)(v7 + 104) = 0x6168706C61;
  *(_QWORD *)(v7 + 112) = 0xE500000000000000;
  *(_QWORD *)(v7 + 120) = v4;
  v8 = (void *)sub_1AD439370(v7);
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1AD63ADFC();
  v32[0] = v8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC00);
  sub_1AD334C80(&qword_1EECDAC08, (uint64_t (*)(void))sub_1AD334C3C, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  v9 = sub_1AD63ADF0();
  if (v30)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v11 = v9;
    v12 = v10;
    swift_bridgeObjectRelease();
    swift_release();
    swift_allocObject();
    sub_1AD63ADFC();
    v32[1] = v8;
    v32[2] = v28;
    v32[3] = v29;
    v33 = v27;
    sub_1AD335E18();
    v13 = sub_1AD63ADF0();
    v31 = v14;
    v15 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDACC8);
    v16 = swift_initStackObject();
    *(_OWORD *)(v16 + 16) = xmmword_1AD648170;
    *(_QWORD *)(v16 + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(v16 + 40) = 0x80000001AD69D7B0;
    *(_QWORD *)(v16 + 48) = v11;
    *(_QWORD *)(v16 + 56) = v12;
    *(_QWORD *)(v16 + 64) = 0xD000000000000012;
    *(_QWORD *)(v16 + 72) = 0x80000001AD69D7D0;
    *(_QWORD *)(v16 + 80) = v15;
    *(_QWORD *)(v16 + 88) = v31;
    sub_1AD0040A0(v11, v12);
    sub_1AD0040A0(v15, v31);
    v17 = sub_1AD439480(v16);
    v18 = objc_msgSend(a1, sel__path);
    sub_1AD35644C(v17);
    swift_bridgeObjectRelease();
    v19 = (void *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    v32[0] = 0;
    v20 = objc_msgSend(v18, sel_storeUserInfo_error_, v19, v32);

    if ((v20 & 1) != 0)
    {
      v21 = v32[0];
      sub_1AD00412C(v15, v31);
      v22 = v11;
      v23 = v12;
    }
    else
    {
      v24 = v32[0];
      sub_1AD63AE50();

      swift_willThrow();
      sub_1AD00412C(v11, v12);
      v22 = v15;
      v23 = v31;
    }
    sub_1AD00412C(v22, v23);
  }
  return swift_release();
}

_QWORD *sub_1AD334A1C(void *a1)
{
  uint64_t v1;
  _BYTE v4[544];
  _OWORD __dst[34];
  _OWORD __src[34];
  char v7;

  sub_1AD2A15B0(v1, (uint64_t)__src);
  if (v7)
  {
    if (v7 == 1)
    {
      memcpy(__dst, __src, 0x201uLL);
      sub_1AD333368(a1);
      return sub_1AD2A1674(__dst);
    }
    else
    {
      sub_1AD334590(a1);
      return (_QWORD *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    memcpy(__dst, __src, sizeof(__dst));
    memcpy(v4, __src, sizeof(v4));
    sub_1AD3320D8(a1);
    return sub_1AD28B428(__dst);
  }
}

uint64_t sub_1AD334B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PosterArchive();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD334B78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PosterArchive();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD334BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PosterArchive();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AD334BF8()
{
  unint64_t result;

  result = qword_1EECDABF8;
  if (!qword_1EECDABF8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6797E0, &type metadata for AvatarPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDABF8);
  }
  return result;
}

unint64_t sub_1AD334C3C()
{
  unint64_t result;

  result = qword_1EECDAC10;
  if (!qword_1EECDAC10)
  {
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0DEF050], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EECDAC10);
  }
  return result;
}

uint64_t sub_1AD334C80(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EECDAC00);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x1AF44BDF0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AD334CF4()
{
  unint64_t result;

  result = qword_1EECDAC28;
  if (!qword_1EECDAC28)
  {
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0DEF078], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EECDAC28);
  }
  return result;
}

unint64_t sub_1AD334D38()
{
  unint64_t result;

  result = qword_1EECDAC38;
  if (!qword_1EECDAC38)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679790, &type metadata for MonogramPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAC38);
  }
  return result;
}

unint64_t sub_1AD334D80()
{
  unint64_t result;

  result = qword_1EECDAC48;
  if (!qword_1EECDAC48)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679280, &type metadata for AvatarPosterUserInfoKey);
    atomic_store(result, (unint64_t *)&qword_1EECDAC48);
  }
  return result;
}

unint64_t sub_1AD334DC8()
{
  unint64_t result;

  result = qword_1EECDAC50;
  if (!qword_1EECDAC50)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679370, &type metadata for MonogramPosterUserInfoKey);
    atomic_store(result, (unint64_t *)&qword_1EECDAC50);
  }
  return result;
}

unint64_t sub_1AD334E10()
{
  unint64_t result;

  result = qword_1EECDAC58;
  if (!qword_1EECDAC58)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679460, &type metadata for MonogramPosterColorDescriptionKey);
    atomic_store(result, (unint64_t *)&qword_1EECDAC58);
  }
  return result;
}

uint64_t dispatch thunk of static BlastDoorAVTBridging.dataFor(descriptor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for AvatarPosterUserInfoKey()
{
  return &type metadata for AvatarPosterUserInfoKey;
}

uint64_t destroy for AvatarPosterConfiguration(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;

  result = swift_bridgeObjectRelease();
  v3 = a1[3];
  if (v3 >> 60 != 15)
    result = sub_1AD00412C(a1[2], v3);
  v4 = a1[5];
  if (v4 >> 60 != 15)
    return sub_1AD00412C(a1[4], v4);
  return result;
}

uint64_t initializeWithCopy for AvatarPosterConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    v6 = *(_QWORD *)v4;
    sub_1AD0040A0(v6, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v5;
  }
  v7 = (uint64_t *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v7;
  }
  else
  {
    v9 = *v7;
    sub_1AD0040A0(*v7, v8);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t assignWithCopy for AvatarPosterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = (uint64_t *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) >> 60 == 15)
  {
    if (v5 >> 60 != 15)
    {
      v6 = *v4;
      sub_1AD0040A0(*v4, *(_QWORD *)(a2 + 24));
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v5;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 16);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v7 = *v4;
  sub_1AD0040A0(*v4, *(_QWORD *)(a2 + 24));
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v5;
  sub_1AD00412C(v8, v9);
LABEL_8:
  v10 = (uint64_t *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) >> 60 != 15)
  {
    if (v11 >> 60 != 15)
    {
      v13 = *v10;
      sub_1AD0040A0(*v10, v11);
      v14 = *(_QWORD *)(a1 + 32);
      v15 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v13;
      *(_QWORD *)(a1 + 40) = v11;
      sub_1AD00412C(v14, v15);
      return a1;
    }
    sub_1AD007EC0(a1 + 32);
    goto LABEL_13;
  }
  if (v11 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v10;
    return a1;
  }
  v12 = *v10;
  sub_1AD0040A0(*v10, v11);
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v11;
  return a1;
}

uint64_t assignWithTake for AvatarPosterConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (v5 >> 60 == 15)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 24);
  if (v6 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v4;
    goto LABEL_6;
  }
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v4;
  *(_QWORD *)(a1 + 24) = v6;
  sub_1AD00412C(v7, v5);
LABEL_6:
  v8 = (_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  if (v9 >> 60 != 15)
  {
    v10 = *(_QWORD *)(a2 + 40);
    if (v10 >> 60 != 15)
    {
      v11 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *v8;
      *(_QWORD *)(a1 + 40) = v10;
      sub_1AD00412C(v11, v9);
      return a1;
    }
    sub_1AD007EC0(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
  return a1;
}

uint64_t getEnumTagSinglePayload for AvatarPosterConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvatarPosterConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AvatarPosterConfiguration()
{
  return &type metadata for AvatarPosterConfiguration;
}

uint64_t _s9BlastDoor23AvatarPosterUserInfoKeyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD33529C + 4 * byte_1AD679271[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD3352D0 + 4 * byte_1AD67926C[v4]))();
}

uint64_t sub_1AD3352D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3352D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3352E0);
  return result;
}

uint64_t sub_1AD3352EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD3352F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD3352F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD335300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MonogramPosterUserInfoKey()
{
  return &type metadata for MonogramPosterUserInfoKey;
}

uint64_t destroy for MonogramPosterConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MonogramPosterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MonogramPosterConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for MonogramPosterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MonogramPosterConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MonogramPosterConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramPosterConfiguration()
{
  return &type metadata for MonogramPosterConfiguration;
}

ValueMetadata *type metadata accessor for MonogramPosterColorDescriptionKey()
{
  return &type metadata for MonogramPosterColorDescriptionKey;
}

ValueMetadata *type metadata accessor for MonogramPosterConfiguration.CodingKeys()
{
  return &type metadata for MonogramPosterConfiguration.CodingKeys;
}

uint64_t _s9BlastDoor33MonogramPosterColorDescriptionKeyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD335584 + 4 * byte_1AD67927B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD3355B8 + 4 * byte_1AD679276[v4]))();
}

uint64_t sub_1AD3355B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3355C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3355C8);
  return result;
}

uint64_t sub_1AD3355D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD3355DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD3355E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3355E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AvatarPosterConfiguration.CodingKeys()
{
  return &type metadata for AvatarPosterConfiguration.CodingKeys;
}

unint64_t sub_1AD335608()
{
  unint64_t result;

  result = qword_1EECDAC60;
  if (!qword_1EECDAC60)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6796B0, &type metadata for AvatarPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAC60);
  }
  return result;
}

unint64_t sub_1AD335650()
{
  unint64_t result;

  result = qword_1EECDAC68;
  if (!qword_1EECDAC68)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679768, &type metadata for MonogramPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAC68);
  }
  return result;
}

unint64_t sub_1AD335698()
{
  unint64_t result;

  result = qword_1EECDAC70;
  if (!qword_1EECDAC70)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6796D8, &type metadata for MonogramPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAC70);
  }
  return result;
}

unint64_t sub_1AD3356E0()
{
  unint64_t result;

  result = qword_1EECDAC78;
  if (!qword_1EECDAC78)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679700, &type metadata for MonogramPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAC78);
  }
  return result;
}

unint64_t sub_1AD335728()
{
  unint64_t result;

  result = qword_1EECDAC80;
  if (!qword_1EECDAC80)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679620, &type metadata for AvatarPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAC80);
  }
  return result;
}

unint64_t sub_1AD335770()
{
  unint64_t result;

  result = qword_1EECDAC88;
  if (!qword_1EECDAC88)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679648, &type metadata for AvatarPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDAC88);
  }
  return result;
}

uint64_t sub_1AD3357B4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AD69D7B0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79646F42736168 && a2 == 0xE700000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D49726174617661 && a2 == 0xEF61746144656761 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A7E10)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1AD33598C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AD6A7E30 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AD69D7B0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736C616974696E69 && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AD6A7E50)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1AD335B34(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 184);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

unint64_t sub_1AD335B4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EECDAC90;
  if (!qword_1EECDAC90)
  {
    v1 = sub_1AD63AF28();
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1EECDAC90);
  }
  return result;
}

_QWORD *sub_1AD335B94(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26]);
  return a1;
}

uint64_t sub_1AD335C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t result;

  if (a24)
  {
    sub_1AD335CF4(a4, a5, a6, a7, a8, a9, a10);
    sub_1AD335D08(a11, a12);
    swift_retain();
    return sub_1AD003E48(a26, a27);
  }
  return result;
}

uint64_t sub_1AD335CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a7 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1AD335D08(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD335D3C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 209))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AD335D58(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD335D80(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PhotosPoster.ParallaxLayer(a2, a1);
  return a2;
}

void sub_1AD335DBC(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1AD3314FC(a1, *(double **)(v2 + 16), a2);
}

unint64_t sub_1AD335DD4()
{
  unint64_t result;

  result = qword_1EECDACC0;
  if (!qword_1EECDACC0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679348, &type metadata for AvatarPosterConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EECDACC0);
  }
  return result;
}

unint64_t sub_1AD335E18()
{
  unint64_t result;

  result = qword_1EECDACD0;
  if (!qword_1EECDACD0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679438, &type metadata for MonogramPosterConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EECDACD0);
  }
  return result;
}

uint64_t PreviewAudio.Constraints.unusedContext.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD335E6C()
{
  return 0x6F43646573756E75;
}

uint64_t sub_1AD335E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F43646573756E75 && a2 == 0xED0000747865746ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AD335F48()
{
  sub_1AD336080();
  return sub_1AD63C560();
}

uint64_t sub_1AD335F70()
{
  sub_1AD336080();
  return sub_1AD63C56C();
}

uint64_t PreviewAudio.Constraints.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAE00);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD336080();
  sub_1AD63C53C();
  sub_1AD63C080();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1AD336080()
{
  unint64_t result;

  result = qword_1ED2E26F8;
  if (!qword_1ED2E26F8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679B20, &type metadata for PreviewAudio.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E26F8);
  }
  return result;
}

uint64_t PreviewAudio.Constraints.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAE10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD336080();
  sub_1AD63C524();
  if (!v2)
  {
    v9 = sub_1AD63BF6C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AD3361C8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PreviewAudio.Constraints.init(from:)(a1, a2);
}

uint64_t sub_1AD3361DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAE00);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD336080();
  sub_1AD63C53C();
  sub_1AD63C080();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

double PreviewAudio.duration.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void PreviewAudio.duration.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*PreviewAudio.duration.modify())()
{
  return nullsub_1;
}

uint64_t PreviewAudio.powerLevels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PreviewAudio.powerLevels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*PreviewAudio.powerLevels.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD336324()
{
  _BYTE *v0;

  if (*v0)
    return 0x76654C7265776F70;
  else
    return 0x6E6F697461727564;
}

uint64_t sub_1AD336368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD336D0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD33638C()
{
  sub_1AD33653C();
  return sub_1AD63C560();
}

uint64_t sub_1AD3363B4()
{
  sub_1AD33653C();
  return sub_1AD63C56C();
}

uint64_t PreviewAudio.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAE18);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD33653C();
  sub_1AD63C53C();
  v12 = 0;
  sub_1AD63C038();
  if (!v2)
  {
    v11 = v8;
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2738);
    sub_1AD336714(&qword_1ED2DAE08, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEAF10]);
    sub_1AD63C068();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AD33653C()
{
  unint64_t result;

  result = qword_1ED2E26E0;
  if (!qword_1ED2E26E0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679AD0, &type metadata for PreviewAudio.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E26E0);
  }
  return result;
}

uint64_t PreviewAudio.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DADF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD33653C();
  sub_1AD63C524();
  if (!v2)
  {
    v15 = 0;
    sub_1AD63BF24();
    v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2738);
    v13[15] = 1;
    sub_1AD336714(&qword_1ED2DADF0, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEAF40]);
    sub_1AD63BF54();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v14;
    *a2 = v10;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AD336714(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2E2738);
    v8 = a2;
    result = MEMORY[0x1AF44BDF0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD336774@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PreviewAudio.init(from:)(a1, a2);
}

uint64_t sub_1AD336788(_QWORD *a1)
{
  return PreviewAudio.encode(to:)(a1);
}

BlastDoor::PreviewAudio __swiftcall PreviewAudio.init(durationValue:powerLevelValues:)(Swift::Double durationValue, Swift::OpaquePointer powerLevelValues)
{
  uint64_t v2;
  BlastDoor::PreviewAudio result;

  *(Swift::Double *)v2 = durationValue;
  *(Swift::OpaquePointer *)(v2 + 8) = powerLevelValues;
  result.duration = durationValue;
  result.powerLevels = powerLevelValues;
  return result;
}

void PreviewAudio.Constraints.init()(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

unint64_t sub_1AD3367B4()
{
  unint64_t result;

  result = qword_1ED2E2718;
  if (!qword_1ED2E2718)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PreviewAudio.Constraints, &type metadata for PreviewAudio.Constraints);
    atomic_store(result, (unint64_t *)&qword_1ED2E2718);
  }
  return result;
}

unint64_t sub_1AD3367FC()
{
  unint64_t result;

  result = qword_1ED2E2710;
  if (!qword_1ED2E2710)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PreviewAudio.Constraints, &type metadata for PreviewAudio.Constraints);
    atomic_store(result, (unint64_t *)&qword_1ED2E2710);
  }
  return result;
}

unint64_t sub_1AD336840(uint64_t a1)
{
  unint64_t result;

  result = sub_1AD336864();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AD336864()
{
  unint64_t result;

  result = qword_1ED2E2730;
  if (!qword_1ED2E2730)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PreviewAudio, &type metadata for PreviewAudio);
    atomic_store(result, (unint64_t *)&qword_1ED2E2730);
  }
  return result;
}

unint64_t sub_1AD3368A8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD3368D4();
  result = sub_1AD336918();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD3368D4()
{
  unint64_t result;

  result = qword_1ED2E2728;
  if (!qword_1ED2E2728)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PreviewAudio, &type metadata for PreviewAudio);
    atomic_store(result, (unint64_t *)&qword_1ED2E2728);
  }
  return result;
}

unint64_t sub_1AD336918()
{
  unint64_t result;

  result = qword_1ED2E2720;
  if (!qword_1ED2E2720)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PreviewAudio, &type metadata for PreviewAudio);
    atomic_store(result, (unint64_t *)&qword_1ED2E2720);
  }
  return result;
}

_QWORD *assignWithCopy for PreviewAudio(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PreviewAudio(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PreviewAudio()
{
  return &type metadata for PreviewAudio;
}

ValueMetadata *type metadata accessor for PreviewAudio.Constraints()
{
  return &type metadata for PreviewAudio.Constraints;
}

uint64_t storeEnumTagSinglePayload for PreviewAudio.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD336A40 + 4 * byte_1AD679835[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD336A74 + 4 * byte_1AD679830[v4]))();
}

uint64_t sub_1AD336A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD336A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD336A84);
  return result;
}

uint64_t sub_1AD336A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD336A98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD336A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD336AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewAudio.CodingKeys()
{
  return &type metadata for PreviewAudio.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PreviewAudio.Constraints.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AD336B00 + 4 * byte_1AD67983A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AD336B20 + 4 * byte_1AD67983F[v4]))();
}

_BYTE *sub_1AD336B00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AD336B20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD336B28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD336B30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD336B38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD336B40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PreviewAudio.Constraints.CodingKeys()
{
  return &type metadata for PreviewAudio.Constraints.CodingKeys;
}

unint64_t sub_1AD336B60()
{
  unint64_t result;

  result = qword_1EECDACD8;
  if (!qword_1EECDACD8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6799F0, &type metadata for PreviewAudio.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDACD8);
  }
  return result;
}

unint64_t sub_1AD336BA8()
{
  unint64_t result;

  result = qword_1EECDACE0;
  if (!qword_1EECDACE0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679AA8, &type metadata for PreviewAudio.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDACE0);
  }
  return result;
}

unint64_t sub_1AD336BF0()
{
  unint64_t result;

  result = qword_1ED2E26F0;
  if (!qword_1ED2E26F0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679A18, &type metadata for PreviewAudio.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E26F0);
  }
  return result;
}

unint64_t sub_1AD336C38()
{
  unint64_t result;

  result = qword_1ED2E26E8;
  if (!qword_1ED2E26E8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679A40, &type metadata for PreviewAudio.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E26E8);
  }
  return result;
}

unint64_t sub_1AD336C80()
{
  unint64_t result;

  result = qword_1ED2E2708;
  if (!qword_1ED2E2708)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679960, &type metadata for PreviewAudio.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2708);
  }
  return result;
}

unint64_t sub_1AD336CC8()
{
  unint64_t result;

  result = qword_1ED2E2700;
  if (!qword_1ED2E2700)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679988, &type metadata for PreviewAudio.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2700);
  }
  return result;
}

uint64_t sub_1AD336D0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x76654C7265776F70 && a2 == 0xEB00000000736C65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AD336E14@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[7];
  v2 = v1[8];
  v4 = v1[9];
  v5 = v1[10];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD285EE4(v4, v5);
}

__n128 sub_1AD336E48(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  swift_release();
  sub_1AD009794(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 56) = *a1;
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  return result;
}

uint64_t sub_1AD336E9C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[16];
  v4 = v1[17];
  v3 = v1[18];
  *a1 = v1[15];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD336ECC(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 120) = *a1;
  *(_QWORD *)(v1 + 136) = v3;
  *(_QWORD *)(v1 + 144) = v4;
  return result;
}

uint64_t sub_1AD336F1C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[21];
  v4 = v1[22];
  v3 = v1[23];
  *a1 = v1[20];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD336F4C(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  v1[10] = *a1;
  v1[11].n128_u64[0] = v3;
  v1[11].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD336F9C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 72);
    sub_1AD00408C(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD337020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 144))
  {
    v1 = *(_QWORD *)(v0 + 136);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD337098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 184))
  {
    v1 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD337110@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!(_BYTE)result)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD337130()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD337138()
{
  sub_1AD338FE0();
  return sub_1AD63B954();
}

uint64_t sub_1AD337194()
{
  sub_1AD338FE0();
  return sub_1AD63B8F4();
}

void sub_1AD3371E0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *sub_1AD3371EC(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*sub_1AD3371F8())()
{
  return nullsub_1;
}

uint64_t sub_1AD337208()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1AD337210(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*sub_1AD337218())()
{
  return nullsub_1;
}

uint64_t sub_1AD337228()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AD337234(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD337244())()
{
  return nullsub_1;
}

uint64_t sub_1AD337254()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t sub_1AD33725C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = result;
  return result;
}

uint64_t (*sub_1AD337264())()
{
  return nullsub_1;
}

uint64_t sub_1AD337274()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t sub_1AD33727C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 26) = result;
  return result;
}

uint64_t (*sub_1AD337284())()
{
  return nullsub_1;
}

uint64_t sub_1AD337294()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 27);
}

uint64_t sub_1AD33729C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 27) = result;
  return result;
}

uint64_t (*sub_1AD3372A4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3372B4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 28);
}

uint64_t sub_1AD3372BC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 28) = result;
  return result;
}

uint64_t (*sub_1AD3372C4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3372D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t sub_1AD337304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD004118(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1AD337338())()
{
  return nullsub_1;
}

uint64_t sub_1AD337348()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1AD337350(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*sub_1AD337358())()
{
  return nullsub_1;
}

uint64_t sub_1AD337368@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 80);
  if (v2 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 72);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD00408C(v3, v2);
  }
  return result;
}

uint64_t sub_1AD3373D4(uint64_t a1, uint64_t a2)
{
  return sub_1AD003258(a1, a2);
}

uint64_t (*sub_1AD3373F4(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 80);
  if (v2 >> 60 == 11)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 72);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD00408C(v4, v2);
    return sub_1AD337480;
  }
  return result;
}

uint64_t sub_1AD337480(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003258(*a1, v3);
  sub_1AD00408C(*a1, v3);
  sub_1AD003258(v2, v3);
  return sub_1AD004118(v2, v3);
}

uint64_t sub_1AD3374EC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[9];
  v8 = a2[10];
  swift_retain();
  sub_1AD285EE4(v5, v6);
  swift_release();
  result = sub_1AD009794(v7, v8);
  a2[7] = v4;
  a2[8] = v3;
  a2[9] = v5;
  a2[10] = v6;
  return result;
}

void (*sub_1AD337560(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[7];
  v4 = v1[8];
  v6 = v1[9];
  v7 = v1[10];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD285EE4(v6, v7);
  return sub_1AD3375C4;
}

void sub_1AD3375C4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[9];
  v9 = v4[10];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD285EE4(v7, v3);
    swift_release();
    sub_1AD009794(v8, v9);
    v4[7] = v6;
    v4[8] = v5;
    v4[9] = v7;
    v4[10] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD009794(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD009794(v8, v9);
    v4[7] = v6;
    v4[8] = v5;
    v4[9] = v7;
    v4[10] = v3;
  }
  free(v2);
}

uint64_t sub_1AD337684()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_1AD33768C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 88) = result;
  return result;
}

uint64_t (*sub_1AD337694())()
{
  return nullsub_1;
}

uint64_t sub_1AD3376A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + 104));
  return v1;
}

uint64_t sub_1AD3376D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD004118(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*sub_1AD337708())()
{
  return nullsub_1;
}

uint64_t sub_1AD337718()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_1AD337720(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 112) = result;
  return result;
}

uint64_t (*sub_1AD337728())()
{
  return nullsub_1;
}

uint64_t sub_1AD337738@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 144);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 136);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD3377A0(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD3377C0(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 144);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 136);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD337848;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD337848(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD3378AC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[15] = v4;
  a2[16] = v3;
  a2[17] = v6;
  a2[18] = v5;
  return result;
}

void (*sub_1AD337918(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[16];
  v6 = v1[17];
  v5 = v1[18];
  *v3 = v1[15];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD33797C;
}

void sub_1AD33797C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[15] = v6;
    v4[16] = v5;
    v4[17] = v7;
    v4[18] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[15] = v6;
    v4[16] = v5;
    v4[17] = v7;
    v4[18] = v3;
  }
  free(v2);
}

uint64_t sub_1AD337A24()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t sub_1AD337A2C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 152) = result;
  return result;
}

uint64_t (*sub_1AD337A34())()
{
  return nullsub_1;
}

uint64_t sub_1AD337A44@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 184);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 176);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD337AAC(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD337ACC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 184);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 176);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD337B54;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD337B54(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD337BB8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[20] = v4;
  a2[21] = v3;
  a2[22] = v6;
  a2[23] = v5;
  return result;
}

void (*sub_1AD337C24(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[21];
  v6 = v1[22];
  v5 = v1[23];
  *v3 = v1[20];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD337C88;
}

void sub_1AD337C88(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[20] = v6;
    v4[21] = v5;
    v4[22] = v7;
    v4[23] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[20] = v6;
    v4[21] = v5;
    v4[22] = v7;
    v4[23] = v3;
  }
  free(v2);
}

uint64_t sub_1AD337D30()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 192);
}

uint64_t sub_1AD337D38(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 192) = result;
  return result;
}

uint64_t (*sub_1AD337D40())()
{
  return nullsub_1;
}

uint64_t sub_1AD337D50()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 193);
}

uint64_t sub_1AD337D58(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 193) = result;
  return result;
}

uint64_t (*sub_1AD337D60())()
{
  return nullsub_1;
}

uint64_t sub_1AD337D70()
{
  uint64_t v0;

  sub_1AD337E10();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD337DC0()
{
  uint64_t v0;

  sub_1AD337E10();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD337E10()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  int v45;
  int v46;
  _OWORD v47[2];
  __int128 v48;
  uint64_t v49;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v3 = *((_QWORD *)v0 + 2);
  v4 = v0[24];
  v5 = v0[25];
  v6 = v0[26];
  v36 = v0[27];
  v37 = v0[28];
  v7 = *((_QWORD *)v0 + 5);
  v8 = *((_QWORD *)v0 + 10);
  v33 = *((_QWORD *)v0 + 4);
  v34 = *((_QWORD *)v0 + 9);
  v38 = v0[48];
  v39 = v0[88];
  v9 = *((_QWORD *)v0 + 13);
  v35 = *((_QWORD *)v0 + 12);
  v41 = v0[112];
  v42 = *(_OWORD *)(v0 + 136);
  v43 = v0[152];
  v44 = *((_QWORD *)v0 + 22);
  v40 = *((_QWORD *)v0 + 23);
  v45 = v0[192];
  v46 = v0[193];
  v49 = MEMORY[0x1E0DEDE70];
  LOBYTE(v48) = v1;
  sub_1AD002F7C(&v48, v47);
  v10 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v47, 116, 0xE100000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v12 = MEMORY[0x1E0DEBB98];
  v49 = MEMORY[0x1E0DEBB98];
  *(_QWORD *)&v48 = v2;
  sub_1AD002F7C(&v48, v47);
  v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v47, 118, 0xE100000000000000, v13);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    v49 = v12;
    *(_QWORD *)&v48 = v3;
    sub_1AD002F7C(&v48, v47);
    v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 26723, 0xE200000000000000, v14);
    swift_bridgeObjectRelease();
  }
  v15 = MEMORY[0x1E0DEAFA0];
  if (v5 != 2)
  {
    v49 = MEMORY[0x1E0DEAFA0];
    LOBYTE(v48) = v5 & 1;
    sub_1AD002F7C(&v48, v47);
    v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 25956, 0xE200000000000000, v16);
    swift_bridgeObjectRelease();
  }
  if (v6 != 2)
  {
    v49 = v15;
    LOBYTE(v48) = v6 & 1;
    sub_1AD002F7C(&v48, v47);
    v17 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 25715, 0xE200000000000000, v17);
    swift_bridgeObjectRelease();
  }
  if (v36 != 2)
  {
    v49 = v15;
    LOBYTE(v48) = v36 & 1;
    sub_1AD002F7C(&v48, v47);
    v18 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 26989, 0xE200000000000000, v18);
    swift_bridgeObjectRelease();
  }
  if (v37 != 2)
  {
    v49 = v15;
    LOBYTE(v48) = v37 & 1;
    sub_1AD002F7C(&v48, v47);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 7500147, 0xE300000000000000, v19);
    swift_bridgeObjectRelease();
  }
  if (v7 >> 60 != 15)
  {
    v49 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v48 = v33;
    *((_QWORD *)&v48 + 1) = v7;
    sub_1AD002F7C(&v48, v47);
    sub_1AD00408C(v33, v7);
    sub_1AD0040A0(v33, v7);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 98, 0xE100000000000000, v20);
    swift_bridgeObjectRelease();
    sub_1AD004118(v33, v7);
  }
  if (v38 != 2)
  {
    v49 = v15;
    LOBYTE(v48) = v38 & 1;
    sub_1AD002F7C(&v48, v47);
    v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 29810, 0xE200000000000000, v21);
    swift_bridgeObjectRelease();
  }
  if (v8 >> 60 == 11)
    goto LABEL_31;
  if (v8 >> 60 != 15)
  {
    v49 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v48 = v34;
    *((_QWORD *)&v48 + 1) = v8;
    sub_1AD002F7C(&v48, v47);
    sub_1AD285EE4(v34, v8);
    sub_1AD0040A0(v34, v8);
    v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 0xD00000000000001ALL, 0x80000001AD6A7F30, v22);
    swift_bridgeObjectRelease();
    sub_1AD009794(v34, v8);
  }
  if (v39 != 2)
  {
    v49 = v15;
    LOBYTE(v48) = v39 & 1;
    sub_1AD002F7C(&v48, v47);
    v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 25970, 0xE200000000000000, v23);
    swift_bridgeObjectRelease();
  }
  if (v9 >> 60 != 15)
  {
    v49 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v48 = v35;
    *((_QWORD *)&v48 + 1) = v9;
    sub_1AD002F7C(&v48, v47);
    sub_1AD00408C(v35, v9);
    sub_1AD0040A0(v35, v9);
    v24 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 99, 0xE100000000000000, v24);
    swift_bridgeObjectRelease();
    sub_1AD004118(v35, v9);
  }
  if (v41 != 2)
  {
    v49 = v15;
    LOBYTE(v48) = v41 & 1;
    sub_1AD002F7C(&v48, v47);
    v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 1835819888, 0xE400000000000000, v25);
    swift_bridgeObjectRelease();
  }
  if (!*((_QWORD *)&v42 + 1))
    goto LABEL_31;
  v26 = MEMORY[0x1E0DEA968];
  v49 = MEMORY[0x1E0DEA968];
  v48 = v42;
  sub_1AD002F7C(&v48, v47);
  swift_bridgeObjectRetain();
  v27 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v47, 112, 0xE100000000000000, v27);
  swift_bridgeObjectRelease();
  v49 = v15;
  LOBYTE(v48) = v43;
  sub_1AD002F7C(&v48, v47);
  v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v47, 100, 0xE100000000000000, v28);
  swift_bridgeObjectRelease();
  if (v40)
  {
    v49 = v26;
    *(_QWORD *)&v48 = v44;
    *((_QWORD *)&v48 + 1) = v40;
    sub_1AD002F7C(&v48, v47);
    swift_bridgeObjectRetain();
    v29 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v47, 115, 0xE100000000000000, v29);
    swift_bridgeObjectRelease();
    if (v45 != 2)
    {
      v49 = v15;
      LOBYTE(v48) = v45 & 1;
      sub_1AD002F7C(&v48, v47);
      v30 = swift_isUniquelyReferenced_nonNull_native();
      sub_1AD43F448(v47, 6579056, 0xE300000000000000, v30);
      swift_bridgeObjectRelease();
    }
    if (v46 != 2)
    {
      v49 = v15;
      LOBYTE(v48) = v46 & 1;
      sub_1AD002F7C(&v48, v47);
      v31 = swift_isUniquelyReferenced_nonNull_native();
      sub_1AD43F448(v47, 25443, 0xE200000000000000, v31);
      swift_bridgeObjectRelease();
    }
    return v10;
  }
  else
  {
LABEL_31:
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

unint64_t sub_1AD338594()
{
  unint64_t result;

  result = qword_1EECDACE8;
  if (!qword_1EECDACE8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679B7C, &type metadata for IDSSessionInvitation.TransportType);
    atomic_store(result, (unint64_t *)&qword_1EECDACE8);
  }
  return result;
}

uint64_t sub_1AD3385D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD289EF0, (uint64_t (*)(void))sub_1AD289FDC);
}

uint64_t sub_1AD3385EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD29B9C0, (uint64_t (*)(void))sub_1AD29B86C);
}

uint64_t sub_1AD338604(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD00408C(*a1, v2);
  return sub_1AD003258(v1, v2);
}

uint64_t sub_1AD338644@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  *a2 = a1[7];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD285EE4(v3, v4);
}

uint64_t sub_1AD338684(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD3386C0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[15];
  v3 = a1[16];
  v5 = a1[17];
  v4 = a1[18];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD3386F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD338734@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[20];
  v3 = a1[21];
  v5 = a1[22];
  v4 = a1[23];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t destroy for IDSSessionInvitation(uint64_t *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v5;

  v2 = a1[5];
  if (v2 >> 60 != 15)
    sub_1AD00412C(a1[4], v2);
  swift_release();
  v3 = a1[10];
  if (v3 >> 60 != 15 && (v3 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(a1[9], v3);
  v5 = a1[13];
  if (v5 >> 60 != 15)
    sub_1AD00412C(a1[12], v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IDSSessionInvitation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
  v5 = (uint64_t *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v5;
  }
  else
  {
    v7 = *v5;
    sub_1AD0040A0(*v5, *(_QWORD *)(a2 + 40));
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v6;
  }
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = (uint64_t *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  swift_retain();
  if (v10 >> 60 == 11 || v10 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_1AD0040A0(*v9, v10);
    *(_QWORD *)(a1 + 72) = v11;
    *(_QWORD *)(a1 + 80) = v10;
  }
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v12 = (uint64_t *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 104);
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v12;
  }
  else
  {
    v14 = *v12;
    sub_1AD0040A0(*v12, *(_QWORD *)(a2 + 104));
    *(_QWORD *)(a1 + 96) = v14;
    *(_QWORD *)(a1 + 104) = v13;
  }
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v15 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v15;
  v16 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v16;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v17 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v17;
  v18 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v18;
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IDSSessionInvitation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v5 = (_OWORD *)(a1 + 32);
  v6 = (uint64_t *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      v8 = *v6;
      sub_1AD0040A0(*v6, *(_QWORD *)(a2 + 40));
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 32);
LABEL_6:
    *v5 = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v9 = *v6;
  sub_1AD0040A0(*v6, *(_QWORD *)(a2 + 40));
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v7;
  sub_1AD00412C(v10, v11);
LABEL_8:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_retain();
  swift_release();
  v13 = (uint64_t *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = v14 & 0xF000000000000000;
  if (*(_QWORD *)(a1 + 80) >> 60 == 11)
  {
    if (v15 == 0xB000000000000000)
      goto LABEL_18;
LABEL_14:
    if (v14 >> 60 != 15)
    {
      v16 = *v13;
      sub_1AD0040A0(*v13, *(_QWORD *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v16;
      *(_QWORD *)(a1 + 80) = v14;
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v15 == 0xB000000000000000)
  {
    sub_1AD338C44(a1 + 72);
LABEL_18:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v13;
    goto LABEL_19;
  }
  if (*(_QWORD *)(a1 + 80) >> 60 == 15)
    goto LABEL_14;
  if (v14 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 72);
    goto LABEL_18;
  }
  v26 = *v13;
  sub_1AD0040A0(*v13, *(_QWORD *)(a2 + 80));
  v27 = *(_QWORD *)(a1 + 72);
  v28 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v26;
  *(_QWORD *)(a1 + 80) = v14;
  sub_1AD00412C(v27, v28);
LABEL_19:
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v17 = (uint64_t *)(a2 + 96);
  v18 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 104) >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      v20 = *v17;
      sub_1AD0040A0(*v17, *(_QWORD *)(a2 + 104));
      v21 = *(_QWORD *)(a1 + 96);
      v22 = *(_QWORD *)(a1 + 104);
      *(_QWORD *)(a1 + 96) = v20;
      *(_QWORD *)(a1 + 104) = v18;
      sub_1AD00412C(v21, v22);
      goto LABEL_26;
    }
    sub_1AD007EC0(a1 + 96);
    goto LABEL_24;
  }
  if (v18 >> 60 == 15)
  {
LABEL_24:
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v17;
    goto LABEL_26;
  }
  v19 = *v17;
  sub_1AD0040A0(*v17, *(_QWORD *)(a2 + 104));
  *(_QWORD *)(a1 + 96) = v19;
  *(_QWORD *)(a1 + 104) = v18;
LABEL_26:
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v23 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v23;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v24;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  return a1;
}

uint64_t sub_1AD338C44(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E3250);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for IDSSessionInvitation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
  v5 = (_OWORD *)(a1 + 32);
  v6 = (_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v7 >> 60 == 15)
    goto LABEL_4;
  v8 = *(_QWORD *)(a2 + 40);
  if (v8 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 32);
LABEL_4:
    *v5 = *v6;
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 40) = v8;
  sub_1AD00412C(v9, v7);
LABEL_6:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  v10 = (_OWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a1 + 80);
  if (v11 >> 60 == 11)
  {
LABEL_12:
    *(_OWORD *)(a1 + 72) = *v10;
    goto LABEL_13;
  }
  v12 = *(_QWORD *)(a2 + 80);
  if (v12 >> 60 == 11)
  {
    sub_1AD338C44(a1 + 72);
    goto LABEL_12;
  }
  if (v11 >> 60 == 15)
    goto LABEL_12;
  if (v12 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 72);
    goto LABEL_12;
  }
  v20 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)v10;
  *(_QWORD *)(a1 + 80) = v12;
  sub_1AD00412C(v20, v11);
LABEL_13:
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v13 = (_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a1 + 104);
  if (v14 >> 60 != 15)
  {
    v15 = *(_QWORD *)(a2 + 104);
    if (v15 >> 60 != 15)
    {
      v16 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 96) = *v13;
      *(_QWORD *)(a1 + 104) = v15;
      sub_1AD00412C(v16, v14);
      goto LABEL_18;
    }
    sub_1AD007EC0(a1 + 96);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)v13;
LABEL_18:
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  v17 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v17;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_release();
  v18 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v18;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSSessionInvitation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 194))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSSessionInvitation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 192) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 194) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 194) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSSessionInvitation()
{
  return &type metadata for IDSSessionInvitation;
}

uint64_t storeEnumTagSinglePayload for IDSSessionInvitation.TransportType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD338F60 + 4 * byte_1AD679B75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD338F94 + 4 * byte_1AD679B70[v4]))();
}

uint64_t sub_1AD338F94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD338F9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD338FA4);
  return result;
}

uint64_t sub_1AD338FB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD338FB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD338FBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD338FC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IDSSessionInvitation.TransportType()
{
  return &type metadata for IDSSessionInvitation.TransportType;
}

unint64_t sub_1AD338FE0()
{
  unint64_t result;

  result = qword_1EECDACF0;
  if (!qword_1EECDACF0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679BE4, &type metadata for IDSSessionInvitation.TransportType);
    atomic_store(result, (unint64_t *)&qword_1EECDACF0);
  }
  return result;
}

uint64_t dispatch thunk of Bridgeable.bridgedToObjectiveC.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1AD33902C()
{
  uint64_t v0;

  sub_1AD33907C();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD33907C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[2];
  __int128 v67;
  uint64_t v68;
  uint64_t v69;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  MEMORY[0x1E0C80A78](v1);
  v64 = (uint64_t)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDACF8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for IDSKCSharingInvitation();
  v14 = v13[5];
  v63 = v0;
  v15 = v0 + v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAD00);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
  v17 = sub_1AD4E0F58((uint64_t)v12);
  v19 = v18;
  sub_1AD009758((uint64_t)v12, &qword_1EECDACF8);
  v20 = v15;
  v61 = v9;
  v62 = v7;
  v21 = v19;
  v22 = v63;
  v23 = *(_QWORD *)(v63 + 24);
  if (!v23)
    goto LABEL_12;
  v24 = *(_QWORD *)(v63 + 16);
  v25 = MEMORY[0x1E0DEA968];
  v68 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v67 = v24;
  *((_QWORD *)&v67 + 1) = v23;
  sub_1AD002F7C(&v67, v66);
  v26 = v17;
  sub_1AD0040A0(v17, v21);
  swift_bridgeObjectRetain();
  v27 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v65 = v27;
  sub_1AD43F448(v66, 0x444970756F7267, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
  v69 = v65;
  swift_bridgeObjectRelease();
  v29 = v20 + *(int *)(type metadata accessor for CloudKitSharingToken() + 24);
  v30 = v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v31 = (uint64_t)v5;
  sub_1ACFF64C0(v30, (uint64_t)v5, &qword_1ED2E1A40);
  v32 = v62;
  v33 = v6;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v31, 1, v6) == 1)
  {
    sub_1AD009758(v31, &qword_1ED2E1A40);
    goto LABEL_12;
  }
  v34 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v61, v31, v33);
  v35 = sub_1AD63AE74();
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v33);
  v68 = v25;
  *(_QWORD *)&v67 = v35;
  *((_QWORD *)&v67 + 1) = v37;
  sub_1AD002F7C(&v67, v66);
  v38 = v69;
  v39 = swift_isUniquelyReferenced_nonNull_native();
  v65 = v38;
  sub_1AD43F448(v66, 0x4C52556572616873, 0xE800000000000000, v39);
  v40 = v65;
  v69 = v65;
  swift_bridgeObjectRelease();
  v68 = MEMORY[0x1E0CB0338];
  *(_QWORD *)&v67 = v26;
  *((_QWORD *)&v67 + 1) = v21;
  sub_1AD002F7C(&v67, v66);
  v41 = swift_isUniquelyReferenced_nonNull_native();
  v65 = v40;
  sub_1AD43F448(v66, 0x6974617469766E69, 0xEF6E656B6F546E6FLL, v41);
  v42 = v65;
  swift_bridgeObjectRelease();
  v43 = v22 + v13[6];
  v44 = *(_QWORD *)(v43 + 24);
  if (!v44)
  {
LABEL_12:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  v45 = *(_QWORD *)(v43 + 16);
  v68 = v25;
  *(_QWORD *)&v67 = v45;
  *((_QWORD *)&v67 + 1) = v44;
  sub_1AD002F7C(&v67, v66);
  swift_bridgeObjectRetain();
  v46 = swift_isUniquelyReferenced_nonNull_native();
  v65 = v42;
  sub_1AD43F448(v66, 0x4865657469766E69, 0xED0000656C646E61, v46);
  v69 = v65;
  swift_bridgeObjectRelease();
  v47 = v64;
  sub_1ACFF64C0(v22 + v13[7], v64, (uint64_t *)&unk_1ED2E2D98);
  v48 = sub_1AD63B03C();
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48) == 1)
  {
    sub_1AD009758(v47, (uint64_t *)&unk_1ED2E2D98);
    sub_1AD43D86C(0x656D6954746E6573, 0xE800000000000000, &v67);
    sub_1AD009758((uint64_t)&v67, &qword_1EECDC5F0);
  }
  else
  {
    v68 = v48;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v67);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v49 + 32))(boxed_opaque_existential_0, v47, v48);
    sub_1AD002F7C(&v67, v66);
    v51 = v69;
    v52 = swift_isUniquelyReferenced_nonNull_native();
    v65 = v51;
    sub_1AD43F448(v66, 0x656D6954746E6573, 0xE800000000000000, v52);
    v69 = v65;
    swift_bridgeObjectRelease();
  }
  v53 = (uint64_t *)(v22 + v13[8]);
  v54 = v53[1];
  if (v54)
  {
    v55 = *v53;
    v68 = v25;
    *(_QWORD *)&v67 = v55;
    *((_QWORD *)&v67 + 1) = v54;
    sub_1AD002F7C(&v67, v66);
    swift_bridgeObjectRetain();
    v56 = v69;
    v57 = swift_isUniquelyReferenced_nonNull_native();
    v65 = v56;
    sub_1AD43F448(v66, 0x6D614E70756F7267, 0xE900000000000065, v57);
    v58 = v65;
    swift_bridgeObjectRelease();
    sub_1AD00412C(v26, v21);
  }
  else
  {
    sub_1AD43D86C(0x6D614E70756F7267, 0xE900000000000065, &v67);
    sub_1AD009758((uint64_t)&v67, &qword_1EECDC5F0);
    sub_1AD00412C(v26, v21);
    return v69;
  }
  return v58;
}

uint64_t sub_1AD3397D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD63AF04();
  v9 = sub_1AD63AF28();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1AD0040A0(a1, a2);
    return sub_1AD4E1D58(a1, a2, (uint64_t)v8, 0, 0, a3);
  }
  return result;
}

uint64_t sub_1AD3398BC()
{
  uint64_t v0;

  sub_1AD33907C();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

void *sub_1AD33990C()
{
  uint64_t inited;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1F10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648170;
  *(_QWORD *)(inited + 32) = 0x6F746C69616DLL;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for EmailValidator;
  *(_QWORD *)(inited + 80) = &off_1E5CA8A20;
  *(_QWORD *)(inited + 88) = 7103860;
  *(_QWORD *)(inited + 96) = 0xE300000000000000;
  *(_QWORD *)(inited + 128) = &type metadata for PhoneNumberValidator;
  *(_QWORD *)(inited + 136) = &off_1E5CB7610;
  result = (void *)sub_1AD4395A4(inited);
  off_1EECDAD08 = result;
  return result;
}

unint64_t sub_1AD33999C()
{
  uint64_t inited;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1F10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD64CE50;
  *(_QWORD *)(inited + 72) = &type metadata for SIPAddressValidator;
  *(_QWORD *)(inited + 80) = &off_1E5CB5A00;
  *(_QWORD *)(inited + 88) = 0x6F746C69616DLL;
  *(_QWORD *)(inited + 96) = 0xE600000000000000;
  *(_QWORD *)(inited + 32) = 7367027;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 128) = &type metadata for EmailValidator;
  *(_QWORD *)(inited + 136) = &off_1E5CA8A20;
  *(_QWORD *)(inited + 144) = 7103860;
  *(_QWORD *)(inited + 152) = 0xE300000000000000;
  *(_QWORD *)(inited + 184) = &type metadata for PhoneNumberValidator;
  *(_QWORD *)(inited + 192) = &off_1E5CB7610;
  result = sub_1AD4395A4(inited);
  qword_1EECDAD10 = result;
  return result;
}

uint64_t sub_1AD339A4C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31[3];
  uint64_t v32;
  uint64_t v33;

  v31[0] = a1;
  v31[1] = a2;
  *(_QWORD *)&v28 = 58;
  *((_QWORD *)&v28 + 1) = 0xE100000000000000;
  sub_1AD0442F4();
  v6 = sub_1AD63BC78();
  if (*(_QWORD *)(v6 + 16) != 2)
    goto LABEL_7;
  if ((a3 & 1) != 0)
  {
    if (qword_1EECD1440 != -1)
      swift_once();
    v7 = &qword_1EECDAD10;
    if (!*(_QWORD *)(v6 + 16))
      goto LABEL_6;
LABEL_11:
    v8 = *v7;
    if (*(_QWORD *)(*v7 + 16))
    {
      v10 = *(_QWORD *)(v6 + 32);
      v9 = *(_QWORD *)(v6 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_1AD0DFB48(v10, v9);
      if ((v12 & 1) != 0)
      {
        sub_1AD0CFC4C(*(_QWORD *)(v8 + 56) + 40 * v11, (uint64_t)&v28);
      }
      else
      {
        v30 = 0;
        v28 = 0u;
        v29 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v29 + 1))
      {
        sub_1AD00FA24(&v28, (uint64_t)v31);
        v13 = v32;
        v14 = v33;
        __swift_project_boxed_opaque_existential_1(v31, v32);
        if (*(_QWORD *)(v6 + 16) < 2uLL)
        {
          __break(1u);
        }
        else
        {
          v15 = *(_QWORD *)(v6 + 48);
          v16 = *(_QWORD *)(v6 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v15, v16, v13, v14);
          swift_bridgeObjectRelease();
          if ((v6 & 1) != 0)
          {
LABEL_31:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
            return v6 & 1;
          }
          if (qword_1ED2E32E8[0] == -1)
          {
LABEL_20:
            v17 = sub_1AD63B4B0();
            __swift_project_value_buffer(v17, (uint64_t)qword_1ED2E3090);
            swift_bridgeObjectRetain_n();
            v18 = sub_1AD63B498();
            v19 = sub_1AD63BB7C();
            if (os_log_type_enabled(v18, v19))
            {
              v20 = (uint8_t *)swift_slowAlloc();
              v21 = swift_slowAlloc();
              *(_QWORD *)&v28 = v21;
              *(_DWORD *)v20 = 136315138;
              swift_bridgeObjectRetain();
              sub_1AD43D1D0(a1, a2, (uint64_t *)&v28);
              sub_1AD63BC60();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1ACFC8000, v18, v19, "Destination URI is not valid: %s", v20, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1AF44BED4](v21, -1, -1);
              MEMORY[0x1AF44BED4](v20, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            goto LABEL_31;
          }
        }
        swift_once();
        goto LABEL_20;
      }
    }
    else
    {
      v30 = 0;
      v28 = 0u;
      v29 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1AD339F24((uint64_t)&v28);
    goto LABEL_23;
  }
  if (qword_1EECD1438 != -1)
    swift_once();
  v7 = (uint64_t *)&off_1EECDAD08;
  if (*(_QWORD *)(v6 + 16))
    goto LABEL_11;
LABEL_6:
  __break(1u);
LABEL_7:
  swift_bridgeObjectRelease();
LABEL_23:
  if (qword_1ED2E32E8[0] != -1)
    swift_once();
  v22 = sub_1AD63B4B0();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED2E3090);
  swift_bridgeObjectRetain_n();
  v23 = sub_1AD63B498();
  v24 = sub_1AD63BB7C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v31[0] = v26;
    *(_DWORD *)v25 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v28 = sub_1AD43D1D0(a1, a2, v31);
    sub_1AD63BC60();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ACFC8000, v23, v24, "Destination URI is not valid: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF44BED4](v26, -1, -1);
    MEMORY[0x1AF44BED4](v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  LOBYTE(v6) = 0;
  return v6 & 1;
}

uint64_t sub_1AD339F24(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAD18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for EmailValidator()
{
  return &type metadata for EmailValidator;
}

ValueMetadata *type metadata accessor for PhoneNumberValidator()
{
  return &type metadata for PhoneNumberValidator;
}

ValueMetadata *type metadata accessor for SIPAddressValidator()
{
  return &type metadata for SIPAddressValidator;
}

ValueMetadata *type metadata accessor for DestinationIdentifierValidator()
{
  return &type metadata for DestinationIdentifierValidator;
}

uint64_t _s9BlastDoor30DestinationIdentifierValidatorV15DestinationTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD339FF4 + 4 * byte_1AD679DD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD33A028 + 4 * byte_1AD679DD0[v4]))();
}

uint64_t sub_1AD33A028(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD33A030(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD33A038);
  return result;
}

uint64_t sub_1AD33A044(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD33A04CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD33A050(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD33A058(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DestinationIdentifierValidator.DestinationType()
{
  return &type metadata for DestinationIdentifierValidator.DestinationType;
}

unint64_t sub_1AD33A078()
{
  unint64_t result;

  result = qword_1EECDAD20;
  if (!qword_1EECDAD20)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679EF4, &type metadata for DestinationIdentifierValidator.DestinationType);
    atomic_store(result, (unint64_t *)&qword_1EECDAD20);
  }
  return result;
}

uint64_t sub_1AD33A0BC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[8];
  v4 = v1[9];
  v3 = v1[10];
  *a1 = v1[7];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD33A0EC(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 56) = *a1;
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  return result;
}

uint64_t sub_1AD33A13C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[12];
  v3 = v1[13];
  *a1 = v1[11];
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD33A16C(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 88) = *a1;
  *(_QWORD *)(v1 + 104) = v3;
  return result;
}

uint64_t sub_1AD33A1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD33A228()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 104))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD33A284@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 3006)
    v2 = 1;
  else
    v2 = 2;
  if (result == 2006)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD33A2A0()
{
  _BYTE *v0;

  if (*v0)
    return 3006;
  else
    return 2006;
}

uint64_t sub_1AD33A2B8()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD33A308()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD33A340()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

_QWORD *sub_1AD33A38C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 3006)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 2006)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_1AD33A3AC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 2006;
  if (*v1)
    v2 = 3006;
  *a1 = v2;
}

uint64_t sub_1AD33A3C8()
{
  sub_1AD33B454();
  return sub_1AD63B930();
}

uint64_t sub_1AD33A424()
{
  sub_1AD33B454();
  return sub_1AD63B8D0();
}

void sub_1AD33A470(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *sub_1AD33A47C(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*sub_1AD33A488())()
{
  return nullsub_1;
}

uint64_t sub_1AD33A498()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD33A4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*sub_1AD33A4F8())()
{
  return nullsub_1;
}

uint64_t sub_1AD33A508()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD33A534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*sub_1AD33A568())()
{
  return nullsub_1;
}

uint64_t sub_1AD33A578()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_1AD33A580(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*sub_1AD33A588())()
{
  return nullsub_1;
}

uint64_t sub_1AD33A598@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 80);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 72);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD33A600(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD33A620(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 80);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 72);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD33A6A8;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD33A6A8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD33A70C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[7] = v4;
  a2[8] = v3;
  a2[9] = v6;
  a2[10] = v5;
  return result;
}

void (*sub_1AD33A778(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[8];
  v6 = v1[9];
  v5 = v1[10];
  *v3 = v1[7];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD33A7DC;
}

void sub_1AD33A7DC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[7] = v6;
    v4[8] = v5;
    v4[9] = v7;
    v4[10] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[7] = v6;
    v4[8] = v5;
    v4[9] = v7;
    v4[10] = v3;
  }
  free(v2);
}

uint64_t sub_1AD33A884@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 104);
  if (v2)
  {
    *a2 = v2;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD33A8E4()
{
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0();
}

uint64_t (*sub_1AD33A904(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(_QWORD *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 104);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD33A988;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD33A988(_QWORD *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) == 0)
    return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(*a1);
  v2 = swift_bridgeObjectRetain();
  _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD33A9D0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[11] = v4;
  a2[12] = v3;
  a2[13] = v5;
  return result;
}

uint64_t (*sub_1AD33AA30(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[12];
  v4 = v1[13];
  *a1 = v1[11];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD33AA80;
}

uint64_t sub_1AD33AA80(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = (_QWORD *)a1[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v5[11] = v3;
    v5[12] = v2;
    v5[13] = v4;
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_release();
    result = swift_bridgeObjectRelease();
    v5[11] = v3;
    v5[12] = v2;
    v5[13] = v4;
  }
  return result;
}

uint64_t sub_1AD33AB18@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[14];
  v3 = v1[15];
  v4 = v1[16];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1AD14145C(v2, v3, v4);
}

__n128 sub_1AD33AB2C(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;

  v4 = *a1;
  v2 = a1[1].n128_i64[0];
  sub_1AD1416EC(v1[14], v1[15], v1[16]);
  result = v4;
  *((__n128 *)v1 + 7) = v4;
  v1[16] = v2;
  return result;
}

uint64_t (*sub_1AD33AB70())()
{
  return nullsub_1;
}

uint64_t sub_1AD33AB80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD33ABAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return result;
}

uint64_t (*sub_1AD33ABE0())()
{
  return nullsub_1;
}

uint64_t sub_1AD33ABF0()
{
  sub_1AD63BD38();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63BE04();
  sub_1AD63B810();
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  return 0;
}

unint64_t sub_1AD33AD10()
{
  unint64_t result;

  result = qword_1EECDAD28;
  if (!qword_1EECDAD28)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679F84, &type metadata for BasicEmojiTapback.AssociatedMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDAD28);
  }
  return result;
}

uint64_t sub_1AD33AD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28438C, (uint64_t (*)(void))sub_1AD2844D8);
}

uint64_t sub_1AD33AD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A11BC, (uint64_t (*)(void))sub_1AD2A1024);
}

uint64_t sub_1AD33AD84(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD33ADC0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[7];
  v3 = a1[8];
  v5 = a1[9];
  v4 = a1[10];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD33ADF8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD33AE20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[11];
  v3 = a1[12];
  v4 = a1[13];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t destroy for BasicEmojiTapback(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 128) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BasicEmojiTapback(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  }
  else
  {
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BasicEmojiTapback(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 112);
  v7 = (__int128 *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *v6 = v9;
    }
    else
    {
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1AD33B168(a1 + 112);
    v10 = *(_QWORD *)(a2 + 128);
    *v6 = *v7;
    *(_QWORD *)(a1 + 128) = v10;
  }
  else
  {
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD33B168(uint64_t a1)
{
  destroy for LinkPresentation.PlaceholderImage.Properties();
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for BasicEmojiTapback(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 128) != 1)
  {
    v7 = *(_QWORD *)(a2 + 128);
    if (v7 != 1)
    {
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AD33B168(a1 + 112);
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
LABEL_6:
  v8 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BasicEmojiTapback(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BasicEmojiTapback(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BasicEmojiTapback()
{
  return &type metadata for BasicEmojiTapback;
}

uint64_t storeEnumTagSinglePayload for BasicEmojiTapback.AssociatedMessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD33B3D4 + 4 * byte_1AD679F65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD33B408 + 4 * byte_1AD679F60[v4]))();
}

uint64_t sub_1AD33B408(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD33B410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD33B418);
  return result;
}

uint64_t sub_1AD33B424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD33B42CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD33B430(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD33B438(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BasicEmojiTapback.AssociatedMessageType()
{
  return &type metadata for BasicEmojiTapback.AssociatedMessageType;
}

unint64_t sub_1AD33B454()
{
  unint64_t result;

  result = qword_1EECDAD30;
  if (!qword_1EECDAD30)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD679FEC, &type metadata for BasicEmojiTapback.AssociatedMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDAD30);
  }
  return result;
}

uint64_t sub_1AD33B498(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v3 = sub_1AD63B768();
  if (*(_QWORD *)(a2 + 16) && (v5 = sub_1AD0DFB48(v3, v4), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v5);
    swift_unknownObjectRetain();
  }
  else
  {
    v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1AD33B4F4()
{
  CGImageSource *v0;
  const __CFString *v1;
  __CFString *v2;
  uint64_t v3;

  v1 = (id)CGImageSourceGetType(v0);
  if (!v1)
    return 0;
  v2 = (__CFString *)v1;
  v3 = sub_1AD63B768();

  return v3;
}

size_t sub_1AD33B550()
{
  CGImageSource *v0;

  return CGImageSourceGetCount(v0);
}

uint64_t sub_1AD33B558()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1AD33B584()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t sub_1AD33B58C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1AD33B594()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 40);
}

uint64_t sub_1AD33B59C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 44);
}

uint64_t sub_1AD33B5A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD33B5D0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_1AD33B5D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  double v7;
  uint64_t result;
  char v9;

  v7 = 0.0;
  while (1)
  {
    *(double *)&result = COERCE_DOUBLE(a3(a1));
    if (v3)
      break;
    if ((v9 & 1) != 0)
    {
      v7 = v7 + 0.1;
      if (a2 == a1)
        return result;
    }
    else
    {
      v7 = v7 + *(double *)&result;
      if (a2 == a1)
        return result;
    }
    if (__OFADD__(a1++, 1))
    {
      __break(1u);
      return result;
    }
  }
  return result;
}

void sub_1AD33B66C(uint64_t a1@<X8>)
{
  CGImageSource *v1;
  CGImageSource *v2;
  uint64_t inited;
  void *v5;
  id v6;
  const __CFDictionary *v7;
  CFDictionaryRef v8;
  void *v9;
  void *v10;
  __CFString *v11;
  __CFString *v12;
  CFComparisonResult v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  int64_t Count;
  __CFString *v21;
  void *v22;
  CGImageMetadataRef v23;
  const CGImageMetadata *v24;
  __CFString *v25;
  CGImageMetadataTag *v26;
  CFTypeRef v27;
  void *v28;
  CGImageSource *v29;
  uint64_t v30;
  uint64_t v31;
  const __CFString *v32;
  __CFString *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  CFComparisonResult v41;
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2E10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  v5 = (void *)*MEMORY[0x1E0CBD240];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD240];
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 40) = 0;
  v6 = v5;
  sub_1AD438F14(inited);
  type metadata accessor for CFString(0);
  sub_1AD32EFC0();
  v7 = (const __CFDictionary *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  v8 = CGImageSourceCopyPropertiesAtIndex(v2, 0, v7);

  if (v8)
  {
    v42 = 0;
    sub_1AD63B684();

  }
  v9 = (void *)sub_1AD63BB28();
  v10 = (void *)sub_1AD63BB28();
  v11 = (__CFString *)(id)sub_1AD63B744();
  v12 = (__CFString *)sub_1AD63B744();
  v13 = CFStringCompare(v11, v12, 1uLL);

  v14 = (void *)sub_1AD63BB28();
  LODWORD(v12) = sub_1AD63C50C();

  v40 = (int)v12;
  if (((_DWORD)v12 - 5) > 3)
  {
    v18 = v9;
    v39 = sub_1AD63BB1C();

    v19 = v10;
    v38 = sub_1AD63BB1C();
  }
  else
  {
    v15 = v10;
    v16 = v9;
    v39 = sub_1AD63BB1C();
    v17 = v16;
    v38 = sub_1AD63BB1C();

  }
  Count = CGImageSourceGetCount(v2);
  v41 = v13;
  v21 = v11;
  v22 = v10;
  if (Count < 2)
    v37 = 0;
  else
    v37 = sub_1AD33BDB4();
  v23 = CGImageSourceCopyMetadataAtIndex(v2, 0, 0);
  if (!v23)
    goto LABEL_14;
  v24 = v23;
  v25 = (__CFString *)sub_1AD63B744();
  v26 = CGImageMetadataCopyTagWithPath(v24, 0, v25);

  if (!v26)
  {
    v28 = v9;
    v29 = v2;

    goto LABEL_16;
  }
  v27 = CGImageMetadataTagCopyValue(v26);

  if (v27)
  {
    v28 = v9;
    v29 = v2;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v30 = v42;
      v31 = v43;
      goto LABEL_17;
    }
  }
  else
  {
LABEL_14:
    v28 = v9;
    v29 = v2;
  }
LABEL_16:
  v30 = 0;
  v31 = 0;
LABEL_17:
  v32 = (id)CGImageSourceGetType(v29);
  if (v32)
  {
    v33 = (__CFString *)v32;
    v34 = sub_1AD63B768();
    v36 = v35;

  }
  else
  {

    v34 = 0;
    v36 = 0;
  }

  *(_QWORD *)a1 = v34;
  *(_QWORD *)(a1 + 8) = v36;
  *(double *)(a1 + 16) = (double)v39;
  *(double *)(a1 + 24) = (double)v38;
  *(_QWORD *)(a1 + 32) = Count;
  *(_DWORD *)(a1 + 40) = v40;
  *(_BYTE *)(a1 + 44) = v41 == kCFCompareEqualTo;
  *(_QWORD *)(a1 + 48) = v30;
  *(_QWORD *)(a1 + 56) = v31;
  *(_BYTE *)(a1 + 64) = v37 & 1;
}

uint64_t sub_1AD33BDB4()
{
  CGImageSource *v0;
  uint64_t inited;
  void *v2;
  id v3;
  const __CFDictionary *v4;
  CFDictionaryRef v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2E10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  v2 = (void *)*MEMORY[0x1E0CBD240];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD240];
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 40) = 0;
  v3 = v2;
  sub_1AD438F14(inited);
  type metadata accessor for CFString(0);
  sub_1AD32EFC0();
  v4 = (const __CFDictionary *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  v5 = CGImageSourceCopyProperties(v0, v4);

  if (v5)
  {
    sub_1AD63B684();

  }
  return 0;
}

double sub_1AD33C1B8(size_t index)
{
  CGImageSource *v1;
  CFDictionaryRef v2;
  CFDictionaryRef v3;

  v2 = CGImageSourceCopyPropertiesAtIndex(v1, index, 0);
  if (v2)
  {
    v3 = v2;
    sub_1AD63B684();

  }
  return 0.0;
}

uint64_t destroy for ImageProperties()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ImageProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageProperties(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ImageProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageProperties(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageProperties(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageProperties()
{
  return &type metadata for ImageProperties;
}

uint64_t sub_1AD33C8D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1AD63BB64();
  if (qword_1ED2E7328 != -1)
    swift_once();
  sub_1AD63B48C();
  v1 = sub_1AD33C980(v0);
  v3 = v2;
  v4 = sub_1AD63AFA0();
  sub_1AD00412C(v1, v3);
  return v4;
}

uint64_t sub_1AD33C980(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = type metadata accessor for ETP_Header(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DigitalTouchBalloon(0);
  sub_1AD33CB50(a1 + *(int *)(v5 + 20));
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_1AD33CE38(a1, (uint64_t)v4);
  v12 = (uint64_t *)&v4[*(int *)(v2 + 28)];
  v13 = *v12;
  v14 = v12[1];
  sub_1AD0040A0(v7, v9);
  sub_1AD004118(v13, v14);
  *v12 = v7;
  v12[1] = v9;
  v4[*(int *)(v2 + 20)] = v11;
  sub_1ACFF9724(&qword_1EECDAD48, type metadata accessor for ETP_Header, (uint64_t)&unk_1AD67C404);
  v15 = sub_1AD63B348();
  sub_1AD066230((uint64_t)v4, type metadata accessor for ETP_Header);
  sub_1AD00412C(v7, v9);
  return v15;
}

void sub_1AD33CB50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for VideoMessage(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for DigitalTouchMessage(0);
  MEMORY[0x1E0C80A78](v3);
  sub_1AD0D3D2C(a1, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1AD33CC20 + 4 * byte_1AD67A174[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1AD33CC20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v3 = v0[1];
  v4 = v0[2];
  *(_QWORD *)(v1 - 136) = v2;
  *(_QWORD *)(v1 - 128) = v3;
  *(_QWORD *)(v1 - 120) = v4;
  v5 = sub_1AD33CF3C(v1 - 136);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

int *sub_1AD33CE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *result;
  uint64_t v12;

  sub_1AD63B240();
  v4 = (int *)type metadata accessor for ETP_Header(0);
  *(_BYTE *)(a2 + v4[5]) = 8;
  v5 = a2 + v4[6];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  *(_OWORD *)(a2 + v4[7]) = xmmword_1AD67A180;
  v6 = a2 + v4[8];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = (uint64_t *)(a2 + v4[9]);
  *v7 = 0;
  v7[1] = 0;
  v8 = v4[10];
  *(_BYTE *)(a2 + v8) = 2;
  v9 = a2 + v4[11];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  *v7 = sub_1AD63B054();
  v7[1] = v10;
  result = (int *)type metadata accessor for DigitalTouchHeader(0);
  *(_QWORD *)v5 = *(_QWORD *)(a1 + result[6]);
  *(_BYTE *)(v5 + 8) = 0;
  *(_QWORD *)v9 = *(_QWORD *)(a1 + result[7]);
  *(_BYTE *)(v9 + 8) = 0;
  *(_BYTE *)(a2 + v8) = *(_BYTE *)(a1 + result[8]);
  v12 = a1 + result[5];
  if ((*(_BYTE *)(v12 + 4) & 1) == 0)
  {
    *(_DWORD *)v6 = *(_DWORD *)v12;
    *(_BYTE *)(v6 + 4) = 0;
  }
  return result;
}

uint64_t sub_1AD33CF3C(uint64_t a1)
{
  unint64_t v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t result;
  _QWORD v42[2];
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;

  v3 = (int *)type metadata accessor for ETP_Tap(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  sub_1AD63B240();
  v7 = &v5[v3[5]];
  *(_OWORD *)v7 = xmmword_1AD67A180;
  v8 = &v5[v3[6]];
  *(_OWORD *)v8 = xmmword_1AD67A180;
  v9 = &v5[v3[7]];
  *(_OWORD *)v9 = xmmword_1AD67A180;
  if (v6)
  {
    v43 = (uint64_t *)v9;
    v44 = (uint64_t *)v7;
    v10 = *(_QWORD *)(v6 + 16);
    v11 = MEMORY[0x1E0DEE9D8];
    if (v10)
    {
      v42[1] = v3;
      v45 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AD1498BC(0, v10, 0);
      v11 = v45;
      v12 = *(_QWORD *)(v45 + 16);
      v13 = 32;
      v14 = v10;
      do
      {
        v15 = *(_DWORD *)(v6 + v13);
        v45 = v11;
        v16 = *(_QWORD *)(v11 + 24);
        v1 = v12 + 1;
        if (v12 >= v16 >> 1)
        {
          sub_1AD1498BC(v16 > 1, v12 + 1, 1);
          v11 = v45;
        }
        *(_QWORD *)(v11 + 16) = v1;
        *(_DWORD *)(v11 + 4 * v12 + 32) = v15;
        v13 += 32;
        ++v12;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v11 + 16);
    if (v17 >> 61)
    {
      __break(1u);
    }
    else
    {
      v18 = sub_1AD33EDC0(v11 + 32, v11 + 32 + 4 * v17);
      v20 = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)v8 = v18;
      *((_QWORD *)v8 + 1) = v20;
      v21 = MEMORY[0x1E0DEE9D8];
      if (v10)
      {
        v45 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1AD1498A0(0, v10, 0);
        v21 = v45;
        v22 = (_BYTE *)(v6 + 58);
        v23 = v10;
        while ((*v22 & 1) == 0)
        {
          v1 = *((unsigned __int16 *)v22 - 1);
          v45 = v21;
          v25 = *(_QWORD *)(v21 + 16);
          v24 = *(_QWORD *)(v21 + 24);
          if (v25 >= v24 >> 1)
          {
            sub_1AD1498A0(v24 > 1, v25 + 1, 1);
            v21 = v45;
          }
          *(_QWORD *)(v21 + 16) = v25 + 1;
          *(_WORD *)(v21 + 2 * v25 + 32) = v1;
          v22 += 32;
          if (!--v23)
          {
            swift_bridgeObjectRelease();
            goto LABEL_16;
          }
        }
        goto LABEL_29;
      }
LABEL_16:
      v26 = *(_QWORD *)(v21 + 16);
      if (v26 + 0x4000000000000000 >= 0)
      {
        v27 = sub_1AD33EDC0(v21 + 32, v21 + 32 + 2 * v26);
        v29 = v28;
        swift_bridgeObjectRelease();
        v30 = v44;
        *v44 = v27;
        v30[1] = v29;
        v31 = MEMORY[0x1E0DEE9D8];
        if (v10)
        {
          v45 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_1AD1498BC(0, v10, 0);
          v31 = v45;
          v1 = *(_QWORD *)(v45 + 16);
          v32 = 60;
          do
          {
            v33 = *(_DWORD *)(v6 + v32);
            v45 = v31;
            v34 = *(_QWORD *)(v31 + 24);
            if (v1 >= v34 >> 1)
            {
              sub_1AD1498BC(v34 > 1, v1 + 1, 1);
              v31 = v45;
            }
            *(_QWORD *)(v31 + 16) = v1 + 1;
            *(_DWORD *)(v31 + 4 * v1 + 32) = v33;
            v32 += 32;
            ++v1;
            --v10;
          }
          while (v10);
          swift_bridgeObjectRelease();
        }
        v35 = *(_QWORD *)(v31 + 16);
        if (!(v35 >> 61))
        {
          v36 = sub_1AD33EDC0(v31 + 32, v31 + 32 + 4 * v35);
          v38 = v37;
          swift_bridgeObjectRelease();
          v39 = v43;
          *v43 = v36;
          v39[1] = v38;
          sub_1ACFF9724(&qword_1EECDAD60, type metadata accessor for ETP_Tap, (uint64_t)&unk_1AD67C274);
          v40 = sub_1AD63B348();
LABEL_25:
          sub_1AD066230((uint64_t)v5, type metadata accessor for ETP_Tap);
          return v40;
        }
LABEL_28:
        __break(1u);
        swift_once();
        sub_1AD63B48C();

        v40 = 0;
        goto LABEL_25;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_29:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD33D380(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  int v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  int *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  char isUniquelyReferenced_nonNull_native;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _WORD *v28;
  int v29;
  __int16 v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t result;
  int *v52;
  uint64_t *v53;
  int *v54;
  uint64_t *v55;
  int v56;
  uint64_t *v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;

  v2 = type metadata accessor for ETP_Doodle(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (int *)((char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(unsigned __int8 *)(a1 + 24);
  sub_1AD63B240();
  v7 = (char *)v4 + *(int *)(v2 + 20);
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = (char *)v4 + *(int *)(v2 + 24);
  *(_OWORD *)v8 = xmmword_1AD67A180;
  v9 = (char *)v4 + *(int *)(v2 + 28);
  *(_OWORD *)v9 = xmmword_1AD67A180;
  v10 = (char *)v4 + *(int *)(v2 + 32);
  *(_OWORD *)v10 = xmmword_1AD67A180;
  if (!v5)
  {
LABEL_42:
    sub_1AD63BE28();
    __break(1u);
    goto LABEL_43;
  }
  v11 = *(int **)(v5 + 16);
  if (!((unint64_t)v11 >> 32))
  {
    v57 = (uint64_t *)v9;
    v54 = v4;
    v55 = (uint64_t *)v8;
    v56 = v6;
    v53 = (uint64_t *)v10;
    *(_DWORD *)v7 = (_DWORD)v11;
    v7[4] = 0;
    if (v11)
    {
      v52 = (int *)v2;
      v58 = v5 + 32;
      swift_bridgeObjectRetain();
      v2 = 0;
      v12 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)MEMORY[0x1E0DEE9D8];
      v14 = (char *)MEMORY[0x1E0DEE9D8];
      v59 = v11;
      v60 = v5;
      while ((unint64_t)v2 < *(_QWORD *)(v5 + 16))
      {
        v15 = v58 + 32 * v2;
        v16 = *(_QWORD *)(v15 + 16);
        if (!v16)
          goto LABEL_42;
        v17 = *(_QWORD *)(v16 + 16);
        if (HIDWORD(v17))
          goto LABEL_43;
        v18 = *(_QWORD *)(v15 + 8);
        v19 = *(_DWORD *)(v15 + 24);
        v20 = *(unsigned __int16 *)(v15 + 28);
        swift_retain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v62 = v18;
        v22 = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v13 = sub_1AD3CB5A8(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        v24 = *((_QWORD *)v13 + 2);
        v23 = *((_QWORD *)v13 + 3);
        if (v24 >= v23 >> 1)
          v13 = sub_1AD3CB5A8((char *)(v23 > 1), v24 + 1, 1, v13);
        *((_QWORD *)v13 + 2) = v24 + 1;
        *(_DWORD *)&v13[4 * v24 + 32] = v20 | ((_DWORD)v17 << 16);
        v14 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_1AD3CB5A8(0, *((_QWORD *)v22 + 2) + 1, 1, v22);
        v26 = *((_QWORD *)v14 + 2);
        v25 = *((_QWORD *)v14 + 3);
        if (v26 >= v25 >> 1)
          v14 = sub_1AD3CB5A8((char *)(v25 > 1), v26 + 1, 1, v14);
        *((_QWORD *)v14 + 2) = v26 + 1;
        *(_DWORD *)&v14[4 * v26 + 32] = v19;
        v27 = *(_QWORD *)(v16 + 16);
        if (v27)
        {
          v61 = v14;
          swift_bridgeObjectRetain();
          v28 = (_WORD *)(v16 + 36);
          do
          {
            v29 = *((_DWORD *)v28 - 1);
            v30 = *v28;
            v32 = *((_QWORD *)v13 + 2);
            v31 = *((_QWORD *)v13 + 3);
            if (v32 >= v31 >> 1)
              v13 = sub_1AD3CB5A8((char *)(v31 > 1), v32 + 1, 1, v13);
            *((_QWORD *)v13 + 2) = v32 + 1;
            *(_DWORD *)&v13[4 * v32 + 32] = v29;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v12 = sub_1AD3CB4A0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
            v34 = *((_QWORD *)v12 + 2);
            v33 = *((_QWORD *)v12 + 3);
            if (v34 >= v33 >> 1)
              v12 = sub_1AD3CB4A0((char *)(v33 > 1), v34 + 1, 1, v12);
            v28 += 4;
            *((_QWORD *)v12 + 2) = v34 + 1;
            *(_WORD *)&v12[2 * v34 + 32] = v30;
            --v27;
          }
          while (v27);
          swift_release();
          swift_bridgeObjectRelease_n();
          v14 = v61;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_release();
        }
        ++v2;
        v5 = v60;
        if ((int *)v2 == v59)
        {
          swift_bridgeObjectRelease();
          v2 = (uint64_t)v52;
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v12 = (char *)MEMORY[0x1E0DEE9D8];
    v13 = (char *)MEMORY[0x1E0DEE9D8];
    v14 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_30:
    v35 = *((_QWORD *)v14 + 2);
    if (v35 >> 61)
      goto LABEL_39;
    v36 = sub_1AD33EDC0((uint64_t)(v14 + 32), (uint64_t)&v14[4 * v35 + 32]);
    v38 = v37;
    swift_bridgeObjectRelease();
    v39 = v57;
    *v57 = v36;
    v39[1] = v38;
    v40 = *((_QWORD *)v13 + 2);
    if (v40 >> 61)
    {
LABEL_40:
      __break(1u);
      swift_once();
      sub_1AD63B48C();

      v50 = 0;
      goto LABEL_37;
    }
    v41 = sub_1AD33EDC0((uint64_t)(v13 + 32), (uint64_t)&v13[4 * v40 + 32]);
    v43 = v42;
    swift_bridgeObjectRelease();
    v44 = v55;
    *v55 = v41;
    v44[1] = v43;
    if (!v56)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    v45 = *((_QWORD *)v12 + 2);
    if (v45 + 0x4000000000000000 >= 0)
    {
      v46 = sub_1AD33EDC0((uint64_t)(v12 + 32), (uint64_t)&v12[2 * v45 + 32]);
      v48 = v47;
      swift_bridgeObjectRelease();
      v49 = v53;
      *v53 = v46;
      v49[1] = v48;
LABEL_36:
      sub_1ACFF9724(&qword_1EECDAD50, type metadata accessor for ETP_Doodle, (uint64_t)&unk_1AD67BFA4);
      v2 = (uint64_t)v54;
      v50 = sub_1AD63B348();
LABEL_37:
      sub_1AD066230(v2, type metadata accessor for ETP_Doodle);
      return v50;
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_43:
  result = sub_1AD63BE1C();
  __break(1u);
  return result;
}

uint64_t sub_1AD33D914(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  int v5;
  char v6;
  int v7;
  char v8;
  int v9;
  int v10;
  int v11;
  char v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v2 = (int *)type metadata accessor for ETP_Heartbeat(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_DWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 20);
  v7 = *(_DWORD *)(a1 + 40);
  v8 = *(_BYTE *)(a1 + 44);
  v10 = *(_DWORD *)(a1 + 48);
  v9 = *(_DWORD *)(a1 + 52);
  v11 = *(_DWORD *)(a1 + 56);
  HIDWORD(v21) = *(_DWORD *)(a1 + 80);
  v12 = *(_BYTE *)(a1 + 84);
  sub_1AD63B240();
  v13 = &v4[v2[5]];
  *(_DWORD *)v13 = 0;
  v13[4] = 1;
  v14 = &v4[v2[6]];
  *(_DWORD *)v14 = 0;
  v14[4] = 1;
  v15 = &v4[v2[7]];
  *(_DWORD *)v15 = 0;
  v15[4] = 1;
  v16 = &v4[v2[8]];
  *(_DWORD *)v16 = 0;
  v16[4] = 1;
  v17 = &v4[v2[9]];
  *(_DWORD *)v17 = 0;
  v17[4] = 1;
  v18 = &v4[v2[10]];
  *(_DWORD *)v18 = 0;
  v18[4] = 1;
  if ((v6 & 1) != 0)
    goto LABEL_5;
  *(_DWORD *)v13 = v5;
  v13[4] = 0;
  if ((v8 & 1) != 0)
    goto LABEL_5;
  *(_DWORD *)v14 = v7;
  v14[4] = 0;
  *(_DWORD *)v15 = v10;
  v15[4] = 0;
  *(_DWORD *)v16 = v9;
  v16[4] = 0;
  *(_DWORD *)v17 = v11;
  v17[4] = 0;
  if ((v12 & 1) != 0)
  {
LABEL_5:
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_DWORD *)v18 = HIDWORD(v21);
    v18[4] = 0;
    sub_1ACFF9724(&qword_1EECDAD58, type metadata accessor for ETP_Heartbeat, (uint64_t)&unk_1AD67C10C);
    v19 = sub_1AD63B348();
    sub_1AD066230((uint64_t)v4, type metadata accessor for ETP_Heartbeat);
    return v19;
  }
  return result;
}

uint64_t sub_1AD33DB6C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  char *v29;
  uint64_t v30;
  char *v31;
  void *v32;
  void *v33;
  void *v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  void *v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t result;
  char *v96;
  uint64_t v97;
  char *v98;
  int *v99;
  char *v100;
  char *v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  id v112[3];
  char v113;
  uint64_t v114;

  v114 = *MEMORY[0x1E0C80C00];
  v105 = type metadata accessor for DigitalTouchBalloon(0);
  v2 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v110 = (uint64_t)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for DigitalTouchHeader(0);
  MEMORY[0x1E0C80A78](v104);
  v5 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for ETP_Header(0);
  v6 = MEMORY[0x1E0C80A78](v111);
  v8 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v103 = (uint64_t)&v96 - v10;
  MEMORY[0x1E0C80A78](v9);
  v107 = (uint64_t)&v96 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v106 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v96 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v96 - v18;
  v20 = (int *)type metadata accessor for ETP_Video(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD63B240();
  v101 = &v22[v20[5]];
  *(_OWORD *)v101 = xmmword_1AD67A180;
  v98 = &v22[v20[6]];
  v102 = xmmword_1AD67A180;
  *(_OWORD *)v98 = xmmword_1AD67A180;
  v99 = v20;
  v23 = v20[7];
  v24 = *a1;
  v100 = v22;
  v22[v23] = v24;
  v108 = type metadata accessor for VideoMessage(0);
  v109 = a1;
  v25 = (uint64_t)&a1[*(int *)(v108 + 20)];
  sub_1AD33F018(v25, (uint64_t)v19);
  v26 = type metadata accessor for IntroBalloon(0);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
  v28 = v27(v19, 1, v26);
  sub_1AD33F060((uint64_t)v19);
  if (v28 == 1)
  {
    v30 = v108;
    v29 = v109;
    goto LABEL_6;
  }
  v96 = v5;
  v97 = v2;
  sub_1AD33F018(v25, (uint64_t)v17);
  if (v27(v17, 1, v26) == 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  v31 = &v17[*(int *)(v26 + 20)];
  v33 = *(void **)v31;
  v32 = (void *)*((_QWORD *)v31 + 1);
  v34 = (void *)*((_QWORD *)v31 + 2);
  v35 = v31[24];
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AD066230((uint64_t)v17, type metadata accessor for IntroBalloon);
  v112[0] = v33;
  v112[1] = v32;
  v112[2] = v34;
  v113 = v35;
  v36 = sub_1AD33D380((uint64_t)v112);
  v38 = v37;
  swift_bridgeObjectRelease();
  swift_release();
  v39 = v25;
  v40 = (uint64_t)v106;
  sub_1AD33F018(v39, (uint64_t)v106);
  if (v27((char *)v40, 1, v26) == 1)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v41 = (uint64_t)v96;
  sub_1AD0D3D2C(v40, (uint64_t)v96, type metadata accessor for DigitalTouchHeader);
  sub_1AD066230(v40, type metadata accessor for IntroBalloon);
  v42 = v107;
  sub_1AD33CE38(v41, v107);
  sub_1AD066230(v41, type metadata accessor for DigitalTouchHeader);
  v43 = v111;
  *(_BYTE *)(v42 + *(int *)(v111 + 20)) = 3;
  v44 = (uint64_t *)(v42 + *(int *)(v43 + 28));
  v45 = *v44;
  v46 = v44[1];
  sub_1AD0040A0(v36, v38);
  sub_1AD004118(v45, v46);
  *v44 = v36;
  v44[1] = v38;
  sub_1ACFF9724(&qword_1EECDAD48, type metadata accessor for ETP_Header, (uint64_t)&unk_1AD67C404);
  v47 = sub_1AD63B348();
  v49 = v48;
  v50 = (uint64_t *)v101;
  sub_1AD004118(*(_QWORD *)v101, *((_QWORD *)v101 + 1));
  sub_1AD00412C(v36, v38);
  *v50 = v47;
  v50[1] = v49;
  v2 = v97;
  v30 = v108;
  v29 = v109;
  sub_1AD066230(v107, type metadata accessor for ETP_Header);
LABEL_6:
  v106 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), sel_init);
  v51 = *(_QWORD *)&v29[*(int *)(v30 + 24) + 16];
  if (!v51)
  {
LABEL_26:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  v52 = *(_QWORD *)(v51 + 16);
  if (v52)
  {
    v53 = v51 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v101 = *(char **)(v2 + 72);
    v97 = v51;
    swift_bridgeObjectRetain();
    do
    {
      v108 = v52;
      v109 = 0;
      v59 = v110;
      sub_1AD0D3D2C(v53, v110, type metadata accessor for DigitalTouchBalloon);
      v60 = sub_1AD33CB50(v59 + *(int *)(v105 + 20));
      v62 = v61;
      LODWORD(v107) = v63;
      sub_1AD63B240();
      v64 = (int *)v111;
      v8[*(int *)(v111 + 20)] = 8;
      v65 = v59;
      v66 = &v8[v64[6]];
      *(_QWORD *)v66 = 0;
      v66[8] = 1;
      *(_OWORD *)&v8[v64[7]] = v102;
      v67 = &v8[v64[8]];
      *(_DWORD *)v67 = 0;
      v67[4] = 1;
      v68 = v8;
      v69 = (uint64_t *)&v8[v64[9]];
      *v69 = 0;
      v69[1] = 0;
      v70 = v64[10];
      v68[v70] = 2;
      v71 = &v68[v64[11]];
      *(_QWORD *)v71 = 0;
      v71[8] = 1;
      *v69 = sub_1AD63B054();
      v69[1] = v72;
      v8 = v68;
      v73 = (int *)v104;
      *(_QWORD *)v66 = *(_QWORD *)(v65 + *(int *)(v104 + 24));
      v66[8] = 0;
      *(_QWORD *)v71 = *(_QWORD *)(v65 + v73[7]);
      v71[8] = 0;
      v68[v70] = *(_BYTE *)(v65 + v73[8]);
      v74 = v65 + v73[5];
      if ((*(_BYTE *)(v74 + 4) & 1) == 0)
      {
        *(_DWORD *)v67 = *(_DWORD *)v74;
        v67[4] = 0;
      }
      v75 = (uint64_t)v68;
      v76 = v103;
      sub_1AD2A5214(v75, v103, type metadata accessor for ETP_Header);
      v77 = v111;
      v78 = (uint64_t *)(v76 + *(int *)(v111 + 28));
      v79 = *v78;
      v80 = v78[1];
      sub_1AD0040A0(v60, v62);
      sub_1AD004118(v79, v80);
      *v78 = v60;
      v78[1] = v62;
      *(_BYTE *)(v76 + *(int *)(v77 + 20)) = v107;
      sub_1ACFF9724(&qword_1EECDAD48, type metadata accessor for ETP_Header, (uint64_t)&unk_1AD67C404);
      v81 = v109;
      v82 = sub_1AD63B348();
      if (v81)
      {
        sub_1AD63BB88();
        if (qword_1ED2E7328 != -1)
          swift_once();
        sub_1AD63B48C();
        sub_1AD00412C(v60, v62);

        v54 = 0;
        v55 = 0xC000000000000000;
      }
      else
      {
        v54 = v82;
        v55 = v83;
        sub_1AD00412C(v60, v62);
      }
      sub_1AD066230(v76, type metadata accessor for ETP_Header);
      v56 = objc_allocWithZone(MEMORY[0x1E0C99DF0]);
      v57 = (void *)sub_1AD63AFA0();
      v58 = objc_msgSend(v56, sel_initWithData_, v57);
      sub_1AD00412C(v54, v55);

      objc_msgSend(v106, sel_addObject_, v58);
      sub_1AD066230(v110, type metadata accessor for DigitalTouchBalloon);
      v53 += (uint64_t)v101;
      v52 = v108 - 1;
    }
    while (v108 != 1);
    swift_bridgeObjectRelease();
  }
  v84 = (void *)objc_opt_self();
  v112[0] = 0;
  v85 = objc_msgSend(v84, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v106, 1, v112);
  v86 = v112[0];
  if (v85)
  {
    v87 = sub_1AD63AFB8();
    v89 = v88;

    v90 = (uint64_t *)v98;
    sub_1AD004118(*(_QWORD *)v98, *((_QWORD *)v98 + 1));
    *v90 = v87;
    v90[1] = v89;
  }
  else
  {
    v91 = v86;
    v92 = (void *)sub_1AD63AE50();

    swift_willThrow();
    sub_1AD63BB88();
    if (qword_1ED2E7328 != -1)
      swift_once();
    sub_1AD63B48C();

  }
  v93 = (uint64_t)v100;
  sub_1ACFF9724(&qword_1EECDAD68, type metadata accessor for ETP_Video, (uint64_t)&unk_1AD67BCD4);
  v94 = sub_1AD63B348();
  sub_1AD066230(v93, type metadata accessor for ETP_Video);

  return v94;
}

uint64_t sub_1AD33E5B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  __int16 v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;

  v2 = type metadata accessor for ETP_Kiss(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  sub_1AD63B240();
  v6 = &v4[*(int *)(v2 + 20)];
  *(_OWORD *)v6 = xmmword_1AD67A180;
  v7 = &v4[*(int *)(v2 + 24)];
  *(_OWORD *)v7 = xmmword_1AD67A180;
  v43 = v2;
  v8 = &v4[*(int *)(v2 + 28)];
  *(_OWORD *)v8 = xmmword_1AD67A180;
  if (v5)
  {
    v44 = (uint64_t *)v8;
    v42 = (uint64_t *)v6;
    v9 = *(_QWORD *)(v5 + 16);
    v10 = MEMORY[0x1E0DEE9D8];
    if (v9)
    {
      v45 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AD1498BC(0, v9, 0);
      v10 = v45;
      v11 = *(_QWORD *)(v45 + 16);
      v12 = 32;
      v13 = v9;
      do
      {
        v14 = *(_DWORD *)(v5 + v12);
        v45 = v10;
        v15 = *(_QWORD *)(v10 + 24);
        v2 = v11 + 1;
        if (v11 >= v15 >> 1)
        {
          sub_1AD1498BC(v15 > 1, v11 + 1, 1);
          v10 = v45;
        }
        *(_QWORD *)(v10 + 16) = v2;
        *(_DWORD *)(v10 + 4 * v11 + 32) = v14;
        v12 += 8;
        ++v11;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
    }
    v16 = *(_QWORD *)(v10 + 16);
    if (v16 >> 61)
    {
      __break(1u);
    }
    else
    {
      v17 = sub_1AD33EDC0(v10 + 32, v10 + 32 + 4 * v16);
      v19 = v18;
      swift_bridgeObjectRelease();
      *(_QWORD *)v7 = v17;
      *((_QWORD *)v7 + 1) = v19;
      v20 = MEMORY[0x1E0DEE9D8];
      if (v9)
      {
        v45 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1AD1498A0(0, v9, 0);
        v20 = v45;
        v2 = *(_QWORD *)(v45 + 16);
        v21 = 36;
        v22 = v9;
        do
        {
          v23 = *(_WORD *)(v5 + v21);
          v45 = v20;
          v24 = *(_QWORD *)(v20 + 24);
          if (v2 >= v24 >> 1)
          {
            sub_1AD1498A0(v24 > 1, v2 + 1, 1);
            v20 = v45;
          }
          *(_QWORD *)(v20 + 16) = v2 + 1;
          *(_WORD *)(v20 + 2 * v2 + 32) = v23;
          v21 += 8;
          ++v2;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
      }
      v25 = *(_QWORD *)(v20 + 16);
      if (v25 + 0x4000000000000000 >= 0)
      {
        v26 = sub_1AD33EDC0(v20 + 32, v20 + 32 + 2 * v25);
        v28 = v27;
        swift_bridgeObjectRelease();
        v29 = v44;
        *v44 = v26;
        v29[1] = v28;
        v30 = MEMORY[0x1E0DEE9D8];
        if (v9)
        {
          v45 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_1AD1498A0(0, v9, 0);
          v30 = v45;
          v2 = *(_QWORD *)(v45 + 16);
          v31 = 38;
          do
          {
            v32 = *(_WORD *)(v5 + v31);
            v45 = v30;
            v33 = *(_QWORD *)(v30 + 24);
            if (v2 >= v33 >> 1)
            {
              sub_1AD1498A0(v33 > 1, v2 + 1, 1);
              v30 = v45;
            }
            *(_QWORD *)(v30 + 16) = v2 + 1;
            *(_WORD *)(v30 + 2 * v2 + 32) = v32;
            v31 += 8;
            ++v2;
            --v9;
          }
          while (v9);
          swift_bridgeObjectRelease();
        }
        v34 = *(_QWORD *)(v30 + 16);
        if (v34 + 0x4000000000000000 >= 0)
        {
          v35 = sub_1AD33EDC0(v30 + 32, v30 + 32 + 2 * v34);
          v37 = v36;
          swift_bridgeObjectRelease();
          v38 = v42;
          *v42 = v35;
          v38[1] = v37;
          sub_1ACFF9724(&qword_1EECDAD70, type metadata accessor for ETP_Kiss, (uint64_t)&unk_1AD67BB44);
          v39 = sub_1AD63B348();
LABEL_24:
          sub_1AD066230((uint64_t)v4, type metadata accessor for ETP_Kiss);
          return v39;
        }
LABEL_27:
        __break(1u);
        swift_once();
        sub_1AD63B48C();

        v39 = 0;
        goto LABEL_24;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD33EA00(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  int v5;
  void *v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t result;
  int *v35;
  char *v36;
  uint64_t v37;

  v2 = (int *)type metadata accessor for ETP_Anger(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_DWORD *)(a1 + 16);
  v6 = (void *)*(unsigned __int8 *)(a1 + 20);
  v8 = *(_DWORD *)(a1 + 24);
  v7 = *(_DWORD *)(a1 + 28);
  v9 = *(_QWORD *)(a1 + 32);
  sub_1AD63B240();
  v10 = &v4[v2[5]];
  *(_DWORD *)v10 = 0;
  v10[4] = 1;
  v11 = &v4[v2[6]];
  *(_DWORD *)v11 = 0;
  v11[4] = 1;
  v12 = &v4[v2[7]];
  *(_DWORD *)v12 = 0;
  v12[4] = 1;
  v36 = &v4[v2[8]];
  *(_OWORD *)v36 = xmmword_1AD67A180;
  v13 = &v4[v2[9]];
  *(_OWORD *)v13 = xmmword_1AD67A180;
  if ((v6 & 1) == 0)
  {
    *(_DWORD *)v10 = v5;
    v10[4] = 0;
    *(_DWORD *)v11 = v8;
    v11[4] = 0;
    *(_DWORD *)v12 = v7;
    v12[4] = 0;
    v14 = *(_QWORD *)(v9 + 16);
    v15 = MEMORY[0x1E0DEE9D8];
    if (v14)
    {
      v35 = v2;
      v37 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AD1498BC(0, v14, 0);
      v15 = v37;
      v16 = *(_QWORD *)(v37 + 16);
      v17 = 32;
      v18 = v14;
      do
      {
        v6 = (void *)*(unsigned int *)(v9 + v17);
        v37 = v15;
        v19 = *(_QWORD *)(v15 + 24);
        if (v16 >= v19 >> 1)
        {
          sub_1AD1498BC(v19 > 1, v16 + 1, 1);
          v15 = v37;
        }
        *(_QWORD *)(v15 + 16) = v16 + 1;
        *(_DWORD *)(v15 + 4 * v16 + 32) = (_DWORD)v6;
        v17 += 8;
        ++v16;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
    }
    v20 = *(_QWORD *)(v15 + 16);
    if (v20 >> 61)
    {
      __break(1u);
    }
    else
    {
      v21 = sub_1AD33EDC0(v15 + 32, v15 + 32 + 4 * v20);
      v23 = v22;
      swift_bridgeObjectRelease();
      *(_QWORD *)v13 = v21;
      *((_QWORD *)v13 + 1) = v23;
      v24 = MEMORY[0x1E0DEE9D8];
      if (v14)
      {
        v37 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1AD1498A0(0, v14, 0);
        v24 = v37;
        v25 = *(_QWORD *)(v37 + 16);
        v26 = 36;
        do
        {
          v6 = (void *)*(unsigned __int16 *)(v9 + v26);
          v37 = v24;
          v27 = *(_QWORD *)(v24 + 24);
          if (v25 >= v27 >> 1)
          {
            sub_1AD1498A0(v27 > 1, v25 + 1, 1);
            v24 = v37;
          }
          *(_QWORD *)(v24 + 16) = v25 + 1;
          *(_WORD *)(v24 + 2 * v25 + 32) = (_WORD)v6;
          v26 += 8;
          ++v25;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
      }
      v28 = *(_QWORD *)(v24 + 16);
      if (v28 + 0x4000000000000000 >= 0)
      {
        v29 = sub_1AD33EDC0(v24 + 32, v24 + 32 + 2 * v28);
        v31 = v30;
        swift_bridgeObjectRelease();
        v32 = v36;
        *(_QWORD *)v36 = v29;
        *((_QWORD *)v32 + 1) = v31;
        sub_1ACFF9724(&qword_1EECDAD78, type metadata accessor for ETP_Anger, (uint64_t)&unk_1AD67B9DC);
        v33 = sub_1AD63B348();
LABEL_17:
        sub_1AD066230((uint64_t)v4, type metadata accessor for ETP_Anger);
        return v33;
      }
    }
    __break(1u);
    swift_once();
    sub_1AD63B48C();

    v33 = 0;
    goto LABEL_17;
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD33EDC0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = MEMORY[0x1E0DEAC20];
  v8[4] = MEMORY[0x1E0CB1AA8];
  v8[0] = a1;
  v8[1] = a2;
  v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x1E0DEAC20]);
  v3 = (_BYTE *)*v2;
  if (*v2 && (v4 = (_BYTE *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      v6 = sub_1AD4EA5E4(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      v6 = sub_1AD33EFA0((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      v6 = sub_1AD33EF20((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t sub_1AD33EE78()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1AD63BB64();
  if (qword_1ED2E7328 != -1)
    swift_once();
  sub_1AD63B48C();
  v1 = sub_1AD33C980(v0);
  v3 = v2;
  v4 = sub_1AD63AFA0();
  sub_1AD00412C(v1, v3);
  return v4;
}

uint64_t sub_1AD33EF20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1AD63ADD8();
  swift_allocObject();
  result = sub_1AD63AD9C();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1AD33EFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1AD63ADD8();
  swift_allocObject();
  result = sub_1AD63AD9C();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1AD63AF88();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1AD33F018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD33F060(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD33F0AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_WORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 26);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 18) = v4;
  return swift_retain();
}

__n128 sub_1AD33F0C8(__n128 *a1)
{
  uint64_t v1;
  unsigned __int16 v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u16[0];
  v4 = a1[1].n128_u8[2];
  swift_release();
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  *(_WORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 26) = v4;
  return result;
}

uint64_t sub_1AD33F10C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 26) & 1) == 0)
    return *(unsigned __int16 *)(v0 + 24);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t DoodleMessage.$strokes.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 DoodleMessage.$strokes.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  return result;
}

uint64_t DoodleMessage.strokes.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t SingleStroke.$stroke.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 SingleStroke.$stroke.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  return result;
}

uint64_t SingleStroke.stroke.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD33F30C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_DWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 20);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 20) = v4;
  return swift_retain();
}

__n128 sub_1AD33F328(__n128 *a1)
{
  __n128 *v1;
  unsigned __int32 v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u32[0];
  v4 = a1[1].n128_u8[4];
  swift_release();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u32[0] = v3;
  v1[1].n128_u8[4] = v4;
  return result;
}

uint64_t sub_1AD33F36C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_DWORD *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 44);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 20) = v4;
  return swift_retain();
}

__n128 sub_1AD33F388(__n128 *a1)
{
  uint64_t v1;
  unsigned __int32 v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u32[0];
  v4 = a1[1].n128_u8[4];
  swift_release();
  result = *a1;
  *(__n128 *)(v1 + 24) = *a1;
  *(_DWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 44) = v4;
  return result;
}

uint64_t sub_1AD33F3CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_DWORD *)(v1 + 80);
  v4 = *(_BYTE *)(v1 + 84);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 20) = v4;
  return swift_retain();
}

__n128 sub_1AD33F3E8(__n128 *a1)
{
  __n128 *v1;
  unsigned __int32 v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u32[0];
  v4 = a1[1].n128_u8[4];
  swift_release();
  result = *a1;
  v1[4] = *a1;
  v1[5].n128_u32[0] = v3;
  v1[5].n128_u8[4] = v4;
  return result;
}

uint64_t sub_1AD33F42C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 20) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD33F48C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 44) & 1) == 0)
    return *(unsigned int *)(v0 + 40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD33F4EC()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 84) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t VideoMessage.$playingMessages.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for VideoMessage(0) + 24));
  v4 = v3[1];
  v5 = v3[2];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t type metadata accessor for VideoMessage(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1F60);
}

__n128 VideoMessage.$playingMessages.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  __n128 *v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for VideoMessage(0) + 24));
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v4 = *a1;
  v4[1].n128_u64[0] = v3;
  return result;
}

uint64_t VideoMessage.playingMessages.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for VideoMessage(0) + 24) + 16))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t _s9BlastDoor10TapMessageV5_tapsAA9UntrustedVySayAA06SingleC0VGGvg_0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 _s9BlastDoor10TapMessageV5_tapsAA9UntrustedVySayAA06SingleC0VGGvs_0(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  return result;
}

uint64_t _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvg_0()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t AngerMessage.$duration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_DWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 20);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 20) = v4;
  return swift_retain();
}

__n128 AngerMessage.$duration.setter(__n128 *a1)
{
  __n128 *v1;
  unsigned __int32 v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u32[0];
  v4 = a1[1].n128_u8[4];
  swift_release();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u32[0] = v3;
  v1[1].n128_u8[4] = v4;
  return result;
}

uint64_t AngerMessage.duration.getter()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 20) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t VideoMessage.MediaType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2;
  else
    return 1;
}

uint64_t type metadata accessor for DigitalTouchHeader(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1F50);
}

uint64_t (*sub_1AD33F828())()
{
  return nullsub_1;
}

uint64_t sub_1AD33F838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for DigitalTouchBalloon(0);
  return sub_1AD0D3D2C(v1 + *(int *)(v3 + 20), a1, type metadata accessor for DigitalTouchMessage);
}

uint64_t type metadata accessor for DigitalTouchBalloon(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1F30);
}

uint64_t type metadata accessor for DigitalTouchMessage(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1F40);
}

uint64_t sub_1AD33F89C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for DigitalTouchBalloon(0);
  return sub_1AD33F8D8(a1, v1 + *(int *)(v3 + 20), type metadata accessor for DigitalTouchMessage);
}

uint64_t sub_1AD33F8D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*sub_1AD33F91C())(_QWORD)
{
  type metadata accessor for DigitalTouchBalloon(0);
  return nullsub_1;
}

uint64_t sub_1AD33F944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1AD33F97C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*sub_1AD33F9B4())()
{
  return nullsub_1;
}

unint64_t sub_1AD33F9C4()
{
  uint64_t v0;
  unsigned int *v1;

  v1 = (unsigned int *)(v0 + *(int *)(type metadata accessor for DigitalTouchHeader(0) + 20));
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t sub_1AD33FA00(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for DigitalTouchHeader(0);
  v4 = v1 + *(int *)(result + 20);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = BYTE4(a1) & 1;
  return result;
}

uint64_t (*sub_1AD33FA38())(_QWORD)
{
  type metadata accessor for DigitalTouchHeader(0);
  return nullsub_1;
}

uint64_t sub_1AD33FA60()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for DigitalTouchHeader(0) + 24));
}

uint64_t sub_1AD33FA80(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DigitalTouchHeader(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_1AD33FAAC())(_QWORD)
{
  type metadata accessor for DigitalTouchHeader(0);
  return nullsub_1;
}

double sub_1AD33FAD4()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for DigitalTouchHeader(0) + 28));
}

uint64_t sub_1AD33FAF4(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DigitalTouchHeader(0);
  *(double *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_1AD33FB20())(_QWORD)
{
  type metadata accessor for DigitalTouchHeader(0);
  return nullsub_1;
}

uint64_t sub_1AD33FB48()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DigitalTouchHeader(0) + 32));
}

uint64_t sub_1AD33FB68(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DigitalTouchHeader(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*sub_1AD33FB94())(_QWORD)
{
  type metadata accessor for DigitalTouchHeader(0);
  return nullsub_1;
}

uint64_t (*TapMessage.taps.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD33FC44;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD33FC44(uint64_t *a1, char a2)
{
  return sub_1AD341280(a1, a2, _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0);
}

uint64_t (*TapMessage.$taps.modify(_QWORD *a1))(uint64_t *, char)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[1];
  v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD33FCA0;
}

uint64_t sub_1AD33FCA4()
{
  unsigned int *v0;

  return *v0;
}

uint64_t sub_1AD33FCAC(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD33FCB4())()
{
  return nullsub_1;
}

uint64_t sub_1AD33FCC4@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 26) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_WORD *)(result + 24);
  }
  return result;
}

uint64_t sub_1AD33FD28(__int16 a1)
{
  uint64_t v1;
  uint64_t (*v3)(__int16 *);
  uint64_t result;
  _QWORD *v5;
  __int16 v6;

  v3 = *(uint64_t (**)(__int16 *))(v1 + 8);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_WORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 26) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD33FDF4(uint64_t a1))(_WORD *a1, char a2)
{
  uint64_t v1;
  uint64_t (*result)(_WORD *, char);

  *(_QWORD *)a1 = v1;
  if ((*(_BYTE *)(v1 + 26) & 1) != 0)
  {
    result = (uint64_t (*)(_WORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_WORD *)(a1 + 8) = *(_WORD *)(v1 + 24);
    return sub_1AD33FE68;
  }
  return result;
}

uint64_t sub_1AD33FE68(_WORD *a1, char a2)
{
  uint64_t v2;
  __int16 v3;
  uint64_t (*v4)(__int16 *);
  __int16 *v5;
  uint64_t result;
  _QWORD *v7;
  __int16 v8;
  __int16 v9;

  v2 = *(_QWORD *)a1;
  v3 = a1[4];
  v4 = *(uint64_t (**)(__int16 *))(*(_QWORD *)a1 + 8);
  if ((a2 & 1) != 0)
  {
    v8 = a1[4];
    v5 = &v8;
  }
  else
  {
    v9 = a1[4];
    v5 = &v9;
  }
  result = v4(v5);
  if ((result & 1) != 0)
  {
    *(_WORD *)(v2 + 24) = v3;
    *(_BYTE *)(v2 + 26) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD33FF44(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  char v5;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_WORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 26);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 18) = v5;
  swift_retain();
  return sub_1AD33FF90;
}

uint64_t sub_1AD33FF90(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  char v6;
  uint64_t result;

  v2 = a1[3];
  v4 = *a1;
  v3 = a1[1];
  v5 = *((_WORD *)a1 + 8);
  v6 = *((_BYTE *)a1 + 18);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v2 + 8) = v4;
    *(_QWORD *)(v2 + 16) = v3;
    *(_WORD *)(v2 + 24) = v5;
    *(_BYTE *)(v2 + 26) = v6;
    return swift_release();
  }
  else
  {
    result = swift_release();
    *(_QWORD *)(v2 + 8) = v4;
    *(_QWORD *)(v2 + 16) = v3;
    *(_WORD *)(v2 + 24) = v5;
    *(_BYTE *)(v2 + 26) = v6;
  }
  return result;
}

uint64_t sub_1AD340018()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 28);
}

uint64_t sub_1AD340020(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = result;
  return result;
}

uint64_t (*sub_1AD340028())()
{
  return nullsub_1;
}

uint64_t (*DoodleMessage.strokes.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD33FC44;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*DoodleMessage.$strokes.modify(_QWORD *a1))(uint64_t *, char)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[1];
  v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD33FCA0;
}

uint64_t DoodleMessage.hasDeltas.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t DoodleMessage.hasDeltas.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*DoodleMessage.hasDeltas.modify())()
{
  return nullsub_1;
}

uint64_t (*SingleStroke.stroke.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD33FC44;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*SingleStroke.$stroke.modify(_QWORD *a1))(uint64_t *, char)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[1];
  v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD33FCA0;
}

uint64_t SingleStroke.color.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24);
}

uint64_t SingleStroke.color.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*SingleStroke.color.modify())()
{
  return nullsub_1;
}

uint64_t SingleStroke.delta.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 28);
}

uint64_t SingleStroke.delta.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 28) = result;
  return result;
}

uint64_t (*SingleStroke.delta.modify())()
{
  return nullsub_1;
}

uint64_t StrokePoint.position.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t StrokePoint.position.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*StrokePoint.position.modify())()
{
  return nullsub_1;
}

uint64_t StrokePoint.delta.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 4);
}

uint64_t StrokePoint.delta.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*StrokePoint.delta.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD340288@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_DWORD *)(result + 16);
  }
  return result;
}

uint64_t sub_1AD3402EC(float a1)
{
  uint64_t v1;
  uint64_t (*v3)(float *);
  uint64_t result;
  _QWORD *v5;
  float v6;

  v3 = *(uint64_t (**)(float *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(float *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 20) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD3403C0(uint64_t a1))()
{
  uint64_t v1;
  uint64_t (*result)();

  *(_QWORD *)a1 = v1;
  if ((*(_BYTE *)(v1 + 20) & 1) != 0)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 16);
    return sub_1AD340434;
  }
  return result;
}

uint64_t (*sub_1AD340438(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  char v5;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_DWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 20);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 20) = v5;
  swift_retain();
  return sub_1AD340484;
}

uint64_t sub_1AD340488@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_DWORD *)(result + 40);
  }
  return result;
}

uint64_t sub_1AD3404EC(int a1)
{
  uint64_t v1;
  uint64_t (*v3)(int *);
  uint64_t result;
  _QWORD *v5;
  int v6;

  v3 = *(uint64_t (**)(int *))(v1 + 24);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_DWORD *)(v1 + 40) = a1;
    *(_BYTE *)(v1 + 44) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD3405B8(uint64_t a1))(_DWORD *a1)
{
  uint64_t v1;
  uint64_t (*result)(_DWORD *);

  *(_QWORD *)a1 = v1;
  if ((*(_BYTE *)(v1 + 44) & 1) != 0)
  {
    result = (uint64_t (*)(_DWORD *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 40);
    return sub_1AD34062C;
  }
  return result;
}

uint64_t sub_1AD34062C(_DWORD *a1)
{
  uint64_t v1;
  int v2;
  uint64_t (*v3)(_DWORD *);
  uint64_t result;
  _QWORD *v5;
  _DWORD v6[3];

  v1 = *(_QWORD *)a1;
  v2 = a1[2];
  v3 = *(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 24);
  v6[0] = v2;
  result = v3(v6);
  if ((result & 1) != 0)
  {
    *(_DWORD *)(v1 + 40) = v2;
    *(_BYTE *)(v1 + 44) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD3406F8(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  char v5;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_DWORD *)(v1 + 40);
  v5 = *(_BYTE *)(v1 + 44);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 20) = v5;
  swift_retain();
  return sub_1AD340744;
}

uint64_t sub_1AD340744(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t result;

  v2 = a1[3];
  v4 = *a1;
  v3 = a1[1];
  v5 = *((_DWORD *)a1 + 4);
  v6 = *((_BYTE *)a1 + 20);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v2 + 24) = v4;
    *(_QWORD *)(v2 + 32) = v3;
    *(_DWORD *)(v2 + 40) = v5;
    *(_BYTE *)(v2 + 44) = v6;
    return swift_release();
  }
  else
  {
    result = swift_release();
    *(_QWORD *)(v2 + 24) = v4;
    *(_QWORD *)(v2 + 32) = v3;
    *(_DWORD *)(v2 + 40) = v5;
    *(_BYTE *)(v2 + 44) = v6;
  }
  return result;
}

float sub_1AD3407CC()
{
  uint64_t v0;

  return *(float *)(v0 + 48);
}

void sub_1AD3407D4(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 48) = a1;
}

uint64_t (*sub_1AD3407DC())()
{
  return nullsub_1;
}

float sub_1AD3407EC()
{
  uint64_t v0;

  return *(float *)(v0 + 52);
}

void sub_1AD3407F4(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 52) = a1;
}

uint64_t (*sub_1AD3407FC())()
{
  return nullsub_1;
}

float sub_1AD34080C()
{
  uint64_t v0;

  return *(float *)(v0 + 56);
}

void sub_1AD340814(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 56) = a1;
}

uint64_t (*sub_1AD34081C())()
{
  return nullsub_1;
}

uint64_t sub_1AD34082C@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 84) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_DWORD *)(result + 80);
  }
  return result;
}

uint64_t sub_1AD340890(float a1)
{
  uint64_t v1;
  uint64_t (*v3)(float *);
  uint64_t result;
  _QWORD *v5;
  float v6;

  v3 = *(uint64_t (**)(float *))(v1 + 64);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(float *)(v1 + 80) = a1;
    *(_BYTE *)(v1 + 84) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD340964(uint64_t a1))(_DWORD *a1)
{
  uint64_t v1;
  uint64_t (*result)(_DWORD *);

  *(_QWORD *)a1 = v1;
  if ((*(_BYTE *)(v1 + 84) & 1) != 0)
  {
    result = (uint64_t (*)(_DWORD *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 80);
    return sub_1AD3409D8;
  }
  return result;
}

uint64_t sub_1AD3409D8(_DWORD *a1)
{
  uint64_t v1;
  int v2;
  uint64_t (*v3)(_DWORD *);
  uint64_t result;
  _QWORD *v5;
  _DWORD v6[3];

  v1 = *(_QWORD *)a1;
  v2 = a1[2];
  v3 = *(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 64);
  v6[0] = v2;
  result = v3(v6);
  if ((result & 1) != 0)
  {
    *(_DWORD *)(v1 + 80) = v2;
    *(_BYTE *)(v1 + 84) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD340AAC(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  char v5;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_DWORD *)(v1 + 80);
  v5 = *(_BYTE *)(v1 + 84);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 20) = v5;
  swift_retain();
  return sub_1AD340AF8;
}

uint64_t sub_1AD340AF8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t result;

  v2 = a1[3];
  v4 = *a1;
  v3 = a1[1];
  v5 = *((_DWORD *)a1 + 4);
  v6 = *((_BYTE *)a1 + 20);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v2 + 64) = v4;
    *(_QWORD *)(v2 + 72) = v3;
    *(_DWORD *)(v2 + 80) = v5;
    *(_BYTE *)(v2 + 84) = v6;
    return swift_release();
  }
  else
  {
    result = swift_release();
    *(_QWORD *)(v2 + 64) = v4;
    *(_QWORD *)(v2 + 72) = v3;
    *(_DWORD *)(v2 + 80) = v5;
    *(_BYTE *)(v2 + 84) = v6;
  }
  return result;
}

BlastDoor::VideoMessage::MediaType_optional __swiftcall VideoMessage.MediaType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 2)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == 1)
    v2 = 0;
  *v1 = v2;
  return (BlastDoor::VideoMessage::MediaType_optional)rawValue;
}

uint64_t sub_1AD340B9C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD340BE8()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD340C1C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

_QWORD *sub_1AD340C64@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 2)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_1AD340C84(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1;
  if (*v1)
    v2 = 2;
  *a1 = v2;
}

uint64_t sub_1AD340C9C()
{
  sub_1AD346270();
  return sub_1AD63B930();
}

uint64_t sub_1AD340CF8()
{
  sub_1AD346270();
  return sub_1AD63B8D0();
}

void VideoMessage.mediaType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *VideoMessage.mediaType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*VideoMessage.mediaType.modify())()
{
  return nullsub_1;
}

uint64_t VideoMessage.intro.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for VideoMessage(0) + 20);
  return sub_1AD33F018(v3, a1);
}

uint64_t VideoMessage.intro.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for VideoMessage(0) + 20);
  return sub_1AD340DCC(a1, v3);
}

uint64_t sub_1AD340DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*VideoMessage.intro.modify())(_QWORD)
{
  type metadata accessor for VideoMessage(0);
  return nullsub_1;
}

uint64_t sub_1AD340E3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for VideoMessage(0) + 24) + 16);
  if (v3)
  {
    *a2 = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t VideoMessage.playingMessages.setter(uint64_t a1)
{
  type metadata accessor for VideoMessage(0);
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(a1);
}

uint64_t (*VideoMessage.playingMessages.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*result)(_QWORD *, char);

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for VideoMessage(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(v1 + v3 + 16);
  if (v4)
  {
    *(_QWORD *)a1 = v4;
    swift_bridgeObjectRetain();
    return sub_1AD012768;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD340F88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for VideoMessage(0) + 24));
  v4 = v3[1];
  v5 = v3[2];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD340FD0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = (_QWORD *)(a2 + *(int *)(type metadata accessor for VideoMessage(0) + 24));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  *v5 = v3;
  v5[1] = v2;
  v5[2] = v4;
  return result;
}

void (*VideoMessage.$playingMessages.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(int *)(type metadata accessor for VideoMessage(0) + 24);
  *((_DWORD *)v3 + 8) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD01297C;
}

uint64_t IntroBalloon.header.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD0D3D2C(v1, a1, type metadata accessor for DigitalTouchHeader);
}

uint64_t IntroBalloon.header.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD33F8D8(a1, v1, type metadata accessor for DigitalTouchHeader);
}

uint64_t (*IntroBalloon.header.modify())()
{
  return nullsub_1;
}

uint64_t IntroBalloon.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IntroBalloon(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  LOBYTE(v3) = *((_BYTE *)v3 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t type metadata accessor for IntroBalloon(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1F78);
}

__n128 IntroBalloon.content.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 *v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IntroBalloon(0) + 20));
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u8[8] = v4;
  return result;
}

uint64_t (*IntroBalloon.content.modify())(_QWORD)
{
  type metadata accessor for IntroBalloon(0);
  return nullsub_1;
}

uint64_t (*KissMessage.kisses.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD33FC44;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD341280(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) == 0)
    return a3(*a1);
  v4 = swift_bridgeObjectRetain();
  a3(v4);
  return swift_bridgeObjectRelease();
}

uint64_t (*KissMessage.$kisses.modify(_QWORD *a1))(uint64_t *, char)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[1];
  v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD33FCA0;
}

uint64_t SingleKiss.point.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t SingleKiss.point.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SingleKiss.point.modify())()
{
  return nullsub_1;
}

uint64_t SingleKiss.angle.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 4);
}

uint64_t SingleKiss.angle.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*SingleKiss.angle.modify())()
{
  return nullsub_1;
}

uint64_t SingleKiss.delay.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 6);
}

uint64_t SingleKiss.delay.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 6) = result;
  return result;
}

uint64_t (*SingleKiss.delay.modify())()
{
  return nullsub_1;
}

uint64_t AngerMessage.duration.setter(float a1)
{
  uint64_t v1;
  uint64_t (*v3)(float *);
  uint64_t result;
  _QWORD *v5;
  float v6;

  v3 = *(uint64_t (**)(float *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(float *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 20) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*AngerMessage.duration.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t (*result)();

  *(_QWORD *)a1 = v1;
  if ((*(_BYTE *)(v1 + 20) & 1) != 0)
  {
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 16);
    return sub_1AD340434;
  }
  return result;
}

uint64_t sub_1AD3414CC(uint64_t a1)
{
  uint64_t (**v1)(_DWORD *);
  int v2;
  uint64_t (*v3)(_DWORD *);
  uint64_t result;
  _QWORD *v5;
  _DWORD v6[3];

  v1 = *(uint64_t (***)(_DWORD *))a1;
  v2 = *(_DWORD *)(a1 + 8);
  v3 = **(uint64_t (***)(_DWORD *))a1;
  v6[0] = v2;
  result = v3(v6);
  if ((result & 1) != 0)
  {
    *((_DWORD *)v1 + 4) = v2;
    *((_BYTE *)v1 + 20) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*AngerMessage.$duration.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  char v5;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_DWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 20);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 20) = v5;
  swift_retain();
  return sub_1AD340484;
}

uint64_t sub_1AD3415EC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t result;

  v2 = a1[3];
  v4 = *a1;
  v3 = a1[1];
  v5 = *((_DWORD *)a1 + 4);
  v6 = *((_BYTE *)a1 + 20);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)v2 = v4;
    *(_QWORD *)(v2 + 8) = v3;
    *(_DWORD *)(v2 + 16) = v5;
    *(_BYTE *)(v2 + 20) = v6;
    return swift_release();
  }
  else
  {
    result = swift_release();
    *(_QWORD *)v2 = v4;
    *(_QWORD *)(v2 + 8) = v3;
    *(_DWORD *)(v2 + 16) = v5;
    *(_BYTE *)(v2 + 20) = v6;
  }
  return result;
}

float AngerMessage.normalizedCenterX.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 24);
}

void AngerMessage.normalizedCenterX.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 24) = a1;
}

uint64_t (*AngerMessage.normalizedCenterX.modify())()
{
  return nullsub_1;
}

float AngerMessage.normalizedCenterY.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 28);
}

void AngerMessage.normalizedCenterY.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 28) = a1;
}

uint64_t (*AngerMessage.normalizedCenterY.modify())()
{
  return nullsub_1;
}

uint64_t AngerMessage.movements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AngerMessage.movements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*AngerMessage.movements.modify())()
{
  return nullsub_1;
}

uint64_t AngerMovement.point.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t (*AngerMovement.point.modify())()
{
  return nullsub_1;
}

uint64_t (*AngerMovement.delay.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD34171C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD3088, type metadata accessor for DigitalTouchBalloon, (uint64_t)&unk_1AD6504A8);
  result = sub_1ACFF9724(&qword_1EECD30B8, type metadata accessor for DigitalTouchBalloon, (uint64_t)&unk_1AD6504D0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD341778(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD2F10, type metadata accessor for DigitalTouchMessage, (uint64_t)&unk_1AD656F88);
  result = sub_1ACFF9724(&qword_1EECD2F28, type metadata accessor for DigitalTouchMessage, (uint64_t)&unk_1AD656FB0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD3417D4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD2F08, type metadata accessor for DigitalTouchHeader, (uint64_t)&unk_1AD6504F8);
  result = sub_1ACFF9724(&qword_1EECD2F20, type metadata accessor for DigitalTouchHeader, (uint64_t)&unk_1AD650520);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD341830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD29B690, (uint64_t (*)(void))sub_1AD29B53C);
}

uint64_t sub_1AD341844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD287024, (uint64_t (*)(void))sub_1AD287068);
}

uint64_t sub_1AD341858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD287C58, (uint64_t (*)(void))sub_1AD287C9C);
}

uint64_t sub_1AD34186C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2876E8, (uint64_t (*)(void))sub_1AD28772C);
}

uint64_t sub_1AD341880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2877B4, (uint64_t (*)(void))sub_1AD2877F8);
}

uint64_t sub_1AD341894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD29B6D4, (uint64_t (*)(void))sub_1AD29B580);
}

unint64_t sub_1AD3418AC()
{
  unint64_t result;

  result = qword_1EECDAD80;
  if (!qword_1EECDAD80)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for VideoMessage.MediaType, &type metadata for VideoMessage.MediaType);
    atomic_store(result, (unint64_t *)&qword_1EECDAD80);
  }
  return result;
}

uint64_t sub_1AD3418F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28799C, (uint64_t (*)(void))sub_1AD287AD8);
}

uint64_t sub_1AD341904(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD7010, type metadata accessor for VideoMessage, (uint64_t)&protocol conformance descriptor for VideoMessage);
  result = sub_1ACFF9724(&qword_1EECD6FD8, type metadata accessor for VideoMessage, (uint64_t)&protocol conformance descriptor for VideoMessage);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD341960(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD3070, type metadata accessor for IntroBalloon, (uint64_t)&protocol conformance descriptor for IntroBalloon);
  result = sub_1ACFF9724(&qword_1EECD30A8, type metadata accessor for IntroBalloon, (uint64_t)&protocol conformance descriptor for IntroBalloon);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD3419BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD29B64C, (uint64_t (*)(void))sub_1AD29B4F8);
}

uint64_t sub_1AD3419D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD287D24, (uint64_t (*)(void))sub_1AD287D68);
}

uint64_t sub_1AD3419E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD29B608, (uint64_t (*)(void))sub_1AD29B4B4);
}

uint64_t sub_1AD3419F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD287E44, (uint64_t (*)(void))sub_1AD287E98);
}

uint64_t sub_1AD341A0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD0E0C84(a1, a2);
}

uint64_t sub_1AD341A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0);
}

uint64_t sub_1AD341A30(uint64_t *a1, _QWORD *a2)
{
  return sub_1AD0E0DE0(a1, a2);
}

uint64_t sub_1AD341A48(__int16 *a1)
{
  return sub_1AD00346C(*a1);
}

uint64_t sub_1AD341A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_WORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 26);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 8) = v2;
  *(_WORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 18) = v4;
  return swift_retain();
}

uint64_t sub_1AD341A8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = *((_WORD *)a1 + 8);
  v6 = *((_BYTE *)a1 + 18);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v3;
  *(_WORD *)(a2 + 24) = v5;
  *(_BYTE *)(a2 + 26) = v6;
  return result;
}

uint64_t sub_1AD341AE8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD341B10@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD341B48()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD341B70@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD341BA8(float *a1)
{
  return sub_1AD003538(*a1);
}

uint64_t sub_1AD341BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_DWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 20);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 20) = v4;
  return swift_retain();
}

uint64_t sub_1AD341BEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = *((_DWORD *)a1 + 4);
  v6 = *((_BYTE *)a1 + 20);
  swift_retain();
  result = swift_release();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_DWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 20) = v6;
  return result;
}

uint64_t sub_1AD341C48(int *a1)
{
  return sub_1AD00360C(*a1);
}

uint64_t sub_1AD341C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_DWORD *)(a1 + 40);
  v4 = *(_BYTE *)(a1 + 44);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 20) = v4;
  return swift_retain();
}

uint64_t sub_1AD341C8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = *((_DWORD *)a1 + 4);
  v6 = *((_BYTE *)a1 + 20);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v3;
  *(_DWORD *)(a2 + 40) = v5;
  *(_BYTE *)(a2 + 44) = v6;
  return result;
}

uint64_t sub_1AD341CE8(float *a1)
{
  return sub_1AD003538(*a1);
}

uint64_t sub_1AD341D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_DWORD *)(a1 + 80);
  v4 = *(_BYTE *)(a1 + 84);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 20) = v4;
  return swift_retain();
}

uint64_t sub_1AD341D2C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = *((_DWORD *)a1 + 4);
  v6 = *((_BYTE *)a1 + 20);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 64) = v4;
  *(_QWORD *)(a2 + 72) = v3;
  *(_DWORD *)(a2 + 80) = v5;
  *(_BYTE *)(a2 + 84) = v6;
  return result;
}

uint64_t sub_1AD341D88()
{
  uint64_t v0;

  type metadata accessor for VideoMessage(0);
  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD341DD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD0E0C84(a1, a2);
}

uint64_t sub_1AD341DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0);
}

uint64_t keypath_get_1Tm_0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD341E28(uint64_t *a1, _QWORD *a2)
{
  return sub_1AD0E0DE0(a1, a2);
}

uint64_t sub_1AD341E40(float *a1)
{
  return sub_1AD003538(*a1);
}

uint64_t sub_1AD341E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_DWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 20);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 20) = v4;
  return swift_retain();
}

uint64_t sub_1AD341E84(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = *((_DWORD *)a1 + 4);
  v6 = *((_BYTE *)a1 + 20);
  swift_retain();
  result = swift_release();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_DWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 20) = v6;
  return result;
}

char *sub_1AD341EDC(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B084();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for DigitalTouchHeader(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    *(_DWORD *)v11 = *(_DWORD *)v12;
    v11[4] = v12[4];
    *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
    *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
    a1[v9[8]] = a2[v9[8]];
    v13 = *(int *)(a3 + 20);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for DigitalTouchMessage(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
      case 5u:
        v17 = *((_QWORD *)v15 + 1);
        *(_QWORD *)v14 = *(_QWORD *)v15;
        *((_QWORD *)v14 + 1) = v17;
        *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v20 = *((_QWORD *)v15 + 1);
        *(_QWORD *)v14 = *(_QWORD *)v15;
        *((_QWORD *)v14 + 1) = v20;
        *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
        v14[24] = v15[24];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v21 = *((_QWORD *)v15 + 1);
        *(_QWORD *)v14 = *(_QWORD *)v15;
        *((_QWORD *)v14 + 1) = v21;
        *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
        v14[20] = v15[20];
        v22 = *((_QWORD *)v15 + 4);
        *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
        *((_QWORD *)v14 + 4) = v22;
        *((_DWORD *)v14 + 10) = *((_DWORD *)v15 + 10);
        v14[44] = v15[44];
        *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
        *((_DWORD *)v14 + 14) = *((_DWORD *)v15 + 14);
        v23 = *((_QWORD *)v15 + 9);
        *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
        *((_QWORD *)v14 + 9) = v23;
        v14[84] = v15[84];
        *((_DWORD *)v14 + 20) = *((_DWORD *)v15 + 20);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *v14 = *v15;
        v43 = type metadata accessor for VideoMessage(0);
        v24 = *(int *)(v43 + 20);
        v25 = &v14[v24];
        v26 = &v15[v24];
        v27 = type metadata accessor for IntroBalloon(0);
        v42 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v26, 1, v27))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v8(v25, v26, v7);
          v30 = v9[5];
          v31 = &v25[v30];
          v32 = &v26[v30];
          *(_DWORD *)v31 = *(_DWORD *)v32;
          v31[4] = v32[4];
          *(_QWORD *)&v25[v9[6]] = *(_QWORD *)&v26[v9[6]];
          *(_QWORD *)&v25[v9[7]] = *(_QWORD *)&v26[v9[7]];
          v25[v9[8]] = v26[v9[8]];
          v33 = *(int *)(v27 + 20);
          v34 = &v25[v33];
          v35 = &v26[v33];
          v36 = *((_QWORD *)v35 + 1);
          *(_QWORD *)v34 = *(_QWORD *)v35;
          *((_QWORD *)v34 + 1) = v36;
          *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
          v34[24] = v35[24];
          v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56);
          swift_retain();
          swift_bridgeObjectRetain();
          v37(v25, 0, 1, v27);
        }
        v38 = *(int *)(v43 + 24);
        v39 = &v14[v38];
        v40 = &v15[v38];
        v41 = *((_QWORD *)v40 + 1);
        *(_QWORD *)v39 = *(_QWORD *)v40;
        *((_QWORD *)v39 + 1) = v41;
        *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v29 = *((_QWORD *)v15 + 1);
        *(_QWORD *)v14 = *(_QWORD *)v15;
        *((_QWORD *)v14 + 1) = v29;
        *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
        v14[20] = v15[20];
        *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
        *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1AD342300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1AD63B084();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for DigitalTouchMessage(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
    case 5:
    case 6:
      goto LABEL_2;
    case 2:
      swift_release();
      swift_release();
      result = swift_release();
      break;
    case 4:
      v8 = v6 + *(int *)(type metadata accessor for VideoMessage(0) + 20);
      v9 = type metadata accessor for IntroBalloon(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      {
        v5(v8, v4);
        swift_release();
        swift_bridgeObjectRelease();
      }
LABEL_2:
      swift_release();
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AD342454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_1AD63B084();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for DigitalTouchHeader(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_BYTE *)(a1 + v8[8]) = *(_BYTE *)(a2 + v8[8]);
  v12 = *(int *)(a3 + 20);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for DigitalTouchMessage(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 5u:
      v16 = v14[1];
      *v13 = *v14;
      v13[1] = v16;
      v13[2] = v14[2];
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 1u:
      v17 = v14[1];
      *v13 = *v14;
      v13[1] = v17;
      v13[2] = v14[2];
      *((_BYTE *)v13 + 24) = *((_BYTE *)v14 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 2u:
      v18 = v14[1];
      *v13 = *v14;
      v13[1] = v18;
      *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
      *((_BYTE *)v13 + 20) = *((_BYTE *)v14 + 20);
      v19 = v14[4];
      v13[3] = v14[3];
      v13[4] = v19;
      *((_DWORD *)v13 + 10) = *((_DWORD *)v14 + 10);
      *((_BYTE *)v13 + 44) = *((_BYTE *)v14 + 44);
      v13[6] = v14[6];
      *((_DWORD *)v13 + 14) = *((_DWORD *)v14 + 14);
      v20 = v14[9];
      v13[8] = v14[8];
      v13[9] = v20;
      *((_BYTE *)v13 + 84) = *((_BYTE *)v14 + 84);
      *((_DWORD *)v13 + 20) = *((_DWORD *)v14 + 20);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_11;
    case 4u:
      *(_BYTE *)v13 = *(_BYTE *)v14;
      v41 = type metadata accessor for VideoMessage(0);
      v21 = *(int *)(v41 + 20);
      v22 = (char *)v13 + v21;
      v23 = (char *)v14 + v21;
      v24 = type metadata accessor for IntroBalloon(0);
      v40 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v22, (uint64_t)v23, v6);
        v27 = v8[5];
        v28 = &v22[v27];
        v29 = &v23[v27];
        *(_DWORD *)v28 = *(_DWORD *)v29;
        v28[4] = v29[4];
        *(_QWORD *)&v22[v8[6]] = *(_QWORD *)&v23[v8[6]];
        *(_QWORD *)&v22[v8[7]] = *(_QWORD *)&v23[v8[7]];
        v22[v8[8]] = v23[v8[8]];
        v30 = *(int *)(v24 + 20);
        v31 = &v22[v30];
        v32 = &v23[v30];
        v33 = *((_QWORD *)v32 + 1);
        *(_QWORD *)v31 = *(_QWORD *)v32;
        *((_QWORD *)v31 + 1) = v33;
        *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
        v31[24] = v32[24];
        v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
        swift_retain();
        swift_bridgeObjectRetain();
        v34(v22, 0, 1, v24);
      }
      v35 = *(int *)(v41 + 24);
      v36 = (_QWORD *)((char *)v13 + v35);
      v37 = (_QWORD *)((char *)v14 + v35);
      v38 = v37[1];
      *v36 = *v37;
      v36[1] = v38;
      v36[2] = v37[2];
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 6u:
      v26 = v14[1];
      *v13 = *v14;
      v13[1] = v26;
      *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
      *((_BYTE *)v13 + 20) = *((_BYTE *)v14 + 20);
      v13[3] = v14[3];
      v13[4] = v14[4];
      swift_retain();
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_1AD342834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_1AD63B084();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = (int *)type metadata accessor for DigitalTouchHeader(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_BYTE *)(v11 + 4);
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = v12;
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_BYTE *)(a1 + v8[8]) = *(_BYTE *)(a2 + v8[8]);
  if (a1 != a2)
  {
    v13 = v8;
    v14 = *(int *)(a3 + 20);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_1AD066230(a1 + v14, type metadata accessor for DigitalTouchMessage);
    v17 = type metadata accessor for DigitalTouchMessage(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
      case 5u:
        v18 = v16[1];
        *v15 = *v16;
        v15[1] = v18;
        v15[2] = v16[2];
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 1u:
        v19 = v16[1];
        *v15 = *v16;
        v15[1] = v19;
        v15[2] = v16[2];
        *((_BYTE *)v15 + 24) = *((_BYTE *)v16 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 2u:
        v20 = v16[1];
        *v15 = *v16;
        v15[1] = v20;
        v21 = *((_DWORD *)v16 + 4);
        *((_BYTE *)v15 + 20) = *((_BYTE *)v16 + 20);
        *((_DWORD *)v15 + 4) = v21;
        v22 = v16[4];
        v15[3] = v16[3];
        v15[4] = v22;
        v23 = *((_DWORD *)v16 + 10);
        *((_BYTE *)v15 + 44) = *((_BYTE *)v16 + 44);
        *((_DWORD *)v15 + 10) = v23;
        *((_DWORD *)v15 + 12) = *((_DWORD *)v16 + 12);
        *((_DWORD *)v15 + 13) = *((_DWORD *)v16 + 13);
        *((_DWORD *)v15 + 14) = *((_DWORD *)v16 + 14);
        v24 = v16[9];
        v15[8] = v16[8];
        v15[9] = v24;
        v25 = *((_DWORD *)v16 + 20);
        *((_BYTE *)v15 + 84) = *((_BYTE *)v16 + 84);
        *((_DWORD *)v15 + 20) = v25;
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      case 4u:
        *(_BYTE *)v15 = *(_BYTE *)v16;
        v48 = type metadata accessor for VideoMessage(0);
        v26 = *(int *)(v48 + 20);
        v27 = (char *)v15 + v26;
        v28 = (char *)v16 + v26;
        v29 = type metadata accessor for IntroBalloon(0);
        v47 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v28, 1, v29))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v27, v28, v6);
          v33 = v13[5];
          v34 = &v27[v33];
          v35 = &v28[v33];
          v36 = *(_DWORD *)v35;
          v34[4] = v35[4];
          *(_DWORD *)v34 = v36;
          *(_QWORD *)&v27[v13[6]] = *(_QWORD *)&v28[v13[6]];
          *(_QWORD *)&v27[v13[7]] = *(_QWORD *)&v28[v13[7]];
          v27[v13[8]] = v28[v13[8]];
          v37 = *(int *)(v29 + 20);
          v38 = &v27[v37];
          v39 = &v28[v37];
          v40 = *((_QWORD *)v39 + 1);
          *(_QWORD *)v38 = *(_QWORD *)v39;
          *((_QWORD *)v38 + 1) = v40;
          *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
          v38[24] = v39[24];
          v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56);
          swift_retain();
          swift_bridgeObjectRetain();
          v41(v27, 0, 1, v29);
        }
        v42 = *(int *)(v48 + 24);
        v43 = (_QWORD *)((char *)v15 + v42);
        v44 = (_QWORD *)((char *)v16 + v42);
        v45 = v44[1];
        *v43 = *v44;
        v43[1] = v45;
        v43[2] = v44[2];
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 6u:
        v31 = v16[1];
        *v15 = *v16;
        v15[1] = v31;
        v32 = *((_DWORD *)v16 + 4);
        *((_BYTE *)v15 + 20) = *((_BYTE *)v16 + 20);
        *((_DWORD *)v15 + 4) = v32;
        *((_DWORD *)v15 + 6) = *((_DWORD *)v16 + 6);
        *((_DWORD *)v15 + 7) = *((_DWORD *)v16 + 7);
        v15[4] = v16[4];
        swift_retain();
        swift_bridgeObjectRetain();
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1AD342C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1AD63B084();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for DigitalTouchHeader(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_BYTE *)(a1 + v8[8]) = *(_BYTE *)(a2 + v8[8]);
  v12 = *(int *)(a3 + 20);
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  v15 = type metadata accessor for DigitalTouchMessage(0);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    *v13 = *v14;
    v32 = type metadata accessor for VideoMessage(0);
    v16 = *(int *)(v32 + 20);
    v17 = &v13[v16];
    v18 = &v14[v16];
    v19 = type metadata accessor for IntroBalloon(0);
    v31 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v18, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v21 = v8[5];
      v22 = &v17[v21];
      v23 = &v18[v21];
      *(_DWORD *)v22 = *(_DWORD *)v23;
      v22[4] = v23[4];
      *(_QWORD *)&v17[v8[6]] = *(_QWORD *)&v18[v8[6]];
      *(_QWORD *)&v17[v8[7]] = *(_QWORD *)&v18[v8[7]];
      v17[v8[8]] = v18[v8[8]];
      v24 = *(int *)(v19 + 20);
      v25 = &v17[v24];
      v26 = &v18[v24];
      *(_OWORD *)(v25 + 9) = *(_OWORD *)(v26 + 9);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v17, 0, 1, v19);
    }
    v27 = *(int *)(v32 + 24);
    v28 = &v13[v27];
    v29 = &v14[v27];
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1AD342E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_1AD63B084();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = (int *)type metadata accessor for DigitalTouchHeader(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_BYTE *)(a1 + v8[8]) = *(_BYTE *)(a2 + v8[8]);
  if (a1 != a2)
  {
    v12 = v8;
    v13 = *(int *)(a3 + 20);
    v14 = (_BYTE *)(a1 + v13);
    v15 = (_BYTE *)(a2 + v13);
    sub_1AD066230(a1 + v13, type metadata accessor for DigitalTouchMessage);
    v16 = type metadata accessor for DigitalTouchMessage(0);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *v14 = *v15;
      v33 = type metadata accessor for VideoMessage(0);
      v17 = *(int *)(v33 + 20);
      v18 = &v14[v17];
      v19 = &v15[v17];
      v20 = type metadata accessor for IntroBalloon(0);
      v32 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v18, v19, v6);
        v22 = v12[5];
        v23 = &v18[v22];
        v24 = &v19[v22];
        *(_DWORD *)v23 = *(_DWORD *)v24;
        v23[4] = v24[4];
        *(_QWORD *)&v18[v12[6]] = *(_QWORD *)&v19[v12[6]];
        *(_QWORD *)&v18[v12[7]] = *(_QWORD *)&v19[v12[7]];
        v18[v12[8]] = v19[v12[8]];
        v25 = *(int *)(v20 + 20);
        v26 = &v18[v25];
        v27 = &v19[v25];
        *(_OWORD *)(v26 + 9) = *(_OWORD *)(v27 + 9);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v18, 0, 1, v20);
      }
      v28 = *(int *)(v33 + 24);
      v29 = &v14[v28];
      v30 = &v15[v28];
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1AD3430B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3430C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for DigitalTouchHeader(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for DigitalTouchMessage(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1AD343134()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD343140(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for DigitalTouchHeader(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for DigitalTouchMessage(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1AD3431BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for DigitalTouchHeader(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DigitalTouchMessage(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1AD343240(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
      case 5u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        a1[2] = a2[2];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
        *((_BYTE *)a1 + 20) = *((_BYTE *)a2 + 20);
        v12 = a2[4];
        a1[3] = a2[3];
        a1[4] = v12;
        *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
        *((_BYTE *)a1 + 44) = *((_BYTE *)a2 + 44);
        a1[6] = a2[6];
        *((_DWORD *)a1 + 14) = *((_DWORD *)a2 + 14);
        v13 = a2[9];
        a1[8] = a2[8];
        a1[9] = v13;
        *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
        *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v14 = type metadata accessor for VideoMessage(0);
        v15 = *(int *)(v14 + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = type metadata accessor for IntroBalloon(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v22 = sub_1AD63B084();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v16, v17, v22);
          v23 = (int *)type metadata accessor for DigitalTouchHeader(0);
          v24 = v23[5];
          v25 = &v16[v24];
          v26 = &v17[v24];
          *(_DWORD *)v25 = *(_DWORD *)v26;
          v25[4] = v26[4];
          *(_QWORD *)&v16[v23[6]] = *(_QWORD *)&v17[v23[6]];
          *(_QWORD *)&v16[v23[7]] = *(_QWORD *)&v17[v23[7]];
          v16[v23[8]] = v17[v23[8]];
          v27 = *(int *)(v18 + 20);
          v28 = &v16[v27];
          v29 = &v17[v27];
          v30 = *((_QWORD *)v29 + 1);
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = v30;
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          v28[24] = v29[24];
          v31 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
          swift_retain();
          swift_bridgeObjectRetain();
          v31(v16, 0, 1, v18);
        }
        v32 = *(int *)(v14 + 24);
        v33 = (_QWORD *)((char *)a1 + v32);
        v34 = (_QWORD *)((char *)a2 + v32);
        v35 = v34[1];
        *v33 = *v34;
        v33[1] = v35;
        v33[2] = v34[2];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
        *((_BYTE *)a1 + 20) = *((_BYTE *)a2 + 20);
        a1[3] = a2[3];
        a1[4] = a2[4];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1AD3435D4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
    case 5:
    case 6:
      goto LABEL_2;
    case 2:
      swift_release();
      swift_release();
      result = swift_release();
      break;
    case 4:
      v3 = a1 + *(int *)(type metadata accessor for VideoMessage(0) + 20);
      v4 = type metadata accessor for IntroBalloon(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
      {
        v5 = sub_1AD63B084();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
        swift_release();
        swift_bridgeObjectRelease();
      }
LABEL_2:
      swift_release();
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1AD3436EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 5u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 1u:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 2u:
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
      *((_BYTE *)a1 + 20) = *((_BYTE *)a2 + 20);
      v9 = a2[4];
      a1[3] = a2[3];
      a1[4] = v9;
      *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
      *((_BYTE *)a1 + 44) = *((_BYTE *)a2 + 44);
      a1[6] = a2[6];
      *((_DWORD *)a1 + 14) = *((_DWORD *)a2 + 14);
      v10 = a2[9];
      a1[8] = a2[8];
      a1[9] = v10;
      *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
      *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_11;
    case 4u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v11 = type metadata accessor for VideoMessage(0);
      v12 = *(int *)(v11 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for IntroBalloon(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v19 = sub_1AD63B084();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v13, v14, v19);
        v20 = (int *)type metadata accessor for DigitalTouchHeader(0);
        v21 = v20[5];
        v22 = &v13[v21];
        v23 = &v14[v21];
        *(_DWORD *)v22 = *(_DWORD *)v23;
        v22[4] = v23[4];
        *(_QWORD *)&v13[v20[6]] = *(_QWORD *)&v14[v20[6]];
        *(_QWORD *)&v13[v20[7]] = *(_QWORD *)&v14[v20[7]];
        v13[v20[8]] = v14[v20[8]];
        v24 = *(int *)(v15 + 20);
        v25 = &v13[v24];
        v26 = &v14[v24];
        v27 = *((_QWORD *)v26 + 1);
        *(_QWORD *)v25 = *(_QWORD *)v26;
        *((_QWORD *)v25 + 1) = v27;
        *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
        v25[24] = v26[24];
        v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56);
        swift_retain();
        swift_bridgeObjectRetain();
        v28(v13, 0, 1, v15);
      }
      v29 = *(int *)(v11 + 24);
      v30 = (_QWORD *)((char *)a1 + v29);
      v31 = (_QWORD *)((char *)a2 + v29);
      v32 = v31[1];
      *v30 = *v31;
      v30[1] = v32;
      v30[2] = v31[2];
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 6u:
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
      *((_BYTE *)a1 + 20) = *((_BYTE *)a2 + 20);
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_retain();
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1AD343A40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  if (a1 != a2)
  {
    sub_1AD066230((uint64_t)a1, type metadata accessor for DigitalTouchMessage);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
      case 5u:
        v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        a1[2] = a2[2];
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 1u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 2u:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        v9 = *((_DWORD *)a2 + 4);
        *((_BYTE *)a1 + 20) = *((_BYTE *)a2 + 20);
        *((_DWORD *)a1 + 4) = v9;
        v10 = a2[4];
        a1[3] = a2[3];
        a1[4] = v10;
        v11 = *((_DWORD *)a2 + 10);
        *((_BYTE *)a1 + 44) = *((_BYTE *)a2 + 44);
        *((_DWORD *)a1 + 10) = v11;
        *((_DWORD *)a1 + 12) = *((_DWORD *)a2 + 12);
        *((_DWORD *)a1 + 13) = *((_DWORD *)a2 + 13);
        *((_DWORD *)a1 + 14) = *((_DWORD *)a2 + 14);
        v12 = a2[9];
        a1[8] = a2[8];
        a1[9] = v12;
        v13 = *((_DWORD *)a2 + 20);
        *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
        *((_DWORD *)a1 + 20) = v13;
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      case 4u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v14 = type metadata accessor for VideoMessage(0);
        v15 = *(int *)(v14 + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = type metadata accessor for IntroBalloon(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v23 = sub_1AD63B084();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v16, v17, v23);
          v24 = (int *)type metadata accessor for DigitalTouchHeader(0);
          v25 = v24[5];
          v26 = &v16[v25];
          v27 = &v17[v25];
          v28 = v27[4];
          *(_DWORD *)v26 = *(_DWORD *)v27;
          v26[4] = v28;
          *(_QWORD *)&v16[v24[6]] = *(_QWORD *)&v17[v24[6]];
          *(_QWORD *)&v16[v24[7]] = *(_QWORD *)&v17[v24[7]];
          v16[v24[8]] = v17[v24[8]];
          v29 = *(int *)(v18 + 20);
          v30 = &v16[v29];
          v31 = &v17[v29];
          v32 = *((_QWORD *)v31 + 1);
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = v32;
          *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
          v30[24] = v31[24];
          v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
          swift_retain();
          swift_bridgeObjectRetain();
          v33(v16, 0, 1, v18);
        }
        v34 = *(int *)(v14 + 24);
        v35 = (_QWORD *)((char *)a1 + v34);
        v36 = (_QWORD *)((char *)a2 + v34);
        v37 = v36[1];
        *v35 = *v36;
        v35[1] = v37;
        v35[2] = v36[2];
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 6u:
        v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        v22 = *((_DWORD *)a2 + 4);
        *((_BYTE *)a1 + 20) = *((_BYTE *)a2 + 20);
        *((_DWORD *)a1 + 4) = v22;
        *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
        *((_DWORD *)a1 + 7) = *((_DWORD *)a2 + 7);
        a1[4] = a2[4];
        swift_retain();
        swift_bridgeObjectRetain();
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *sub_1AD343DBC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;

  if (swift_getEnumCaseMultiPayload() == 4)
  {
    *a1 = *a2;
    v6 = type metadata accessor for VideoMessage(0);
    v7 = *(int *)(v6 + 20);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for IntroBalloon(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = sub_1AD63B084();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      v14 = (int *)type metadata accessor for DigitalTouchHeader(0);
      v15 = v14[5];
      v16 = &v8[v15];
      v17 = &v9[v15];
      *(_DWORD *)v16 = *(_DWORD *)v17;
      v16[4] = v17[4];
      *(_QWORD *)&v8[v14[6]] = *(_QWORD *)&v9[v14[6]];
      *(_QWORD *)&v8[v14[7]] = *(_QWORD *)&v9[v14[7]];
      v8[v14[8]] = v9[v14[8]];
      v18 = *(int *)(v10 + 20);
      v19 = &v8[v18];
      v20 = &v9[v18];
      *(_OWORD *)(v19 + 9) = *(_OWORD *)(v20 + 9);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v21 = *(int *)(v6 + 24);
    v22 = &a1[v21];
    v23 = &a2[v21];
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_1AD343F5C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;

  if (a1 != a2)
  {
    sub_1AD066230((uint64_t)a1, type metadata accessor for DigitalTouchMessage);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *a1 = *a2;
      v6 = type metadata accessor for VideoMessage(0);
      v7 = *(int *)(v6 + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for IntroBalloon(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v13 = sub_1AD63B084();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
        v14 = (int *)type metadata accessor for DigitalTouchHeader(0);
        v15 = v14[5];
        v16 = &v8[v15];
        v17 = &v9[v15];
        *(_DWORD *)v16 = *(_DWORD *)v17;
        v16[4] = v17[4];
        *(_QWORD *)&v8[v14[6]] = *(_QWORD *)&v9[v14[6]];
        *(_QWORD *)&v8[v14[7]] = *(_QWORD *)&v9[v14[7]];
        v8[v14[8]] = v9[v14[8]];
        v18 = *(int *)(v10 + 20);
        v19 = &v8[v18];
        v20 = &v9[v18];
        *(_OWORD *)(v19 + 9) = *(_OWORD *)(v20 + 9);
        *(_OWORD *)v19 = *(_OWORD *)v20;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v21 = *(int *)(v6 + 24);
      v22 = &a1[v21];
      v23 = &a2[v21];
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1AD344114()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VideoMessage(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1AD3441A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B084();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v12 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  }
  return a1;
}

uint64_t sub_1AD344258(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t sub_1AD3442E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1AD344370(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t sub_1AD3443F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t sub_1AD344480()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD34448C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1AD63B084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1AD344518()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD344524(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1AD63B084();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
  return result;
}

uint64_t sub_1AD34459C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TapMessage()
{
  return &type metadata for TapMessage;
}

uint64_t destroy for SingleTap()
{
  return swift_release();
}

uint64_t initializeWithCopy for SingleTap(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SingleTap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int16 v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  v5 = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_WORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  return a1;
}

uint64_t assignWithTake for SingleTap(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  return a1;
}

ValueMetadata *type metadata accessor for SingleTap()
{
  return &type metadata for SingleTap;
}

uint64_t initializeWithCopy for DoodleMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DoodleMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for DoodleMessage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DoodleMessage(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DoodleMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DoodleMessage()
{
  return &type metadata for DoodleMessage;
}

uint64_t initializeWithCopy for SingleStroke(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SingleStroke(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  return a1;
}

__n128 __swift_memcpy30_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 14) = *(_OWORD *)(a2 + 14);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SingleStroke(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleStroke(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 30))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleStroke(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 30) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 30) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleStroke()
{
  return &type metadata for SingleStroke;
}

uint64_t __swift_memcpy6_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for StrokePoint(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StrokePoint(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 6) = v3;
  return result;
}

ValueMetadata *type metadata accessor for StrokePoint()
{
  return &type metadata for StrokePoint;
}

uint64_t destroy for HeartbeatMessage()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for HeartbeatMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HeartbeatMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  v7 = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_retain();
  swift_release();
  v9 = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v9;
  return a1;
}

uint64_t assignWithTake for HeartbeatMessage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatMessage(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 85))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeartbeatMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 84) = 0;
    *(_DWORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 85) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 85) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartbeatMessage()
{
  return &type metadata for HeartbeatMessage;
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoMessage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for IntroBalloon(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_1AD63B084();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      v15 = (int *)type metadata accessor for DigitalTouchHeader(0);
      v16 = v15[5];
      v17 = &v8[v16];
      v18 = &v9[v16];
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      *(_QWORD *)&v8[v15[6]] = *(_QWORD *)&v9[v15[6]];
      *(_QWORD *)&v8[v15[7]] = *(_QWORD *)&v9[v15[7]];
      v8[v15[8]] = v9[v15[8]];
      v19 = *(int *)(v10 + 20);
      v20 = &v8[v19];
      v21 = &v9[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
      v20[24] = v21[24];
      v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      v23(v8, 0, 1, v10);
    }
    v24 = *(int *)(a3 + 24);
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v25[2] = v26[2];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for VideoMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for IntroBalloon(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = sub_1AD63B084();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

_BYTE *initializeWithCopy for VideoMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for IntroBalloon(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_1AD63B084();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
    v13 = (int *)type metadata accessor for DigitalTouchHeader(0);
    v14 = v13[5];
    v15 = &v7[v14];
    v16 = &v8[v14];
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    *(_QWORD *)&v7[v13[6]] = *(_QWORD *)&v8[v13[6]];
    *(_QWORD *)&v7[v13[7]] = *(_QWORD *)&v8[v13[7]];
    v7[v13[8]] = v8[v13[8]];
    v17 = *(int *)(v9 + 20);
    v18 = &v7[v17];
    v19 = &v8[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
    v18[24] = v19[24];
    v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    v21(v7, 0, 1, v9);
  }
  v22 = *(int *)(a3 + 24);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v23[2] = v24[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *assignWithCopy for VideoMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for IntroBalloon(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v31 = sub_1AD63B084();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v7, v8, v31);
      v32 = (int *)type metadata accessor for DigitalTouchHeader(0);
      v33 = v32[5];
      v34 = &v7[v33];
      v35 = &v8[v33];
      v36 = v35[4];
      *(_DWORD *)v34 = *(_DWORD *)v35;
      v34[4] = v36;
      *(_QWORD *)&v7[v32[6]] = *(_QWORD *)&v8[v32[6]];
      *(_QWORD *)&v7[v32[7]] = *(_QWORD *)&v8[v32[7]];
      v7[v32[8]] = v8[v32[8]];
      v37 = *(int *)(v9 + 20);
      v38 = &v7[v37];
      v39 = &v8[v37];
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *((_QWORD *)v38 + 1) = v40;
      swift_retain();
      swift_release();
      *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v38[24] = v39[24];
      goto LABEL_7;
    }
    sub_1AD066230((uint64_t)v7, type metadata accessor for IntroBalloon);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  v14 = sub_1AD63B084();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
  v15 = (int *)type metadata accessor for DigitalTouchHeader(0);
  v16 = v15[5];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = v18[4];
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v17[4] = v19;
  *(_QWORD *)&v7[v15[6]] = *(_QWORD *)&v8[v15[6]];
  *(_QWORD *)&v7[v15[7]] = *(_QWORD *)&v8[v15[7]];
  v7[v15[8]] = v8[v15[8]];
  v20 = *(int *)(v9 + 20);
  v21 = &v7[v20];
  v22 = &v8[v20];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  v21[24] = v22[24];
  v24 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  v24(v7, 0, 1, v9);
LABEL_7:
  v26 = *(int *)(a3 + 24);
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = *(_QWORD *)&a2[v26 + 8];
  *v27 = *(_QWORD *)&a2[v26];
  v27[1] = v29;
  swift_retain();
  swift_release();
  v27[2] = *((_QWORD *)v28 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *initializeWithTake for VideoMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for IntroBalloon(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_1AD63B084();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    v13 = (int *)type metadata accessor for DigitalTouchHeader(0);
    v14 = v13[5];
    v15 = &v7[v14];
    v16 = &v8[v14];
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    *(_QWORD *)&v7[v13[6]] = *(_QWORD *)&v8[v13[6]];
    *(_QWORD *)&v7[v13[7]] = *(_QWORD *)&v8[v13[7]];
    v7[v13[8]] = v8[v13[8]];
    v17 = *(int *)(v9 + 20);
    v18 = &v7[v17];
    v19 = &v8[v17];
    *(_OWORD *)(v18 + 9) = *(_OWORD *)(v19 + 9);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v20 = *(int *)(a3 + 24);
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  return a1;
}

_BYTE *assignWithTake for VideoMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for IntroBalloon(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v27 = sub_1AD63B084();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v7, v8, v27);
      v28 = (int *)type metadata accessor for DigitalTouchHeader(0);
      v29 = v28[5];
      v30 = &v7[v29];
      v31 = &v8[v29];
      *(_DWORD *)v30 = *(_DWORD *)v31;
      v30[4] = v31[4];
      *(_QWORD *)&v7[v28[6]] = *(_QWORD *)&v8[v28[6]];
      *(_QWORD *)&v7[v28[7]] = *(_QWORD *)&v8[v28[7]];
      v7[v28[8]] = v8[v28[8]];
      v32 = *(int *)(v9 + 20);
      v33 = &v7[v32];
      v34 = &v8[v32];
      *(_OWORD *)v33 = *(_OWORD *)v34;
      swift_release();
      *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
      swift_bridgeObjectRelease();
      v33[24] = v34[24];
      goto LABEL_7;
    }
    sub_1AD066230((uint64_t)v7, type metadata accessor for IntroBalloon);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v14 = sub_1AD63B084();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
  v15 = (int *)type metadata accessor for DigitalTouchHeader(0);
  v16 = v15[5];
  v17 = &v7[v16];
  v18 = &v8[v16];
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  *(_QWORD *)&v7[v15[6]] = *(_QWORD *)&v8[v15[6]];
  *(_QWORD *)&v7[v15[7]] = *(_QWORD *)&v8[v15[7]];
  v7[v15[8]] = v8[v15[8]];
  v19 = *(int *)(v9 + 20);
  v20 = &v7[v19];
  v21 = &v8[v19];
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v21 + 9);
  *v20 = *v21;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v23 = *(int *)(a3 + 24);
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_OWORD *)&a1[v23] = *(_OWORD *)v25;
  swift_release();
  *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3457BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD34584C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_1AD3458CC()
{
  unint64_t v0;

  sub_1AD345948();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1AD345948()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2E1F70)
  {
    type metadata accessor for IntroBalloon(255);
    v0 = sub_1AD63BC48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2E1F70);
  }
}

uint64_t storeEnumTagSinglePayload for VideoMessage.MediaType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD3459E8 + 4 * byte_1AD67A1CD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD345A1C + 4 * byte_1AD67A1C8[v4]))();
}

uint64_t sub_1AD345A1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD345A24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD345A2CLL);
  return result;
}

uint64_t sub_1AD345A38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD345A40);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD345A44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD345A4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoMessage.MediaType()
{
  return &type metadata for VideoMessage.MediaType;
}

_QWORD *initializeBufferWithCopyOfBuffer for IntroBalloon(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B084();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for DigitalTouchHeader(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
    *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
    *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    v12 = *(int *)(a3 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    v13[24] = v14[24];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for IntroBalloon(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IntroBalloon(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for DigitalTouchHeader(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v11 = *(int *)(a3 + 20);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IntroBalloon(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for DigitalTouchHeader(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 4);
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = v11;
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v12 = *(int *)(a3 + 20);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  swift_retain();
  swift_release();
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 24) = *(_BYTE *)(v14 + 24);
  return a1;
}

uint64_t initializeWithTake for IntroBalloon(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for DigitalTouchHeader(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v11 = *(int *)(a3 + 20);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  *v12 = *v13;
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)v13 + 9);
  return a1;
}

uint64_t assignWithTake for IntroBalloon(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for DigitalTouchHeader(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v11 = *(int *)(a3 + 20);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)(a1 + v11) = *(_OWORD *)v13;
  swift_release();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntroBalloon()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD345EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for DigitalTouchHeader(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for IntroBalloon()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD345F64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for DigitalTouchHeader(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1AD345FDC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DigitalTouchHeader(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for KissMessage()
{
  return &type metadata for KissMessage;
}

ValueMetadata *type metadata accessor for SingleKiss()
{
  return &type metadata for SingleKiss;
}

uint64_t destroy for AngerMessage()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AngerMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AngerMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AngerMessage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AngerMessage(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AngerMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AngerMessage()
{
  return &type metadata for AngerMessage;
}

ValueMetadata *type metadata accessor for AngerMovement()
{
  return &type metadata for AngerMovement;
}

unint64_t sub_1AD346270()
{
  unint64_t result;

  result = qword_1EECDAD88;
  if (!qword_1EECDAD88)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for VideoMessage.MediaType, &type metadata for VideoMessage.MediaType);
    atomic_store(result, (unint64_t *)&qword_1EECDAD88);
  }
  return result;
}

uint64_t sub_1AD3462D4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[4];
  v2 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD346308(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[3].n128_i64[0];
  v6 = v1[3].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD34635C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 56) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD3463D8()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1AD3463E4(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD3463F4())()
{
  return nullsub_1;
}

uint64_t sub_1AD346404()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AD346410(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD346420())()
{
  return nullsub_1;
}

uint64_t sub_1AD346430()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1AD34643C(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD34644C())()
{
  return nullsub_1;
}

uint64_t sub_1AD34645C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_1AD346468(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD346478())()
{
  return nullsub_1;
}

uint64_t sub_1AD346488()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_1AD346490(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 57) = result;
  return result;
}

uint64_t (*sub_1AD346498())()
{
  return nullsub_1;
}

uint64_t sub_1AD3464A8()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1AD3464B4(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD3464C4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3464D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD346500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD346534())()
{
  return nullsub_1;
}

uint64_t sub_1AD346544(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD346564(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 56);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 48);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD2FCC38;
  }
  return result;
}

void (*sub_1AD3465F0(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[4];
  v4 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD2FCD74;
}

uint64_t sub_1AD346654()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD346680(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*sub_1AD3466B4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3466C4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_1AD3466D0(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = result;
  *(_BYTE *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD3466E0())()
{
  return nullsub_1;
}

uint64_t sub_1AD3466F0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t sub_1AD3466FC(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_BYTE *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD34670C())()
{
  return nullsub_1;
}

__n128 sub_1AD34671C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  __int128 v4;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 160);
  v3 = *(_WORD *)(v1 + 168);
  v4 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)(v1 + 144);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_WORD *)(a1 + 56) = v3;
  return result;
}

__n128 sub_1AD346740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  __int128 v4;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_WORD *)(a1 + 56);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 128) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 144) = result;
  *(_QWORD *)(v1 + 160) = v2;
  *(_WORD *)(v1 + 168) = v3;
  return result;
}

uint64_t (*sub_1AD346764())()
{
  return nullsub_1;
}

uint64_t sub_1AD346774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD283BF8, (uint64_t (*)(void))sub_1AD283C3C);
}

uint64_t sub_1AD346788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD283F5C, (uint64_t (*)(void))sub_1AD2840CC);
}

uint64_t sub_1AD3467A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD3467DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[5];
  v3 = a1[6];
  v4 = a1[7];
  *a2 = a1[4];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t destroy for AttributionInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 56) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AttributionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = (_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 48) = *v5;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)v5;
    *(_QWORD *)(a1 + 56) = v6;
    swift_bridgeObjectRetain();
  }
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 154) = *(_OWORD *)(a2 + 154);
  v8 = *(_OWORD *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AttributionInfo(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  v6 = a2[7];
  if (*(_QWORD *)(a1 + 56) != 1)
  {
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1AD0256E4(a1 + 48);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
LABEL_8:
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a2[10];
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = a2[12];
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *((_OWORD *)a2 + 7);
  v10 = *((_OWORD *)a2 + 8);
  v11 = *((_OWORD *)a2 + 9);
  *(_OWORD *)(a1 + 154) = *(_OWORD *)((char *)a2 + 154);
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 144) = v11;
  *(_OWORD *)(a1 + 112) = v9;
  return a1;
}

uint64_t assignWithTake for AttributionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v5 = (_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 56) != 1)
  {
    v6 = *(_QWORD *)(a2 + 56);
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 48) = *v5;
      *(_QWORD *)(a1 + 56) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AD0256E4(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v5;
LABEL_6:
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 154) = *(_OWORD *)(a2 + 154);
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributionInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 170))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AttributionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 168) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 170) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 170) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributionInfo()
{
  return &type metadata for AttributionInfo;
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AttributionInfo.PreviewGenerationConstraints(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 58))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 57);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AttributionInfo.PreviewGenerationConstraints(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 58) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 58) = 0;
    if (a2)
      *(_BYTE *)(result + 57) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributionInfo.PreviewGenerationConstraints()
{
  return &type metadata for AttributionInfo.PreviewGenerationConstraints;
}

uint64_t BasicTapBack.$participantDestinationIdentifiers.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[8];
  v3 = v1[9];
  *a1 = v1[7];
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 BasicTapBack.$participantDestinationIdentifiers.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 56) = *a1;
  *(_QWORD *)(v1 + 72) = v3;
  return result;
}

uint64_t BasicTapBack.participantDestinationIdentifiers.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 72))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

BlastDoor::BasicTapBack::AssociatedMessageType_optional __swiftcall BasicTapBack.AssociatedMessageType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 1;
  switch(rawValue)
  {
    case 2000:
      v2 = 0;
      goto LABEL_6;
    case 2001:
LABEL_6:
      *v1 = v2;
      break;
    case 2002:
      *v1 = 2;
      break;
    case 2003:
      *v1 = 3;
      break;
    case 2004:
      *v1 = 4;
      break;
    case 2005:
      *v1 = 5;
      break;
    case 2006:
      *v1 = 6;
      break;
    default:
      switch(rawValue)
      {
        case 3000:
          *v1 = 7;
          break;
        case 3001:
          *v1 = 8;
          break;
        case 3002:
          *v1 = 9;
          break;
        case 3003:
          *v1 = 10;
          break;
        case 3004:
          *v1 = 11;
          break;
        case 3005:
          *v1 = 12;
          break;
        case 3006:
          *v1 = 13;
          break;
        default:
          *v1 = 14;
          break;
      }
      break;
  }
  return (BlastDoor::BasicTapBack::AssociatedMessageType_optional)rawValue;
}

uint64_t BasicTapBack.AssociatedMessageType.rawValue.getter()
{
  char *v0;

  return qword_1AD67ABA8[*v0];
}

BOOL sub_1AD346ED0(char *a1, char *a2)
{
  return qword_1AD67ABA8[*a1] == qword_1AD67ABA8[*a2];
}

uint64_t sub_1AD346EF4()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD346F40()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD346F74()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

BlastDoor::BasicTapBack::AssociatedMessageType_optional sub_1AD346FBC(Swift::Int *a1)
{
  return BasicTapBack.AssociatedMessageType.init(rawValue:)(*a1);
}

void sub_1AD346FC4(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1AD67ABA8[*v1];
}

uint64_t sub_1AD346FDC()
{
  sub_1AD347E90();
  return sub_1AD63B930();
}

uint64_t sub_1AD347038()
{
  sub_1AD347E90();
  return sub_1AD63B8D0();
}

void BasicTapBack.associatedMessageType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *BasicTapBack.associatedMessageType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*BasicTapBack.associatedMessageType.modify())()
{
  return nullsub_1;
}

uint64_t BasicTapBack.associatedMessageGUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BasicTapBack.associatedMessageGUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*BasicTapBack.associatedMessageGUID.modify())()
{
  return nullsub_1;
}

uint64_t BasicTapBack.associatedMessageFallbackHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BasicTapBack.associatedMessageFallbackHash.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*BasicTapBack.associatedMessageFallbackHash.modify())()
{
  return nullsub_1;
}

uint64_t BasicTapBack.associatedMessageRange.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t BasicTapBack.associatedMessageRange.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*BasicTapBack.associatedMessageRange.modify())()
{
  return nullsub_1;
}

uint64_t BasicTapBack.participantDestinationIdentifiers.setter()
{
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0();
}

uint64_t (*BasicTapBack.participantDestinationIdentifiers.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(_QWORD *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 72);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD0E2C1C;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*BasicTapBack.$participantDestinationIdentifiers.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[8];
  v4 = v1[9];
  *a1 = v1[7];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD0E2D88;
}

BlastDoor::BasicTapBack::MessageSummaryInfo::AssociatedMessageMessageSummaryInfoTypeContentType __swiftcall BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType.init(defaultingRawValue:)(Swift::Int_optional defaultingRawValue)
{
  char *v1;
  char v2;

  v2 = defaultingRawValue.value == 1;
  if (defaultingRawValue.value == 3)
    v2 = 2;
  if (defaultingRawValue.is_nil)
    v2 = 0;
  *v1 = v2;
  return defaultingRawValue.value;
}

BlastDoor::BasicTapBack::MessageSummaryInfo::AssociatedMessageMessageSummaryInfoTypeContentType_optional __swiftcall BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unsigned int v2;

  v2 = 0x2030100u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return (BlastDoor::BasicTapBack::MessageSummaryInfo::AssociatedMessageMessageSummaryInfoTypeContentType_optional)rawValue;
}

uint64_t BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType.rawValue.getter()
{
  char *v0;

  return qword_1AD67AC18[*v0];
}

BOOL sub_1AD3472FC(char *a1, char *a2)
{
  return qword_1AD67AC18[*a1] == qword_1AD67AC18[*a2];
}

uint64_t sub_1AD347320()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD34736C()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD3473A0()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

BlastDoor::BasicTapBack::MessageSummaryInfo::AssociatedMessageMessageSummaryInfoTypeContentType_optional sub_1AD3473E8(Swift::Int *a1)
{
  return BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType.init(rawValue:)(*a1);
}

void sub_1AD3473F0(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1AD67AC18[*v1];
}

uint64_t sub_1AD347408()
{
  sub_1AD347E4C();
  return sub_1AD63B930();
}

uint64_t sub_1AD347464()
{
  sub_1AD347E4C();
  return sub_1AD63B8D0();
}

void BasicTapBack.MessageSummaryInfo.contentType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *BasicTapBack.MessageSummaryInfo.contentType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*BasicTapBack.MessageSummaryInfo.contentType.modify())()
{
  return nullsub_1;
}

uint64_t BasicTapBack.MessageSummaryInfo.summary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BasicTapBack.MessageSummaryInfo.summary.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*BasicTapBack.MessageSummaryInfo.summary.modify())()
{
  return nullsub_1;
}

uint64_t BasicTapBack.messageSummaryInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[10];
  v3 = v1[11];
  v4 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1AD14145C(v2, v3, v4);
}

__n128 BasicTapBack.messageSummaryInfo.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;

  v4 = *a1;
  v2 = a1[1].n128_i64[0];
  sub_1AD1416EC(v1[10], v1[11], v1[12]);
  result = v4;
  *((__n128 *)v1 + 5) = v4;
  v1[12] = v2;
  return result;
}

uint64_t (*BasicTapBack.messageSummaryInfo.modify())()
{
  return nullsub_1;
}

uint64_t BasicTapBack.plainTextBody.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BasicTapBack.plainTextBody.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return result;
}

uint64_t (*BasicTapBack.plainTextBody.modify())()
{
  return nullsub_1;
}

uint64_t BasicTapBack.debugDescription.getter()
{
  sub_1AD63BD38();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63BE04();
  sub_1AD63B810();
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  return 0;
}

unint64_t sub_1AD347740()
{
  unint64_t result;

  result = qword_1EECDAD90;
  if (!qword_1EECDAD90)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for BasicTapBack.AssociatedMessageType, &type metadata for BasicTapBack.AssociatedMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDAD90);
  }
  return result;
}

uint64_t sub_1AD347784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD284618, (uint64_t (*)(void))sub_1AD28466C);
}

unint64_t sub_1AD34779C()
{
  unint64_t result;

  result = qword_1EECDAD98;
  if (!qword_1EECDAD98)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType, &type metadata for BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType);
    atomic_store(result, (unint64_t *)&qword_1EECDAD98);
  }
  return result;
}

uint64_t sub_1AD3477E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD290E18, (uint64_t (*)(void))sub_1AD290E5C);
}

uint64_t sub_1AD3477F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2843D0, (uint64_t (*)(void))sub_1AD28451C);
}

uint64_t sub_1AD347808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A1268, (uint64_t (*)(void))sub_1AD2A10AC);
}

uint64_t sub_1AD347824()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD34784C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[7];
  v3 = a1[8];
  v4 = a1[9];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t destroy for BasicTapBack(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BasicTapBack(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  }
  else
  {
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v7;
    swift_bridgeObjectRetain();
  }
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BasicTapBack(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (__int128 *)(a1 + 80);
  v6 = (__int128 *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) == 1)
  {
    if (v7 == 1)
    {
      v8 = *v6;
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *v5 = v8;
    }
    else
    {
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_1AD33B168(a1 + 80);
    v9 = *(_QWORD *)(a2 + 96);
    *v5 = *v6;
    *(_QWORD *)(a1 + 96) = v9;
  }
  else
  {
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BasicTapBack(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96) != 1)
  {
    v6 = *(_QWORD *)(a2 + 96);
    if (v6 != 1)
    {
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AD33B168(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
LABEL_6:
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BasicTapBack(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BasicTapBack(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BasicTapBack()
{
  return &type metadata for BasicTapBack;
}

uint64_t storeEnumTagSinglePayload for BasicTapBack.AssociatedMessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1AD347CF0 + 4 * byte_1AD67A7E3[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1AD347D24 + 4 * byte_1AD67A7DE[v4]))();
}

uint64_t sub_1AD347D24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD347D2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD347D34);
  return result;
}

uint64_t sub_1AD347D40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD347D48);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1AD347D4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD347D54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BasicTapBack.AssociatedMessageType()
{
  return &type metadata for BasicTapBack.AssociatedMessageType;
}

ValueMetadata *type metadata accessor for BasicTapBack.MessageSummaryInfo()
{
  return &type metadata for BasicTapBack.MessageSummaryInfo;
}

uint64_t storeEnumTagSinglePayload for BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD347DCC + 4 * byte_1AD67A7ED[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD347E00 + 4 * byte_1AD67A7E8[v4]))();
}

uint64_t sub_1AD347E00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD347E08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD347E10);
  return result;
}

uint64_t sub_1AD347E1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD347E24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD347E28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD347E30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType()
{
  return &type metadata for BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType;
}

unint64_t sub_1AD347E4C()
{
  unint64_t result;

  result = qword_1EECDADA0;
  if (!qword_1EECDADA0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType, &type metadata for BasicTapBack.MessageSummaryInfo.AssociatedMessageMessageSummaryInfoTypeContentType);
    atomic_store(result, (unint64_t *)&qword_1EECDADA0);
  }
  return result;
}

unint64_t sub_1AD347E90()
{
  unint64_t result;

  result = qword_1EECDADA8;
  if (!qword_1EECDADA8)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for BasicTapBack.AssociatedMessageType, &type metadata for BasicTapBack.AssociatedMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDADA8);
  }
  return result;
}

uint64_t sub_1AD347ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_1AD63BC48();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v12 - v7, v3);
  v10 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v5);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v8, v5);
  __break(1u);
  return result;
}

uint64_t sub_1AD347F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = sub_1AD63BC48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  v6 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v2, 0, 1, v4);
}

uint64_t sub_1AD347FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t sub_1AD348010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(_QWORD *)(a2 - 8);
  (*(void (**)(uint64_t))(v5 + 8))(v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, a1, a2);
}

uint64_t sub_1AD348058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a4 + a3 - 16);
  v5 = *(_QWORD *)(a4 + a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v12 - v6;
  (*(void (**)(char *))(v8 + 16))((char *)&v12 - v6);
  v10 = type metadata accessor for Encoded(0, v4, v5, v9);
  return sub_1AD347F84((uint64_t)v7, v10);
}

void (*sub_1AD3480E0(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  sub_1AD347ED4(a2, (uint64_t)v9);
  return sub_1AD348164;
}

void sub_1AD348164(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v6 = v2[3];
    v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_1AD347F84((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    sub_1AD347F84((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_1AD3481FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = type metadata accessor for Encoded(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, a1, v5);
  return sub_1AD348010((uint64_t)v7, v5);
}

void (*sub_1AD348284(_QWORD *a1, uint64_t a2))(_QWORD **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  void (*v9)(void);

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 - 8);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v5[3] = malloc(v7);
  v8 = malloc(v7);
  v9 = *(void (**)(void))(v6 + 16);
  v5[4] = v8;
  v5[5] = v9;
  v9();
  return sub_1AD34830C;
}

void sub_1AD34830C(_QWORD **a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = (void *)v2[4];
    v5 = v2[2];
    v4 = (void *)v2[3];
    v7 = *v2;
    v6 = (void *)v2[1];
    ((void (*)(void *, void *, _QWORD))v2[5])(v4, v3, *v2);
    v8 = *(void (**)(void *, uint64_t))(v5 + 8);
    v8(v6, v7);
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v6, v4, v7);
    v8(v3, v7);
  }
  else
  {
    v4 = (void *)v2[3];
    v3 = (void *)v2[4];
    v9 = v2[1];
    v10 = v2[2];
    v11 = *v2;
    (*(void (**)(uint64_t, _QWORD))(v10 + 8))(v9, *v2);
    (*(void (**)(uint64_t, void *, uint64_t))(v10 + 32))(v9, v3, v11);
  }
  free(v3);
  free(v4);
  free(v2);
}

uint64_t sub_1AD3483D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a1 + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v4, AssociatedTypeWitness);
}

uint64_t sub_1AD348428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a2 + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v4, a1, AssociatedTypeWitness);
}

uint64_t (*sub_1AD34847C())()
{
  return nullsub_1;
}

uint64_t sub_1AD348490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a4, 1, 1, a2);
  v9 = a4 + *(int *)(type metadata accessor for Encoded(0, a2, a3, v8) + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v9, a1, AssociatedTypeWitness);
}

uint64_t type metadata accessor for Encoded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Encoded);
}

BOOL sub_1AD348530(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1AD348540()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD348564(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646F636E65 && a2 == 0xE800000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5664657070617277 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AD34866C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD3486B0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x5664657070617277;
  else
    return 0x676E69646F636E65;
}

BOOL sub_1AD3486F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD348530(*a1, *a2);
}

uint64_t sub_1AD3486FC()
{
  return sub_1AD34866C();
}

uint64_t sub_1AD348704()
{
  return sub_1AD348540();
}

uint64_t sub_1AD34870C()
{
  sub_1AD63C4AC();
  sub_1AD348540();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD348748()
{
  char *v0;

  return sub_1AD3486B0(*v0);
}

uint64_t sub_1AD348750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD348564(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD348774@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AD349E4C();
  *a1 = result;
  return result;
}

uint64_t sub_1AD34879C(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD67AE48, a1);
  return sub_1AD63C560();
}

uint64_t sub_1AD3487D0(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD67AE48, a1);
  return sub_1AD63C56C();
}

uint64_t sub_1AD348804@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  char v76;
  char v77;

  v59 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v58 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v62 = (char *)&v55 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v69 = AssociatedTypeWitness;
  v65 = (void (*)(char *, char *, uint64_t))AssociatedConformanceWitness;
  v13 = sub_1AD63BFA8();
  v63 = *(_QWORD *)(v13 - 8);
  v64 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v61 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v67 = (char *)&v55 - v16;
  v68 = swift_getAssociatedTypeWitness();
  v70 = *(_QWORD *)(v68 - 8);
  v17 = MEMORY[0x1E0C80A78](v68);
  v60 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v72 = (char *)&v55 - v19;
  v21 = type metadata accessor for Encoded.CodingKeys(255, a2, a3, v20);
  MEMORY[0x1AF44BDF0](&unk_1AD67AE48, v21);
  v71 = sub_1AD63BFA8();
  v66 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v23 = (char *)&v55 - v22;
  v25 = type metadata accessor for Encoded(0, a2, a3, v24);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v55 - v27;
  v57 = v7;
  v29 = *(void (**)(void))(v7 + 56);
  v73 = v28;
  v29();
  v30 = a1[3];
  v74 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v30);
  v31 = v75;
  sub_1AD63C524();
  if (v31)
  {
    v32 = v73;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    v39 = sub_1AD63BC48();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v32, v39);
  }
  else
  {
    v56 = v26;
    v75 = v25;
    v33 = v23;
    v34 = v70;
    v36 = v67;
    v35 = v68;
    v77 = 0;
    v37 = a2;
    swift_getAssociatedConformanceWitness();
    sub_1AD63BF54();
    v38 = a3;
    v76 = 1;
    sub_1AD63BEAC();
    v69 = (uint64_t)v33;
    v41 = v61;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v61, v36, v64);
    v42 = v60;
    v43 = v72;
    v65 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v65(v60, v72, v35);
    v44 = v35;
    v45 = v62;
    v46 = v42;
    v47 = v37;
    (*(void (**)(char *, char *, uint64_t, uint64_t))(v38 + 48))(v41, v46, v37, v38);
    v48 = v75;
    v49 = v73;
    v65(&v73[*(int *)(v75 + 36)], v43, v44);
    v50 = v36;
    v51 = v47;
    v53 = v57;
    v52 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v58, v45, v51);
    sub_1AD347F84(v52, v48);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v45, v51);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v50, v64);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v44);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v69, v71);
    v54 = v56;
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v59, v49, v48);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v49, v48);
  }
}

uint64_t type metadata accessor for Encoded.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Encoded.CodingKeys);
}

uint64_t sub_1AD348D58(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v29;
  char *v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;

  v37 = a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31[1] = swift_getAssociatedConformanceWitness();
  v31[2] = AssociatedTypeWitness;
  v6 = sub_1AD63C0B0();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v35 = (char *)v31 - v8;
  v40 = *(char **)(v3 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v34 = (uint64_t)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v31 - v11;
  v36 = v4;
  v44 = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v14 = (char *)v31 - v13;
  v16 = type metadata accessor for Encoded.CodingKeys(255, v3, v4, v15);
  MEMORY[0x1AF44BDF0](&unk_1AD67AE48, v16);
  v43 = sub_1AD63C0B0();
  v39 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v18 = (char *)v31 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v19 = v3;
  v20 = v36;
  v21 = v37;
  v22 = v38;
  sub_1AD63C53C();
  sub_1AD347ED4(v21, (uint64_t)v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 64))(v22 + *(int *)(v21 + 36), v19, v20);
  v23 = (void (*)(char *, uint64_t))*((_QWORD *)v40 + 1);
  v24 = v12;
  v25 = v44;
  v23(v24, v19);
  v46 = 0;
  swift_getAssociatedConformanceWitness();
  v40 = v14;
  v26 = v43;
  v27 = v41;
  sub_1AD63C068();
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v18, v26);
  }
  else
  {
    v31[0] = v23;
    v45 = 1;
    v29 = v35;
    v41 = v18;
    sub_1AD63BFCC();
    sub_1AD347ED4(v21, v34);
    v30 = v40;
    (*(void (**)(char *, char *, uint64_t, uint64_t))(v20 + 56))(v29, v40, v19, v20);
    ((void (*)(uint64_t, uint64_t))v31[0])(v34, v19);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v33);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v44);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v41, v43);
  }
}

uint64_t sub_1AD3490E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AD348804(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1AD349100(_QWORD *a1, uint64_t a2)
{
  return sub_1AD348D58(a1, a2);
}

uint64_t sub_1AD349114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_getTm(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1AD347ED4);
}

uint64_t sub_1AD349124()
{
  return 16;
}

__n128 sub_1AD349130(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1AD34913C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_getTm(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1AD347FF8);
}

uint64_t sub_1AD34914C()
{
  return 16;
}

__n128 sub_1AD349158(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1AD349164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1AD34917C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1AD349194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1AD34919C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1AD3491A4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1AD63BC48();
  if (v1 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1AD349248(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84))
    v7 = *(_QWORD *)(v6 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64) + 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v7 + v10) & ~v10) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v16 = AssociatedTypeWitness;
    v17 = ~v10;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_1AD349394(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = v6 + a1;
  if (!v5)
    ++v8;
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((v8 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

void *sub_1AD34943C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (!v7)
    ++v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)a1 + v8 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), ((unint64_t)a2 + v8 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_1AD349538(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 24))(((unint64_t)a1 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), ((unint64_t)a2 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_1AD34967C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (!v7)
    ++v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))(((unint64_t)a1 + v8 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), ((unint64_t)a2 + v8 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_1AD349778(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40))(((unint64_t)a1 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), ((unint64_t)a2 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1AD3498BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = v8;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if ((_DWORD)v7)
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = *(_QWORD *)(v6 + 64) + 1;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  if (a2 <= v11)
    goto LABEL_29;
  v15 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 < 2)
    {
LABEL_29:
      if (v11)
      {
        if (v8 < v10)
          return (*(uint64_t (**)(uint64_t))(v9 + 48))((v14 + a1) & ~v13);
        v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
        if (v21 >= 2)
          return v21 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_29;
LABEL_20:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = v15;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v11 + v19 + 1;
}

void sub_1AD349A88(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  size_t v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = 0u;
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v11 + 84) <= v9)
    v12 = v9;
  else
    v12 = *(_DWORD *)(v11 + 84);
  if (v8)
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = *(_QWORD *)(v7 + 64) + 1;
  v14 = ((v13 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
      + *(_QWORD *)(v11 + 64);
  if (a3 > v12)
  {
    if (v14 > 3)
    {
      v10 = 1u;
      if (v12 >= a2)
LABEL_26:
        __asm { BR              X13 }
LABEL_19:
      v16 = ~v12 + a2;
      if (v14 < 4)
      {
        if ((_DWORD)v14)
        {
          v17 = v16 & ~(-1 << (8 * v14));
          bzero(a1, v14);
          if ((_DWORD)v14 == 3)
          {
            *(_WORD *)a1 = v17;
            a1[2] = BYTE2(v17);
          }
          else if ((_DWORD)v14 == 2)
          {
            *(_WORD *)a1 = v17;
          }
          else
          {
            *a1 = v17;
          }
        }
      }
      else
      {
        bzero(a1, v14);
        *(_DWORD *)a1 = v16;
      }
      __asm { BR              X10 }
    }
    v15 = ((a3 - v12 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v15))
    {
      v10 = 4u;
      if (v12 >= a2)
        goto LABEL_26;
      goto LABEL_19;
    }
    if (v15 >= 0x100)
      v10 = 2;
    else
      v10 = v15 > 1;
  }
  if (v12 >= a2)
    goto LABEL_26;
  goto LABEL_19;
}

void sub_1AD349D0C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1AD349D14()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1AD349D3C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1AD349D4C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1AD349D54()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1AD349D60(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD349DAC + 4 * byte_1AD67ACC7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD349DE0 + 4 * byte_1AD67ACC2[v4]))();
}

uint64_t sub_1AD349DE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD349DE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD349DF0);
  return result;
}

uint64_t sub_1AD349DFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD349E04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD349E08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD349E10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1AD349E1C()
{
  JUMPOUT(0x1AF44BDF0);
}

void sub_1AD349E2C()
{
  JUMPOUT(0x1AF44BDF0);
}

void sub_1AD349E3C()
{
  JUMPOUT(0x1AF44BDF0);
}

uint64_t sub_1AD349E4C()
{
  return 2;
}

uint64_t PlayedReceipt.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD00B904(v1, a1);
}

uint64_t PlayedReceipt.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD00B950(a1, v1);
}

uint64_t (*PlayedReceipt.metadata.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD349E78(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD349F00(&qword_1EECDADB0, (uint64_t)&protocol conformance descriptor for PlayedReceipt);
  result = sub_1AD349F00(&qword_1EECDADB8, (uint64_t)&protocol conformance descriptor for PlayedReceipt);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for PlayedReceipt()
{
  uint64_t result;

  result = qword_1ED2E2128;
  if (!qword_1ED2E2128)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD349F00(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PlayedReceipt();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PlayedReceipt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD349F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PlayedReceipt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD349F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1AD349FD4@<X0>(uint64_t (**a1)(uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  unint64_t v16;
  uint64_t v17;
  uint64_t (**v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)(uint64_t);

  v2 = type metadata accessor for SwiftRegexValidator();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A18);
  inited = swift_initStackObject();
  v26 = xmmword_1AD648160;
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  v10 = sub_1AD043FDC((uint64_t)&unk_1E5CA1180);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD2F5CCC;
  *(_QWORD *)(inited + 40) = v11;
  v29 = a1;
  sub_1AD2809E4((_QWORD *)inited, a1);
  v27 = *(int *)(type metadata accessor for CPIMMessage.ToHeader(0) + 20);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = v26;
  if (qword_1EECD15B8 != -1)
    swift_once();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1EED83B40);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15(v8, v14, v13);
  sub_1AD0D3D2C((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  v16 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v17 = swift_allocObject();
  sub_1AD2A5214((uint64_t)v6, v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  sub_1AD066230((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  if (qword_1EECD1690 != -1)
    swift_once();
  v18 = (uint64_t (**)())((char *)v29 + v27);
  v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1EED83C80);
  v15(v8, v19, v13);
  sub_1AD0D3D2C((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  v20 = swift_allocObject();
  sub_1AD2A5214((uint64_t)v6, v20 + v16, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  sub_1AD066230((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1AD648170;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1AD28D960;
  *(_QWORD *)(v22 + 24) = v17;
  *(_QWORD *)(v21 + 32) = sub_1AD3246BC;
  *(_QWORD *)(v21 + 40) = v22;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1AD28D960;
  *(_QWORD *)(v23 + 24) = v20;
  *(_QWORD *)(v21 + 48) = sub_1AD3246BC;
  *(_QWORD *)(v21 + 56) = v23;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v21;
  *(_QWORD *)(v12 + 32) = sub_1AD3246C0;
  *(_QWORD *)(v12 + 40) = v24;
  return sub_1AD280838((_QWORD *)v12, v18);
}

uint64_t CPIMMessage.ToHeader.$destinationURIString.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AD34A77C(type metadata accessor for CPIMMessage.ToHeader, a1);
}

uint64_t type metadata accessor for CPIMMessage.ToHeader(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDAE08);
}

double CPIMMessage.ToHeader.$destinationURIString.setter(__n128 *a1)
{
  double result;

  *(_QWORD *)&result = sub_1AD34A7E4(a1, type metadata accessor for CPIMMessage.ToHeader).n128_u64[0];
  return result;
}

uint64_t CPIMMessage.ToHeader.destinationURIString.getter()
{
  return sub_1AD34A96C(type metadata accessor for CPIMMessage.ToHeader);
}

uint64_t sub_1AD34A368@<X0>(uint64_t (**a1)(uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  unint64_t v16;
  uint64_t v17;
  uint64_t (**v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)(uint64_t);

  v2 = type metadata accessor for SwiftRegexValidator();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A18);
  inited = swift_initStackObject();
  v26 = xmmword_1AD648160;
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  v10 = sub_1AD043FDC((uint64_t)&unk_1E5CA0488);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD28D484;
  *(_QWORD *)(inited + 40) = v11;
  v29 = a1;
  sub_1AD2809E4((_QWORD *)inited, a1);
  v27 = *(int *)(type metadata accessor for CPIMMessage.FromHeader(0) + 20);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = v26;
  if (qword_1EECD15B8 != -1)
    swift_once();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1EED83B40);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15(v8, v14, v13);
  sub_1AD0D3D2C((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  v16 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v17 = swift_allocObject();
  sub_1AD2A5214((uint64_t)v6, v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  sub_1AD066230((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  if (qword_1EECD1690 != -1)
    swift_once();
  v18 = (uint64_t (**)())((char *)v29 + v27);
  v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1EED83C80);
  v15(v8, v19, v13);
  sub_1AD0D3D2C((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  v20 = swift_allocObject();
  sub_1AD2A5214((uint64_t)v6, v20 + v16, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  sub_1AD066230((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SwiftRegexValidator);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1AD648170;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1AD28D960;
  *(_QWORD *)(v22 + 24) = v17;
  *(_QWORD *)(v21 + 32) = sub_1AD2F5214;
  *(_QWORD *)(v21 + 40) = v22;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1AD28D960;
  *(_QWORD *)(v23 + 24) = v20;
  *(_QWORD *)(v21 + 48) = sub_1AD3246BC;
  *(_QWORD *)(v21 + 56) = v23;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v21;
  *(_QWORD *)(v12 + 32) = sub_1AD32466C;
  *(_QWORD *)(v12 + 40) = v24;
  return sub_1AD280838((_QWORD *)v12, v18);
}

uint64_t CPIMMessage.FromHeader.$sourceURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t _s9BlastDoor11CPIMMessageV8ToHeaderV15_destinationURIAA9UntrustedVy10Foundation3URLVGvs_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACFF64C0(a1, (uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  sub_1AD326FE8((uint64_t)v5, v1);
  return sub_1AD009758(a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t CPIMMessage.FromHeader.$sourceURIString.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AD34A77C(type metadata accessor for CPIMMessage.FromHeader, a1);
}

uint64_t sub_1AD34A77C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (_QWORD *)(v2 + *(int *)(a1(0) + 20));
  v5 = v4[1];
  v7 = v4[2];
  v6 = v4[3];
  *a2 = *v4;
  a2[1] = v5;
  a2[2] = v7;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t type metadata accessor for CPIMMessage.FromHeader(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDAE18);
}

double CPIMMessage.FromHeader.$sourceURIString.setter(__n128 *a1)
{
  double result;

  *(_QWORD *)&result = sub_1AD34A7E4(a1, type metadata accessor for CPIMMessage.FromHeader).n128_u64[0];
  return result;
}

__n128 sub_1AD34A7E4(__n128 *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  __n128 *v6;
  __n128 result;

  v4 = a1[1].n128_u64[0];
  v5 = a1[1].n128_u64[1];
  v6 = (__n128 *)(v2 + *(int *)(a2(0) + 20));
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v4;
  v6[1].n128_u64[1] = v5;
  return result;
}

uint64_t _s9BlastDoor11CPIMMessageV8ToHeaderV14destinationURI10Foundation3URLVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_1ED2E1A40);
  v7 = sub_1AD63AF28();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t CPIMMessage.FromHeader.sourceURIString.getter()
{
  return sub_1AD34A96C(type metadata accessor for CPIMMessage.FromHeader);
}

uint64_t sub_1AD34A96C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v1 + *(int *)(a1(0) + 20);
  if (*(_QWORD *)(v2 + 24))
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRetain();
    return v3;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t CPIMMessage.NamespaceHeader.$namePrefix.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 CPIMMessage.NamespaceHeader.$namePrefix.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[1].n128_i64[0];
  v6 = v1[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t CPIMMessage.NamespaceHeader.namePrefix.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t CPIMMessage.IMDNMessageIDHeader.$messageID.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 CPIMMessage.IMDNMessageIDHeader.$messageID.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t CPIMMessage.IMDNMessageIDHeader.messageID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*CPIMMessage.ToHeader.destinationURI.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t (*result)();

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_1AD63AF28();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  *((_DWORD *)v3 + 12) = v10;
  sub_1ACFF64C0(v1 + v10, (uint64_t)v5, &qword_1ED2E1A40);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    return sub_1AD34AD50;
  }
  return result;
}

uint64_t (*CPIMMessage.ToHeader.$destinationURI.modify(uint64_t *a1))()
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) - 8) + 64);
  a1[1] = (uint64_t)malloc(v3);
  a1[2] = (uint64_t)malloc(v3);
  v4 = malloc(v3);
  a1[3] = (uint64_t)v4;
  sub_1ACFF64C0(v1, (uint64_t)v4, (uint64_t *)&unk_1ED2E1A30);
  return sub_1AD34ADD8;
}

uint64_t CPIMMessage.ToHeader.destinationURIString.setter(uint64_t a1, uint64_t a2)
{
  return sub_1AD34B890(a1, a2, (void (*)(_QWORD))type metadata accessor for CPIMMessage.ToHeader);
}

uint64_t (*CPIMMessage.ToHeader.destinationURIString.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for CPIMMessage.ToHeader(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5)
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD34AE84;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*CPIMMessage.ToHeader.$destinationURIString.modify(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for CPIMMessage.ToHeader(0) + 20);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v8 = v5[2];
  v7 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v8;
  v3[3] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34AF00;
}

uint64_t sub_1AD34AF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(a1 + *(int *)(v7 + 28), (uint64_t)v6, &qword_1ED2E1A40);
  v8 = sub_1AD63AF28();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
  sub_1AD009758((uint64_t)v6, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD34B020(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_1AD63AF28();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  sub_1AD003344((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t _s9BlastDoor11CPIMMessageV8ToHeaderV14destinationURI10Foundation3URLVvs_0(uint64_t a1)
{
  uint64_t (**v1)(char *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;

  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, a1, v3);
  if (((*v1)(v6) & 1) != 0)
  {
    v8 = (uint64_t)v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    sub_1AD009758(v8, &qword_1ED2E1A40);
    v7((char *)v8, (uint64_t)v6, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    v9 = *(void (**)(char *, uint64_t))(v4 + 8);
    v9(v6, v3);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1, v3);
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v11 = 0x6E776F6E6B6E753CLL;
    v11[1] = 0xE90000000000003ELL;
    v11[2] = 0xD00000000000001CLL;
    v11[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*CPIMMessage.FromHeader.sourceURI.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t (*result)();

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_1AD63AF28();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  *((_DWORD *)v3 + 12) = v10;
  sub_1ACFF64C0(v1 + v10, (uint64_t)v5, &qword_1ED2E1A40);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
    result = (uint64_t (*)())sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    return sub_1AD34AD50;
  }
  return result;
}

void sub_1AD34B3CC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (**v4)(uint64_t);
  void (*v5)(uint64_t, void *, uint64_t);
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void (*v12)(void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(_QWORD *)(v2 + 32);
    v4 = *(uint64_t (***)(uint64_t))v2;
    v5 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v2 + 24) + 16);
    v5(v3, *(void **)(*a1 + 40), *(_QWORD *)(v2 + 16));
    if (((*v4)(v3) & 1) != 0)
    {
      v7 = *(void **)(v2 + 32);
      v6 = *(void **)(v2 + 40);
      v8 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      v10 = *(void **)(v2 + 8);
      v11 = *(_QWORD *)v2 + *(int *)(v2 + 48);
      sub_1AD009758(v11, &qword_1ED2E1A40);
      v5(v11, v7, v8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      v12 = *(void (**)(void *, uint64_t))(v9 + 8);
      v12(v7, v8);
      v12(v6, v8);
LABEL_6:
      free(v6);
      free(v7);
      free(v10);
      free((void *)v2);
      return;
    }
  }
  else if (((**(uint64_t (***)(_QWORD))v2)(*(_QWORD *)(*a1 + 40)) & 1) != 0)
  {
    v7 = *(void **)(v2 + 32);
    v6 = *(void **)(v2 + 40);
    v13 = *(_QWORD *)(v2 + 16);
    v14 = *(_QWORD *)(v2 + 24);
    v10 = *(void **)(v2 + 8);
    v15 = *(_QWORD *)v2 + *(int *)(v2 + 48);
    sub_1AD009758(v15, &qword_1ED2E1A40);
    (*(void (**)(uint64_t, void *, uint64_t))(v14 + 16))(v15, v6, v13);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v15, 0, 1, v13);
    (*(void (**)(void *, uint64_t))(v14 + 8))(v6, v13);
    goto LABEL_6;
  }
  sub_1AD009690();
  swift_allocError();
  *v16 = 0x6E776F6E6B6E753CLL;
  v16[1] = 0xE90000000000003ELL;
  v16[2] = 0xD00000000000001CLL;
  v16[3] = 0x80000001AD69E8C0;
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

uint64_t sub_1AD34B5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  sub_1ACFF64C0(a1, (uint64_t)&v11 - v8, (uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1ED2E1A30);
  sub_1AD326FE8((uint64_t)v7, a2);
  return sub_1AD009758((uint64_t)v9, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t (*CPIMMessage.FromHeader.$sourceURI.modify(uint64_t *a1))()
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) - 8) + 64);
  a1[1] = (uint64_t)malloc(v3);
  a1[2] = (uint64_t)malloc(v3);
  v4 = malloc(v3);
  a1[3] = (uint64_t)v4;
  sub_1ACFF64C0(v1, (uint64_t)v4, (uint64_t *)&unk_1ED2E1A30);
  return sub_1AD34ADD8;
}

void sub_1AD34B700(uint64_t *a1, char a2)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t *v8;

  v4 = (void *)a1[2];
  v5 = (void *)a1[3];
  sub_1ACFF64C0((uint64_t)v5, (uint64_t)v4, (uint64_t *)&unk_1ED2E1A30);
  v8 = a1;
  v7 = *a1;
  v6 = (void *)v8[1];
  if ((a2 & 1) != 0)
  {
    sub_1ACFF64C0((uint64_t)v4, (uint64_t)v6, (uint64_t *)&unk_1ED2E1A30);
    sub_1AD326FE8((uint64_t)v6, v7);
    sub_1AD009758((uint64_t)v4, (uint64_t *)&unk_1ED2E1A30);
  }
  else
  {
    sub_1AD326FE8((uint64_t)v4, v7);
  }
  sub_1AD009758((uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  free(v5);
  free(v4);
  free(v6);
}

uint64_t sub_1AD34B7B4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = a1 + *(int *)(a2(0) + 20);
  v5 = *(_QWORD *)(v4 + 24);
  if (v5)
  {
    *a3 = *(_QWORD *)(v4 + 16);
    a3[1] = v5;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD34B838(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;

  v6 = *a1;
  v5 = a1[1];
  a5(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v6, v5);
}

uint64_t CPIMMessage.FromHeader.sourceURIString.setter(uint64_t a1, uint64_t a2)
{
  return sub_1AD34B890(a1, a2, (void (*)(_QWORD))type metadata accessor for CPIMMessage.FromHeader);
}

uint64_t sub_1AD34B890(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  a3(0);
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*CPIMMessage.FromHeader.sourceURIString.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for CPIMMessage.FromHeader(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5)
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD34AE84;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD34B970@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (_QWORD *)(a1 + *(int *)(a2(0) + 20));
  v5 = v4[1];
  v7 = v4[2];
  v6 = v4[3];
  *a3 = *v4;
  a3[1] = v5;
  a3[2] = v7;
  a3[3] = v6;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD34B9B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  v6 = *a1;
  v5 = a1[1];
  v8 = a1[2];
  v7 = a1[3];
  v9 = (_QWORD *)(a2 + *(int *)(a5(0) + 20));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  *v9 = v6;
  v9[1] = v5;
  v9[2] = v8;
  v9[3] = v7;
  return result;
}

void (*CPIMMessage.FromHeader.$sourceURIString.modify(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for CPIMMessage.FromHeader(0) + 20);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v8 = v5[2];
  v7 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v8;
  v3[3] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34AF00;
}

uint64_t CPIMMessage.DateTimeHeader.dateTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CPIMMessage.DateTimeHeader.dateTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*CPIMMessage.DateTimeHeader.dateTime.modify())()
{
  return nullsub_1;
}

uint64_t (*CPIMMessage.NamespaceHeader.namePrefix.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3019A4;
  }
  return result;
}

void (*CPIMMessage.NamespaceHeader.$namePrefix.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v7 = v1[3];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD301A68;
}

uint64_t CPIMMessage.NamespaceHeader.namespaceURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CPIMMessage.NamespaceHeader(0) + 20);
  v4 = sub_1AD63AF28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for CPIMMessage.NamespaceHeader(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDAE38);
}

uint64_t CPIMMessage.NamespaceHeader.namespaceURI.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CPIMMessage.NamespaceHeader(0) + 20);
  v4 = sub_1AD63AF28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CPIMMessage.NamespaceHeader.namespaceURI.modify())(_QWORD)
{
  type metadata accessor for CPIMMessage.NamespaceHeader(0);
  return nullsub_1;
}

uint64_t sub_1AD34BCEC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 16);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*CPIMMessage.IMDNMessageIDHeader.messageID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD34BDE0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD34BDE0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD34BE40(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v6;
  a2[3] = v5;
  return result;
}

void (*CPIMMessage.IMDNMessageIDHeader.$messageID.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34BF10;
}

void sub_1AD34BF10(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v3;
  }
  free(v2);
}

BlastDoor::CPIMMessage::IMDNDispositionNotificationHeader::NotifyRequirement_optional __swiftcall CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  BlastDoor::CPIMMessage::IMDNDispositionNotificationHeader::NotifyRequirement_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AD63BE94();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AD34C044 + 4 * byte_1AD67AEE0[*v0]))(0xD000000000000011, 0x80000001AD69D800);
}

uint64_t sub_1AD34C058()
{
  return 0x69737365636F7270;
}

uint64_t sub_1AD34C074()
{
  return 0x79616C70736964;
}

uint64_t sub_1AD34C08C()
{
  return 0x726F777265746E69;
}

void sub_1AD34C0AC(char *a1)
{
  sub_1AD436370(*a1);
}

void sub_1AD34C0B8()
{
  char *v0;

  sub_1AD14BCD4(*v0);
}

void sub_1AD34C0C0(uint64_t a1)
{
  char *v1;

  sub_1AD14C860(a1, *v1);
}

void sub_1AD34C0C8(uint64_t a1)
{
  char *v1;

  sub_1AD14D89C(a1, *v1);
}

BlastDoor::CPIMMessage::IMDNDispositionNotificationHeader::NotifyRequirement_optional sub_1AD34C0D0(Swift::String *a1)
{
  return CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement.init(rawValue:)(*a1);
}

uint64_t sub_1AD34C0DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AD34C100()
{
  sub_1AD34FD98();
  return sub_1AD63B924();
}

uint64_t sub_1AD34C15C()
{
  sub_1AD34FD98();
  return sub_1AD63B8C4();
}

uint64_t CPIMMessage.IMDNDispositionNotificationHeader.requirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CPIMMessage.IMDNDispositionNotificationHeader.requirements.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*CPIMMessage.IMDNDispositionNotificationHeader.requirements.modify())()
{
  return nullsub_1;
}

BlastDoor::CPIMMessage::EncapsulatedMessage::ContentType_optional __swiftcall CPIMMessage.EncapsulatedMessage.ContentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  BlastDoor::CPIMMessage::EncapsulatedMessage::ContentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AD63BE94();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static CPIMMessage.EncapsulatedMessage.ContentType.allCases.getter()
{
  return &unk_1E5CCCFD0;
}

uint64_t CPIMMessage.EncapsulatedMessage.ContentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AD34C284 + 4 * byte_1AD67AEE5[*v0]))(0xD000000000000028, 0x80000001AD69D840);
}

uint64_t sub_1AD34C284@<X0>(uint64_t a1@<X8>)
{
  return a1 + 21;
}

unint64_t sub_1AD34C2F8()
{
  return 0xD000000000000010;
}

void sub_1AD34C314(char *a1)
{
  sub_1AD43650C(*a1);
}

void sub_1AD34C320()
{
  char *v0;

  sub_1AD14D988(0, *v0);
}

void sub_1AD34C32C(uint64_t a1)
{
  char *v1;

  sub_1AD14C920(a1, *v1);
}

void sub_1AD34C334(uint64_t a1)
{
  char *v1;

  sub_1AD14D988(a1, *v1);
}

BlastDoor::CPIMMessage::EncapsulatedMessage::ContentType_optional sub_1AD34C33C(Swift::String *a1)
{
  return CPIMMessage.EncapsulatedMessage.ContentType.init(rawValue:)(*a1);
}

uint64_t sub_1AD34C348@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CPIMMessage.EncapsulatedMessage.ContentType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AD34C36C()
{
  sub_1AD34FD54();
  return sub_1AD63B924();
}

uint64_t sub_1AD34C3C8()
{
  sub_1AD34FD54();
  return sub_1AD63B8C4();
}

void sub_1AD34C414(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5CCCFD0;
}

uint64_t CPIMMessage.EncapsulatedMessage.TransferEncoding.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static CPIMMessage.EncapsulatedMessage.TransferEncoding.allCases.getter()
{
  return &unk_1E5CCCFF8;
}

uint64_t CPIMMessage.EncapsulatedMessage.TransferEncoding.rawValue.getter()
{
  return 0x343665736162;
}

uint64_t sub_1AD34C498()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD34C4E4()
{
  return sub_1AD63B7F8();
}

uint64_t sub_1AD34C4F8()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD34C540@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1AD34C590(_QWORD *a1@<X8>)
{
  *a1 = 0x343665736162;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1AD34C5A8()
{
  sub_1AD34FD10();
  return sub_1AD63B924();
}

uint64_t sub_1AD34C604()
{
  sub_1AD34FD10();
  return sub_1AD63B8C4();
}

void sub_1AD34C650(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5CCD020;
}

void CPIMMessage.EncapsulatedMessage.contentType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *CPIMMessage.EncapsulatedMessage.contentType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*CPIMMessage.EncapsulatedMessage.contentType.modify())()
{
  return nullsub_1;
}

void CPIMMessage.EncapsulatedMessage.transferEncoding.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *CPIMMessage.EncapsulatedMessage.transferEncoding.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*CPIMMessage.EncapsulatedMessage.transferEncoding.modify())()
{
  return nullsub_1;
}

uint64_t CPIMMessage.EncapsulatedMessage.decodedContentBody.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CPIMMessage.EncapsulatedMessage.decodedContentBody.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*CPIMMessage.EncapsulatedMessage.decodedContentBody.modify())()
{
  return nullsub_1;
}

uint64_t CPIMMessage.headers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CPIMMessage.headers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*CPIMMessage.headers.modify())()
{
  return nullsub_1;
}

uint64_t CPIMMessage.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return sub_1AD34C77C();
}

uint64_t sub_1AD34C77C()
{
  return swift_bridgeObjectRetain();
}

__n128 CPIMMessage.content.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  sub_1AD34C7E0();
  result = v5;
  *(__n128 *)(v1 + 8) = v5;
  *(_QWORD *)(v1 + 24) = v2;
  *(_BYTE *)(v1 + 32) = v3;
  return result;
}

uint64_t sub_1AD34C7E0()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*CPIMMessage.content.modify())()
{
  return nullsub_1;
}

uint64_t CPIMMessage.Header.toValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for CPIMMessage.Header(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD0D3D2C(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1AD066230((uint64_t)v6, type metadata accessor for CPIMMessage.Header);
    v8 = type metadata accessor for CPIMMessage.ToHeader(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  else
  {
    sub_1AD2A5214((uint64_t)v6, a1, type metadata accessor for CPIMMessage.ToHeader);
    v10 = type metadata accessor for CPIMMessage.ToHeader(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
}

uint64_t type metadata accessor for CPIMMessage.Header(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDAE48);
}

uint64_t CPIMMessage.Header.fromValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for CPIMMessage.Header(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD0D3D2C(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1AD2A5214((uint64_t)v6, a1, type metadata accessor for CPIMMessage.FromHeader);
    v8 = type metadata accessor for CPIMMessage.FromHeader(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    sub_1AD066230((uint64_t)v6, type metadata accessor for CPIMMessage.Header);
    v10 = type metadata accessor for CPIMMessage.FromHeader(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t CPIMMessage.Header.dateTimeValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for CPIMMessage.Header(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD0D3D2C(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1AD2A5214((uint64_t)v6, a1, type metadata accessor for CPIMMessage.DateTimeHeader);
    v8 = type metadata accessor for CPIMMessage.DateTimeHeader(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    sub_1AD066230((uint64_t)v6, type metadata accessor for CPIMMessage.Header);
    v10 = type metadata accessor for CPIMMessage.DateTimeHeader(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t type metadata accessor for CPIMMessage.DateTimeHeader(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDAE28);
}

uint64_t CPIMMessage.Header.namespaceValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for CPIMMessage.Header(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD0D3D2C(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_1AD2A5214((uint64_t)v6, a1, type metadata accessor for CPIMMessage.NamespaceHeader);
    v8 = type metadata accessor for CPIMMessage.NamespaceHeader(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    sub_1AD066230((uint64_t)v6, type metadata accessor for CPIMMessage.Header);
    v10 = type metadata accessor for CPIMMessage.NamespaceHeader(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t CPIMMessage.Header.imdnMessageIDValue.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t result;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for CPIMMessage.Header(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (__int128 *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AD0D3D2C(v2, (uint64_t)v6, v7);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 4)
  {
    v9 = *v6;
    v10 = v6[1];
  }
  else
  {
    result = sub_1AD066230((uint64_t)v6, type metadata accessor for CPIMMessage.Header);
    v9 = 0uLL;
    v10 = 0uLL;
  }
  *a1 = v9;
  a1[1] = v10;
  return result;
}

uint64_t CPIMMessage.Header.imdnDispositionNotificationValue.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = type metadata accessor for CPIMMessage.Header(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AD0D3D2C(v2, (uint64_t)v6, v7);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 5)
  {
    v9 = *v6;
  }
  else
  {
    result = sub_1AD066230((uint64_t)v6, type metadata accessor for CPIMMessage.Header);
    v9 = 0;
  }
  *a1 = v9;
  return result;
}

uint64_t CPIMMessage.Content.messageValue.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v3 = 0;
    v4 = 0;
    result = 0;
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 8);
    v3 = *(_QWORD *)v1 & 0x1FFLL;
    result = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  a1[1] = v4;
  a1[2] = result;
  return result;
}

uint64_t CPIMMessage.Content.multipartMessageValue.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 24) == 1)
    return swift_bridgeObjectRetain();
  else
    return 0;
}

uint64_t sub_1AD34CDD0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD75C8, type metadata accessor for CPIMMessage.ToHeader, (uint64_t)&protocol conformance descriptor for CPIMMessage.ToHeader);
  result = sub_1ACFF9724(&qword_1EECD7588, type metadata accessor for CPIMMessage.ToHeader, (uint64_t)"!/h8\\cd8");
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD34CE2C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD75C0, type metadata accessor for CPIMMessage.FromHeader, (uint64_t)&protocol conformance descriptor for CPIMMessage.FromHeader);
  result = sub_1ACFF9724(&qword_1EECD7580, type metadata accessor for CPIMMessage.FromHeader, (uint64_t)&protocol conformance descriptor for CPIMMessage.FromHeader);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD34CE88(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD75B8, type metadata accessor for CPIMMessage.DateTimeHeader, (uint64_t)&protocol conformance descriptor for CPIMMessage.DateTimeHeader);
  result = sub_1ACFF9724(&qword_1EECD7578, type metadata accessor for CPIMMessage.DateTimeHeader, (uint64_t)&protocol conformance descriptor for CPIMMessage.DateTimeHeader);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD34CEE4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD75B0, type metadata accessor for CPIMMessage.NamespaceHeader, (uint64_t)"I.h8Tbd8");
  result = sub_1ACFF9724(&qword_1EECD7570, type metadata accessor for CPIMMessage.NamespaceHeader, (uint64_t)"1.h8,bd8");
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD34CF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A2214, (uint64_t (*)(void))sub_1AD2A2148);
}

unint64_t sub_1AD34CF58()
{
  unint64_t result;

  result = qword_1EECDADC0;
  if (!qword_1EECDADC0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement, &type metadata for CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement);
    atomic_store(result, (unint64_t *)&qword_1EECDADC0);
  }
  return result;
}

uint64_t sub_1AD34CF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A21D0, (uint64_t (*)(void))sub_1AD2A2104);
}

uint64_t sub_1AD34CFB0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD4250, type metadata accessor for CPIMMessage.Header, (uint64_t)&protocol conformance descriptor for CPIMMessage.Header);
  result = sub_1ACFF9724(&qword_1EECD4270, type metadata accessor for CPIMMessage.Header, (uint64_t)&protocol conformance descriptor for CPIMMessage.Header);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD34D010()
{
  unint64_t result;

  result = qword_1EECDADC8;
  if (!qword_1EECDADC8)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for CPIMMessage.EncapsulatedMessage.ContentType, &type metadata for CPIMMessage.EncapsulatedMessage.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EECDADC8);
  }
  return result;
}

uint64_t sub_1AD34D054()
{
  return sub_1AD0D73A4(&qword_1EECDADD0, &qword_1EECDADD8);
}

unint64_t sub_1AD34D07C()
{
  unint64_t result;

  result = qword_1EECDADE0;
  if (!qword_1EECDADE0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for CPIMMessage.EncapsulatedMessage.TransferEncoding, &type metadata for CPIMMessage.EncapsulatedMessage.TransferEncoding);
    atomic_store(result, (unint64_t *)&qword_1EECDADE0);
  }
  return result;
}

uint64_t sub_1AD34D0C0()
{
  return sub_1AD0D73A4(&qword_1EECDADE8, &qword_1EECDADF0);
}

uint64_t sub_1AD34D0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A2368, (uint64_t (*)(void))sub_1AD2A22E0);
}

uint64_t sub_1AD34D0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28D858, (uint64_t (*)(void))sub_1AD28D918);
}

uint64_t sub_1AD34D10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD34D120, (uint64_t (*)(void))sub_1AD34D164);
}

unint64_t sub_1AD34D120()
{
  unint64_t result;

  result = qword_1EECDADF8;
  if (!qword_1EECDADF8)
  {
    result = MEMORY[0x1AF44BDF0]("yNh8̂d8", &type metadata for CPIMMessage);
    atomic_store(result, (unint64_t *)&qword_1EECDADF8);
  }
  return result;
}

unint64_t sub_1AD34D164()
{
  unint64_t result;

  result = qword_1EECDAE00;
  if (!qword_1EECDAE00)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for CPIMMessage, &type metadata for CPIMMessage);
    atomic_store(result, (unint64_t *)&qword_1EECDAE00);
  }
  return result;
}

uint64_t sub_1AD34D1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD34AF04(a1, a2);
}

uint64_t sub_1AD34D1BC(uint64_t a1)
{
  return sub_1AD34B020(a1);
}

uint64_t sub_1AD34D1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACFF64C0(a1, a2, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t sub_1AD34D1F0(uint64_t a1, uint64_t a2)
{
  return sub_1AD34B5B8(a1, a2);
}

uint64_t sub_1AD34D204@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD34B7B4(a1, type metadata accessor for CPIMMessage.ToHeader, a2);
}

uint64_t sub_1AD34D220(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD34B838(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for CPIMMessage.ToHeader);
}

uint64_t sub_1AD34D23C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD34B970(a1, type metadata accessor for CPIMMessage.ToHeader, a2);
}

uint64_t sub_1AD34D258(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD34B9B8(a1, a2, a3, a4, type metadata accessor for CPIMMessage.ToHeader);
}

uint64_t sub_1AD34D274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD34AF04(a1, a2);
}

uint64_t sub_1AD34D288(uint64_t a1)
{
  return sub_1AD34B020(a1);
}

uint64_t sub_1AD34D29C(uint64_t a1, uint64_t a2)
{
  return sub_1AD34B5B8(a1, a2);
}

uint64_t sub_1AD34D2B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD34B7B4(a1, type metadata accessor for CPIMMessage.FromHeader, a2);
}

uint64_t sub_1AD34D2CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD34B838(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for CPIMMessage.FromHeader);
}

uint64_t sub_1AD34D2E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD34B970(a1, type metadata accessor for CPIMMessage.FromHeader, a2);
}

uint64_t sub_1AD34D304(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD34B9B8(a1, a2, a3, a4, type metadata accessor for CPIMMessage.FromHeader);
}

uint64_t sub_1AD34D324(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD34D360@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD34D3A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD34D3DC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t destroy for CPIMMessage()
{
  swift_bridgeObjectRelease();
  return sub_1AD34C7E0();
}

uint64_t initializeWithCopy for CPIMMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1AD34C77C();
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for CPIMMessage(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[1];
  v5 = v2[2];
  v6 = v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  sub_1AD34C77C();
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = (_BYTE)v2;
  sub_1AD34C7E0();
  return a1;
}

uint64_t assignWithTake for CPIMMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  sub_1AD34C7E0();
  return a1;
}

ValueMetadata *type metadata accessor for CPIMMessage()
{
  return &type metadata for CPIMMessage;
}

uint64_t getEnumTagSinglePayload for CPIMMessage.ToHeader()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for CPIMMessage.ToHeader()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *_s9BlastDoor11CPIMMessageV8ToHeaderVwCP_0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    *a1 = v5;
    a1[1] = v8;
    swift_retain();
    v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1AD63AF28();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v15 = *(int *)(a3 + 20);
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v17[3];
    v16[2] = v17[2];
    v16[3] = v19;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s9BlastDoor11CPIMMessageV8ToHeaderVwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9BlastDoor11CPIMMessageV8ToHeaderVwcp_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63AF28();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v15[3];
  v14[2] = v15[2];
  v14[3] = v17;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s9BlastDoor11CPIMMessageV8ToHeaderVwca_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63AF28();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a2 + v16 + 8);
  *v17 = *(_QWORD *)((char *)a2 + v16);
  v17[1] = v19;
  swift_retain();
  swift_release();
  v17[2] = *((_QWORD *)v18 + 2);
  v17[3] = *((_QWORD *)v18 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s9BlastDoor11CPIMMessageV8ToHeaderVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;

  *a1 = *a2;
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (_OWORD *)((char *)a1 + v12);
  v14 = (_OWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  return a1;
}

_OWORD *_s9BlastDoor11CPIMMessageV8ToHeaderVwta_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)v17;
  swift_release();
  v18 = *((_QWORD *)v17 + 3);
  *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
  *((_QWORD *)v16 + 3) = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CPIMMessage.FromHeader()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for CPIMMessage.FromHeader()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AD34DC80()
{
  unint64_t v0;

  sub_1AD32DF60(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for CPIMMessage.DateTimeHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B03C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for CPIMMessage.DateTimeHeader(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CPIMMessage.DateTimeHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CPIMMessage.DateTimeHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CPIMMessage.DateTimeHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CPIMMessage.DateTimeHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CPIMMessage.DateTimeHeader()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD34DE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CPIMMessage.DateTimeHeader()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD34DEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1AD34DF04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B03C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CPIMMessage.NamespaceHeader(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = a2 + 2;
    v10 = a2[3];
    swift_retain();
    if (v10 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v9;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)v9;
      *(_QWORD *)(a1 + 24) = v10;
      swift_bridgeObjectRetain();
    }
    v11 = *(int *)(a3 + 20);
    v12 = a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1AD63AF28();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for CPIMMessage.NamespaceHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  if (*(_QWORD *)(a1 + 24) != 1)
    swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1AD63AF28();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for CPIMMessage.NamespaceHeader(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 2;
  v8 = a2[3];
  swift_retain();
  if (v8 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v7;
    *(_QWORD *)(a1 + 24) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1AD63AF28();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

_QWORD *assignWithCopy for CPIMMessage.NamespaceHeader(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = a2[3];
  if (a1[3] != 1)
  {
    if (v7 != 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1AD009758((uint64_t)(a1 + 2), &qword_1ED2E3198);
    goto LABEL_6;
  }
  if (v7 == 1)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_8;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
LABEL_8:
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1AD63AF28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *initializeWithTake for CPIMMessage.NamespaceHeader(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1AD63AF28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CPIMMessage.NamespaceHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = (_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 16) = *v6;
      *(_QWORD *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AD009758(a1 + 16, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
LABEL_6:
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1AD63AF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CPIMMessage.NamespaceHeader()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD34E34C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1AD63AF28();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CPIMMessage.NamespaceHeader()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD34E3D4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1AD63AF28();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AD34E448()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63AF28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for CPIMMessage.IMDNMessageIDHeader()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CPIMMessage.IMDNMessageIDHeader(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CPIMMessage.IMDNMessageIDHeader(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CPIMMessage.IMDNMessageIDHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSActivitySharingInvitation.SecureCloudPingRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSActivitySharingInvitation.SecureCloudPingRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CPIMMessage.IMDNMessageIDHeader()
{
  return &type metadata for CPIMMessage.IMDNMessageIDHeader;
}

ValueMetadata *type metadata accessor for CPIMMessage.IMDNDispositionNotificationHeader()
{
  return &type metadata for CPIMMessage.IMDNDispositionNotificationHeader;
}

uint64_t storeEnumTagSinglePayload for CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD34E6BC + 4 * byte_1AD67AEF2[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD34E6F0 + 4 * byte_1AD67AEED[v4]))();
}

uint64_t sub_1AD34E6F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD34E6F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD34E700);
  return result;
}

uint64_t sub_1AD34E70C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD34E714);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD34E718(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD34E720(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement()
{
  return &type metadata for CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement;
}

uint64_t initializeBufferWithCopyOfBuffer for CPIMMessage.Header(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1AD34E794 + 4 * byte_1AD67AEF7[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for CPIMMessage.Header(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_release();
      v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v4 = sub_1AD63AF28();
      v5 = *(_QWORD *)(v4 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
      type metadata accessor for CPIMMessage.ToHeader(0);
      goto LABEL_8;
    case 1:
      swift_release();
      v6 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v7 = sub_1AD63AF28();
      v8 = *(_QWORD *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      type metadata accessor for CPIMMessage.FromHeader(0);
      goto LABEL_8;
    case 2:
      v9 = sub_1AD63B03C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
    case 3:
      swift_release();
      if (*(_QWORD *)(a1 + 24) != 1)
        swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for CPIMMessage.NamespaceHeader(0) + 20);
      v9 = sub_1AD63AF28();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
    case 4:
LABEL_8:
      swift_release();
      goto LABEL_14;
    case 5:
LABEL_14:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for CPIMMessage.Header()
{
  char *v0;

  v0 = (char *)sub_1AD34EC5C + 4 * byte_1AD67AF03[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1AD34EC5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_retain();
  v3 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v4 = (char *)v0 + v3;
  v5 = (char *)v1 + v3;
  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v4, v5, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v4, v5, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  }
  v9 = *(int *)(type metadata accessor for CPIMMessage.ToHeader(0) + 20);
  v10 = (_QWORD *)((char *)v0 + v9);
  v11 = (_QWORD *)((char *)v1 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = v11[3];
  v10[2] = v11[2];
  v10[3] = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for CPIMMessage.Header(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1AD066230(result, type metadata accessor for CPIMMessage.Header);
    v2 = (char *)&loc_1AD34EF8C + 4 * byte_1AD67AF09[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for CPIMMessage.Header(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1AD63AF28();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v24 = *(int *)(type metadata accessor for CPIMMessage.ToHeader(0) + 20);
      v25 = (_OWORD *)((char *)a1 + v24);
      v26 = (_OWORD *)((char *)a2 + v24);
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      goto LABEL_13;
    case 1u:
      *a1 = *a2;
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_1AD63AF28();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v28 = *(int *)(type metadata accessor for CPIMMessage.FromHeader(0) + 20);
      v29 = (_OWORD *)((char *)a1 + v28);
      v30 = (_OWORD *)((char *)a2 + v28);
      v31 = v30[1];
      *v29 = *v30;
      v29[1] = v31;
      goto LABEL_13;
    case 2u:
      v18 = sub_1AD63B03C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
      goto LABEL_13;
    case 3u:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      v20 = *(int *)(type metadata accessor for CPIMMessage.NamespaceHeader(0) + 20);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for CPIMMessage.Header(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;

  if (a1 != a2)
  {
    sub_1AD066230((uint64_t)a1, type metadata accessor for CPIMMessage.Header);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_1AD63AF28();
        v10 = *(_QWORD *)(v9 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
        }
        v24 = *(int *)(type metadata accessor for CPIMMessage.ToHeader(0) + 20);
        v25 = (_OWORD *)((char *)a1 + v24);
        v26 = (_OWORD *)((char *)a2 + v24);
        v27 = v26[1];
        *v25 = *v26;
        v25[1] = v27;
        goto LABEL_14;
      case 1u:
        *a1 = *a2;
        v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_1AD63AF28();
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
        v28 = *(int *)(type metadata accessor for CPIMMessage.FromHeader(0) + 20);
        v29 = (_OWORD *)((char *)a1 + v28);
        v30 = (_OWORD *)((char *)a2 + v28);
        v31 = v30[1];
        *v29 = *v30;
        v29[1] = v31;
        goto LABEL_14;
      case 2u:
        v18 = sub_1AD63B03C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
        goto LABEL_14;
      case 3u:
        v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        v20 = *(int *)(type metadata accessor for CPIMMessage.NamespaceHeader(0) + 20);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1AD34F7A4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for CPIMMessage.ToHeader(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for CPIMMessage.FromHeader(319);
    if (v2 <= 0x3F)
    {
      result = sub_1AD63B03C();
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for CPIMMessage.NamespaceHeader(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AD34F878(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CPIMMessage.EncapsulatedMessage(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CPIMMessage.EncapsulatedMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CPIMMessage.EncapsulatedMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CPIMMessage.EncapsulatedMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CPIMMessage.EncapsulatedMessage()
{
  return &type metadata for CPIMMessage.EncapsulatedMessage;
}

uint64_t storeEnumTagSinglePayload for CPIMMessage.EncapsulatedMessage.ContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AD34FA18 + 4 * byte_1AD67AF1C[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AD34FA4C + 4 * byte_1AD67AF17[v4]))();
}

uint64_t sub_1AD34FA4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD34FA54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD34FA5CLL);
  return result;
}

uint64_t sub_1AD34FA68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD34FA70);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AD34FA74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD34FA7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CPIMMessage.EncapsulatedMessage.ContentType()
{
  return &type metadata for CPIMMessage.EncapsulatedMessage.ContentType;
}

uint64_t storeEnumTagSinglePayload for CPIMMessage.EncapsulatedMessage.TransferEncoding(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AD34FAD8 + 4 * byte_1AD67AF21[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AD34FAF8 + 4 * byte_1AD67AF26[v4]))();
}

_BYTE *sub_1AD34FAD8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AD34FAF8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD34FB00(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD34FB08(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD34FB10(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD34FB18(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CPIMMessage.EncapsulatedMessage.TransferEncoding()
{
  return &type metadata for CPIMMessage.EncapsulatedMessage.TransferEncoding;
}

uint64_t destroy for CPIMMessage.Content()
{
  return sub_1AD34C7E0();
}

uint64_t initializeWithCopy for CPIMMessage.Content(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  sub_1AD34C77C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for CPIMMessage.Content(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  sub_1AD34C77C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1AD34C7E0();
  return a1;
}

uint64_t assignWithTake for CPIMMessage.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1AD34C7E0();
  return a1;
}

uint64_t getEnumTagSinglePayload for CPIMMessage.Content(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CPIMMessage.Content(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AD34FCEC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1AD34FCF4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CPIMMessage.Content()
{
  return &type metadata for CPIMMessage.Content;
}

unint64_t sub_1AD34FD10()
{
  unint64_t result;

  result = qword_1EECDAE58;
  if (!qword_1EECDAE58)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for CPIMMessage.EncapsulatedMessage.TransferEncoding, &type metadata for CPIMMessage.EncapsulatedMessage.TransferEncoding);
    atomic_store(result, (unint64_t *)&qword_1EECDAE58);
  }
  return result;
}

unint64_t sub_1AD34FD54()
{
  unint64_t result;

  result = qword_1EECDAE60;
  if (!qword_1EECDAE60)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for CPIMMessage.EncapsulatedMessage.ContentType, &type metadata for CPIMMessage.EncapsulatedMessage.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EECDAE60);
  }
  return result;
}

unint64_t sub_1AD34FD98()
{
  unint64_t result;

  result = qword_1EECDAE68;
  if (!qword_1EECDAE68)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement, &type metadata for CPIMMessage.IMDNDispositionNotificationHeader.NotifyRequirement);
    atomic_store(result, (unint64_t *)&qword_1EECDAE68);
  }
  return result;
}

uint64_t sub_1AD34FDDC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD34FE08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD34FE54(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v4;
  _QWORD *v5;

  v4 = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1AD13F52C;
  return sub_1AD34FEBC(a1, (uint64_t)v4);
}

uint64_t sub_1AD34FEBC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[17] = a1;
  v2[18] = a2;
  v3 = _s5CodecVMa();
  v2[19] = v3;
  v2[20] = *(_QWORD *)(v3 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AD34FF2C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_DWORD *)(v0 + 208) = objc_msgSend(*(id *)(v0 + 144), sel_trackID);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAED8);
  *(_QWORD *)(v0 + 184) = sub_1AD63B090();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v1;
  *v1 = v0;
  v1[1] = sub_1AD34FFC0;
  return sub_1AD63BC0C();
}

uint64_t sub_1AD34FFC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1AD35002C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  const opaqueCMFormatDescription *v8;
  const opaqueCMFormatDescription *v9;
  const __CFDictionary *v10;
  uint64_t v11;
  uint64_t v12;
  const __CFDictionary **v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 120);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_17:

    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    v18 = *(_QWORD *)(v0 + 136);
    *(_DWORD *)v18 = *(_DWORD *)(v0 + 208);
    *(_QWORD *)(v18 + 8) = v14;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  v2 = sub_1AD63BE34();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_17;
LABEL_3:
  v21 = MEMORY[0x1E0DEE9D8];
  result = sub_1AD147854(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 160);
    v7 = v1 & 0xC000000000000001;
    v20 = v1;
    v19 = v2;
    do
    {
      if (v7)
        v8 = (const opaqueCMFormatDescription *)MEMORY[0x1AF44AA40](v4, v1);
      else
        v8 = (const opaqueCMFormatDescription *)*(id *)(v1 + 8 * v4 + 32);
      v9 = v8;
      sub_1AD63BC00();
      v10 = CMFormatDescriptionGetExtensions(v9);
      if (v10)
      {
        sub_1AD63B684();

        v10 = 0;
      }
      v11 = *(_QWORD *)(v0 + 168);
      v12 = *(_QWORD *)(v0 + 176);
      v13 = (const __CFDictionary **)(v11 + *(int *)(v5 + 20));
      *v13 = v10;
      v13[1] = 0;
      sub_1AD63BBF4();

      sub_1AD145ED8(v11, v12);
      v14 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AD147854(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v14 = v21;
      }
      v16 = *(_QWORD *)(v14 + 16);
      v15 = *(_QWORD *)(v14 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1AD147854(v15 > 1, v16 + 1, 1);
        v14 = v21;
      }
      v17 = *(_QWORD *)(v0 + 176);
      ++v4;
      *(_QWORD *)(v14 + 16) = v16 + 1;
      sub_1AD145ED8(v17, v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v16);
      v1 = v20;
    }
    while (v19 != v4);

    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD350440()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD35049C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63BBD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1AD3504D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(_s5CodecVMa() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s5CodecVMa()
{
  uint64_t result;

  result = qword_1EECDAEB8;
  if (!qword_1EECDAEB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD35054C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(_s5CodecVMa() + 24);
  v4 = sub_1AD63BBE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1AD350594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v0 = sub_1AD63AD6C();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v10 - v6;
  __swift_allocate_value_buffer(v5, qword_1EECDAE70);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDAE70);
  sub_1AD63AD48();
  sub_1AD63AD54();
  sub_1AD63AD60();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  return ((uint64_t (*)(char *, uint64_t))v8)(v7, v0);
}

uint64_t sub_1AD350674()
{
  uint64_t v0;

  sub_1AD63BBD0();
  sub_1ACFF9724(&qword_1EECDAE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF250], MEMORY[0x1E0DEF260]);
  sub_1AD63B6C0();
  if (*(_QWORD *)(v0 + *(int *)(_s5CodecVMa() + 20) + 8))
  {
    sub_1AD63C4C4();
    swift_bridgeObjectRetain();
    sub_1AD63B7F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD63C4C4();
  }
  sub_1AD63BBE8();
  sub_1ACFF9724(&qword_1EECDAEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF280], MEMORY[0x1E0DEF290]);
  return sub_1AD63B6C0();
}

uint64_t sub_1AD35077C()
{
  uint64_t v0;

  sub_1AD63C4AC();
  sub_1AD63BBD0();
  sub_1ACFF9724(&qword_1EECDAE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF250], MEMORY[0x1E0DEF260]);
  sub_1AD63B6C0();
  if (*(_QWORD *)(v0 + *(int *)(_s5CodecVMa() + 20) + 8))
  {
    sub_1AD63C4C4();
    swift_bridgeObjectRetain();
    sub_1AD63B7F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD63C4C4();
  }
  sub_1AD63BBE8();
  sub_1ACFF9724(&qword_1EECDAEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF280], MEMORY[0x1E0DEF290]);
  sub_1AD63B6C0();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD35089C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1AD63BBD0();
  sub_1ACFF9724(&qword_1EECDAE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF250], MEMORY[0x1E0DEF260]);
  sub_1AD63B6C0();
  if (*(_QWORD *)(v2 + *(int *)(a2 + 20) + 8))
  {
    sub_1AD63C4C4();
    swift_bridgeObjectRetain();
    sub_1AD63B7F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD63C4C4();
  }
  sub_1AD63BBE8();
  sub_1ACFF9724(&qword_1EECDAEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF280], MEMORY[0x1E0DEF290]);
  return sub_1AD63B6C0();
}

uint64_t sub_1AD350998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1AD63C4AC();
  sub_1AD63BBD0();
  sub_1ACFF9724(&qword_1EECDAE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF250], MEMORY[0x1E0DEF260]);
  sub_1AD63B6C0();
  if (*(_QWORD *)(v2 + *(int *)(a2 + 20) + 8))
  {
    sub_1AD63C4C4();
    swift_bridgeObjectRetain();
    sub_1AD63B7F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD63C4C4();
  }
  sub_1AD63BBE8();
  sub_1ACFF9724(&qword_1EECDAEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF280], MEMORY[0x1E0DEF290]);
  sub_1AD63B6C0();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD350AAC()
{
  unsigned int *v0;

  return *v0;
}

uint64_t sub_1AD350AB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD350ABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  sub_1AD63C4DC();
  swift_bridgeObjectRetain();
  sub_1AD3547D4(a1, v3);
  return swift_bridgeObjectRelease();
}

BOOL sub_1AD350B08(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2 && sub_1AD350B2C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8));
}

BOOL sub_1AD350B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  int v21;
  int v22;
  _BOOL8 result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;

  v4 = _s5CodecVMa();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v11 = (char *)&v24 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12 == *(_QWORD *)(a2 + 16))
  {
    if (!v12 || a1 == a2)
      return 1;
    v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v24 = *(_QWORD *)(v9 + 72);
    v25 = v8;
    v14 = v12 - 1;
    while (1)
    {
      v26 = v14;
      sub_1AD0D3D2C(a1 + v13, (uint64_t)v11, (uint64_t (*)(_QWORD))_s5CodecVMa);
      sub_1AD0D3D2C(a2 + v13, (uint64_t)v7, (uint64_t (*)(_QWORD))_s5CodecVMa);
      sub_1AD63BBD0();
      sub_1ACFF9724((unint64_t *)&qword_1EECD2538, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF250], MEMORY[0x1E0DEF268]);
      sub_1AD63B8B8();
      sub_1AD63B8B8();
      if (v28 != v27)
        break;
      v15 = *(int *)(v25 + 20);
      v16 = &v11[v15];
      v17 = *(_QWORD *)&v11[v15 + 8];
      v18 = &v7[v15];
      v19 = *((_QWORD *)v18 + 1);
      if (v17)
      {
        if (!v19)
          break;
        v20 = *(_QWORD *)v16 == *(_QWORD *)v18 && v17 == v19;
        if (!v20 && (sub_1AD63C2A8() & 1) == 0)
          break;
      }
      else if (v19)
      {
        break;
      }
      sub_1AD63BBE8();
      sub_1ACFF9724(&qword_1EECDAED0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF280], MEMORY[0x1E0DEF2A0]);
      sub_1AD63B8B8();
      sub_1AD63B8B8();
      v22 = v27;
      v21 = v28;
      sub_1AD066230((uint64_t)v7, (uint64_t (*)(_QWORD))_s5CodecVMa);
      sub_1AD066230((uint64_t)v11, (uint64_t (*)(_QWORD))_s5CodecVMa);
      v14 = v26 - 1;
      result = v21 == v22;
      if (v21 == v22)
      {
        v13 += v24;
        if (v26)
          continue;
      }
      return result;
    }
    sub_1AD066230((uint64_t)v7, (uint64_t (*)(_QWORD))_s5CodecVMa);
    sub_1AD066230((uint64_t)v11, (uint64_t (*)(_QWORD))_s5CodecVMa);
  }
  return 0;
}

uint64_t sub_1AD350DB4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1AD63C2A8(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1AD63C2A8() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1AD350E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v9[288];
  _BYTE __dst[288];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v7 = 1;
    }
    else
    {
      v3 = (char *)(a1 + 32);
      v4 = (char *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        memcpy(__dst, v3, 0x119uLL);
        memcpy(v9, v4, 0x119uLL);
        v7 = sub_1AD456DD8((uint64_t)__dst, (uint64_t)v9);
        if ((v7 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 288;
        v3 += 288;
      }
      while (v6);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1AD350F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  _OWORD v19[10];
  _OWORD v20[10];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (_OWORD *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = v3[7];
        v20[6] = v3[6];
        v20[7] = v7;
        v8 = v3[9];
        v20[8] = v3[8];
        v20[9] = v8;
        v9 = v3[3];
        v20[2] = v3[2];
        v20[3] = v9;
        v10 = v3[5];
        v20[4] = v3[4];
        v20[5] = v10;
        v11 = v3[1];
        v20[0] = *v3;
        v20[1] = v11;
        v12 = v4[7];
        v19[6] = v4[6];
        v19[7] = v12;
        v13 = v4[9];
        v19[8] = v4[8];
        v19[9] = v13;
        v14 = v4[3];
        v19[2] = v4[2];
        v19[3] = v14;
        v15 = v4[5];
        v19[4] = v4[4];
        v19[5] = v15;
        v16 = v4[1];
        v19[0] = *v4;
        v19[1] = v16;
        v17 = sub_1AD4569D8((uint64_t)v20, (uint64_t)v19);
        if ((v17 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 10;
        v3 += 10;
      }
      while (v6);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1AD350FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v29;
  _QWORD v31[6];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v4 = type metadata accessor for HealthSharingSetupInvitationToken(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)v31 - v9;
  v34 = a1;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_28:
    v27 = 0;
    return v27 & 1;
  }
  if (v11 && v34 != a2)
  {
    v31[4] = 0;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v31[5] = a2;
    v32 = v13;
    v14 = v11 - 1;
    v33 = v4;
    while (1)
    {
      sub_1AD0D3D2C(v34 + v12, (uint64_t)v10, type metadata accessor for HealthSharingSetupInvitationToken);
      sub_1AD0D3D2C(a2 + v12, (uint64_t)v7, type metadata accessor for HealthSharingSetupInvitationToken);
      v15 = *(int *)(v4 + 20);
      v16 = &v10[v15];
      v17 = *(_QWORD *)&v10[v15 + 8];
      v18 = &v7[v15];
      v19 = *((_QWORD *)v18 + 1);
      if (v17)
      {
        if (!v19)
          goto LABEL_27;
        v20 = *(_QWORD *)v16 == *(_QWORD *)v18 && v17 == v19;
        if (!v20 && (sub_1AD63C2A8() & 1) == 0)
          goto LABEL_27;
      }
      else if (v19)
      {
        goto LABEL_27;
      }
      v21 = *(int *)(v4 + 24);
      v22 = *(_QWORD *)&v10[v21];
      v23 = *(_QWORD *)&v10[v21 + 8];
      v24 = (uint64_t *)&v7[v21];
      v25 = *v24;
      v26 = v24[1];
      if (v23 >> 60 != 15)
        break;
      if (v26 >> 60 != 15)
        goto LABEL_26;
      sub_1AD63B24C();
      sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
      v27 = sub_1AD63B738();
      sub_1AD066230((uint64_t)v7, type metadata accessor for HealthSharingSetupInvitationToken);
      sub_1AD066230((uint64_t)v10, type metadata accessor for HealthSharingSetupInvitationToken);
      v29 = v14-- != 0;
      if ((v27 & 1) != 0)
      {
        v4 = v33;
        v12 += v32;
        if (v29)
          continue;
      }
      return v27 & 1;
    }
    if (v26 >> 60 != 15)
      __asm { BR              X8 }
LABEL_26:
    sub_1AD00408C(v22, v23);
    sub_1AD00408C(v25, v26);
    sub_1AD004118(v22, v23);
    sub_1AD004118(v25, v26);
LABEL_27:
    sub_1AD066230((uint64_t)v7, type metadata accessor for HealthSharingSetupInvitationToken);
    sub_1AD066230((uint64_t)v10, type metadata accessor for HealthSharingSetupInvitationToken);
    goto LABEL_28;
  }
  v27 = 1;
  return v27 & 1;
}

uint64_t sub_1AD351614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  for (i = 0; ; i += 96)
  {
    v4 = a1 + i;
    if ((*(_BYTE *)(a1 + i + 57) & 1) != 0)
      break;
    v5 = a2 + i;
    if ((*(_BYTE *)(a2 + i + 57) & 1) != 0)
      break;
    if ((*(_BYTE *)(v4 + 56) & 1) != 0)
    {
      if ((*(_BYTE *)(v5 + 56) & 1) == 0)
        return 0;
    }
    else
    {
      v6 = 0;
      if ((*(_BYTE *)(v5 + 56) & 1) != 0 || *(_QWORD *)(v4 + 48) != *(_QWORD *)(v5 + 48))
        return v6;
    }
    if ((*(_BYTE *)(v4 + 89) & 1) != 0 || (*(_BYTE *)(v5 + 89) & 1) != 0)
      break;
    if ((*(_BYTE *)(v4 + 88) & 1) != 0)
    {
      if ((*(_BYTE *)(v5 + 88) & 1) == 0)
        return 0;
    }
    else
    {
      v6 = 0;
      if ((*(_BYTE *)(v5 + 88) & 1) != 0 || *(_QWORD *)(v4 + 80) != *(_QWORD *)(v5 + 80))
        return v6;
    }
    if ((*(_BYTE *)(v4 + 121) & 1) != 0 || (*(_BYTE *)(v5 + 121) & 1) != 0)
      break;
    if ((*(_BYTE *)(v4 + 120) & 1) != 0)
    {
      if ((*(_BYTE *)(v5 + 120) & 1) == 0)
        return 0;
    }
    else
    {
      v6 = 0;
      if ((*(_BYTE *)(v5 + 120) & 1) != 0 || *(_QWORD *)(v4 + 112) != *(_QWORD *)(v5 + 112))
        return v6;
    }
    if (!--v2)
      return 1;
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD35176C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_1AD0D3D2C(a1 + v12, (uint64_t)v10, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
        sub_1AD0D3D2C(a2 + v12, (uint64_t)v7, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
        v15 = sub_1AD446358((uint64_t)v10, (uint64_t)v7);
        sub_1AD066230((uint64_t)v7, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
        sub_1AD066230((uint64_t)v10, type metadata accessor for IDSHomeKitInviteeScheduleYearDayRule);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1AD3518A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (_QWORD *)(a1 + 64);
    if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32))
    {
      if (*v3 >> 60 != 15 && *(_QWORD *)(a2 + 64) >> 60 != 15)
        __asm { BR              X8 }
      sub_1AD63BE28();
      __break(1u);
      JUMPOUT(0x1AD3523CCLL);
    }
  }
  return 0;
}

BOOL sub_1AD3523FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1AD352468(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32))
    {
      v3 = *(_QWORD *)(a1 + 72);
      if ((*(_BYTE *)(a1 + 40) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 40))
          return 0;
      }
      else
      {
        if (*(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36))
          v4 = *(_BYTE *)(a2 + 40);
        else
          v4 = 1;
        if ((v4 & 1) != 0)
          return 0;
      }
      if (v3 >> 60 != 15 && *(_QWORD *)(a2 + 72) >> 60 != 15)
        __asm { BR              X8 }
      sub_1AD63BE28();
      __break(1u);
      JUMPOUT(0x1AD353E30);
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1AD353E90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (uint64_t *)(a1 + 88);
  for (i = (uint64_t *)(a2 + 88); ; i += 8)
  {
    v5 = *(v3 - 4);
    if (v5 == 1)
      break;
    v6 = *(i - 4);
    if (v6 == 1)
      break;
    v8 = *(v3 - 3);
    v7 = *(v3 - 2);
    v10 = *(v3 - 1);
    v9 = *v3;
    v11 = *(i - 3);
    v12 = *(i - 2);
    v14 = *(i - 1);
    v13 = *i;
    if (v5)
    {
      if (!v6)
        return 0;
      if (*(v3 - 5) != *(i - 5) || v5 != v6)
      {
        v18 = *v3;
        v15 = *(i - 3);
        v16 = sub_1AD63C2A8();
        v11 = v15;
        v9 = v18;
        if ((v16 & 1) == 0)
          return 0;
      }
    }
    else if (v6)
    {
      return 0;
    }
    if (v7)
    {
      if (!v12 || (v8 != v11 || v7 != v12) && (sub_1AD63C2A8() & 1) == 0)
        return 0;
    }
    else if (v12)
    {
      return 0;
    }
    if (v9)
    {
      if (!v13 || (v10 != v14 || v9 != v13) && (sub_1AD63C2A8() & 1) == 0)
        return 0;
    }
    else if (v13)
    {
      return 0;
    }
    v3 += 8;
    if (!--v2)
      return 1;
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD354030(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  BOOL v35;
  uint64_t v37;

  v4 = (int *)type metadata accessor for HealthSharingAuthorization(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v37 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (v11 && a1 != a2)
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      while (1)
      {
        sub_1AD0D3D2C(a1 + v12, (uint64_t)v10, type metadata accessor for HealthSharingAuthorization);
        sub_1AD0D3D2C(a2 + v12, (uint64_t)v7, type metadata accessor for HealthSharingAuthorization);
        v15 = v4[5];
        v16 = &v10[v15];
        v17 = *(_QWORD *)&v10[v15 + 8];
        v18 = &v7[v15];
        v19 = *((_QWORD *)v18 + 1);
        if (v17)
        {
          if (!v19
            || (*(_QWORD *)v16 == *(_QWORD *)v18 ? (v20 = v17 == v19) : (v20 = 0), !v20 && (sub_1AD63C2A8() & 1) == 0))
          {
LABEL_39:
            sub_1AD066230((uint64_t)v7, type metadata accessor for HealthSharingAuthorization);
            sub_1AD066230((uint64_t)v10, type metadata accessor for HealthSharingAuthorization);
            goto LABEL_40;
          }
        }
        else if (v19)
        {
          goto LABEL_39;
        }
        v21 = v4[6];
        v22 = &v10[v21];
        v23 = *(_QWORD *)&v10[v21 + 8];
        v24 = &v7[v21];
        v25 = *((_QWORD *)v24 + 1);
        if (v23)
        {
          if (!v25)
            goto LABEL_39;
          v26 = *(_QWORD *)v22 == *(_QWORD *)v24 && v23 == v25;
          if (!v26 && (sub_1AD63C2A8() & 1) == 0)
            goto LABEL_39;
        }
        else if (v25)
        {
          goto LABEL_39;
        }
        v27 = v4[7];
        v28 = &v10[v27];
        v29 = *(_QWORD *)&v10[v27 + 8];
        v30 = &v7[v27];
        v31 = *((_QWORD *)v30 + 1);
        if (v29)
        {
          if (!v31)
            goto LABEL_39;
          v32 = *(_QWORD *)v28 == *(_QWORD *)v30 && v29 == v31;
          if (!v32 && (sub_1AD63C2A8() & 1) == 0)
            goto LABEL_39;
        }
        else if (v31)
        {
          goto LABEL_39;
        }
        sub_1AD63B24C();
        sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        v33 = sub_1AD63B738();
        sub_1AD066230((uint64_t)v7, type metadata accessor for HealthSharingAuthorization);
        sub_1AD066230((uint64_t)v10, type metadata accessor for HealthSharingAuthorization);
        v35 = v14-- != 0;
        if ((v33 & 1) != 0)
        {
          v12 += v13;
          if (v35)
            continue;
        }
        return v33 & 1;
      }
    }
    v33 = 1;
  }
  else
  {
LABEL_40:
    v33 = 0;
  }
  return v33 & 1;
}

uint64_t sub_1AD35428C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_1AD63C4AC();
  sub_1AD63C4DC();
  sub_1AD3547D4((uint64_t)v3, v1);
  return sub_1AD63C4F4();
}

uint64_t sub_1AD3542E8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_1AD63C4AC();
  sub_1AD63C4DC();
  sub_1AD3547D4((uint64_t)v3, v1);
  return sub_1AD63C4F4();
}

uint64_t sub_1AD354344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = _s5CodecVMa();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 8);
  sub_1AD63C4DC();
  v6 = *(_QWORD *)(v5 + 16);
  result = sub_1AD63C4B8();
  if (v6)
  {
    v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    do
    {
      sub_1AD0D3D2C(v8, (uint64_t)v4, (uint64_t (*)(_QWORD))_s5CodecVMa);
      sub_1AD63BBD0();
      sub_1ACFF9724(&qword_1EECDAE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF250], MEMORY[0x1E0DEF260]);
      sub_1AD63B6C0();
      if (*(_QWORD *)&v4[*(int *)(v1 + 20) + 8])
      {
        sub_1AD63C4C4();
        swift_bridgeObjectRetain();
        sub_1AD63B7F8();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1AD63C4C4();
      }
      sub_1AD63BBE8();
      sub_1ACFF9724(&qword_1EECDAEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF280], MEMORY[0x1E0DEF290]);
      sub_1AD63B6C0();
      result = sub_1AD066230((uint64_t)v4, (uint64_t (*)(_QWORD))_s5CodecVMa);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_1AD3544F0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_1AD63C4AC();
  sub_1AD63C4DC();
  sub_1AD3547D4((uint64_t)v3, v1);
  return sub_1AD63C4F4();
}

BOOL sub_1AD354548(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2 && sub_1AD350B2C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8));
}

void sub_1AD35456C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1AD3545CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1AD3547B0);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_1AD3547D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = _s5CodecVMa();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_1AD63C4B8();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1AD0D3D2C(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))_s5CodecVMa);
      sub_1AD63BBD0();
      sub_1ACFF9724(&qword_1EECDAE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF250], MEMORY[0x1E0DEF260]);
      sub_1AD63B6C0();
      if (*(_QWORD *)&v6[*(int *)(v3 + 20) + 8])
      {
        sub_1AD63C4C4();
        swift_bridgeObjectRetain();
        sub_1AD63B7F8();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1AD63C4C4();
      }
      sub_1AD63BBE8();
      sub_1ACFF9724(&qword_1EECDAEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF280], MEMORY[0x1E0DEF290]);
      sub_1AD63B6C0();
      result = sub_1AD066230((uint64_t)v6, (uint64_t (*)(_QWORD))_s5CodecVMa);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

BOOL sub_1AD354978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char v10;
  _BOOL8 result;
  int v12;
  int v13;

  sub_1AD63BBD0();
  sub_1ACFF9724((unint64_t *)&qword_1EECD2538, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF250], MEMORY[0x1E0DEF268]);
  sub_1AD63B8B8();
  sub_1AD63B8B8();
  if (v13 != v12)
    return 0;
  v4 = *(int *)(_s5CodecVMa() + 20);
  v5 = (_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  v8 = v7[1];
  if (!v6)
  {
    if (!v8)
    {
LABEL_12:
      sub_1AD63BBE8();
      sub_1ACFF9724(&qword_1EECDAED0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF280], MEMORY[0x1E0DEF2A0]);
      sub_1AD63B8B8();
      sub_1AD63B8B8();
      return v13 == v12;
    }
    return 0;
  }
  if (!v8)
    return 0;
  if (*v5 == *v7 && v6 == v8)
    goto LABEL_12;
  v10 = sub_1AD63C2A8();
  result = 0;
  if ((v10 & 1) != 0)
    goto LABEL_12;
  return result;
}

uint64_t sub_1AD354AD8()
{
  return sub_1ACFF9724(&qword_1EECDAEA8, (uint64_t (*)(uint64_t))_s5CodecVMa, (uint64_t)&unk_1AD67B568);
}

unint64_t sub_1AD354B08()
{
  unint64_t result;

  result = qword_1EECDAEB0;
  if (!qword_1EECDAEB0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67B5D0, &_s4InfoVN);
    atomic_store(result, (unint64_t *)&qword_1EECDAEB0);
  }
  return result;
}

uint64_t *sub_1AD354B4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63BBD0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = sub_1AD63BBE8();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1AD354C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1AD63BBD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_1AD63BBE8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1AD354C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1AD63BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = sub_1AD63BBE8();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  return a1;
}

uint64_t sub_1AD354D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1AD63BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1AD63BBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1AD354DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1AD63BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1AD63BBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1AD354E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1AD63BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1AD63BBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_1AD354EE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD354EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_1AD63BBD0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_1AD63BBE8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v11);
  }
}

uint64_t sub_1AD354FAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD354FB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1AD63BBD0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
      return result;
    }
    v10 = sub_1AD63BBE8();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1AD355060()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1AD63BBD0();
  if (v1 <= 0x3F)
  {
    result = sub_1AD63BBE8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t _s4InfoVwCP(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4InfoVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4InfoVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s4InfoVMa()
{
  return &_s4InfoVN;
}

uint64_t sub_1AD3551A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1AD3551E8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD355218(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD355268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD3552E0@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *sub_1AD355338()
{
  return &unk_1E5CA9CF8;
}

uint64_t sub_1AD355344()
{
  char *v0;

  return *(_QWORD *)&aFqdn_3[8 * *v0];
}

uint64_t sub_1AD35535C(char *a1, char *a2)
{
  return sub_1AD4354C8(*a1, *a2);
}

uint64_t sub_1AD355368()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD3553C0()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD3553EC()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD355440@<X0>(char *a1@<X8>)
{
  return sub_1AD3552E0(a1);
}

void sub_1AD35544C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = *(_QWORD *)&aFqdn_3[8 * *v1];
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1AD355468()
{
  sub_1AD355994();
  return sub_1AD63B924();
}

uint64_t sub_1AD3554C4()
{
  sub_1AD355994();
  return sub_1AD63B8C4();
}

void sub_1AD355510(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5CA9E18;
}

uint64_t (*sub_1AD355524(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD34BDE0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD3555AC(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34BF10;
}

void sub_1AD355610(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *sub_1AD35561C(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*sub_1AD355628())()
{
  return nullsub_1;
}

uint64_t sub_1AD355638()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD355640(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_1AD355668())()
{
  return nullsub_1;
}

unint64_t sub_1AD35567C()
{
  unint64_t result;

  result = qword_1EECDAEE0;
  if (!qword_1EECDAEE0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67B65C, &type metadata for LBOPCSCFAddress.AddressType);
    atomic_store(result, (unint64_t *)&qword_1EECDAEE0);
  }
  return result;
}

unint64_t sub_1AD3556C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EECDAEE8;
  if (!qword_1EECDAEE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EECDAEF0);
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EECDAEE8);
  }
  return result;
}

uint64_t sub_1AD355710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28F244, (uint64_t (*)(void))sub_1AD28F288);
}

uint64_t sub_1AD355724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28E958, (uint64_t (*)(void))sub_1AD28EAB0);
}

uint64_t sub_1AD35573C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD355778@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t initializeWithCopy for LBOPCSCFAddress(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LBOPCSCFAddress(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for LBOPCSCFAddress(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for LBOPCSCFAddress()
{
  return &type metadata for LBOPCSCFAddress;
}

uint64_t storeEnumTagSinglePayload for LBOPCSCFAddress.AddressType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD355904 + 4 * byte_1AD67B655[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD355938 + 4 * asc_1AD67B650[v4]))();
}

uint64_t sub_1AD355938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD355940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD355948);
  return result;
}

uint64_t sub_1AD355954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD35595CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD355960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD355968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LBOPCSCFAddress.AddressType()
{
  return &type metadata for LBOPCSCFAddress.AddressType;
}

ValueMetadata *type metadata accessor for LBOPCSCFAddressCharacteristic()
{
  return &type metadata for LBOPCSCFAddressCharacteristic;
}

unint64_t sub_1AD355994()
{
  unint64_t result;

  result = qword_1EECDAEF8;
  if (!qword_1EECDAEF8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67B6C4, &type metadata for LBOPCSCFAddress.AddressType);
    atomic_store(result, (unint64_t *)&qword_1EECDAEF8);
  }
  return result;
}

uint64_t sub_1AD3559D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    sub_1AD63BDE0();
    v4 = a1 + 32;
    do
    {
      sub_1AD366AC8();
      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      v4 += 128;
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_1AD355AA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    sub_1AD63BDE0();
    v4 = a1 + 32;
    do
    {
      sub_1AD36E494();
      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      v4 += 128;
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_1AD355B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  int *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _QWORD v18[2];
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v18[1] = v1;
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1AD63BDE0();
    v8 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
    v9 = *((_QWORD *)v8 - 1);
    v10 = ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + a1 + 8;
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      v13 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPImageMetadata), sel_init);
      sub_1ACFF64C0(v10 + v8[5] - 8, (uint64_t)v5, &qword_1ED2E1A40);
      v14 = sub_1AD63AF28();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14) != 1)
      {
        v16 = (void *)sub_1AD63AE98();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v14);
      }
      objc_msgSend(v13, sel_setURL_, v16);

      if (*(_QWORD *)(v10 + v8[6]))
        v17 = (void *)sub_1AD63B744();
      else
        v17 = 0;
      objc_msgSend(v13, sel_setType_, v17);

      objc_msgSend(v13, sel_setSize_, *(double *)(v10 + v8[7] - 8), *(double *)(v10 + v8[7]));
      if (*(_QWORD *)(v10 + v8[8]))
        v12 = (void *)sub_1AD63B744();
      else
        v12 = 0;
      objc_msgSend(v13, sel_setAccessibilityText_, v12);

      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      v10 += v11;
      --v6;
    }
    while (v6);
    return v19;
  }
  return result;
}

uint64_t sub_1AD355DA8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[25];
  _OWORD v19[6];
  _OWORD v20[2];
  uint64_t v21;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1AD63BE34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
    return v4;
  v21 = MEMORY[0x1E0DEE9D8];
  result = sub_1AD1499B4(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v6 = 0;
    v4 = v21;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AF44AA40](v6, a1) : *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      sub_1AD35F3C0(v8, (uint64_t)v19);
      if (v1)
        break;

      v14 = v19[2];
      v15 = v19[3];
      *(_OWORD *)&v18[9] = *(_OWORD *)((char *)v20 + 9);
      v17 = v19[5];
      *(_OWORD *)v18 = v20[0];
      v16 = v19[4];
      v12 = v19[0];
      v13 = v19[1];
      v21 = v4;
      v10 = *(_QWORD *)(v4 + 16);
      v9 = *(_QWORD *)(v4 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1AD1499B4(v9 > 1, v10 + 1, 1);
        v4 = v21;
      }
      ++v6;
      *(_QWORD *)(v4 + 16) = v10 + 1;
      v11 = (_OWORD *)(v4 + (v10 << 7));
      v11[4] = v14;
      v11[5] = v15;
      v11[2] = v12;
      v11[3] = v13;
      *(_OWORD *)((char *)v11 + 137) = *(_OWORD *)&v18[9];
      v11[7] = v17;
      v11[8] = *(_OWORD *)v18;
      v11[6] = v16;
      if (v3 == v6)
        return v4;
    }
    swift_release();

    return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD355F58(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v16[8];
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1AD63BE34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1AD1499D0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v3 = v17;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1AF44AA40](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      sub_1AD36E1F4(v6, v16);
      v17 = v3;
      v8 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v3 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1AD1499D0(v7 > 1, v8 + 1, 1);
        v3 = v17;
      }
      ++v5;
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = (_OWORD *)(v3 + (v8 << 7));
      v10 = v16[0];
      v11 = v16[1];
      v12 = v16[3];
      v9[4] = v16[2];
      v9[5] = v12;
      v9[2] = v10;
      v9[3] = v11;
      v13 = v16[4];
      v14 = v16[5];
      v15 = v16[7];
      v9[8] = v16[6];
      v9[9] = v15;
      v9[6] = v13;
      v9[7] = v14;
    }
    while (v2 != v5);
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD3560B8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v0 = sub_1AD356B84();
  v2 = v1;
  v3 = sub_1AD63AFA0();
  sub_1AD00412C(v0, v2);
  return v3;
}

uint64_t sub_1AD3560FC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v0 = sub_1AD356B84();
  v2 = v1;
  v3 = sub_1AD63AFA0();
  sub_1AD00412C(v0, v2);
  return v3;
}

uint64_t sub_1AD356140(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1AD3CB6B4(0, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  if (v5 >= v4 >> 1)
    v3 = sub_1AD3CB6B4(v4 > 1, v5 + 1, 1, v3);
  *(_QWORD *)(v3 + 16) = v5 + 1;
  v6 = type metadata accessor for LinkPresentation.EncodedToken(0);
  result = sub_1AD2A5214(a1, v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v5, type metadata accessor for LinkPresentation.EncodedToken);
  *v1 = v3;
  return result;
}

void sub_1AD356208(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _BYTE v4[128];

  if (a1)
  {
    sub_1AD35F3C0(a1, a2);
    if (!v2)
      nullsub_1(a2);
  }
  else
  {
    sub_1AD36E9E4((uint64_t)v4);
    sub_1AD00FF28((uint64_t)v4, a2, &qword_1EECD1D20);
  }
}

uint64_t sub_1AD356278@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    result = sub_1AD360450(a1);
    if (!v2)
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 0, 1, v5);
    }
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 1, 1, v6);
  }
  return result;
}

uint64_t sub_1AD356304@<X0>(void *a1@<X0>, uint64_t (*a2)(void *)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  if (a1)
  {
    result = a2(a1);
    if (!v4)
    {
      v8 = ((uint64_t (*)(_QWORD))a3)(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a4, 0, 1, v8);
    }
  }
  else
  {
    v9 = a3();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a4, 1, 1, v9);
  }
  return result;
}

double sub_1AD356394@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  double result;

  if (a1)
  {
    sub_1AD36DF34(a1, (uint64_t)a2);
  }
  else
  {
    result = 0.0;
    *a2 = xmmword_1AD676DD0;
    a2[1] = 0u;
    a2[2] = 0u;
    *(_OWORD *)((char *)a2 + 41) = 0u;
  }
  return result;
}

uint64_t sub_1AD3563E8@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  _OWORD v4[8];

  if (a1)
  {
    sub_1AD36E1F4(a1, a2);
    return nullsub_1(a2);
  }
  else
  {
    sub_1AD36EAD8(v4);
    return sub_1AD00FF28((uint64_t)v4, (uint64_t)a2, &qword_1EECD1D28);
  }
}

uint64_t sub_1AD35644C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[2];
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC6D0);
    v2 = sub_1AD63BE58();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v31 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v30)
      goto LABEL_37;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v30)
        goto LABEL_37;
      v14 = *(_QWORD *)(v31 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v30)
          goto LABEL_37;
        v14 = *(_QWORD *)(v31 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v30)
            goto LABEL_37;
          v14 = *(_QWORD *)(v31 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = 16 * v12;
    v18 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = v18[1];
    v20 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v17);
    v21 = *v20;
    v22 = v20[1];
    *(_QWORD *)&v40[0] = *v18;
    *((_QWORD *)&v40[0] + 1) = v19;
    swift_bridgeObjectRetain();
    sub_1AD0040A0(v21, v22);
    swift_dynamicCast();
    swift_dynamicCast();
    v36 = v32;
    v37 = v33;
    v38 = v34;
    sub_1AD002F7C(&v35, v39);
    v32 = v36;
    v33 = v37;
    v34 = v38;
    sub_1AD002F7C(v39, v40);
    sub_1AD002F7C(v40, &v36);
    result = sub_1AD63BCF0();
    v23 = -1 << *(_BYTE *)(v2 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v6 + 8 * (v24 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v6 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v6 + 8 * v25);
      }
      while (v29 == -1);
      v9 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v32;
    *(_OWORD *)(v10 + 16) = v33;
    *(_QWORD *)(v10 + 32) = v34;
    result = (uint64_t)sub_1AD002F7C(&v36, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v30)
  {
LABEL_37:
    swift_release();
    sub_1AD36EAD0();
    return v2;
  }
  v14 = *(_QWORD *)(v31 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v30)
      goto LABEL_37;
    v14 = *(_QWORD *)(v31 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_1AD356808(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  unint64_t *v9;
  __objc2_class **v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  __objc2_class **v14;
  unint64_t *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  void *v24;
  id v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA5E0);
    v2 = (_QWORD *)sub_1AD63BE58();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v33 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v32 = (unint64_t)(63 - v3) >> 6;
  v6 = &v38;
  v7 = &v40;
  result = swift_bridgeObjectRetain();
  v34 = 0;
  v9 = &qword_1EECDB010;
  v10 = off_1E5C9CA50;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v34 + 1;
  if (__OFADD__(v34, 1))
    goto LABEL_35;
  if (v19 >= v32)
    goto LABEL_32;
  v20 = *(_QWORD *)(v33 + 8 * v19);
  v21 = v34 + 1;
  if (!v20)
  {
    v21 = v34 + 2;
    if (v34 + 2 >= v32)
      goto LABEL_32;
    v20 = *(_QWORD *)(v33 + 8 * v21);
    if (!v20)
    {
      v21 = v34 + 3;
      if (v34 + 3 >= v32)
        goto LABEL_32;
      v20 = *(_QWORD *)(v33 + 8 * v21);
      if (!v20)
      {
        v21 = v34 + 4;
        if (v34 + 4 >= v32)
          goto LABEL_32;
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          v22 = v34 + 5;
          if (v34 + 5 < v32)
          {
            v20 = *(_QWORD *)(v33 + 8 * v22);
            if (v20)
            {
              v21 = v34 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v32)
                break;
              v20 = *(_QWORD *)(v33 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1AD36EAD0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = v21;
  v35 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v34 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v24 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * i);
    v36 = *v23;
    v37 = v23[1];
    sub_1AD32F2CC(0, v9);
    swift_bridgeObjectRetain();
    v25 = v24;
    swift_dynamicCast();
    sub_1AD002F7C(v6, v7);
    sub_1AD002F7C(v7, v41);
    sub_1AD002F7C(v41, &v39);
    result = sub_1AD0DFB48(v36, v37);
    v26 = result;
    if ((v27 & 1) != 0)
    {
      v11 = v7;
      v12 = v6;
      v13 = v1;
      v14 = v10;
      v15 = v9;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v36;
      v16[1] = v37;
      v9 = v15;
      v10 = v14;
      v1 = v13;
      v6 = v12;
      v7 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v26);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      result = (unint64_t)sub_1AD002F7C(&v39, v17);
      v5 = v35;
      if (!v35)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v28 = (uint64_t *)(v2[6] + 16 * result);
    *v28 = v36;
    v28[1] = v37;
    result = (unint64_t)sub_1AD002F7C(&v39, (_OWORD *)(v2[7] + 32 * result));
    v29 = v2[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_34;
    v2[2] = v31;
    v5 = v35;
    if (!v35)
      goto LABEL_11;
LABEL_10:
    v35 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1AD356B84()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
  v1 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF00);
  objc_msgSend(v0, sel_setClassName_forClass_, v1, swift_getObjCClassFromMetadata());

  v2 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF08);
  objc_msgSend(v0, sel_setClassName_forClass_, v2, swift_getObjCClassFromMetadata());

  v3 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF10);
  objc_msgSend(v0, sel_setClassName_forClass_, v3, swift_getObjCClassFromMetadata());

  v4 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF18);
  objc_msgSend(v0, sel_setClassName_forClass_, v4, swift_getObjCClassFromMetadata());

  v5 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF20);
  objc_msgSend(v0, sel_setClassName_forClass_, v5, swift_getObjCClassFromMetadata());

  v6 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF28);
  objc_msgSend(v0, sel_setClassName_forClass_, v6, swift_getObjCClassFromMetadata());

  v7 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF30);
  objc_msgSend(v0, sel_setClassName_forClass_, v7, swift_getObjCClassFromMetadata());

  v8 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF38);
  objc_msgSend(v0, sel_setClassName_forClass_, v8, swift_getObjCClassFromMetadata());

  v9 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF40);
  objc_msgSend(v0, sel_setClassName_forClass_, v9, swift_getObjCClassFromMetadata());

  v10 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF48);
  objc_msgSend(v0, sel_setClassName_forClass_, v10, swift_getObjCClassFromMetadata());

  v11 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF50);
  objc_msgSend(v0, sel_setClassName_forClass_, v11, swift_getObjCClassFromMetadata());

  v12 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF58);
  objc_msgSend(v0, sel_setClassName_forClass_, v12, swift_getObjCClassFromMetadata());

  v13 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF60);
  objc_msgSend(v0, sel_setClassName_forClass_, v13, swift_getObjCClassFromMetadata());

  v14 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF68);
  objc_msgSend(v0, sel_setClassName_forClass_, v14, swift_getObjCClassFromMetadata());

  v15 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF70);
  objc_msgSend(v0, sel_setClassName_forClass_, v15, swift_getObjCClassFromMetadata());

  v16 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF78);
  objc_msgSend(v0, sel_setClassName_forClass_, v16, swift_getObjCClassFromMetadata());

  v17 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF80);
  objc_msgSend(v0, sel_setClassName_forClass_, v17, swift_getObjCClassFromMetadata());

  v18 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF88);
  objc_msgSend(v0, sel_setClassName_forClass_, v18, swift_getObjCClassFromMetadata());

  v19 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF90);
  objc_msgSend(v0, sel_setClassName_forClass_, v19, swift_getObjCClassFromMetadata());

  v20 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAF98);
  objc_msgSend(v0, sel_setClassName_forClass_, v20, swift_getObjCClassFromMetadata());

  v21 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFA0);
  objc_msgSend(v0, sel_setClassName_forClass_, v21, swift_getObjCClassFromMetadata());

  v22 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFA8);
  objc_msgSend(v0, sel_setClassName_forClass_, v22, swift_getObjCClassFromMetadata());

  v23 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFB0);
  objc_msgSend(v0, sel_setClassName_forClass_, v23, swift_getObjCClassFromMetadata());

  v24 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFB8);
  objc_msgSend(v0, sel_setClassName_forClass_, v24, swift_getObjCClassFromMetadata());

  v25 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFC0);
  objc_msgSend(v0, sel_setClassName_forClass_, v25, swift_getObjCClassFromMetadata());

  v26 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFC8);
  objc_msgSend(v0, sel_setClassName_forClass_, v26, swift_getObjCClassFromMetadata());

  v27 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFD0);
  objc_msgSend(v0, sel_setClassName_forClass_, v27, swift_getObjCClassFromMetadata());

  v28 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFD8);
  objc_msgSend(v0, sel_setClassName_forClass_, v28, swift_getObjCClassFromMetadata());

  v29 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFE0);
  objc_msgSend(v0, sel_setClassName_forClass_, v29, swift_getObjCClassFromMetadata());

  v30 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFE8);
  objc_msgSend(v0, sel_setClassName_forClass_, v30, swift_getObjCClassFromMetadata());

  v31 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFF0);
  objc_msgSend(v0, sel_setClassName_forClass_, v31, swift_getObjCClassFromMetadata());

  v32 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDAFF8);
  objc_msgSend(v0, sel_setClassName_forClass_, v32, swift_getObjCClassFromMetadata());

  v33 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB000);
  objc_msgSend(v0, sel_setClassName_forClass_, v33, swift_getObjCClassFromMetadata());

  v34 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB008);
  objc_msgSend(v0, sel_setClassName_forClass_, v34, swift_getObjCClassFromMetadata());

  v35 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB010);
  objc_msgSend(v0, sel_setClassName_forClass_, v35, swift_getObjCClassFromMetadata());

  v36 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB018);
  objc_msgSend(v0, sel_setClassName_forClass_, v36, swift_getObjCClassFromMetadata());

  v37 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB020);
  objc_msgSend(v0, sel_setClassName_forClass_, v37, swift_getObjCClassFromMetadata());

  v38 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB028);
  objc_msgSend(v0, sel_setClassName_forClass_, v38, swift_getObjCClassFromMetadata());

  v39 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB030);
  objc_msgSend(v0, sel_setClassName_forClass_, v39, swift_getObjCClassFromMetadata());

  v40 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB038);
  objc_msgSend(v0, sel_setClassName_forClass_, v40, swift_getObjCClassFromMetadata());

  v41 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB040);
  objc_msgSend(v0, sel_setClassName_forClass_, v41, swift_getObjCClassFromMetadata());

  v42 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB048);
  objc_msgSend(v0, sel_setClassName_forClass_, v42, swift_getObjCClassFromMetadata());

  v43 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB050);
  objc_msgSend(v0, sel_setClassName_forClass_, v43, swift_getObjCClassFromMetadata());

  v44 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB058);
  objc_msgSend(v0, sel_setClassName_forClass_, v44, swift_getObjCClassFromMetadata());

  v45 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB060);
  objc_msgSend(v0, sel_setClassName_forClass_, v45, swift_getObjCClassFromMetadata());

  v46 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB068);
  objc_msgSend(v0, sel_setClassName_forClass_, v46, swift_getObjCClassFromMetadata());

  v47 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB070);
  objc_msgSend(v0, sel_setClassName_forClass_, v47, swift_getObjCClassFromMetadata());

  v48 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB078);
  objc_msgSend(v0, sel_setClassName_forClass_, v48, swift_getObjCClassFromMetadata());

  v49 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB080);
  objc_msgSend(v0, sel_setClassName_forClass_, v49, swift_getObjCClassFromMetadata());

  v50 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB088);
  objc_msgSend(v0, sel_setClassName_forClass_, v50, swift_getObjCClassFromMetadata());

  v51 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB090);
  objc_msgSend(v0, sel_setClassName_forClass_, v51, swift_getObjCClassFromMetadata());

  v52 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB098);
  objc_msgSend(v0, sel_setClassName_forClass_, v52, swift_getObjCClassFromMetadata());

  v53 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB0A0);
  objc_msgSend(v0, sel_setClassName_forClass_, v53, swift_getObjCClassFromMetadata());

  v54 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB0A8);
  objc_msgSend(v0, sel_setClassName_forClass_, v54, swift_getObjCClassFromMetadata());

  v55 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB0B0);
  objc_msgSend(v0, sel_setClassName_forClass_, v55, swift_getObjCClassFromMetadata());

  v56 = sub_1AD357E30();
  objc_msgSend(v0, sel_encodeObject_forKey_, v56, *MEMORY[0x1E0CB2CD0]);

  v57 = objc_msgSend(v0, sel_encodedData);
  v58 = sub_1AD63AFB8();

  return v58;
}

id sub_1AD357E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPMessagesPayload), sel_init);
  sub_1ACFF64C0(v1, (uint64_t)v4, &qword_1EECD1CD0);
  v6 = type metadata accessor for LinkPresentation.LinkMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) == 1)
  {
    sub_1AD009758((uint64_t)v4, &qword_1EECD1CD0);
    v7 = 0;
  }
  else
  {
    v7 = sub_1AD35CEC4();
    sub_1AD066230((uint64_t)v4, type metadata accessor for LinkPresentation.LinkMetadata);
  }
  objc_msgSend(v5, sel_setMetadata_, v7);

  objc_msgSend(v5, sel_setPlaceholder_, *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for LinkPresentation.MessagesPayload(0) + 20)));
  return v5;
}

void sub_1AD357F54(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t ObjCClassFromMetadata;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  id v131;
  id v132;
  _DWORD *v133;
  unint64_t *v134;
  unint64_t *v135;
  id v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned __int8 v147;
  uint64_t v148;
  uint64_t v149;
  _DWORD *v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  id v160[4];
  id v161;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (_DWORD *)((char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  v11 = sub_1AD36E7D4();
  if (v3)
  {
    v160[0] = v3;
    v12 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
    sub_1AD32F2CC(0, (unint64_t *)&qword_1EECDB380);
    if ((swift_dynamicCast() & 1) != 0)
    {

      v13 = v161;
      sub_1AD0DDA60();
      swift_allocError();
      v15 = v14;
      v16 = v13;
      sub_1AD601B20(v16, 0xD000000000000020, 0x80000001AD6A81D0, v15);
      swift_willThrow();
      sub_1AD00412C(a1, a2);

    }
    else
    {

      sub_1AD0DDA60();
      swift_allocError();
      v135 = v134;
      v136 = v3;
      sub_1AD6015CC(v3, 0xD000000000000020, 0x80000001AD6A81D0, v135);
      swift_willThrow();
      sub_1AD00412C(a1, a2);

    }
    return;
  }
  v149 = a3;
  v150 = v9;
  v151 = a1;
  v152 = a2;
  v17 = v11;
  objc_msgSend(v17, sel__enableStrictSecureDecodingMode);
  objc_msgSend(v17, sel_setDecodingFailurePolicy_, 1);
  v159 = sub_1AD32F2CC(0, &qword_1EECDAF00);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v19 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, ObjCClassFromMetadata, v19);

  sub_1AD32F2CC(0, &qword_1EECDAF08);
  v20 = swift_getObjCClassFromMetadata();
  v153 = 0xD000000000000023;
  v21 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v20, v21);

  sub_1AD32F2CC(0, &qword_1EECDAF10);
  v22 = swift_getObjCClassFromMetadata();
  v23 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v22, v23);

  sub_1AD32F2CC(0, &qword_1EECDAF18);
  v24 = swift_getObjCClassFromMetadata();
  v25 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v24, v25);

  sub_1AD32F2CC(0, &qword_1EECDAF20);
  v26 = swift_getObjCClassFromMetadata();
  v27 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v26, v27);

  sub_1AD32F2CC(0, &qword_1EECDAF28);
  v28 = swift_getObjCClassFromMetadata();
  v29 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v28, v29);

  sub_1AD32F2CC(0, &qword_1EECDAF30);
  v30 = swift_getObjCClassFromMetadata();
  v31 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v30, v31);

  sub_1AD32F2CC(0, &qword_1EECDAF38);
  v32 = swift_getObjCClassFromMetadata();
  v33 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v32, v33);

  sub_1AD32F2CC(0, &qword_1EECDAF40);
  v34 = swift_getObjCClassFromMetadata();
  v155 = 0xD000000000000011;
  v35 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v34, v35);

  sub_1AD32F2CC(0, &qword_1EECDAF48);
  v36 = swift_getObjCClassFromMetadata();
  v37 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v36, v37);

  sub_1AD32F2CC(0, &qword_1EECDAF50);
  v38 = swift_getObjCClassFromMetadata();
  v39 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v38, v39);

  sub_1AD32F2CC(0, &qword_1EECDAF58);
  v40 = swift_getObjCClassFromMetadata();
  v41 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v40, v41);

  sub_1AD32F2CC(0, &qword_1EECDAF60);
  v42 = swift_getObjCClassFromMetadata();
  v43 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v42, v43);

  sub_1AD32F2CC(0, &qword_1EECDAF68);
  v44 = swift_getObjCClassFromMetadata();
  v45 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v44, v45);

  sub_1AD32F2CC(0, &qword_1EECDAF70);
  v46 = swift_getObjCClassFromMetadata();
  v156 = 0xD000000000000016;
  v47 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v46, v47);

  sub_1AD32F2CC(0, &qword_1EECDAF78);
  v48 = swift_getObjCClassFromMetadata();
  v49 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v48, v49);

  sub_1AD32F2CC(0, &qword_1EECDAF80);
  v50 = swift_getObjCClassFromMetadata();
  v158 = 0xD000000000000018;
  v51 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v50, v51);

  sub_1AD32F2CC(0, &qword_1EECDAF88);
  v52 = swift_getObjCClassFromMetadata();
  v154 = 0xD000000000000019;
  v53 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v52, v53);

  sub_1AD32F2CC(0, &qword_1EECDAF90);
  v54 = swift_getObjCClassFromMetadata();
  v55 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v54, v55);

  sub_1AD32F2CC(0, &qword_1EECDAF98);
  v56 = swift_getObjCClassFromMetadata();
  v57 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v56, v57);

  sub_1AD32F2CC(0, &qword_1EECDAFA0);
  v58 = swift_getObjCClassFromMetadata();
  v157 = 0xD00000000000001FLL;
  v59 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v58, v59);

  sub_1AD32F2CC(0, &qword_1EECDAFA8);
  v60 = swift_getObjCClassFromMetadata();
  v61 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v60, v61);

  sub_1AD32F2CC(0, &qword_1EECDAFB0);
  v62 = swift_getObjCClassFromMetadata();
  v63 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v62, v63);

  sub_1AD32F2CC(0, &qword_1EECDAFB8);
  v64 = swift_getObjCClassFromMetadata();
  v65 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v64, v65);

  sub_1AD32F2CC(0, &qword_1EECDAFC0);
  v66 = swift_getObjCClassFromMetadata();
  v67 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v66, v67);

  sub_1AD32F2CC(0, &qword_1EECDAFC8);
  v68 = swift_getObjCClassFromMetadata();
  v69 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v68, v69);

  sub_1AD32F2CC(0, &qword_1EECDAFD0);
  v70 = swift_getObjCClassFromMetadata();
  v71 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v70, v71);

  sub_1AD32F2CC(0, &qword_1EECDAFD8);
  v72 = swift_getObjCClassFromMetadata();
  v73 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v72, v73);

  sub_1AD32F2CC(0, &qword_1EECDAFE0);
  v74 = swift_getObjCClassFromMetadata();
  v75 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v74, v75);

  sub_1AD32F2CC(0, &qword_1EECDAFE8);
  v76 = swift_getObjCClassFromMetadata();
  v77 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v76, v77);

  sub_1AD32F2CC(0, &qword_1EECDAFF0);
  v78 = swift_getObjCClassFromMetadata();
  v79 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v78, v79);

  sub_1AD32F2CC(0, &qword_1EECDAFF8);
  v80 = swift_getObjCClassFromMetadata();
  v81 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v80, v81);

  sub_1AD32F2CC(0, &qword_1EECDB000);
  v82 = swift_getObjCClassFromMetadata();
  v83 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v82, v83);

  sub_1AD32F2CC(0, &qword_1EECDB008);
  v84 = swift_getObjCClassFromMetadata();
  v85 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v84, v85);

  sub_1AD32F2CC(0, &qword_1EECDB010);
  v86 = swift_getObjCClassFromMetadata();
  v87 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v86, v87);

  sub_1AD32F2CC(0, &qword_1EECDB018);
  v88 = swift_getObjCClassFromMetadata();
  v89 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v88, v89);

  sub_1AD32F2CC(0, &qword_1EECDB020);
  v90 = swift_getObjCClassFromMetadata();
  v91 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v90, v91);

  sub_1AD32F2CC(0, &qword_1EECDB028);
  v92 = swift_getObjCClassFromMetadata();
  v93 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v92, v93);

  sub_1AD32F2CC(0, &qword_1EECDB030);
  v94 = swift_getObjCClassFromMetadata();
  v95 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v94, v95);

  sub_1AD32F2CC(0, &qword_1EECDB038);
  v96 = swift_getObjCClassFromMetadata();
  v97 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v96, v97);

  sub_1AD32F2CC(0, &qword_1EECDB040);
  v98 = swift_getObjCClassFromMetadata();
  v99 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v98, v99);

  sub_1AD32F2CC(0, &qword_1EECDB048);
  v100 = swift_getObjCClassFromMetadata();
  v101 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v100, v101);

  sub_1AD32F2CC(0, &qword_1EECDB050);
  v102 = swift_getObjCClassFromMetadata();
  v103 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v102, v103);

  sub_1AD32F2CC(0, &qword_1EECDB058);
  v104 = swift_getObjCClassFromMetadata();
  v105 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v104, v105);

  sub_1AD32F2CC(0, &qword_1EECDB060);
  v106 = swift_getObjCClassFromMetadata();
  v107 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v106, v107);

  sub_1AD32F2CC(0, &qword_1EECDB068);
  v108 = swift_getObjCClassFromMetadata();
  v109 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v108, v109);

  sub_1AD32F2CC(0, &qword_1EECDB070);
  v110 = swift_getObjCClassFromMetadata();
  v111 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v110, v111);

  sub_1AD32F2CC(0, &qword_1EECDB078);
  v112 = swift_getObjCClassFromMetadata();
  v113 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v112, v113);

  sub_1AD32F2CC(0, &qword_1EECDB080);
  v114 = swift_getObjCClassFromMetadata();
  v115 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v114, v115);

  sub_1AD32F2CC(0, &qword_1EECDB088);
  v116 = swift_getObjCClassFromMetadata();
  v117 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v116, v117);

  sub_1AD32F2CC(0, &qword_1EECDB090);
  v118 = swift_getObjCClassFromMetadata();
  v119 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v118, v119);

  sub_1AD32F2CC(0, &qword_1EECDB098);
  v120 = swift_getObjCClassFromMetadata();
  v121 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v120, v121);

  sub_1AD32F2CC(0, &qword_1EECDB0A0);
  v122 = swift_getObjCClassFromMetadata();
  v123 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v122, v123);

  sub_1AD32F2CC(0, &qword_1EECDB0A8);
  v124 = swift_getObjCClassFromMetadata();
  v125 = (void *)sub_1AD63B744();
  objc_msgSend(v17, sel_setClass_forClassName_, v124, v125);

  sub_1AD32F2CC(0, &qword_1EECDB0B0);
  v126 = swift_getObjCClassFromMetadata();
  v127 = (void *)sub_1AD63B744();
  v128 = v159;
  objc_msgSend(v17, sel_setClass_forClassName_, v126, v127);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB0B8);
  v129 = swift_allocObject();
  *(_OWORD *)(v129 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v129 + 32) = v128;
  sub_1AD63B768();
  sub_1AD63BC24();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v160[3])
  {
    sub_1AD009758((uint64_t)v160, &qword_1EECDC5F0);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v138 = v151;
    v137 = v152;
    v139 = sub_1AD63BD8C();
    swift_allocError();
    v141 = v140;
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v139 - 8) + 104))(v141, *MEMORY[0x1E0DEC458], v139);
    swift_willThrow();
    sub_1AD00412C(v138, v137);

    return;
  }
  v130 = v161;
  v131 = objc_msgSend(v161, sel_metadata);
  if (v131)
  {
    v132 = v131;
    v133 = v150;
    sub_1AD3596D8(v132, v150);
    v143 = type metadata accessor for LinkPresentation.LinkMetadata(0);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v133, 0, 1, v143);

  }
  else
  {
    v142 = type metadata accessor for LinkPresentation.LinkMetadata(0);
    v133 = v150;
    (*(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 56))(v150, 1, 1, v142);
  }
  v145 = v151;
  v144 = v152;
  v146 = v149;
  v147 = objc_msgSend(v130, sel_isPlaceholder);

  sub_1AD00FF28((uint64_t)v133, v146, &qword_1EECD1CD0);
  sub_1AD00412C(v145, v144);

  *(_BYTE *)(v146 + *(int *)(type metadata accessor for LinkPresentation.MessagesPayload(0) + 20)) = v147;
}

void sub_1AD3596D8(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  uint64_t v90;
  id v91;
  void *v92;
  uint64_t v93;
  id v94;
  void *v95;
  uint64_t v96;
  id v97;
  void *v98;
  uint64_t v99;
  id v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  void *v105;
  uint64_t v106;
  id v107;
  void *v108;
  unint64_t v109;
  uint64_t v110;
  id v111;
  void *v112;
  uint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  id v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  id v130;
  void *v131;
  uint64_t v132;
  id v133;
  id v134;
  uint64_t v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  id v152;
  void *v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id i;
  id v166;
  uint64_t v167;
  unint64_t v168;
  _OWORD *v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  id v176;
  id v177;
  uint64_t v178;
  id v179;
  void *v180;
  unint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  id j;
  id v186;
  uint64_t v187;
  unint64_t v188;
  _OWORD *v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  id v196;
  void *v197;
  id v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  id v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  id v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  id v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  id v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  id v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  id v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void (*v236)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v237;
  _QWORD *v238;
  _QWORD *v239;
  id v240;
  void *v241;
  uint64_t v242;
  id v243;
  void *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unsigned int v248;
  id v249;
  void *v250;
  uint64_t v251;
  uint64_t v252;
  _DWORD *v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t *v257;
  unint64_t v258;
  unint64_t v259;
  id v260;
  void *v261;
  unint64_t v262;
  uint64_t v263;
  id v264;
  void *v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  void (*v270)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v271;
  _QWORD *v272;
  id v273;
  id v274;
  void *v275;
  unint64_t v276;
  unint64_t v277;
  id v278;
  void *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t *v285;
  uint64_t v286;
  unint64_t v287;
  _DWORD *v288;
  unint64_t v289;
  unint64_t v290;
  id v291;
  void *v292;
  uint64_t v293;
  id v294;
  id v295;
  uint64_t v296;
  unint64_t v297;
  unint64_t v298;
  id v299;
  void *v300;
  unint64_t v301;
  id v302;
  id v303;
  uint64_t v304;
  unint64_t v305;
  unint64_t v306;
  id v307;
  void *v308;
  unint64_t v309;
  id v310;
  id v311;
  uint64_t v312;
  unint64_t v313;
  unint64_t v314;
  id v315;
  void *v316;
  uint64_t v317;
  id v318;
  id v319;
  uint64_t v320;
  unint64_t v321;
  unint64_t v322;
  _QWORD *v323;
  uint64_t v324;
  uint64_t v325;
  unint64_t v326;
  id v327;
  void *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  void (*v332)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v333;
  _QWORD *v334;
  _QWORD *v335;
  id v336;
  unsigned int v337;
  id v338;
  void *v339;
  uint64_t v340;
  id v341;
  void *v342;
  uint64_t v343;
  id v344;
  void *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  unsigned int *v349;
  uint64_t v350;
  uint64_t *v351;
  uint64_t v352;
  uint64_t *v353;
  uint64_t v354;
  unint64_t v355;
  unint64_t v356;
  unint64_t v357;
  unint64_t v358;
  BOOL v359;
  uint64_t v360;
  id v361;
  id v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  int v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  BOOL v373;
  uint64_t v374;
  uint64_t v375;
  unint64_t v376;
  void *v377;
  uint64_t v378;
  unint64_t v379;
  uint64_t v380;
  unint64_t v381;
  unsigned int v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  _QWORD *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  __int128 v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  id v406;
  unsigned int v407;
  int v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  _DWORD *v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  unsigned int *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  _DWORD *v430;
  unint64_t v431;
  unint64_t v432;
  uint64_t v433;
  unint64_t v434;
  uint64_t v435;
  uint64_t v436;
  char *v437;
  char *v438;
  uint64_t v439;
  _QWORD *v440;
  _QWORD *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  char *v451;
  uint64_t v452;
  uint64_t v453;
  unint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  _OWORD v465[5];
  _QWORD v466[16];
  __int128 v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  __int128 v471;
  __int128 v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  __int128 v476;
  _OWORD v477[2];
  __int128 v478;
  uint64_t v479;
  uint64_t v480;
  BOOL v481;
  uint64_t v482[16];
  _BYTE v483[128];
  __int128 v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488[16];
  _BYTE v489[128];
  uint64_t v490[23];
  _BYTE v491[200];
  uint64_t v492;

  v413 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB0C0);
  MEMORY[0x1E0C80A78](v3);
  v414 = (char *)&v375 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v410 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
  v438 = *(char **)(v410 - 8);
  MEMORY[0x1E0C80A78](v410);
  v412 = (uint64_t)&v375 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v427 = type metadata accessor for LinkPresentation.AudioMetadata(0);
  v420 = *(_QWORD *)(v427 - 8);
  v6 = MEMORY[0x1E0C80A78](v427);
  v418 = (unsigned int *)((char *)&v375 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v419 = (uint64_t)&v375 - v8;
  v416 = type metadata accessor for LinkPresentation.VideoMetadata(0);
  v424 = *(char **)(v416 - 8);
  v9 = MEMORY[0x1E0C80A78](v416);
  v421 = (uint64_t)&v375 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v423 = (uint64_t)&v375 - v11;
  v454 = type metadata accessor for LinkPresentation.IconMetadata(0);
  v12 = *(_QWORD *)(v454 - 8);
  v13 = MEMORY[0x1E0C80A78](v454);
  v15 = (char *)&v375 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v436 = (uint64_t)&v375 - v17;
  MEMORY[0x1E0C80A78](v16);
  v435 = (uint64_t)&v375 - v18;
  v440 = (_QWORD *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
  v439 = *(v440 - 1);
  v19 = MEMORY[0x1E0C80A78](v440);
  v430 = (_DWORD *)((char *)&v375 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v19);
  v432 = (unint64_t)&v375 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
  MEMORY[0x1E0C80A78](v22);
  v415 = (uint64_t)&v375 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
  MEMORY[0x1E0C80A78](v24);
  v417 = (uint64_t)&v375 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
  MEMORY[0x1E0C80A78](v26);
  v422 = (uint64_t)&v375 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
  MEMORY[0x1E0C80A78](v28);
  v429 = (uint64_t)&v375 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v428 = type metadata accessor for LinkPresentation.ImageMetadata(0);
  v441 = *(_QWORD **)(v428 - 8);
  v30 = MEMORY[0x1E0C80A78](v428);
  v425 = (char *)&v375 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v431 = (unint64_t)&v375 - v33;
  MEMORY[0x1E0C80A78](v32);
  v453 = (uint64_t)&v375 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v375 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
  MEMORY[0x1E0C80A78](v38);
  v452 = (uint64_t)&v375 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
  MEMORY[0x1E0C80A78](v40);
  v456 = (uint64_t)&v375 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v43 = MEMORY[0x1E0C80A78](v42);
  v426 = (uint64_t)&v375 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x1E0C80A78](v43);
  v434 = (unint64_t)&v375 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v433 = (uint64_t)&v375 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v458 = (uint64_t)&v375 - v50;
  v51 = MEMORY[0x1E0C80A78](v49);
  v53 = (uint64_t)&v375 - v52;
  MEMORY[0x1E0C80A78](v51);
  v457 = (uint64_t)&v375 - v54;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
  v56 = MEMORY[0x1E0C80A78](v55);
  v411 = (uint64_t)&v375 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = MEMORY[0x1E0C80A78](v56);
  v60 = (uint64_t *)((char *)&v375 - v59);
  MEMORY[0x1E0C80A78](v58);
  v62 = (char *)&v375 - v61;
  v63 = objc_msgSend(a1, sel_associatedApplication);
  if (v63)
  {
    v409 = v15;
    v64 = v53;
    v65 = v12;
    v66 = v62;
    v67 = v37;
    v68 = v63;
    v69 = v492;
    sub_1AD35F1B0(v68, (uint64_t)v491);
    v492 = v69;
    if (v69)
    {

      return;
    }
    nullsub_1(v491);

    v37 = v67;
    v62 = v66;
    v12 = v65;
    v53 = v64;
    v15 = v409;
  }
  else
  {
    sub_1AD36E9B8((uint64_t)v490);
    sub_1AD00FF28((uint64_t)v490, (uint64_t)v491, &qword_1EECD20E0);
  }
  v437 = v37;
  sub_1AD00FF28((uint64_t)v491, (uint64_t)v490, &qword_1EECD20E0);
  v70 = objc_msgSend(a1, sel_collaborationMetadata);
  if (v70)
  {
    v71 = v70;
    sub_1AD420BFC(v71, v60);
    v72 = type metadata accessor for CollaborationMetadata();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v60, 0, 1, v72);

  }
  else
  {
    v73 = type metadata accessor for CollaborationMetadata();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v60, 1, 1, v73);
  }
  v74 = v458;
  sub_1AD00FF28((uint64_t)v60, (uint64_t)v62, &qword_1EECD1CC8);
  v408 = objc_msgSend(a1, sel_version);
  v75 = objc_msgSend(a1, sel_originalURL);
  if (v75)
  {
    v76 = v75;
    v77 = v457;
    sub_1AD63AED4();

    v78 = sub_1AD63AF28();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
  }
  else
  {
    v79 = sub_1AD63AF28();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v457, 1, 1, v79);
  }
  v80 = objc_msgSend(a1, "URL");
  if (v80)
  {
    v81 = v80;
    sub_1AD63AED4();

    v82 = sub_1AD63AF28();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v53, 0, 1, v82);
  }
  else
  {
    v83 = sub_1AD63AF28();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v53, 1, 1, v83);
  }
  v451 = v62;
  v84 = objc_msgSend(a1, sel_title);
  if (v84)
  {
    v85 = v84;
    v405 = sub_1AD63B768();
    v87 = v86;

  }
  else
  {
    v405 = 0;
    v87 = 0;
  }
  v88 = objc_msgSend(a1, sel_summary);
  if (v88)
  {
    v89 = v88;
    v404 = sub_1AD63B768();
    v450 = v90;

  }
  else
  {
    v404 = 0;
    v450 = 0;
  }
  v91 = objc_msgSend(a1, sel_selectedText);
  if (v91)
  {
    v92 = v91;
    v403 = sub_1AD63B768();
    v455 = v93;

  }
  else
  {
    v403 = 0;
    v455 = 0;
  }
  v94 = objc_msgSend(a1, sel_siteName);
  if (v94)
  {
    v95 = v94;
    v402 = sub_1AD63B768();
    v449 = v96;

  }
  else
  {
    v402 = 0;
    v449 = 0;
  }
  v97 = objc_msgSend(a1, sel_itemType);
  if (v97)
  {
    v98 = v97;
    v401 = sub_1AD63B768();
    v448 = v99;

  }
  else
  {
    v401 = 0;
    v448 = 0;
  }
  v100 = objc_msgSend(a1, sel_relatedURL);
  if (v100)
  {
    v101 = v100;
    sub_1AD63AED4();

    v102 = sub_1AD63AF28();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v74, 0, 1, v102);
  }
  else
  {
    v103 = sub_1AD63AF28();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v74, 1, 1, v103);
  }
  v104 = objc_msgSend(a1, sel_creator);
  if (v104)
  {
    v105 = v104;
    v400 = sub_1AD63B768();
    v447 = v106;

  }
  else
  {
    v400 = 0;
    v447 = 0;
  }
  v107 = objc_msgSend(a1, sel_creatorFacebookProfile);
  if (v107)
  {
    v108 = v107;
    v109 = sub_1AD63B768();
    v446 = v110;

  }
  else
  {
    v109 = 0;
    v446 = 0;
  }
  v111 = objc_msgSend(a1, sel_creatorTwitterUsername);
  if (v111)
  {
    v112 = v111;
    v399 = sub_1AD63B768();
    v445 = v113;

  }
  else
  {
    v399 = 0;
    v445 = 0;
  }
  v114 = objc_msgSend(a1, sel_twitterCard);
  if (v114)
  {
    v115 = v114;
    v398 = sub_1AD63B768();
    v444 = v116;

  }
  else
  {
    v398 = 0;
    v444 = 0;
  }
  v407 = objc_msgSend(a1, sel_usesActivityPub);
  v117 = objc_msgSend(a1, sel_themeColor);
  v406 = v117;
  if (v117)
  {
    v118 = v117;
    objc_msgSend(v117, "r");
    v120 = v119;
    objc_msgSend(v118, "g");
    v122 = v121;
    objc_msgSend(v118, "b");
    v124 = v123;
    objc_msgSend(v118, "a");
    v126 = v125;

  }
  else
  {
    v120 = 0;
    v122 = 0;
    v124 = 0;
    v126 = 0;
  }
  v127 = objc_msgSend(a1, sel_appleContentID);
  if (v127)
  {
    v128 = v127;
    v397 = sub_1AD63B768();
    v443 = v129;

  }
  else
  {
    v397 = 0;
    v443 = 0;
  }
  v130 = objc_msgSend(a1, sel_appleSummary);
  if (v130)
  {
    v131 = v130;
    v396 = sub_1AD63B768();
    v442 = v132;

  }
  else
  {
    v396 = 0;
    v442 = 0;
  }
  v133 = objc_msgSend(a1, sel_icon);
  if (v133)
  {
    v134 = v133;
    v135 = v492;
    sub_1AD35F3C0(v134, (uint64_t)v489);
    v492 = v135;
    if (v135)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_67:
      v143 = v74;
LABEL_168:
      sub_1AD009758(v143, &qword_1ED2E1A40);
      v225 = v53;
LABEL_169:
      sub_1AD009758(v225, &qword_1ED2E1A40);
      sub_1AD009758(v457, &qword_1ED2E1A40);
      sub_1AD009758((uint64_t)v451, &qword_1EECD1CC8);
      return;
    }
    nullsub_1(v489);

  }
  else
  {
    sub_1AD36E9E4((uint64_t)&v459);
    sub_1AD00FF28((uint64_t)&v459, (uint64_t)v489, &qword_1EECD1D20);
  }
  sub_1AD00FF28((uint64_t)v489, (uint64_t)v488, &qword_1EECD1D20);
  v136 = objc_msgSend(a1, sel_iconMetadata);
  if (v136)
  {
    v137 = v136;
    v138 = v456;
    v139 = v492;
    sub_1AD35F764(v137, v456);
    v492 = v139;
    if (v139)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_167:
      sub_1AD29594C(v488);
      v143 = v458;
      goto LABEL_168;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, unint64_t))(v12 + 56))(v138, 0, 1, v454);

    v74 = v458;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v12 + 56))(v456, 1, 1, v454);
  }
  v140 = objc_msgSend(a1, sel_arAsset);
  if (v140)
  {
    v141 = v140;
    v142 = v492;
    sub_1AD35F960(v141, &v484);
    v492 = v142;
    if (v142)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AD009758(v456, &qword_1EECD1C80);
      sub_1AD29594C(v488);
      goto LABEL_67;
    }

    v390 = v484;
    v391 = v485;
    v392 = v486;
    v393 = v487;
  }
  else
  {
    v392 = 0;
    v393 = 0;
    v390 = 0uLL;
    v484 = 0uLL;
    v487 = 0;
    v391 = 1;
    v485 = 1;
    v486 = 0;
  }
  v144 = objc_msgSend(a1, sel_arAssetMetadata);
  if (v144)
  {
    v145 = v144;
    v146 = v452;
    v147 = v492;
    sub_1AD3601F0(v145, type metadata accessor for LinkPresentation.ARAssetMetadata, v452);
    v492 = v147;
    if (v147)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_166:
      sub_1AD295A28(v390, *((uint64_t *)&v390 + 1), v391);
      sub_1AD009758(v456, &qword_1EECD1C80);
      goto LABEL_167;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(v439 + 56))(v146, 0, 1, v440);

  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v439 + 56))(v452, 1, 1, v440);
  }
  v148 = objc_msgSend(a1, sel_image);
  v149 = (uint64_t)v437;
  if (v148)
  {
    v150 = v148;
    v151 = v492;
    sub_1AD35F3C0(v150, (uint64_t)v483);
    v492 = v151;
    if (v151)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_165:
      sub_1AD009758(v452, &qword_1EECD1C88);
      goto LABEL_166;
    }
    nullsub_1(v483);

  }
  else
  {
    sub_1AD36E9E4((uint64_t)&v459);
    sub_1AD00FF28((uint64_t)&v459, (uint64_t)v483, &qword_1EECD1D20);
  }
  sub_1AD00FF28((uint64_t)v483, (uint64_t)v482, &qword_1EECD1D20);
  v152 = objc_msgSend(a1, sel_alternateImages);
  v395 = v53;
  v389 = v87;
  v381 = v109;
  if (!v152)
  {
    v387 = 0;
    goto LABEL_98;
  }
  v153 = v152;
  sub_1AD32F2CC(0, &qword_1EECDAF30);
  v154 = sub_1AD63B9B4();

  v155 = v154;
  if (v154 >> 62)
  {
    swift_bridgeObjectRetain();
    v156 = sub_1AD63BE34();
    swift_bridgeObjectRelease();
    if (v156)
      goto LABEL_83;
LABEL_97:
    swift_bridgeObjectRelease();
    v387 = MEMORY[0x1E0DEE9D8];
    v149 = (uint64_t)v437;
    goto LABEL_98;
  }
  v156 = *(_QWORD *)((v154 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v156)
    goto LABEL_97;
LABEL_83:
  v394 = v155;
  v409 = v15;
  v388 = v12;
  v466[0] = MEMORY[0x1E0DEE9D8];
  v157 = v466;
  sub_1AD1499B4(0, v156 & ~(v156 >> 63), 0);
  if (v156 < 0)
  {
    __break(1u);
    goto LABEL_120;
  }
  v158 = v492;
  v159 = 0;
  v160 = v394;
  v161 = v394 & 0xC000000000000001;
  v162 = v156 - 1;
  v163 = v458;
  v164 = v466[0];
  if ((v394 & 0xC000000000000001) == 0)
    goto LABEL_86;
LABEL_85:
  for (i = (id)MEMORY[0x1AF44AA40](v159); ; i = *(id *)(v160 + 8 * v159 + 32))
  {
    v166 = i;
    sub_1AD35F3C0(v166, (uint64_t)&v459);
    if (v158)
    {
      swift_release();

      sub_1AD296050(v490);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AD29594C(v482);
      sub_1AD009758(v452, &qword_1EECD1C88);
      sub_1AD295A28(v390, *((uint64_t *)&v390 + 1), v391);
      sub_1AD009758(v456, &qword_1EECD1C80);
      sub_1AD29594C(v488);
      sub_1AD009758(v163, &qword_1ED2E1A40);
      sub_1AD009758(v395, &qword_1ED2E1A40);
      sub_1AD009758(v457, &qword_1ED2E1A40);
      sub_1AD009758((uint64_t)v451, &qword_1EECD1CC8);
      v492 = v158;
      return;
    }

    v474 = v462;
    v473 = v461;
    *(_OWORD *)((char *)v477 + 9) = *(_OWORD *)((char *)v465 + 9);
    v477[0] = v465[0];
    v476 = v464;
    v475 = v463;
    v472 = v460;
    v471 = v459;
    v167 = v164;
    v466[0] = v164;
    v109 = *(_QWORD *)(v164 + 16);
    v168 = *(_QWORD *)(v167 + 24);
    if (v109 >= v168 >> 1)
    {
      sub_1AD1499B4(v168 > 1, v109 + 1, 1);
      v167 = v466[0];
    }
    *(_QWORD *)(v167 + 16) = v109 + 1;
    v169 = (_OWORD *)(v167 + (v109 << 7));
    v170 = v471;
    v171 = v472;
    v172 = v474;
    v169[4] = v473;
    v169[5] = v172;
    v169[2] = v170;
    v169[3] = v171;
    v173 = v475;
    v174 = v476;
    v175 = v477[0];
    *(_OWORD *)((char *)v169 + 137) = *(_OWORD *)((char *)v477 + 9);
    v169[7] = v174;
    v169[8] = v175;
    v169[6] = v173;
    if (v162 == v159)
      break;
    ++v159;
    v163 = v458;
    v160 = v394;
    v164 = v167;
    if (v161)
      goto LABEL_85;
LABEL_86:
    ;
  }
  v387 = v167;
  swift_bridgeObjectRelease();
  v492 = 0;
  v53 = v395;
  v149 = (uint64_t)v437;
  v12 = v388;
  v87 = v389;
  v15 = v409;
LABEL_98:
  v176 = objc_msgSend(a1, sel_imageMetadata);
  if (v176)
  {
    v177 = v176;
    v178 = v492;
    sub_1AD35FE10(v177, type metadata accessor for LinkPresentation.ImageMetadata, v149);
    v492 = v178;
    if (v178)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_164:
      sub_1AD29594C(v482);
      goto LABEL_165;
    }
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v441[7])(v149, 0, 1, v428);

  }
  else
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v441[7])(v149, 1, 1, v428);
  }
  v179 = objc_msgSend(a1, sel_contentImages);
  v388 = v12;
  if (!v179)
  {
    v380 = 0;
    goto LABEL_122;
  }
  v180 = v179;
  sub_1AD32F2CC(0, &qword_1EECDAF30);
  v181 = sub_1AD63B9B4();

  v157 = (_QWORD *)v181;
  if (!(v181 >> 62))
  {
    v149 = *(_QWORD *)((v181 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v149)
      goto LABEL_106;
LABEL_121:
    swift_bridgeObjectRelease();
    v380 = MEMORY[0x1E0DEE9D8];
    v149 = (uint64_t)v437;
    goto LABEL_122;
  }
LABEL_120:
  swift_bridgeObjectRetain();
  v149 = sub_1AD63BE34();
  swift_bridgeObjectRelease();
  if (!v149)
    goto LABEL_121;
LABEL_106:
  v428 = (uint64_t)v157;
  v409 = v15;
  v466[0] = MEMORY[0x1E0DEE9D8];
  sub_1AD1499B4(0, v149 & ~(v149 >> 63), 0);
  if (v149 < 0)
    goto LABEL_196;
  v12 = 0;
  v182 = v428;
  v183 = v428 & 0xC000000000000001;
  v184 = v466[0];
  v394 = v149 - 1;
  v149 = (uint64_t)v437;
  if ((v428 & 0xC000000000000001) == 0)
    goto LABEL_109;
LABEL_108:
  for (j = (id)MEMORY[0x1AF44AA40](v12); ; j = *(id *)(v182 + 8 * v12 + 32))
  {
    v186 = j;
    v187 = v492;
    sub_1AD35F3C0(v186, (uint64_t)&v459);
    v492 = v187;
    if (v187)
    {
      swift_release();

      sub_1AD296050(v490);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_144;
    }

    v474 = v462;
    v473 = v461;
    *(_OWORD *)((char *)v477 + 9) = *(_OWORD *)((char *)v465 + 9);
    v477[0] = v465[0];
    v476 = v464;
    v475 = v463;
    v472 = v460;
    v471 = v459;
    v466[0] = v184;
    v109 = *(_QWORD *)(v184 + 16);
    v188 = *(_QWORD *)(v184 + 24);
    if (v109 >= v188 >> 1)
    {
      sub_1AD1499B4(v188 > 1, v109 + 1, 1);
      v184 = v466[0];
    }
    *(_QWORD *)(v184 + 16) = v109 + 1;
    v189 = (_OWORD *)(v184 + (v109 << 7));
    v190 = v471;
    v191 = v472;
    v192 = v474;
    v189[4] = v473;
    v189[5] = v192;
    v189[2] = v190;
    v189[3] = v191;
    v193 = v475;
    v194 = v476;
    v195 = v477[0];
    *(_OWORD *)((char *)v189 + 137) = *(_OWORD *)((char *)v477 + 9);
    v189[7] = v194;
    v189[8] = v195;
    v189[6] = v193;
    if (v394 == v12)
      break;
    ++v12;
    v53 = v395;
    v149 = (uint64_t)v437;
    v182 = v428;
    if (v183)
      goto LABEL_108;
LABEL_109:
    ;
  }
  v380 = v184;
  swift_bridgeObjectRelease();
  v53 = v395;
  v149 = (uint64_t)v437;
  v87 = v389;
  v15 = v409;
LABEL_122:
  v196 = objc_msgSend(a1, sel_contentImagesMetadata);
  if (v196)
  {
    v197 = v196;
    sub_1AD32F2CC(0, &qword_1EECDAF48);
    v109 = sub_1AD63B9B4();

    if (v109 >> 62)
      goto LABEL_139;
    v12 = *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v12)
    {
      v409 = v15;
      *(_QWORD *)&v459 = MEMORY[0x1E0DEE9D8];
      sub_1AD149988(0, v12 & ~(v12 >> 63), 0);
      if (v12 < 0)
        goto LABEL_197;
      v87 = 0;
      v428 = v459;
      v15 = (char *)(v109 & 0xC000000000000001);
      while (v12 != v87)
      {
        if (v15)
          v198 = (id)MEMORY[0x1AF44AA40](v87, v109);
        else
          v198 = *(id *)(v109 + 8 * v87 + 32);
        v199 = v198;
        v200 = v492;
        sub_1AD35FE10(v199, type metadata accessor for LinkPresentation.ImageMetadata, v453);
        v492 = v200;
        if (v200)
        {
          swift_release();

          sub_1AD296050(v490);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_144;
        }

        v201 = v428;
        *(_QWORD *)&v459 = v428;
        v203 = *(_QWORD *)(v428 + 16);
        v202 = *(_QWORD *)(v428 + 24);
        if (v203 >= v202 >> 1)
        {
          sub_1AD149988(v202 > 1, v203 + 1, 1);
          v201 = v459;
        }
        ++v87;
        *(_QWORD *)(v201 + 16) = v203 + 1;
        v204 = (*((unsigned __int8 *)v441 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v441 + 80);
        v428 = v201;
        sub_1AD2A5214(v453, v201 + v204 + v441[9] * v203, type metadata accessor for LinkPresentation.ImageMetadata);
        v53 = v395;
        v149 = (uint64_t)v437;
        if (v12 == v87)
        {
          swift_bridgeObjectRelease();
          v87 = v389;
          v15 = v409;
          goto LABEL_141;
        }
      }
      __break(1u);
LABEL_139:
      swift_bridgeObjectRetain();
      v12 = sub_1AD63BE34();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v428 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v428 = 0;
  }
LABEL_141:
  v205 = objc_msgSend(a1, sel_video);
  if (v205)
  {
    v206 = v205;
    v207 = v429;
    v208 = v492;
    sub_1AD35FB00(v206, v429);
    v492 = v208;
    if (v208)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_144:
      swift_bridgeObjectRelease();
      goto LABEL_163;
    }
    v210 = type metadata accessor for LinkPresentation.Video(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v210 - 8) + 56))(v207, 0, 1, v210);

    v87 = v389;
  }
  else
  {
    v209 = type metadata accessor for LinkPresentation.Video(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 56))(v429, 1, 1, v209);
  }
  v211 = objc_msgSend(a1, sel_videoMetadata);
  if (v211)
  {
    v212 = v211;
    v213 = v422;
    v214 = v492;
    sub_1AD35FE10(v212, type metadata accessor for LinkPresentation.VideoMetadata, v422);
    v492 = v214;
    if (v214)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_162:
      sub_1AD009758(v429, &qword_1EECD1C98);
LABEL_163:
      sub_1AD009758(v149, &qword_1EECD1C90);
      goto LABEL_164;
    }
    (*((void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v424 + 7))(v213, 0, 1, v416);

    v87 = v389;
  }
  else
  {
    (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v424 + 7))(v422, 1, 1, v416);
  }
  v215 = objc_msgSend(a1, sel_audio);
  if (v215)
  {
    v216 = v215;
    v217 = v417;
    v453 = (uint64_t)v216;
    v218 = v492;
    sub_1AD36009C(v216, v417);
    v492 = v218;
    if (v218)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_161:
      sub_1AD009758(v422, &qword_1EECD1CA0);
      goto LABEL_162;
    }
    v220 = type metadata accessor for LinkPresentation.Audio(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 56))(v217, 0, 1, v220);

  }
  else
  {
    v219 = type metadata accessor for LinkPresentation.Audio(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v219 - 8) + 56))(v417, 1, 1, v219);
  }
  v221 = objc_msgSend(a1, sel_audioMetadata);
  if (v221)
  {
    v222 = v221;
    v223 = v415;
    v453 = (uint64_t)v222;
    v224 = v492;
    sub_1AD3601F0(v222, type metadata accessor for LinkPresentation.AudioMetadata, v415);
    v492 = v224;
    if (v224)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_160:
      sub_1AD009758(v417, &qword_1EECD1CA8);
      goto LABEL_161;
    }
    v409 = v15;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v420 + 56))(v223, 0, 1, v427);

  }
  else
  {
    v409 = v15;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v420 + 56))(v415, 1, 1, v427);
  }
  v226 = objc_msgSend(a1, sel_arAssets);
  v15 = v438;
  if (v226)
  {
    v227 = v226;
    sub_1AD32F2CC(0, &qword_1EECDAF40);
    v379 = sub_1AD63B9B4();

    if (v379 >> 62)
      goto LABEL_198;
    v228 = *(_QWORD *)((v379 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v228)
    {
      do
      {
        *(_QWORD *)&v459 = MEMORY[0x1E0DEE9D8];
        v378 = v228;
        sub_1AD14995C(0, v228 & ~(v228 >> 63), 0);
        v229 = v378;
        if (v378 < 0)
          goto LABEL_298;
        v53 = 0;
        v109 = v459;
        v230 = v379;
        v376 = v379 & 0xC000000000000001;
        v87 = v432;
        while (v229 != v53)
        {
          v383 = v53;
          if (v376)
            v231 = (id)MEMORY[0x1AF44AA40](v53);
          else
            v231 = *(id *)(v230 + 8 * v53 + 32);
          v232 = v231;
          v416 = v109;
          v233 = (uint64_t)v440;
          v234 = v87 + *((int *)v440 + 5);
          v235 = sub_1AD63AF28();
          v236 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v235 - 8) + 56);
          v237 = 1;
          v453 = v234;
          v236(v234, 1, 1, v235);
          v238 = (_QWORD *)(v87 + *(int *)(v233 + 24));
          *v238 = 0;
          v238[1] = 0;
          v386 = v238;
          v239 = (_QWORD *)(v87 + *(int *)(v233 + 28));
          *v239 = 0;
          v239[1] = 0;
          v12 = v232;
          v382 = objc_msgSend((id)v12, sel_version);
          v240 = objc_msgSend((id)v12, "URL");
          if (v240)
          {
            v241 = v240;
            v242 = v433;
            sub_1AD63AED4();

            v237 = 0;
          }
          else
          {
            v242 = v433;
          }
          v236(v242, v237, 1, v235);
          v243 = objc_msgSend((id)v12, sel_type);
          v394 = (uint64_t)v239;
          if (v243)
          {
            v244 = v243;
            v245 = sub_1AD63B768();
            v384 = v246;
            v385 = v245;

          }
          else
          {
            v384 = 0;
            v385 = 0;
          }
          v109 = v416;
          v247 = v383;
          v248 = v382;
          v249 = objc_msgSend((id)v12, sel_accessibilityText);
          if (v249)
          {
            v250 = v249;
            v416 = sub_1AD63B768();
            v252 = v251;

          }
          else
          {

            v416 = 0;
            v252 = 0;
          }
          v253 = v430;
          *v430 = v248;
          v254 = (uint64_t)v440;
          sub_1AD00FF28(v433, (uint64_t)v253 + *((int *)v440 + 5), &qword_1ED2E1A40);
          v255 = (uint64_t *)((char *)v253 + *(int *)(v254 + 24));
          v256 = v384;
          *v255 = v385;
          v255[1] = v256;
          v257 = (uint64_t *)((char *)v253 + *(int *)(v254 + 28));
          *v257 = v416;
          v257[1] = v252;
          sub_1AD009758(v453, &qword_1ED2E1A40);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v87 = v432;
          sub_1AD2A5214((uint64_t)v253, v432, type metadata accessor for LinkPresentation.ARAssetMetadata);

          *(_QWORD *)&v459 = v109;
          v259 = *(_QWORD *)(v109 + 16);
          v258 = *(_QWORD *)(v109 + 24);
          if (v259 >= v258 >> 1)
          {
            sub_1AD14995C(v258 > 1, v259 + 1, 1);
            v109 = v459;
          }
          v53 = v247 + 1;
          *(_QWORD *)(v109 + 16) = v259 + 1;
          sub_1AD2A5214(v87, v109+ ((*(unsigned __int8 *)(v439 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v439 + 80))+ *(_QWORD *)(v439 + 72) * v259, type metadata accessor for LinkPresentation.ARAssetMetadata);
          v229 = v378;
          v230 = v379;
          v149 = (uint64_t)v437;
          v15 = v438;
          if (v378 == v53)
          {
            v416 = v109;
            swift_bridgeObjectRelease();
            v53 = v395;
            v87 = v389;
            goto LABEL_200;
          }
        }
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        __break(1u);
LABEL_198:
        swift_bridgeObjectRetain();
        v378 = sub_1AD63BE34();
        swift_bridgeObjectRelease();
        v228 = v378;
      }
      while (v378);
    }
    swift_bridgeObjectRelease();
    v416 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v416 = 0;
  }
LABEL_200:
  v260 = objc_msgSend(a1, sel_icons);
  if (!v260)
  {
    v432 = 0;
    goto LABEL_223;
  }
  v261 = v260;
  sub_1AD32F2CC(0, &qword_1EECDAF50);
  v262 = sub_1AD63B9B4();

  v433 = v262;
  if (v262 >> 62)
  {
    swift_bridgeObjectRetain();
    v109 = sub_1AD63BE34();
    swift_bridgeObjectRelease();
    if (v109)
      goto LABEL_203;
LABEL_222:
    swift_bridgeObjectRelease();
    v432 = MEMORY[0x1E0DEE9D8];
    goto LABEL_223;
  }
  v109 = *(_QWORD *)((v262 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v109)
    goto LABEL_222;
LABEL_203:
  *(_QWORD *)&v459 = MEMORY[0x1E0DEE9D8];
  sub_1AD149930(0, v109 & ~((uint64_t)v109 >> 63), 0);
  if ((v109 & 0x8000000000000000) != 0)
    goto LABEL_299;
  v453 = 0;
  v263 = v433;
  v432 = v433 & 0xC000000000000001;
  v377 = a1;
  v430 = (_DWORD *)v109;
  do
  {
    if (v432)
      v264 = (id)MEMORY[0x1AF44AA40](v453, v263);
    else
      v264 = *(id *)(v263 + 8 * v453 + 32);
    v265 = v264;
    v266 = v454;
    v267 = v436;
    v268 = v436 + *(int *)(v454 + 20);
    v269 = sub_1AD63AF28();
    v270 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v269 - 8) + 56);
    v271 = 1;
    v440 = (_QWORD *)v268;
    v270(v268, 1, 1, v269);
    v272 = (_QWORD *)(v267 + *(int *)(v266 + 24));
    *v272 = 0;
    v272[1] = 0;
    v273 = v265;
    LODWORD(v439) = objc_msgSend(v273, sel_version);
    v274 = objc_msgSend(v273, "URL");
    if (v274)
    {
      v275 = v274;
      v276 = v434;
      sub_1AD63AED4();

      v277 = v276;
      v271 = 0;
    }
    else
    {
      v277 = v434;
    }
    v270(v277, v271, 1, v269);
    v278 = objc_msgSend(v273, sel_accessibilityText);
    if (v278)
    {
      v279 = v278;
      v280 = sub_1AD63B768();
      v282 = v281;

    }
    else
    {
      v280 = 0;
      v282 = 0;
    }
    v283 = (uint64_t)v409;
    *(_DWORD *)v409 = v439;
    v284 = v454;
    sub_1AD00FF28(v434, v283 + *(int *)(v454 + 20), &qword_1ED2E1A40);

    v285 = (uint64_t *)(v283 + *(int *)(v284 + 24));
    *v285 = v280;
    v285[1] = v282;
    sub_1AD009758((uint64_t)v440, &qword_1ED2E1A40);
    swift_bridgeObjectRelease();
    v286 = v436;
    sub_1AD2A5214(v283, v436, type metadata accessor for LinkPresentation.IconMetadata);
    sub_1AD2A5214(v286, v435, type metadata accessor for LinkPresentation.IconMetadata);

    v287 = v459;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AD149930(0, *(_QWORD *)(v287 + 16) + 1, 1);
      v287 = v459;
    }
    v53 = v395;
    a1 = v377;
    v288 = v430;
    v290 = *(_QWORD *)(v287 + 16);
    v289 = *(_QWORD *)(v287 + 24);
    if (v290 >= v289 >> 1)
    {
      sub_1AD149930(v289 > 1, v290 + 1, 1);
      v287 = v459;
    }
    v109 = v453 + 1;
    *(_QWORD *)(v287 + 16) = v290 + 1;
    v12 = v388;
    sub_1AD2A5214(v435, v287+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v388 + 72) * v290, type metadata accessor for LinkPresentation.IconMetadata);
    v453 = v109;
    v149 = (uint64_t)v437;
    v15 = v438;
    v263 = v433;
  }
  while (v288 != (_DWORD *)v109);
  v432 = v287;
  swift_bridgeObjectRelease();
  v87 = v389;
LABEL_223:
  v291 = objc_msgSend(a1, sel_images);
  if (v291)
  {
    v292 = v291;
    sub_1AD32F2CC(0, &qword_1EECDAF48);
    v12 = sub_1AD63B9B4();

    if ((unint64_t)v12 >> 62)
    {
LABEL_240:
      swift_bridgeObjectRetain();
      v293 = sub_1AD63BE34();
      swift_bridgeObjectRelease();
      if (v293)
      {
LABEL_226:
        *(_QWORD *)&v459 = MEMORY[0x1E0DEE9D8];
        sub_1AD149988(0, v293 & ~(v293 >> 63), 0);
        if (v293 < 0)
          goto LABEL_300;
        v53 = 0;
        v109 = v459;
        v454 = v12;
        v15 = (char *)(v12 & 0xC000000000000001);
        v12 = v455;
        while (1)
        {
          if (v293 == v53)
          {
            __break(1u);
            goto LABEL_240;
          }
          v294 = v15 ? (id)MEMORY[0x1AF44AA40](v53, v454) : *(id *)(v454 + 8 * v53 + 32);
          v295 = v294;
          v296 = v492;
          sub_1AD35FE10(v295, type metadata accessor for LinkPresentation.ImageMetadata, v431);
          v492 = v296;
          if (v296)
            break;

          *(_QWORD *)&v459 = v109;
          v298 = *(_QWORD *)(v109 + 16);
          v297 = *(_QWORD *)(v109 + 24);
          if (v298 >= v297 >> 1)
          {
            sub_1AD149988(v297 > 1, v298 + 1, 1);
            v109 = v459;
          }
          ++v53;
          *(_QWORD *)(v109 + 16) = v298 + 1;
          sub_1AD2A5214(v431, v109+ ((*((unsigned __int8 *)v441 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v441 + 80))+ v441[9] * v298, type metadata accessor for LinkPresentation.ImageMetadata);
          v87 = v389;
          v12 = v455;
          if (v293 == v53)
          {
            v431 = v109;
            swift_bridgeObjectRelease();
            v53 = v395;
            v149 = (uint64_t)v437;
            v15 = v438;
            goto LABEL_242;
          }
        }
        swift_release();

        sub_1AD296050(v490);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_296:
        swift_bridgeObjectRelease();
        sub_1AD009758(v415, &qword_1EECD1CB0);
        sub_1AD009758(v417, &qword_1EECD1CA8);
        sub_1AD009758(v422, &qword_1EECD1CA0);
        sub_1AD009758(v429, &qword_1EECD1C98);
        sub_1AD009758((uint64_t)v437, &qword_1EECD1C90);
        sub_1AD29594C(v482);
        sub_1AD009758(v452, &qword_1EECD1C88);
        sub_1AD295A28(v390, *((uint64_t *)&v390 + 1), v391);
        sub_1AD009758(v456, &qword_1EECD1C80);
        sub_1AD29594C(v488);
        sub_1AD009758(v458, &qword_1ED2E1A40);
        v225 = v395;
        goto LABEL_169;
      }
    }
    else
    {
      v293 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v293)
        goto LABEL_226;
    }
    swift_bridgeObjectRelease();
    v431 = MEMORY[0x1E0DEE9D8];
    v149 = (uint64_t)v437;
  }
  else
  {
    v431 = 0;
  }
LABEL_242:
  v299 = objc_msgSend(a1, sel_availableContentImages);
  if (v299)
  {
    v300 = v299;
    sub_1AD32F2CC(0, &qword_1EECDAF48);
    v301 = sub_1AD63B9B4();

    if (v301 >> 62)
      goto LABEL_259;
    v149 = *(_QWORD *)((v301 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v149)
    {
      *(_QWORD *)&v459 = MEMORY[0x1E0DEE9D8];
      sub_1AD149988(0, v149 & ~(v149 >> 63), 0);
      if (v149 < 0)
        goto LABEL_329;
      v53 = 0;
      v15 = (char *)v459;
      v454 = v301 & 0xC000000000000001;
      v12 = v455;
      while (v149 != v53)
      {
        if (v454)
          v302 = (id)MEMORY[0x1AF44AA40](v53, v301);
        else
          v302 = *(id *)(v301 + 8 * v53 + 32);
        v303 = v302;
        v304 = v492;
        sub_1AD35FE10(v303, type metadata accessor for LinkPresentation.ImageMetadata, (uint64_t)v425);
        v492 = v304;
        if (v304)
        {
          swift_release();

          sub_1AD296050(v490);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_296;
        }

        *(_QWORD *)&v459 = v15;
        v306 = *((_QWORD *)v15 + 2);
        v305 = *((_QWORD *)v15 + 3);
        if (v306 >= v305 >> 1)
        {
          sub_1AD149988(v305 > 1, v306 + 1, 1);
          v15 = (char *)v459;
        }
        ++v53;
        *((_QWORD *)v15 + 2) = v306 + 1;
        sub_1AD2A5214((uint64_t)v425, (uint64_t)&v15[((*((unsigned __int8 *)v441 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v441 + 80))+ v441[9] * v306], type metadata accessor for LinkPresentation.ImageMetadata);
        v87 = v389;
        v12 = v455;
        if (v149 == v53)
        {
          v430 = v15;
          swift_bridgeObjectRelease();
          v53 = v395;
          v149 = (uint64_t)v437;
          v15 = v438;
          goto LABEL_261;
        }
      }
      __break(1u);
LABEL_259:
      swift_bridgeObjectRetain();
      v149 = sub_1AD63BE34();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v430 = (_DWORD *)MEMORY[0x1E0DEE9D8];
    v149 = (uint64_t)v437;
  }
  else
  {
    v430 = 0;
  }
LABEL_261:
  v307 = objc_msgSend(a1, sel_videos);
  if (v307)
  {
    v308 = v307;
    sub_1AD32F2CC(0, &qword_1EECDAF58);
    v309 = sub_1AD63B9B4();

    if (v309 >> 62)
      goto LABEL_278;
    v149 = *(_QWORD *)((v309 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v149)
    {
      *(_QWORD *)&v459 = MEMORY[0x1E0DEE9D8];
      sub_1AD149904(0, v149 & ~(v149 >> 63), 0);
      if (v149 < 0)
        goto LABEL_330;
      v53 = 0;
      v15 = (char *)v459;
      v454 = v309 & 0xC000000000000001;
      v12 = v455;
      while (v149 != v53)
      {
        if (v454)
          v310 = (id)MEMORY[0x1AF44AA40](v53, v309);
        else
          v310 = *(id *)(v309 + 8 * v53 + 32);
        v311 = v310;
        v312 = v492;
        sub_1AD35FE10(v311, type metadata accessor for LinkPresentation.VideoMetadata, v423);
        v492 = v312;
        if (v312)
        {
          swift_release();

          sub_1AD296050(v490);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_296;
        }

        *(_QWORD *)&v459 = v15;
        v314 = *((_QWORD *)v15 + 2);
        v313 = *((_QWORD *)v15 + 3);
        if (v314 >= v313 >> 1)
        {
          sub_1AD149904(v313 > 1, v314 + 1, 1);
          v15 = (char *)v459;
        }
        ++v53;
        *((_QWORD *)v15 + 2) = v314 + 1;
        sub_1AD2A5214(v423, (uint64_t)&v15[((v424[80] + 32) & ~(unint64_t)v424[80])+ *((_QWORD *)v424 + 9) * v314], type metadata accessor for LinkPresentation.VideoMetadata);
        v87 = v389;
        v12 = v455;
        if (v149 == v53)
        {
          v425 = v15;
          swift_bridgeObjectRelease();
          v53 = v395;
          v149 = (uint64_t)v437;
          v15 = v438;
          goto LABEL_280;
        }
      }
      __break(1u);
LABEL_278:
      swift_bridgeObjectRetain();
      v149 = sub_1AD63BE34();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v425 = (char *)MEMORY[0x1E0DEE9D8];
    v149 = (uint64_t)v437;
  }
  else
  {
    v425 = 0;
  }
LABEL_280:
  v315 = objc_msgSend(a1, sel_streamingVideos);
  if (v315)
  {
    v316 = v315;
    sub_1AD32F2CC(0, &qword_1EECDAF58);
    v109 = sub_1AD63B9B4();

    if (v109 >> 62)
      goto LABEL_301;
    v317 = *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v317)
    {
      while (1)
      {
        *(_QWORD *)&v459 = MEMORY[0x1E0DEE9D8];
        sub_1AD149904(0, v317 & ~(v317 >> 63), 0);
        if (v317 < 0)
          break;
        v53 = 0;
        v15 = (char *)v459;
        v454 = v109 & 0xC000000000000001;
        while (v317 != v53)
        {
          if (v454)
            v318 = (id)MEMORY[0x1AF44AA40](v53, v109);
          else
            v318 = *(id *)(v109 + 8 * v53 + 32);
          v319 = v318;
          v320 = v492;
          sub_1AD35FE10(v319, type metadata accessor for LinkPresentation.VideoMetadata, v421);
          v492 = v320;
          if (v320)
          {
            swift_release();

            sub_1AD296050(v490);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_296;
          }

          *(_QWORD *)&v459 = v15;
          v322 = *((_QWORD *)v15 + 2);
          v321 = *((_QWORD *)v15 + 3);
          if (v322 >= v321 >> 1)
          {
            sub_1AD149904(v321 > 1, v322 + 1, 1);
            v15 = (char *)v459;
          }
          ++v53;
          *((_QWORD *)v15 + 2) = v322 + 1;
          sub_1AD2A5214(v421, (uint64_t)&v15[((v424[80] + 32) & ~(unint64_t)v424[80])+ *((_QWORD *)v424 + 9) * v322], type metadata accessor for LinkPresentation.VideoMetadata);
          v87 = v389;
          if (v317 == v53)
          {
            v424 = v15;
            swift_bridgeObjectRelease();
            v53 = v395;
            v149 = (uint64_t)v437;
            v15 = v438;
            goto LABEL_303;
          }
        }
        __break(1u);
LABEL_298:
        __break(1u);
LABEL_299:
        __break(1u);
LABEL_300:
        __break(1u);
LABEL_301:
        swift_bridgeObjectRetain();
        v317 = sub_1AD63BE34();
        swift_bridgeObjectRelease();
        if (!v317)
          goto LABEL_302;
      }
      __break(1u);
      goto LABEL_343;
    }
LABEL_302:
    swift_bridgeObjectRelease();
    v424 = (char *)MEMORY[0x1E0DEE9D8];
    v149 = (uint64_t)v437;
  }
  else
  {
    v424 = 0;
  }
LABEL_303:
  v323 = objc_msgSend(a1, sel_audios);
  if (v323)
  {
    sub_1AD32F2CC(0, &qword_1EECDAF60);
    v12 = sub_1AD63B9B4();

    if ((unint64_t)v12 >> 62)
      goto LABEL_331;
    v324 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v324)
    {
      while (1)
      {
        *(_QWORD *)&v459 = MEMORY[0x1E0DEE9D8];
        v435 = v324;
        sub_1AD1498D8(0, v324 & ~(v324 >> 63), 0);
        v325 = v435;
        if (v435 < 0)
          break;
        v326 = 0;
        v433 = v12;
        v434 = v12 & 0xC000000000000001;
        v149 = v419;
        while (v325 != v326)
        {
          v454 = v326;
          if (v434)
            v327 = (id)MEMORY[0x1AF44AA40]();
          else
            v327 = *(id *)(v12 + 8 * v326 + 32);
          v328 = v327;
          v329 = v427;
          v330 = v149 + *(int *)(v427 + 20);
          v331 = sub_1AD63AF28();
          v332 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v331 - 8) + 56);
          v333 = 1;
          v453 = v330;
          v332(v330, 1, 1, v331);
          v334 = (_QWORD *)(v149 + *(int *)(v329 + 24));
          *v334 = 0;
          v334[1] = 0;
          v440 = v334;
          v335 = (_QWORD *)(v149 + *(int *)(v329 + 28));
          *v335 = 0;
          v335[1] = 0;
          v441 = v335;
          v336 = v328;
          v337 = objc_msgSend(v336, sel_version);
          v338 = objc_msgSend(v336, "URL");
          if (v338)
          {
            v339 = v338;
            v340 = v426;
            sub_1AD63AED4();

            v333 = 0;
          }
          else
          {
            v340 = v426;
          }
          v332(v340, v333, 1, v331);
          v341 = objc_msgSend(v336, sel_type);
          if (v341)
          {
            v342 = v341;
            v439 = sub_1AD63B768();
            v436 = v343;

          }
          else
          {
            v439 = 0;
            v436 = 0;
          }
          v344 = objc_msgSend(v336, sel_accessibilityText);
          if (v344)
          {
            v345 = v344;
            v346 = sub_1AD63B768();
            v348 = v347;

          }
          else
          {

            v346 = 0;
            v348 = 0;
          }
          v87 = v389;
          v349 = v418;
          *v418 = v337;
          v350 = v427;
          sub_1AD00FF28(v426, (uint64_t)v349 + *(int *)(v427 + 20), &qword_1ED2E1A40);
          v351 = (uint64_t *)((char *)v349 + *(int *)(v350 + 24));
          v352 = v436;
          *v351 = v439;
          v351[1] = v352;
          v353 = (uint64_t *)((char *)v349 + *(int *)(v350 + 28));
          *v353 = v346;
          v353[1] = v348;
          sub_1AD009758(v453, &qword_1ED2E1A40);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v354 = (uint64_t)v349;
          v149 = v419;
          sub_1AD2A5214(v354, v419, type metadata accessor for LinkPresentation.AudioMetadata);

          v323 = (_QWORD *)v459;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AD1498D8(0, v323[2] + 1, 1);
            v323 = (_QWORD *)v459;
          }
          v12 = v433;
          v355 = v454;
          v357 = v323[2];
          v356 = v323[3];
          if (v357 >= v356 >> 1)
          {
            sub_1AD1498D8(v356 > 1, v357 + 1, 1);
            v355 = v454;
            v323 = (_QWORD *)v459;
          }
          v323[2] = v357 + 1;
          v358 = v355 + 1;
          sub_1AD2A5214(v149, (uint64_t)v323+ ((*(unsigned __int8 *)(v420 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v420 + 80))+ *(_QWORD *)(v420 + 72) * v357, type metadata accessor for LinkPresentation.AudioMetadata);
          v326 = v358;
          v325 = v435;
          v359 = v435 == v358;
          v53 = v395;
          v15 = v438;
          if (v359)
          {
            swift_bridgeObjectRelease();
            v149 = (uint64_t)v437;
            goto LABEL_333;
          }
        }
        __break(1u);
LABEL_329:
        __break(1u);
LABEL_330:
        __break(1u);
LABEL_331:
        swift_bridgeObjectRetain();
        v360 = sub_1AD63BE34();
        swift_bridgeObjectRelease();
        v324 = v360;
        if (!v360)
          goto LABEL_332;
      }
LABEL_343:
      __break(1u);
      return;
    }
LABEL_332:
    swift_bridgeObjectRelease();
    v323 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
LABEL_333:
  v361 = objc_msgSend(a1, sel_specialization);
  if (v361)
  {
    v362 = v361;
    v363 = v414;
    v364 = v492;
    sub_1AD360450((uint64_t)v362);
    v492 = v364;
    if (v364)
    {
      sub_1AD296050(v490);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AD009758(v415, &qword_1EECD1CB0);
      goto LABEL_160;
    }
    v367 = v438;
    v366 = v410;
    (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v438 + 7))(v363, 0, 1, v410);

    v365 = (uint64_t)v363;
    v15 = v367;
  }
  else
  {
    v365 = (uint64_t)v414;
    v366 = v410;
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v15 + 7))(v414, 1, 1, v410);
  }

  v368 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v15 + 6))(v365, 1, v366);
  v369 = v412;
  v370 = v416;
  if (v368 == 1)
  {
    v371 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v371 - 8) + 56))(v369, 1, 1, v371);
    sub_1AD009758(v365, &qword_1EECDB0C0);
  }
  else
  {
    sub_1AD00FF28(v365, v412, &qword_1EECD1CC0);
  }
  v372 = v456;
  v373 = v406 == 0;
  v374 = v411;
  sub_1AD00FF28((uint64_t)v451, v411, &qword_1EECD1CC8);
  *(_QWORD *)&v478 = v120;
  *((_QWORD *)&v478 + 1) = v122;
  v479 = v124;
  v480 = v126;
  v481 = v373;
  sub_1AD00FF28((uint64_t)v488, (uint64_t)&v471, &qword_1EECD1D20);
  v467 = v390;
  v468 = v391;
  v469 = v392;
  v470 = v393;
  sub_1AD00FF28((uint64_t)v482, (uint64_t)v466, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v490, (uint64_t)&v459, &qword_1EECD20E0);
  sub_1AD046A64(v408, v457, v395, v405, v87, v404, v450, v403, v413, v455, v402, v449, v401, v448, v458, v400, v447, v381, v446,
    v399,
    v445,
    v398,
    v444,
    v407,
    &v478,
    v397,
    v443,
    v396,
    v442,
    (uint64_t)&v471,
    v372,
    &v467,
    v452,
    (uint64_t)v466,
    v387,
    (uint64_t)v437,
    v380,
    v428,
    v429,
    v422,
    v417,
    v415,
    v370,
    v432,
    v431,
    (uint64_t)v430,
    (uint64_t)v425,
    (uint64_t)v424,
    (uint64_t)v323,
    v369,
    (uint64_t)&v459,
    v374);
}

