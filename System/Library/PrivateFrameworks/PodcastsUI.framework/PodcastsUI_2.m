uint64_t _s12ErrorHandlerVMa()
{
  uint64_t result;

  result = qword_1F026C870;
  if (!qword_1F026C870)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DA5D01D8()
{
  unint64_t v0;

  sub_1DA5D024C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1DA5D024C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F026C880)
  {
    sub_1DA66CFD0();
    v0 = sub_1DA670294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F026C880);
  }
}

uint64_t sub_1DA5D02A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12ErrorHandlerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DA5D02E4()
{
  unint64_t result;

  result = qword_1F026C8B8;
  if (!qword_1F026C8B8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlaybackController.PlayerError, &type metadata for PlaybackController.PlayerError);
    atomic_store(result, (unint64_t *)&qword_1F026C8B8);
  }
  return result;
}

uint64_t sub_1DA5D0328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall UINavigationController.clearBottomPaletteIfNeeded()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = objc_msgSend(v0, sel_topViewController);
  if (v1)
  {
    v6 = v1;
    v2 = objc_msgSend(v1, sel_navigationItem);
    v3 = objc_msgSend(v2, sel__bottomPalette);

    if (v3)
    {
      v4 = objc_msgSend(v6, sel_navigationItem);
      objc_msgSend(v4, sel__setBottomPalette_, 0);

      v5 = v4;
    }
    else
    {
      v5 = v6;
    }

  }
}

double static TranscriptModel.maxSecondsBetweenSentencesInParagraph.getter()
{
  return 3.0;
}

uint64_t TranscriptModel.createParagraphs(with:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  char *v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a2;
  v6 = sub_1DA66D150();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v21 = *a1;
  v12 = (void *)a1[2];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, v3, v6, v9);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = (v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v13, v10, v6);
  v16 = (_QWORD *)(v15 + v14);
  *v16 = v21;
  v16[1] = v11;
  v16[2] = v12;
  v17 = (_QWORD *)(v15 + ((v14 + 31) & 0xFFFFFFFFFFFFFFF8));
  *v17 = v22;
  v17[1] = a3;
  v18 = v12;
  sub_1DA66BE60();
  sub_1DA5D0A60((uint64_t)sub_1DA5D0614, v15);
  return swift_release();
}

uint64_t sub_1DA5D0580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1DA66D150();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5D0614(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __int128 *v6;
  uint64_t v7;
  void (*v8)(void);
  __int128 v10;
  uint64_t v11;

  v3 = sub_1DA66D150();
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 31) & 0xFFFFFFFFFFFFFFF8;
  v6 = (__int128 *)(v1 + v4);
  v7 = *(_QWORD *)(v1 + v4 + 16);
  v8 = *(void (**)(void))(v1 + v5);
  v10 = *v6;
  v11 = v7;
  sub_1DA5D06B0(a1, (double *)&v10);
  v8();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DA5D06B0(uint64_t a1, double *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  void *v11;
  double v12;
  double v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  id v21;
  unint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD v45[2];
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v3 = v2;
  v6 = sub_1DA66D144();
  v7 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  v48 = v7;
  MEMORY[0x1E0C80A78](v6);
  v57 = (uint64_t)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  v10 = a2[1];
  v11 = (void *)*((_QWORD *)a2 + 2);
  v53 = *(_QWORD *)a2;
  v54 = v11;
  v52 = *(_QWORD *)&v10;
  if (v11)
  {
    v12 = v9;
    v13 = v10;
    v14 = v11;
    v15 = a1;
    v16 = MEMORY[0x1DF09E3EC](0x6161616161616161, 0xE900000000000020, 200);
    v18 = v17;
    objc_allocWithZone((Class)type metadata accessor for TranscriptsLayoutManager());
    v19 = v14;
    v20 = sub_1DA5849E4(v12, v16, v18, v19);
    v21 = objc_msgSend(v20, sel_characterIndexForPoint_inTextContainer_fractionOfDistanceBetweenInsertionPoints_, *(_QWORD *)&v20[OBJC_IVAR____TtC10PodcastsUI24TranscriptsLayoutManager_textContainer], 0, v12, v13);

    a1 = v15;
  }
  else
  {
    v21 = 0;
  }
  v22 = MEMORY[0x1E0DEE9D8];
  v63 = MEMORY[0x1E0DEE9D8];
  v56 = *(_QWORD *)(a1 + 16);
  if (v56)
  {
    v50 = (uint64_t)v21;
    v23 = v54 == 0;
    v46 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v55 = a1 + v46;
    v24 = *(_QWORD *)(v48 + 72);
    v45[1] = a1;
    swift_bridgeObjectRetain();
    v25 = 0;
    v51 = v3;
    v49 = v24;
    v26 = v52;
    do
    {
      v27 = v55 + v24 * v25;
      v62 = v22;
      v28 = sub_1DA66D108();
      v29 = *(_QWORD *)(v28 + 16);
      if (v29)
      {
        v59 = v25;
        v30 = *(_QWORD *)(sub_1DA66D0F0() - 8);
        v31 = *(unsigned __int8 *)(v30 + 80);
        v58 = v28;
        v32 = v28 + ((v31 + 32) & ~v31);
        v33 = *(_QWORD *)(v30 + 72);
        v34 = v50;
        v60 = v27;
        v35 = v23;
        v36 = v53;
        v37 = v54;
        do
        {
          sub_1DA5D0C38(v32, &v62, v34, v35, &v63, v60, v36, v26, v37);
          v32 += v33;
          --v29;
        }
        while (v29);
        swift_bridgeObjectRelease();
        v38 = v62;
        v22 = MEMORY[0x1E0DEE9D8];
        v23 = v35;
        v24 = v49;
        v25 = v59;
      }
      else
      {
        swift_bridgeObjectRelease();
        v38 = v22;
      }
      v61 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C8C8);
      sub_1DA4841D4(&qword_1F026C8D0, &qword_1F026C8C8, MEMORY[0x1E0DEAF50]);
      if ((sub_1DA66FCDC() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        v39 = sub_1DA66D120();
        sub_1DA5362AC(v39, v40, v38, v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = v63;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v41 = sub_1DA5408A8(0, *(_QWORD *)(v41 + 16) + 1, 1, v41);
        v43 = *(_QWORD *)(v41 + 16);
        v42 = *(_QWORD *)(v41 + 24);
        if (v43 >= v42 >> 1)
          v41 = sub_1DA5408A8(v42 > 1, v43 + 1, 1, v41);
        *(_QWORD *)(v41 + 16) = v43 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 32))(v41 + v46 + v43 * v24, v57, v47);
        swift_bridgeObjectRelease();
        v63 = v41;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v25;
    }
    while (v25 != v56);
    swift_bridgeObjectRelease();
    return v63;
  }
  return v22;
}

void sub_1DA5D0A60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1DA66D150();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v10 = objc_msgSend(v9, sel_transcriptCensorWords);

  sub_1DA486298();
  v11 = (void *)sub_1DA66FE44();
  v12 = objc_msgSend(v10, sel_asyncValuePromiseOnQueue_, v11);

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v6);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v15 = (_QWORD *)(v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v15 = a1;
  v15[1] = a2;
  aBlock[4] = sub_1DA5D2694;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA529310;
  aBlock[3] = &block_descriptor_17;
  v16 = _Block_copy(aBlock);
  sub_1DA66BE60();
  swift_release();
  objc_msgSend(v12, sel_addFinishBlock_, v16);
  _Block_release(v16);

}

uint64_t sub_1DA5D0C38(uint64_t a1, unint64_t *a2, uint64_t a3, int a4, unint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(unint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  void (*v72)(char *, unint64_t, uint64_t);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  BOOL v76;
  char *v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  char v82;
  char *v83;
  unint64_t v84;
  char v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t *v91;
  char v92;
  unint64_t v93;
  unint64_t v94;
  double v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t *v100;
  char v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  double v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t *v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v117 = a5;
  v108 = *(double *)&a7;
  v116 = a6;
  LODWORD(v119) = a4;
  v13 = a9;
  v125 = *MEMORY[0x1E0C80C00];
  v14 = sub_1DA66D0A8();
  v123 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DA66D0F0();
  v120 = *(_QWORD *)(v17 - 8);
  v121 = v17;
  MEMORY[0x1E0C80A78](v17);
  v113 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v111 = (char *)&v104 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A708);
  MEMORY[0x1E0C80A78](v21);
  v109 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v112 = (char *)&v104 - v24;
  v25 = sub_1DA66D144();
  v114 = *(_QWORD *)(v25 - 8);
  v115 = v25;
  MEMORY[0x1E0C80A78](v25);
  v118 = (uint64_t)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v106 = (uint64_t)&v104 - v28;
  MEMORY[0x1E0C80A78](v29);
  v110 = (uint64_t)&v104 - v30;
  v124 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C8C8);
  sub_1DA4841D4(&qword_1F026C8D0, &qword_1F026C8C8, MEMORY[0x1E0DEAF50]);
  v31 = sub_1DA66FCDC();
  v122 = a2;
  if ((v31 & 1) == 0)
    goto LABEL_21;
  v107 = a9;
  if ((v119 & 1) == 0)
  {
    v32 = *a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269940);
    v33 = a3;
    v34 = a8;
    v35 = v120;
    v36 = (*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1DA678510;
    v38 = v37 + v36;
    a2 = v122;
    v39 = *(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 16);
    a8 = v34;
    a3 = v33;
    v13 = v107;
    v39(v38, a1, v121);
    v124 = v32;
    swift_bridgeObjectRetain();
    sub_1DA65F4E4(v37);
    v40 = sub_1DA536070(v124);
    swift_bridgeObjectRelease();
    if (v40 > a3)
    {
      v41 = *a2;
      swift_bridgeObjectRetain();
      v42 = sub_1DA66D120();
      sub_1DA5362AC(v42, v43, v41, v110);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44 = v117;
      v45 = *v117;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v44 = v45;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v45 = sub_1DA5408A8(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
        *v117 = v45;
      }
      v48 = *(_QWORD *)(v45 + 16);
      v47 = *(_QWORD *)(v45 + 24);
      if (v48 >= v47 >> 1)
      {
        v45 = sub_1DA5408A8(v47 > 1, v48 + 1, 1, v45);
        *v117 = v45;
      }
      *(_QWORD *)(v45 + 16) = v48 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v114 + 32))(v45+ ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80))+ *(_QWORD *)(v114 + 72) * v48, v110, v115);
      a2 = v122;
      *v122 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
    }
  }
  v49 = *a2;
  v50 = *(_QWORD *)(*a2 + 16);
  if (!v50)
    goto LABEL_21;
  v105 = a8;
  v110 = a1;
  v51 = v120;
  v52 = v121;
  v53 = v111;
  (*(void (**)(char *, unint64_t, uint64_t))(v120 + 16))(v111, v49+ ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80))+ *(_QWORD *)(v120 + 72) * (v50 - 1), v121);
  v54 = sub_1DA66D0C0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v52);
  v55 = *(_QWORD *)(v54 + 16);
  v56 = v123;
  if (v55)
  {
    v57 = v112;
    (*(void (**)(char *, unint64_t, uint64_t))(v123 + 16))(v112, v54+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(_QWORD *)(v123 + 72) * (v55 - 1), v14);
    v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
    v58(v57, 0, 1, v14);
  }
  else
  {
    v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v123 + 56);
    v57 = v112;
    v58(v112, 1, 1, v14);
  }
  swift_bridgeObjectRelease();
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v60 = v59(v57, 1, v14);
  v61 = (uint64_t)v57;
  a1 = v110;
  if (v60 == 1)
  {
    sub_1DA47E2F0(v61, &qword_1F026A708);
    a8 = v105;
LABEL_20:
    v13 = v107;
    goto LABEL_21;
  }
  v112 = (char *)a3;
  sub_1DA66D084();
  v63 = v62;
  v111 = *(char **)(v56 + 8);
  ((void (*)(uint64_t, uint64_t))v111)(v61, v14);
  v64 = sub_1DA66D0C0();
  if (*(_QWORD *)(v64 + 16))
  {
    v65 = (uint64_t)v109;
    (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v109, v64 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80)), v14);
    v66 = 0;
  }
  else
  {
    v66 = 1;
    v65 = (uint64_t)v109;
  }
  v58((char *)v65, v66, 1, v14);
  swift_bridgeObjectRelease();
  v67 = v59((char *)v65, 1, v14);
  a8 = v105;
  if (v67 == 1)
  {
    sub_1DA47E2F0(v65, &qword_1F026A708);
    a3 = (uint64_t)v112;
    goto LABEL_20;
  }
  sub_1DA66D09C();
  v96 = v95;
  ((void (*)(uint64_t, uint64_t))v111)(v65, v14);
  a3 = (uint64_t)v112;
  v13 = v107;
  if (v96 - v63 > 3.0)
  {
    v97 = *a2;
    swift_bridgeObjectRetain();
    v98 = sub_1DA66D120();
    v75 = v106;
    sub_1DA5362AC(v98, v99, v97, v106);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v100 = v117;
    v73 = *v117;
    v101 = swift_isUniquelyReferenced_nonNull_native();
    *v100 = v73;
    if ((v101 & 1) != 0)
      goto LABEL_47;
    goto LABEL_53;
  }
  while (1)
  {
LABEL_21:
    if (!v13 || (v119 & 1) != 0)
      goto LABEL_33;
    v13 = v13;
    v68 = sub_1DA66D0C0();
    v69 = *(char **)(v68 + 16);
    if (!v69)
      break;
    v119 = v13;
    v112 = (char *)a3;
    v105 = a8;
    v110 = a1;
    v111 = (char *)v68;
    v70 = v68 + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
    v71 = *(_QWORD *)(v123 + 72);
    v72 = *(void (**)(char *, unint64_t, uint64_t))(v123 + 16);
    swift_bridgeObjectRetain();
    v73 = 0;
    v109 = v69;
    v74 = v69;
    do
    {
      v72(v16, v70, v14);
      sub_1DA66D078();
      v75 = sub_1DA66F958();
      swift_bridgeObjectRelease();
      v76 = __OFADD__(v73, v75);
      v73 += v75;
      if (v76)
      {
        __break(1u);
        goto LABEL_51;
      }
      (*(void (**)(char *, uint64_t))(v123 + 8))(v16, v14);
      v70 += v71;
      --v74;
    }
    while (v74);
    swift_bridgeObjectRelease_n();
    a1 = v110;
    v77 = v109 - 1;
    a2 = v122;
    a8 = v105;
    v13 = v119;
    if ((unint64_t)v109 <= 1 || (v76 = __OFADD__(v73, v77), v73 += (uint64_t)v77, !v76))
    {
      if (v73 <= (uint64_t)v112)
        goto LABEL_32;
      goto LABEL_30;
    }
    __break(1u);
LABEL_53:
    v73 = sub_1DA5408A8(0, *(_QWORD *)(v73 + 16) + 1, 1, v73);
    *v117 = v73;
LABEL_47:
    v103 = *(_QWORD *)(v73 + 16);
    v102 = *(_QWORD *)(v73 + 24);
    if (v103 >= v102 >> 1)
    {
      v73 = sub_1DA5408A8(v102 > 1, v103 + 1, 1, v73);
      *v117 = v73;
    }
    *(_QWORD *)(v73 + 16) = v103 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v114 + 32))(v73+ ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80))+ *(_QWORD *)(v114 + 72) * v103, v75, v115);
    a2 = v122;
    *v122 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    a3 = (uint64_t)v112;
  }
  swift_bridgeObjectRelease();
  if (a3 < 0)
  {
LABEL_30:
    v78 = v108;
    v79 = sub_1DA66D120();
    sub_1DA5D16A8(a1, v13, v79, v80, v117, v78, *(double *)&a8);

    result = swift_bridgeObjectRelease();
    goto LABEL_39;
  }
LABEL_32:

LABEL_33:
  v124 = sub_1DA66D0C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A820);
  sub_1DA4841D4(&qword_1F026C8D8, &qword_1F026A820, MEMORY[0x1E0DEAF50]);
  v82 = sub_1DA66FCDC();
  result = swift_bridgeObjectRelease();
  if ((v82 & 1) != 0)
  {
    v83 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v120 + 16))(v113, a1, v121);
    v84 = *a2;
    v85 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v84;
    if ((v85 & 1) == 0)
    {
      v84 = sub_1DA5408BC(0, *(_QWORD *)(v84 + 16) + 1, 1, v84);
      *a2 = v84;
    }
    v87 = *(_QWORD *)(v84 + 16);
    v86 = *(_QWORD *)(v84 + 24);
    if (v87 >= v86 >> 1)
    {
      v84 = sub_1DA5408BC(v86 > 1, v87 + 1, 1, v84);
      *v122 = v84;
    }
    *(_QWORD *)(v84 + 16) = v87 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v120 + 32))(v84+ ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80))+ *(_QWORD *)(v120 + 72) * v87, v83, v121);
    a2 = v122;
  }
LABEL_39:
  v88 = *a2;
  if (*(_QWORD *)(*a2 + 16) >= 3uLL)
  {
    swift_bridgeObjectRetain();
    v89 = sub_1DA66D120();
    sub_1DA5362AC(v89, v90, v88, v118);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v91 = v117;
    v73 = *v117;
    v92 = swift_isUniquelyReferenced_nonNull_native();
    *v91 = v73;
    if ((v92 & 1) == 0)
    {
LABEL_51:
      v73 = sub_1DA5408A8(0, *(_QWORD *)(v73 + 16) + 1, 1, v73);
      *v117 = v73;
    }
    v94 = *(_QWORD *)(v73 + 16);
    v93 = *(_QWORD *)(v73 + 24);
    if (v94 >= v93 >> 1)
    {
      v73 = sub_1DA5408A8(v93 > 1, v94 + 1, 1, v73);
      *v117 = v73;
    }
    *(_QWORD *)(v73 + 16) = v94 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v114 + 32))(v73+ ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80))+ *(_QWORD *)(v114 + 72) * v94, v118, v115);
    *v122 = MEMORY[0x1E0DEE9D8];
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA5D16A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, double a6, double a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  int64_t v59;
  int isUniquelyReferenced_nonNull_native;
  int64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, _QWORD, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(char *, unint64_t, uint64_t);
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t result;
  uint64_t v93;
  char *v94;
  int v95;
  int v96;
  unsigned int v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  __int128 v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  CGRect v126;

  v114 = a5;
  v111 = a3;
  v112 = a4;
  v11 = sub_1DA66D0F0();
  v109 = *(_QWORD *)(v11 - 8);
  v110 = v11;
  MEMORY[0x1E0C80A78](v11);
  v108 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66D144();
  v106 = *(_QWORD *)(v13 - 8);
  v107 = v13;
  MEMORY[0x1E0C80A78](v13);
  v113 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DA66D0B4();
  v117 = *(_QWORD *)(v15 - 8);
  v118 = v15;
  MEMORY[0x1E0C80A78](v15);
  v105 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v116 = (char *)&v93 - v18;
  v120 = sub_1DA66D0A8();
  v19 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v102 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v101 = (char *)&v93 - v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v93 - v24;
  v26 = sub_1DA66D0C0();
  v27 = *(_QWORD *)(v26 + 16);
  v119 = v19;
  if (v27)
  {
    *(_QWORD *)&v104 = a2;
    v115 = a1;
    v122 = MEMORY[0x1E0DEE9D8];
    sub_1DA498794(0, v27, 0);
    v28 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v103 = v26;
    v29 = v26 + v28;
    v121 = *(_QWORD *)(v19 + 72);
    v30 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v31 = v120;
      v30(v25, v29, v120);
      v32 = sub_1DA66D078();
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v25, v31);
      v35 = v122;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA498794(0, *(_QWORD *)(v35 + 16) + 1, 1);
        v35 = v122;
      }
      v37 = *(_QWORD *)(v35 + 16);
      v36 = *(_QWORD *)(v35 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1DA498794(v36 > 1, v37 + 1, 1);
        v35 = v122;
      }
      *(_QWORD *)(v35 + 16) = v37 + 1;
      v38 = v35 + 16 * v37;
      *(_QWORD *)(v38 + 32) = v32;
      *(_QWORD *)(v38 + 40) = v34;
      v29 += v121;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    a2 = (void *)v104;
  }
  else
  {
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1E0DEE9D8];
  }
  v122 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA4841D4((unint64_t *)&qword_1EDAE5348, &qword_1EDAE5340, MEMORY[0x1E0DEAF20]);
  v39 = sub_1DA66F838();
  v41 = v40;
  swift_bridgeObjectRelease();
  objc_allocWithZone((Class)type metadata accessor for TranscriptsLayoutManager());
  v42 = sub_1DA5849E4(a6, v39, v41, a2);
  v43 = objc_msgSend(v42, sel_numberOfGlyphs);
  objc_msgSend(v42, sel_boundingRectForGlyphRange_inTextContainer_, 0, v43, *(_QWORD *)&v42[OBJC_IVAR____TtC10PodcastsUI24TranscriptsLayoutManager_textContainer]);
  v44 = ceil(CGRectGetMaxY(v126) / a7);
  v45 = sub_1DA584C6C();
  v46 = *(_QWORD *)(v45 + 16);
  v47 = ceil((double)v46 / v44);
  if (v47 <= -9.22337204e18)
    goto LABEL_79;
  if (v47 >= 9.22337204e18)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if ((~*(_QWORD *)&v44 & 0x7FF0000000000000) == 0
    || (*(_QWORD *)&v47 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_81;
  }
  if (v44 <= -9.22337204e18)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (v44 >= 9.22337204e18)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  v48 = (uint64_t)v44;
  if ((uint64_t)v44 < 0)
  {
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    result = sub_1DA6705DC();
    __break(1u);
    return result;
  }
  v49 = v45;
  if (v48)
  {
    v94 = v42;
    v50 = (uint64_t)v47;
    if (((uint64_t)v47 & 0x8000000000000000) == 0)
    {
      v51 = 0;
      v121 = v45 + 32;
      v98 = v48 - 1;
      v96 = *MEMORY[0x1E0D7E040];
      v95 = *MEMORY[0x1E0D7E028];
      v97 = *MEMORY[0x1E0D7E038];
      v99 = *MEMORY[0x1E0D7E030];
      v104 = xmmword_1DA678510;
      v103 = (uint64_t)v44;
      v100 = v45;
      while (1)
      {
        if (v51 == v48)
          goto LABEL_77;
        v115 = v51;
        if (v50)
        {
          v52 = v51 * v50;
          if ((unsigned __int128)(v51 * (__int128)v50) >> 64 != (v51 * v50) >> 63)
            goto LABEL_78;
          v53 = 0;
          v54 = MEMORY[0x1E0DEE9D8];
          while (2)
          {
            if (v50 == v53)
            {
              __break(1u);
LABEL_70:
              __break(1u);
LABEL_71:
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
LABEL_79:
              __break(1u);
              goto LABEL_80;
            }
            v55 = v52 + v53;
            if (__OFADD__(v52, v53))
              goto LABEL_70;
            if (v55 >= v46)
              goto LABEL_26;
            if (v55 < 0)
              goto LABEL_71;
            if ((unint64_t)v55 >= *(_QWORD *)(v49 + 16))
              goto LABEL_72;
            v56 = *(_QWORD *)(v121 + 8 * v55);
            v57 = *(_QWORD *)(v56 + 16);
            v58 = *(_QWORD *)(v54 + 16);
            v59 = v58 + v57;
            if (__OFADD__(v58, v57))
              goto LABEL_73;
            swift_bridgeObjectRetain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (isUniquelyReferenced_nonNull_native && v59 <= *(_QWORD *)(v54 + 24) >> 1)
            {
              if (!*(_QWORD *)(v56 + 16))
              {
LABEL_24:
                if (v57)
                  goto LABEL_74;
LABEL_25:
                swift_bridgeObjectRelease();
LABEL_26:
                if (v50 == ++v53)
                  goto LABEL_51;
                continue;
              }
            }
            else
            {
              if (v58 <= v59)
                v61 = v58 + v57;
              else
                v61 = v58;
              v54 = sub_1DA54067C(isUniquelyReferenced_nonNull_native, v61, 1, v54);
              if (!*(_QWORD *)(v56 + 16))
                goto LABEL_24;
            }
            break;
          }
          v62 = *(_QWORD *)(v54 + 16);
          if ((*(_QWORD *)(v54 + 24) >> 1) - v62 < v57)
            goto LABEL_75;
          v63 = (*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
          v64 = *(_QWORD *)(v119 + 72);
          v65 = v54 + v63 + v64 * v62;
          if (v56 + v63 < v65 + v64 * v57 && v65 < v56 + v63 + v64 * v57)
            goto LABEL_86;
          swift_arrayInitWithCopy();
          if (v57)
          {
            v67 = *(_QWORD *)(v54 + 16);
            v68 = __OFADD__(v67, v57);
            v69 = v67 + v57;
            if (v68)
              goto LABEL_76;
            *(_QWORD *)(v54 + 16) = v69;
          }
          goto LABEL_25;
        }
        v54 = MEMORY[0x1E0DEE9D8];
LABEL_51:
        if (v44 == 1.0)
        {
          v70 = v116;
          v71 = *(void (**)(char *, _QWORD, uint64_t))(v117 + 104);
          v72 = (char *)&v125 + 4;
        }
        else
        {
          if (!v115)
          {
            (*(void (**)(char *, _QWORD, uint64_t))(v117 + 104))(v116, v97, v118);
            goto LABEL_54;
          }
          v71 = *(void (**)(char *, _QWORD, uint64_t))(v117 + 104);
          v70 = v116;
          if (v115 == v98)
            v72 = (char *)&v123 + 4;
          else
            v72 = (char *)&v124;
        }
        v71(v70, *((unsigned int *)v72 - 64), v118);
LABEL_54:
        v73 = *(_QWORD *)(v54 + 16);
        if (v73)
        {
          v74 = v119;
          v75 = v120;
          v76 = v54 + ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80));
          v77 = *(void (**)(char *, unint64_t, uint64_t))(v119 + 16);
          v78 = v101;
          v77(v101, v76, v120);
          sub_1DA66D09C();
          v79 = *(void (**)(char *, uint64_t))(v74 + 8);
          v79(v78, v75);
          v80 = *(_QWORD *)(v74 + 72);
          v49 = v100;
          v81 = v102;
          v77(v102, v76 + v80 * (v73 - 1), v75);
          sub_1DA66D084();
          v79(v81, v75);
        }
        (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v105, v116, v118);
        swift_bridgeObjectRetain();
        v82 = v108;
        sub_1DA66D0D8();
        sub_1DA66D0E4();
        sub_1DA66D0CC();
        swift_bridgeObjectRetain();
        sub_1DA66D12C();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269940);
        v83 = v109;
        v84 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
        v85 = swift_allocObject();
        *(_OWORD *)(v85 + 16) = v104;
        v86 = v85 + v84;
        v87 = v110;
        (*(void (**)(unint64_t, char *, uint64_t))(v83 + 16))(v86, v82, v110);
        sub_1DA66D114();
        (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v87);
        swift_bridgeObjectRelease();
        v88 = *v114;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v88 = sub_1DA5408A8(0, *(_QWORD *)(v88 + 16) + 1, 1, v88);
        v48 = v103;
        v90 = *(_QWORD *)(v88 + 16);
        v89 = *(_QWORD *)(v88 + 24);
        if (v90 >= v89 >> 1)
          v88 = sub_1DA5408A8(v89 > 1, v90 + 1, 1, v88);
        v91 = v115 + 1;
        *(_QWORD *)(v88 + 16) = v90 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))(v88+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(_QWORD *)(v106 + 72) * v90, v113, v107);
        *v114 = v88;
        v51 = v91;
        (*(void (**)(char *, uint64_t))(v117 + 8))(v116, v118);
        if (v91 == v48)
        {

          return swift_bridgeObjectRelease();
        }
      }
    }
    goto LABEL_85;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA5D2064(id a1, void *a2, uint64_t a3, void (*a4)(unint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  unint64_t v52;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(unint64_t);
  char *v62;
  _BYTE v63[32];
  _OWORD v64[2];
  __int128 v65;
  uint64_t v66;

  v60 = a5;
  v61 = a4;
  v59 = a3;
  v7 = sub_1DA66F8F8();
  MEMORY[0x1E0C80A78](v7);
  v62 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66C244();
  v58 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66DEF4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v16 = a2;
    sub_1DA66DE4C();
    v17 = a2;
    v18 = a2;
    v19 = sub_1DA66DEDC();
    v20 = sub_1DA66FDA8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v57 = a1;
      v22 = (uint8_t *)v21;
      v55 = swift_slowAlloc();
      *(_QWORD *)&v65 = v55;
      v56 = v12;
      *(_DWORD *)v22 = 136315138;
      v54 = v22 + 4;
      *(_QWORD *)&v64[0] = a2;
      v23 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
      v24 = sub_1DA66F904();
      *(_QWORD *)&v64[0] = sub_1DA49AD00(v24, v25, (uint64_t *)&v65);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DA478000, v19, v20, "Unable to get transcript censor words from bag: %s", v22, 0xCu);
      v26 = v55;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v26, -1, -1);
      v27 = v22;
      a1 = v57;
      MEMORY[0x1DF0A0474](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v56);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  if (a1)
  {
    v28 = a1;
    sub_1DA670144();
    sub_1DA53FDB8();
    sub_1DA6702B8();
    v57 = v28;
    v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (v66)
    {
      sub_1DA49ACF0(&v65, v64);
      sub_1DA49ADD0((uint64_t)v64, (uint64_t)v63);
      if (!swift_dynamicCast()
        || (v30 = sub_1DA66C370(), v32 = v31, swift_bridgeObjectRelease(), v32 >> 60 == 15))
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
      }
      else
      {
        sub_1DA66F8EC();
        v33 = sub_1DA66F8C8();
        v35 = v34;
        sub_1DA49873C(v30, v32);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
        if (v35)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v29 = sub_1DA4981C8(0, v29[2] + 1, 1, v29);
          v36 = v29;
          v37 = v29[2];
          v38 = v36;
          v39 = v36[3];
          if (v37 >= v39 >> 1)
            v38 = sub_1DA4981C8((_QWORD *)(v39 > 1), v37 + 1, 1, v38);
          v38[2] = v37 + 1;
          v40 = &v38[2 * v37];
          v29 = v38;
          v40[4] = v33;
          v40[5] = v35;
        }
      }
      sub_1DA6702B8();
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v9);

  }
  else
  {
    v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v41 = objc_msgSend(objc_allocWithZone((Class)sub_1DA66C8F8()), sel_init);
  v62 = (char *)v29;
  v42 = v29[2];
  if (v42)
  {
    sub_1DA498918();
    v43 = (uint64_t *)(v62 + 40);
    do
    {
      v44 = *v43;
      *(_QWORD *)&v65 = *(v43 - 1);
      *((_QWORD *)&v65 + 1) = v44;
      swift_bridgeObjectRetain();
      sub_1DA670318();
      v45 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
      v46 = objc_msgSend(v45, sel_pf_localizedStringByFoldingWithOptions_, 385);

      v47 = sub_1DA66F8BC();
      v49 = v48;
      swift_bridgeObjectRelease();

      *(_QWORD *)&v65 = v47;
      *((_QWORD *)&v65 + 1) = v49;
      sub_1DA66C8E0();
      swift_bridgeObjectRelease();
      v43 += 2;
      --v42;
    }
    while (v42);
  }
  swift_bridgeObjectRelease();
  v50 = sub_1DA66D06C();
  v51 = v41;
  v52 = sub_1DA5D2A88(v50, v51);
  swift_bridgeObjectRelease();

  v61(v52);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA5D261C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DA66D150();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5D2694(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(sub_1DA66D150() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1DA5D2064(a1, a2, v2 + v6, *(void (**)(unint64_t))v7, *(_QWORD *)(v7 + 8));
}

uint64_t sub_1DA5D26F8(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  swift_bridgeObjectRetain();
  sub_1DA6702AC();
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0)
    goto LABEL_25;
  swift_bridgeObjectRetain();
  sub_1DA6702AC();
  v15 = v14;
  result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0)
    goto LABEL_25;
  v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v17) = 1;
  v18 = 4 << v17;
  v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    result = sub_1DA64D0B0(a1, a5, a6);
    v19 = result;
  }
  v40 = a3;
  v20 = a2;
  v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v23 = a6 & 0x2000000000000000;
    v25 = a5 & 0xFFFFFFFFFFFFLL;
    v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0)
      v32 = HIBYTE(a6) & 0xF;
    else
      v32 = a5 & 0xFFFFFFFFFFFFLL;
    if (v32 < v19 >> 16)
      goto LABEL_43;
    result = sub_1DA66F9B8();
    v22 = result;
    if (v21)
      v26 = 7;
    else
      v26 = 11;
  }
  else
  {
    v22 = v19 >> 16;
    v23 = a6 & 0x2000000000000000;
    v24 = HIBYTE(a6) & 0xF;
    v25 = a5 & 0xFFFFFFFFFFFFLL;
    v26 = 7;
  }
  if (!v23)
    v24 = v25;
  v27 = 4 << (v21 >> 59);
  v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0)
    v27 = 8;
  v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    v33 = v20;
    v34 = v22;
    result = sub_1DA64D0B0(v33, a5, a6);
    v22 = v34;
    v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    v35 = v26 | (v24 << 16);
    v36 = v22;
    result = sub_1DA64D0B0(v35, a5, a6);
    v22 = v36;
    v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0)
        goto LABEL_18;
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    v37 = v22;
    v38 = sub_1DA66F9B8();
    v22 = v37;
    v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        result = HIBYTE(a4) & 0xF;
        v31 = v22 + result;
        if (!__OFADD__(v22, result))
          goto LABEL_23;
      }
      else
      {
        result = v40 & 0xFFFFFFFFFFFFLL;
        v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL))
          goto LABEL_23;
      }
      goto LABEL_39;
    }
LABEL_37:
    v39 = v22;
    result = sub_1DA66F994();
    v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        MEMORY[0x1DF09E308](result);
LABEL_25:
        sub_1DA66FA24();
        sub_1DA5D33F4();
        sub_1DA66F97C();
        swift_bridgeObjectRelease();
        sub_1DA66F97C();
        sub_1DA5D2A3C(a2, a5, a6);
        sub_1DA66F97C();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

unint64_t sub_1DA5D2A3C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1DA66FA24();
  __break(1u);
  return result;
}

unint64_t sub_1DA5D2A88(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  int64_t v58;
  unint64_t result;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  _QWORD v73[2];
  id v74;
  uint64_t v75;
  unint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  id v86;
  unsigned int v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  int64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v74 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0160);
  MEMORY[0x1E0C80A78](v4);
  v100 = (char *)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66C0D0();
  v103 = *(_QWORD *)(v6 - 8);
  v104 = v6;
  MEMORY[0x1E0C80A78](v6);
  v102 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DA66D0A8();
  v9 = *(_QWORD *)(v8 - 8);
  v109 = v8;
  v110 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_1DA66D0B4();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v89 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1DA66D0F0();
  v96 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v14 = (char *)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1DA66D144();
  MEMORY[0x1E0C80A78](v79);
  v84 = (char *)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
    return MEMORY[0x1E0DEE9D8];
  v73[1] = v2;
  v118 = MEMORY[0x1E0DEE9D8];
  v18 = v15;
  v77 = v17;
  sub_1DA509FB8(0, v17, 0);
  v19 = 0;
  v76 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v80 = a1 + v76;
  v78 = v18;
  v20 = *(_QWORD *)(v18 + 72);
  v87 = *MEMORY[0x1E0D7E030];
  v75 = v20;
  v101 = v11;
  v85 = v14;
  while (1)
  {
    v83 = v19;
    v21 = v80 + v20 * v19;
    sub_1DA66D138();
    sub_1DA66D0FC();
    v22 = sub_1DA66D108();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
      break;
    swift_bridgeObjectRelease();
LABEL_29:
    sub_1DA66D120();
    sub_1DA66D12C();
    v69 = v118;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DA509FB8(0, *(_QWORD *)(v69 + 16) + 1, 1);
      v69 = v118;
    }
    v70 = v83;
    v72 = *(_QWORD *)(v69 + 16);
    v71 = *(_QWORD *)(v69 + 24);
    if (v72 >= v71 >> 1)
    {
      sub_1DA509FB8(v71 > 1, v72 + 1, 1);
      v70 = v83;
      v69 = v118;
    }
    v19 = v70 + 1;
    *(_QWORD *)(v69 + 16) = v72 + 1;
    v20 = v75;
    (*(void (**)(unint64_t, char *, uint64_t))(v78 + 32))(v69 + v76 + v72 * v75, v84, v79);
    v118 = v69;
    if (v19 == v77)
      return v69;
  }
  v82 = v21;
  v24 = MEMORY[0x1E0DEE9D8];
  v117 = MEMORY[0x1E0DEE9D8];
  v86 = v74;
  v94 = v23;
  sub_1DA509FE4(0, v23, 0);
  v25 = 0;
  v99 = v117;
  v26 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  v81 = v22;
  v93 = v26;
  v95 = v22 + v26;
  v92 = *(_QWORD *)(v96 + 72);
  while (1)
  {
    v98 = v25;
    sub_1DA66D0E4();
    sub_1DA66D0CC();
    v27 = sub_1DA66D0C0();
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
      break;
    swift_bridgeObjectRelease();
LABEL_24:
    (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v89, v87, v91);
    sub_1DA66D0D8();
    v66 = v99;
    v117 = v99;
    v68 = *(_QWORD *)(v99 + 16);
    v67 = *(_QWORD *)(v99 + 24);
    if (v68 >= v67 >> 1)
    {
      sub_1DA509FE4(v67 > 1, v68 + 1, 1);
      v66 = v117;
    }
    v25 = v98 + 1;
    *(_QWORD *)(v66 + 16) = v68 + 1;
    v99 = v66;
    (*(void (**)(unint64_t, char *, uint64_t))(v96 + 32))(v66 + v93 + v68 * v92, v14, v88);
    v24 = MEMORY[0x1E0DEE9D8];
    if (v25 == v94)
    {
      swift_bridgeObjectRelease();

      goto LABEL_29;
    }
  }
  v116 = v24;
  v107 = v86;
  sub_1DA50A010(0, v28, 0);
  v29 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
  v97 = v27;
  v106 = v29;
  v30 = v27 + v29;
  v105 = *(_QWORD *)(v110 + 72);
  while (1)
  {
    v111 = v28;
    v31 = sub_1DA66D078();
    v33 = v32;
    v108 = v31;
    v114 = v31;
    v115 = v32;
    v34 = v102;
    sub_1DA66C0A0();
    sub_1DA498918();
    v35 = sub_1DA6702F4();
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v34, v104);
    v114 = v35;
    v115 = v37;
    sub_1DA670318();
    v38 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v39 = objc_msgSend(v38, sel_pf_localizedStringByFoldingWithOptions_, 385);

    v40 = sub_1DA66F8BC();
    v42 = v41;

    v114 = v40;
    v115 = v42;
    LOBYTE(v39) = sub_1DA66C8EC();
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    v114 = v108;
    v115 = v33;
    v112 = v35;
    v113 = v37;
    v43 = sub_1DA66C4D8();
    v44 = (uint64_t)v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v100, 1, 1, v43);
    v45 = sub_1DA670330();
    v47 = v46;
    v49 = v48;
    sub_1DA47E2F0(v44, &qword_1EDAE0160);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v49 & 1) == 0)
      break;
LABEL_12:
    v57 = v101;
    (*(void (**)(char *, unint64_t, uint64_t))(v110 + 16))(v101, v30, v109);
    v58 = v111;
LABEL_17:
    v62 = v116;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DA50A010(0, *(_QWORD *)(v62 + 16) + 1, 1);
      v62 = v116;
    }
    v64 = *(_QWORD *)(v62 + 16);
    v63 = *(_QWORD *)(v62 + 24);
    if (v64 >= v63 >> 1)
    {
      sub_1DA50A010(v63 > 1, v64 + 1, 1);
      v62 = v116;
    }
    *(_QWORD *)(v62 + 16) = v64 + 1;
    v65 = v105;
    (*(void (**)(unint64_t, char *, uint64_t))(v110 + 32))(v62 + v106 + v64 * v105, v57, v109);
    v116 = v62;
    v30 += v65;
    v28 = v58 - 1;
    if (!v28)
    {
      swift_bridgeObjectRelease();

      v14 = v85;
      goto LABEL_24;
    }
  }
  v50 = sub_1DA66D078();
  v52 = v51;
  if (sub_1DA66F9D0() <= 3)
  {
    v53 = MEMORY[0x1DF09E3EC](42, 0xE100000000000000, 4);
    v55 = v54;
    v56 = v45;
LABEL_16:
    sub_1DA5D26F8(v56, v47, v53, v55, v50, v52);
    v57 = v101;
    v58 = v111;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA66D09C();
    sub_1DA66D084();
    sub_1DA66D090();
    goto LABEL_17;
  }
  result = sub_1DA66F964();
  if (v47 >> 14 >= result >> 14)
  {
    v60 = result;
    result = sub_1DA66F9D0();
    if (__OFSUB__(result, 1))
      goto LABEL_38;
    v53 = MEMORY[0x1DF09E3EC](42, 0xE100000000000000, result - 1);
    v55 = v61;
    v56 = v60;
    goto LABEL_16;
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_1DA5D33F4()
{
  unint64_t result;

  result = qword_1F026C8C0;
  if (!qword_1F026C8C0)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1F026C8C0);
  }
  return result;
}

_QWORD *SiriIntentDonator.__allocating_init(asPartOf:)()
{
  _QWORD *v0;
  uint64_t v2;

  v0 = (_QWORD *)swift_allocObject();
  v0[4] = 0;
  type metadata accessor for PlaybackController();
  sub_1DA66EDDC();
  v0[2] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE42F8);
  sub_1DA66EDDC();
  swift_release();
  v0[3] = v2;
  return v0;
}

_QWORD *SiriIntentDonator.init(asPartOf:)()
{
  _QWORD *v0;
  uint64_t v2;

  v0[4] = 0;
  type metadata accessor for PlaybackController();
  sub_1DA66EDDC();
  v0[2] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE42F8);
  sub_1DA66EDDC();
  swift_release();
  v0[3] = v2;
  return v0;
}

_QWORD *SiriIntentDonator.__allocating_init(playbackController:donationService:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  swift_allocObject();
  v4 = sub_1DA5D40E8(a1, a2);
  swift_release();
  swift_unknownObjectRelease();
  return v4;
}

_QWORD *SiriIntentDonator.init(playbackController:donationService:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2 = sub_1DA5D40E8(a1, a2);
  swift_release();
  swift_unknownObjectRelease();
  return v2;
}

Swift::Void __swiftcall SiriIntentDonator.beginObserving()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v7[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4360);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_performedCommandsPublisher);
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFEC8);
  sub_1DA66CFD0();
  sub_1DA4841D4(&qword_1EDAE47D0, &qword_1EDADFEC8, MEMORY[0x1E0C95FB8]);
  sub_1DA66E128();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1DA4841D4(&qword_1EDAE4358, &qword_1EDAE4360, MEMORY[0x1E0C95708]);
  v6 = sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)(v1 + 32) = v6;
  swift_release();
}

uint64_t sub_1DA5D3768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE v20[24];
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3C60);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for PlaybackController.QueueCommand();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v20[-v12 - 8];
  sub_1DA5D4644(a1, (uint64_t)v20);
  if (!v21)
  {
    sub_1DA47E2F0((uint64_t)v20, &qword_1EDAE3BD8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_6;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
  v14 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, v14 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_6:
    sub_1DA47E2F0((uint64_t)v6, (uint64_t *)&unk_1EDAE3C60);
    goto LABEL_7;
  }
  sub_1DA5D468C((uint64_t)v6, (uint64_t)v13);
  sub_1DA5D468C((uint64_t)v13, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    v15 = sub_1DA66CFD0();
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v16 + 32))(a2, v10, v15);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v15);
  }
  sub_1DA5CD2C4((uint64_t)v10);
LABEL_7:
  v18 = sub_1DA66CFD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
}

uint64_t sub_1DA5D3970()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA5D39CC();
    return swift_release();
  }
  return result;
}

void sub_1DA5D39CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  void *v20;
  _QWORD aBlock[6];

  v1 = sub_1DA66DEF4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA5D42F8();
  if (v6)
  {
    v9 = v5;
    v10 = v6;
    v11 = v7;
    v12 = v8;
    v13 = *(void **)(v0 + 24);
    swift_bridgeObjectRetain();
    v14 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_bridgeObjectRetain();
      v15 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
    }
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v9;
    v19[3] = v10;
    v19[4] = v11;
    v19[5] = v12;
    aBlock[4] = sub_1DA5D4638;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA5D404C;
    aBlock[3] = &block_descriptor_18;
    v20 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v13, sel_donateEpisodeUuid_stationUuid_isPlaybackFromSiri_completion_, v14, v15, 0, v20);
    _Block_release(v20);

  }
  else
  {
    sub_1DA66DE58();
    v16 = sub_1DA66DEDC();
    v17 = sub_1DA66FD90();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1DA478000, v16, v17, "No identifiers to donate for intent", v18, 2u);
      MEMORY[0x1DF0A0474](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1DA5D3BD8(char a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_1DA66DEF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - v11;
  if ((a1 & 1) != 0)
  {
    sub_1DA66DE58();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v13 = sub_1DA66DEDC();
    v14 = sub_1DA66FDC0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v36 = v32;
      *(_DWORD *)v15 = 136446466;
      v33 = v7;
      swift_bridgeObjectRetain();
      v35 = sub_1DA49AD00(a2, a3, &v36);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2082;
      swift_bridgeObjectRetain();
      v16 = sub_1DA67027C();
      v34 = v6;
      v17 = v16;
      v19 = v18;
      swift_bridgeObjectRelease();
      v35 = sub_1DA49AD00(v17, v19, &v36);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v13, v14, "Successfully donated playback intent for episode uuid: %{public}s - station uuid: %{public}s", (uint8_t *)v15, 0x16u);
      v20 = v32;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v20, -1, -1);
      MEMORY[0x1DF0A0474](v15, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v12, v34);
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v29 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v30 = v12;
  }
  else
  {
    sub_1DA66DE58();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v22 = sub_1DA66DEDC();
    v23 = sub_1DA66FDC0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v36 = v32;
      *(_DWORD *)v24 = 136446466;
      v34 = v6;
      swift_bridgeObjectRetain();
      v35 = sub_1DA49AD00(a2, a3, &v36);
      v33 = v7;
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2082;
      swift_bridgeObjectRetain();
      v25 = sub_1DA67027C();
      v27 = v26;
      swift_bridgeObjectRelease();
      v35 = sub_1DA49AD00(v25, v27, &v36);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v22, v23, "Error donating: %{public}s - station uuid: %{public}s", (uint8_t *)v24, 0x16u);
      v28 = v32;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v28, -1, -1);
      MEMORY[0x1DF0A0474](v24, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v9, v34);
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v29 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v30 = v9;
  }
  return v29(v30, v6);
}

uint64_t sub_1DA5D404C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  sub_1DA66BE60();
  v3(a2);
  return swift_release();
}

uint64_t SiriIntentDonator.deinit()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t SiriIntentDonator.__deallocating_deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *sub_1DA5D40E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4360);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[3] = a2;
  v3[4] = 0;
  v3[2] = a1;
  v12[1] = *(_QWORD *)(a1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_performedCommandsPublisher);
  sub_1DA66BE60();
  swift_unknownObjectRetain();
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFEC8);
  sub_1DA66CFD0();
  sub_1DA4841D4(&qword_1EDAE47D0, &qword_1EDADFEC8, MEMORY[0x1E0C95FB8]);
  sub_1DA66E128();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1DA4841D4(&qword_1EDAE4358, &qword_1EDAE4360, MEMORY[0x1E0C95708]);
  v10 = sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v3[4] = v10;
  swift_release();
  return v3;
}

uint64_t sub_1DA5D4290()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA5D42B4()
{
  return sub_1DA5D3970();
}

uint64_t type metadata accessor for SiriIntentDonator()
{
  return objc_opt_self();
}

uint64_t method lookup function for SiriIntentDonator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriIntentDonator.__allocating_init(asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SiriIntentDonator.__allocating_init(playbackController:donationService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1DA5D42F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6D8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66C7B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66D018();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66CFAC();
  v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 88))(v10, v7);
  v12 = 0;
  if (v11 != *MEMORY[0x1E0D7DF48])
  {
    if (v11 == *MEMORY[0x1E0D7DF58])
    {
LABEL_3:
      (*(void (**)(uint64_t *, uint64_t, _QWORD, _QWORD))(v8 + 96))(v10, v7, 0, 0);
LABEL_4:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v11 == *MEMORY[0x1E0D7DF28])
    {
      (*(void (**)(uint64_t *, uint64_t, _QWORD, _QWORD))(v8 + 96))(v10, v7, 0, 0);
      v14 = *v10;
      if (*(_QWORD *)(v14 + 16))
      {
        v12 = *(_QWORD *)(v14 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return v12;
      }
      goto LABEL_4;
    }
    if (v11 == *MEMORY[0x1E0D7DF20])
    {
      (*(void (**)(uint64_t *, uint64_t, _QWORD, _QWORD))(v8 + 96))(v10, v7, 0, 0);
      swift_bridgeObjectRelease();
      sub_1DA66CF40();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
      {
        sub_1DA47E2F0((uint64_t)v2, &qword_1F026C6D8);
        return 0;
      }
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
      v15 = sub_1DA66C79C();
      v17 = v16;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      if (v17)
        return v15;
      else
        return 0;
    }
    else
    {
      if (v11 != *MEMORY[0x1E0D7DF50])
      {
        if (v11 != *MEMORY[0x1E0D7DF60] && v11 != *MEMORY[0x1E0D7DF18] && v11 != *MEMORY[0x1E0D7DF30])
        {
          if (v11 != *MEMORY[0x1E0D7DF40])
            (*(void (**)(uint64_t *, uint64_t, _QWORD, _QWORD))(v8 + 8))(v10, v7, 0, 0);
          return 0;
        }
        goto LABEL_3;
      }
      (*(void (**)(uint64_t *, uint64_t, _QWORD, _QWORD))(v8 + 96))(v10, v7, 0, 0);
      if (v10[3])
      {
        return v10[2];
      }
      else
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
  }
  return v12;
}

uint64_t sub_1DA5D460C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DA5D4638(char a1)
{
  uint64_t v1;

  return sub_1DA5D3BD8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DA5D4644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA5D468C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaybackController.QueueCommand();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ApplyEpisodeLimitRecommendationActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  uint64_t v13;
  NSUserDefaults v14;

  v4 = sub_1DA66ED70();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02691E8);
  v8 = sub_1DA66F658();
  v9 = type metadata accessor for ApplyEpisodeLimitRecommendationAction();
  v10 = a1 + *(int *)(v9 + 20);
  if ((*(_BYTE *)(a1 + *(int *)(v9 + 24)) & 1) != 0)
  {
    v14.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
    isa = v14.super.isa;
    EpisodeLimitTip.markAsIgnored(in:)(v14);

  }
  else if (*(_QWORD *)(v10 + *(int *)(type metadata accessor for EpisodeLimitTip() + 24)))
  {
    sub_1DA5D4814(v10, a2);
  }
  else
  {
    sub_1DA5D4C54(v10);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D3F990], v4);
  sub_1DA66F640();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_1DA5D4814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *aBlock;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;

  v4 = sub_1DA66E9C8();
  v31 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66EA04();
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA47D774(0, &qword_1EDADE798);
  sub_1DA66EDDC();
  v10 = aBlock;
  sub_1DA66D2F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DA678510;
  v12 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for EpisodeLimitTip() + 24));
  v13 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 32) = v12;
  sub_1DA66F8E0();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, 0, v14, 0);

  v16 = sub_1DA5D5094(a1, a2);
  objc_msgSend(v15, sel_addAction_, v16);

  v17 = sub_1DA5D5294(a1);
  objc_msgSend(v15, sel_addAction_, v17);

  sub_1DA66D2F4();
  v18 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v36 = sub_1DA5D5734;
  v37 = 0;
  v19 = (void *)MEMORY[0x1E0C809B0];
  aBlock = (void *)MEMORY[0x1E0C809B0];
  v33 = 1107296256;
  v34 = sub_1DA5D5594;
  v35 = &block_descriptor_19;
  v20 = _Block_copy(&aBlock);
  swift_release();
  v21 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v18, 1, v20);
  _Block_release(v20);

  objc_msgSend(v15, sel_addAction_, v21);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v22 = (void *)sub_1DA66FEC8();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v15;
  *(_QWORD *)(v23 + 24) = v10;
  v36 = sub_1DA5D586C;
  v37 = v23;
  aBlock = v19;
  v33 = 1107296256;
  v34 = sub_1DA4A9194;
  v35 = &block_descriptor_3;
  v24 = _Block_copy(&aBlock);
  v25 = v15;
  v26 = v10;
  swift_release();
  sub_1DA66E9EC();
  aBlock = (void *)MEMORY[0x1E0DEE9D8];
  sub_1DA47E32C((unint64_t *)&qword_1EDADE6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA529778();
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v9, v6, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v9, v30);
}

uint64_t sub_1DA5D4C54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  Class isa;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];
  NSUserDefaults v44;

  v35 = a1;
  v1 = sub_1DA66E9C8();
  v40 = *(_QWORD *)(v1 - 8);
  v41 = v1;
  MEMORY[0x1E0C80A78](v1);
  v39 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66EA04();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EpisodeLimitTip();
  v34 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v34 + 64);
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1DA66DEF4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66FDF0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v12 + 104))(v15, *MEMORY[0x1E0D7EF98], v11, v13);
  v16 = sub_1DA4EAF00((uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_1DA47D774(0, &qword_1EDAE4BE0);
  sub_1DA66EDDC();
  v17 = (void *)aBlock[0];
  sub_1DA66DED0();
  v18 = sub_1DA66DEDC();
  v19 = sub_1DA66FD90();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1DA478000, v18, v19, "User accepted the new global default", v20, 2u);
    MEMORY[0x1DF0A0474](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = v35;
  v22 = (void *)v16;
  sub_1DA66FDE4();
  v44.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  isa = v44.super.isa;
  EpisodeLimitTip.markAsIgnored(in:)(v44);

  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v24 = (void *)sub_1DA66FE5C();
  sub_1DA55464C(v21, (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = (*(unsigned __int8 *)(v34 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v17;
  sub_1DA56DAFC((uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
  aBlock[4] = sub_1DA5D5BAC;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA4A9194;
  aBlock[3] = &block_descriptor_21;
  v27 = _Block_copy(aBlock);
  v28 = v17;
  v29 = v36;
  sub_1DA66E9EC();
  v42 = MEMORY[0x1E0DEE9D8];
  sub_1DA47E32C((unint64_t *)&qword_1EDADE6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA529778();
  v30 = v39;
  v31 = v41;
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v29, v30, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v38);
  return swift_release();
}

uint64_t sub_1DA5D5068()
{
  return sub_1DA47E32C(&qword_1F026AB78, (uint64_t (*)(uint64_t))type metadata accessor for ApplyEpisodeLimitRecommendationAction, (uint64_t)&protocol conformance descriptor for ApplyEpisodeLimitRecommendationAction);
}

id sub_1DA5D5094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD aBlock[6];

  v4 = type metadata accessor for EpisodeLimitTip();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66D2F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DA678510;
  v9 = *(_QWORD *)(a1 + *(int *)(v4 + 24));
  v10 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = v9;
  sub_1DA66F8E0();
  swift_bridgeObjectRelease();
  sub_1DA55464C(a1, (uint64_t)v7);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = (v6 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_allocObject();
  sub_1DA56DAFC((uint64_t)v7, v13 + v11);
  *(_QWORD *)(v13 + v12) = a2;
  sub_1DA66BE60();
  v14 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1DA5D5A9C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA5D5594;
  aBlock[3] = &block_descriptor_15;
  v15 = _Block_copy(aBlock);
  swift_release();
  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v14, 2, v15);
  _Block_release(v15);

  return v16;
}

id sub_1DA5D5294(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD aBlock[6];
  __int128 v12[2];
  _BYTE v13[40];

  v2 = type metadata accessor for EpisodeLimitTip();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C8E0);
  sub_1DA66EDDC();
  sub_1DA66D2F4();
  sub_1DA55464C(a1, (uint64_t)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA4813E4((uint64_t)v13, (uint64_t)v12);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_1DA56DAFC((uint64_t)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  sub_1DA4841BC(v12, v6 + ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v7 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1DA5D5968;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA5D5594;
  aBlock[3] = &block_descriptor_9_1;
  v8 = _Block_copy(aBlock);
  swift_release();
  v9 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v7, 0, v8);
  _Block_release(v8);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  return v9;
}

id sub_1DA5D5450(void *a1, void *a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id result;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  CGRect v19;

  v4 = objc_msgSend(a1, sel_presentationController);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(a2, sel_view);
    objc_msgSend(v5, sel_setSourceView_, v6);

  }
  v7 = objc_msgSend(a1, sel_presentationController);
  if (!v7)
    return objc_msgSend(a2, sel_presentViewController_animated_completion_, a1, 1, 0);
  v8 = v7;
  result = objc_msgSend(a2, sel_view);
  if (result)
  {
    v10 = result;
    objc_msgSend(result, sel_bounds);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v19.origin.x = v12;
    v19.origin.y = v14;
    v19.size.width = v16;
    v19.size.height = v18;
    objc_msgSend(v8, sel_setSourceRect_, 0.0, 0.0, 240.0, CGRectGetHeight(v19));

    return objc_msgSend(a2, sel_presentViewController_animated_completion_, a1, 1, 0);
  }
  __break(1u);
  return result;
}

void sub_1DA5D5594(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  sub_1DA66BE60();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1DA5D55E4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  NSUserDefaults v16;

  v4 = sub_1DA66DEF4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66DED0();
  v8 = sub_1DA66DEDC();
  v9 = sub_1DA66FD90();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1DA478000, v8, v9, "User requested to see more options in settings", v10, 2u);
    MEMORY[0x1DF0A0474](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  isa = v16.super.isa;
  EpisodeLimitTip.markAsIgnored(in:)(v16);

  v12 = a3[3];
  v13 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v12);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v13 + 8))(0, v12, v13);
}

uint64_t sub_1DA5D5734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;

  v0 = sub_1DA66DEF4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66DED0();
  v4 = sub_1DA66DEDC();
  v5 = sub_1DA66FD90();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1DA478000, v4, v5, "User dismissed tip sheet", v6, 2u);
    MEMORY[0x1DF0A0474](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DA5D581C(uint64_t a1, uint64_t a2)
{
  return ApplyEpisodeLimitRecommendationActionImplementation.perform(_:asPartOf:)(a1, a2);
}

ValueMetadata *type metadata accessor for ApplyEpisodeLimitRecommendationActionImplementation()
{
  return &type metadata for ApplyEpisodeLimitRecommendationActionImplementation;
}

uint64_t sub_1DA5D5840()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DA5D586C()
{
  uint64_t v0;

  return sub_1DA5D5450(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1DA5D5884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for EpisodeLimitTip();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = v0 + v3 + *(int *)(v1 + 20);
  v7 = sub_1DA66CBE0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v5 + *(int *)(v1 + 28);
  v9 = sub_1DA66D63C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + v4);
  return swift_deallocObject();
}

uint64_t sub_1DA5D5968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for EpisodeLimitTip() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DA5D55E4(a1, v1 + v4, (_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DA5D59B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for EpisodeLimitTip();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + *(int *)(v1 + 28);
  v7 = sub_1DA66D63C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5D5A9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EpisodeLimitTip() - 8) + 80);
  return sub_1DA5D4C54(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1DA5D5ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for EpisodeLimitTip();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;

  v4 = v0 + v3;
  v5 = v0 + v3 + *(int *)(v1 + 20);
  v6 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v4 + *(int *)(v1 + 28);
  v8 = sub_1DA66D63C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DA5D5BAC()
{
  type metadata accessor for EpisodeLimitTip();
  return sub_1DA516F44();
}

void sub_1DA5D5C14()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CC24D0]);
  v1 = (void *)sub_1DA66F88C();
  v2 = objc_msgSend(v0, sel_initWithPlayerID_, v1);

  qword_1EDAE3DB0 = (uint64_t)v2;
}

id RemoteFollowCommandCenter.__allocating_init(asPartOf:subscriptionUtility:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v4;
  id v5;
  objc_super v7;

  v4 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v4[OBJC_IVAR____TtC10PodcastsUI25RemoteFollowCommandCenter_subscriptionUtility] = a2;
  v7.receiver = v4;
  v7.super_class = v2;
  v5 = objc_msgSendSuper2(&v7, sel_init);
  swift_release();
  return v5;
}

id RemoteFollowCommandCenter.init(asPartOf:subscriptionUtility:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v3;
  objc_super v5;

  *(_QWORD *)&v2[OBJC_IVAR____TtC10PodcastsUI25RemoteFollowCommandCenter_subscriptionUtility] = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for RemoteFollowCommandCenter();
  v3 = objc_msgSendSuper2(&v5, sel_init);
  swift_release();
  return v3;
}

uint64_t type metadata accessor for RemoteFollowCommandCenter()
{
  return objc_opt_self();
}

void sub_1DA5D5D60()
{
  uint64_t v0;
  id v1;

  if (qword_1EDAE3DB8 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EDAE3DB0, sel_setPlaybackQueueCommand);
  objc_msgSend(v1, sel_addTarget_action_usingExtendedStatus_, v0, sel_remoteSetPlaybackQueueCommand_completion_, 1);

}

uint64_t sub_1DA5D5DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  sub_1DA66BE60();
  v5(a2, a3);
  return swift_release();
}

void sub_1DA5D5E28(char a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void), uint64_t a6, const char *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  void (*v33)(void);
  uint64_t v34;
  uint64_t v35;

  v33 = a5;
  v11 = sub_1DA66DEF4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v30 - v16;
  if ((a1 & 1) != 0)
  {
    sub_1DA66DE70();
    swift_bridgeObjectRetain_n();
    v18 = sub_1DA66DEDC();
    v19 = sub_1DA66FDC0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v30 = a3;
      v31 = a7;
      v21 = v20;
      v22 = swift_slowAlloc();
      *(_DWORD *)v21 = 141558275;
      v34 = 1752392040;
      v35 = v22;
      v32 = v11;
      sub_1DA6702C4();
      *(_WORD *)(v21 + 12) = 2081;
      swift_bridgeObjectRetain();
      v34 = sub_1DA49AD00(v30, a4, &v35);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA478000, v18, v19, v31, (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v22, -1, -1);
      MEMORY[0x1DF0A0474](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v32);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
    v28 = 0;
  }
  else
  {
    sub_1DA66DE70();
    swift_bridgeObjectRetain_n();
    v23 = sub_1DA66DEDC();
    v24 = sub_1DA66FDA8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v31 = (const char *)v12;
      v26 = v25;
      v27 = swift_slowAlloc();
      *(_DWORD *)v26 = 141558275;
      v34 = 1752392040;
      v35 = v27;
      sub_1DA6702C4();
      *(_WORD *)(v26 + 12) = 2081;
      v32 = v11;
      swift_bridgeObjectRetain();
      v34 = sub_1DA49AD00(a3, a4, &v35);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA478000, v23, v24, "We didn't follow the show. Perhaps already subscribed?: %{private,mask.hash}s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v27, -1, -1);
      MEMORY[0x1DF0A0474](v26, -1, -1);

      (*((void (**)(char *, uint64_t))v31 + 1))(v14, v32);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    v28 = 200;
  }
  v29 = objc_msgSend((id)objc_opt_self(), sel_statusWithCode_, v28);
  v33();

}

id RemoteFollowCommandCenter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RemoteFollowCommandCenter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RemoteFollowCommandCenter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RemoteFollowCommandCenter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for RemoteFollowCommandCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteFollowCommandCenter.__allocating_init(asPartOf:subscriptionUtility:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of RemoteFollowCommandCenter.beginObservingPlaybackQueue()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

void sub_1DA5D635C(void *a1, void *a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  BOOL v36;
  char **v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint8_t *v48;
  id v49;
  void (*v50)(char *, uint64_t);
  void (**v51)(_QWORD, _QWORD);
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  id v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void (*v82)(char *, _QWORD, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  void *ObjCClassFromMetadata;
  id v89;
  _QWORD *v90;
  void *v91;
  char *v92;
  char *v93;
  NSObject *v94;
  os_log_type_t v95;
  BOOL v96;
  uint64_t v97;
  uint8_t *v98;
  uint8_t *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  _QWORD *v105;
  char *v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  _QWORD v110[2];
  void (*v111)(char *, uint64_t);
  id v112;
  uint64_t v113;
  uint64_t v114;
  void (**v115)(_QWORD, _QWORD);
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  char *v127;
  uint64_t aBlock;
  uint64_t v129;
  uint64_t (*v130)(uint64_t, uint64_t, uint64_t);
  void *v131;
  void (*v132)(char, uint64_t);
  _QWORD *v133;
  uint64_t ObjectType;

  v125 = sub_1DA66D444();
  v118 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v119 = (char *)v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66D474();
  v121 = *(_QWORD *)(v7 - 8);
  v122 = v7;
  MEMORY[0x1E0C80A78](v7);
  v120 = (char *)v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C8F0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66D498();
  v124 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v123 = (char *)v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DA66DEF4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v116 = (char *)v110 - v19;
  MEMORY[0x1E0C80A78](v20);
  v117 = (char *)v110 - v21;
  MEMORY[0x1E0C80A78](v22);
  v127 = (char *)v110 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v110 - v25;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a3;
  _Block_copy(a3);
  v28 = objc_msgSend(a1, sel_playbackQueue);
  if (v28)
  {
    v29 = v28;
    objc_opt_self();
    v126 = (id)swift_dynamicCastObjCClass();
    if (v126)
    {
      v113 = v12;
      v115 = a3;
      v110[1] = swift_getObjectType();
      sub_1DA66DE70();
      v30 = a2;
      v31 = v29;
      v32 = v30;
      v33 = v31;
      v34 = sub_1DA66DEDC();
      v35 = sub_1DA66FDC0();
      v36 = os_log_type_enabled(v34, v35);
      v37 = &selRef_ams_isActiveAccountCombined;
      v114 = v14;
      if (v36)
      {
        v112 = v33;
        v111 = (void (*)(char *, uint64_t))v27;
        v38 = swift_slowAlloc();
        v110[0] = swift_slowAlloc();
        aBlock = v110[0];
        *(_DWORD *)v38 = 136315394;
        ObjectType = swift_getObjectType();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C8F8);
        v39 = sub_1DA66F904();
        ObjectType = sub_1DA49AD00(v39, v40, &aBlock);
        sub_1DA6702C4();

        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2080;
        v41 = objc_msgSend(v126, sel_trackIdentifiers);
        if (v41)
        {
          v42 = v41;
          v43 = sub_1DA66FA9C();

        }
        else
        {
          v43 = 0;
        }
        v51 = v115;
        ObjectType = v43;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C900);
        v52 = sub_1DA66F904();
        ObjectType = sub_1DA49AD00(v52, v53, &aBlock);
        sub_1DA6702C4();
        v54 = v112;

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA478000, v34, v35, "Received playback queue in %s: %s", (uint8_t *)v38, 0x16u);
        v55 = v110[0];
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v55, -1, -1);
        v56 = v38;
        v33 = v54;
        MEMORY[0x1DF0A0474](v56, -1, -1);

        v50 = *(void (**)(char *, uint64_t))(v15 + 8);
        v14 = v114;
        v50(v26, v114);
        v27 = (uint64_t)v111;
        v37 = &selRef_ams_isActiveAccountCombined;
      }
      else
      {

        v50 = *(void (**)(char *, uint64_t))(v15 + 8);
        v50(v26, v14);
        v51 = v115;
      }
      v57 = objc_msgSend(v126, v37[371]);
      v58 = v125;
      if (!v57)
        goto LABEL_19;
      v59 = v57;
      v60 = sub_1DA66FA9C();

      if (!*(_QWORD *)(v60 + 16))
      {
        swift_bridgeObjectRelease();
LABEL_19:
        v62 = v127;
        sub_1DA66DE70();
        v63 = v33;
        v64 = sub_1DA66DEDC();
        v65 = sub_1DA66FDA8();
        if (os_log_type_enabled(v64, v65))
        {
          v111 = v50;
          v66 = (uint8_t *)swift_slowAlloc();
          v67 = swift_slowAlloc();
          aBlock = v67;
          *(_DWORD *)v66 = 136315138;
          v68 = objc_msgSend(v126, sel_trackIdentifiers);
          if (v68)
          {
            v69 = sub_1DA66FA9C();

            if (*(_QWORD *)(v69 + 16))
              swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          v70 = sub_1DA67027C();
          v72 = v71;
          swift_bridgeObjectRelease();
          ObjectType = sub_1DA49AD00(v70, v72, &aBlock);
          sub_1DA6702C4();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DA478000, v64, v65, "Unable to parse follow queue identifier: %s", v66, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1DF0A0474](v67, -1, -1);
          MEMORY[0x1DF0A0474](v66, -1, -1);

          v111(v127, v114);
          v51 = v115;
        }
        else
        {

          v50(v62, v14);
        }
        v73 = objc_msgSend((id)objc_opt_self(), sel_statusWithCode_, 200);
        ((void (**)(_QWORD, id))v51)[2](v51, v73);
        swift_release();

        return;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1DA66D468();
      v61 = v124;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v11, 1, v113) == 1)
      {
        sub_1DA5D7078((uint64_t)v11);
        goto LABEL_19;
      }
      v111 = v50;
      (*(void (**)(void))(v61 + 32))();
      v74 = v120;
      sub_1DA66D480();
      v75 = v121;
      v76 = v122;
      v77 = (*(uint64_t (**)(char *, uint64_t))(v121 + 88))(v74, v122);
      v78 = *MEMORY[0x1E0D7E478];
      (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v76);
      if (v77 != v78)
      {
        v92 = v123;
        v93 = v117;
        sub_1DA66DE70();
        v94 = sub_1DA66DEDC();
        v95 = sub_1DA66FDA8();
        v96 = os_log_type_enabled(v94, v95);
        v97 = v124;
        if (v96)
        {
          v98 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v98 = 0;
          _os_log_impl(&dword_1DA478000, v94, v95, "Received a playback queue without a subscribe request in compatibility command center handler. Dropping this request.", v98, 2u);
          v99 = v98;
          v97 = v124;
          MEMORY[0x1DF0A0474](v99, -1, -1);
        }

        v111(v93, v14);
        v100 = objc_msgSend((id)objc_opt_self(), sel_statusWithCode_, 200);
        ((void (**)(_QWORD, id))v51)[2](v51, v100);

        (*(void (**)(char *, uint64_t))(v97 + 8))(v92, v113);
        goto LABEL_39;
      }
      v112 = v33;
      v79 = v14;
      v80 = v118;
      v81 = v119;
      v82 = *(void (**)(char *, _QWORD, uint64_t))(v118 + 104);
      v82(v119, *MEMORY[0x1E0D7E448], v58);
      v83 = v123;
      v84 = sub_1DA66D45C();
      v86 = v85;
      v87 = *(void (**)(char *, uint64_t))(v80 + 8);
      v87(v81, v58);
      if (v86)
      {
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
        v89 = (id)sub_1DA66F88C();
        v90 = (_QWORD *)swift_allocObject();
        v90[2] = v84;
        v90[3] = v86;
        v90[4] = sub_1DA5D7068;
        v90[5] = v27;
        v132 = sub_1DA5D7110;
        v133 = v90;
        aBlock = MEMORY[0x1E0C809B0];
        v129 = 1107296256;
        v130 = sub_1DA5D5DE0;
        v131 = &block_descriptor_9_2;
        v91 = _Block_copy(&aBlock);
        sub_1DA66BE60();
        swift_release();
        objc_msgSend(ObjCClassFromMetadata, sel_subscribeToPodcastWithAdamID_completion_, v89, v91);
      }
      else
      {
        v82(v81, *MEMORY[0x1E0D7E450], v58);
        v101 = sub_1DA66D45C();
        v103 = v102;
        v87(v81, v58);
        if (!v103)
        {
          v106 = v116;
          sub_1DA66DE70();
          v107 = sub_1DA66DEDC();
          v108 = sub_1DA66FDA8();
          if (os_log_type_enabled(v107, v108))
          {
            v109 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v109 = 0;
            _os_log_impl(&dword_1DA478000, v107, v108, "Unable to find feed URL or Adam ID in follow request", v109, 2u);
            MEMORY[0x1DF0A0474](v109, -1, -1);
          }

          v111(v106, v79);
          v89 = objc_msgSend((id)objc_opt_self(), sel_statusWithCode_, 200);
          ((void (**)(_QWORD, id))v51)[2](v51, v89);
          goto LABEL_38;
        }
        v104 = (void *)swift_getObjCClassFromMetadata();
        v89 = (id)sub_1DA66F88C();
        v105 = (_QWORD *)swift_allocObject();
        v105[2] = v101;
        v105[3] = v103;
        v105[4] = sub_1DA5D7068;
        v105[5] = v27;
        v132 = sub_1DA5D70BC;
        v133 = v105;
        aBlock = MEMORY[0x1E0C809B0];
        v129 = 1107296256;
        v130 = sub_1DA5D5DE0;
        v131 = &block_descriptor_20;
        v91 = _Block_copy(&aBlock);
        sub_1DA66BE60();
        swift_release();
        objc_msgSend(v104, sel_subscribeToPodcastWithFeedUrl_completion_, v89, v91);
      }
      _Block_release(v91);
LABEL_38:

      (*(void (**)(char *, uint64_t))(v124 + 8))(v83, v113);
LABEL_39:
      swift_release();
      return;
    }

  }
  sub_1DA66DE70();
  v44 = sub_1DA66DEDC();
  v45 = sub_1DA66FDA8();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = v14;
    v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v47 = 0;
    _os_log_impl(&dword_1DA478000, v44, v45, "Received an unrecognized playback queue in compatibility command center handler. Dropping this request.", v47, 2u);
    v48 = v47;
    v14 = v46;
    MEMORY[0x1DF0A0474](v48, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v49 = objc_msgSend((id)objc_opt_self(), sel_statusWithCode_, 200);
  ((void (**)(_QWORD, id))a3)[2](a3, v49);
  swift_release();

}

uint64_t sub_1DA5D7044()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DA5D7068()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1DA5D7078(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C8F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DA5D70BC(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DA5D5E28(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(void))(v2 + 32), *(_QWORD *)(v2 + 40), "Successfully followed show using feed url MR request: %{private,mask.hash}s");
}

uint64_t objectdestroy_2Tm_3()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1DA5D7110(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DA5D5E28(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(void))(v2 + 32), *(_QWORD *)(v2 + 40), "Successfully followed show using adam id MR request: %{private,mask.hash}s");
}

uint64_t AssetProcessingStep<>.invalidate(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17[2];

  v9 = *(_QWORD *)(a2 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, v4, a2, v10);
  sub_1DA4813E4(a1, (uint64_t)v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v12, a2);
  v14 = type metadata accessor for InvalidateImageStoreValueProcessingStep(0, a2, a3, v13);
  return sub_1DA4841BC(v17, a4 + *(int *)(v14 + 36));
}

uint64_t InvalidateImageStoreValueProcessingStep.init(upstream:imageStore:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for InvalidateImageStoreValueProcessingStep(0, a3, a4, v9) + 36);
  return sub_1DA4841BC(a2, v10);
}

uint64_t InvalidateImageStoreValueProcessingStep.metadata.getter()
{
  return sub_1DA66D4A4();
}

uint64_t InvalidateImageStoreValueProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t InvalidateImageStoreValueProcessingStep.imageStore.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DA4813E4(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_1DA5D7298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v7 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66CEBC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for InvalidateImageStoreValueProcessingStep(0, a3, a4, v14);
  sub_1DA66D4A4();
  sub_1DA66CE68();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v16 = &v9[*(int *)(v7 + 64)];
  v17 = *(_QWORD *)v16;
  v18 = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  result = sub_1DA4E8990((uint64_t)v9);
  if (v18)
  {
    v20 = (_QWORD *)(a2 + *(int *)(v15 + 36));
    v21 = v20[3];
    v22 = v20[4];
    __swift_project_boxed_opaque_existential_1(v20, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v17, v18, v21, v22);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA5D73E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for InvalidateImageStoreValueProcessingStep(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_0(v8 + *(int *)(v6 + 36));
  return swift_deallocObject();
}

uint64_t sub_1DA5D7470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InvalidateImageStoreValueProcessingStep(0, v6, v7, a4)- 8)+ 80);
  return sub_1DA5D7298(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t *sub_1DA5D74C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    sub_1DA66BE60();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_1DA5D758C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1DA5D75E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_1DA5D7648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v7);
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_1DA5D76B4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1DA5D7730 + 4 * byte_1DA680F00[v10]))();
  }
}

void sub_1DA5D77B4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1DA5D78A8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1DA5D792CLL);
}

void sub_1DA5D78B0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1DA5D78B8);
  JUMPOUT(0x1DA5D792CLL);
}

void sub_1DA5D78FC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1DA5D792CLL);
}

void sub_1DA5D7904()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1DA5D792CLL);
}

uint64_t sub_1DA5D790C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1DA5D7918);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1DA5D792CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

void sub_1DA5D7944()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v0 = sub_1DA66DF30();
  MEMORY[0x1DF0A039C](MEMORY[0x1E0C957C0], v0);
  sub_1DA66CC70();
  JUMPOUT(0x1DF0A039CLL);
}

id ThumbnailImageResizer.resizedImage(at:to:displayScale:)(double a1, double a2, double a3)
{
  const __CFDictionary *v3;
  void *v4;
  CGImageSource *v5;
  CGImageRef ThumbnailAtIndex;
  CGImageRef v7;
  id v8;

  v3 = (const __CFDictionary *)_s10PodcastsUI21ThumbnailImageResizerV13resizeOptions4size12displayScaleSo15CFDictionaryRefaSo6CGSizeV_12CoreGraphics7CGFloatVtFZ_0(a1, a2, a3);
  sub_1DA66C328();
  v4 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v5 = (CGImageSource *)CGImageSourceCreateWithFile();

  if (!v5)
    goto LABEL_5;
  ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v5, 0, v3);
  if (!ThumbnailAtIndex)
  {

LABEL_5:
    return 0;
  }
  v7 = ThumbnailAtIndex;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_initWithCGImage_, ThumbnailAtIndex);

  return v8;
}

UIImage *ThumbnailImageResizer.resize(image:to:displayScale:)(UIImage *a1, double a2, double a3, double a4)
{
  const __CFDictionary *v4;
  CGImageSource *v5;
  CGImageSource *v6;
  CGImageRef ThumbnailAtIndex;
  CGImageRef v8;
  id v9;

  v4 = (const __CFDictionary *)_s10PodcastsUI21ThumbnailImageResizerV13resizeOptions4size12displayScaleSo15CFDictionaryRefaSo6CGSizeV_12CoreGraphics7CGFloatVtFZ_0(a2, a3, a4);
  v5 = sub_1DA5D7B58(a1);
  if (!v5)
    goto LABEL_6;
  v6 = v5;
  ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v5, 0, v4);
  if (!ThumbnailAtIndex)
  {

    v4 = v6;
LABEL_6:

    return a1;
  }
  v8 = ThumbnailAtIndex;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_initWithCGImage_, ThumbnailAtIndex);

  if (v9)
    return (UIImage *)v9;
  return a1;
}

CGImageSourceRef sub_1DA5D7B58(UIImage *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  void *v10;
  id v11;
  const __CFDictionary *v12;
  CGImage *v13;
  CGImage *v14;
  CGDataProvider *v15;
  CGImageSource *v16;
  CGImageSourceRef v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  NSData *v22;
  NSData *v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  const __CFData *v34;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = sub_1DA66DEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v40 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2220);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  v10 = (void *)*MEMORY[0x1E0CBD240];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD240];
  *(_BYTE *)(inited + 40) = 0;
  v11 = v10;
  sub_1DA63C7D4(inited);
  type metadata accessor for CFString(0);
  sub_1DA5D817C();
  v12 = (const __CFDictionary *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v13 = -[UIImage CGImage](a1, sel_CGImage);
  if (v13)
  {
    v14 = v13;
    v15 = CGImageGetDataProvider(v13);

    if (v15)
    {
      v16 = CGImageSourceCreateWithDataProvider(v15, v12);
      if (v16)
      {
        v17 = v16;
        if ((CGImageSourceGetStatus(v16) + 5) >= 3)
        {
          sub_1DA66DE94();
          v36 = sub_1DA66DEDC();
          v37 = sub_1DA66FD9C();
          if (os_log_type_enabled(v36, v37))
          {
            v38 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v38 = 0;
            _os_log_impl(&dword_1DA478000, v36, v37, "Resized using dataProvider", v38, 2u);
            MEMORY[0x1DF0A0474](v38, -1, -1);
            v39 = v12;
          }
          else
          {
            v39 = v36;
            v36 = v15;
            v15 = v12;
          }

          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
          return v17;
        }

      }
      else
      {
        v17 = v15;
      }

    }
  }
  if ((sub_1DA66CC34() & 1) == 0)
  {
    v22 = UIImagePNGRepresentation(a1);
    if (v22)
    {
      v23 = v22;
      v20 = sub_1DA66C394();
      v21 = v24;

      goto LABEL_13;
    }
LABEL_21:

    return 0;
  }
  v18 = UIImage.heicData(compressionQuality:)(1.0);
  if (v19 >> 60 == 15)
    goto LABEL_21;
  v20 = v18;
  v21 = v19;
LABEL_13:
  sub_1DA66DE94();
  v25 = sub_1DA66DEDC();
  v26 = sub_1DA66FD9C();
  if (os_log_type_enabled(v25, v26))
  {
    v43 = v2;
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v42 = v3;
    v29 = v28;
    v45 = v28;
    *(_DWORD *)v27 = 136315138;
    v30 = sub_1DA66CC34();
    v31 = (v30 & 1) == 0;
    if ((v30 & 1) != 0)
      v32 = 1128875336;
    else
      v32 = 4673104;
    if (v31)
      v33 = 0xE300000000000000;
    else
      v33 = 0xE400000000000000;
    v41 = v5;
    v44 = sub_1DA49AD00(v32, v33, &v45);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA478000, v25, v26, "Resized using image data: (%s)", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v29, -1, -1);
    MEMORY[0x1DF0A0474](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v34 = (const __CFData *)sub_1DA66C37C();
  v17 = CGImageSourceCreateWithData(v34, v12);

  sub_1DA4986F8(v20, v21);
  return v17;
}

UIImage_optional __swiftcall ThumbnailImageResizer.resizedImage(from:options:)(CGImageSourceRef from, CFDictionaryRef options)
{
  CGImageRef ThumbnailAtIndex;
  Swift::Bool v3;
  CGImageRef v4;
  objc_class *v5;
  objc_class *v6;
  UIImage_optional result;

  ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(from, 0, options);
  if (ThumbnailAtIndex)
  {
    v4 = ThumbnailAtIndex;
    v5 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_initWithCGImage_, ThumbnailAtIndex);

  }
  else
  {
    v5 = 0;
  }
  v6 = v5;
  result.value.super.isa = v6;
  result.is_nil = v3;
  return result;
}

Swift::Bool __swiftcall CGImageSourceRef.isValid()()
{
  CGImageSource *v0;

  return (CGImageSourceGetStatus(v0) + 2) < 0xFFFFFFFD;
}

UIImage *sub_1DA5D7FF0(UIImage *a1, double a2, double a3, double a4)
{
  return ThumbnailImageResizer.resize(image:to:displayScale:)(a1, a2, a3, a4);
}

id sub_1DA5D8004(double a1, double a2, double a3)
{
  return ThumbnailImageResizer.resizedImage(at:to:displayScale:)(a1, a2, a3);
}

uint64_t _s10PodcastsUI21ThumbnailImageResizerV13resizeOptions4size12displayScaleSo15CFDictionaryRefaSo6CGSizeV_12CoreGraphics7CGFloatVtFZ_0(double a1, double a2, double a3)
{
  uint64_t inited;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  double v13;
  uint64_t v14;
  void **v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53B0);
  inited = swift_initStackObject();
  v7 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1DA67C310;
  v8 = (void *)*MEMORY[0x1E0CBD238];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD238];
  v9 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 40) = 1;
  v10 = (void *)*MEMORY[0x1E0CBD178];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  *(_BYTE *)(inited + 80) = 1;
  v11 = (void *)*MEMORY[0x1E0CBD190];
  *(_QWORD *)(inited + 104) = v9;
  *(_QWORD *)(inited + 112) = v11;
  *(_BYTE *)(inited + 120) = 1;
  v12 = (void *)*MEMORY[0x1E0CBD2A0];
  *(_QWORD *)(inited + 144) = v9;
  *(_QWORD *)(inited + 152) = v12;
  if (a1 > a2)
    v13 = a1;
  else
    v13 = a2;
  v14 = MEMORY[0x1E0DEF040];
  v15 = (void **)MEMORY[0x1E0CBD2B8];
  *(double *)(inited + 160) = v13 * a3;
  v16 = *v15;
  *(_QWORD *)(inited + 184) = v14;
  *(_QWORD *)(inited + 192) = v16;
  *(_QWORD *)(inited + 224) = v9;
  *(_BYTE *)(inited + 200) = 1;
  v17 = v8;
  v18 = v10;
  v19 = v11;
  v20 = v12;
  v21 = v16;
  sub_1DA63C49C(v7);
  type metadata accessor for CFString(0);
  sub_1DA5D817C();
  v22 = sub_1DA66F748();
  swift_bridgeObjectRelease();
  return v22;
}

ValueMetadata *type metadata accessor for ThumbnailImageResizer()
{
  return &type metadata for ThumbnailImageResizer;
}

unint64_t sub_1DA5D817C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE5360;
  if (!qword_1EDAE5360)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x1DF0A039C](&unk_1DA677B74, v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE5360);
  }
  return result;
}

uint64_t LazyDate.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = a1;
  v6[1] = a2;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A8);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + ((*(unsigned int *)(*(_QWORD *)v7 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1DA47C94C((uint64_t)v6, v7 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v7 + 16));
  sub_1DA47C68C((uint64_t)v6);
  return v7;
}

uint64_t LazyDate.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C430();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A8);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + ((*(unsigned int *)(*(_QWORD *)v7 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1DA47C94C((uint64_t)v4, v7 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v7 + 16));
  sub_1DA47C68C((uint64_t)v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

uint64_t sub_1DA5D83CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a1;
  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66EDB8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66EDAC();
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v21 = v11;
    v22 = a3;
    v13 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v14 = *(_QWORD *)(v8 + 72);
    v15 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    while (1)
    {
      v15(v10, v13, v7);
      sub_1DA66ED94();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v16 = sub_1DA66C430();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) != 1)
        break;
      sub_1DA47E2F0((uint64_t)v6, &qword_1EDADE6C8);
      v13 += v14;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        a3 = v22;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v20 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v22, v6, v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v18 = sub_1DA66C430();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
}

uint64_t static LazyDate.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v8;

  v0 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - v4;
  sub_1DA66CBF8();
  sub_1DA66CBF8();
  v6 = _s10PodcastsUI8LazyDateV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)v5, (uint64_t)v2);
  sub_1DA47C68C((uint64_t)v2);
  sub_1DA47C68C((uint64_t)v5);
  return v6 & 1;
}

uint64_t sub_1DA5D865C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v8;

  v0 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - v4;
  sub_1DA66CBF8();
  sub_1DA66CBF8();
  v6 = _s10PodcastsUI8LazyDateV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)v5, (uint64_t)v2);
  sub_1DA47C68C((uint64_t)v2);
  sub_1DA47C68C((uint64_t)v5);
  return v6 & 1;
}

uint64_t LazyDate.init(from:)(_QWORD *a1)
{
  return sub_1DA5D8E78(a1);
}

uint64_t sub_1DA5D8740@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1DA5D8E78(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t LazyDate.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  uint64_t v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66EDB8();
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1DA66C430();
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA6707F8();
  sub_1DA66CBF8();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    v13 = v25;
    v14 = v12;
    v15 = v26;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v14, v26);
    v17 = v23;
    v16 = v24;
    (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v7, *MEMORY[0x1E0D3FBA0], v24);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v13, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v15);
    v18 = sub_1DA66EDA0();
    v20 = v19;
    sub_1DA47E2F0((uint64_t)v4, &qword_1EDADE6C8);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v16);
    v27 = v18;
    v28 = v20;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1FB8);
    sub_1DA5D8FF8();
    sub_1DA6706FC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v15);
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    sub_1DA6706F0();
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
}

uint64_t sub_1DA5D8A30(_QWORD *a1)
{
  return LazyDate.encode(to:)(a1);
}

_QWORD *sub_1DA5D8A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;

  result = sub_1DA658AD8(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t Date.lazy.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C430();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v10(v9, v1, v5, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v4, v9, v5);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A8);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + ((*(unsigned int *)(*(_QWORD *)v11 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1DA47C94C((uint64_t)v4, v11 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v11 + 16));
  sub_1DA47C68C((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v11;
}

uint64_t _s10PodcastsUI8LazyDateV5StateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  char v25;
  char *v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v32 = sub_1DA66C430();
  v4 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v31 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v31 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C908);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v18[*(int *)(v19 + 48)];
  sub_1DA47C94C(a1, (uint64_t)v18);
  sub_1DA47C94C(a2, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1DA47C94C((uint64_t)v18, (uint64_t)v15);
    v23 = *v15;
    v22 = v15[1];
    if (!swift_getEnumCaseMultiPayload())
    {
LABEL_4:
      if (v23 == *(_QWORD *)v20 && v22 == *((_QWORD *)v20 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v25 = sub_1DA6706D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          sub_1DA47C68C((uint64_t)v18);
LABEL_16:
          v28 = 0;
          return v28 & 1;
        }
      }
      sub_1DA47C68C((uint64_t)v18);
      v28 = 1;
      return v28 & 1;
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DA47C94C((uint64_t)v18, (uint64_t)v12);
    v23 = *v12;
    v22 = v12[1];
    if (swift_getEnumCaseMultiPayload() == 1)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_15:
    sub_1DA47E2F0((uint64_t)v18, &qword_1F026C908);
    goto LABEL_16;
  }
  sub_1DA47C94C((uint64_t)v18, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v32);
    goto LABEL_15;
  }
  v26 = v20;
  v27 = v32;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v26, v32);
  v28 = sub_1DA66C400();
  v29 = *(void (**)(char *, uint64_t))(v4 + 8);
  v29(v6, v27);
  v29(v9, v27);
  sub_1DA47C68C((uint64_t)v18);
  return v28 & 1;
}

uint64_t sub_1DA5D8E78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD v10[4];

  v3 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v3);
  v5 = (_QWORD *)((char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA6707E0();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    *v5 = sub_1DA6706E4();
    v5[1] = v8;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A8);
    v6 = swift_allocObject();
    *(_DWORD *)(v6 + ((*(unsigned int *)(*(_QWORD *)v6 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
    sub_1DA47C94C((uint64_t)v5, v6 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v6 + 16));
    sub_1DA47C68C((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v6;
}

unint64_t sub_1DA5D8FF8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F026A900;
  if (!qword_1F026A900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE1FB8);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1F026A900);
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyDate()
{
  return &type metadata for LazyDate;
}

uint64_t *initializeBufferWithCopyOfBuffer for LazyDate.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v8 = sub_1DA66C430();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for LazyDate.State(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1DA47C68C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v4 = sub_1DA66C430();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for LazyDate.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_1DA66C430();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for LazyDate.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1DA47C68C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_1DA66C430();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t DismissPurgedEpisodesActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3B48);
  v4 = (_QWORD *)swift_task_alloc();
  v3[18] = v4;
  *v4 = v3;
  v4[1] = sub_1DA5D93C4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA5D93C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 160) = v4;
  *v4 = v2;
  v4[1] = sub_1DA5D9484;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA5D9484()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5D94E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[16];
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for DismissPurgedEpisodesAction() + 20));
  v0[22] = v2;
  __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
  v0[12] = v2;
  v0[13] = 1;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[23] = v3;
  sub_1DA560780();
  *v3 = v0;
  v3[1] = sub_1DA5D95C0;
  return sub_1DA66EE90();
}

uint64_t sub_1DA5D95C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

unint64_t sub_1DA5D963C()
{
  unint64_t result;

  result = qword_1F026C918;
  if (!qword_1F026C918)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for DismissPurgedEpisodesActionImplementation, &type metadata for DismissPurgedEpisodesActionImplementation);
    atomic_store(result, (unint64_t *)&qword_1F026C918);
  }
  return result;
}

uint64_t sub_1DA5D9680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1DA4AD77C;
  return DismissPurgedEpisodesActionImplementation.perform(_:asPartOf:)(a1, a2, a3);
}

unint64_t sub_1DA5D96EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026B8C0;
  if (!qword_1F026B8C0)
  {
    v1 = type metadata accessor for DismissPurgedEpisodesAction();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for DismissPurgedEpisodesAction, v1);
    atomic_store(result, (unint64_t *)&qword_1F026B8C0);
  }
  return result;
}

uint64_t sub_1DA5D9734()
{
  sub_1DA5D9784();
  return sub_1DA66F310();
}

ValueMetadata *type metadata accessor for DismissPurgedEpisodesActionImplementation()
{
  return &type metadata for DismissPurgedEpisodesActionImplementation;
}

unint64_t sub_1DA5D9784()
{
  unint64_t result;

  result = qword_1F026C928;
  if (!qword_1F026C928)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for DismissPurgedEpisodesActionImplementation, &type metadata for DismissPurgedEpisodesActionImplementation);
    atomic_store(result, (unint64_t *)&qword_1F026C928);
  }
  return result;
}

uint64_t _s13ConfigurationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13ConfigurationVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s13ConfigurationVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13ConfigurationVMa()
{
  return &_s13ConfigurationVN;
}

void sub_1DA5D99C4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1EA0C6A78;
}

char *sub_1DA5D99D4()
{
  id v0;
  char *result;
  _OWORD v2[2];
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  if (qword_1EDAE0B40 != -1)
    swift_once();
  v2[0] = xmmword_1EDAEAB18;
  v2[1] = *(_OWORD *)&qword_1EDAEAB28;
  v3 = qword_1EDAEAB38;
  v4 = xmmword_1EDAEAB18;
  v5 = *(_OWORD *)&qword_1EDAEAB28;
  v6 = qword_1EDAEAB38;
  v0 = objc_allocWithZone((Class)_s27AutomaticResponseDataSourceCMa());
  sub_1DA497B64((uint64_t)&v4);
  sub_1DA497B64((uint64_t)&v5);
  sub_1DA497B8C((uint64_t)&v6);
  result = sub_1DA562A70((uint64_t *)v2);
  qword_1EDAEAB98 = (uint64_t)result;
  return result;
}

uint64_t sub_1DA5D9A78(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1DA66D5C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1DA5DDB3C((unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0]);
  swift_bridgeObjectRetain();
  v30 = a2;
  v11 = sub_1DA66F7F0();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v26 = v2;
    v27 = a1;
    v28 = ~v12;
    v16 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v29 = v16;
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v16 + 16);
    while (1)
    {
      v19 = v14;
      v20 = v18;
      v18(v9, *(_QWORD *)(v14 + 48) + v17 * v13, v6);
      sub_1DA5DDB3C((unint64_t *)&unk_1F026E440, MEMORY[0x1E0D7E5E8]);
      v21 = sub_1DA66F850();
      v22 = *(void (**)(char *, uint64_t))(v29 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v13 = (v13 + 1) & v28;
      v14 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v26;
        a1 = v27;
        v7 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v30, v6);
    v20(v27, *(_QWORD *)(*v26 + 48) + v17 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = v30;
    v18(v9, v30, v6);
    v31 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DA5DB884((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1DA5D9CCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t *v4;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v7 = a4 & 1;
  v8 = *v4;
  sub_1DA670798();
  swift_bridgeObjectRetain();
  sub_1DA66D774();
  v9 = sub_1DA6707C8() & ~(-1 << *(_BYTE *)(v8 + 32));
  v10 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
    v36 = a2;
    v37 = a3;
    goto LABEL_9;
  }
  v33 = -1 << *(_BYTE *)(v8 + 32);
  v11 = 24 * v9;
  v12 = *(_QWORD *)(v8 + 48) + 24 * v9;
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  v15 = v7;
  v16 = *(_BYTE *)(v12 + 16);
  sub_1DA5242E8(*(_QWORD *)v12, v14, v16);
  v17 = sub_1DA66D768();
  v18 = a3;
  v19 = v17;
  v20 = v13;
  v21 = v18;
  sub_1DA5242F8(v20, v14, v16);
  if ((v19 & 1) == 0)
  {
    v36 = a2;
    v37 = v21;
    v9 = (v9 + 1) & ~v33;
    if (((*(_QWORD *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
    {
      while (1)
      {
        v11 = 24 * v9;
        v22 = *(_QWORD *)(v8 + 48) + 24 * v9;
        v23 = *(_QWORD *)v22;
        v24 = *(_QWORD *)(v22 + 8);
        v25 = *(_BYTE *)(v22 + 16);
        sub_1DA5242E8(*(_QWORD *)v22, v24, v25);
        v26 = sub_1DA66D768();
        sub_1DA5242F8(v23, v24, v25);
        if ((v26 & 1) != 0)
          break;
        v9 = (v9 + 1) & ~v33;
        v7 = v15;
        if (((*(_QWORD *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_9;
      }
      v21 = v37;
      goto LABEL_11;
    }
    v7 = v15;
LABEL_9:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *v34;
    *v34 = 0x8000000000000000;
    sub_1DA5242E8(v36, v37, v7);
    sub_1DA5DBA78(v36, v37, v7, v9, isUniquelyReferenced_nonNull_native);
    *v34 = v38;
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = v36;
    *(_QWORD *)(a1 + 8) = v37;
    result = 1;
    *(_BYTE *)(a1 + 16) = v7 != 0;
    return result;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  sub_1DA5242F8(a2, v21, v15);
  v29 = *(_QWORD *)(*v34 + 48) + v11;
  v30 = *(_QWORD *)v29;
  v31 = *(_QWORD *)(v29 + 8);
  v32 = *(_BYTE *)(v29 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v29;
  *(_QWORD *)(a1 + 8) = v31;
  *(_BYTE *)(a1 + 16) = v32;
  sub_1DA5242E8(v30, v31, v32);
  return 0;
}

uint64_t sub_1DA5D9F74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1DA670798();
  swift_bridgeObjectRetain();
  sub_1DA66F94C();
  v8 = sub_1DA6707C8();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1DA6706D8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1DA6706D8() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1DA5DBCF0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1DA5DA120(_QWORD *a1, void *a2)
{
  return sub_1DA5DA250(a1, a2, (unint64_t *)&qword_1EDADE760, 0x1E0CB37E8, &qword_1F026C950);
}

uint64_t sub_1DA5DA13C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1DA67078C();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DA5DBE88(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1DA5DA234(_QWORD *a1, void *a2)
{
  return sub_1DA5DA250(a1, a2, (unint64_t *)&qword_1EDAE4C00, 0x1E0C97B90, &qword_1F026C948);
}

uint64_t sub_1DA5DA250(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = v5;
  v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v12 = *v5;
    else
      v12 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = a2;
    v14 = sub_1DA6703B4();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_1DA47D774(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1DA6703A8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_1DA5DA518(v12, result + 1, a5, a3);
    v37 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v32 = v27 + 1;
      v33 = v13;
      sub_1DA5DB56C(v32, a5);
      v28 = v37;
    }
    else
    {
      v28 = v26;
      v29 = v13;
    }
    sub_1DA5DB804((uint64_t)v13, v28);
    *v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    v16 = sub_1DA670198();
    v17 = -1 << *(_BYTE *)(v11 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_1DA47D774(0, a3);
      v19 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
      v20 = sub_1DA6701A4();

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
        v23 = sub_1DA6701A4();

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *v5;
    *v5 = 0x8000000000000000;
    v31 = a2;
    sub_1DA5DBFA8((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_1DA5DA518(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_1DA670414();
    v19 = v6;
    sub_1DA67039C();
    if (sub_1DA6703C0())
    {
      sub_1DA47D774(0, a4);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_1DA5DB56C(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_1DA670198();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_1DA6703C0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v6;
}

uint64_t sub_1DA5DA718()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v1 = v0;
  v2 = sub_1DA66D5C4();
  v37 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C958);
  v6 = sub_1DA670408();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_37;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v36 = (_QWORD *)(v5 + 56);
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v34 = v0;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  result = sub_1DA66BE60();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = v36;
    v20 = v36[v18];
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_31;
      v20 = v36[v14];
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_31:
          swift_release();
          v1 = v34;
          goto LABEL_33;
        }
        v20 = v36[v21];
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_39;
            if (v14 >= v35)
              goto LABEL_31;
            v20 = v36[v14];
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = v5;
    v23 = *(_QWORD *)(v5 + 48);
    v24 = *(_QWORD *)(v37 + 72);
    v25 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 32);
    v25(v4, v23 + v24 * v17, v2);
    sub_1DA5DDB3C((unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0]);
    result = sub_1DA66F7F0();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(_QWORD *)(v7 + 48) + v15 * v24, v4, v2);
    ++*(_QWORD *)(v7 + 16);
    v5 = v22;
  }
  swift_release();
  v1 = v34;
  v19 = v36;
LABEL_33:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 > 63)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_37:
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_1DA5DAA58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C930);
  v3 = sub_1DA670408();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = sub_1DA66BE60();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31)
          goto LABEL_33;
        v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_33;
          v16 = v32[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_33;
            v16 = v32[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v30 = 1 << *(_BYTE *)(v2 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v31)
                    goto LABEL_33;
                  v16 = v32[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = *(_QWORD *)(v2 + 48) + 24 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_BYTE *)(v19 + 16);
      sub_1DA670798();
      sub_1DA66D774();
      result = sub_1DA6707C8();
      v23 = -1 << *(_BYTE *)(v4 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_BYTE *)(v12 + 16) = v22;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1DA5DAD68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0098);
  result = sub_1DA670408();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_1DA670798();
      sub_1DA6707A4();
      result = sub_1DA6707C8();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1DA5DB010()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C940);
  v3 = sub_1DA670408();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = sub_1DA66BE60();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1DA670798();
      sub_1DA66F94C();
      result = sub_1DA6707C8();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1DA5DB2EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C938);
  result = sub_1DA670408();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_1DA67078C();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1DA5DB56C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1DA670408();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = sub_1DA66BE60();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_1DA670198();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

unint64_t sub_1DA5DB804(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1DA670198();
  result = sub_1DA670390();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1DA5DB884(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1DA66D5C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1DA5DA718();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1DA5DC138();
      goto LABEL_12;
    }
    sub_1DA5DCB78();
  }
  v13 = *v3;
  sub_1DA5DDB3C((unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0]);
  v14 = sub_1DA66F7F0();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1DA5DDB3C((unint64_t *)&unk_1F026E440, MEMORY[0x1E0D7E5E8]);
      v19 = sub_1DA66F850();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1DA670738();
  __break(1u);
  return result;
}

uint64_t sub_1DA5DBA78(uint64_t result, uint64_t a2, char a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;

  v8 = result;
  v9 = a3 & 1;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0)
  {
    v12 = result;
  }
  else
  {
    if ((a5 & 1) != 0)
    {
      sub_1DA5DAA58();
    }
    else
    {
      if (v11 > v10)
      {
        v12 = result;
        result = (uint64_t)sub_1DA5DC348();
        goto LABEL_17;
      }
      sub_1DA5DCE64();
    }
    v13 = *v5;
    sub_1DA670798();
    sub_1DA66D774();
    result = sub_1DA6707C8();
    a4 = result & ~(-1 << *(_BYTE *)(v13 + 32));
    v14 = v13 + 56;
    if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
    {
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v33 = v13;
      v15 = *(_QWORD *)(v13 + 48) + 24 * a4;
      v16 = *(_QWORD *)v15;
      v17 = *(_QWORD *)(v15 + 8);
      v18 = *(_BYTE *)(v15 + 16);
      sub_1DA5242E8(*(_QWORD *)v15, v17, v18);
      v12 = v8;
      v19 = a2;
      v20 = sub_1DA66D768();
      result = sub_1DA5242F8(v16, v17, v18);
      if ((v20 & 1) != 0)
        goto LABEL_20;
      a4 = (a4 + 1) & ~v31;
      if (((*(_QWORD *)(v14 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
      {
        while (1)
        {
          v21 = *(_QWORD *)(v33 + 48) + 24 * a4;
          v22 = *(_QWORD *)v21;
          v23 = *(_QWORD *)(v21 + 8);
          v24 = *(_BYTE *)(v21 + 16);
          sub_1DA5242E8(*(_QWORD *)v21, v23, v24);
          v25 = sub_1DA66D768();
          result = sub_1DA5242F8(v22, v23, v24);
          if ((v25 & 1) != 0)
            goto LABEL_20;
          a4 = (a4 + 1) & ~v31;
          a2 = v19;
          if (((*(_QWORD *)(v14 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) == 0)
            goto LABEL_17;
        }
      }
      a2 = v19;
    }
    else
    {
      v12 = v8;
    }
  }
LABEL_17:
  v26 = *v32;
  *(_QWORD *)(*v32 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v27 = *(_QWORD *)(v26 + 48) + 24 * a4;
  *(_QWORD *)v27 = v12;
  *(_QWORD *)(v27 + 8) = a2;
  *(_BYTE *)(v27 + 16) = v9 != 0;
  v28 = *(_QWORD *)(v26 + 16);
  v29 = __OFADD__(v28, 1);
  v30 = v28 + 1;
  if (!v29)
  {
    *(_QWORD *)(v26 + 16) = v30;
    return result;
  }
  __break(1u);
LABEL_20:
  result = sub_1DA670738();
  __break(1u);
  return result;
}

uint64_t sub_1DA5DBCF0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1DA5DB010();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1DA5DC694();
      goto LABEL_22;
    }
    sub_1DA5DD3BC();
  }
  v11 = *v4;
  sub_1DA670798();
  sub_1DA66F94C();
  result = sub_1DA6707C8();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1DA6706D8(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1DA670738();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1DA6706D8();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1DA5DBE88(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1DA5DB2EC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1DA5DC844();
      goto LABEL_14;
    }
    sub_1DA5DD668();
  }
  v8 = *v3;
  result = sub_1DA67078C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1DA670738();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void sub_1DA5DBFA8(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1DA5DB56C(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1DA5DC9D8(a4);
      goto LABEL_14;
    }
    sub_1DA5DD8C8(v11, a4);
  }
  v12 = *v5;
  v13 = sub_1DA670198();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1DA47D774(0, a5);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_1DA6701A4();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_1DA670738();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_1DA6701A4();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

void *sub_1DA5DC138()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_1DA66D5C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C958);
  v6 = *v0;
  v7 = sub_1DA6703FC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v17)
      goto LABEL_26;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_26;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
        break;
    }
LABEL_25:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 2;
  if (v23 >= v17)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DA5DC348()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C930);
  v2 = *v0;
  v3 = sub_1DA6703FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = *(_QWORD *)v17;
    *(_QWORD *)(v21 + 8) = v19;
    *(_BYTE *)(v21 + 16) = v20;
    result = (void *)sub_1DA5242E8(v18, v19, v20);
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DA5DC504()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0098);
  v2 = *v0;
  v3 = sub_1DA6703FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DA5DC694()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C940);
  v2 = *v0;
  v3 = sub_1DA6703FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DA5DC844()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C938);
  v2 = *v0;
  v3 = sub_1DA6703FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1DA5DC9D8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1DA6703FC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DA5DCB78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_1DA66D5C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C958);
  v7 = sub_1DA670408();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_33:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = sub_1DA66BE60();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_22;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v19 >= v33)
      goto LABEL_31;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_31;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
        break;
    }
LABEL_21:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_1DA5DDB3C((unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0]);
    result = sub_1DA66F7F0();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 2;
  if (v21 >= v33)
  {
LABEL_31:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_33;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_21;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_31;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_21;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1DA5DCE64()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C930);
  v2 = sub_1DA670408();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v28 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v29 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = sub_1DA66BE60();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v9;
    if (!v15)
    {
      v9 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v9);
      if (!v15)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v9);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    v17 = *(_QWORD *)(v1 + 48) + 24 * v13;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    sub_1DA670798();
    sub_1DA5242E8(v18, v19, v20);
    sub_1DA66D774();
    result = sub_1DA6707C8();
    v21 = -1 << *(_BYTE *)(v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v7 + 8 * v23);
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = *(_QWORD *)(v3 + 48) + 24 * v10;
    *(_QWORD *)v11 = v18;
    *(_QWORD *)(v11 + 8) = v19;
    *(_BYTE *)(v11 + 16) = v20;
    ++*(_QWORD *)(v3 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v9);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DA5DD144()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0098);
  result = sub_1DA670408();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_1DA670798();
    sub_1DA6707A4();
    result = sub_1DA6707C8();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DA5DD3BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C940);
  v3 = sub_1DA670408();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = sub_1DA66BE60();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1DA670798();
    swift_bridgeObjectRetain();
    sub_1DA66F94C();
    result = sub_1DA6707C8();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DA5DD668()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C938);
  result = sub_1DA670408();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_1DA67078C();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DA5DD8C8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1DA670408();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = sub_1DA66BE60();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_1DA670198();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DA5DDB3C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1DA66D5C4();
    result = MEMORY[0x1DF0A039C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s13ConfigurationV12PlayerOptionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DA5DDBC8 + 4 * byte_1DA6811D1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DA5DDBFC + 4 * asc_1DA6811CC[v4]))();
}

uint64_t sub_1DA5DDBFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5DDC04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5DDC0CLL);
  return result;
}

uint64_t sub_1DA5DDC18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5DDC20);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DA5DDC24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5DDC2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV12PlayerOptionOMa()
{
  return &_s13ConfigurationV12PlayerOptionON;
}

unint64_t sub_1DA5DDC4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026C960;
  if (!qword_1F026C960)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026C968);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1F026C960);
  }
  return result;
}

uint64_t BaseObjectGraph.chainingIntentDispatcher(dispatcher:)(void (*a1)(uint64_t, __n128))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v10[48];
  uint64_t v11[5];

  v2 = sub_1DA66EBD8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DA66BE60();
  v6 = sub_1DA66BE60();
  sub_1DA5DDFC0(v6, a1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  sub_1DA4813E4((uint64_t)v11, (uint64_t)v10);
  sub_1DA66EBCC();
  v7 = sub_1DA66EE0C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  swift_release();
  swift_release();
  return v7;
}

uint64_t BaseObjectGraph.satisfyingIfPresent<A>(_:with:)(uint64_t a1, void (*a2)(uint64_t, __n128), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;

  v5 = v4;
  v9 = sub_1DA670294();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - v11;
  v13 = *(_QWORD *)(a4 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v4, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1DA66BE60();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v12, a4);
    v5 = BaseObjectGraph.satisfying<A>(_:with:)(a1, (uint64_t)v17, a4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, a4);
  }
  return v5;
}

uint64_t BaseObjectGraph.conditionalIf(_:do:else:)(char a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;

  if ((a1 & 1) != 0)
    return a2(v4);
  else
    return a4(v4);
}

uint64_t BaseObjectGraph.satisfying<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66BE60();
  sub_1DA66EBE4();
  v7 = BaseObjectGraph.satisfying<A>(_:with:)(a1, (uint64_t)v6, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
  return v7;
}

uint64_t sub_1DA5DDFC0@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, __n128)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  _BYTE v18[40];
  __int128 v19;
  uint64_t v20;
  _BYTE v21[40];

  v6 = sub_1DA66F2BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = &v18[-v12 - 8];
  a2(a1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  sub_1DA66EDC4();
  if (v20)
  {
    sub_1DA4841BC(&v19, (uint64_t)v21);
    sub_1DA4813E4((uint64_t)v21, (uint64_t)&v19);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
    sub_1DA4EB9A4((uint64_t)&v19, (uint64_t)v18);
    sub_1DA66F298();
    sub_1DA5DE170((uint64_t)&v19);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v9, v6);
  }
  else
  {
    sub_1DA5DE170((uint64_t)&v19);
  }
  v14 = MEMORY[0x1E0D407F0];
  a3[3] = v6;
  a3[4] = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v13, v6);
}

uint64_t BaseObjectGraph.map(_:)(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;

  return a1(v1);
}

uint64_t sub_1DA5DE170(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFF88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA5DE1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for GlobalSettingsDeepLinkState(0);
  v4 = swift_allocObject();
  v5 = v4 + OBJC_IVAR____TtC10PodcastsUI27GlobalSettingsDeepLinkState__deepLinkToAutomaticDownloadPicker;
  v7[15] = 0;
  sub_1DA66E08C();
  result = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v1 + 32))(v5, v3, v0);
  qword_1F026C970 = v4;
  return result;
}

uint64_t static GlobalSettingsDeepLinkStateEnvironmentKey.defaultValue.getter()
{
  if (qword_1F0268780 != -1)
    swift_once();
  swift_beginAccess();
  return sub_1DA66BE60();
}

uint64_t static GlobalSettingsDeepLinkStateEnvironmentKey.defaultValue.setter(uint64_t a1)
{
  if (qword_1F0268780 != -1)
    swift_once();
  swift_beginAccess();
  qword_1F026C970 = a1;
  return swift_release();
}

uint64_t (*static GlobalSettingsDeepLinkStateEnvironmentKey.defaultValue.modify())()
{
  if (qword_1F0268780 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1DA5DE3C0@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1F0268780 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = qword_1F026C970;
  return sub_1DA66BE60();
}

uint64_t EnvironmentValues.settingsDeepLinkState.getter()
{
  uint64_t v1;

  sub_1DA5DE470();
  sub_1DA66E4DC();
  return v1;
}

unint64_t sub_1DA5DE470()
{
  unint64_t result;

  result = qword_1F026C978;
  if (!qword_1F026C978)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for GlobalSettingsDeepLinkStateEnvironmentKey, &type metadata for GlobalSettingsDeepLinkStateEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1F026C978);
  }
  return result;
}

uint64_t sub_1DA5DE4B4()
{
  sub_1DA5DE470();
  sub_1DA66BE60();
  return sub_1DA66E4E8();
}

uint64_t EnvironmentValues.settingsDeepLinkState.setter()
{
  sub_1DA5DE470();
  return sub_1DA66E4E8();
}

uint64_t (*EnvironmentValues.settingsDeepLinkState.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_1DA5DE470();
  sub_1DA66E4DC();
  return sub_1DA5DE594;
}

uint64_t sub_1DA5DE594(_QWORD *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0)
    return sub_1DA66E4E8();
  sub_1DA66BE60();
  sub_1DA66E4E8();
  return swift_release();
}

uint64_t sub_1DA5DE614@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1DA5DE470();
  result = sub_1DA66E4DC();
  *a1 = v3;
  return result;
}

ValueMetadata *type metadata accessor for GlobalSettingsDeepLinkStateEnvironmentKey()
{
  return &type metadata for GlobalSettingsDeepLinkStateEnvironmentKey;
}

uint64_t NowPlayingAlignmentCoordinator.fetchPlayerTimestamp(for:)(double a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 400) = v1;
  *(double *)(v2 + 392) = a1;
  return swift_task_switch();
}

_QWORD *sub_1DA5DE690()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  __n128 v4;
  uint64_t (*v5)(__n128);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  double v11;
  _QWORD *v12;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 176))
  {
    sub_1DA4813E4(v0 + 152, v0 + 352);
    sub_1DA47E2F0(v0 + 152, &qword_1EDADFC60);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 376));
    v1 = sub_1DA66D348();
    v3 = v2;
    __swift_destroy_boxed_opaque_existential_0(v0 + 352);
    if ((v3 & 1) == 0)
    {
      v4.n128_u64[0] = v1;
      v5 = *(uint64_t (**)(__n128))(v0 + 8);
      return (_QWORD *)v5(v4);
    }
  }
  else
  {
    sub_1DA47E2F0(v0 + 152, &qword_1EDADFC60);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  if (!*(_QWORD *)(v0 + 136))
  {
    sub_1DA47E2F0(v0 + 112, &qword_1EDADFC38);
    v8 = sub_1DA66D984();
    sub_1DA47E32C(&qword_1F026A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E9D8], MEMORY[0x1E0D7E9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v9, *MEMORY[0x1E0D7E9B8], v8);
    swift_willThrow();
    goto LABEL_9;
  }
  sub_1DA4841BC((__int128 *)(v0 + 112), v0 + 72);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  if (*(_BYTE *)(v0 + 64) == 2)
  {
    v6 = sub_1DA66D984();
    sub_1DA47E32C(&qword_1F026A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E9D8], MEMORY[0x1E0D7E9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v7, *MEMORY[0x1E0D7E9C0], v6);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0(v0 + 72);
LABEL_9:
    v5 = *(uint64_t (**)(__n128))(v0 + 8);
    return (_QWORD *)v5(v4);
  }
  v11 = *(double *)(v0 + 40);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  sub_1DA49CC94(v0 + 192, v0 + 232, &qword_1EDADFC40);
  if (*(_QWORD *)(v0 + 256))
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 256));
    sub_1DA66D048();
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  }
  else
  {
    sub_1DA47E2F0(v0 + 232, &qword_1EDADFC40);
  }
  result = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96));
  if (v11 < 0.0)
  {
    __break(1u);
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 408) = v12;
    *v12 = v0;
    v12[1] = sub_1DA5DEA74;
    return (_QWORD *)sub_1DA66D030();
  }
  return result;
}

uint64_t sub_1DA5DEA74(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(double *)(v3 + 416) = a1;
  *(_QWORD *)(v3 + 424) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5DEADC()
{
  uint64_t v0;

  sub_1DA49CC94(v0 + 192, v0 + 312, &qword_1EDADFC40);
  if (*(_QWORD *)(v0 + 336))
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 336));
    sub_1DA66D054();
    __swift_destroy_boxed_opaque_existential_0(v0 + 312);
  }
  else
  {
    sub_1DA47E2F0(v0 + 312, &qword_1EDADFC40);
  }
  sub_1DA47E2F0(v0 + 192, &qword_1EDADFC40);
  __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  return (*(uint64_t (**)(double))(v0 + 8))(*(double *)(v0 + 416));
}

uint64_t sub_1DA5DEB98()
{
  uint64_t v0;

  sub_1DA49CC94(v0 + 192, v0 + 272, &qword_1EDADFC40);
  if (*(_QWORD *)(v0 + 296))
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 296));
    sub_1DA66D054();
    __swift_destroy_boxed_opaque_existential_0(v0 + 272);
  }
  else
  {
    sub_1DA47E2F0(v0 + 272, &qword_1EDADFC40);
  }
  sub_1DA47E2F0(v0 + 192, &qword_1EDADFC40);
  __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t NowPlayingAlignmentCoordinator.fullTimelineAligner.getter()
{
  return sub_1DA5DEF4C();
}

double sub_1DA5DEC64@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_1DA5DECF0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

uint64_t sub_1DA5DED8C(uint64_t a1)
{
  _QWORD v3[3];
  uint64_t v4;
  _BYTE v5[40];

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA49CC94(a1, (uint64_t)v3, &qword_1EDADFC40);
  sub_1DA66BE60();
  sub_1DA66E0C8();
  sub_1DA49CC94((uint64_t)v5, (uint64_t)v3, &qword_1EDADFC40);
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v3, v4);
    sub_1DA66D03C();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
  }
  else
  {
    sub_1DA47E2F0((uint64_t)v3, &qword_1EDADFC40);
  }
  sub_1DA47E2F0(a1, &qword_1EDADFC40);
  return sub_1DA47E2F0((uint64_t)v5, &qword_1EDADFC40);
}

uint64_t NowPlayingAlignmentCoordinator.$fullTimelineAligner.getter()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__fullTimelineAligner, &qword_1EDADFF28);
}

uint64_t NowPlayingAlignmentCoordinator.scoutingAligner.getter()
{
  return sub_1DA5DEF4C();
}

uint64_t sub_1DA5DEEF4()
{
  return sub_1DA52D4F4();
}

uint64_t sub_1DA5DEF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA5DEFDC(a1, a2, a3, a4, &qword_1EDADFC38);
}

uint64_t NowPlayingAlignmentCoordinator.$scoutingAligner.getter()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__scoutingAligner, &qword_1EDADFF18);
}

uint64_t NowPlayingAlignmentCoordinator.alignment.getter()
{
  return sub_1DA5DEF4C();
}

uint64_t sub_1DA5DEF4C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  return swift_release();
}

uint64_t sub_1DA5DEFA8()
{
  return sub_1DA52D4F4();
}

uint64_t sub_1DA5DEFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA5DEFDC(a1, a2, a3, a4, &qword_1EDADFC60);
}

uint64_t sub_1DA5DEFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  _BYTE v8[40];

  sub_1DA49CC94(a1, (uint64_t)v8, a5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA49CC94((uint64_t)v8, (uint64_t)&v7, a5);
  sub_1DA66BE60();
  sub_1DA66E0C8();
  return sub_1DA47E2F0((uint64_t)v8, a5);
}

uint64_t NowPlayingAlignmentCoordinator.$alignment.getter()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__alignment, &qword_1EDADFF48);
}

uint64_t NowPlayingAlignmentCoordinator.transcriptModel.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  return swift_release();
}

uint64_t sub_1DA5DF108()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  return swift_release();
}

uint64_t sub_1DA5DF174(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC48);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1DA49CC94(a1, (uint64_t)&v9 - v6, (uint64_t *)&unk_1EDADFC48);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA49CC94((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1EDADFC48);
  sub_1DA66BE60();
  sub_1DA66E0C8();
  return sub_1DA47E2F0((uint64_t)v7, (uint64_t *)&unk_1EDADFC48);
}

uint64_t NowPlayingAlignmentCoordinator.$transcriptModel.getter()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__transcriptModel, &qword_1EDADFF38);
}

uint64_t NowPlayingAlignmentCoordinator.error.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA5DF2F4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA5DF374(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

uint64_t NowPlayingAlignmentCoordinator.$error.getter()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__error, &qword_1EDADFF70);
}

uint64_t NowPlayingAlignmentCoordinator.__allocating_init(fullTimelineAligner:scoutingAligner:alignment:transcriptModel:transcriptProvider:alignmentCache:playbackController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  NowPlayingAlignmentCoordinator.init(fullTimelineAligner:scoutingAligner:alignment:transcriptModel:transcriptProvider:alignmentCache:playbackController:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t NowPlayingAlignmentCoordinator.init(fullTimelineAligner:scoutingAligner:alignment:transcriptModel:transcriptProvider:alignmentCache:playbackController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[32];
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  v61 = a6;
  v62 = a7;
  v60 = a5;
  v59 = a4;
  v58 = a3;
  v57 = a2;
  v56 = a1;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF70);
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v53 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF38);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  MEMORY[0x1E0C80A78](v9);
  v50 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC48);
  MEMORY[0x1E0C80A78](v66);
  v63 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v44 = (char *)&v43 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF48);
  v64 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF18);
  v18 = *(_QWORD *)(v17 - 8);
  v47 = v17;
  v48 = v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF28);
  v22 = *(_QWORD *)(v21 - 8);
  v45 = v21;
  v46 = v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__fullTimelineAligner;
  v72 = 0;
  v70 = 0u;
  v71 = 0u;
  sub_1DA49CC94((uint64_t)&v70, (uint64_t)v69, &qword_1EDADFC40);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC40);
  sub_1DA66E08C();
  sub_1DA47E2F0((uint64_t)&v70, &qword_1EDADFC40);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v24, v21);
  v26 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__scoutingAligner;
  v72 = 0;
  v70 = 0u;
  v71 = 0u;
  sub_1DA49CC94((uint64_t)&v70, (uint64_t)v69, &qword_1EDADFC38);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC38);
  sub_1DA66E08C();
  sub_1DA47E2F0((uint64_t)&v70, &qword_1EDADFC38);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v26, v20, v17);
  v27 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__alignment;
  v72 = 0;
  v70 = 0u;
  v71 = 0u;
  sub_1DA49CC94((uint64_t)&v70, (uint64_t)v69, &qword_1EDADFC60);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC60);
  sub_1DA66E08C();
  sub_1DA47E2F0((uint64_t)&v70, &qword_1EDADFC60);
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v27, v16, v65);
  v28 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__transcriptModel;
  v29 = sub_1DA66D150();
  v30 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v44, 1, 1, v29);
  sub_1DA49CC94(v30, v63, (uint64_t *)&unk_1EDADFC48);
  v31 = v50;
  sub_1DA66E08C();
  sub_1DA47E2F0(v30, (uint64_t *)&unk_1EDADFC48);
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v28, v31, v68);
  v32 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__error;
  *(_QWORD *)&v70 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0118);
  v33 = v53;
  sub_1DA66E08C();
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v32, v33, v55);
  v34 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_url;
  v35 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_timelineAlignerProvider) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_subscriptions) = MEMORY[0x1E0DEE9E8];
  v36 = v56;
  sub_1DA49CC94(v56, (uint64_t)&v70, &qword_1EDADFC40);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v25, v45);
  sub_1DA49CC94((uint64_t)&v70, (uint64_t)v69, &qword_1EDADFC40);
  sub_1DA66E08C();
  sub_1DA47E2F0((uint64_t)&v70, &qword_1EDADFC40);
  swift_endAccess();
  v37 = v57;
  sub_1DA49CC94(v57, (uint64_t)&v70, &qword_1EDADFC38);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v26, v47);
  sub_1DA49CC94((uint64_t)&v70, (uint64_t)v69, &qword_1EDADFC38);
  sub_1DA66E08C();
  sub_1DA47E2F0((uint64_t)&v70, &qword_1EDADFC38);
  swift_endAccess();
  v38 = v58;
  sub_1DA49CC94(v58, (uint64_t)&v70, &qword_1EDADFC60);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v27, v65);
  sub_1DA49CC94((uint64_t)&v70, (uint64_t)v69, &qword_1EDADFC60);
  sub_1DA66E08C();
  sub_1DA47E2F0((uint64_t)&v70, &qword_1EDADFC60);
  swift_endAccess();
  v39 = v59;
  sub_1DA49CC94(v59, v30, (uint64_t *)&unk_1EDADFC48);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v28, v68);
  sub_1DA49CC94(v30, v63, (uint64_t *)&unk_1EDADFC48);
  sub_1DA66E08C();
  sub_1DA47E2F0(v30, (uint64_t *)&unk_1EDADFC48);
  swift_endAccess();
  sub_1DA47E2F0(v39, (uint64_t *)&unk_1EDADFC48);
  sub_1DA47E2F0(v38, &qword_1EDADFC60);
  sub_1DA47E2F0(v37, &qword_1EDADFC38);
  sub_1DA47E2F0(v36, &qword_1EDADFC40);
  sub_1DA4841BC(v60, v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider);
  v40 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_alignmentCache;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v40, v61, v41);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_playbackController) = v62;
  return v7;
}

Swift::Void __swiftcall NowPlayingAlignmentCoordinator.clear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[40];
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC48);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v16[-v8 - 8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1DA6705A0())
    v10 = sub_1DA5CE038(MEMORY[0x1E0DEE9D8]);
  else
    v10 = MEMORY[0x1E0DEE9E8];
  v11 = (unint64_t *)(v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_subscriptions);
  swift_beginAccess();
  *v11 = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_timelineAlignerProvider) = 0;
  swift_release();
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  sub_1DA5DED8C((uint64_t)&v17);
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA49CC94((uint64_t)&v17, (uint64_t)v16, &qword_1EDADFC38);
  sub_1DA66BE60();
  sub_1DA66E0C8();
  sub_1DA47E2F0((uint64_t)&v17, &qword_1EDADFC38);
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA49CC94((uint64_t)&v17, (uint64_t)v16, &qword_1EDADFC60);
  sub_1DA66BE60();
  sub_1DA66E0C8();
  sub_1DA47E2F0((uint64_t)&v17, &qword_1EDADFC60);
  v12 = sub_1DA66D150();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA49CC94((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1EDADFC48);
  sub_1DA66BE60();
  sub_1DA66E0C8();
  sub_1DA47E2F0((uint64_t)v9, (uint64_t *)&unk_1EDADFC48);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)&v17 = 0;
  sub_1DA66BE60();
  sub_1DA66E0C8();
  v13 = sub_1DA66C358();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 1, 1, v13);
  v14 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_url;
  swift_beginAccess();
  sub_1DA5DFF28((uint64_t)v3, v14);
  swift_endAccess();
}

uint64_t sub_1DA5DFF28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NowPlayingAlignmentCoordinator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__fullTimelineAligner;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__scoutingAligner;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__alignment;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__transcriptModel;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__error;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  sub_1DA47E2F0(v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_url, &qword_1EDAE5020);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider);
  v11 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_alignmentCache;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NowPlayingAlignmentCoordinator.__deallocating_deinit()
{
  NowPlayingAlignmentCoordinator.deinit();
  return swift_deallocClassInstance();
}

uint64_t NowPlayingAlignmentCoordinator.align(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  id v51;
  double v52;
  double v53;
  float v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83[3];
  uint64_t v84;
  double v85;
  uint64_t v86;
  unsigned __int8 v87;
  char v88[8];

  v82 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v76 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C988);
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v63 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C990);
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v65 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C998);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v69 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C9A0);
  v73 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C9A8);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66CC4C();
  v79 = *(_QWORD *)(v10 - 8);
  v80 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_1DA66D5C4();
  v13 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC68);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DA66D378();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1DA66C76C();
  if ((result & 1) != 0)
  {
    v60 = v6;
    v61 = v9;
    v62 = v22;
    NowPlayingAlignmentCoordinator.clear()();
    v24 = *MEMORY[0x1E0D7E5B0];
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
    v77 = v18;
    v26 = v78;
    v25(v15, v24, v78);
    v27 = v79;
    v28 = v80;
    (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v12, *MEMORY[0x1E0D7DAB0], v80);
    sub_1DA66D96C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
    v29 = *(void (**)(char *, uint64_t))(v13 + 8);
    v30 = (uint64_t)v77;
    v29(v15, v26);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v30, 1, v19) == 1)
    {
      sub_1DA47E2F0(v30, &qword_1EDADFC68);
      v31 = sub_1DA66D984();
      sub_1DA47E32C(&qword_1F026A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E9D8], MEMORY[0x1E0D7E9E0]);
      swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v32, *MEMORY[0x1E0D7E9D0], v31);
      return swift_willThrow();
    }
    else
    {
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 32);
      v80 = v20;
      v34 = v62;
      v35 = v19;
      v33(v62, v30, v19);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v81 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider), *(_QWORD *)(v81 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider + 24));
      v83[0] = (id)sub_1DA66D420();
      swift_allocObject();
      swift_weakInit();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A488);
      sub_1DA4841D4(&qword_1F026A490, &qword_1F026A488, MEMORY[0x1E0C95D90]);
      v36 = v63;
      sub_1DA66E134();
      swift_release();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC48);
      sub_1DA4841D4(&qword_1F026C9B0, &qword_1F026C988, MEMORY[0x1E0C957C0]);
      v37 = v65;
      v38 = v66;
      sub_1DA66E128();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v38);
      sub_1DA4841D4(&qword_1F026C9B8, &qword_1F026C990, MEMORY[0x1E0C95708]);
      v39 = v69;
      v40 = v68;
      sub_1DA66E1F4();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C9C0);
      sub_1DA4841D4(&qword_1F026C9C8, &qword_1F026C998, MEMORY[0x1E0C95B08]);
      sub_1DA4841D4(&qword_1F026C9D0, &qword_1F026C9C0, MEMORY[0x1E0C960B0]);
      v41 = v72;
      v42 = v71;
      sub_1DA66E1B8();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v42);
      sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
      v83[0] = (id)sub_1DA66FEC8();
      v43 = sub_1DA66FE8C();
      v44 = (uint64_t)v76;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v76, 1, 1, v43);
      sub_1DA4841D4(&qword_1F026C9D8, &qword_1F026C9A0, MEMORY[0x1E0C959F8]);
      sub_1DA4A89F0();
      v45 = v61;
      v46 = v60;
      sub_1DA66E248();
      sub_1DA47E2F0(v44, (uint64_t *)&unk_1EDAE20A0);

      (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v46);
      swift_allocObject();
      swift_weakInit();
      sub_1DA4841D4(&qword_1F026C9E0, &qword_1F026C9A8, MEMORY[0x1E0C95CB8]);
      v47 = v75;
      sub_1DA66E284();
      swift_release();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v45, v47);
      swift_beginAccess();
      sub_1DA66DF84();
      swift_endAccess();
      swift_release();
      if ((sub_1DA66D960() & 1) != 0)
      {
        v48 = v80;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1DA66E0BC();
        swift_release();
        swift_release();
        v49 = v87;
        v50 = 0.0;
        if (v87 != 2)
        {
          v51 = v83[0];
          v52 = *(double *)&v84;
          v53 = v85;
          v54 = *(float *)&v86;
          sub_1DA66C3C4();
          v56 = v53 + (v55 - *(double *)&v51) * v54;
          if (v56 >= v52)
            v56 = v52;
          v50 = fmax(v56, 0.0);
        }
        v83[0] = (id)sub_1DA54BC88();
        v57 = swift_allocObject();
        swift_weakInit();
        v58 = swift_allocObject();
        *(_QWORD *)(v58 + 16) = v57;
        *(double *)(v58 + 24) = v50;
        *(_BYTE *)(v58 + 32) = v49 == 2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C9E8);
        sub_1DA4841D4(&qword_1F026C9F0, &qword_1F026C9E8, MEMORY[0x1E0C95D90]);
        sub_1DA66E284();
        swift_release();
        swift_release();
        swift_beginAccess();
        sub_1DA66DF84();
        swift_endAccess();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v34, v35);
      }
      else
      {
        *(double *)&v84 = COERCE_DOUBLE(sub_1DA66D7EC());
        v85 = MEMORY[0x1E0D7E828];
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)v83);
        sub_1DA66D7E0();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1DA49CC94((uint64_t)v83, (uint64_t)v88, &qword_1EDADFC60);
        sub_1DA66BE60();
        sub_1DA66E0C8();
        sub_1DA47E2F0((uint64_t)v83, &qword_1EDADFC60);
        return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v34, v35);
      }
    }
  }
  return result;
}

uint64_t sub_1DA5E0B84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC48);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66CFDC();
  v6 = sub_1DA66D150();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v8, 1, v2);
}

uint64_t sub_1DA5E0C80(unint64_t *a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  unint64_t v24;
  _DWORD v25[4];
  unint64_t v26;
  unint64_t v27;
  char v28[40];
  uint64_t v29[5];

  LODWORD(v4) = a4;
  v7 = sub_1DA66D8E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    if (v11 >> 62)
      goto LABEL_19;
    v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      if (!v14)
      {
LABEL_15:
        v29[3] = sub_1DA66D900();
        v29[4] = MEMORY[0x1E0D7E938];
        __swift_allocate_boxed_opaque_existential_1(v29);
        sub_1DA66D8F4();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1DA49CC94((uint64_t)v29, (uint64_t)v28, &qword_1EDADFC60);
        sub_1DA66BE60();
        sub_1DA66E0C8();
        sub_1DA47E2F0((uint64_t)v29, &qword_1EDADFC60);
        return swift_release();
      }
      v29[0] = MEMORY[0x1E0DEE9D8];
      result = sub_1DA50A03C(0, v14 & ~(v14 >> 63), 0);
      if (v14 < 0)
        break;
      v25[3] = v4;
      v26 = a3;
      v27 = v13;
      v4 = 0;
      v15 = v29[0];
      v13 = v11 & 0xC000000000000001;
      while (1)
      {
        v16 = v13 ? (id)MEMORY[0x1DF09EE48](v4, v11) : *(id *)(v11 + 8 * v4 + 32);
        v17 = v16;
        objc_msgSend(v16, sel_playerStartTime);
        v19 = v18;
        objc_msgSend(v17, sel_playerEndTime);
        if (v19 > v20)
          break;
        objc_msgSend(v17, sel_referenceStartTime);
        v22 = v21;
        objc_msgSend(v17, sel_referenceEndTime);
        if (v22 > v23)
          goto LABEL_18;
        objc_msgSend(v17, sel_matchedBeginning);
        objc_msgSend(v17, sel_matchedEnd);
        sub_1DA66D8DC();

        v29[0] = v15;
        a3 = *(_QWORD *)(v15 + 16);
        v24 = *(_QWORD *)(v15 + 24);
        if (a3 >= v24 >> 1)
        {
          sub_1DA50A03C(v24 > 1, a3 + 1, 1);
          v15 = v29[0];
        }
        ++v4;
        *(_QWORD *)(v15 + 16) = a3 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * a3, v10, v7);
        if (v14 == v4)
          goto LABEL_15;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      v14 = sub_1DA6705A0();
      swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  return result;
}

uint64_t NowPlayingAlignmentCoordinator.align(asset:to:)(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v49;
  char *v50;
  void *v51;
  void *v52;
  uint64_t OpaqueTypeConformance2;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  id v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  char v183[8];
  id v184[5];
  uint64_t v185;

  v3 = v2;
  v180 = a2;
  v181 = a1;
  v139 = *v2;
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C9F8);
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v136 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA00);
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v141 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA08);
  v145 = *(_QWORD *)(v146 - 8);
  MEMORY[0x1E0C80A78](v146);
  v144 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA10);
  v148 = *(_QWORD *)(v149 - 8);
  MEMORY[0x1E0C80A78](v149);
  v147 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA18);
  v151 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v150 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA20);
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x1E0C80A78](v155);
  v153 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA28);
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v127 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA30);
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v130 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA38);
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v133 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA40);
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v115 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA48);
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v118 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA50);
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v121 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA58);
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v124 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA60);
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v112 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA68);
  v140 = *(_QWORD *)(v174 - 8);
  MEMORY[0x1E0C80A78](v174);
  v173 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC18);
  v109 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v111 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v20);
  v172 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA70);
  v160 = *(_QWORD *)(v161 - 8);
  MEMORY[0x1E0C80A78](v161);
  v159 = (char *)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA78);
  v163 = *(_QWORD *)(v164 - 8);
  MEMORY[0x1E0C80A78](v164);
  v162 = (char *)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA80);
  v166 = *(_QWORD *)(v167 - 8);
  MEMORY[0x1E0C80A78](v167);
  v165 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA88);
  v169 = *(_QWORD *)(v170 - 8);
  MEMORY[0x1E0C80A78](v170);
  v168 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C988);
  v157 = *(_QWORD *)(v158 - 8);
  MEMORY[0x1E0C80A78](v158);
  v156 = (char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CA90);
  v171 = *(_QWORD *)(v179 - 8);
  MEMORY[0x1E0C80A78](v179);
  v178 = (char *)&v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = (_QWORD *)sub_1DA66CC4C();
  v28 = *(v176 - 1);
  MEMORY[0x1E0C80A78](v176);
  v30 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1DA66D5C4();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v109 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC68);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v109 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_1DA66D378();
  v182 = *(_QWORD *)(v185 - 8);
  MEMORY[0x1E0C80A78](v185);
  v177 = (char *)&v109 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v109 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  NowPlayingAlignmentCoordinator.clear()();
  v42 = objc_msgSend(v181, sel_URL);
  sub_1DA66C304();

  v43 = sub_1DA66C358();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v41, 0, 1, v43);
  v175 = v3;
  v44 = (uint64_t)v3 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_url;
  swift_beginAccess();
  sub_1DA5DFF28((uint64_t)v41, v44);
  swift_endAccess();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v34, *MEMORY[0x1E0D7E5B0], v31);
  v45 = v176;
  (*(void (**)(char *, _QWORD, _QWORD *))(v28 + 104))(v30, *MEMORY[0x1E0D7DAB0], v176);
  sub_1DA66D96C();
  (*(void (**)(char *, _QWORD *))(v28 + 8))(v30, v45);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48))(v37, 1, v185) == 1)
  {
    sub_1DA47E2F0((uint64_t)v37, &qword_1EDADFC68);
    v46 = sub_1DA66D984();
    sub_1DA47E32C(&qword_1F026A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E9D8], MEMORY[0x1E0D7E9E0]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v47, *MEMORY[0x1E0D7E9D0], v46);
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v177, v37, v185);
    v49 = v175;
    __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v175 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider), *(_QWORD *)((char *)v175 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider + 24));
    v184[0] = (id)sub_1DA66D420();
    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A488);
    sub_1DA4841D4(&qword_1F026A490, &qword_1F026A488, MEMORY[0x1E0C95D90]);
    v50 = v156;
    sub_1DA66E134();
    swift_release();
    swift_release();
    v51 = (void *)sub_1DA4841D4(&qword_1F026C9B0, &qword_1F026C988, MEMORY[0x1E0C957C0]);
    v52 = (void *)v158;
    sub_1DA66E104();
    (*(void (**)(char *, void *))(v157 + 8))(v50, v52);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC48);
    v184[0] = v52;
    v184[1] = v51;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v54 = v159;
    v158 = OpaqueTypeConformance2;
    sub_1DA66E128();
    sub_1DA4841D4(&qword_1F026CA98, &qword_1F026CA70, MEMORY[0x1E0C95708]);
    v55 = v162;
    v56 = v161;
    sub_1DA66E1F4();
    (*(void (**)(char *, uint64_t))(v160 + 8))(v54, v56);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C9C0);
    sub_1DA4841D4(&qword_1F026CAA0, &qword_1F026CA78, MEMORY[0x1E0C95B08]);
    sub_1DA4841D4(&qword_1F026C9D0, &qword_1F026C9C0, MEMORY[0x1E0C960B0]);
    v57 = v165;
    v58 = v164;
    sub_1DA66E1B8();
    (*(void (**)(char *, uint64_t))(v163 + 8))(v55, v58);
    v59 = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
    v184[0] = (id)sub_1DA66FEC8();
    v60 = sub_1DA66FE8C();
    v61 = (uint64_t)v172;
    v176 = *(_QWORD **)(*(_QWORD *)(v60 - 8) + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v176)(v172, 1, 1, v60);
    sub_1DA4841D4(&qword_1F026CAA8, &qword_1F026CA80, MEMORY[0x1E0C959F8]);
    v62 = sub_1DA4A89F0();
    v63 = v168;
    v64 = v167;
    v164 = v62;
    sub_1DA66E248();
    sub_1DA47E2F0(v61, (uint64_t *)&unk_1EDAE20A0);

    (*(void (**)(char *, uint64_t))(v166 + 8))(v57, v64);
    swift_allocObject();
    swift_weakInit();
    sub_1DA4841D4(&qword_1F026CAB0, &qword_1F026CA88, MEMORY[0x1E0C95CB8]);
    v65 = v170;
    sub_1DA66E284();
    swift_release();
    (*(void (**)(char *, uint64_t))(v169 + 8))(v63, v65);
    v66 = (uint64_t)v49 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_subscriptions;
    swift_beginAccess();
    sub_1DA66DF84();
    swift_endAccess();
    swift_release();
    if ((sub_1DA66D960() & 1) != 0)
    {
      v170 = v66;
      v67 = *(_QWORD *)((char *)v49 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_playbackController);
      sub_1DA66BE60();
      v68 = sub_1DA66D978();
      v69 = (uint64_t)v111;
      (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v111, (uint64_t)v49 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_alignmentCache, v110);
      v70 = swift_allocObject();
      swift_weakInit();
      type metadata accessor for NowPlayingAlignmentCoordinator.TimelineAlignerProvider(0);
      swift_allocObject();
      v71 = sub_1DA5E457C(v67, v68, v69, (uint64_t)sub_1DA5E4560, v70);
      swift_release();
      swift_release();
      *(_QWORD *)((char *)v49 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_timelineAlignerProvider) = v71;
      sub_1DA66BE60();
      swift_release();
      sub_1DA47D774(0, &qword_1F026A498);
      v72 = v112;
      sub_1DA66E128();
      sub_1DA4841D4(&qword_1F026CAB8, &qword_1F026CA60, MEMORY[0x1E0C95708]);
      v73 = v114;
      sub_1DA66E1F4();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v72, v73);
      v180 = v71;
      sub_1DA66BE60();
      sub_1DA66DF78();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CAC0);
      v169 = sub_1DA4841D4(&qword_1F026CAC8, &qword_1F026CA68, MEMORY[0x1E0C95B08]);
      sub_1DA4841D4(&qword_1F026CAD0, &qword_1F026CAC0, MEMORY[0x1E0C95FB8]);
      v162 = (char *)v59;
      v74 = v115;
      sub_1DA66E224();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC40);
      sub_1DA4841D4(&qword_1F026CAD8, &qword_1F026CA40, MEMORY[0x1E0C95B78]);
      v75 = v118;
      v76 = v117;
      sub_1DA66E17C();
      (*(void (**)(char *, uint64_t))(v116 + 8))(v74, v76);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CAE0);
      sub_1DA4841D4(&qword_1F026CAE8, &qword_1F026CA48, MEMORY[0x1E0C95950]);
      sub_1DA4841D4(&qword_1F026CAF0, &qword_1F026CAE0, MEMORY[0x1E0C960B0]);
      v77 = v60;
      v163 = v60;
      v78 = v121;
      v79 = v120;
      sub_1DA66E1B8();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v75, v79);
      v184[0] = (id)sub_1DA66FEC8();
      v80 = (uint64_t)v172;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v176)(v172, 1, 1, v77);
      sub_1DA4841D4(&qword_1F026CAF8, &qword_1F026CA50, MEMORY[0x1E0C959F8]);
      v81 = v124;
      v82 = v123;
      sub_1DA66E248();
      sub_1DA47E2F0(v80, (uint64_t *)&unk_1EDAE20A0);

      (*(void (**)(char *, uint64_t))(v122 + 8))(v78, v82);
      swift_allocObject();
      swift_weakInit();
      sub_1DA4841D4(&qword_1F026CB00, &qword_1F026CA58, MEMORY[0x1E0C95CB8]);
      v83 = v126;
      sub_1DA66E284();
      swift_release();
      (*(void (**)(char *, uint64_t))(v125 + 8))(v81, v83);
      swift_beginAccess();
      sub_1DA66DF84();
      swift_endAccess();
      swift_release();
      v84 = swift_allocObject();
      v85 = v181;
      *(_QWORD *)(v84 + 16) = v181;
      v86 = swift_allocObject();
      *(_QWORD *)(v86 + 16) = sub_1DA52D87C;
      *(_QWORD *)(v86 + 24) = v84;
      v87 = v85;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC38);
      v88 = v127;
      sub_1DA66E17C();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A4B0);
      sub_1DA4841D4(&qword_1F026CB08, &qword_1F026CA28, MEMORY[0x1E0C95950]);
      sub_1DA4841D4(&qword_1F026A4C0, &qword_1F026A4B0, MEMORY[0x1E0C960B0]);
      v89 = v130;
      v90 = v129;
      sub_1DA66E1B8();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v88, v90);
      v184[0] = (id)sub_1DA66FEC8();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v176)(v80, 1, 1, v163);
      sub_1DA4841D4(&qword_1F026CB10, &qword_1F026CA30, MEMORY[0x1E0C959F8]);
      v91 = v133;
      v92 = v132;
      sub_1DA66E248();
      sub_1DA47E2F0(v80, (uint64_t *)&unk_1EDAE20A0);

      (*(void (**)(char *, uint64_t))(v131 + 8))(v89, v92);
      swift_allocObject();
      swift_weakInit();
      sub_1DA4841D4(&qword_1F026CB18, &qword_1F026CA38, MEMORY[0x1E0C95CB8]);
      v93 = v135;
      sub_1DA66E284();
      swift_release();
      (*(void (**)(char *, uint64_t))(v134 + 8))(v91, v93);
      swift_beginAccess();
      sub_1DA66DF84();
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF28);
      v94 = v136;
      sub_1DA66E098();
      swift_endAccess();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CB20);
      sub_1DA4841D4(&qword_1F026CB28, &qword_1F026C9F8, MEMORY[0x1E0C96190]);
      v95 = v141;
      v96 = v138;
      sub_1DA66E128();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v94, v96);
      v97 = swift_allocObject();
      v98 = v139;
      *(_QWORD *)(v97 + 16) = v87;
      *(_QWORD *)(v97 + 24) = v98;
      v99 = v87;
      sub_1DA66DF78();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CB30);
      sub_1DA4841D4(&qword_1F026CB38, &qword_1F026CA00, MEMORY[0x1E0C95708]);
      sub_1DA4841D4(&qword_1F026CB40, &qword_1F026CB30, MEMORY[0x1E0C95D90]);
      v100 = v144;
      v101 = v143;
      sub_1DA66E2A8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v95, v101);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC60);
      sub_1DA4841D4(&qword_1F026CB48, &qword_1F026CA08, MEMORY[0x1E0C95B78]);
      v102 = v147;
      v103 = v146;
      sub_1DA66E17C();
      (*(void (**)(char *, uint64_t))(v145 + 8))(v100, v103);
      swift_allocObject();
      swift_weakInit();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CB50);
      sub_1DA4841D4(&qword_1F026CB58, &qword_1F026CA10, MEMORY[0x1E0C95950]);
      sub_1DA4841D4(&qword_1F026CB60, &qword_1F026CB50, MEMORY[0x1E0C960B0]);
      v104 = v150;
      v105 = v149;
      sub_1DA66E1B8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v102, v105);
      v184[0] = (id)sub_1DA66FEC8();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v176)(v80, 1, 1, v163);
      sub_1DA4841D4(&qword_1F026CB68, &qword_1F026CA18, MEMORY[0x1E0C959F8]);
      v106 = v153;
      v107 = v152;
      sub_1DA66E248();
      sub_1DA47E2F0(v80, (uint64_t *)&unk_1EDAE20A0);

      (*(void (**)(char *, uint64_t))(v151 + 8))(v104, v107);
      swift_allocObject();
      swift_weakInit();
      sub_1DA4841D4((unint64_t *)&unk_1F026CB70, &qword_1F026CA20, MEMORY[0x1E0C95CB8]);
      v108 = v155;
      sub_1DA66E284();
      swift_release();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v106, v108);
      swift_beginAccess();
      sub_1DA66DF84();
      swift_endAccess();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v173, v174);
    }
    else
    {
      v184[3] = (id)sub_1DA66D7EC();
      v184[4] = (id)MEMORY[0x1E0D7E828];
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)v184);
      sub_1DA66D7E0();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1DA49CC94((uint64_t)v184, (uint64_t)v183, &qword_1EDADFC60);
      sub_1DA66BE60();
      sub_1DA66E0C8();
      sub_1DA47E2F0((uint64_t)v184, &qword_1EDADFC60);
    }
    (*(void (**)(char *, uint64_t))(v171 + 8))(v178, v179);
    return (*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v177, v185);
  }
}

void sub_1DA5E2A80(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v27 = a5;
  v8 = sub_1DA66E9C8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66EA04();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  if (*a1)
  {
    v26 = v14;
    sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
    v18 = v17;
    v19 = sub_1DA66FEC8();
    v25 = v9;
    v20 = (void *)v19;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = a2;
    *(_QWORD *)(v21 + 24) = v17;
    aBlock[4] = a4;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA4A9194;
    aBlock[3] = v27;
    v22 = _Block_copy(aBlock);
    v23 = v17;
    sub_1DA66BE60();
    swift_release();
    sub_1DA66E9EC();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1DA47E32C((unint64_t *)&qword_1EDADE6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
    sub_1DA4841D4((unint64_t *)&qword_1EDADE6F0, (uint64_t *)&unk_1EDADE6E0, MEMORY[0x1E0DEAF38]);
    sub_1DA670378();
    MEMORY[0x1DF09E8CC](0, v16, v11, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v26);
  }
}

uint64_t sub_1DA5E2CB4(uint64_t a1, void *a2)
{
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  id v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = sub_1DA66D984();
    sub_1DA47E32C(&qword_1F026A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E9D8], MEMORY[0x1E0D7E9E0]);
    swift_allocError();
    *v5 = a2;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v5, *MEMORY[0x1E0D7E9B0], v4);
    swift_getKeyPath();
    swift_getKeyPath();
    v6 = a2;
    return sub_1DA66E0C8();
  }
  return result;
}

uint64_t sub_1DA5E2DB4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC48);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66DEF4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  sub_1DA66DE4C();
  v12 = v11;
  v13 = v11;
  v14 = sub_1DA66DEDC();
  v15 = sub_1DA66FDA8();
  if (os_log_type_enabled(v14, v15))
  {
    v26 = v4;
    v16 = swift_slowAlloc();
    v27 = a2;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v28 = (uint64_t)v11;
    v29 = v18;
    v25 = v8;
    *(_DWORD *)v17 = 136315138;
    v19 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v20 = sub_1DA66F904();
    v24 = v7;
    v28 = sub_1DA49AD00(v20, v21, &v29);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v14, v15, "Failed to construct TranscriptModel: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v18, -1, -1);
    MEMORY[0x1DF0A0474](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v22 = sub_1DA66D150();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 1, 1, v22);
  return sub_1DA66E02C();
}

uint64_t sub_1DA5E3028(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC48);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA49CC94(a1, (uint64_t)v7, (uint64_t *)&unk_1EDADFC48);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA49CC94((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1EDADFC48);
    sub_1DA66BE60();
    sub_1DA66E0C8();
    sub_1DA47E2F0((uint64_t)v7, (uint64_t *)&unk_1EDADFC48);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA5E3154()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  char v6;
  char v7;
  uint64_t v8;
  _QWORD v10[4];
  _QWORD v11[3];
  uint64_t v12;

  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return 0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_release();
  v0 = v12;
  if (!v12)
  {
    sub_1DA47E2F0((uint64_t)v11, &qword_1EDADFC60);
    return 0;
  }
  v1 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v2 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v2 + 16))(v5, v3);
  sub_1DA47E2F0((uint64_t)v11, &qword_1EDADFC60);
  v6 = sub_1DA66D33C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  if ((v6 & 1) == 0)
    return 0;
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return 1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_release();
  if (!v12)
  {
    sub_1DA47E2F0((uint64_t)v11, &qword_1EDADFC60);
    return 1;
  }
  sub_1DA4813E4((uint64_t)v11, (uint64_t)v10);
  sub_1DA47E2F0((uint64_t)v11, &qword_1EDADFC60);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_1DA66D354();
  v8 = v7 & 1;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  return v8;
}

uint64_t sub_1DA5E3390@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _QWORD v5[5];

  v3 = *a1;
  v5[3] = sub_1DA66DA44();
  v5[4] = MEMORY[0x1E0D7EA88];
  v5[0] = v3;
  sub_1DA5E4C48((uint64_t)v5, a2);
  return sub_1DA66BE60();
}

uint64_t sub_1DA5E33E4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA5E347C(a1, "Failed to construct timeline aligner: %s", &qword_1EDADFC40, a2);
}

uint64_t sub_1DA5E33F8(uint64_t a1)
{
  uint64_t result;
  _BYTE v3[40];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA49CC94(a1, (uint64_t)v3, &qword_1EDADFC40);
    sub_1DA5DED8C((uint64_t)v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA5E3468@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA5E347C(a1, "Failed to construct scouting aligner: %s", &qword_1EDADFC38, a2);
}

uint64_t sub_1DA5E347C@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;

  v8 = sub_1DA66DEF4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_1DA66DE4C();
  v13 = v12;
  v14 = v12;
  v15 = sub_1DA66DEDC();
  v16 = sub_1DA66FDA8();
  if (os_log_type_enabled(v15, v16))
  {
    v27 = a3;
    v17 = swift_slowAlloc();
    v28 = a4;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v29 = (uint64_t)v12;
    *(_QWORD *)&v30[0] = v19;
    v25 = a2;
    *(_DWORD *)v18 = 136315138;
    v20 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v21 = sub_1DA66F904();
    v26 = v8;
    v29 = sub_1DA49AD00(v21, v22, (uint64_t *)v30);
    a3 = v27;
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v15, v16, v25, v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v19, -1, -1);
    MEMORY[0x1DF0A0474](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v31 = 0;
  memset(v30, 0, sizeof(v30));
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_1DA66E02C();
}

uint64_t sub_1DA5E36A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA49CC94(a1, a2, &qword_1EDADFC40);
}

uint64_t sub_1DA5E36C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1DA66DEF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66DE4C();
  v10 = sub_1DA66DEDC();
  v11 = sub_1DA66FDC0();
  if (os_log_type_enabled(v10, v11))
  {
    v20 = v7;
    v12 = swift_slowAlloc();
    v19 = v6;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v23 = v14;
    v21 = a2;
    *(_DWORD *)v13 = 136315138;
    v15 = sub_1DA670828();
    v22 = sub_1DA49AD00(v15, v16, &v23);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA478000, v10, v11, "[%s] Finished creating timeline aligner. Starting alignment", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v14, -1, -1);
    MEMORY[0x1DF0A0474](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DA66D060();
  *a3 = result;
  return result;
}

uint64_t sub_1DA5E38B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA4813E4(a1, a2);
}

uint64_t sub_1DA5E38BC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;
  uint64_t v33;

  v6 = sub_1DA66DEF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  sub_1DA66DE4C();
  v11 = v10;
  v12 = v10;
  v13 = sub_1DA66DEDC();
  v14 = sub_1DA66FDA8();
  if (os_log_type_enabled(v13, v14))
  {
    v29 = a2 + 16;
    v15 = swift_slowAlloc();
    v30 = a3;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v28 = v6;
    v18 = v17;
    *(_QWORD *)&v31[0] = v17;
    *(_DWORD *)v16 = 136315138;
    v33 = (uint64_t)v10;
    v19 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v20 = sub_1DA66F904();
    v33 = sub_1DA49AD00(v20, v21, (uint64_t *)v31);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v13, v14, "Failed alignment: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v18, -1, -1);
    MEMORY[0x1DF0A0474](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v22 = sub_1DA66D984();
    sub_1DA47E32C(&qword_1F026A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E9D8], MEMORY[0x1E0D7E9E0]);
    v23 = swift_allocError();
    *v24 = v10;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0D7E9C8], v22);
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)&v31[0] = v23;
    v25 = v10;
    sub_1DA66E0C8();
  }
  v32 = 0;
  memset(v31, 0, sizeof(v31));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC60);
  return sub_1DA66E02C();
}

uint64_t sub_1DA5E3BB8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  _BYTE v6[40];
  _BYTE v7[40];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA49CC94(a1, (uint64_t)v7, a3);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA49CC94((uint64_t)v7, (uint64_t)v6, a3);
    sub_1DA66BE60();
    sub_1DA66E0C8();
    sub_1DA47E2F0((uint64_t)v7, a3);
    return swift_release();
  }
  return result;
}

BOOL sub_1DA5E3C88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v4;
  BOOL v5;
  _BOOL4 v6;
  double v7;

  v2 = *(unsigned __int8 *)(a2 + 48);
  if (*(_BYTE *)(a1 + 48) == 2)
    return v2 == 2;
  v4 = round(*(double *)(a1 + 32));
  v5 = v2 == 2;
  v6 = v2 != 2;
  v7 = round(*(double *)(a2 + 32));
  if (v5)
    v7 = 0.0;
  return v4 == v7 && v6;
}

uint64_t sub_1DA5E3CD0(double *a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  double v13;

  v1 = *a1;
  v2 = *((_QWORD *)a1 + 1);
  v3 = *((_QWORD *)a1 + 2);
  v4 = *((_QWORD *)a1 + 3);
  v5 = a1[4];
  v6 = *((_QWORD *)a1 + 5);
  v7 = *((_QWORD *)a1 + 6);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot;
    v10 = *(double *)(result
                    + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot
                    + 32);
    v11 = *(unsigned __int8 *)(result
                             + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot
                             + 48);
    *(double *)v9 = v1;
    *(_QWORD *)(v9 + 8) = v2;
    *(_QWORD *)(v9 + 16) = v3;
    *(_QWORD *)(v9 + 24) = v4;
    *(double *)(v9 + 32) = v5;
    *(_QWORD *)(v9 + 40) = v6;
    *(_QWORD *)(v9 + 48) = v7;
    if (v7 != 2 && v11 != 2)
    {
      v12 = v5 - v10;
      v13 = v10 - v5;
      if (v12 > 10.0 || v13 > 1.0)
        sub_1DA5E3FE4();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA5E3DAC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD v14[2];

  v2 = v1;
  v4 = sub_1DA66DDD4();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1DA66DEF4();
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC18);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v2 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_catalog);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_catalog) = a1;
  v11 = a1;

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_cache, v6);
  sub_1DA47E32C(&qword_1F026CD10, type metadata accessor for NowPlayingAlignmentCoordinator.TimelineAlignerProvider, (uint64_t)&unk_1DA6815B0);
  sub_1DA66DE88();
  sub_1DA66DD98();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  sub_1DA66FE20();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7F280]), sel_init);
  sub_1DA66DA44();
  swift_allocObject();
  sub_1DA66BE60();
  v14[1] = sub_1DA66DA38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CAC0);
  swift_allocObject();
  v12 = sub_1DA66DFFC();
  *(_QWORD *)(v2
            + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_fullTimelineAligner) = v12;
  sub_1DA66BE60();
  swift_release();
  return v12;
}

void sub_1DA5E3FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  double v8;
  uint64_t (*v9)(uint64_t, double);
  id v10;
  uint64_t v11;
  id v12;
  _QWORD v13[2];

  v1 = sub_1DA66DDD4();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1DA66DEF4();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC18);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot
                + 48) != 2)
  {
    v7 = *(void **)(v0 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_catalog);
    if (v7)
    {
      if (*(_QWORD *)(v0
                     + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_fullTimelineAligner))
      {
        v8 = *(double *)(v0
                       + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot
                       + 32);
        v9 = *(uint64_t (**)(uint64_t, double))(v0
                                                       + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_shouldResetAlignment);
        v10 = v7;
        v11 = sub_1DA66BE60();
        if ((v9(v11, v8) & 1) != 0)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v0 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_cache, v3);
          v13[0] = *(_QWORD *)(v0 + 24);
          sub_1DA47E32C(&qword_1F026CD10, type metadata accessor for NowPlayingAlignmentCoordinator.TimelineAlignerProvider, (uint64_t)&unk_1DA6815B0);
          v12 = v10;
          sub_1DA66DE88();
          sub_1DA66DD98();
          sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
          sub_1DA66FE20();
          objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7F280]), sel_init);
          sub_1DA66DA44();
          swift_allocObject();
          sub_1DA66BE60();
          v13[1] = sub_1DA66DA38();
          sub_1DA66DFE4();
          swift_release();
          swift_release();

        }
        else
        {

          swift_release();
        }
      }
    }
  }
}

uint64_t sub_1DA5E4278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_cache;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_catalog));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DA5E4318()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  char v16;

  v1 = (__int128 *)(v0 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot
                 + 48);
  if (v2 == 2)
    return 0;
  v4 = *((_QWORD *)v1 + 5);
  v5 = *((_QWORD *)v1 + 4);
  v6 = *((_QWORD *)v1 + 3);
  v7 = *((_QWORD *)v1 + 2);
  v9 = *v1;
  sub_1DA66C3C4();
  v10 = v9;
  v11 = v7;
  v12 = v6;
  v13 = v5;
  v14 = v4;
  v15 = v2 & 0x101;
  v16 = BYTE2(v2) & 1;
  return MPCPlayerItemDurationSnapshotGetElapsedTimeForCurrentTime((uint64_t)&v10, v8);
}

uint64_t sub_1DA5E43E0(void *a1, uint64_t a2)
{
  return NowPlayingAlignmentCoordinator.align(asset:to:)(a1, a2);
}

uint64_t sub_1DA5E4400(double a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v1;
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1DA52D48C;
  *(_QWORD *)(v5 + 400) = v4;
  *(double *)(v5 + 392) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA5E4468()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1DA5E448C(void **a1)
{
  uint64_t v1;

  sub_1DA5E2A80(a1, v1, (uint64_t)&unk_1EA0D19D0, (uint64_t)sub_1DA5E4CE4, (uint64_t)&block_descriptor_81);
}

uint64_t sub_1DA5E44BC(uint64_t a1)
{
  return sub_1DA5E3028(a1);
}

uint64_t sub_1DA5E44D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5E44F8(unint64_t *a1)
{
  uint64_t v1;

  return sub_1DA5E0C80(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

double MPCPlayerItemDurationSnapshotGetElapsedTimeForCurrentTime(uint64_t a1, double a2)
{
  double v2;

  v2 = *(double *)(a1 + 32) + (a2 - *(double *)a1) * *(float *)(a1 + 40);
  if (v2 >= *(double *)(a1 + 24))
    v2 = *(double *)(a1 + 24);
  return fmax(v2, 0.0);
}

void sub_1DA5E4530(void **a1)
{
  uint64_t v1;

  sub_1DA5E2A80(a1, v1, (uint64_t)&unk_1EA0D1980, (uint64_t)sub_1DA5E4C9C, (uint64_t)&block_descriptor_21);
}

uint64_t sub_1DA5E4560()
{
  return sub_1DA5E3154();
}

uint64_t type metadata accessor for NowPlayingAlignmentCoordinator.TimelineAlignerProvider(uint64_t a1)
{
  return sub_1DA48EED8(a1, qword_1F026CBD8);
}

uint64_t sub_1DA5E457C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = v5;
  v23 = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1D78);
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CD28);
  v26 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v6
            + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_fullTimelineAligner) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_catalog) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_subscriptions) = MEMORY[0x1E0DEE9E8];
  v17 = v6 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_QWORD *)(v17 + 48) = 2;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v18 = v6 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_cache;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC18);
  v25 = *(_QWORD *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v18, a3, v19);
  v20 = (_QWORD *)(v6
                 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_shouldResetAlignment);
  *v20 = v23;
  v20[1] = a5;
  swift_beginAccess();
  sub_1DA66BE60();
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E30);
  sub_1DA66E098();
  swift_endAccess();
  sub_1DA4841D4(&qword_1F026CD30, (uint64_t *)&unk_1EDAE1D78, MEMORY[0x1E0C96190]);
  sub_1DA66E164();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
  swift_allocObject();
  swift_weakInit();
  sub_1DA4841D4((unint64_t *)&unk_1F026CD38, &qword_1F026CD28, MEMORY[0x1E0C958E0]);
  sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v14);
  swift_beginAccess();
  sub_1DA66DF84();
  swift_endAccess();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a3, v19);
  return v6;
}

uint64_t sub_1DA5E485C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1DA5E3DAC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DA5E4884(uint64_t a1)
{
  return sub_1DA5E33F8(a1);
}

uint64_t sub_1DA5E488C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA5E48B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5E48D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1DA52C104(a1, *(uint64_t (**)(_QWORD))(v2 + 16), a2);
}

uint64_t sub_1DA5E48DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA5E3BB8(a1, v1, &qword_1EDADFC38);
}

uint64_t sub_1DA5E490C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA5E4930@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1DA5E36C8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1DA5E4938@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DA5E38BC(a1, v2, a2);
}

uint64_t sub_1DA5E4940(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA5E3BB8(a1, v1, &qword_1EDADFC60);
}

uint64_t sub_1DA5E4978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__fullTimelineAligner, &qword_1EDADFF28);
}

uint64_t sub_1DA5E499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1F026C9F8, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__fullTimelineAligner, &qword_1EDADFF28);
}

uint64_t sub_1DA5E49C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__scoutingAligner, &qword_1EDADFF18);
}

uint64_t sub_1DA5E49EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1F026A5E8, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__scoutingAligner, &qword_1EDADFF18);
}

uint64_t sub_1DA5E4A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__alignment, &qword_1EDADFF48);
}

uint64_t sub_1DA5E4A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1F026CD20, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__alignment, &qword_1EDADFF48);
}

uint64_t sub_1DA5E4A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__transcriptModel, &qword_1EDADFF38);
}

uint64_t sub_1DA5E4A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1F026CD18, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__transcriptModel, &qword_1EDADFF38);
}

uint64_t sub_1DA5E4AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__error, &qword_1EDADFF70);
}

uint64_t sub_1DA5E4ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1F026A5E0, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__error, &qword_1EDADFF70);
}

uint64_t sub_1DA5E4B08()
{
  return type metadata accessor for NowPlayingAlignmentCoordinator(0);
}

uint64_t method lookup function for NowPlayingAlignmentCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingAlignmentCoordinator.__allocating_init(fullTimelineAligner:scoutingAligner:alignment:transcriptModel:transcriptProvider:alignmentCache:playbackController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

void sub_1DA5E4B24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDADFC20)
  {
    sub_1DA66D15C();
    sub_1DA66DAC8();
    v0 = sub_1DA66CC10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDADFC20);
  }
}

uint64_t sub_1DA5E4B88()
{
  return type metadata accessor for NowPlayingAlignmentCoordinator.TimelineAlignerProvider(0);
}

void sub_1DA5E4B90()
{
  unint64_t v0;

  sub_1DA5E4B24();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1DA5E4C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA5E4C90(double *a1)
{
  return sub_1DA5E3CD0(a1);
}

uint64_t sub_1DA5E4C9C()
{
  uint64_t v0;

  return sub_1DA5E2CB4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t objectdestroy_74Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DA5E4CF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DA5E4D28 + 4 * byte_1DA6815D8[a1]))(0x6C656E6E616863, 0xE700000000000000);
}

unint64_t sub_1DA5E4D28()
{
  return 0xD000000000000014;
}

unint64_t sub_1DA5E4D44()
{
  return 0xD000000000000016;
}

uint64_t sub_1DA5E4D64()
{
  return 0x6143656E696C6E69;
}

uint64_t sub_1DA5E4D88()
{
  return 0x6F77537265776F70;
}

uint64_t sub_1DA5E4DA8()
{
  return 0x6867696C68676968;
}

uint64_t sub_1DA5E4DCC()
{
  return 2003789939;
}

uint64_t sub_1DA5E4DDC()
{
  return 0x4865646F73697065;
}

uint64_t sub_1DA5E4DFC()
{
  return 0x6F726548776F6873;
}

uint64_t InterestObserverProvider.init(asPartOf:)()
{
  id v0;
  uint64_t v1;
  id v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66EDDC();
  v0 = objc_msgSend(v3, sel_privateQueueContext);
  v1 = sub_1DA66D918();
  swift_unknownObjectRelease();

  swift_release();
  return v1;
}

uint64_t UIImage.heicData(compressionQuality:)(double a1)
{
  UIImage *v1;
  UIImage *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void **v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void **v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  CGImage *v23;
  CGImage *v24;
  CFMutableDataRef Mutable;
  CFMutableDataRef v26;
  const __CFDictionary *v27;
  __CFString *v28;
  CGImageDestination *v29;
  __CFData *v30;
  uint64_t v31;
  NSData *v32;
  NSData *v33;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2250);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DA678FF0;
  v5 = (void *)*MEMORY[0x1E0CBC780];
  type metadata accessor for CFString(0);
  v7 = v6;
  *(_QWORD *)(v4 + 56) = v6;
  *(_QWORD *)(v4 + 32) = v5;
  v8 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v9 = v5;
  v10 = objc_msgSend(v8, sel_initWithDouble_, a1);
  v11 = sub_1DA47D774(0, (unint64_t *)&qword_1EDADE760);
  v12 = (void **)MEMORY[0x1E0CBC7C0];
  *(_QWORD *)(v4 + 64) = v10;
  v13 = *v12;
  *(_QWORD *)(v4 + 120) = v7;
  *(_QWORD *)(v4 + 88) = v11;
  *(_QWORD *)(v4 + 96) = v13;
  v14 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v15 = v13;
  v16 = objc_msgSend(v14, sel_initWithBool_, 1);
  v17 = (void **)MEMORY[0x1E0CBD2B8];
  *(_QWORD *)(v4 + 128) = v16;
  v18 = *v17;
  *(_QWORD *)(v4 + 184) = v7;
  *(_QWORD *)(v4 + 152) = v11;
  *(_QWORD *)(v4 + 160) = v18;
  v19 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v20 = v18;
  v21 = objc_msgSend(v19, sel_initWithBool_, 1);
  *(_QWORD *)(v4 + 216) = v11;
  *(_QWORD *)(v4 + 192) = v21;
  sub_1DA47D774(0, &qword_1EDAE2020);
  v22 = (void *)sub_1DA66FD54();
  v23 = -[UIImage CGImage](v2, sel_CGImage);
  if (!v23)
    goto LABEL_9;
  v24 = v23;
  Mutable = CFDataCreateMutable(0, 0);
  if (!Mutable)
  {
    v26 = v24;
LABEL_8:

LABEL_9:
    v32 = UIImageHEICRepresentation(v2);
    if (v32)
    {
      v33 = v32;
      v31 = sub_1DA66C394();

      return v31;
    }

    return 0;
  }
  v26 = Mutable;
  v27 = v22;
  v28 = (__CFString *)sub_1DA66F88C();
  v29 = CGImageDestinationCreateWithData(v26, v28, 1uLL, v27);

  if (!v29)
  {

    goto LABEL_8;
  }
  CGImageDestinationAddImage(v29, v24, 0);
  if (!CGImageDestinationFinalize(v29))
  {

    return 0;
  }
  v30 = v26;
  v31 = sub_1DA66C394();

  return v31;
}

void PresentationSource.viewController.getter()
{
  JUMPOUT(0x1DF0A054CLL);
}

void PresentationSource.viewController.setter(void *a1)
{
  swift_unknownObjectWeakAssign();

}

void (*PresentationSource.viewController.modify(_QWORD *a1))(id *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = MEMORY[0x1DF0A054C](v1);
  return sub_1DA5E51CC;
}

void sub_1DA5E51CC(id *a1)
{
  id v1;

  v1 = *a1;
  swift_unknownObjectWeakAssign();

}

id PresentationSource.position.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v2 = *(void **)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 40) = v7;
  return sub_1DA5E521C(v2, v3, v4, v5, v6, v7);
}

id sub_1DA5E521C(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 255)
    return result;
  return result;
}

__n128 PresentationSource.position.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_BYTE *)a1 + 40);
  sub_1DA5E52A0(*(id *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
  *(_OWORD *)(v1 + 8) = v6;
  result = v5;
  *(__n128 *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 40) = v2;
  *(_BYTE *)(v1 + 48) = v3;
  return result;
}

void sub_1DA5E52A0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 255)

}

uint64_t (*PresentationSource.position.modify())()
{
  return nullsub_1;
}

void static PresentationSource.topmostPresentationSource.getter(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  _BYTE v7[8];
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  swift_unknownObjectWeakInit();
  v10 = 0;
  v8 = 0u;
  v9 = 0u;
  v11 = -1;
  v12 = 0;
  v13 = 0;
  sub_1DA5E5438((uint64_t)v7, a1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v3 = objc_msgSend(v2, sel_delegate);

  if (v3)
  {
    if ((objc_msgSend(v3, sel_respondsToSelector_, sel_window) & 1) != 0)
    {
      v4 = objc_msgSend(v3, sel_window);
      swift_unknownObjectRelease();
      if (v4)
      {
        v5 = objc_msgSend(v4, sel_rootViewController);

        if (v5)
        {
          v6 = objc_msgSend(v5, sel_presentedViewController);
          if (v6)
          {
            do
            {
              v3 = v6;

              v6 = objc_msgSend(v3, sel_presentedViewController);
              v5 = v3;
            }
            while (v6);
          }
          else
          {
            v3 = v5;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    v3 = 0;
  }
LABEL_10:
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DA5E5438(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  swift_unknownObjectWeakTakeInit();
  v4 = *(_OWORD *)(a1 + 8);
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 33) = *(_OWORD *)(a1 + 33);
  *(_OWORD *)(a2 + 24) = v5;
  *(_OWORD *)(a2 + 8) = v4;
  v6 = *(_QWORD *)(a1 + 56);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a2 + 56) = v6;
    *(_QWORD *)(a2 + 64) = v7;
  }
  else
  {
    *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  }
  return a2;
}

__n128 PresentationSource.init(viewController:position:)@<Q0>(void *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;
  __n128 result;
  __n128 v8;
  __int128 v9;

  v8 = (__n128)a2[1];
  v9 = *a2;
  v5 = *((_QWORD *)a2 + 4);
  v6 = *((_BYTE *)a2 + 40);
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a3 + 40) = 0;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 8) = 0u;
  *(_BYTE *)(a3 + 48) = -1;
  *(_QWORD *)(a3 + 56) = 0;
  *(_QWORD *)(a3 + 64) = 0;
  swift_unknownObjectWeakAssign();

  sub_1DA5E52A0(*(id *)(a3 + 8), *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32), *(_QWORD *)(a3 + 40), *(_BYTE *)(a3 + 48));
  *(_OWORD *)(a3 + 8) = v9;
  result = v8;
  *(__n128 *)(a3 + 24) = v8;
  *(_QWORD *)(a3 + 40) = v5;
  *(_BYTE *)(a3 + 48) = v6;
  return result;
}

void PresentationSource.init(viewController:view:location:)(void *a1@<X0>, void *a2@<X1>, CGFloat a3@<X2>, double a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  CGFloat v12;
  id v13;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  char v18;
  CGRect v19;
  CGRect v20;

  swift_unknownObjectWeakInit();
  *(_QWORD *)(a6 + 40) = 0;
  *(_OWORD *)(a6 + 24) = 0u;
  *(_OWORD *)(a6 + 8) = 0u;
  *(_BYTE *)(a6 + 48) = -1;
  *(_QWORD *)(a6 + 56) = 0;
  *(_QWORD *)(a6 + 64) = 0;
  swift_unknownObjectWeakAssign();
  if (!a2)
  {

LABEL_6:
    v18 = -1;
    x = 0.0;
    y = 0.0;
    width = 0.0;
    height = 0.0;
    goto LABEL_7;
  }
  if ((a5 & 1) != 0)
  {

    a2 = 0;
    goto LABEL_6;
  }
  v12 = a4;
  v13 = a2;
  v19.size.width = 0.0;
  v19.size.height = 0.0;
  v19.origin.x = a3;
  v19.origin.y = v12;
  v20 = CGRectInset(v19, -20.0, -20.0);
  x = v20.origin.x;
  y = v20.origin.y;
  width = v20.size.width;
  height = v20.size.height;

  v18 = 0;
LABEL_7:
  sub_1DA5E52A0(*(id *)(a6 + 8), *(_QWORD *)(a6 + 16), *(_QWORD *)(a6 + 24), *(_QWORD *)(a6 + 32), *(_QWORD *)(a6 + 40), *(_BYTE *)(a6 + 48));
  *(_QWORD *)(a6 + 8) = a2;
  *(CGFloat *)(a6 + 16) = x;
  *(CGFloat *)(a6 + 24) = y;
  *(CGFloat *)(a6 + 32) = width;
  *(CGFloat *)(a6 + 40) = height;
  *(_BYTE *)(a6 + 48) = v18;
}

uint64_t PresentationSource.init(view:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __int128 v11;
  _BYTE v12[8];
  void *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[72];

  swift_unknownObjectWeakInit();
  *(_QWORD *)(a2 + 40) = 0;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_BYTE *)(a2 + 48) = -1;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  if (!a1)
    goto LABEL_5;
  v4 = a1;
  v5 = UIView.mt_viewController.getter();
  if (!v5)
  {

LABEL_5:
    static PresentationSource.topmostPresentationSource.getter((uint64_t)v20);

    goto LABEL_6;
  }
  v6 = (void *)v5;
  v11 = *MEMORY[0x1E0C9D628];
  v7 = *(_QWORD *)(MEMORY[0x1E0C9D628] + 16);
  v8 = *(_QWORD *)(MEMORY[0x1E0C9D628] + 24);
  swift_unknownObjectWeakInit();
  v18 = 0;
  v19 = 0;
  swift_unknownObjectWeakAssign();
  v9 = v4;

  sub_1DA5E52A0(0, 0, 0, 0, 0, 0xFFu);
  v13 = a1;
  v14 = v11;
  v15 = v7;
  v16 = v8;
  v17 = 0;
  sub_1DA5E5438((uint64_t)v12, (uint64_t)v20);

LABEL_6:
  sub_1DA5E57A0(a2);
  return sub_1DA5E5438((uint64_t)v20, a2);
}

uint64_t sub_1DA5E57A0(uint64_t a1)
{
  destroy for PresentationSource(a1);
  return a1;
}

void PresentationSource.init(viewController:gestureRecognizer:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  char v11;
  CGRect v12;
  CGRect v13;

  swift_unknownObjectWeakInit();
  *(_QWORD *)(a3 + 40) = 0;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 8) = 0u;
  *(_BYTE *)(a3 + 48) = -1;
  *(_QWORD *)(a3 + 56) = 0;
  *(_QWORD *)(a3 + 64) = 0;
  swift_unknownObjectWeakAssign();
  v6 = objc_msgSend(a2, sel_view);
  if (v6)
  {
    objc_msgSend(a2, sel_locationInView_, v6);
    v12.size.width = 0.0;
    v12.size.height = 0.0;
    v13 = CGRectInset(v12, -20.0, -20.0);
    x = v13.origin.x;
    y = v13.origin.y;
    width = v13.size.width;
    height = v13.size.height;

    v11 = 0;
  }
  else
  {

    v11 = -1;
    x = 0.0;
    y = 0.0;
    width = 0.0;
    height = 0.0;
  }
  sub_1DA5E52A0(*(id *)(a3 + 8), *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32), *(_QWORD *)(a3 + 40), *(_BYTE *)(a3 + 48));
  *(_QWORD *)(a3 + 8) = v6;
  *(CGFloat *)(a3 + 16) = x;
  *(CGFloat *)(a3 + 24) = y;
  *(CGFloat *)(a3 + 32) = width;
  *(CGFloat *)(a3 + 40) = height;
  *(_BYTE *)(a3 + 48) = v11;
}

void PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(void *a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t ObjectType;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  double v38;
  uint64_t v39;
  double v40;
  CGFloat v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  double v51;
  double v52;
  id v53;
  void (*v54)(void *);
  uint64_t v55;
  uint64_t v56;
  id v57;
  CGFloat v58;
  id v59;
  id v60;
  int v61;
  id v62;
  uint64_t aBlock;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  void *v66;
  uint64_t (*v67)();
  uint64_t v68;
  _QWORD v69[11];
  CGRect v70;
  CGRect v71;

  v13 = (void *)MEMORY[0x1DF0A054C](v6);
  v60 = v13;
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v14, sel_parentViewController);

    if (v15)
      goto LABEL_3;

  }
  v17 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v18 = objc_msgSend(v17, sel_delegate);

  if (!v18)
    goto LABEL_11;
  if ((objc_msgSend(v18, sel_respondsToSelector_, sel_window) & 1) == 0)
  {

    swift_unknownObjectRelease();
    return;
  }
  v19 = objc_msgSend(v18, sel_window);
  swift_unknownObjectRelease();
  if (!v19
    || (v14 = objc_msgSend(v19, sel_rootViewController), v19, !v14))
  {
LABEL_11:
    v20 = v60;
LABEL_16:

    return;
  }
LABEL_3:
  v16 = objc_msgSend(v14, sel_presentedViewController);
  if (v16)
  {
    do
    {
      v62 = v16;

      v16 = objc_msgSend(v62, sel_presentedViewController);
      v14 = v62;
    }
    while (v16);
  }
  else
  {
    v62 = v14;
  }

  v21 = objc_msgSend(v62, sel_popoverPresentationController);
  if (v21)
  {
    v20 = v62;
    goto LABEL_16;
  }
  v22 = objc_msgSend(v62, sel_transitionCoordinator);
  if (v22)
  {
    v23 = v22;
    sub_1DA5E629C(v6, (uint64_t)v69);
    v24 = swift_allocObject();
    sub_1DA5E5438((uint64_t)v69, v24 + 16);
    *(_QWORD *)(v24 + 88) = a1;
    *(_BYTE *)(v24 + 96) = a2 & 1;
    *(_QWORD *)(v24 + 104) = a3;
    *(_BYTE *)(v24 + 112) = a4 & 1;
    *(_QWORD *)(v24 + 120) = a5;
    *(_QWORD *)(v24 + 128) = a6;
    v67 = sub_1DA5E62D4;
    v68 = v24;
    aBlock = MEMORY[0x1E0C809B0];
    v64 = 1107296256;
    v65 = sub_1DA5E6178;
    v66 = &block_descriptor_9_3;
    v25 = _Block_copy(&aBlock);
    v26 = a1;
    sub_1DA4EF8F4(a5);
    swift_release();
    objc_msgSend(v23, sel_animateAlongsideTransition_completion_, 0, v25);
    _Block_release(v25);

    swift_unknownObjectRelease();
  }
  else
  {
    ObjectType = swift_getObjectType();
    if (ObjectType == sub_1DA47D774(0, &qword_1EDADE740))
    {
      sub_1DA5E629C(v6, (uint64_t)v69);
      v33 = swift_allocObject();
      sub_1DA5E5438((uint64_t)v69, v33 + 16);
      *(_QWORD *)(v33 + 88) = a1;
      *(_BYTE *)(v33 + 96) = a2 & 1;
      *(_QWORD *)(v33 + 104) = a3;
      v34 = a4 & 1;
      *(_BYTE *)(v33 + 112) = v34;
      *(_QWORD *)(v33 + 120) = a5;
      *(_QWORD *)(v33 + 128) = a6;
      v67 = sub_1DA5E62D4;
      v68 = v33;
      aBlock = MEMORY[0x1E0C809B0];
      v64 = 1107296256;
      v65 = sub_1DA4A9194;
      v66 = &block_descriptor_3_0;
      v35 = _Block_copy(&aBlock);
      v36 = a1;
      sub_1DA4EF8F4(a5);
      swift_release();
      objc_msgSend(v62, sel_dismissViewControllerAnimated_completion_, v34, v35);
    }
    else
    {
      if ((a2 & 1) != 0)
      {
        v28 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
        v29 = objc_msgSend(v28, sel_delegate);

        if (v29)
        {
          if ((objc_msgSend(v29, sel_respondsToSelector_, sel_window) & 1) != 0)
          {
            v30 = objc_msgSend(v29, sel_window);
            swift_unknownObjectRelease();
            if (v30)
            {
              v31 = objc_msgSend(v30, sel_traitCollection);

              v32 = objc_msgSend(v31, sel_horizontalSizeClass);
              if (v32 == (id)2 && *(unsigned __int8 *)(v6 + 48) != 255)
                objc_msgSend(a1, sel_setModalPresentationStyle_, 7);
            }
          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
      }
      v37 = objc_msgSend(a1, sel_popoverPresentationController);
      if (v37)
      {
        v61 = *(unsigned __int8 *)(v6 + 48);
        if (v61 == 255)
        {

        }
        else
        {
          v57 = v37;
          v38 = *(double *)(v6 + 16);
          v59 = *(id *)(v6 + 8);
          v40 = *(double *)(v6 + 24);
          v39 = *(_QWORD *)(v6 + 32);
          v41 = *(double *)(v6 + 40);
          v69[9] = &unk_1F0282F08;
          v42 = swift_dynamicCastObjCProtocolConditional();
          v58 = *(double *)&v39;
          v56 = *(_QWORD *)&v38;
          if (v42)
          {
            v55 = v42;
            v43 = a1;
            v44 = *(_QWORD *)&v38;
            v45 = v43;
            sub_1DA5E521C(v59, v44, *(uint64_t *)&v40, v39, *(uint64_t *)&v41, v61);
            v46 = objc_msgSend(v45, sel_presentationController);
            if (v46)
            {
              v47 = v46;
              objc_msgSend(v46, sel_setDelegate_, v55);

            }
            v38 = *(double *)&v56;
          }
          else
          {
            v48 = v59;
          }
          objc_msgSend(v57, sel_setPermittedArrowDirections_, a3, v55);
          if ((v61 & 1) != 0)
          {
            v49 = v59;
            v50 = v59;
            objc_msgSend(v57, sel_setBarButtonItem_, v59);

            sub_1DA5E52A0(v59, v56, *(uint64_t *)&v40, *(uint64_t *)&v58, *(uint64_t *)&v41, v61);
            sub_1DA5E52A0(v59, v56, *(uint64_t *)&v40, *(uint64_t *)&v58, *(uint64_t *)&v41, v61);

          }
          else
          {
            v51 = v58;
            v52 = v41;
            v53 = v59;
            objc_msgSend(v57, sel_setSourceView_, v59);
            if ((byte_1F026A3E0 & 1) != 0)
            {
              v70.origin.x = v38;
              v70.origin.y = v40;
              v70.size.width = v58;
              v70.size.height = v41;
              if (CGRectGetWidth(v70) <= 0.0)
              {
                v71.origin.x = v38;
                v71.origin.y = v40;
                v71.size.width = v58;
                v71.size.height = v41;
                if (CGRectGetHeight(v71) <= 0.0)
                {
                  v52 = 1.0;
                  v51 = 1.0;
                }
              }
            }
            objc_msgSend(v57, sel_setSourceRect_, v38, v40, v51, v52);

            sub_1DA5E52A0(v59, *(uint64_t *)&v38, *(uint64_t *)&v40, *(uint64_t *)&v58, *(uint64_t *)&v41, v61);
            sub_1DA5E52A0(v59, *(uint64_t *)&v38, *(uint64_t *)&v40, *(uint64_t *)&v58, *(uint64_t *)&v41, v61);
          }
        }
      }
      v54 = *(void (**)(void *))(v6 + 56);
      if (v54)
        v54(a1);
      if (a5)
      {
        v69[4] = a5;
        v69[5] = a6;
        v69[0] = MEMORY[0x1E0C809B0];
        v69[1] = 1107296256;
        v69[2] = sub_1DA4A9194;
        v69[3] = &block_descriptor_22;
        v35 = _Block_copy(v69);
        sub_1DA66BE60();
        swift_release();
      }
      else
      {
        v35 = 0;
      }
      objc_msgSend(v62, sel_presentViewController_animated_completion_, a1, a4 & 1, v35);
    }
    _Block_release(v35);

  }
}

uint64_t sub_1DA5E6178(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1DA66BE60();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

id PresentationSource.popoverSource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t *v9;

  v4 = *(void **)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(unsigned __int8 *)(v1 + 48);
  if (v8 == 255)
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    if ((v8 & 1) != 0)
      v9 = (unint64_t *)&unk_1F026CDA8;
    else
      v9 = qword_1EDADE950;
    *(_QWORD *)(a1 + 24) = sub_1DA47D774(0, v9);
    *(_QWORD *)a1 = v4;
  }
  return sub_1DA5E521C(v4, v3, v5, v6, v7, v8);
}

id PresentationSource.Position.view.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    return 0;
  v1 = *(id *)v0;
  v2 = *(id *)v0;
  return v1;
}

uint64_t sub_1DA5E629C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PresentationSource(a2, a1);
  return a2;
}

uint64_t sub_1DA5E62D4()
{
  uint64_t v0;

  return PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(*(_QWORD *)(v0 + 88), *(unsigned __int8 *)(v0 + 96), *(_QWORD *)(v0 + 104), *(unsigned __int8 *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
}

uint64_t sub_1DA5E6310@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[72];

  sub_1DA5E629C(a1, (uint64_t)v5);
  v3 = MEMORY[0x1DF0A054C](v5);
  result = sub_1DA5E57A0((uint64_t)v5);
  *a2 = v3;
  return result;
}

uint64_t sub_1DA5E6354()
{
  return swift_unknownObjectWeakAssign();
}

void destroy for PresentationSource(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  if (*(unsigned __int8 *)(a1 + 48) != 255)

  if (*(_QWORD *)(a1 + 56))
    swift_release();
}

uint64_t initializeWithCopy for PresentationSource(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  swift_unknownObjectWeakCopyInit();
  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 == 255)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v5;
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  else
  {
    v6 = v4 & 1;
    v7 = *(void **)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 40);
    v12 = v7;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_BYTE *)(a1 + 48) = v6;
  }
  v13 = *(_QWORD *)(a2 + 56);
  if (v13)
  {
    v14 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 64) = v14;
    sub_1DA66BE60();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  return a1;
}

uint64_t assignWithCopy for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 *v6;
  int v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = swift_unknownObjectWeakCopyAssign();
  v5 = (__int128 *)(v4 + 8);
  v6 = (__int128 *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(v4 + 48) == 255)
  {
    if (v7 == 255)
    {
      v10 = *v6;
      v11 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(v4 + 33) = *(_OWORD *)(a2 + 33);
      *v5 = v10;
      *(_OWORD *)(v4 + 24) = v11;
    }
    else
    {
      v20 = v7 & 1;
      v21 = *(void **)(a2 + 8);
      v22 = *(_QWORD *)(a2 + 16);
      v23 = *(_QWORD *)(a2 + 24);
      v24 = *(_QWORD *)(a2 + 32);
      v25 = *(_QWORD *)(a2 + 40);
      v26 = v21;
      *(_QWORD *)(a1 + 8) = v21;
      *(_QWORD *)(a1 + 16) = v22;
      *(_QWORD *)(a1 + 24) = v23;
      *(_QWORD *)(a1 + 32) = v24;
      *(_QWORD *)(a1 + 40) = v25;
      *(_BYTE *)(a1 + 48) = v20;
    }
  }
  else if (v7 == 255)
  {
    sub_1DA5E6608((id *)(v4 + 8));
    v8 = *(_OWORD *)(a2 + 33);
    v9 = *(_OWORD *)(a2 + 24);
    *v5 = *v6;
    v5[1] = v9;
    *(__int128 *)((char *)v5 + 25) = v8;
  }
  else
  {
    v12 = v7 & 1;
    v13 = *(void **)(a2 + 8);
    v14 = *(_QWORD *)(a2 + 16);
    v15 = *(_QWORD *)(a2 + 24);
    v16 = *(_QWORD *)(a2 + 32);
    v17 = *(_QWORD *)(a2 + 40);
    v18 = v13;
    v19 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = v13;
    *(_QWORD *)(a1 + 16) = v14;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v16;
    *(_QWORD *)(a1 + 40) = v17;
    *(_BYTE *)(a1 + 48) = v12;

  }
  v27 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v27)
    {
      v29 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v27;
      *(_QWORD *)(a1 + 64) = v29;
      sub_1DA66BE60();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_14;
  }
  v28 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v27;
  *(_QWORD *)(a1 + 64) = v28;
  sub_1DA66BE60();
  swift_release();
  return a1;
}

id *sub_1DA5E6608(id *a1)
{

  return a1;
}

__n128 initializeWithTake for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  __int128 v6;
  __n128 result;
  uint64_t v8;

  v3 = swift_unknownObjectWeakTakeInit();
  v4 = (__n128 *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 24) = v6;
  result = *(__n128 *)(a2 + 33);
  *(__n128 *)(v3 + 33) = result;
  if (v5)
  {
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(v3 + 56) = v5;
    *(_QWORD *)(v3 + 64) = v8;
  }
  else
  {
    result = *v4;
    *(__n128 *)(v3 + 56) = *v4;
  }
  return result;
}

uint64_t assignWithTake for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  int v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = swift_unknownObjectWeakTakeAssign();
  v5 = (_OWORD *)(v4 + 8);
  if (*(unsigned __int8 *)(v4 + 48) == 255)
    goto LABEL_4;
  v6 = *(unsigned __int8 *)(a2 + 48);
  if (v6 == 255)
  {
    sub_1DA5E6608((id *)(v4 + 8));
LABEL_4:
    v7 = *(_OWORD *)(a2 + 24);
    *v5 = *(_OWORD *)(a2 + 8);
    v5[1] = v7;
    *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)(a2 + 33);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(void **)(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v6 & 1;

LABEL_6:
  v10 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v10)
    {
      v12 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v10;
      *(_QWORD *)(a1 + 64) = v12;
      return a1;
    }
LABEL_12:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_12;
  }
  v11 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationSource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 56) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource()
{
  return &type metadata for PresentationSource;
}

void destroy for PresentationSource.Position(id *a1)
{

}

uint64_t initializeWithCopy for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(id *)a2;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  void *v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(id *)a2;
  v10 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;

  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(void **)a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationSource.Position(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationSource.Position(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DA5E6A60(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1DA5E6A68(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource.Position()
{
  return &type metadata for PresentationSource.Position;
}

void JoeColorClampBrightnessAlgorithm.joeColor(for:contrasting:selecting:)(uint64_t a1, void *a2, char *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  double *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  BOOL v30;
  double v31;
  id v32;
  id v33;
  double v34;
  double v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  void *v44;
  char v45;

  v45 = *a3;
  v4 = sub_1DA5E7568(&v45, a1);
  v5 = v4;
  v6 = v4[2];
  if (v6)
  {
    v7 = 0;
    v8 = v4 + 4;
    v41 = v4[2];
    v42 = v4;
    v43 = v4 + 4;
    while (v7 < v5[2])
    {
      v9 = (double *)&v8[6 * v7];
      v11 = v9[1];
      v10 = v9[2];
      v12 = v9[3];
      v13 = v9[4];
      if (v12 <= 0.98 || v10 >= 0.5 && v12 > 0.98)
      {
        v14 = *(id *)v9;
        v15 = objc_msgSend(v14, sel_CGColor);
        UISColorLuminance();
        v17 = v16;

        v18 = objc_msgSend(a2, sel_CGColor);
        UISColorLuminance();
        v20 = v19;

        if (v17 >= v20)
          v21 = v17;
        else
          v21 = v20;
        if (v17 >= v20)
          v22 = v20;
        else
          v22 = v17;
        if ((v21 + 0.05) / (v22 + 0.05) >= 4.5)
          goto LABEL_44;
        v44 = v14;
        if (qword_1EDAE28A8 != -1)
          swift_once();
        v23 = (double *)off_1EDAE4D98;
        v24 = *((_QWORD *)off_1EDAE4D98 + 2);
        if (v24)
        {
          v25 = qword_1EDAE27A8;
          swift_bridgeObjectRetain();
          if (v25 != -1)
            swift_once();
          v26 = 0;
          while (1)
          {
            v27 = v26 + 1;
            if (__OFADD__(v26, 1))
              break;
            v28 = v23[v26 + 4];
            v29 = *(double *)&xmmword_1EDAE2790;
            v30 = *(double *)&xmmword_1EDAE2790 > v11 || v11 > *((double *)&xmmword_1EDAE2790 + 1);
            v31 = v11;
            if (!v30)
            {
              if (qword_1F0268790 != -1)
              {
                swift_once();
                v29 = *(double *)&xmmword_1EDAE2790;
              }
              if (v29 >= v11 - *(double *)&qword_1F026CDB0)
                v31 = v11 - *(double *)&qword_1F026CDB0;
              else
                v31 = v29;
            }
            v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, v31, v10, v28, v13);
            v33 = objc_msgSend(v32, sel_CGColor);
            UISColorLuminance();
            v35 = v34;

            v36 = objc_msgSend(a2, sel_CGColor);
            UISColorLuminance();
            v38 = v37;

            if (v35 >= v38)
              v39 = v35;
            else
              v39 = v38;
            if (v35 >= v38)
              v40 = v38;
            else
              v40 = v35;
            if ((v39 + 0.05) / (v40 + 0.05) >= 4.5)
            {
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              return;
            }

            ++v26;
            if (v27 == v24)
            {

              swift_bridgeObjectRelease();
              v6 = v41;
              v5 = v42;
              goto LABEL_40;
            }
          }
          __break(1u);
          break;
        }

LABEL_40:
        v8 = v43;
      }
      if (++v7 == v6)
        goto LABEL_44;
    }
    __break(1u);
  }
  else
  {
LABEL_44:
    swift_bridgeObjectRelease();
  }
}

BOOL sub_1DA5E6DE8(double *a1, double *a2)
{
  return a1[5] == a2[5] && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3] && a1[4] == a2[4];
}

BOOL sub_1DA5E6E30(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 40) < *(double *)(a2 + 40);
}

BOOL sub_1DA5E6E44(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 40) >= *(double *)(a1 + 40);
}

BOOL sub_1DA5E6E58(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 40) >= *(double *)(a2 + 40);
}

BOOL sub_1DA5E6E6C(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 40) < *(double *)(a1 + 40);
}

double sub_1DA5E6E80()
{
  double result;

  result = 0.127777778;
  xmmword_1EDAE2790 = xmmword_1DA681640;
  return result;
}

void sub_1DA5E6E98()
{
  qword_1F026CDB0 = 0x3F9C71C71C71C71CLL;
}

void sub_1DA5E6EB4()
{
  off_1EDAE4D98 = &unk_1EA0C6C70;
}

void sub_1DA5E6EC8(uint64_t a1, void *a2, char *a3)
{
  JoeColorClampBrightnessAlgorithm.joeColor(for:contrasting:selecting:)(a1, a2, a3);
}

uint64_t sub_1DA5E6EDC(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double *v13;
  double *v14;
  double *v15;
  __int128 v16;
  __int128 v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t result;
  char *v27;
  double *v28;
  double *v29;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = ((char *)a2 - (char *)__src) / 48;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v29 = __src;
  v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[6 * v11] <= __dst)
        memmove(__dst, a2, 48 * v11);
      v18 = &v4[6 * v11];
      v27 = (char *)v18;
      v29 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        v19 = (double *)(a3 - 48);
        do
        {
          v20 = v19 + 6;
          if (*(v18 - 1) >= *(v6 - 1))
          {
            v27 = (char *)(v18 - 6);
            if (v20 < v18 || v19 >= v18 || v20 != v18)
            {
              v24 = *((_OWORD *)v18 - 3);
              v25 = *((_OWORD *)v18 - 1);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v18 - 2);
              *((_OWORD *)v19 + 2) = v25;
              *(_OWORD *)v19 = v24;
            }
            v21 = v6;
            v18 -= 6;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 6;
            if (v20 != v6 || v19 >= v6)
            {
              v22 = *(_OWORD *)v21;
              v23 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v19 + 2) = v23;
              *(_OWORD *)v19 = v22;
            }
            v29 = v6 - 6;
            if (v21 <= v7)
              break;
          }
          v19 -= 6;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1DA5E73E0((void **)&v29, (const void **)&v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[6 * v9] <= __dst)
      memmove(__dst, __src, 48 * v9);
    v12 = &v4[6 * v9];
    v27 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      v13 = v4;
      while (1)
      {
        if (v6[5] >= v13[5])
        {
          v4 = v13 + 6;
          v15 = v13;
          v14 = v6;
          if (v7 == v13)
          {
            v13 += 6;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v13 += 6;
          }
        }
        else
        {
          v14 = v6 + 6;
          v15 = v6;
          if (v7 == v6 && v7 < v14)
            goto LABEL_18;
        }
        v16 = *(_OWORD *)v15;
        v17 = *((_OWORD *)v15 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v15 + 1);
        *((_OWORD *)v7 + 2) = v17;
        *(_OWORD *)v7 = v16;
LABEL_18:
        v7 += 6;
        if (v13 < v12)
        {
          v6 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v28 = v4;
        v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

char *sub_1DA5E7198(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CDB8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DA5E7290(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1DA6705DC();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1DA5E7338(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1DA6705DC();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1DA5E73E0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    result = (char *)sub_1DA6705DC();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
      return (char *)memmove(result, v3, 48 * v6);
  }
  return result;
}

char *sub_1DA5E749C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  int64_t v4;
  char *result;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 < 0)
  {
    result = (char *)sub_1DA6705DC();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
      return (char *)memmove(result, v3, v4);
  }
  return result;
}

char *sub_1DA5E752C(uint64_t a1)
{
  return sub_1DA5E7198(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1DA5E7540()
{
  JUMPOUT(0x1DF09F04CLL);
}

uint64_t sub_1DA5E7554(_QWORD *a1)
{
  return sub_1DA50A63C(0, a1[2], 0, a1);
}

_QWORD *sub_1DA5E7568(char *a1, uint64_t a2)
{
  char v3;
  _QWORD *result;
  int v5;
  id v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  _QWORD *v12;
  int v13;
  id v14;
  id v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;
  double v21;
  id v22;
  double v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  double v31;
  double v32;
  id v33;
  double v34;
  double v35;
  double v36;
  id v37;
  double v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  id v43;
  id v44;
  double v45;
  double v46;
  id v47;
  double v48;
  double v49;
  double v50;
  id v51;
  double v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  id v57;
  id v58;
  double v59;
  double v60;
  id v61;
  double v62;
  double v63;
  double v64;
  id v65;
  double v66;
  id v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  _QWORD *v83;
  _BYTE v84[40];
  _BYTE v85[40];
  _BYTE v86[40];
  _BYTE v87[40];
  _BYTE v88[40];
  _OWORD v89[2];
  char v90;
  _OWORD v91[2];
  char v92;
  _OWORD v93[2];
  char v94;
  _OWORD v95[2];
  char v96;
  _OWORD v97[2];
  char v98;
  id v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;

  v3 = *a1;
  result = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v83 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = *(unsigned __int8 *)(a2 + 64);
  if (v5 == 255)
    return result;
  v6 = Color.color.getter(*(_QWORD *)(a2 + 56), v5);
  sub_1DA47EBD4(v6, (uint64_t)v84);
  sub_1DA47EC90((uint64_t)v84, (uint64_t)v97);
  if (v98 == 1)
  {

    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v81 = v97[1];
  v82 = v97[0];
  v7 = *(_QWORD *)(a2 + 88);
  v8 = *(unsigned __int8 *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(unsigned __int8 *)(a2 + 112);
  v79 = *(_QWORD *)(a2 + 120);
  v11 = *(unsigned __int8 *)(a2 + 128);
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((v3 & 2) != 0)
  {
    v13 = *(unsigned __int8 *)(a2 + 80);
    if (v13 != 255)
    {
      v14 = Color.color.getter(*(_QWORD *)(a2 + 72), v13);
      v15 = objc_msgSend(v6, sel_CGColor);
      UISColorLuminance();
      v17 = v16;

      v18 = objc_msgSend(v14, sel_CGColor);
      UISColorLuminance();
      v20 = v19;

      if (v17 >= v20)
        v21 = v17;
      else
        v21 = v20;
      if (v17 >= v20)
        v17 = v20;
      v22 = v14;
      sub_1DA47EBD4(v22, (uint64_t)v85);
      sub_1DA47EC90((uint64_t)v85, (uint64_t)v95);
      if (v96 == 1)
      {

        v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v23 = (v21 + 0.05) / (v17 + 0.05);
        v72 = v95[1];
        v75 = v95[0];
        v24 = v22;
        v12 = sub_1DA47ECD8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v26 = v12[2];
        v25 = v12[3];
        v27 = v26 + 1;
        if (v26 >= v25 >> 1)
        {
          v71 = sub_1DA47ECD8((_QWORD *)(v25 > 1), v26 + 1, 1, v12);
          v27 = v26 + 1;
          v12 = v71;
        }
        v12[2] = v27;
        v28 = &v12[6 * v26];
        v28[4] = v24;
        *(_OWORD *)(v28 + 5) = v75;
        *(_OWORD *)(v28 + 7) = v72;
        *((double *)v28 + 9) = v23;

        v83 = v12;
      }
    }
  }
  if ((v3 & 4) != 0 && v8 != 255)
  {
    v29 = Color.color.getter(v7, v8);
    v30 = objc_msgSend(v6, sel_CGColor);
    UISColorLuminance();
    v32 = v31;

    v33 = objc_msgSend(v29, sel_CGColor);
    UISColorLuminance();
    v35 = v34;

    if (v32 >= v35)
      v36 = v32;
    else
      v36 = v35;
    if (v32 < v35)
      v35 = v32;
    v37 = v29;
    sub_1DA47EBD4(v37, (uint64_t)v86);
    sub_1DA47EC90((uint64_t)v86, (uint64_t)v93);
    if (v94 == 1)
    {

    }
    else
    {
      v38 = v35 + 0.05;
      v73 = v93[1];
      v76 = v93[0];
      v39 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_1DA47ECD8(0, v12[2] + 1, 1, v12);
      v41 = v12[2];
      v40 = v12[3];
      if (v41 >= v40 >> 1)
        v12 = sub_1DA47ECD8((_QWORD *)(v40 > 1), v41 + 1, 1, v12);
      v12[2] = v41 + 1;
      v42 = &v12[6 * v41];
      v42[4] = v39;
      *(_OWORD *)(v42 + 5) = v76;
      *(_OWORD *)(v42 + 7) = v73;
      *((double *)v42 + 9) = (v36 + 0.05) / v38;

      v83 = v12;
    }
  }
  if ((v3 & 8) != 0 && v10 != 255)
  {
    v43 = Color.color.getter(v9, v10);
    v44 = objc_msgSend(v6, sel_CGColor);
    UISColorLuminance();
    v46 = v45;

    v47 = objc_msgSend(v43, sel_CGColor);
    UISColorLuminance();
    v49 = v48;

    if (v46 >= v49)
      v50 = v46;
    else
      v50 = v49;
    if (v46 < v49)
      v49 = v46;
    v51 = v43;
    sub_1DA47EBD4(v51, (uint64_t)v87);
    sub_1DA47EC90((uint64_t)v87, (uint64_t)v91);
    if (v92 == 1)
    {

    }
    else
    {
      v52 = v49 + 0.05;
      v74 = v91[1];
      v77 = v91[0];
      v53 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_1DA47ECD8(0, v12[2] + 1, 1, v12);
      v55 = v12[2];
      v54 = v12[3];
      if (v55 >= v54 >> 1)
        v12 = sub_1DA47ECD8((_QWORD *)(v54 > 1), v55 + 1, 1, v12);
      v12[2] = v55 + 1;
      v56 = &v12[6 * v55];
      v56[4] = v53;
      *(_OWORD *)(v56 + 5) = v77;
      *(_OWORD *)(v56 + 7) = v74;
      *((double *)v56 + 9) = (v50 + 0.05) / v52;

      v83 = v12;
    }
  }
  if ((v3 & 0x10) != 0 && v11 != 255)
  {
    v57 = Color.color.getter(v79, v11);
    v58 = objc_msgSend(v6, (SEL)&PUIAssetDownloaders__metaData.ivar_base_size);
    UISColorLuminance();
    v60 = v59;

    v61 = objc_msgSend(v57, (SEL)&PUIAssetDownloaders__metaData.ivar_base_size);
    UISColorLuminance();
    v63 = v62;

    if (v60 >= v63)
      v64 = v60;
    else
      v64 = v63;
    if (v60 < v63)
      v63 = v60;
    v65 = v57;
    sub_1DA47EBD4(v65, (uint64_t)v88);
    sub_1DA47EC90((uint64_t)v88, (uint64_t)v89);
    if (v90 != 1)
    {
      v66 = v63 + 0.05;
      v78 = v89[1];
      v80 = v89[0];
      v67 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_1DA47ECD8(0, v12[2] + 1, 1, v12);
      v69 = v12[2];
      v68 = v12[3];
      if (v69 >= v68 >> 1)
        v12 = sub_1DA47ECD8((_QWORD *)(v68 > 1), v69 + 1, 1, v12);
      v12[2] = v69 + 1;
      v70 = &v12[6 * v69];
      v70[4] = v67;
      *(_OWORD *)(v70 + 5) = v80;
      *(_OWORD *)(v70 + 7) = v78;
      *((double *)v70 + 9) = (v64 + 0.05) / v66;

      v83 = v12;
      if (!v12[2])
        goto LABEL_55;
      goto LABEL_54;
    }

  }
  if (v12[2])
LABEL_54:
    sub_1DA47F084(&v83);
LABEL_55:
  if ((v3 & 1) != 0)
  {
    v99 = v6;
    v100 = v82;
    v101 = v81;
    v102 = 0;
    sub_1DA47EEF0(0, 0, &v99);
  }
  else
  {

  }
  return v83;
}

uint64_t initializeWithCopy for JoeColorClampBrightnessAlgorithm.Candidate(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for JoeColorClampBrightnessAlgorithm.Candidate(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for JoeColorClampBrightnessAlgorithm.Candidate(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for JoeColorClampBrightnessAlgorithm.Candidate(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JoeColorClampBrightnessAlgorithm.Candidate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_1DA5E7DA4()
{
  unint64_t result;

  result = qword_1F026CDC0[0];
  if (!qword_1F026CDC0[0])
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA6816E4, &type metadata for JoeColorClampBrightnessAlgorithm.Candidate);
    atomic_store(result, qword_1F026CDC0);
  }
  return result;
}

uint64_t AssetProcessingStep<>.resize(for:using:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  sub_1DA66CDC0();
  v9 = v8;
  v11 = v10;
  sub_1DA66CDD8();
  return AssetProcessingStep<>.resize(to:scale:using:)(a1, a2, a3, a4, v9, v11, v12);
}

uint64_t AssetProcessingStep<>.resize(to:scale:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  __int128 v20[2];

  v14 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4813E4(v17, (uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v7, a2);
  return sub_1DA5E7F20(v20, (uint64_t)v16, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1DA5E7F20@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v27;
  __int128 *v28;

  v28 = a1;
  v27 = sub_1DA66CEBC();
  v15 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v27 - v19;
  v22 = (int *)type metadata accessor for ResizeArtworkProcessingStep(0, a3, a4, v21);
  v23 = *(_QWORD *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(a5 + v22[9], a2, a3);
  sub_1DA66D4A4();
  sub_1DA66CE98();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a2, a3);
  v24 = v27;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v27);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a5, v20, v24);
  v25 = (double *)(a5 + v22[10]);
  *v25 = a6;
  v25[1] = a7;
  *(double *)(a5 + v22[11]) = a8;
  return sub_1DA4841BC(v28, a5 + v22[12]);
}

uint64_t ResizeArtworkProcessingStep.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66CEBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1DA5E80D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  NSObject *v40;
  int v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint8_t *v46;
  uint64_t v47;
  os_signpost_id_t v48;
  uint64_t v49;
  void (*v50)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  UIImage *v61;
  uint64_t v62;
  UIImage *v63;
  _BYTE *v64;
  unint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  unint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  _BYTE *v72;
  NSObject *v73;
  int v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  NSObject *v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  uint8_t *v87;
  os_signpost_id_t v88;
  void (*v89)(_BYTE *, uint64_t);
  _BYTE v90[12];
  int v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  void (*v111)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v112;
  _BYTE *v113;
  void (*v114)(_BYTE *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;
  uint64_t v120;
  _QWORD v121[2];
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;

  v116 = a5;
  v118 = a4;
  v110 = a3;
  v108 = a1;
  v95 = a6;
  v94 = sub_1DA66DDE0();
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v92 = &v90[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v99 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v99);
  v98 = &v90[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v107 = sub_1DA66CEBC();
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v105 = &v90[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v102 = sub_1DA66C358();
  v101 = *(_QWORD *)(v102 - 8);
  v16 = MEMORY[0x1E0C80A78](v102);
  v100 = &v90[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v113 = &v90[-v18];
  v117 = sub_1DA66DD74();
  v104 = *(_QWORD *)(v117 - 8);
  v19 = MEMORY[0x1E0C80A78](v117);
  v21 = &v90[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = MEMORY[0x1E0C80A78](v19);
  v112 = &v90[-v23];
  MEMORY[0x1E0C80A78](v22);
  v25 = &v90[-v24];
  v120 = sub_1DA66DDD4();
  v26 = *(_QWORD *)(v120 - 8);
  v27 = MEMORY[0x1E0C80A78](v120);
  v96 = &v90[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = MEMORY[0x1E0C80A78](v27);
  v31 = &v90[-v30];
  MEMORY[0x1E0C80A78](v29);
  v119 = &v90[-v32];
  v33 = sub_1DA66C454();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v36 = &v90[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v115 = a2;
  sub_1DA66CE74();
  if (*((_QWORD *)&v124 + 1))
  {
    __swift_project_boxed_opaque_existential_1(&v123, *((uint64_t *)&v124 + 1));
    v103 = sub_1DA66DC90();
    v38 = v37;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v123);
  }
  else
  {
    sub_1DA47E2F0((uint64_t)&v123, &qword_1EDAE5310);
    sub_1DA66C448();
    v103 = sub_1DA66C43C();
    v38 = v39;
    (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v36, v33);
  }
  v97 = v21;
  sub_1DA66DDA4();
  sub_1DA66DDA4();
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v114 = *(void (**)(_BYTE *, uint64_t))(v26 + 8);
  v114(v31, v120);
  swift_bridgeObjectRetain();
  v40 = sub_1DA66DDB0();
  v41 = sub_1DA66FF58();
  v42 = sub_1DA670240();
  v43 = v117;
  if ((v42 & 1) != 0)
  {
    v91 = v41;
    v44 = v104;
    v111 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v104 + 16);
    v45 = v112;
    v111(v112, v25, v117);
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    *(_QWORD *)&v123 = v47;
    *(_DWORD *)v46 = 136315138;
    swift_bridgeObjectRetain();
    v121[0] = sub_1DA49AD00(v103, v38, (uint64_t *)&v123);
    sub_1DA6702C4();
    swift_bridgeObjectRelease_n();
    v48 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v40, (os_signpost_type_t)v91, v48, "ResizeImage", "[identifier=%{name=identifier}s] Resize", v46, 0xCu);
    swift_arrayDestroy();
    v49 = v47;
    v43 = v117;
    MEMORY[0x1DF0A0474](v49, -1, -1);
    MEMORY[0x1DF0A0474](v46, -1, -1);

    v50 = v111;
    (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v45, v43);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v44 = v104;
    v50 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v104 + 16);
    v45 = v112;
  }
  v51 = (uint64_t)v113;
  v111 = v50;
  v50(v45, v25, v43);
  sub_1DA66DE10();
  swift_allocObject();
  v52 = sub_1DA66DE04();
  v104 = *(_QWORD *)(v44 + 8);
  ((void (*)(_BYTE *, uint64_t))v104)(v25, v43);
  v114(v119, v120);
  v53 = v118;
  v55 = type metadata accessor for ResizeArtworkProcessingStep(0, v118, v116, v54);
  MEMORY[0x1DF0A039C](&protocol conformance descriptor for ResizeArtworkProcessingStep<A>, v55);
  sub_1DA66D4D4();
  if (v122)
  {
    __swift_project_boxed_opaque_existential_1(v121, v122);
    __swift_project_boxed_opaque_existential_1(v110, v110[3]);
    swift_getDynamicType();
    sub_1DA670828();
    sub_1DA66DC9C();
    v53 = v118;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v121);
  }
  else
  {
    sub_1DA47E2F0((uint64_t)v121, &qword_1EDAE5310);
    v123 = 0u;
    v124 = 0u;
    v125 = 0;
  }
  v56 = v105;
  sub_1DA66D4A4();
  v57 = v109;
  sub_1DA5E8DEC(v108, v51);
  if (v57)
  {
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v106 + 8))(v56, v107);
    return sub_1DA47E2F0((uint64_t)&v123, &qword_1EDAE19B0);
  }
  v58 = v52;
  (*(void (**)(_BYTE *, uint64_t))(v106 + 8))(v56, v107);
  v59 = v110[3];
  v60 = v110[4];
  __swift_project_boxed_opaque_existential_1(v110, v59);
  v61 = (UIImage *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double, double, double))(v60 + 16))(v51, v59, v60, a7, a8, a9);
  v63 = v61;
  if (!v61 || (v64 = (_BYTE *)sub_1DA59B888(v61), v65 >> 60 == 15))
  {
    v66 = type metadata accessor for ResizeArtworkProcessingStep.ResizeError(0, v53, v116, v62);
    MEMORY[0x1DF0A039C](&protocol conformance descriptor for ResizeArtworkProcessingStep<A>.ResizeError, v66);
    swift_allocError();
    *v67 = 0;
    swift_willThrow();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v51, v102);
    return sub_1DA47E2F0((uint64_t)&v123, &qword_1EDAE19B0);
  }
  v69 = v65;
  v70 = (uint64_t)v98;
  v119 = v64;
  sub_1DA66CE68();
  v71 = *(_BYTE *)(v70 + *(int *)(v99 + 52));
  sub_1DA4E8990(v70);
  sub_1DA5E8F44(v71, (uint64_t)v100);
  sub_1DA66C3A0();
  sub_1DA59C760((uint64_t)&v123, (uint64_t)v121);
  if (v122)
  {
    __swift_project_boxed_opaque_existential_1(v121, v122);
    sub_1DA66CD90();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v121);
  }
  else
  {
    sub_1DA47E2F0((uint64_t)v121, &qword_1EDAE19B0);
  }
  v72 = v96;
  sub_1DA66DDA4();
  v73 = sub_1DA66DDB0();
  sub_1DA66DDF8();
  v74 = sub_1DA66FF4C();
  if ((sub_1DA670240() & 1) != 0)
  {
    LODWORD(v118) = v74;
    sub_1DA66BE60();
    v75 = v92;
    sub_1DA66DE1C();
    swift_release();
    v76 = v93;
    v77 = v94;
    v78 = (*(uint64_t (**)(_BYTE *, uint64_t))(v93 + 88))(v75, v94);
    v79 = *MEMORY[0x1E0DF2190];
    v116 = v58;
    v80 = v73;
    if (v78 == v79)
    {
      v81 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v75, v77);
      v81 = "";
    }
    v84 = v112;
    v85 = v97;
    v86 = v117;
    v111(v112, v97, v117);
    v87 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v87 = 0;
    v88 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v80, (os_signpost_type_t)v118, v88, "ResizeImage", v81, v87, 2u);
    MEMORY[0x1DF0A0474](v87, -1, -1);
    sub_1DA49873C((uint64_t)v119, v69);

    v89 = (void (*)(_BYTE *, uint64_t))v104;
    ((void (*)(_BYTE *, uint64_t))v104)(v85, v86);
    v114(v96, v120);
    v82 = v101;
    v83 = v102;
    (*(void (**)(_BYTE *, uint64_t))(v101 + 8))(v113, v102);
    sub_1DA47E2F0((uint64_t)&v123, &qword_1EDAE19B0);
    swift_release();
    v89(v84, v86);
  }
  else
  {
    sub_1DA49873C((uint64_t)v119, v69);

    ((void (*)(_BYTE *, uint64_t))v104)(v97, v117);
    v114(v72, v120);
    v82 = v101;
    v83 = v102;
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v51, v102);
    sub_1DA47E2F0((uint64_t)&v123, &qword_1EDAE19B0);
    swift_release();
  }
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v82 + 32))(v95, v100, v83);
  sub_1DA66CDA8();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DA5E8C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ResizeArtworkProcessingStep(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v4 + v8;
  v11 = sub_1DA66CEBC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v10 + *(int *)(v6 + 36), v5);
  __swift_destroy_boxed_opaque_existential_0(v10 + *(int *)(v6 + 48));
  __swift_destroy_boxed_opaque_existential_0(v4 + v9);
  return swift_deallocObject();
}

uint64_t sub_1DA5E8D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(type metadata accessor for ResizeArtworkProcessingStep(0, v6, v7, a2) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DA5E80D8(a1, v3 + v9, (_QWORD *)(v3 + v10), v6, v7, a3, *(double *)(v3 + ((v10 + 47) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v3 + ((v10 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)(v3 + ((((v10 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1DA5E8DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v15 = a2;
  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DA66CDA8();
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA5E9AC0(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = (char *)v10;
  }
  else
  {
    v11 = *v10;
    v12 = v10[1];
    sub_1DA5E8F44(4u, (uint64_t)v7);
    sub_1DA66C3A0();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return sub_1DA4986F8(v11, v12);
    }
    sub_1DA4986F8(v11, v12);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v7, v4);
}

uint64_t sub_1DA5E8F44@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  id v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v17[4];
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v19 = a2;
  v18 = a1;
  v2 = sub_1DA66C454();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1DA66C358();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v17[-v11];
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v14 = objc_msgSend(v13, sel_temporaryDirectory);

  sub_1DA66C304();
  sub_1DA66C448();
  sub_1DA66C43C();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  sub_1DA66C2E0();
  swift_bridgeObjectRelease();
  v15 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v20 = 0x697365722E706D74;
  v21 = 0xEB000000002E657ALL;
  if (v18 != 4)
    sub_1DA66CC28();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66C2EC();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(_BYTE *, uint64_t))v15)(v12, v6);
}

BOOL static ResizeArtworkProcessingStep.ResizeError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ResizeArtworkProcessingStep.ResizeError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t ResizeArtworkProcessingStep.ResizeError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5E91D4()
{
  sub_1DA670798();
  ResizeArtworkProcessingStep.ResizeError.hash(into:)();
  return sub_1DA6707C8();
}

void sub_1DA5E920C()
{
  JUMPOUT(0x1DF0A039CLL);
}

uint64_t *sub_1DA5E921C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = *(_QWORD *)(v9 + 64) + 7;
  v13 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 40 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    sub_1DA66BE60();
  }
  else
  {
    v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v18 = ((unint64_t)a2 + v11) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, v18, v8);
    v19 = (_OWORD *)((v12 + (((unint64_t)a1 + v11) & v17)) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_OWORD *)((v12 + v18) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8);
    *v21 = *v22;
    v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    v25 = *(_QWORD *)(v24 + 24);
    *(_QWORD *)(v23 + 24) = v25;
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
    (**(void (***)(void))(v25 - 8))();
  }
  return a1;
}

uint64_t sub_1DA5E9374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  *v17 = *v18;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1DA5E9444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_OWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  *v18 = *v17;
  v19 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_OWORD *)v20;
  v21 = *(_OWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_OWORD *)v19 = v22;
  *(_OWORD *)(v19 + 16) = v21;
  return a1;
}

uint64_t sub_1DA5E9510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v19);
  v21 = *(_OWORD *)v20;
  v22 = *(_OWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_OWORD *)v19 = v21;
  *(_OWORD *)(v19 + 16) = v22;
  return a1;
}

uint64_t sub_1DA5E95F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v7 + 64) + v14;
  v16 = *(_QWORD *)(v10 + 64) + 7;
  if (v12 < a2)
  {
    if (((((((((v16 + (v15 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 40) & 0xFFFFFFF8) != 0)
      v17 = 2;
    else
      v17 = a2 - v12 + 1;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X4 }
  }
  if (v8 == v12)
  {
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v22 = a1;
    v11 = *(unsigned int *)(v7 + 84);
    v9 = v13;
    return v21(v22, v11, v9);
  }
  v22 = (v15 + a1) & ~v14;
  if ((_DWORD)v11 == v12)
  {
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v21(v22, v11, v9);
  }
  v23 = *(_QWORD *)(((((((v16 + v22) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 0x18);
  if (v23 >= 0xFFFFFFFF)
    LODWORD(v23) = -1;
  return (v23 + 1);
}

void sub_1DA5E979C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v8 = *(_QWORD *)(sub_1DA66CEBC() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 >= a3)
  {
    v14 = 0u;
    if (a2 <= v10)
      goto LABEL_19;
  }
  else
  {
    if (((((((*(_DWORD *)(v9 + 64) + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v12 = a3 - v10 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    if (a2 <= v10)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((((((*(_DWORD *)(v9 + 64) + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    v15 = ~v10 + a2;
    bzero(a1, ((((((*(_QWORD *)(v9 + 64) + 7 + ((*(_QWORD *)(v8 + 64) + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 40);
    *a1 = v15;
  }
  __asm { BR              X10 }
}

void sub_1DA5E98DC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1DA5E9990);
}

void sub_1DA5E98E4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x1DA5E98ECLL);
  JUMPOUT(0x1DA5E9990);
}

void sub_1DA5E9938()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1DA5E9990);
}

void sub_1DA5E9940()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1DA5E9990);
}

uint64_t sub_1DA5E9948@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_WORD *)(v14 + v15) = 0;
  if (!(_DWORD)v13)
    JUMPOUT(0x1DA5E9990);
  if ((_DWORD)v7 == v10)
  {
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v4 = v14;
    v5 = v13;
    a1 = v7;
    a2 = a3;
  }
  else
  {
    v4 = (v11 + v14) & v12;
    if ((_DWORD)a1 != v10)
      JUMPOUT(0x1DA5E9954);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v5 = v13;
  }
  return v3(v4, v5, a1, a2);
}

uint64_t sub_1DA5E99A8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA5E99F4 + 4 * byte_1DA681724[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA5E9A28 + 4 * byte_1DA68171F[v4]))();
}

uint64_t sub_1DA5E9A28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5E9A30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5E9A38);
  return result;
}

uint64_t sub_1DA5E9A44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5E9A4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA5E9A50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5E9A58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for ResizeArtworkProcessingStep.ResizeError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResizeArtworkProcessingStep.ResizeError);
}

unint64_t sub_1DA5E9A74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE4750;
  if (!qword_1EDAE4750)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE4758);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE4750);
  }
  return result;
}

uint64_t sub_1DA5E9AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66CDA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double UniformBucketingStrategy.maxDimensionsInPoints.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void UniformBucketingStrategy.maxDimensionsInPoints.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*UniformBucketingStrategy.maxDimensionsInPoints.modify())()
{
  return nullsub_1;
}

uint64_t UniformBucketingStrategy.proportions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UniformBucketingStrategy.proportions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*UniformBucketingStrategy.proportions.modify())()
{
  return nullsub_1;
}

uint64_t UniformBucketingStrategy.init(maxDimensionsInPoints:proportions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)a2 = a3;
  *(_QWORD *)(a2 + 8) = result;
  return result;
}

uint64_t static UniformBucketingStrategy.uniform3000MaxStrategy.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1EDADF9D0 != -1)
    swift_once();
  v2 = qword_1EDADF9C0;
  *a1 = qword_1EDADF9B8;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_QWORD *assignWithCopy for UniformBucketingStrategy(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for UniformBucketingStrategy(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UniformBucketingStrategy(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UniformBucketingStrategy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniformBucketingStrategy()
{
  return &type metadata for UniformBucketingStrategy;
}

_QWORD *PageContextFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  if (qword_1F0268570 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B900);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F026B8E8);
  v4 = sub_1DA66D3F0();
  result = MEMORY[0x1DF09DB10](v12, v3, v4);
  if (v12[0])
  {
    v12[0] = sub_1DA66D3E4();
    v12[1] = v6;
    v7 = sub_1DA66CAD8();
    v9 = v8;
    v10 = *(_QWORD *)(a1 + 24);
    v11 = *(_QWORD *)(a1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(a1, v10);
    MetricsFieldsBuilder.addValue<A>(_:forField:)((uint64_t)v12, v7, v9, v10, MEMORY[0x1E0D7E3D0], v11, MEMORY[0x1E0D7E3C8]);
    swift_release();
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1DA5E9E08(uint64_t a1)
{
  return PageContextFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(a1);
}

ValueMetadata *type metadata accessor for PageContextFieldsProvider()
{
  return &type metadata for PageContextFieldsProvider;
}

PodcastsUI::LintMetricsEventIntent __swiftcall LintMetricsEventIntent.init(fields:)(PodcastsUI::LintMetricsEventIntent fields)
{
  PodcastsUI::LintMetricsEventIntent *v1;

  v1->fields._rawValue = fields.fields._rawValue;
  return fields;
}

unint64_t static LintMetricsEventIntent.kind.getter()
{
  return 0xD000000000000016;
}

uint64_t LintMetricsEventIntent.fields.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1DA5E9E58(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000001DA681990;
}

uint64_t sub_1DA5E9E78()
{
  sub_1DA670798();
  sub_1DA66F94C();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5E9EC4()
{
  return sub_1DA66F94C();
}

uint64_t sub_1DA5E9ED8()
{
  sub_1DA670798();
  sub_1DA66F94C();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5E9F20@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DA670600();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1DA5E9F70(_QWORD *a1@<X8>)
{
  *a1 = 0x73646C656966;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1DA5E9F88()
{
  return 0x73646C656966;
}

uint64_t sub_1DA5E9F9C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DA670600();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1DA5E9FF0()
{
  sub_1DA5EA1B8();
  return sub_1DA670810();
}

uint64_t sub_1DA5EA018()
{
  sub_1DA5EA1B8();
  return sub_1DA67081C();
}

uint64_t LintMetricsEventIntent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[6];
  uint64_t v12;

  v3 = sub_1DA66EC20();
  v12 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D00);
  v11[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA5EA1B8();
  sub_1DA670804();
  v11[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AD0);
  v11[2] = v9;
  swift_bridgeObjectRetain();
  sub_1DA66EC14();
  sub_1DA5EA1FC();
  sub_1DA670660();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v11[0] + 8))(v8, v6);
}

unint64_t sub_1DA5EA1B8()
{
  unint64_t result;

  result = qword_1EDAE3D70;
  if (!qword_1EDAE3D70)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA681BBC, &type metadata for LintMetricsEventIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDAE3D70);
  }
  return result;
}

unint64_t sub_1DA5EA1FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE48B0;
  if (!qword_1EDAE48B0)
  {
    v1 = sub_1DA66EC20();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D3F510], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE48B0);
  }
  return result;
}

unint64_t sub_1DA5EA248()
{
  unint64_t result;

  result = qword_1F026CE50;
  if (!qword_1F026CE50)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for LintMetricsEventIntent, &type metadata for LintMetricsEventIntent);
    atomic_store(result, (unint64_t *)&qword_1F026CE50);
  }
  return result;
}

uint64_t sub_1DA5EA290()
{
  return MEMORY[0x1E0D40308];
}

uint64_t sub_1DA5EA29C(_QWORD *a1)
{
  return LintMetricsEventIntent.encode(to:)(a1);
}

uint64_t sub_1DA5EA2B0()
{
  sub_1DA5EA490();
  return sub_1DA66F2F8();
}

ValueMetadata *type metadata accessor for LintMetricsEventIntent()
{
  return &type metadata for LintMetricsEventIntent;
}

uint64_t storeEnumTagSinglePayload for LintMetricsEventIntent.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA5EA35C + 4 * asc_1DA6819A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA5EA37C + 4 * byte_1DA6819A5[v4]))();
}

_BYTE *sub_1DA5EA35C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA5EA37C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5EA384(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5EA38C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5EA394(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5EA39C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LintMetricsEventIntent.CodingKeys()
{
  return &type metadata for LintMetricsEventIntent.CodingKeys;
}

unint64_t sub_1DA5EA3BC()
{
  unint64_t result;

  result = qword_1F026CE58;
  if (!qword_1F026CE58)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA681B94, &type metadata for LintMetricsEventIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026CE58);
  }
  return result;
}

unint64_t sub_1DA5EA404()
{
  unint64_t result;

  result = qword_1EDAE3D80;
  if (!qword_1EDAE3D80)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA681ACC, &type metadata for LintMetricsEventIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDAE3D80);
  }
  return result;
}

unint64_t sub_1DA5EA44C()
{
  unint64_t result;

  result = qword_1EDAE3D78;
  if (!qword_1EDAE3D78)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA681AF4, &type metadata for LintMetricsEventIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDAE3D78);
  }
  return result;
}

unint64_t sub_1DA5EA490()
{
  unint64_t result;

  result = qword_1EDAE2788;
  if (!qword_1EDAE2788)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for LintMetricsEventIntent, &type metadata for LintMetricsEventIntent);
    atomic_store(result, (unint64_t *)&qword_1EDAE2788);
  }
  return result;
}

uint64_t sub_1DA5EA520(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  v6 = sub_1DA66C4D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v10 = objc_allocWithZone(MEMORY[0x1E0CB37F0]);
  v11 = a1;
  v12 = objc_msgSend(v10, sel_init);
  objc_msgSend(v12, sel_setNumberStyle_, 1);
  objc_msgSend(v12, sel_setFormatterBehavior_, 1040);
  sub_1DA5EA6B4((uint64_t)v9);
  v13 = (void *)sub_1DA66C490();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v12, sel_setLocale_, v13);

  objc_msgSend(v12, sel_setMinimumFractionDigits_, a2);
  objc_msgSend(v12, sel_setMaximumFractionDigits_, a3);
  v14 = objc_msgSend(v12, sel_stringFromNumber_, v11);
  if (!v14)
  {

    return 0;
  }
  v15 = v14;
  v16 = sub_1DA66F8BC();

  return v16;
}

uint64_t sub_1DA5EA6B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  char v29;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a1;
  v2 = sub_1DA66C4D8();
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C4B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0158);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - v16;
  v38 = v1;
  sub_1DA66C4CC();
  sub_1DA66C4A8();
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v11, v5);
  v19 = sub_1DA66C484();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v17, 1, v19) == 1)
  {
    v22 = v39;
  }
  else
  {
    v37 = v18;
    v23 = sub_1DA66C478();
    v25 = v24;
    v26 = v17;
    v27 = *(void (**)(char *, uint64_t))(v20 + 8);
    v27(v26, v19);
    if (v23 == 29281 && v25 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
      v22 = v39;
      v30 = v4;
    }
    else
    {
      v29 = sub_1DA6706D8();
      swift_bridgeObjectRelease();
      v22 = v39;
      v30 = v4;
      if ((v29 & 1) == 0)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v22, v38, v41);
    }
    sub_1DA66C49C();
    sub_1DA66C4CC();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v41);
    sub_1DA66C4A8();
    v37(v8, v5);
    if (v21(v14, 1, v19) != 1)
    {
      v32 = sub_1DA66C478();
      v34 = v33;
      v27(v14, v19);
      if (v32 == 29281 && v34 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = sub_1DA6706D8();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v22, v38, v41);
      }
      return sub_1DA66C49C();
    }
    v17 = v14;
  }
  sub_1DA47E2F0((uint64_t)v17, &qword_1EDAE0158);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v22, v38, v41);
}

uint64_t sub_1DA5EABA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char isUniquelyReferenced_nonNull_native;
  id v37;
  char *v38;
  void *v39;
  id v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v47 = a1;
  v48 = a2;
  v4 = sub_1DA66C4D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DA66C544();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DA66C430();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v49 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA5BAD58(a3, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    v43 = v9;
    v44 = v8;
    v45 = v4;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v49, v14, v15);
    v19 = (uint64_t *)(v46 + OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_dateFormatters);
    swift_beginAccess();
    v20 = *v19;
    v21 = (uint64_t)v7;
    v22 = v11;
    if (*(_QWORD *)(*v19 + 16))
    {
      v23 = v48;
      swift_bridgeObjectRetain();
      v24 = sub_1DA499108(v47, v23);
      if ((v25 & 1) != 0)
      {
        v26 = *(void **)(*(_QWORD *)(v20 + 56) + 8 * v24);
        swift_endAccess();
        v27 = v26;
        swift_bridgeObjectRelease();
LABEL_8:
        v37 = v27;
        v38 = v49;
        v39 = (void *)sub_1DA66C3F4();
        v40 = objc_msgSend(v37, sel_stringFromDate_, v39);

        v18 = sub_1DA66F8BC();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v38, v15);

        return v18;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    objc_msgSend(v28, sel_setFormattingContext_, 2);
    v42 = v16;
    v29 = v15;
    v30 = v48;
    sub_1DA66C4C0();
    v31 = (void *)sub_1DA66C508();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v44);
    objc_msgSend(v28, sel_setCalendar_, v31);

    sub_1DA5EA6B4(v21);
    v32 = (void *)sub_1DA66C490();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v45);
    objc_msgSend(v28, sel_setLocale_, v32);

    v33 = v47;
    v34 = v30;
    v15 = v29;
    v16 = v42;
    v35 = (void *)sub_1DA66F88C();
    objc_msgSend(v28, sel_setLocalizedDateFormatFromTemplate_, v35);

    swift_beginAccess();
    swift_bridgeObjectRetain();
    v27 = v28;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v50 = *v19;
    *v19 = 0x8000000000000000;
    sub_1DA538348((uint64_t)v27, v33, v34, isUniquelyReferenced_nonNull_native);
    *v19 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_8;
  }
  sub_1DA47E2F0((uint64_t)v14, &qword_1EDADE6C8);
  return 0;
}

void sub_1DA5EB0E0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;

  v2 = sub_1DA66C4D8();
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = objc_msgSend(a1, sel_longLongValue, v4);
    v8 = (void *)sub_1DA66C490();
    v9 = (id)JECountFormatterMakeStringFromNumber();

    if (v9)
    {
      sub_1DA66F8BC();
LABEL_8:

      return;
    }
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v7);
    if (v10)
    {
      v11 = v10;
      v12 = objc_allocWithZone(MEMORY[0x1E0CB37F0]);
      v13 = v11;
      v9 = objc_msgSend(v12, sel_init);
      objc_msgSend(v9, sel_setNumberStyle_, 1);
      objc_msgSend(v9, sel_setFormatterBehavior_, 1040);
      sub_1DA5EA6B4((uint64_t)v6);
      v14 = (void *)sub_1DA66C490();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      objc_msgSend(v9, sel_setLocale_, v14);

      objc_msgSend(v9, sel_setMinimumFractionDigits_, 0);
      objc_msgSend(v9, sel_setMaximumFractionDigits_, 3);
      v15 = objc_msgSend(v9, sel_stringFromNumber_, v13);
      if (v15)
      {
        v16 = v15;
        sub_1DA66F8BC();

        goto LABEL_8;
      }

    }
    __break(1u);
  }
}

uint64_t sub_1DA5EB578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0160);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v3 + OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_bundle);
  v9 = (void *)sub_1DA66F88C();
  v10 = (void *)sub_1DA66F88C();
  v11 = (void *)sub_1DA66F88C();
  v12 = objc_msgSend(v8, sel_localizedStringForKey_value_table_localization_, v9, v10, 0, v11);

  sub_1DA66F8BC();
  sub_1DA5EA6B4((uint64_t)v7);
  v13 = sub_1DA66C4D8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v14 = swift_allocObject();
  v15 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v14 + 16) = xmmword_1DA678510;
  v16 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 32) = a3;
  v17 = sub_1DA66F8D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA47E2F0((uint64_t)v7, &qword_1EDAE0160);
  return v17;
}

uint64_t sub_1DA5EB7BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C430();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - v10;
  sub_1DA5BAD58(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1DA47E2F0((uint64_t)v4, &qword_1EDADE6C8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    sub_1DA66C424();
    v12 = sub_1DA5EB918((uint64_t)v11);
    v13 = *(void (**)(char *, uint64_t))(v6 + 8);
    v13(v8, v5);
    v13(v11, v5);
  }
  return v12;
}

uint64_t sub_1DA5EB918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  double v7;
  double v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1DA66C3E8();
  v8 = floor(v7 / 31536000.0);
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = (uint64_t)v8;
  if ((uint64_t)v8 >= 1)
  {
    v10 = "TIME_AGO_YEARS_AGO";
    return sub_1DA5EB578(0xD000000000000012, (unint64_t)(v10 - 32) | 0x8000000000000000, v9);
  }
  v12 = floor(v7 / 86400.0);
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
    goto LABEL_25;
  if (v12 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((uint64_t)v12 >= 7)
  {
    v17 = sub_1DA66C430();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v5, a1, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v5, 0, 1, v17);
    v15 = 0x79202C64204D4D4DLL;
    v16 = 0xEB00000000797979;
    goto LABEL_14;
  }
  if ((uint64_t)v12 >= 1)
  {
    v13 = sub_1DA66C430();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v5, a1, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v5, 0, 1, v13);
    v15 = 69;
    v16 = 0xE100000000000000;
LABEL_14:
    v11 = sub_1DA5EABA8(v15, v16, (uint64_t)v5);
    sub_1DA47E2F0((uint64_t)v5, &qword_1EDADE6C8);
    return v11;
  }
  v19 = floor(v7 / 3600.0);
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
    goto LABEL_28;
  if (v19 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v19 < 9.22337204e18)
  {
    v9 = (uint64_t)v19;
    if ((uint64_t)v19 < 1)
    {
      v20 = *(void **)(v1 + OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_bundle);
      v21 = (void *)sub_1DA66F88C();
      v22 = (void *)sub_1DA66F88C();
      v23 = (void *)sub_1DA66F88C();
      v24 = objc_msgSend(v20, sel_localizedStringForKey_value_table_localization_, v21, v22, 0, v23);

      v11 = sub_1DA66F8BC();
      return v11;
    }
    v10 = "TIME_AGO_HOURS_AGO";
    return sub_1DA5EB578(0xD000000000000012, (unint64_t)(v10 - 32) | 0x8000000000000000, v9);
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1DA5EBD80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  id v10;
  id v12;
  void *v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_dateIntervalFormatters);
  swift_beginAccess();
  v6 = *v5;
  if (*(_QWORD *)(*v5 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DA499108(a1, a2);
    if ((v8 & 1) != 0)
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7);
      swift_endAccess();
      v10 = v9;
      swift_bridgeObjectRelease();
      return v10;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3590]), sel_init);
  v13 = (void *)sub_1DA66F88C();
  objc_msgSend(v12, sel_setDateTemplate_, v13);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v14 = v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v5;
  *v5 = 0x8000000000000000;
  sub_1DA53835C((uint64_t)v14, a1, a2, isUniquelyReferenced_nonNull_native);
  *v5 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v14;
}

uint64_t sub_1DA5EC078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  int v23;
  void (*v24)(char *, uint64_t);
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a2;
  v35 = a5;
  v36 = a4;
  v37 = a1;
  v8 = sub_1DA66C544();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66C4E4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v34 - v17;
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v34 - v21;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104))((char *)&v34 - v21, *MEMORY[0x1E0CB0EF0], v12, v20);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v22, v12);
  sub_1DA66C52C();
  sub_1DA66C4FC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1DA5EC4A4();
  v23 = sub_1DA66F850();
  v24 = *(void (**)(char *, uint64_t))(v13 + 8);
  v24(v15, v12);
  v24(v18, v12);
  v25 = a6 != 0;
  if ((v23 & v25) != 0)
    v26 = v35;
  else
    v26 = a3;
  if ((v23 & v25) != 0)
    v27 = a6;
  else
    v27 = v36;
  v28 = sub_1DA5EBD80(v26, v27);
  v29 = (void *)sub_1DA66C3F4();
  v30 = (void *)sub_1DA66C3F4();
  v31 = objc_msgSend(v28, sel_stringFromDate_toDate_, v29, v30);

  v32 = sub_1DA66F8BC();
  return v32;
}

uint64_t sub_1DA5EC49C()
{
  return _s17JSLocalizerObjectCMa();
}

unint64_t sub_1DA5EC4A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE0168;
  if (!qword_1EDAE0168)
  {
    v1 = sub_1DA66C4E4();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CB0F18], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE0168);
  }
  return result;
}

unint64_t sub_1DA5EC4EC()
{
  unint64_t result;

  result = qword_1EDAE4C48;
  if (!qword_1EDAE4C48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDAE4C48);
  }
  return result;
}

uint64_t sub_1DA5EC528()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5EC54C(void *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE53C0);
  v4 = sub_1DA6707D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - v6;
  *(uint64_t *)((char *)&v10 - v6) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  v8 = a1;
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DA5EC60C(void *a1)
{
  uint64_t v1;

  return sub_1DA5EC54C(a1, *(void (**)(char *))(v1 + 24));
}

uint64_t AssetProcessingStep<>.prepareImageForDestination()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PreparedArtworkRequest();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66CEBC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66D4A4();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v16, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a1);
  sub_1DA5ED40C((uint64_t)v12, a3);
  v18 = type metadata accessor for PrepareUIImageProcessingStep(0, a1, a2, v17);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3 + *(int *)(v18 + 36), v9, a1);
}

uint64_t PrepareUIImageProcessingStep.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA5ECBA8(a1, v1);
}

uint64_t (*PrepareUIImageProcessingStep.metadata.modify())()
{
  return nullsub_1;
}

uint64_t PrepareUIImageProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t sub_1DA5EC79C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t (*v16)(char *, uint64_t);
  uint64_t result;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v22 = a3;
  v5 = sub_1DA66CEBC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - v10;
  v12 = (unint64_t)ArtworkContent.image()();
  if (v12)
  {
    v14 = (void *)v12;
    type metadata accessor for PrepareUIImageProcessingStep(0, a1, a2, v13);
    sub_1DA66D4A4();
    v15 = sub_1DA66CDCC();
    v16 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
    result = v16(v11, v5);
    if ((v15 & 1) == 0)
    {
      sub_1DA66D4A4();
      v18 = sub_1DA5EC950(v14);

      result = v16(v9, v5);
      v14 = v18;
    }
    *v22 = v14;
  }
  else
  {
    v19 = sub_1DA66D3A8();
    sub_1DA47E32C(&qword_1F026B920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E390], MEMORY[0x1E0D7E398]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v20, *MEMORY[0x1E0D7E378], v19);
    return swift_willThrow();
  }
  return result;
}

id sub_1DA5EC950(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  _QWORD v11[3];
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  v10 = a1;
  v1 = sub_1DA66DEF4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66CE74();
  if (v12)
  {
    __swift_project_boxed_opaque_existential_1(v11, v12);
    sub_1DA66DCA8();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  }
  else
  {
    sub_1DA47E2F0((uint64_t)v11, &qword_1EDAE5310);
    memset(v13, 0, sizeof(v13));
    v14 = 0;
  }
  v5 = objc_msgSend(v10, sel_imageByPreparingForDisplay, v10);
  sub_1DA59C760((uint64_t)v13, (uint64_t)v11);
  if (v12)
  {
    __swift_project_boxed_opaque_existential_1(v11, v12);
    sub_1DA66CD84();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    if (v5)
    {
LABEL_6:
      sub_1DA47E2F0((uint64_t)v13, &qword_1EDAE19B0);
      return v5;
    }
  }
  else
  {
    sub_1DA47E2F0((uint64_t)v11, &qword_1EDAE19B0);
    if (v5)
      goto LABEL_6;
  }
  sub_1DA66DE94();
  v7 = sub_1DA66DEDC();
  v8 = sub_1DA66FDA8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1DA478000, v7, v8, "Failed to prepare image for the display", v9, 2u);
    MEMORY[0x1DF0A0474](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1DA47E2F0((uint64_t)v13, &qword_1EDAE19B0);
  return v10;
}

uint64_t sub_1DA5ECBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreparedArtworkRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA5ECBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for PrepareUIImageProcessingStep(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  v9 = sub_1DA66CEBC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 36), v5);
  return swift_deallocObject();
}

uint64_t sub_1DA5ECC88@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  type metadata accessor for PrepareUIImageProcessingStep(0, v4, v5, a1);
  return sub_1DA5EC79C(v4, v5, a2);
}

uint64_t *sub_1DA5ECCFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    sub_1DA66BE60();
  }
  else
  {
    v16 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v16, ((unint64_t)a2 + v11) & v16, v8);
  }
  return a1;
}

uint64_t sub_1DA5ECDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1DA5ECE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1DA5ECECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1DA5ECF48(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = *(_QWORD *)(v7 + 64) + v13;
  if (a2 <= v12)
    goto LABEL_23;
  v15 = (v14 & ~v13) + *(_QWORD *)(v10 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 < 2)
    {
LABEL_23:
      if (v12)
      {
        if (v8 >= v11)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, v8, v6);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))((v14 + a1) & ~v13, *(unsigned int *)(v10 + 84), v9);
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_23;
LABEL_14:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = (v14 & ~(_DWORD)v13) + *(_DWORD *)(v10 + 64);
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v12 + v19 + 1;
}

void sub_1DA5ED0D8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v8 = *(_QWORD *)(sub_1DA66CEBC() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v8 + 64);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = ((v11 + v12) & ~v12) + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v14 = 0u;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v10 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v10 < a2)
  {
    v15 = ~v10 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, ((v11 + v12) & ~v12) + *(_QWORD *)(v9 + 64));
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, ((v11 + v12) & ~v12) + *(_QWORD *)(v9 + 64));
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_1DA5ED34C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1DA5ED338);
}

void sub_1DA5ED35C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x1DA5ED338);
}

void sub_1DA5ED364()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x1DA5ED338);
}

void sub_1DA5ED370()
{
  swift_getAssociatedTypeWitness();
  sub_1DA483644();
  swift_getAssociatedConformanceWitness();
  sub_1DA66DF48();
  JUMPOUT(0x1DF0A039CLL);
}

uint64_t sub_1DA5ED40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreparedArtworkRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id EpisodeTextInfoDetail.summary.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void EpisodeTextInfoDetail.summary.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*EpisodeTextInfoDetail.summary.modify())()
{
  return nullsub_1;
}

void *EpisodeTextInfoDetail.notes.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void EpisodeTextInfoDetail.notes.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*EpisodeTextInfoDetail.notes.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeTextInfoDetail.init(summary:notes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

id NowPlayingEpisodeContextItem.notes.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void NowPlayingEpisodeContextItem.notes.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*NowPlayingEpisodeContextItem.notes.modify())()
{
  return nullsub_1;
}

uint64_t NowPlayingEpisodeContextItem.plainNotes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NowPlayingEpisodeContextItem.plainNotes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*NowPlayingEpisodeContextItem.plainNotes.modify())()
{
  return nullsub_1;
}

uint64_t (*NowPlayingEpisodeContextItem.description.modify())()
{
  return nullsub_1;
}

uint64_t NowPlayingEpisodeContextItem.descriptionHasHTML.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t NowPlayingEpisodeContextItem.descriptionHasHTML.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*NowPlayingEpisodeContextItem.descriptionHasHTML.modify())()
{
  return nullsub_1;
}

uint64_t NowPlayingEpisodeContextItem.isLocal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t NowPlayingEpisodeContextItem.isLocal.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = result;
  return result;
}

uint64_t (*NowPlayingEpisodeContextItem.isLocal.modify())()
{
  return nullsub_1;
}

uint64_t NowPlayingEpisodeContextItem.episodeShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA5ED900(type metadata accessor for NowPlayingEpisodeContextItem, a1);
}

uint64_t NowPlayingEpisodeContextItem.episodeShareURL.setter(uint64_t a1)
{
  return sub_1DA5ED940(a1, type metadata accessor for NowPlayingEpisodeContextItem);
}

uint64_t (*NowPlayingEpisodeContextItem.episodeShareURL.modify())()
{
  type metadata accessor for NowPlayingEpisodeContextItem(0);
  return nullsub_1;
}

uint64_t NowPlayingEpisodeContextItem.init(notes:plainNotes:description:descriptionHasHTML:isLocal:episodeShareURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v18;
  uint64_t v19;

  v18 = a9 + *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
  v19 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 41) = a7;
  return sub_1DA5DFF28(a8, v18);
}

uint64_t LibraryEpisodeContextItem.summary.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryEpisodeContextItem.summary.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LibraryEpisodeContextItem.summary.modify())()
{
  return nullsub_1;
}

void *LibraryEpisodeContextItem.cachedDescription.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void LibraryEpisodeContextItem.cachedDescription.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*LibraryEpisodeContextItem.cachedDescription.modify())()
{
  return nullsub_1;
}

uint64_t LibraryEpisodeContextItem.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s10PodcastsUI28NowPlayingEpisodeContextItemV11descriptionSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*LibraryEpisodeContextItem.description.modify())()
{
  return nullsub_1;
}

uint64_t LibraryEpisodeContextItem.descriptionWithoutHTML.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryEpisodeContextItem.descriptionWithoutHTML.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*LibraryEpisodeContextItem.descriptionWithoutHTML.modify())()
{
  return nullsub_1;
}

uint64_t LibraryEpisodeContextItem.descriptionHasHTML.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t LibraryEpisodeContextItem.descriptionHasHTML.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*LibraryEpisodeContextItem.descriptionHasHTML.modify())()
{
  return nullsub_1;
}

uint64_t LibraryEpisodeContextItem.episodeShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA5ED900(type metadata accessor for LibraryEpisodeContextItem, a1);
}

uint64_t sub_1DA5ED900@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(int *)(a1(0) + 36);
  return sub_1DA4B2F78(v4, a2);
}

uint64_t LibraryEpisodeContextItem.episodeShareURL.setter(uint64_t a1)
{
  return sub_1DA5ED940(a1, type metadata accessor for LibraryEpisodeContextItem);
}

uint64_t sub_1DA5ED940(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(int *)(a2(0) + 36);
  return sub_1DA5DFF28(a1, v4);
}

uint64_t (*LibraryEpisodeContextItem.episodeShareURL.modify())()
{
  type metadata accessor for LibraryEpisodeContextItem(0);
  return nullsub_1;
}

uint64_t LibraryEpisodeContextItem.init(summary:cachedDescription:description:descriptionWithoutHTML:descriptionHasHTML:episodeShareURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  uint64_t v19;

  v18 = a9 + *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
  v19 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8;
  return sub_1DA5DFF28(a10, v18);
}

void EpisodeTextInfoProvider.textInfoDetailForContext(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(__n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  unsigned int (**v35)(char *, uint64_t, id);
  uint64_t v36;
  uint64_t *v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t *v45;
  _QWORD *v46;
  id v47;
  id v48;
  char *v49;
  void *v50;
  unsigned int (**v51)(char *, uint64_t, id);
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char v92;
  id v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  unint64_t v98;
  id v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t *v109;
  unsigned int (**v110)(char *, uint64_t, id);
  id v111;
  _QWORD *v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;

  v112 = a2;
  v106 = sub_1DA66C0D0();
  v104 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v105 = (char *)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EDAE4E00);
  v101 = *(_QWORD *)(v4 - 8);
  v102 = v4;
  MEMORY[0x1E0C80A78](v4);
  v100 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)sub_1DA66C358();
  v7 = *(v6 - 1);
  MEMORY[0x1E0C80A78](v6);
  v108 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LibraryEpisodeContextItem(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NowPlayingEpisodeContextItem(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for EpisodeTextInfoContext(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v110 = (unsigned int (**)(char *, uint64_t, id))v7;
  v111 = v6;
  v23 = *(void (**)(__n128))(v7 + 56);
  v113 = (uint64_t)&v97 - v24;
  v23(v22);
  sub_1DA5EE874(a1, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DA4F7228((uint64_t)v17, (uint64_t)v11, type metadata accessor for LibraryEpisodeContextItem);
    v25 = 24;
    if (v11[56])
      v25 = 40;
    v26 = 32;
    if (v11[56])
      v26 = 48;
    v27 = *(_QWORD *)&v11[v26];
    v28 = *(_QWORD *)&v11[v25];
    v109 = (uint64_t *)v27;
    v107 = v28;
    if (!v27)
      goto LABEL_15;
    v29 = HIBYTE(v27) & 0xF;
    if ((v27 & 0x2000000000000000) == 0)
      v29 = v28 & 0xFFFFFFFFFFFFLL;
    if (v29 && (v30 = (void *)*((_QWORD *)v11 + 2)) != 0)
    {
      swift_bridgeObjectRetain();
      v31 = v30;
      v32 = v30;
      v33 = objc_msgSend(v32, sel_length);
      v34 = v113;
      sub_1DA4ED9D4(v113);
      v35 = v110;
      v36 = (uint64_t)v108;
      if (!v33)
      {

        v31 = 0;
      }
    }
    else
    {
LABEL_15:
      swift_bridgeObjectRetain();
      v34 = v113;
      sub_1DA4ED9D4(v113);
      v31 = 0;
      v35 = v110;
      v36 = (uint64_t)v108;
    }
    v40 = *(_QWORD *)v11;
    v39 = *((_QWORD *)v11 + 1);
    v103 = v11[56];
    sub_1DA4B2F78((uint64_t)&v11[*(int *)(v9 + 36)], v34);
    swift_bridgeObjectRetain();
    sub_1DA47F880((uint64_t)v11, type metadata accessor for LibraryEpisodeContextItem);
    v41 = v34;
    v42 = v111;
  }
  else
  {
    sub_1DA4F7228((uint64_t)v17, (uint64_t)v14, type metadata accessor for NowPlayingEpisodeContextItem);
    if (v14[41] == 1)
    {
      v37 = (uint64_t *)*((_QWORD *)v14 + 2);
      v107 = *((_QWORD *)v14 + 1);
      v31 = *(id *)v14;
      v38 = *(id *)v14;
      v109 = v37;
      swift_bridgeObjectRetain();
    }
    else
    {
      v107 = 0;
      v109 = 0;
      v31 = 0;
    }
    v41 = v113;
    v42 = v111;
    v36 = (uint64_t)v108;
    v39 = *((_QWORD *)v14 + 4);
    if (v39)
    {
      v40 = *((_QWORD *)v14 + 3);
      if ((v39 & 0x2000000000000000) != 0)
        v43 = HIBYTE(v39) & 0xF;
      else
        v43 = v40 & 0xFFFFFFFFFFFFLL;
      swift_bridgeObjectRetain();
      sub_1DA4ED9D4(v41);
      if (!v43)
      {
        swift_bridgeObjectRelease();
        v40 = 0;
        v39 = 0;
      }
    }
    else
    {
      sub_1DA4ED9D4(v113);
      v40 = 0;
    }
    v103 = v14[40];
    sub_1DA4B2F78((uint64_t)&v14[*(int *)(v12 + 36)], v41);
    sub_1DA47F880((uint64_t)v14, type metadata accessor for NowPlayingEpisodeContextItem);
    v35 = v110;
  }
  sub_1DA4B2F78(v41, (uint64_t)v20);
  v44 = v31;
  if (v35[6](v20, 1, v42) == 1)
  {
    sub_1DA4ED9D4((uint64_t)v20);
    v45 = v109;
    v46 = v112;
    if (v109)
      goto LABEL_28;
LABEL_59:
    if (!v39)
    {
LABEL_62:
      v66 = 0;
      if (v44)
        goto LABEL_61;
      goto LABEL_63;
    }
LABEL_60:
    swift_beginAccess();
    v92 = byte_1F026E6C0;
    v93 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
    v66 = sub_1DA47CFE4(v40, v39, 0, v92);
    if (v44)
      goto LABEL_61;
LABEL_63:
    sub_1DA4ED9D4(v41);
    v96 = 0;
    goto LABEL_64;
  }
  v35[4]((char *)v36, (uint64_t)v20, v42);
  v67 = sub_1DA66C784();
  v116 = v67;
  v117 = sub_1DA4A68B0();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v114);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v67 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E0D7D560], v67);
  LOBYTE(v67) = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v114);
  v45 = v109;
  if ((v67 & 1) != 0)
  {
    v108 = (char *)v40;
    if (!v44)
    {
      if (!v103)
        goto LABEL_58;
      goto LABEL_50;
    }
    v69 = v39;
    v70 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
    v71 = v44;
    v72 = objc_msgSend(v70, sel_initWithAttributedString_, v71);
    v73 = objc_msgSend(v71, sel_string);
    v74 = sub_1DA66F8BC();
    v76 = v75;

    v114 = (char *)v74;
    v115 = v76;
    if (qword_1F0268410 != -1)
      swift_once();
    __swift_project_value_buffer(v102, (uint64_t)qword_1F0268E50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268E68);
    sub_1DA484214();
    sub_1DA4841D4(&qword_1F0268E70, qword_1EDAE4E00, MEMORY[0x1E0DF1F60]);
    v77 = sub_1DA66F820();
    swift_bridgeObjectRelease();
    v78 = *(_QWORD *)(v77 + 16);
    if (v78)
    {
      v79 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F0268E78) - 8);
      v80 = v77 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
      v81 = *(_QWORD *)(v79 + 72);
      swift_bridgeObjectRetain();
      v44 = v72;
      do
      {
        sub_1DA4E6978(v80, v72, v36, v71);
        v80 += v81;
        --v78;
      }
      while (v78);

      swift_bridgeObjectRelease_n();
      v41 = v113;
    }
    else
    {

      swift_bridgeObjectRelease();
      v44 = v72;
    }
    v39 = v69;
    v35 = v110;
    v42 = v111;
    v40 = (uint64_t)v108;
    v45 = v109;
    if (v103)
    {
LABEL_50:
      v98 = v39;
      v99 = v44;
      if (v45)
      {
        v118 = v107;
        v119 = (unint64_t)v45;
        if (qword_1F0268410 != -1)
          swift_once();
        v82 = v102;
        v83 = __swift_project_value_buffer(v102, (uint64_t)qword_1F0268E50);
        v84 = v101;
        v85 = v100;
        v86 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 16))(v100, v83, v82);
        v109 = &v97;
        MEMORY[0x1E0C80A78](v86);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268E68);
        sub_1DA5EE8D0();
        sub_1DA5329A0();
        sub_1DA4841D4(&qword_1F0268E70, qword_1EDAE4E00, MEMORY[0x1E0DF1F60]);
        sub_1DA66FD30();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v82);
        swift_bridgeObjectRelease();
        v45 = (uint64_t *)v115;
        v107 = (uint64_t)v114;
        v41 = v113;
        v44 = v99;
        v39 = v98;
        v35 = v110;
        v42 = v111;
        v40 = (uint64_t)v108;
      }
      if (v39)
      {
        v109 = v45;
        v118 = v40;
        v119 = v39;
        if (qword_1F0268410 != -1)
          swift_once();
        v87 = v102;
        v88 = __swift_project_value_buffer(v102, (uint64_t)qword_1F0268E50);
        v89 = v101;
        v90 = v100;
        v91 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 16))(v100, v88, v87);
        MEMORY[0x1E0C80A78](v91);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268E68);
        sub_1DA5EE8D0();
        sub_1DA5329A0();
        sub_1DA4841D4(&qword_1F0268E70, qword_1EDAE4E00, MEMORY[0x1E0DF1F60]);
        sub_1DA66FD30();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v87);
        swift_bridgeObjectRelease();
        v40 = (uint64_t)v114;
        v39 = v115;
        v41 = v113;
        v44 = v99;
        v35 = v110;
        v42 = v111;
        v45 = v109;
      }
    }
  }
LABEL_58:
  ((void (*)(uint64_t, id))v35[1])(v36, v42);
  v46 = v112;
  if (!v45)
    goto LABEL_59;
LABEL_28:
  if (!v39)
    goto LABEL_47;
  v99 = v44;
  v47 = objc_allocWithZone(MEMORY[0x1E0CB3780]);
  swift_bridgeObjectRetain();
  v48 = objc_msgSend(v47, sel_init);
  v49 = v105;
  sub_1DA66C0AC();
  v50 = (void *)sub_1DA66C094();
  v108 = (char *)v40;
  v51 = *(unsigned int (***)(char *, uint64_t, id))(v104 + 8);
  v52 = v106;
  ((void (*)(char *, uint64_t))v51)(v49, v106);
  objc_msgSend(v48, sel_formUnionWithCharacterSet_, v50);

  sub_1DA66C0A0();
  v53 = (void *)sub_1DA66C094();
  ((void (*)(char *, uint64_t))v51)(v49, v52);
  objc_msgSend(v48, sel_formUnionWithCharacterSet_, v53);

  sub_1DA66C0C4();
  v54 = (void *)sub_1DA66C094();
  ((void (*)(char *, uint64_t))v51)(v49, v52);
  v110 = v51;
  objc_msgSend(v48, sel_formUnionWithCharacterSet_, v54);

  v114 = (char *)v107;
  v115 = (unint64_t)v45;
  sub_1DA66C0B8();
  sub_1DA498918();
  v55 = sub_1DA6702DC();
  ((void (*)(char *, uint64_t))v51)(v49, v52);
  swift_bridgeObjectRelease();
  v114 = (char *)v55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA4841D4((unint64_t *)&qword_1EDAE5348, &qword_1EDAE5340, MEMORY[0x1E0DEAF20]);
  v56 = sub_1DA66F838();
  v109 = v57;
  swift_bridgeObjectRelease();
  v114 = v108;
  v115 = v39;
  v98 = v39;
  v111 = v48;
  sub_1DA66C0B8();
  v58 = sub_1DA6702DC();
  v59 = v52;
  v60 = v56;
  ((void (*)(char *, uint64_t))v110)(v49, v59);
  swift_bridgeObjectRelease();
  v114 = (char *)v58;
  v61 = v109;
  v62 = sub_1DA66F838();
  v64 = v63;
  swift_bridgeObjectRelease();
  v114 = (char *)v60;
  v115 = (unint64_t)v61;
  v118 = v62;
  v119 = v64;
  if ((sub_1DA67030C() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = v112;
    v41 = v113;
    v44 = v99;
    v39 = v98;
LABEL_43:
    v40 = (uint64_t)v108;
    goto LABEL_60;
  }
  v114 = (char *)v60;
  v115 = (unint64_t)v61;
  v118 = v62;
  v119 = v64;
  v65 = sub_1DA6702E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v41 = v113;
  if (!v65)
  {
    v46 = v112;
    v44 = v99;
    v39 = v98;
    if (v103)
    {
LABEL_47:
      swift_bridgeObjectRelease();
      goto LABEL_62;
    }

    v44 = 0;
    goto LABEL_43;
  }
  swift_bridgeObjectRelease();
  v66 = 0;
  v46 = v112;
  v44 = v99;
  if (!v99)
    goto LABEL_63;
LABEL_61:
  v94 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
  v95 = v44;
  v96 = sub_1DA64D2F4(v95, 0);

  sub_1DA4ED9D4(v41);
LABEL_64:
  *v46 = v66;
  v46[1] = v96;
}

void sub_1DA5EE764(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  EpisodeTextInfoProvider.textInfoDetailForContext(_:)(a1, a2);
}

uint64_t _s10PodcastsUI21EpisodeTextInfoDetailV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;
  id v10;
  char v11;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  if (*(_QWORD *)a1)
  {
    if (!v4)
      return 0;
    type metadata accessor for LanguageAwareString();
    v6 = v4;
    v7 = v2;
    v8 = sub_1DA6701A4();

    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v4)
  {
    return 0;
  }
  if (v3)
  {
    if (v5)
    {
      type metadata accessor for LanguageAwareString();
      v9 = v5;
      v10 = v3;
      v11 = sub_1DA6701A4();

      if ((v11 & 1) != 0)
        return 1;
    }
  }
  else if (!v5)
  {
    return 1;
  }
  return 0;
}

uint64_t type metadata accessor for NowPlayingEpisodeContextItem(uint64_t a1)
{
  return sub_1DA48EED8(a1, qword_1EDAE4FB0);
}

uint64_t type metadata accessor for LibraryEpisodeContextItem(uint64_t a1)
{
  return sub_1DA48EED8(a1, (uint64_t *)&unk_1EDAE4FA0);
}

uint64_t type metadata accessor for EpisodeTextInfoContext(uint64_t a1)
{
  return sub_1DA48EED8(a1, (uint64_t *)&unk_1EDAE4DF0);
}

uint64_t sub_1DA5EE874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeTextInfoContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA5EE8B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4E66E8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1DA5EE8D0()
{
  unint64_t result;

  result = qword_1F026CE68;
  if (!qword_1F026CE68)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEA9B0], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1F026CE68);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for EpisodeTextInfoContext(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v17[(v5 + 16) & ~(unint64_t)v5];
    sub_1DA66BE60();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v6;
      v8 = a2[2];
      v7 = a2[3];
      *((_QWORD *)a1 + 2) = v8;
      *((_QWORD *)a1 + 3) = v7;
      v9 = a2[5];
      *((_QWORD *)a1 + 4) = a2[4];
      *((_QWORD *)a1 + 5) = v9;
      *((_QWORD *)a1 + 6) = a2[6];
      a1[56] = *((_BYTE *)a2 + 56);
      v10 = *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
      __dst = &a1[v10];
      v11 = (char *)a2 + v10;
      v12 = sub_1DA66C358();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      v15 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
        memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
    }
    else
    {
      v19 = *a2;
      v18 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v18;
      v20 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v20;
      *((_QWORD *)a1 + 4) = a2[4];
      *((_WORD *)a1 + 20) = *((_WORD *)a2 + 20);
      v21 = *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
      v22 = &a1[v21];
      v23 = (char *)a2 + v21;
      v24 = sub_1DA66C358();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      v27 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26(v23, 1, v24))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for EpisodeTextInfoContext(id *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = type metadata accessor for LibraryEpisodeContextItem(0);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = type metadata accessor for NowPlayingEpisodeContextItem(0);
  }
  v3 = (char *)a1 + *(int *)(v2 + 36);
  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  return result;
}

uint64_t initializeWithCopy for EpisodeTextInfoContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  id v22;
  uint64_t v23;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = *(void **)(a2 + 16);
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v5;
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    v8 = *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    v11 = sub_1DA66C358();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    v14 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v13(v10, 1, v11))
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_8;
    }
  }
  else
  {
    v16 = *(void **)a2;
    v15 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v15;
    v17 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v17;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
    v18 = *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
    v9 = (void *)(a1 + v18);
    v10 = (const void *)(a2 + v18);
    v19 = sub_1DA66C358();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
    v22 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v21(v10, 1, v19))
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v9, v10, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v19);
      goto LABEL_8;
    }
  }
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_8:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for EpisodeTextInfoContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(const void *, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  void *__dst;

  if (a1 != a2)
  {
    sub_1DA47F880(a1, type metadata accessor for EpisodeTextInfoContext);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v4 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v4;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v5 = *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
      __dst = (void *)(a1 + v5);
      v6 = (const void *)(a2 + v5);
      v7 = sub_1DA66C358();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
      swift_bridgeObjectRetain();
      v10 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9(v6, 1, v7))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
        memcpy(__dst, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(__dst, v6, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
      }
    }
    else
    {
      v12 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
      v13 = *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
      v14 = (void *)(a1 + v13);
      v15 = (const void *)(a2 + v13);
      v16 = sub_1DA66C358();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
      v19 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18(v15, 1, v16))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for EpisodeTextInfoContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
    v10 = *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
    v5 = (void *)(a1 + v10);
    v6 = (const void *)(a2 + v10);
    v7 = sub_1DA66C358();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      goto LABEL_3;
LABEL_5:
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    goto LABEL_6;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    goto LABEL_5;
LABEL_3:
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for EpisodeTextInfoContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1DA47F880(a1, type metadata accessor for EpisodeTextInfoContext);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v4 = *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
      v5 = (void *)(a1 + v4);
      v6 = (const void *)(a2 + v4);
      v7 = sub_1DA66C358();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      {
LABEL_4:
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
      v10 = *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
      v5 = (void *)(a1 + v10);
      v6 = (const void *)(a2 + v10);
      v7 = sub_1DA66C358();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
        goto LABEL_4;
    }
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    goto LABEL_7;
  }
  return a1;
}

uint64_t sub_1DA5EF454()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for NowPlayingEpisodeContextItem(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for LibraryEpisodeContextItem(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t assignWithCopy for EpisodeTextInfoDetail(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeTextInfoDetail(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeTextInfoDetail(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeTextInfoDetail()
{
  return &type metadata for EpisodeTextInfoDetail;
}

char *initializeBufferWithCopyOfBuffer for NowPlayingEpisodeContextItem(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    sub_1DA66BE60();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v6;
    v7 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v7;
    v8 = *(int *)(a3 + 36);
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    *((_WORD *)a1 + 20) = *((_WORD *)a2 + 20);
    v11 = sub_1DA66C358();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v5;
}

uint64_t destroy for NowPlayingEpisodeContextItem(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 36);
  v5 = sub_1DA66C358();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for NowPlayingEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;

  v5 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 36);
  v8 = (const void *)(a2 + v7);
  v9 = (void *)(a1 + v7);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v10 = sub_1DA66C358();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v9, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for NowPlayingEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v9 = *(int *)(a3 + 36);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1DA66C358();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for NowPlayingEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v4 = *(int *)(a3 + 36);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for NowPlayingEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v9 = *(int *)(a3 + 36);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1DA66C358();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingEpisodeContextItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5EFC1C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for NowPlayingEpisodeContextItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1DA5EFCB4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

void sub_1DA5EFD2C()
{
  sub_1DA5F04FC();
}

_QWORD *initializeBufferWithCopyOfBuffer for LibraryEpisodeContextItem(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v17 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1DA66BE60();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v7 = (void *)a2[2];
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = a2[6];
    v9 = *(int *)(a3 + 36);
    v10 = (char *)a2 + v9;
    v11 = (void *)(a1 + v9);
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v12 = sub_1DA66C358();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    v15 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v10, 1, v12))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(v11, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v11, v10, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    }
  }
  return v3;
}

uint64_t destroy for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1DA66C358();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  const void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(int *)(a3 + 36);
  v9 = (const void *)(a2 + v8);
  v10 = (void *)(a1 + v8);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v11 = sub_1DA66C358();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  v14 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v9, 1, v11))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v10, v9, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = v7;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(int *)(a3 + 36);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1DA66C358();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(int *)(a3 + 36);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v10 = *(int *)(a3 + 36);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1DA66C358();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryEpisodeContextItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5F03D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryEpisodeContextItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5F046C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_1DA5F04E4()
{
  sub_1DA5F04FC();
}

void sub_1DA5F04FC()
{
  unint64_t v0;

  sub_1DA4B2FC0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t dispatch thunk of EpisodeTextInfoProviderProtocol.textInfoDetailForContext(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for EpisodeTextInfoProvider()
{
  return &type metadata for EpisodeTextInfoProvider;
}

uint64_t sub_1DA5F059C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA5EE8B8(a1);
}

uint64_t DataBackgroundSessionDescriptor.cache.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DataBackgroundSessionDescriptor.init(cache:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

id DataBackgroundSessionDescriptor.create(session:delegate:)(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a1, sel_setDiscretionary_, 1);
  objc_msgSend(a1, sel_setSharedContainerIdentifier_, *MEMORY[0x1E0D7F398]);
  objc_msgSend(a1, sel_setTimeoutIntervalForRequest_, 3600.0);
  return objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, 0);
}

uint64_t DataBackgroundSessionDescriptor.load(data:)()
{
  return sub_1DA5F0968();
}

uint64_t DataBackgroundSessionDescriptor.stash(asset:for:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v31 = a1;
  v32 = a2;
  v6 = *(_QWORD *)(a4 + 16);
  v30 = *(_QWORD *)(a4 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v28 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)v27 - v9;
  v29 = (char *)v27 - v9;
  v11 = *(_QWORD *)(v6 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v14 = MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v11 + 16))(v15, v27[1], v6, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, AssociatedTypeWitness);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (*(unsigned __int8 *)(v8 + 80) + v17 + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v19 = swift_allocObject();
  v20 = v30;
  *(_QWORD *)(v19 + 16) = v6;
  *(_QWORD *)(v19 + 24) = v20;
  v21 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v19 + 48) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v16, v15, v6);
  v22 = (uint64_t *)(v19 + v17);
  v24 = v31;
  v23 = v32;
  *v22 = v31;
  v22[1] = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v18, v29, v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CE70);
  swift_allocObject();
  sub_1DA498750(v24, v23);
  v33 = sub_1DA66E074();
  sub_1DA4841D4(qword_1F026CE78, &qword_1F026CE70, MEMORY[0x1E0C96108]);
  v25 = sub_1DA66E11C();
  swift_release();
  return v25;
}

id sub_1DA5F089C(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a1, sel_setDiscretionary_, 1);
  objc_msgSend(a1, sel_setSharedContainerIdentifier_, *MEMORY[0x1E0D7F398]);
  objc_msgSend(a1, sel_setTimeoutIntervalForRequest_, 3600.0);
  return objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, 0);
}

uint64_t sub_1DA5F0940()
{
  return sub_1DA5F0968();
}

uint64_t sub_1DA5F0954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DataBackgroundSessionDescriptor.stash(asset:for:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), a2, a3);
}

uint64_t sub_1DA5F0968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF00);
  v12 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v11 = sub_1DA66DEF4();
  MEMORY[0x1E0C80A78](v11);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF08);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C364();
  v7 = v6;
  v13 = v5;
  v14 = v6;
  sub_1DA498750(v5, v6);
  sub_1DA66E02C();
  sub_1DA4841D4(&qword_1F026CF18, &qword_1F026CF08, MEMORY[0x1E0C960B0]);
  v8 = sub_1DA66E11C();
  sub_1DA4986F8(v5, v7);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8;
}

uint64_t sub_1DA5F0CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_1DA4986F8(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1DA5F0D94(uint64_t (*a1)(__int128 *))
{
  uint64_t v1;
  unint64_t v3;
  __int128 v5;

  v3 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  v5 = *(_OWORD *)(v1 + v3);
  sub_1DA66C88C();
  *(_QWORD *)&v5 = 0;
  BYTE8(v5) = 0;
  return a1(&v5);
}

uint64_t sub_1DA5F0E64(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_1DA5F0E6C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 40);
}

uint64_t sub_1DA5F0E74(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 48);
}

uint64_t sub_1DA5F0E7C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 56);
}

uint64_t sub_1DA5F0E84()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DA5F0EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    sub_1DA66BE60();
  }
  return v3;
}

uint64_t sub_1DA5F0F60(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1DA5F0F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1DA5F0FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1DA5F0FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1DA5F1000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1DA5F1030(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1DA5F10E0 + 4 * byte_1DA681EE0[(v7 - 1)]))();
}

void sub_1DA5F1130(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void type metadata accessor for DataBackgroundSessionDescriptor()
{
  JUMPOUT(0x1DF0A02F4);
}

id ArtworkBackgroundSessionDescriptor.imageStore.getter()
{
  id *v0;

  return *v0;
}

uint64_t ArtworkBackgroundSessionDescriptor.caches.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkBackgroundSessionDescriptor();
  return sub_1DA484504(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
}

uint64_t ArtworkBackgroundSessionDescriptor.init(imageStore:caches:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = a1;
  v4 = (uint64_t)a3 + *(int *)(type metadata accessor for ArtworkBackgroundSessionDescriptor() + 20);
  return sub_1DA5F1368(a2, v4);
}

uint64_t sub_1DA5F1368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AssetCaches();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id ArtworkBackgroundSessionDescriptor.create(session:delegate:)(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a1, sel_setDiscretionary_, 1);
  objc_msgSend(a1, sel_setSharedContainerIdentifier_, *MEMORY[0x1E0D7F398]);
  objc_msgSend(a1, sel_setRequestCachePolicy_, 0);
  return objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, 0);
}

uint64_t ArtworkBackgroundSessionDescriptor.load(data:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_1DA66CDA8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66C358();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v4, a1, v9);
  swift_storeEnumTagMultiPayload();
  sub_1DA66E02C();
  sub_1DA4841D4(&qword_1F026CF28, &qword_1F026CF20, MEMORY[0x1E0C960B0]);
  v10 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t ArtworkBackgroundSessionDescriptor.stash(asset:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(char *, uint64_t);
  id v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _UNKNOWN **v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void **v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  unint64_t v68;
  _UNKNOWN **v69;
  uint64_t v70;
  unint64_t v71;
  char v72;

  v49 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF30);
  v4 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  v65 = v4;
  MEMORY[0x1E0C80A78](v3);
  v63 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C0);
  v62 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v56 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1DA66CEBC();
  v48 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66CDA8();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF38);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF40);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF48);
  v55 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v46 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF50);
  v54 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF58);
  v61 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v53 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1DA66D7A4();
  v57 = *(_QWORD *)(v23 - 8);
  v58 = v23;
  MEMORY[0x1E0C80A78](v23);
  v47 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66D90C();
  sub_1DA484504(v49, (uint64_t)v11, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7DC30]);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v8, a2, v66);
  sub_1DA66D81C();
  v25 = *v50;
  v68 = sub_1DA4A8BC0();
  v69 = &protocol witness table for MTImageStore;
  v67[0] = v25;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v15, v12);
  sub_1DA4813E4((uint64_t)v67, (uint64_t)&v18[*(int *)(v16 + 36)]);
  v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v27 = v25;
  v26(v15, v12);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
  sub_1DA66CC1C();
  sub_1DA4841D4(&qword_1F026CF60, &qword_1F026CF40, (uint64_t)&protocol conformance descriptor for InvalidateImageStoreValueProcessingStep<A>);
  v28 = v46;
  sub_1DA66D4BC();
  sub_1DA5F1B5C((uint64_t)v18);
  type metadata accessor for ArtworkBackgroundSessionDescriptor();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  v29 = v56;
  sub_1DA66C97C();
  sub_1DA66D798();
  v30 = v60;
  v31 = sub_1DA66C964();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v29, v30);
  v67[0] = v31;
  v72 = 4;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE41B0);
  v33 = sub_1DA4841D4(&qword_1F026CF68, &qword_1F026CF48, MEMORY[0x1E0D7EBD0]);
  v34 = sub_1DA55B670();
  v35 = (_UNKNOWN **)MEMORY[0x1E0D7DD10];
  v36 = MEMORY[0x1E0D7DD20];
  v37 = v51;
  sub_1DA66D4C8();
  swift_release();
  v38 = v37;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v37);
  v39 = v63;
  v40 = v52;
  sub_1DA66D8B8();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v40);
  v67[0] = v66;
  v67[1] = v38;
  v67[2] = v32;
  v68 = v36;
  v69 = v35;
  v70 = v33;
  v71 = v34;
  swift_getOpaqueTypeConformance2();
  v41 = v53;
  v42 = v64;
  sub_1DA66E0E0();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v39, v42);
  sub_1DA4841D4((unint64_t *)&unk_1F026CF70, &qword_1F026CF58, MEMORY[0x1E0C95950]);
  v43 = v59;
  v44 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v41, v43);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v58);
  return v44;
}

uint64_t sub_1DA5F1B5C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA5F1B9C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1DA66CEBC();
    result = MEMORY[0x1DF0A039C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA5F1BDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_1DA66CDA8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026CF20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66C358();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v4, a1, v9);
  swift_storeEnumTagMultiPayload();
  sub_1DA66E02C();
  sub_1DA4841D4(&qword_1F026CF28, &qword_1F026CF20, MEMORY[0x1E0C960B0]);
  v10 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

void **initializeBufferWithCopyOfBuffer for ArtworkBackgroundSessionDescriptor(void **a1, void **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    sub_1DA66BE60();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = v5;
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = type metadata accessor for AssetCaches();
    v12 = *(int *)(v11 + 20);
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = *(int *)(v11 + 24);
    v17 = &v7[v16];
    v18 = &v8[v16];
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

void **assignWithCopy for ArtworkBackgroundSessionDescriptor(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = type metadata accessor for AssetCaches();
  v14 = *(int *)(v13 + 20);
  v15 = &v10[v14];
  v16 = &v11[v14];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = *(int *)(v13 + 24);
  v19 = &v10[v18];
  v20 = &v11[v18];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_QWORD *initializeWithTake for ArtworkBackgroundSessionDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = type metadata accessor for AssetCaches();
  v9 = *(int *)(v8 + 20);
  v10 = &v5[v9];
  v11 = &v6[v9];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = *(int *)(v8 + 24);
  v14 = &v5[v13];
  v15 = &v6[v13];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

void **assignWithTake for ArtworkBackgroundSessionDescriptor(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for AssetCaches();
  v12 = *(int *)(v11 + 20);
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(v11 + 24);
  v17 = &v8[v16];
  v18 = &v9[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkBackgroundSessionDescriptor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5F20B8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AssetCaches();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ArtworkBackgroundSessionDescriptor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1DA5F2140(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AssetCaches();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t MPArtworkCatalog.imageFuture.getter()
{
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE5330);
  swift_allocObject();
  return sub_1DA66E074();
}

uint64_t sub_1DA5F221C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

id MPArtworkCatalog.artworkDataPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id result;
  void *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D040);
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D048);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D050);
  v27 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D058);
  v29 = *(_QWORD *)(v12 - 8);
  v30 = v12;
  MEMORY[0x1E0C80A78](v12);
  v24 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE5330);
  swift_allocObject();
  v32 = (id)sub_1DA66E074();
  result = objc_msgSend((id)objc_opt_self(), sel_defaultPodcastArtwork);
  if (result)
  {
    v15 = result;
    v31 = result;
    sub_1DA4841D4(&qword_1EDAE5328, (uint64_t *)&unk_1EDAE5330, MEMORY[0x1E0C96108]);
    sub_1DA66E140();
    swift_release();

    sub_1DA486298();
    v32 = (id)sub_1DA66FE44();
    v16 = sub_1DA66FE8C();
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v17(v2, 1, 1, v16);
    sub_1DA4841D4(&qword_1F026D060, &qword_1F026D040, MEMORY[0x1E0C957E8]);
    sub_1DA4A89F0();
    sub_1DA66E248();
    sub_1DA4A8A48((uint64_t)v2);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
    type metadata accessor for NowPlayingArtwork.Data();
    sub_1DA4841D4(&qword_1F026D068, &qword_1F026D048, MEMORY[0x1E0C95CB8]);
    v18 = v26;
    sub_1DA66E17C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v18);
    v32 = (id)sub_1DA66FEC8();
    v17(v2, 1, 1, v16);
    sub_1DA4841D4(&qword_1F026D070, &qword_1F026D050, MEMORY[0x1E0C95950]);
    v19 = v24;
    v20 = v28;
    sub_1DA66E248();
    sub_1DA4A8A48((uint64_t)v2);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
    sub_1DA4841D4(&qword_1F026D078, &qword_1F026D058, MEMORY[0x1E0C95CB8]);
    v21 = v30;
    v22 = sub_1DA66E11C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v21);
    return (id)v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5F2668@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  id v4;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_imageByPreparingForDisplay);
  if (!v4)
    v4 = v3;
  *a2 = v4;
  type metadata accessor for NowPlayingArtwork.Data();
  return swift_storeEnumTagMultiPayload();
}

void sub_1DA5F26C0(void (*a1)(void **), uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  void *v10;
  id v11;
  void *v12;
  _BYTE *v13;
  void *aBlock;
  uint64_t v15;
  void (*v16)(uint64_t, void *, void *);
  void *v17;
  void (*v18)(void *, void *);
  _QWORD *v19;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_beginAccess();
  v7 = MEMORY[0x1DF0A054C](a3 + 16);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = v8;
    v9[3] = sub_1DA5F2854;
    v9[4] = v6;
    v18 = sub_1DA5F2DDC;
    v19 = v9;
    aBlock = (void *)MEMORY[0x1E0C809B0];
    v15 = 1107296256;
    v16 = sub_1DA529310;
    v17 = &block_descriptor_23;
    v10 = _Block_copy(&aBlock);
    sub_1DA66BE60();
    v11 = v8;
    swift_release();
    objc_msgSend(v11, sel_requestImageWithCompletion_, v10);
    _Block_release(v10);

  }
  else
  {
    sub_1DA66BE60();
    swift_release();
    sub_1DA5F2860();
    v12 = (void *)swift_allocError();
    *v13 = 0;
    aBlock = v12;
    LOBYTE(v15) = 1;
    a1(&aBlock);

  }
}

uint64_t sub_1DA5F2830()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5F2854(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1DA59ACD4(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

unint64_t sub_1DA5F2860()
{
  unint64_t result;

  result = qword_1F026D080;
  if (!qword_1F026D080)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA6820D0, &_s6ErrorsON);
    atomic_store(result, (unint64_t *)&qword_1F026D080);
  }
  return result;
}

void sub_1DA5F28A4(void *a1, void *a2, void *a3, void (*a4)(_QWORD, _QWORD), uint64_t a5)
{
  uint64_t v10;
  void (**v11)(char *, _QWORD *);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  NSObject *v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  _QWORD *v41;
  uint64_t v42;
  _BYTE *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD);
  void (**v49)(char *, _QWORD *);
  uint64_t v50;
  uint64_t v51;

  v10 = sub_1DA66DEF4();
  v11 = *(void (***)(char *, _QWORD *))(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v44 - v15;
  if (a2)
  {
    v49 = v11;
    v17 = a2;
    sub_1DA66DE94();
    v18 = a2;
    v19 = a3;
    v20 = a2;
    v21 = v19;
    v22 = sub_1DA66DEDC();
    v23 = sub_1DA66FDA8();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v47 = a5;
      v25 = v24;
      v44 = (_QWORD *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v45 = v26;
      *(_DWORD *)v25 = 141558531;
      v50 = 1752392040;
      v51 = v26;
      v48 = a4;
      sub_1DA6702C4();
      *(_WORD *)(v25 + 12) = 2113;
      v46 = (_QWORD *)v10;
      v50 = (uint64_t)v21;
      v27 = v21;
      sub_1DA6702C4();
      v28 = v44;
      *v44 = v21;

      *(_WORD *)(v25 + 22) = 2082;
      swift_getErrorValue();
      v29 = sub_1DA670750();
      v50 = sub_1DA49AD00(v29, v30, &v51);
      a4 = v48;
      sub_1DA6702C4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DA478000, v22, v23, "[NowPlayingArtworkController/MPArtworkCatalog]: Unable to fetch image for item: %{private,mask.hash}@ with error %{public}s.", (uint8_t *)v25, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v28, -1, -1);
      v31 = v45;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v31, -1, -1);
      MEMORY[0x1DF0A0474](v25, -1, -1);

      v49[1](v16, v46);
    }
    else
    {

      ((void (**)(char *, uint64_t))v49)[1](v16, v10);
    }
    v32 = a2;
    a4(a2, 1);

    v33 = a2;
  }
  else
  {
    if (a1)
    {
      v49 = a1;
      a4(a1, 0);

      return;
    }
    sub_1DA66DE94();
    v34 = a3;
    v35 = sub_1DA66DEDC();
    v36 = sub_1DA66FDA8();
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      LODWORD(v47) = v37;
      v39 = v38;
      v46 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v39 = 141558275;
      v51 = 1752392040;
      v48 = a4;
      sub_1DA6702C4();
      *(_WORD *)(v39 + 12) = 2113;
      v49 = v11;
      v51 = (uint64_t)v34;
      v40 = v34;
      a4 = v48;
      v11 = v49;
      sub_1DA6702C4();
      v41 = v46;
      *v46 = v34;

      _os_log_impl(&dword_1DA478000, v35, (os_log_type_t)v47, "[NowPlayingArtworkController/MPArtworkCatalog]: Unable to fetch image for item: %{private,mask.hash}@.", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v41, -1, -1);
      MEMORY[0x1DF0A0474](v39, -1, -1);
    }
    else
    {

      v35 = v34;
    }

    ((void (**)(char *, uint64_t))v11)[1](v13, v10);
    sub_1DA5F2860();
    v42 = swift_allocError();
    *v43 = 1;
    a4(v42, 1);
    v33 = (void *)v42;
  }

}

uint64_t sub_1DA5F2DB0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1DA5F2DDC(void *a1, void *a2)
{
  uint64_t v2;

  sub_1DA5F28A4(a1, a2, *(void **)(v2 + 16), *(void (**)(_QWORD, _QWORD))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t _s6ErrorsOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA5F2E34 + 4 * byte_1DA682049[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA5F2E68 + 4 * asc_1DA682044[v4]))();
}

uint64_t sub_1DA5F2E68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5F2E70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5F2E78);
  return result;
}

uint64_t sub_1DA5F2E84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5F2E8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA5F2E90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5F2E98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ErrorsOMa()
{
  return &_s6ErrorsON;
}

unint64_t sub_1DA5F2EB8()
{
  unint64_t result;

  result = qword_1F026D088;
  if (!qword_1F026D088)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA6820A8, &_s6ErrorsON);
    atomic_store(result, (unint64_t *)&qword_1F026D088);
  }
  return result;
}

uint64_t PUITextStyle.init(style:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = type metadata accessor for PUITextStyle();
  v5 = a2 + *(int *)(v4 + 20);
  v6 = sub_1DA66E6BC();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v8 = a2 + *(int *)(v4 + 24);
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = sub_1DA66E6EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a2, a1, v9);
  sub_1DA47E2F0(v5, &qword_1EDAE1E60);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v5, 1, 1, v6);
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  return result;
}

uint64_t static PUITextStyle.largeTitle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD788], a1);
}

uint64_t static PUITextStyle.title1.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD7A8], a1);
}

uint64_t static PUITextStyle.title2.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD7B0], a1);
}

uint64_t static PUITextStyle.title3.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD7B8], a1);
}

uint64_t static PUITextStyle.headline.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD7E8], a1);
}

uint64_t static PUITextStyle.body.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD7A0], a1);
}

uint64_t static PUITextStyle.callout.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD7C0], a1);
}

uint64_t static PUITextStyle.caption1.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD7C8], a1);
}

uint64_t PUITextStyle.standardLeading.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1DA47DCCC(v1, a1);
  v3 = a1 + *(int *)(type metadata accessor for PUITextStyle() + 20);
  sub_1DA47E2F0(v3, &qword_1EDAE1E60);
  v4 = sub_1DA66E6BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
}

uint64_t PUITextStyle.loose.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D7B0(MEMORY[0x1E0CDD6D0], a1);
}

uint64_t PUITextStyle.font.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66E6BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E58);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66E65C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1DA66E6A4();
  sub_1DA47E2F0((uint64_t)v10, &qword_1EDAE1E58);
  v12 = type metadata accessor for PUITextStyle();
  sub_1DA47E2A8(v0 + *(int *)(v12 + 20), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CDD6E8], v4);
    sub_1DA66BE60();
    sub_1DA47E2F0((uint64_t)v3, &qword_1EDAE1E60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_1DA66BE60();
  }
  sub_1DA66E6C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((*(_BYTE *)(v0 + *(int *)(v12 + 24) + 8) & 1) != 0)
    sub_1DA66E68C();
  v13 = sub_1DA66E6B0();
  swift_release();
  swift_release();
  return v13;
}

uint64_t PUITextStyle.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1DA66E6BC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66E6EC();
  sub_1DA47E32C(&qword_1F026D090, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDD7F0], MEMORY[0x1E0CDD808]);
  sub_1DA66F7FC();
  v8 = type metadata accessor for PUITextStyle();
  sub_1DA47E2A8(v0 + *(int *)(v8 + 20), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1DA6707B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1DA6707B0();
    sub_1DA47E32C(&qword_1F026D098, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDD6F8], MEMORY[0x1E0CDD708]);
    sub_1DA66F7FC();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  if (*(_BYTE *)(v0 + *(int *)(v8 + 24) + 8) == 1)
    return sub_1DA6707B0();
  sub_1DA6707B0();
  return sub_1DA66E680();
}

uint64_t PUITextStyle.hashValue.getter()
{
  sub_1DA670798();
  PUITextStyle.hash(into:)();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5F34CC()
{
  sub_1DA670798();
  PUITextStyle.hash(into:)();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5F350C()
{
  sub_1DA670798();
  PUITextStyle.hash(into:)();
  return sub_1DA6707C8();
}

double PUITextStyle.lineHeight.getter()
{
  id v0;
  double v1;
  double v2;

  v0 = PUITextStyle.uiFont.getter();
  objc_msgSend(v0, sel_lineHeight);
  v2 = v1;

  return v2;
}

double PUITextStyle.leadingHeight.getter()
{
  id v0;
  double v1;
  double v2;

  v0 = PUITextStyle.uiFont.getter();
  objc_msgSend(v0, sel_leading);
  v2 = v1;

  return v2;
}

double PUITextStyle.scaledValue(for:compatibleWith:)(uint64_t a1, double a2)
{
  id v4;
  id v5;
  double v6;
  double v7;

  v4 = sub_1DA47DD4C();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, v4);

  objc_msgSend(v5, sel_scaledValueForValue_compatibleWithTraitCollection_, a1, a2);
  v7 = v6;

  return v7;
}

uint64_t Text.puiFont(_:)()
{
  uint64_t v0;

  PUITextStyle.font.getter();
  v0 = sub_1DA66E710();
  swift_release();
  return v0;
}

uint64_t View.puiFont(_:)()
{
  PUITextStyle.font.getter();
  sub_1DA66E7C4();
  return swift_release();
}

uint64_t ScaledMetric.init(wrappedValue:relativeTo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v15;

  v6 = sub_1DA66E6EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_1DA66E38C();
  sub_1DA47DC40(a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, a3);
}

uint64_t sub_1DA5F3838()
{
  return sub_1DA47E32C(&qword_1F026D0A0, (uint64_t (*)(uint64_t))type metadata accessor for PUITextStyle, (uint64_t)&protocol conformance descriptor for PUITextStyle);
}

uint64_t *initializeBufferWithCopyOfBuffer for PUITextStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = sub_1DA66E6EC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DA66E6BC();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = *(int *)(a3 + 24);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
  }
  return a1;
}

uint64_t destroy for PUITextStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_1DA66E6EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DA66E6BC();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for PUITextStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DA66E6EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DA66E6BC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t assignWithCopy for PUITextStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;

  v6 = sub_1DA66E6EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DA66E6BC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  *(_BYTE *)(v17 + 8) = *((_BYTE *)v18 + 8);
  *(_QWORD *)v17 = v19;
  return a1;
}

uint64_t initializeWithTake for PUITextStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DA66E6EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DA66E6BC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t assignWithTake for PUITextStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1DA66E6EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DA66E6BC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PUITextStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5F3EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1DA66E6EC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PUITextStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5F3F48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1DA66E6EC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DA5F3FC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE2668);
  v2 = sub_1DA66E428();
  v4[0] = v1;
  v4[1] = sub_1DA5F4028();
  return MEMORY[0x1DF0A039C](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t sub_1DA5F4028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE2660;
  if (!qword_1EDAE2660)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE2668);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDCF80], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE2660);
  }
  return result;
}

uint64_t sub_1DA5F4074()
{
  sub_1DA670798();
  sub_1DA6707BC();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5F40C4()
{
  sub_1DA670798();
  sub_1DA6707BC();
  return sub_1DA6707C8();
}

double SizeClass.gutters.getter(char a1)
{
  return dbl_1DA682408[a1];
}

BOOL sub_1DA5F4124(char a1, char a2)
{
  return dbl_1DA682448[a2] >= dbl_1DA682448[a1];
}

BOOL sub_1DA5F4148(char a1, char a2)
{
  return dbl_1DA682448[a1] >= dbl_1DA682448[a2];
}

BOOL sub_1DA5F416C(char a1, char a2)
{
  return dbl_1DA682448[a2] < dbl_1DA682448[a1];
}

double SizeClass.rawValue.getter(char a1)
{
  return dbl_1DA682448[a1];
}

void *static SizeClass.allCases.getter()
{
  return &unk_1EA0C6AD0;
}

BOOL sub_1DA5F41B8(char *a1, char *a2)
{
  return sub_1DA659788(*a1, *a2);
}

uint64_t sub_1DA5F41C4@<X0>(double *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s10PodcastsUI9SizeClassO8rawValueACSg12CoreGraphics7CGFloatV_tcfC_0(*a1);
  *a2 = result;
  return result;
}

double sub_1DA5F41EC@<D0>(double *a1@<X8>)
{
  char *v1;
  double result;

  result = dbl_1DA682448[*v1];
  *a1 = result;
  return result;
}

void sub_1DA5F4204(_QWORD *a1@<X8>)
{
  *a1 = &unk_1EA0C6AD0;
}

uint64_t sub_1DA5F4214()
{
  return sub_1DA5F4074();
}

uint64_t sub_1DA5F421C()
{
  return sub_1DA64826C();
}

uint64_t sub_1DA5F4224()
{
  return sub_1DA5F40C4();
}

BOOL sub_1DA5F422C(char *a1, char *a2)
{
  return _s10PodcastsUI9SizeClassO1loiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL sub_1DA5F4238(char *a1, char *a2)
{
  return sub_1DA5F4124(*a1, *a2);
}

BOOL sub_1DA5F4244(char *a1, char *a2)
{
  return sub_1DA5F4148(*a1, *a2);
}

BOOL sub_1DA5F4250(char *a1, char *a2)
{
  return sub_1DA5F416C(*a1, *a2);
}

BOOL static SizeClass.SizeClassCategory.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t SizeClass.SizeClassCategory.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t SizeClass.SizeClassCategory.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t static SizeClass.deviceCategory.getter()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v0, sel_nativeBounds);
  v2 = v1;
  v4 = v3;

  if (v2 == 320.0 && v4 == 480.0)
    return 0;
  if (v2 == 640.0 && (v4 == 960.0 || v4 == 1136.0))
    return 0;
  result = 1;
  if (v2 != 750.0 || v4 != 1334.0)
  {
    if (v4 == 1920.0 && v2 == 1080.0)
      return 1;
    else
      return 2;
  }
  return result;
}

void sub_1DA5F43CC()
{
  id v0;
  id v1;
  BOOL v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;

  if ((byte_1F026A3E0 & 1) != 0
    || (v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice),
        v1 = objc_msgSend(v0, sel_userInterfaceIdiom),
        v0,
        v1))
  {
    v2 = 0;
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v3, sel_bounds);
    v5 = v4;
    v7 = v6;

    v2 = v7 / v5 < 2.0;
  }
  byte_1EDAE25E0 = v2;
}

uint64_t static SizeClass.isPhone8RatioOrSmaller.getter()
{
  if (qword_1EDAE2600 != -1)
    swift_once();
  swift_beginAccess();
  return byte_1EDAE25E0;
}

uint64_t static SizeClass.isPhone8RatioOrSmaller.setter(char a1)
{
  uint64_t result;

  if (qword_1EDAE2600 != -1)
    swift_once();
  result = swift_beginAccess();
  byte_1EDAE25E0 = a1 & 1;
  return result;
}

uint64_t (*static SizeClass.isPhone8RatioOrSmaller.modify())()
{
  if (qword_1EDAE2600 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL SizeClass.isIpadWide.getter(unsigned __int8 a1)
{
  return a1 > 1u;
}

uint64_t sub_1DA5F45E4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  size_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  char *v20;
  char *v21;
  char *v22;

  v22 = __src;
  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst)
        memmove(__dst, a2, a3 - (_QWORD)a2);
      v14 = &v4[v9];
      v20 = &v4[v9];
      v22 = v6;
      if (v7 < v6 && (char *)a3 != v6)
      {
        v15 = (char *)(a3 - 1);
        while (1)
        {
          v16 = v6 - 1;
          v17 = *(v6 - 1);
          v18 = v15 + 1;
          if (dbl_1DA682448[*(v14 - 1)] >= dbl_1DA682448[v17])
          {
            v20 = v14 - 1;
            if (v18 < v14 || v15 >= v14 || v18 != v14)
              *v15 = *(v14 - 1);
            --v14;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v18 != v6 || v15 >= v6)
              *v15 = v17;
            v22 = --v6;
            if (v16 <= v7)
              goto LABEL_38;
          }
          --v15;
          if (v14 <= v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        v11 = *v6;
        v12 = *v4;
        if (dbl_1DA682448[v11] >= dbl_1DA682448[v12])
        {
          if (v7 != v4)
            *v7 = v12;
          v21 = ++v4;
          v13 = v6;
        }
        else
        {
          v13 = v6 + 1;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
            *v7 = v11;
        }
        ++v7;
        if (v4 >= v10)
          break;
        v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      v22 = v7;
    }
LABEL_38:
    sub_1DA5E749C((void **)&v22, (const void **)&v21, &v20);
    return 1;
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

BOOL _s10PodcastsUI9SizeClassO1loiySbAC_ACtFZ_0(char a1, char a2)
{
  return dbl_1DA682448[a1] < dbl_1DA682448[a2];
}

uint64_t _s10PodcastsUI9SizeClassO8rawValueACSg12CoreGraphics7CGFloatV_tcfC_0(double a1)
{
  int v2;
  unsigned int v3;

  if (a1 == 375.0)
    return 0;
  if (a1 == 501.0)
    return 1;
  if (a1 == 727.0)
    return 2;
  if (a1 == 982.0)
    return 3;
  if (a1 == 1195.0)
    return 4;
  if (a1 == 4000.0)
    v2 = 7;
  else
    v2 = 8;
  if (a1 == 2501.0)
    v3 = 6;
  else
    v3 = v2;
  if (a1 == 1501.0)
    return 5;
  else
    return v3;
}

unint64_t sub_1DA5F494C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026D0A8;
  if (!qword_1F026D0A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D0B0);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1F026D0A8);
  }
  return result;
}

unint64_t sub_1DA5F499C()
{
  unint64_t result;

  result = qword_1F026D0B8;
  if (!qword_1F026D0B8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for SizeClass, &type metadata for SizeClass);
    atomic_store(result, (unint64_t *)&qword_1F026D0B8);
  }
  return result;
}

unint64_t sub_1DA5F49E4()
{
  unint64_t result;

  result = qword_1F026D0C0;
  if (!qword_1F026D0C0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for SizeClass.SizeClassCategory, &type metadata for SizeClass.SizeClassCategory);
    atomic_store(result, (unint64_t *)&qword_1F026D0C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SizeClass(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SizeClass(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DA5F4B04 + 4 * byte_1DA6821B5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DA5F4B38 + 4 * byte_1DA6821B0[v4]))();
}

uint64_t sub_1DA5F4B38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5F4B40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5F4B48);
  return result;
}

uint64_t sub_1DA5F4B54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5F4B5CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DA5F4B60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5F4B68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for SizeClass.SizeClassCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DA5F4BC0 + 4 * byte_1DA6821BF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DA5F4BF4 + 4 * byte_1DA6821BA[v4]))();
}

uint64_t sub_1DA5F4BF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5F4BFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5F4C04);
  return result;
}

uint64_t sub_1DA5F4C10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5F4C18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DA5F4C1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5F4C24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SizeClass.SizeClassCategory()
{
  return &type metadata for SizeClass.SizeClassCategory;
}

unint64_t GlobalSettingsDeepLinkState.Destination.rawValue.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1DA5F4C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16)
{
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  _QWORD *v31;
  double v32;
  uint64_t v33;
  char v35;
  _OWORD v37[4];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a6 & 1;
  v38 = a7;
  v39 = a8;
  v40 = a11;
  memset(v37, 0, sizeof(v37));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4A0);
  sub_1DA66E8C0();
  sub_1DA66E8C0();
  *(_BYTE *)(a9 + 136) = 0;
  *(_QWORD *)(a9 + 144) = 0;
  sub_1DA66E8C0();
  v23 = *((_QWORD *)&v37[0] + 1);
  *(_BYTE *)(a9 + 152) = v37[0];
  *(_QWORD *)(a9 + 160) = v23;
  v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1F026D188);
  v25 = v24[26];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4A8);
  sub_1DA66E8C0();
  *(_OWORD *)(a9 + v25) = v37[0];
  v26 = v24[27];
  sub_1DA66E8C0();
  *(_OWORD *)(a9 + v26) = v37[0];
  *(_QWORD *)(a9 + 168) = a1;
  *(_QWORD *)(a9 + 176) = a2;
  *(_QWORD *)(a9 + 184) = a3;
  *(_QWORD *)(a9 + 192) = a4;
  v27 = a9 + v24[22];
  v28 = sub_1DA66E338();
  v29 = *(_QWORD *)(v28 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, a5, v28);
  *(_BYTE *)(a9 + v24[24]) = v35;
  v31 = (_QWORD *)(a9 + v24[23]);
  *v31 = a15;
  v31[1] = a16;
  v32 = a10 * 1000000000.0;
  if ((~COERCE__INT64(a10 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v32 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v32 < 1.84467441e19)
  {
    *(_QWORD *)(a9 + v24[25]) = (unint64_t)v32;
    *(_QWORD *)a9 = a7;
    *(_QWORD *)(a9 + 8) = a8;
    *(_QWORD *)(a9 + 16) = a11;
    *(_QWORD *)(a9 + 24) = a12;
    *(_QWORD *)(a9 + 32) = a13;
    *(_BYTE *)(a9 + 40) = a14 & 1;
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
    MEMORY[0x1DF09D318](v37, v33);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(a5, v28);
    *(_QWORD *)(a9 + 48) = *(_QWORD *)&v37[0];
    *(_QWORD *)(a9 + 56) = 0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t GlobalSettingsDeepLinkState.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1DA66E08C();
  return v0;
}

uint64_t sub_1DA5F4F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  void (*v39)(_QWORD *, _QWORD);
  uint64_t v40;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[5];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0160);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D560);
  MEMORY[0x1E0C80A78](v7);
  v48 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D568);
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - v12;
  v14 = sub_1DA66C1CC();
  MEMORY[0x1E0C80A78](v14);
  v50 = sub_1DA66C178();
  v15 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  if (*(_QWORD *)(v0 + 8) < 2uLL)
    return sub_1DA66D2F4();
  v46 = (char *)&v42 - v19;
  v43 = v10;
  v44 = v3;
  v21 = *(_BYTE *)(v0 + 32);
  v22 = sub_1DA66D2F4();
  v24 = v23;
  v42 = v13;
  v45 = v6;
  if ((v21 & 1) != 0)
    os_feature_enabled_serial_sort_auto_downloads();
  v25 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_1DA66C19C();

  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v26 + 64) = sub_1DA486218();
  *(_QWORD *)(v26 + 32) = v22;
  *(_QWORD *)(v26 + 40) = v24;
  swift_bridgeObjectRetain();
  sub_1DA66F8E0();
  swift_bridgeObjectRelease();
  sub_1DA66C1C0();
  v27 = v46;
  sub_1DA66C184();
  v28 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v29 = v50;
  v28(v17, v27, v50);
  v51[0] = v22;
  v51[1] = v24;
  v30 = sub_1DA66C4D8();
  v31 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v45, 1, 1, v30);
  sub_1DA47E32C(&qword_1F026D570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF230]);
  sub_1DA498918();
  v32 = (uint64_t)v48;
  sub_1DA66C22C();
  sub_1DA47E2F0(v31, &qword_1EDAE0160);
  v33 = *(void (**)(char *, uint64_t))(v15 + 8);
  v33(v17, v29);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v32, 1, v49) == 1)
  {
    v34 = &qword_1F026D560;
    v35 = v32;
  }
  else
  {
    v36 = (uint64_t)v42;
    sub_1DA4A686C(v32, (uint64_t)v42, &qword_1F026D568);
    v37 = (uint64_t)v43;
    sub_1DA49CC94(v36, (uint64_t)v43, &qword_1F026D568);
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    swift_getKeyPath();
    sub_1DA66F8BC();
    sub_1DA66C334();
    swift_bridgeObjectRelease();
    sub_1DA4841D4(&qword_1F026D580, &qword_1F026D568, MEMORY[0x1E0DEB8A8]);
    v39 = (void (*)(_QWORD *, _QWORD))sub_1DA66C190();
    sub_1DA5FDECC();
    sub_1DA66C1D8();
    v39(v51, 0);
    sub_1DA47E2F0(v37, &qword_1F026D568);
    v35 = v36;
    v34 = &qword_1F026D568;
  }
  sub_1DA47E2F0(v35, v34);
  v40 = v50;
  v28(v17, v27, v50);
  v20 = sub_1DA66E728();
  v33(v27, v40);
  return v20;
}

uint64_t sub_1DA5F5510()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D588);
  return sub_1DA66F850() & 1;
}

__n128 AutoDownloadPickerView.init(autoDownloadOption:pickerType:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 v11;
  int *v12;
  char *v13;
  _QWORD *v14;
  __n128 *v15;
  __n128 result;
  __n128 v17;
  char v18;
  uint64_t v19;

  v17 = *a4;
  v9 = a4[1].n128_u64[0];
  v10 = a4[1].n128_u64[1];
  v11 = a4[2].n128_u8[0];
  *a5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
  swift_storeEnumTagMultiPayload();
  v12 = (int *)type metadata accessor for AutoDownloadPickerView(0);
  v13 = (char *)a5 + v12[6];
  sub_1DA66E8C0();
  *v13 = v18;
  *((_QWORD *)v13 + 1) = v19;
  v14 = (uint64_t *)((char *)a5 + v12[5]);
  *v14 = a1;
  v14[1] = a2;
  v14[2] = a3;
  v15 = (__n128 *)((char *)a5 + v12[7]);
  result = v17;
  *v15 = v17;
  v15[1].n128_u64[0] = v9;
  v15[1].n128_u64[1] = v10;
  v15[2].n128_u8[0] = v11;
  return result;
}

uint64_t AutoDownloadPickerView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0E0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0E8);
  sub_1DA5FA998();
  sub_1DA66E6F8();
  sub_1DA4841D4(&qword_1F026D148, &qword_1F026D0D8, MEMORY[0x1E0CDD950]);
  sub_1DA66E740();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  v12 = sub_1DA66E98C();
  v14 = v13;
  v15 = (char *)(v2 + *(int *)(type metadata accessor for AutoDownloadPickerView(0) + 24));
  v16 = *v15;
  v17 = *((_QWORD *)v15 + 1);
  v25 = v16;
  v26 = v17;
  __swift_instantiateConcreteTypeFromMangledName(qword_1F026B2B0);
  sub_1DA66E8E4();
  v18 = v27;
  v19 = v28;
  v20 = v29;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 16))(a1, v11, v8);
  v21 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026D150) + 36);
  *(_QWORD *)v21 = v18;
  *(_QWORD *)(v21 + 8) = v19;
  *(_BYTE *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 24) = v12;
  *(_QWORD *)(v21 + 32) = v14;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1DA5F5818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  ValueMetadata *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D118);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_1DA66D2F4();
  v20 = v5;
  v21 = 0;
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1DA5F59CC((uint64_t)v4);
  v14 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D558);
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D0F8);
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D100);
  v8 = sub_1DA66E500();
  v9 = sub_1DA5FAAB4();
  v15 = &type metadata for AutoDownloadPicker;
  v16 = v9;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v15 = (ValueMetadata *)v7;
  v16 = v8;
  v17 = OpaqueTypeConformance2;
  v18 = MEMORY[0x1E0CDAA98];
  v11 = swift_getOpaqueTypeConformance2();
  v15 = (ValueMetadata *)v6;
  v16 = MEMORY[0x1E0DEB418];
  v17 = v11;
  v18 = MEMORY[0x1E0DEB438];
  swift_getOpaqueTypeConformance2();
  sub_1DA5FAAF8();
  return sub_1DA66E980();
}

uint64_t sub_1DA5F59CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 *v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  char v49;

  v2 = v1;
  v43 = a1;
  v3 = sub_1DA66E5CC();
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  MEMORY[0x1E0C80A78](v3);
  v42 = (char *)&KeyPath - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D138);
  MEMORY[0x1E0C80A78](v41);
  v6 = (uint64_t *)((char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for AutoDownloadPickerView(0);
  v37 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v37 + 64);
  MEMORY[0x1E0C80A78](v7);
  v40 = sub_1DA66E3E0();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D128);
  MEMORY[0x1E0C80A78](v46);
  v12 = (char *)&KeyPath - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(int *)(v7 + 28);
  v39 = v1;
  v14 = (__int128 *)(v1 + v13);
  v15 = *((_BYTE *)v14 + 32);
  v16 = v14[1];
  v47 = *v14;
  v48 = v16;
  v49 = v15;
  v17 = sub_1DA5F4F28();
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  KeyPath = swift_getKeyPath();
  v34 = (uint64_t)&KeyPath - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA484504(v2, v34, type metadata accessor for AutoDownloadPickerView);
  v24 = *(unsigned __int8 *)(v37 + 80);
  v36 = ((v24 + 16) & ~v24) + v8;
  v37 = (v24 + 16) & ~v24;
  v25 = v37;
  v35 = v24 | 7;
  v26 = swift_allocObject();
  sub_1DA5FB05C((uint64_t)&KeyPath - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
  sub_1DA66E3D4();
  v27 = v40;
  v28 = v38;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v6 + *(int *)(v41 + 28), v10, v40);
  *v6 = KeyPath;
  sub_1DA49CC94((uint64_t)v6, (uint64_t)&v12[*(int *)(v46 + 36)], &qword_1F026D138);
  *(_QWORD *)v12 = v17;
  *((_QWORD *)v12 + 1) = v19;
  v12[16] = v23;
  *((_QWORD *)v12 + 3) = v21;
  sub_1DA525244(v17, v19, v23);
  swift_bridgeObjectRetain();
  sub_1DA47E2F0((uint64_t)v6, &qword_1F026D138);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v27);
  sub_1DA5251EC(v17, v19, v23);
  swift_bridgeObjectRelease();
  v29 = v34;
  sub_1DA484504(v39, v34, type metadata accessor for AutoDownloadPickerView);
  v30 = swift_allocObject();
  sub_1DA5FB05C(v29, v30 + v37);
  v31 = v42;
  sub_1DA66E5C0();
  sub_1DA5FAB7C();
  sub_1DA66E7B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v45);
  return sub_1DA47E2F0((uint64_t)v12, &qword_1F026D128);
}

uint64_t sub_1DA5F5D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __int128 v65;
  uint64_t v66;

  v54 = a2;
  v3 = (int *)type metadata accessor for AutoDownloadPickerView(0);
  v4 = *(_QWORD *)(*((_QWORD *)v3 - 1) + 64);
  v51 = *((_QWORD *)v3 - 1);
  v52 = v4;
  MEMORY[0x1E0C80A78](v3);
  v49 = (uint64_t)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1DA66E500();
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v44 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D100);
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v39 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0F8);
  v53 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v41 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a1 + v3[5];
  v9 = *(_QWORD *)(v43 + 16);
  v65 = *(_OWORD *)v43;
  v66 = v9;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
  sub_1DA66E950();
  v10 = v55;
  v37[1] = v55;
  v11 = v56;
  v12 = a1 + v3[6];
  v40 = a1;
  v13 = *(_BYTE *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  LOBYTE(v65) = v13;
  *((_QWORD *)&v65 + 1) = v14;
  __swift_instantiateConcreteTypeFromMangledName(qword_1F026B2B0);
  sub_1DA66E8E4();
  v15 = *((_QWORD *)&v55 + 1);
  v38 = v55;
  v16 = v56;
  v17 = a1 + v3[7];
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  v21 = *(_QWORD *)(v17 + 16);
  v20 = *(_QWORD *)(v17 + 24);
  LOBYTE(a1) = *(_BYTE *)(v17 + 32);
  v55 = v10;
  v56 = v11;
  v57 = v18;
  v58 = v19;
  v59 = v21;
  v60 = v20;
  v61 = a1;
  v62 = v38;
  v63 = v15;
  v64 = v16;
  sub_1DA5FAF94(v18, v19);
  v22 = sub_1DA5FAAB4();
  v23 = v39;
  sub_1DA66E788();
  swift_release();
  swift_release();
  sub_1DA5FD750(v18, v19);
  swift_release();
  swift_release();
  v24 = v44;
  sub_1DA66E4F4();
  *(_QWORD *)&v55 = &type metadata for AutoDownloadPicker;
  *((_QWORD *)&v55 + 1) = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v26 = MEMORY[0x1E0CDAA98];
  v27 = v41;
  v28 = v45;
  v29 = v47;
  sub_1DA66E770();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v29);
  v30 = v28;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v28);
  v31 = *(_QWORD *)(v43 + 16);
  v55 = *(_OWORD *)v43;
  v56 = v31;
  MEMORY[0x1DF09D318](&v65, v42);
  v32 = v49;
  sub_1DA484504(v40, v49, type metadata accessor for AutoDownloadPickerView);
  v33 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v34 = swift_allocObject();
  sub_1DA5FB05C(v32, v34 + v33);
  *(_QWORD *)&v55 = v30;
  *((_QWORD *)&v55 + 1) = v29;
  v56 = OpaqueTypeConformance2;
  v57 = v26;
  swift_getOpaqueTypeConformance2();
  v35 = v50;
  sub_1DA66E7DC();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v27, v35);
}

__n128 AutoDownloadPicker.init(autoDownloadOption:showLoadingUI:pickerType:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __n128 result;
  __int128 v9;
  char v10;

  result = *(__n128 *)a7;
  v9 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(a8 + 24) = *(_OWORD *)a7;
  v10 = *(_BYTE *)(a7 + 32);
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_OWORD *)(a8 + 40) = v9;
  *(_BYTE *)(a8 + 56) = v10;
  *(_QWORD *)(a8 + 64) = a4;
  *(_QWORD *)(a8 + 72) = a5;
  *(_BYTE *)(a8 + 80) = a6;
  return result;
}

uint64_t sub_1DA5F6198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  _QWORD *v21;
  void *v22;
  uint64_t v24;
  __int128 aBlock;
  uint64_t (*v26)(uint64_t);
  void *v27;
  uint64_t (*v28)();
  _QWORD *v29;
  uint64_t v30;

  v4 = sub_1DA66E3A4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AutoDownloadPickerView(0);
  v9 = (__int128 *)(a3 + *(int *)(v8 + 20));
  v10 = *v9;
  v11 = (uint64_t (*)(uint64_t))*((_QWORD *)v9 + 2);
  aBlock = v10;
  v26 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
  MEMORY[0x1DF09D318](&v30, v12);
  v13 = v30;
  if ((v30 & 0xFFFFFFFEFFFFFFFFLL) != 0)
  {
    v14 = (uint64_t *)(a3 + *(int *)(v8 + 28));
    v15 = v14[1];
    if (v15 >= 2)
    {
      v17 = *v14;
      v18 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v19 = objc_msgSend(v18, sel_sharedInstance);
      v20 = objc_msgSend(v19, sel_privateQueueContext);

      v21 = (_QWORD *)swift_allocObject();
      v21[2] = v20;
      v21[3] = v17;
      v21[4] = v15;
      v21[5] = v13;
      v28 = sub_1DA5FDCE0;
      v29 = v21;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v26 = sub_1DA4A9194;
      v27 = &block_descriptor_24;
      v22 = _Block_copy(&aBlock);
      v16 = v20;
      swift_release();
      objc_msgSend(v16, sel_performBlock_, v22);
      _Block_release(v22);
    }
    else
    {
      v16 = objc_msgSend((id)objc_opt_self(), sel_defaultMediaLibrary);
      sub_1DA516F44();
    }

  }
  sub_1DA5FD23C((uint64_t)v7);
  sub_1DA66E398();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DA5F63B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v27 = a4;
  v7 = sub_1DA66E9C8();
  v26 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66EA04();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66E9D4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (void *)sub_1DA66F88C();
  v18 = objc_msgSend(a1, sel_podcastForUuid_, v17);

  if (v18)
  {
    objc_msgSend(v18, sel_setEpisodeLimit_, v27);

  }
  sub_1DA486298();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF540], v13);
  v19 = (void *)sub_1DA66FF04();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v27;
  v20[3] = a2;
  v20[4] = a3;
  aBlock[4] = sub_1DA5FDD10;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA4A9194;
  aBlock[3] = &block_descriptor_82;
  v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_1DA66E9EC();
  v28 = MEMORY[0x1E0DEE9D8];
  sub_1DA47E32C((unint64_t *)&qword_1EDADE6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA4841D4((unint64_t *)&qword_1EDADE6F0, (uint64_t *)&unk_1EDADE6E0, MEMORY[0x1E0DEAF38]);
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v12, v9, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
  return swift_release();
}

void sub_1DA5F6684()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultMediaLibrary);
  sub_1DA516F44();

}

uint64_t DownloadPickerLoadingOverlay.init(showOverlaySpinner:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_1DA5F6704(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1DA66E3E0();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1DA66E4B8();
}

uint64_t sub_1DA5F6780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v4)(uint64_t);
  uint64_t v5;

  v2 = a2 + *(int *)(type metadata accessor for AutoDownloadPickerView(0) + 28);
  if (*(_QWORD *)(v2 + 8) < 2uLL)
    return sub_1DA66E3BC();
  v4 = *(void (**)(uint64_t))(v2 + 16);
  v5 = sub_1DA66BE60();
  v4(v5);
  sub_1DA66E3C8();
  return swift_release();
}

uint64_t sub_1DA5F67F4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  result = type metadata accessor for AutoDownloadPickerView(0);
  v3 = a1 + *(int *)(result + 28);
  if (*(_QWORD *)(v3 + 8) >= 2uLL)
  {
    v4 = *(void (**)(uint64_t))(v3 + 16);
    v5 = sub_1DA66BE60();
    v4(v5);
    return swift_release();
  }
  return result;
}

uint64_t DownloadPickerLoadingOverlay.showOverlaySpinner.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B338);
  MEMORY[0x1DF09D318](&v2, v0);
  return v2;
}

_QWORD *sub_1DA5F689C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B338);
  result = MEMORY[0x1DF09D318](&v4, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_1DA5F68F0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B338);
  return sub_1DA66E944();
}

uint64_t DownloadPickerLoadingOverlay.showOverlaySpinner.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B338);
  return sub_1DA66E944();
}

void (*DownloadPickerLoadingOverlay.showOverlaySpinner.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = v1[1];
  v3[3] = *v1;
  v3[4] = v5;
  v6 = *((_BYTE *)v1 + 16);
  *((_BYTE *)v3 + 19) = v6;
  *v3 = v4;
  v3[1] = v5;
  *((_BYTE *)v3 + 16) = v6;
  sub_1DA66BE60();
  sub_1DA66BE60();
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B338);
  MEMORY[0x1DF09D318]();
  return sub_1DA5F6A18;
}

void sub_1DA5F6A18(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 17);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 19);
  *v1 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v1[1] = v3;
  *((_BYTE *)v1 + 16) = v4;
  *((_BYTE *)v1 + 18) = v2;
  sub_1DA66E944();
  swift_release();
  swift_release();
  free(v1);
}

uint64_t DownloadPickerLoadingOverlay.$showOverlaySpinner.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B338);
  sub_1DA66E950();
  return v1;
}

uint64_t DownloadPickerLoadingOverlay.body.getter@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = *((_BYTE *)v1 + 16);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v4;
  *(_BYTE *)(v6 + 32) = v5;
  *a1 = sub_1DA5FAC04;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v6;
  sub_1DA66BE60();
  return sub_1DA66BE60();
}

uint64_t sub_1DA5F6B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v34 = a4;
  v32 = a2;
  v33 = a3;
  v35 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4C8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4D0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4D8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4E0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4E8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = sub_1DA66E50C();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4F0);
  sub_1DA5F6E64(a1, (uint64_t)&v8[*(int *)(v21 + 44)]);
  sub_1DA66E3B0();
  v23 = v22 * 1.2;
  sub_1DA66E98C();
  sub_1DA5F76F4(0.0, 1, 0.0, 1, INFINITY, 0, v23, 0, (uint64_t)v11, 0.0, 1, INFINITY, 0);
  sub_1DA47E2F0((uint64_t)v8, &qword_1F026D4C8);
  v24 = sub_1DA66E434();
  LOBYTE(v8) = sub_1DA66E5FC();
  sub_1DA49CC94((uint64_t)v11, (uint64_t)v14, &qword_1F026D4D0);
  v25 = &v14[*(int *)(v12 + 36)];
  *(_QWORD *)v25 = v24;
  v25[8] = (char)v8;
  sub_1DA47E2F0((uint64_t)v11, &qword_1F026D4D0);
  sub_1DA66E83C();
  v26 = sub_1DA66E854();
  swift_release();
  LOBYTE(v24) = sub_1DA66E5FC();
  sub_1DA49CC94((uint64_t)v14, (uint64_t)v17, &qword_1F026D4D8);
  v27 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v27 = v26;
  v27[8] = v24;
  sub_1DA47E2F0((uint64_t)v14, &qword_1F026D4D8);
  v36 = v32;
  v37 = v33;
  v38 = v34;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B338);
  MEMORY[0x1DF09D318](&v39, v28);
  if ((_BYTE)v39)
    v29 = 1.0;
  else
    v29 = 0.0;
  sub_1DA49CC94((uint64_t)v17, (uint64_t)v20, &qword_1F026D4E0);
  *(double *)&v20[*(int *)(v18 + 36)] = v29;
  sub_1DA47E2F0((uint64_t)v17, &qword_1F026D4E0);
  return sub_1DA4A686C((uint64_t)v20, v35, &qword_1F026D4E8);
}

uint64_t sub_1DA5F6E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;

  v41 = a2;
  v3 = sub_1DA66E440();
  MEMORY[0x1E0C80A78](v3);
  v5 = (_OWORD *)((char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D500);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D508);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = sub_1DA66E530();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D510);
  sub_1DA5F7134(a1, (uint64_t)&v8[*(int *)(v15 + 44)]);
  LOBYTE(a1) = sub_1DA66E5FC();
  sub_1DA66E344();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_1DA49CC94((uint64_t)v8, (uint64_t)v11, &qword_1F026D4F8);
  v24 = &v11[*(int *)(v9 + 36)];
  *v24 = a1;
  *((_QWORD *)v24 + 1) = v17;
  *((_QWORD *)v24 + 2) = v19;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = v23;
  v24[40] = 0;
  sub_1DA47E2F0((uint64_t)v8, &qword_1F026D4F8);
  v25 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  v26 = MEMORY[0x1DF09D258](v25);
  LOBYTE(a1) = sub_1DA66E5FC();
  sub_1DA49CC94((uint64_t)v11, (uint64_t)v14, &qword_1F026D500);
  v27 = &v14[*(int *)(v12 + 36)];
  *(_QWORD *)v27 = v26;
  v27[8] = a1;
  sub_1DA47E2F0((uint64_t)v11, &qword_1F026D500);
  v28 = (char *)v5 + *(int *)(v3 + 20);
  v29 = *MEMORY[0x1E0CDB0C0];
  v30 = sub_1DA66E524();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v28, v29, v30);
  __asm { FMOV            V0.2D, #15.0 }
  *v5 = _Q0;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D518);
  v37 = v41;
  v38 = v41 + *(int *)(v36 + 36);
  sub_1DA484504((uint64_t)v5, v38, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  *(_WORD *)(v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026D520) + 36)) = 256;
  sub_1DA49CC94((uint64_t)v14, v37, &qword_1F026D508);
  sub_1DA5FDAA8((uint64_t)v5);
  return sub_1DA47E2F0((uint64_t)v14, &qword_1F026D508);
}

uint64_t sub_1DA5F7134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t KeyPath;
  double v41;
  double v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _OWORD v86[2];
  _OWORD v87[10];
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;

  v70 = a1;
  v72 = a2;
  v2 = sub_1DA66E5E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D528);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D530);
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D538);
  MEMORY[0x1E0C80A78](v67);
  v73 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v67 - v15;
  MEMORY[0x1E0C80A78](v17);
  v71 = (char *)&v67 - v18;
  sub_1DA66E380();
  sub_1DA66E5D8();
  sub_1DA4841D4(&qword_1F026D540, &qword_1F026D528, MEMORY[0x1E0CD8B78]);
  sub_1DA47E32C(&qword_1F026D548, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDC7A8], MEMORY[0x1E0CDC798]);
  sub_1DA66E764();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOBYTE(v2) = sub_1DA66E614();
  v19 = sub_1DA66E608();
  v20 = sub_1DA66E62C();
  sub_1DA66E62C();
  if (sub_1DA66E62C() != v2)
    v20 = sub_1DA66E62C();
  sub_1DA66E62C();
  if (sub_1DA66E62C() != v19)
    v20 = sub_1DA66E62C();
  v21 = (uint64_t)v71;
  sub_1DA66E344();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v68;
  v30 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v16, v12, v69);
  v32 = &v16[*(int *)(v67 + 36)];
  *v32 = v20;
  *((_QWORD *)v32 + 1) = v23;
  *((_QWORD *)v32 + 2) = v25;
  *((_QWORD *)v32 + 3) = v27;
  *((_QWORD *)v32 + 4) = v29;
  v32[40] = 0;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v30);
  sub_1DA4A686C((uint64_t)v16, v21, &qword_1F026D538);
  sub_1DA66E518();
  v33 = sub_1DA66E71C();
  v35 = v34;
  v37 = v36;
  v39 = v38 & 1;
  KeyPath = swift_getKeyPath();
  v104 = v33;
  v105 = v35;
  v106 = v39;
  v107 = v37;
  v108 = KeyPath;
  v109 = 1;
  sub_1DA66E3B0();
  v42 = v41 * 0.7;
  sub_1DA66E98C();
  sub_1DA5F78B0(0.0, 1, 0.0, 1, v42, 0, 0.0, 1, &v94, 0.0, 1, 0.0, 1);
  sub_1DA5251EC(v33, v35, v39);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v35) = sub_1DA66E620();
  v43 = sub_1DA66E638();
  v44 = sub_1DA66E614();
  v45 = sub_1DA66E62C();
  sub_1DA66E62C();
  if (sub_1DA66E62C() != v35)
    v45 = sub_1DA66E62C();
  sub_1DA66E62C();
  if (sub_1DA66E62C() != v43)
    v45 = sub_1DA66E62C();
  sub_1DA66E62C();
  if (sub_1DA66E62C() != v44)
    v45 = sub_1DA66E62C();
  sub_1DA66E344();
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v74 = 0;
  v54 = v73;
  sub_1DA49CC94(v21, v73, &qword_1F026D538);
  v55 = v74;
  v56 = v72;
  sub_1DA49CC94(v54, v72, &qword_1F026D538);
  v57 = (_OWORD *)(v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026D550) + 48));
  v81 = v100;
  v82 = v101;
  v83 = v102;
  v84 = v103;
  v79 = v98;
  v80 = v99;
  v77 = v96;
  v58 = v96;
  v78 = v97;
  v75 = v94;
  v76 = v95;
  v59 = v99;
  v60 = v101;
  v57[6] = v100;
  v57[7] = v60;
  v61 = v84;
  v57[8] = v83;
  v57[9] = v61;
  v62 = v78;
  v63 = v79;
  v57[2] = v58;
  v57[3] = v62;
  LOBYTE(v85) = v45;
  *((_QWORD *)&v85 + 1) = v47;
  *(_QWORD *)&v86[0] = v49;
  *((_QWORD *)&v86[0] + 1) = v51;
  *(_QWORD *)&v86[1] = v53;
  BYTE8(v86[1]) = v55;
  v57[4] = v63;
  v57[5] = v59;
  v64 = v76;
  *v57 = v75;
  v57[1] = v64;
  v65 = v86[0];
  v57[10] = v85;
  v57[11] = v65;
  *(_OWORD *)((char *)v57 + 185) = *(_OWORD *)((char *)v86 + 9);
  sub_1DA5FDB30((uint64_t)&v75);
  sub_1DA47E2F0(v21, &qword_1F026D538);
  v87[6] = v100;
  v87[7] = v101;
  v87[8] = v102;
  v87[9] = v103;
  v87[2] = v96;
  v87[3] = v97;
  v87[4] = v98;
  v87[5] = v99;
  v87[0] = v94;
  v87[1] = v95;
  v88 = v45;
  v89 = v47;
  v90 = v49;
  v91 = v51;
  v92 = v53;
  v93 = v55;
  sub_1DA5FDB7C((uint64_t)v87);
  return sub_1DA47E2F0(v54, &qword_1F026D538);
}

__n128 sub_1DA5F76F4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  _OWORD *v24;
  __n128 result;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __n128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1DA66FDB4();
    v23 = (void *)sub_1DA66E5F0();
    sub_1DA66DD38();

  }
  sub_1DA66E44C();
  sub_1DA49CC94(v13, a9, &qword_1F026D4C8);
  v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4D0) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *v24 = v26;
  v24[1] = v27;
  result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t sub_1DA5F78B0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  __int128 *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _BYTE v39[32];

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1DA66FDB4();
    v23 = (void *)sub_1DA66E5F0();
    sub_1DA66DD38();

  }
  sub_1DA66E44C();
  v24 = v13[1];
  v36 = *v13;
  v37 = v24;
  sub_1DA5FDBC8((uint64_t)&v36, (uint64_t)v39);
  v38 = *((_QWORD *)&v37 + 1);
  v34 = *((_QWORD *)v13 + 4);
  v35 = *((_BYTE *)v13 + 40);
  v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(__int128 *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_1DA5FDC04((uint64_t)v39);
  sub_1DA497B8C((uint64_t)&v38);
  return sub_1DA5FDC34((uint64_t)&v34);
}

uint64_t sub_1DA5F7A88@<X0>(uint64_t (**a1)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = *((_BYTE *)v1 + 16);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v4;
  *(_BYTE *)(v6 + 32) = v5;
  *a1 = sub_1DA5FE36C;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v6;
  sub_1DA66BE60();
  return sub_1DA66BE60();
}

uint64_t AutoDownloadPicker.body.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D158);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[3];
  v14 = v0[2];
  v15 = v4;
  v16 = v0[4];
  v17 = *((_BYTE *)v0 + 80);
  v5 = v0[1];
  v12 = *v0;
  v13 = v5;
  sub_1DA5F7BF8();
  v10 = v12;
  v11 = v13;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
  MEMORY[0x1DF09D318](&v9, v6);
  sub_1DA5FAC10();
  sub_1DA66E7DC();
  return sub_1DA47E2F0((uint64_t)v3, &qword_1F026D158);
}

uint64_t sub_1DA5F7BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D1C0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D4C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D188);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66C784();
  v20 = v10;
  v21 = sub_1DA47E32C((unint64_t *)&qword_1EDAE1990, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7D588], MEMORY[0x1E0D7D520]);
  v11 = __swift_allocate_boxed_opaque_existential_1(&v18);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v11, *MEMORY[0x1E0D7D558], v10);
  LOBYTE(v10) = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v18);
  if ((v10 & 1) != 0)
  {
    AutoDownloadPicker.asynchronousPicker.getter((uint64_t)v9);
    sub_1DA49CC94((uint64_t)v9, (uint64_t)v6, &qword_1F026D188);
    swift_storeEnumTagMultiPayload();
    sub_1DA4841D4(&qword_1F026D180, &qword_1F026D188, (uint64_t)&protocol conformance descriptor for AsyncSelectionConfirmingPicker<A, B, C>);
    v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D190);
    v13 = sub_1DA4841D4(&qword_1F026D198, &qword_1F026D190, (uint64_t)&unk_1DA67D938);
    v18 = v12;
    v19 = v13;
    swift_getOpaqueTypeConformance2();
    sub_1DA66E56C();
    return sub_1DA47E2F0((uint64_t)v9, &qword_1F026D188);
  }
  else
  {
    AutoDownloadPicker.synchronousPicker.getter((uint64_t)v3);
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v6, v3, v0);
    swift_storeEnumTagMultiPayload();
    sub_1DA4841D4(&qword_1F026D180, &qword_1F026D188, (uint64_t)&protocol conformance descriptor for AsyncSelectionConfirmingPicker<A, B, C>);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D190);
    v16 = sub_1DA4841D4(&qword_1F026D198, &qword_1F026D190, (uint64_t)&unk_1DA67D938);
    v18 = v15;
    v19 = v16;
    swift_getOpaqueTypeConformance2();
    sub_1DA66E56C();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t AutoDownloadPicker.asynchronousPicker.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  _BYTE *v25;
  uint64_t v27;
  _BYTE v28[12];
  _BOOL4 v29;
  _BYTE *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;
  __int128 v43[2];
  _BYTE v44[8];
  uint64_t v45;

  v31 = a1;
  v2 = sub_1DA66E338();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D188);
  MEMORY[0x1E0C80A78](v5);
  v30 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v1[3];
  v39 = v1[2];
  v40 = v7;
  v41 = v1[4];
  v42 = *((_BYTE *)v1 + 80);
  v8 = v1[1];
  v37 = *v1;
  v38 = v8;
  v9 = swift_allocObject();
  v10 = v1[3];
  *(_OWORD *)(v9 + 48) = v1[2];
  *(_OWORD *)(v9 + 64) = v10;
  *(_OWORD *)(v9 + 80) = v1[4];
  *(_BYTE *)(v9 + 96) = *((_BYTE *)v1 + 80);
  v11 = v1[1];
  *(_OWORD *)(v9 + 16) = *v1;
  *(_OWORD *)(v9 + 32) = v11;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_1F026D1A8;
  *(_QWORD *)(v12 + 24) = v9;
  v13 = swift_allocObject();
  v14 = v1[3];
  *(_OWORD *)(v13 + 48) = v1[2];
  *(_OWORD *)(v13 + 64) = v14;
  *(_OWORD *)(v13 + 80) = v1[4];
  *(_BYTE *)(v13 + 96) = *((_BYTE *)v1 + 80);
  v15 = v1[1];
  *(_OWORD *)(v13 + 16) = *v1;
  *(_OWORD *)(v13 + 32) = v15;
  sub_1DA5FAEF0((__int128 *)((char *)&v38 + 8), (uint64_t)v43);
  sub_1DA5FAEF0(v43, (uint64_t)v44);
  v29 = v45 != 1;
  v32 = v37;
  v33 = v38;
  sub_1DA5FAF08((uint64_t)&v37);
  sub_1DA5FAF08((uint64_t)&v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
  sub_1DA66E950();
  v16 = v34;
  v17 = v35;
  v18 = v36;
  v32 = v41;
  LOBYTE(v33) = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B338);
  sub_1DA66E950();
  v19 = v34;
  v20 = v35;
  v21 = v36;
  v22 = swift_allocObject();
  v23 = v40;
  *(_OWORD *)(v22 + 48) = v39;
  *(_OWORD *)(v22 + 64) = v23;
  *(_OWORD *)(v22 + 80) = v41;
  *(_BYTE *)(v22 + 96) = v42;
  v24 = v38;
  *(_OWORD *)(v22 + 16) = v37;
  *(_OWORD *)(v22 + 32) = v24;
  sub_1DA5FAF08((uint64_t)&v37);
  sub_1DA66E320();
  v27 = v19;
  v25 = v30;
  sub_1DA5F4C68((uint64_t)&unk_1F026D1B8, v12, (uint64_t)sub_1DA5FAEE8, v13, (uint64_t)v4, v29, v16, v17, (uint64_t)v30, 0.2, v18, v27, v20, v21, (uint64_t)sub_1DA5FAFCC, v22);
  return sub_1DA4A686C((uint64_t)v25, v31, &qword_1F026D188);
}

uint64_t AutoDownloadPicker.synchronousPicker.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (**v32)();
  char *v33;
  uint64_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  char v55;
  __int128 v56[2];
  char v57[8];
  uint64_t v58;

  v43 = a1;
  v39 = sub_1DA66E338();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D190);
  MEMORY[0x1E0C80A78](v37);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D1C0);
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v40 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[3];
  v52 = v1[2];
  v53 = v7;
  v54 = v1[4];
  v55 = *((_BYTE *)v1 + 80);
  v8 = v1[1];
  v50 = *v1;
  v51 = v8;
  v9 = swift_allocObject();
  v10 = v1[3];
  *(_OWORD *)(v9 + 48) = v1[2];
  *(_OWORD *)(v9 + 64) = v10;
  *(_OWORD *)(v9 + 80) = v1[4];
  *(_BYTE *)(v9 + 96) = *((_BYTE *)v1 + 80);
  v11 = v1[1];
  *(_OWORD *)(v9 + 16) = *v1;
  *(_OWORD *)(v9 + 32) = v11;
  v12 = swift_allocObject();
  v13 = v1[3];
  *(_OWORD *)(v12 + 48) = v1[2];
  *(_OWORD *)(v12 + 64) = v13;
  *(_OWORD *)(v12 + 80) = v1[4];
  *(_BYTE *)(v12 + 96) = *((_BYTE *)v1 + 80);
  v14 = v1[1];
  *(_OWORD *)(v12 + 16) = *v1;
  *(_OWORD *)(v12 + 32) = v14;
  v15 = swift_allocObject();
  v16 = v1[3];
  *(_OWORD *)(v15 + 48) = v1[2];
  *(_OWORD *)(v15 + 64) = v16;
  *(_OWORD *)(v15 + 80) = v1[4];
  *(_BYTE *)(v15 + 96) = *((_BYTE *)v1 + 80);
  v17 = v1[1];
  *(_OWORD *)(v15 + 16) = *v1;
  *(_OWORD *)(v15 + 32) = v17;
  v18 = swift_allocObject();
  v19 = v1[3];
  *(_OWORD *)(v18 + 48) = v1[2];
  *(_OWORD *)(v18 + 64) = v19;
  *(_OWORD *)(v18 + 80) = v1[4];
  *(_BYTE *)(v18 + 96) = *((_BYTE *)v1 + 80);
  v20 = v1[1];
  *(_OWORD *)(v18 + 16) = *v1;
  *(_OWORD *)(v18 + 32) = v20;
  sub_1DA5FAEF0((__int128 *)((char *)&v51 + 8), (uint64_t)v56);
  sub_1DA5FAEF0(v56, (uint64_t)v57);
  v36 = v58 != 1;
  v45 = v50;
  v46 = v51;
  sub_1DA5FAF08((uint64_t)&v50);
  sub_1DA5FAF08((uint64_t)&v50);
  sub_1DA5FAF08((uint64_t)&v50);
  sub_1DA5FAF08((uint64_t)&v50);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
  sub_1DA66E950();
  v21 = v47;
  v22 = v48;
  v23 = v49;
  v24 = swift_allocObject();
  v25 = v53;
  *(_OWORD *)(v24 + 48) = v52;
  *(_OWORD *)(v24 + 64) = v25;
  *(_OWORD *)(v24 + 80) = v54;
  *(_BYTE *)(v24 + 96) = v55;
  v26 = v51;
  *(_OWORD *)(v24 + 16) = v50;
  *(_OWORD *)(v24 + 32) = v26;
  sub_1DA5FAF08((uint64_t)&v50);
  sub_1DA66E320();
  v47 = v21;
  v48 = v22;
  v49 = v23;
  v44 = 0;
  sub_1DA66E8C0();
  v27 = *((_QWORD *)&v45 + 1);
  v5[40] = v45;
  *((_QWORD *)v5 + 6) = v27;
  *((_QWORD *)v5 + 7) = sub_1DA5FAFF8;
  *((_QWORD *)v5 + 8) = v9;
  *((_QWORD *)v5 + 9) = sub_1DA5FB004;
  *((_QWORD *)v5 + 10) = v12;
  *((_QWORD *)v5 + 11) = sub_1DA5FB014;
  *((_QWORD *)v5 + 12) = v15;
  v28 = (int *)v37;
  v29 = v38;
  v30 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(&v5[*(int *)(v37 + 72)], v3, v39);
  v31 = &v5[v28[20]];
  *(_QWORD *)v31 = sub_1DA5FB020;
  *((_QWORD *)v31 + 1) = v18;
  v5[v28[21]] = v36;
  *(_QWORD *)v5 = v21;
  *((_QWORD *)v5 + 1) = v22;
  *((_QWORD *)v5 + 2) = v23;
  MEMORY[0x1DF09D318](&v45, v35);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v3, v30);
  *((_QWORD *)v5 + 3) = v45;
  *((_QWORD *)v5 + 4) = 0;
  v32 = (uint64_t (**)())&v5[v28[19]];
  *v32 = sub_1DA5FB02C;
  v32[1] = (uint64_t (*)())v24;
  sub_1DA4841D4(&qword_1F026D198, &qword_1F026D190, (uint64_t)&unk_1DA67D938);
  v33 = v40;
  sub_1DA66E788();
  sub_1DA47E2F0((uint64_t)v5, &qword_1F026D190);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v43, v33, v42);
}

uint64_t sub_1DA5F8658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v6;

  v0 = sub_1DA66C430();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  sub_1DA66C418();
  sub_1DA66FDD8();

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DA5F8720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9[2];
  _QWORD v10[5];

  sub_1DA5FAEF0((__int128 *)(a3 + 24), (uint64_t)v9);
  sub_1DA66D2F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DA678510;
  sub_1DA5FAEF0(v9, (uint64_t)v10);
  if (v10[1] >= 2uLL)
  {
    v5 = sub_1DA66FFD0();
    v4 = v5 & ~(v5 >> 63);
  }
  else
  {
    v4 = sub_1DA66FFE8();
  }
  v6 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v3 + 64) = v6;
  *(_QWORD *)(v3 + 32) = v4;
  v7 = sub_1DA66F8E0();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1DA5F8820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10[2];
  _QWORD v11[5];

  sub_1DA66D2F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DA678510;
  sub_1DA5FAEF0((__int128 *)(a3 + 24), (uint64_t)v10);
  sub_1DA5FAEF0(v10, (uint64_t)v11);
  if (v11[1] >= 2uLL)
  {
    v6 = sub_1DA66FFD0();
    v5 = v6 & ~(v6 >> 63);
  }
  else
  {
    v5 = sub_1DA66FFE8();
  }
  v7 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v4 + 64) = v7;
  *(_QWORD *)(v4 + 32) = v5;
  v8 = sub_1DA66F8E0();
  swift_bridgeObjectRelease();
  return v8;
}

BOOL sub_1DA5F892C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v5[2];
  _QWORD v6[5];

  if ((*a2 & 0xFFFFFFFEFFFFFFFFLL) == 0)
    return 0;
  sub_1DA5FAEF0((__int128 *)(a3 + 24), (uint64_t)v5);
  sub_1DA5FAEF0(v5, (uint64_t)v6);
  if (v6[1] >= 2uLL)
    v3 = sub_1DA66FFD0();
  else
    v3 = sub_1DA66FFE8();
  return v3 > 0;
}

uint64_t sub_1DA5F89A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  _QWORD *v7;

  v5 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v3 + 64) = v5;
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(a3 + 64);
  *(_BYTE *)(v3 + 96) = *(_BYTE *)(a3 + 80);
  v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v3 + 32) = v6;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 104) = v7;
  *v7 = v3;
  v7[1] = sub_1DA5F8A14;
  return sub_1DA5FD7DC(a2);
}

uint64_t sub_1DA5F8A14(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = a2 & 1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
}

uint64_t sub_1DA5F8A6C(uint64_t a1, uint64_t *a2, uint64_t *a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a1;
  v5 = *a2;
  v6 = *a3;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v7;
  *v7 = v4;
  v7[1] = sub_1DA5F8ADC;
  return v9(v5, v6);
}

uint64_t sub_1DA5F8ADC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v7;

  v5 = *(_QWORD *)(*v2 + 16);
  v7 = *v2;
  swift_task_dealloc();
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1DA5F8B40@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v3 = *a1;
  sub_1DA66D2F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v4 + 16) = xmmword_1DA678510;
  v6 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 32) = v3;
  v7 = sub_1DA66F8E0();
  v9 = v8;
  swift_bridgeObjectRelease();
  sub_1DA66D2F4();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v10 + 56) = v5;
  *(_QWORD *)(v10 + 64) = v6;
  *(_QWORD *)(v10 + 32) = v3;
  v11 = sub_1DA66F8E0();
  v13 = v12;
  result = swift_bridgeObjectRelease();
  *a2 = v7;
  a2[1] = v9;
  a2[2] = v11;
  a2[3] = v13;
  a2[4] = 0;
  a2[5] = 0;
  return result;
}

uint64_t sub_1DA5F8C94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v12[2];
  __int128 v13[2];
  _BYTE v14[8];
  unint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D480);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA5FAEF0((__int128 *)(a1 + 24), (uint64_t)v13);
  sub_1DA5FAEF0(v13, (uint64_t)v14);
  if (v15 >= 2)
    v6 = sub_1DA66FFB8();
  else
    v6 = sub_1DA66FFC4();
  v12[0] = v6;
  v7 = swift_allocObject();
  v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v7 + 64) = v8;
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a1 + 64);
  *(_BYTE *)(v7 + 96) = *(_BYTE *)(a1 + 80);
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v9;
  sub_1DA5FAF08(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B58);
  sub_1DA4841D4(&qword_1F026D488, &qword_1EDAE4B58, MEMORY[0x1E0DEAF48]);
  sub_1DA47E32C(&qword_1F026D490, (uint64_t (*)(uint64_t))type metadata accessor for MTPodcastEpisodeLimit, MEMORY[0x1E0D7F0D8]);
  sub_1DA66E968();
  v12[0] = sub_1DA66D2F4();
  v12[1] = v10;
  sub_1DA5FD6F4();
  sub_1DA498918();
  sub_1DA66E7AC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1DA5F8E94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD v20[2];

  v4 = sub_1DA66DC0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_BYTE *)(a1 + 56);
  if (v10 >= 2)
  {
    swift_bridgeObjectRetain();
    sub_1DA66BE60();
    if ((v11 & 1) != 0 && (os_feature_enabled_serial_sort_auto_downloads() & 1) != 0)
      v12 = (unsigned int *)MEMORY[0x1E0D7EC60];
    else
      v12 = (unsigned int *)MEMORY[0x1E0D7EC70];
  }
  else
  {
    v12 = (unsigned int *)MEMORY[0x1E0D7EC68];
  }
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, *v12, v4, v6);
  sub_1DA5FD750(v9, v10);
  v13 = sub_1DA670000();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v20[0] = v13;
  v20[1] = v15;
  sub_1DA498918();
  result = sub_1DA66E734();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v18 & 1;
  *(_QWORD *)(a2 + 24) = v19;
  return result;
}

uint64_t sub_1DA5F8FE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 64) = a1;
  *(_OWORD *)(v2 + 72) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 88) = sub_1DA66FB68();
  *(_QWORD *)(v2 + 96) = sub_1DA66FB5C();
  *(_QWORD *)(v2 + 104) = sub_1DA66FB38();
  *(_QWORD *)(v2 + 112) = v3;
  return swift_task_switch();
}

uint64_t sub_1DA5F9060()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v3;

  if (v0[10] >= 2uLL)
  {
    v0[15] = sub_1DA66FB5C();
    v3 = (_QWORD *)swift_task_alloc();
    v0[16] = v3;
    *v3 = v0;
    v3[1] = sub_1DA5F910C;
    return sub_1DA66FFDC();
  }
  else
  {
    v0[18] = sub_1DA66FB5C();
    v1 = (_QWORD *)swift_task_alloc();
    v0[19] = v1;
    *v1 = v0;
    v1[1] = sub_1DA5F919C;
    return sub_1DA66FFF4();
  }
}

uint64_t sub_1DA5F910C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  v3[17] = v1;
  swift_task_dealloc();
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA5F919C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = v1;
  v3[20] = v1;
  swift_task_dealloc();
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA5F922C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA5F9264()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA5F92A0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA5F92D8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5F930C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA5F9344()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA5F9380()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA5F93B8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5F93EC()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D158);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[3];
  v14 = v0[2];
  v15 = v4;
  v16 = v0[4];
  v17 = *((_BYTE *)v0 + 80);
  v5 = v0[1];
  v12 = *v0;
  v13 = v5;
  sub_1DA5F7BF8();
  v10 = v12;
  v11 = v13;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
  MEMORY[0x1DF09D318](&v9, v6);
  sub_1DA5FAC10();
  sub_1DA66E7DC();
  return sub_1DA47E2F0((uint64_t)v3, &qword_1F026D158);
}

uint64_t GlobalSettingsAutoDownloadPickerLink.init()@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t result;

  sub_1DA66FFAC();
  sub_1DA670030();
  sub_1DA66F8BC();
  v2 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  result = sub_1DA66E2CC();
  *a1 = result;
  return result;
}

uint64_t GlobalSettingsAutoDownloadPickerLink.body.getter()
{
  int *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v12;
  char v13;
  __int128 v14;
  uint64_t v15;

  v0 = (int *)type metadata accessor for AutoDownloadPickerView(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (uint64_t *)((char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - v4;
  sub_1DA66BE60();
  sub_1DA66E2F0();
  swift_release();
  v12 = v14;
  v6 = v15;
  *v2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
  swift_storeEnumTagMultiPayload();
  v7 = (char *)v2 + v0[6];
  v13 = 0;
  sub_1DA66E8C0();
  v8 = *((_QWORD *)&v14 + 1);
  *v7 = v14;
  *((_QWORD *)v7 + 1) = v8;
  v9 = (char *)v2 + v0[5];
  *(_OWORD *)v9 = v12;
  *((_QWORD *)v9 + 2) = v6;
  v10 = (char *)v2 + v0[7];
  v10[32] = 0;
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  sub_1DA5FB05C((uint64_t)v2, (uint64_t)v5);
  type metadata accessor for AutomaticallyDownloadCellStack(0);
  sub_1DA47E32C(&qword_1F026D1C8, type metadata accessor for AutomaticallyDownloadCellStack, (uint64_t)&unk_1DA682928);
  sub_1DA47E32C(&qword_1F026D1D0, type metadata accessor for AutoDownloadPickerView, (uint64_t)&protocol conformance descriptor for AutoDownloadPickerView);
  return sub_1DA66E410();
}

__n128 sub_1DA5F9740@<Q0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  __n128 *v3;
  __n128 result;
  __n128 v5;
  unint64_t v6;

  sub_1DA66BE60();
  sub_1DA66E2F0();
  swift_release();
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3A8);
  swift_storeEnumTagMultiPayload();
  v2 = type metadata accessor for AutomaticallyDownloadCellStack(0);
  v3 = (__n128 *)((char *)a1 + *(int *)(v2 + 20));
  result = v5;
  *v3 = v5;
  v3[1].n128_u64[0] = v6;
  *((_BYTE *)a1 + *(int *)(v2 + 24)) = 0;
  return result;
}

__n128 sub_1DA5F97E4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  __int128 v28;
  __n128 result;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[24];
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int16 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __n128 v42;
  char v43;
  char v44;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3B0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  sub_1DA5FD480((uint64_t)&v30 - v8);
  v10 = sub_1DA66E5B4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    goto LABEL_5;
  sub_1DA49CC94((uint64_t)v9, (uint64_t)v6, &qword_1F026D3B0);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v6, v10) != *MEMORY[0x1E0CDC158])
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
LABEL_5:
    v20 = sub_1DA66E50C();
    v21 = type metadata accessor for AutomaticallyDownloadCellStack(0);
    v22 = (__int128 *)(v2 + *(int *)(v21 + 20));
    v23 = *v22;
    v24 = *((_QWORD *)v22 + 2);
    *(_OWORD *)v34 = v23;
    *(_QWORD *)&v34[16] = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
    sub_1DA66E950();
    v25 = *(_BYTE *)(v2 + *(int *)(v21 + 24));
    *(_QWORD *)v34 = v20;
    *(_OWORD *)&v34[8] = xmmword_1DA682490;
    v35 = v39;
    v36 = v40;
    v37 = xmmword_1DA680AA0;
    LOBYTE(v38) = v25;
    HIBYTE(v38) = 1;
    goto LABEL_6;
  }
  v12 = sub_1DA66E53C();
  v13 = type metadata accessor for AutomaticallyDownloadCellStack(0);
  v14 = (__int128 *)(v2 + *(int *)(v13 + 20));
  v15 = *v14;
  v16 = *((_QWORD *)v14 + 2);
  *(_OWORD *)v34 = v15;
  *(_QWORD *)&v34[16] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
  sub_1DA66E950();
  v33 = v39;
  v17 = v40;
  v18 = sub_1DA66E644();
  v19 = *(_BYTE *)(v2 + *(int *)(v13 + 24));
  *(_QWORD *)v34 = v12;
  *(_OWORD *)&v34[8] = xmmword_1DA682490;
  v35 = v33;
  v36 = v17;
  *(_QWORD *)&v37 = 0;
  *((_QWORD *)&v37 + 1) = v18;
  v38 = v19;
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D468);
  sub_1DA4841D4(&qword_1F026D470, &qword_1F026D460, MEMORY[0x1E0CDFCC0]);
  sub_1DA4841D4(&qword_1F026D478, &qword_1F026D468, MEMORY[0x1E0CDFB10]);
  sub_1DA66E56C();
  v32 = v40;
  v33 = v39;
  v31 = v41;
  v30 = v42;
  v26 = v43;
  v27 = v44;
  sub_1DA47E2F0((uint64_t)v9, &qword_1F026D3B0);
  v28 = v32;
  *(_OWORD *)a1 = v33;
  *(_OWORD *)(a1 + 16) = v28;
  result = v30;
  *(_OWORD *)(a1 + 32) = v31;
  *(__n128 *)(a1 + 48) = result;
  *(_BYTE *)(a1 + 64) = v26;
  *(_BYTE *)(a1 + 65) = v27;
  return result;
}

uint64_t sub_1DA5F9AD8@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  _BOOL4 v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1DA66DC0C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DA66D2F4();
  v38 = v9;
  v39 = v8;
  v10 = *((_BYTE *)a1 + 24);
  v40 = *a1;
  v41 = *((_QWORD *)a1 + 2);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
  MEMORY[0x1DF09D318](&v42, v11);
  if ((*((_BYTE *)a1 + 40) & 1) != 0)
    v12 = (unsigned int *)MEMORY[0x1E0D7EC60];
  else
    v12 = (unsigned int *)MEMORY[0x1E0D7EC70];
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *v12, v4);
  v36 = (v10 & 1) == 0;
  v37 = v10 & 1;
  v13 = sub_1DA670000();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)&v40 = v13;
  *((_QWORD *)&v40 + 1) = v15;
  sub_1DA498918();
  v16 = sub_1DA66E734();
  v18 = v17;
  LOBYTE(v15) = v19 & 1;
  v20 = sub_1DA66E710();
  v22 = v21;
  v24 = v23 & 1;
  sub_1DA5251EC(v16, v18, v15);
  swift_bridgeObjectRelease();
  sub_1DA66E860();
  v25 = sub_1DA66E704();
  v27 = v26;
  LOBYTE(v15) = v28;
  v30 = v29;
  swift_release();
  sub_1DA5251EC(v20, v22, v24);
  swift_bridgeObjectRelease();
  v32 = v38;
  v31 = v39;
  *(_QWORD *)a2 = v39;
  *(_QWORD *)(a2 + 8) = v32;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = v37;
  *(_BYTE *)(a2 + 41) = v36;
  *(_QWORD *)(a2 + 48) = v25;
  *(_QWORD *)(a2 + 56) = v27;
  *(_QWORD *)(a2 + 64) = v15 & 1;
  *(_QWORD *)(a2 + 72) = v30;
  v33 = v31;
  sub_1DA525244(v31, v32, 0);
  swift_bridgeObjectRetain();
  sub_1DA5FE280(v25, v27, v15 & 1, v30);
  sub_1DA5FE2B0(v25, v27, v15 & 1, v30);
  sub_1DA5251EC(v33, v32, 0);
  return swift_bridgeObjectRelease();
}

double sub_1DA5F9D64@<D0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  double result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];

  v3 = v1[1];
  v20 = *v1;
  v21[0] = v3;
  *(_OWORD *)((char *)v21 + 9) = *(__int128 *)((char *)v1 + 25);
  sub_1DA5F9AD8(&v20, (uint64_t)&v12);
  v4 = v13;
  v5 = v14;
  v6 = v15;
  v7 = v16;
  v8 = v17;
  result = *(double *)&v12;
  v10 = v18;
  v11 = v19;
  *(_OWORD *)a1 = v12;
  *(_BYTE *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 41) = v8;
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = v11;
  return result;
}

uint64_t ShowAutoDownloadPickerLink.init(autoDownloadOption:openGlobalSettingsBlock:uuid:isSerialShow:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8;
  return result;
}

uint64_t ShowAutoDownloadPickerLink.body.getter@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  int *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[25];

  v21 = a1;
  v2 = (int *)type metadata accessor for AutoDownloadPickerView(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - v6;
  v8 = v1[1];
  v27 = *v1;
  v28 = v8;
  *(_OWORD *)v29 = v1[2];
  *(_OWORD *)&v29[9] = *(_OWORD *)((char *)v1 + 41);
  v23 = v27;
  v24 = *((_QWORD *)v1 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
  sub_1DA66E950();
  v20 = v25;
  v9 = v26;
  v11 = *(_QWORD *)&v29[8];
  v10 = *(_QWORD *)&v29[16];
  v13 = *((_QWORD *)&v28 + 1);
  v12 = *(_QWORD *)v29;
  v14 = v29[24];
  *v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
  swift_storeEnumTagMultiPayload();
  v15 = (char *)v4 + v2[6];
  LOBYTE(v23) = 0;
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66E8C0();
  v16 = *((_QWORD *)&v25 + 1);
  *v15 = v25;
  *((_QWORD *)v15 + 1) = v16;
  v17 = (char *)v4 + v2[5];
  *(_OWORD *)v17 = v20;
  *((_QWORD *)v17 + 2) = v9;
  v18 = (char *)v4 + v2[7];
  *(_QWORD *)v18 = v11;
  *((_QWORD *)v18 + 1) = v10;
  *((_QWORD *)v18 + 2) = v13;
  *((_QWORD *)v18 + 3) = v12;
  v18[32] = v14;
  sub_1DA5FB05C((uint64_t)v4, (uint64_t)v7);
  v22 = &v27;
  type metadata accessor for AutomaticallyDownloadCellStack(0);
  sub_1DA47E32C(&qword_1F026D1C8, type metadata accessor for AutomaticallyDownloadCellStack, (uint64_t)&unk_1DA682928);
  sub_1DA47E32C(&qword_1F026D1D0, type metadata accessor for AutoDownloadPickerView, (uint64_t)&protocol conformance descriptor for AutoDownloadPickerView);
  return sub_1DA66E410();
}

__n128 sub_1DA5F9FFC@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __n128 *v5;
  __n128 result;
  __n128 v7;
  unint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D160);
  sub_1DA66E950();
  LOBYTE(a1) = *(_BYTE *)(a1 + 56);
  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3A8);
  swift_storeEnumTagMultiPayload();
  v4 = type metadata accessor for AutomaticallyDownloadCellStack(0);
  v5 = (__n128 *)((char *)a2 + *(int *)(v4 + 20));
  result = v7;
  *v5 = v7;
  v5[1].n128_u64[0] = v8;
  *((_BYTE *)a2 + *(int *)(v4 + 24)) = a1;
  return result;
}

uint64_t GlobalSettingsDeepLinkState.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v7[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = v0 + OBJC_IVAR____TtC10PodcastsUI27GlobalSettingsDeepLinkState__deepLinkToAutomaticDownloadPicker;
  v7[15] = 0;
  sub_1DA66E08C();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v5, v4, v1);
  return v0;
}

uint64_t sub_1DA5FA160@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA5FA1DC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

uint64_t sub_1DA5FA24C()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA5FA2BC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

void (*sub_1DA5FA328(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DA66E0B0();
  return sub_1DA5570E0;
}

uint64_t sub_1DA5FA3A0()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E098();
  return swift_endAccess();
}

uint64_t sub_1DA5FA404(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D48);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E0A4();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1DA5FA514()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E098();
  return swift_endAccess();
}

uint64_t sub_1DA5FA574(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D48);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E0A4();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1DA5FA648(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D48);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC10PodcastsUI27GlobalSettingsDeepLinkState__deepLinkToAutomaticDownloadPicker;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E098();
  swift_endAccess();
  return sub_1DA55749C;
}

uint64_t GlobalSettingsDeepLinkState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI27GlobalSettingsDeepLinkState__deepLinkToAutomaticDownloadPicker;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t GlobalSettingsDeepLinkState.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI27GlobalSettingsDeepLinkState__deepLinkToAutomaticDownloadPicker;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DA5FA7AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for GlobalSettingsDeepLinkState(0);
  result = sub_1DA66DFC0();
  *a1 = result;
  return result;
}

BOOL GlobalSettingsDeepLinkState.Destination.init(rawValue:)()
{
  uint64_t v0;

  v0 = sub_1DA670600();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_1DA5FA82C()
{
  sub_1DA670798();
  sub_1DA66F94C();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5FA880()
{
  return sub_1DA66F94C();
}

uint64_t sub_1DA5FA89C()
{
  sub_1DA670798();
  sub_1DA66F94C();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5FA8EC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DA670600();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1DA5FA93C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000001DA689D60;
}

uint64_t sub_1DA5FA95C()
{
  return sub_1DA66E4A0();
}

uint64_t type metadata accessor for AutoDownloadPickerView(uint64_t a1)
{
  return sub_1DA48EED8(a1, (uint64_t *)&unk_1F026D248);
}

uint64_t sub_1DA5FA990()
{
  uint64_t v0;

  return sub_1DA5F5818(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1DA5FA998()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  result = qword_1F026D0F0;
  if (!qword_1F026D0F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D0E8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D0F8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D100);
    sub_1DA66E500();
    sub_1DA5FAAB4();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v6[3] = v2;
    v6[4] = MEMORY[0x1E0DEB418];
    v6[5] = OpaqueTypeConformance2;
    v6[6] = MEMORY[0x1E0DEB438];
    v4 = swift_getOpaqueTypeConformance2();
    v5 = sub_1DA5FAAF8();
    v6[0] = MEMORY[0x1E0CDDD58];
    v6[1] = v4;
    v6[2] = v5;
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFF98], v1, v6);
    atomic_store(result, (unint64_t *)&qword_1F026D0F0);
  }
  return result;
}

unint64_t sub_1DA5FAAB4()
{
  unint64_t result;

  result = qword_1F026D108;
  if (!qword_1F026D108)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for AutoDownloadPicker, &type metadata for AutoDownloadPicker);
    atomic_store(result, (unint64_t *)&qword_1F026D108);
  }
  return result;
}

unint64_t sub_1DA5FAAF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1F026D110;
  if (!qword_1F026D110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D118);
    v2[0] = sub_1DA5FAB7C();
    v2[1] = sub_1DA47E32C(&qword_1F026D140, MEMORY[0x1E0CDCFD0], MEMORY[0x1E0CDCFB8]);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1F026D110);
  }
  return result;
}

unint64_t sub_1DA5FAB7C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1F026D120;
  if (!qword_1F026D120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D128);
    v2 = sub_1DA4841D4(&qword_1F026D130, &qword_1F026D138, MEMORY[0x1E0CDCF80]);
    v3[0] = MEMORY[0x1E0CDDD58];
    v3[1] = v2;
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1F026D120);
  }
  return result;
}

uint64_t sub_1DA5FAC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DA5F6B24(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

unint64_t sub_1DA5FAC10()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1F026D168;
  if (!qword_1F026D168)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D158);
    v2 = sub_1DA5FAC74();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDF690], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1F026D168);
  }
  return result;
}

unint64_t sub_1DA5FAC74()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_1F026D170;
  if (!qword_1F026D170)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D178);
    v2 = sub_1DA4841D4(&qword_1F026D180, &qword_1F026D188, (uint64_t)&protocol conformance descriptor for AsyncSelectionConfirmingPicker<A, B, C>);
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D190);
    v3[3] = sub_1DA4841D4(&qword_1F026D198, &qword_1F026D190, (uint64_t)&unk_1DA67D938);
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDB8A0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1F026D170);
  }
  return result;
}

uint64_t sub_1DA5FAD44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;

  v5 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *(_QWORD *)v5 = v3;
  *(_QWORD *)(v5 + 8) = sub_1DA5FADE0;
  v6 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v5 + 32) = v6;
  v7 = *(_OWORD *)(v2 + 48);
  v8 = *(_OWORD *)(v2 + 64);
  v9 = *(_OWORD *)(v2 + 80);
  *(_BYTE *)(v5 + 96) = *(_BYTE *)(v2 + 96);
  *(_OWORD *)(v5 + 64) = v8;
  *(_OWORD *)(v5 + 80) = v9;
  *(_OWORD *)(v5 + 48) = v7;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 104) = v10;
  *v10 = v5;
  v10[1] = sub_1DA5F8A14;
  return sub_1DA5FD7DC(a2);
}

uint64_t sub_1DA5FADE0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_1DA5FAE38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5FAE5C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;

  v8 = *(int **)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1DA4AD77C;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t *, int *))((char *)&dword_1F026D1B0 + dword_1F026D1B0))(a1, a2, a3, v8);
}

uint64_t sub_1DA5FAEE8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DA5F8B40(a1, a2);
}

uint64_t sub_1DA5FAEF0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1DA5FAF08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA5FAF94(v2, v3);
  sub_1DA66BE60();
  sub_1DA66BE60();
  return a1;
}

uint64_t sub_1DA5FAF94(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
  {
    swift_bridgeObjectRetain();
    return sub_1DA66BE60();
  }
  return result;
}

uint64_t sub_1DA5FAFCC()
{
  uint64_t v0;

  return sub_1DA5F8C94(v0 + 16);
}

uint64_t sub_1DA5FAFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DA5F8720(a1, a2, v2 + 16);
}

uint64_t sub_1DA5FB004()
{
  return 0;
}

uint64_t sub_1DA5FB014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DA5F8820(a1, a2, v2 + 16);
}

BOOL sub_1DA5FB020(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1DA5F892C(a1, a2, v2 + 16);
}

uint64_t sub_1DA5FB02C()
{
  uint64_t v0;

  return sub_1DA5F8C94(v0 + 16);
}

double sub_1DA5FB054@<D0>(uint64_t *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1DA5F9740(a1).n128_u64[0];
  return result;
}

uint64_t sub_1DA5FB05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AutoDownloadPickerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AutomaticallyDownloadCellStack(uint64_t a1)
{
  return sub_1DA48EED8(a1, (uint64_t *)&unk_1F026D418);
}

double sub_1DA5FB0B4@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1DA5F9FFC(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_1DA5FB0C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5FB0D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5FB0E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5FB0F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5FB104()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1DA5FB118()
{
  unint64_t result;

  result = qword_1F026D1D8;
  if (!qword_1F026D1D8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for GlobalSettingsDeepLinkState.Destination, &type metadata for GlobalSettingsDeepLinkState.Destination);
    atomic_store(result, (unint64_t *)&qword_1F026D1D8);
  }
  return result;
}

unint64_t destroy for AutoDownloadPicker.PickerType(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for AutoDownloadPicker.PickerType(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    swift_bridgeObjectRetain();
    sub_1DA66BE60();
  }
  return a1;
}

uint64_t assignWithCopy for AutoDownloadPicker.PickerType(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = v6;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      swift_bridgeObjectRetain();
      sub_1DA66BE60();
      return a1;
    }
LABEL_7:
    v7 = *a2;
    v8 = a2[1];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v8;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 24) = v5;
  sub_1DA66BE60();
  swift_release();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  return a1;
}

uint64_t assignWithTake for AutoDownloadPicker.PickerType(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
LABEL_5:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
LABEL_6:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadPicker.PickerType(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AutoDownloadPicker.PickerType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1DA5FB434(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadPicker.PickerType()
{
  return &type metadata for AutoDownloadPicker.PickerType;
}

uint64_t *initializeBufferWithCopyOfBuffer for AutoDownloadPickerView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
LABEL_9:
    sub_1DA66BE60();
    return a1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1DA66E3A4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  else
  {
    *a1 = *a2;
    sub_1DA66BE60();
  }
  swift_storeEnumTagMultiPayload();
  v9 = a3[5];
  v10 = a3[6];
  v11 = (uint64_t *)((char *)a1 + v9);
  v12 = (uint64_t *)((char *)a2 + v9);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v11[2] = v12[2];
  v14 = (char *)a1 + v10;
  v15 = (char *)a2 + v10;
  *v14 = *v15;
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(uint64_t *)((char *)a2 + v16 + 8);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v19 >= 2)
  {
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v21 = *((_QWORD *)v18 + 3);
    *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 3) = v21;
    v17[32] = v18[32];
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  v17[32] = v18[32];
  return a1;
}

unint64_t destroy for AutoDownloadPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1DA66E3A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 28) + 8);
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

_QWORD *initializeWithCopy for AutoDownloadPickerView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1DA66E3A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    sub_1DA66BE60();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v7);
  v10 = (_QWORD *)((char *)a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  v12 = (char *)a1 + v8;
  v13 = (char *)a2 + v8;
  *v12 = *v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)((char *)a2 + v14 + 8);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v17 >= 2)
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v19 = *((_QWORD *)v16 + 3);
    *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
    *((_QWORD *)v15 + 3) = v19;
    v15[32] = v16[32];
    swift_bridgeObjectRetain();
    sub_1DA66BE60();
  }
  else
  {
    v18 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v18;
    v15[32] = v16[32];
  }
  return a1;
}

_QWORD *assignWithCopy for AutoDownloadPickerView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_1DA47E2F0((uint64_t)a1, &qword_1F026D0D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1DA66E3A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      sub_1DA66BE60();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  sub_1DA66BE60();
  swift_release();
  *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
  sub_1DA66BE60();
  swift_release();
  *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *v11 = *v12;
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  sub_1DA66BE60();
  swift_release();
  v13 = a3[7];
  v14 = (uint64_t)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)((char *)a1 + v13 + 8);
  v17 = *((_QWORD *)v15 + 1);
  if (v16 >= 2)
  {
    if (v17 >= 2)
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *((_QWORD *)v15 + 3);
      *(_QWORD *)(v14 + 16) = *((_QWORD *)v15 + 2);
      *(_QWORD *)(v14 + 24) = v23;
      sub_1DA66BE60();
      swift_release();
      v20 = v15[32];
    }
    else
    {
      sub_1DA47E2F0(v14, &qword_1F026D1E0);
      v20 = v15[32];
      v21 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v21;
    }
    *(_BYTE *)(v14 + 32) = v20;
  }
  else if (v17 >= 2)
  {
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
    v22 = *((_QWORD *)v15 + 3);
    *(_QWORD *)(v14 + 16) = *((_QWORD *)v15 + 2);
    *(_QWORD *)(v14 + 24) = v22;
    *(_BYTE *)(v14 + 32) = v15[32];
    swift_bridgeObjectRetain();
    sub_1DA66BE60();
  }
  else
  {
    v18 = *(_OWORD *)v15;
    v19 = *((_OWORD *)v15 + 1);
    *(_BYTE *)(v14 + 32) = v15[32];
    *(_OWORD *)v14 = v18;
    *(_OWORD *)(v14 + 16) = v19;
  }
  return a1;
}

char *initializeWithTake for AutoDownloadPickerView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1DA66E3A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *(_OWORD *)v11;
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  *(_OWORD *)v10 = v12;
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  v14[32] = v15[32];
  return a1;
}

char *assignWithTake for AutoDownloadPickerView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  __int128 v18;

  if (a1 != a2)
  {
    sub_1DA47E2F0((uint64_t)a1, &qword_1F026D0D0);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1DA66E3A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_release();
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release();
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *v12 = *v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_release();
  v14 = a3[7];
  v15 = (uint64_t)&a1[v14];
  v16 = &a2[v14];
  if (*(_QWORD *)&a1[v14 + 8] >= 2uLL)
  {
    v17 = *((_QWORD *)v16 + 1);
    if (v17 >= 2)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v17;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v15 + 16) = *((_OWORD *)v16 + 1);
      swift_release();
      goto LABEL_10;
    }
    sub_1DA47E2F0(v15, &qword_1F026D1E0);
  }
  v18 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
LABEL_10:
  *(_BYTE *)(v15 + 32) = v16[32];
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadPickerView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5FBC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1F026D1E8);
}

uint64_t storeEnumTagSinglePayload for AutoDownloadPickerView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5FBC64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1F026D1E8);
}

void sub_1DA5FBC70()
{
  unint64_t v0;

  sub_1DA5FBCF4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1DA5FBCF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F026D258[0])
  {
    sub_1DA66E3A4();
    v0 = sub_1DA66E35C();
    if (!v1)
      atomic_store(v0, qword_1F026D258);
  }
}

uint64_t sub_1DA5FBD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  sub_1DA66BE60();
  sub_1DA66BE60();
  return a1;
}

uint64_t assignWithCopy for DownloadPickerLoadingOverlay(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1DA66BE60();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for DownloadPickerLoadingOverlay(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadPickerLoadingOverlay(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadPickerLoadingOverlay(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadPickerLoadingOverlay()
{
  return &type metadata for DownloadPickerLoadingOverlay;
}

uint64_t destroy for AutoDownloadPicker(uint64_t a1)
{
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 32) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AutoDownloadPicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v5 >= 2)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1DA66BE60();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  }
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  sub_1DA66BE60();
  sub_1DA66BE60();
  return a1;
}

uint64_t assignWithCopy for AutoDownloadPicker(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >= 2uLL)
  {
    if (v6 >= 2)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v12;
      sub_1DA66BE60();
      swift_release();
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    }
    else
    {
      sub_1DA47E2F0(a1 + 24, &qword_1F026D1E0);
      v9 = *(_BYTE *)(a2 + 56);
      v10 = *(_OWORD *)(a2 + 40);
      *v4 = *v5;
      *(_OWORD *)(a1 + 40) = v10;
      *(_BYTE *)(a1 + 56) = v9;
    }
  }
  else if (v6 >= 2)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v11;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1DA66BE60();
  }
  else
  {
    v7 = *v5;
    v8 = *(_OWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *v4 = v7;
    *(_OWORD *)(a1 + 40) = v8;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1DA66BE60();
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AutoDownloadPicker(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 32) >= 2uLL)
  {
    v4 = *(_QWORD *)(a2 + 32);
    if (v4 >= 2)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v4;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      swift_release();
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      goto LABEL_6;
    }
    sub_1DA47E2F0(a1 + 24, &qword_1F026D1E0);
  }
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
LABEL_6:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadPicker(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoDownloadPicker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadPicker()
{
  return &type metadata for AutoDownloadPicker;
}

ValueMetadata *type metadata accessor for GlobalSettingsAutoDownloadPickerLink()
{
  return &type metadata for GlobalSettingsAutoDownloadPickerLink;
}

uint64_t destroy for ShowAutoDownloadPickerLink()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShowAutoDownloadPickerLink(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShowAutoDownloadPickerLink(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ShowAutoDownloadPickerLink(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowAutoDownloadPickerLink(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShowAutoDownloadPickerLink(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowAutoDownloadPickerLink()
{
  return &type metadata for ShowAutoDownloadPickerLink;
}

uint64_t sub_1DA5FC57C()
{
  return type metadata accessor for GlobalSettingsDeepLinkState(0);
}

uint64_t type metadata accessor for GlobalSettingsDeepLinkState(uint64_t a1)
{
  return sub_1DA48EED8(a1, qword_1F026D2B8);
}

uint64_t method lookup function for GlobalSettingsDeepLinkState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.deepLinkToAutomaticDownloadPicker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.deepLinkToAutomaticDownloadPicker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.deepLinkToAutomaticDownloadPicker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.$deepLinkToAutomaticDownloadPicker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.$deepLinkToAutomaticDownloadPicker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.$deepLinkToAutomaticDownloadPicker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t storeEnumTagSinglePayload for GlobalSettingsDeepLinkState.Destination(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA5FC634 + 4 * byte_1DA6824A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA5FC654 + 4 * byte_1DA6824A5[v4]))();
}

_BYTE *sub_1DA5FC634(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA5FC654(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5FC65C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5FC664(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5FC66C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5FC674(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GlobalSettingsDeepLinkState.Destination()
{
  return &type metadata for GlobalSettingsDeepLinkState.Destination;
}

unint64_t sub_1DA5FC694()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1F026D370;
  if (!qword_1F026D370)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D150);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D0D8);
    v2[3] = sub_1DA4841D4(&qword_1F026D148, &qword_1F026D0D8, MEMORY[0x1E0CDD950]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1DA4841D4(&qword_1F026D378, &qword_1F026D380, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1F026D370);
  }
  return result;
}

uint64_t sub_1DA5FC760()
{
  return sub_1DA4841D4(&qword_1F026D388, &qword_1F026D390, MEMORY[0x1E0CD9318]);
}

uint64_t sub_1DA5FC78C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D158);
  sub_1DA5FAC10();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5FC7EC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D190);
  sub_1DA4841D4(&qword_1F026D198, &qword_1F026D190, (uint64_t)&unk_1DA67D938);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5FC850()
{
  return sub_1DA4841D4(&qword_1F026D180, &qword_1F026D188, (uint64_t)&protocol conformance descriptor for AsyncSelectionConfirmingPicker<A, B, C>);
}

uint64_t sub_1DA5FC87C()
{
  return sub_1DA4841D4(&qword_1F026D398, &qword_1F026D3A0, MEMORY[0x1E0CD9468]);
}

uint64_t *sub_1DA5FC8A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1DA66E5B4();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3B0);
        memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      }
    }
    else
    {
      *v4 = *a2;
      sub_1DA66BE60();
    }
    swift_storeEnumTagMultiPayload();
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)v4 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v13[2] = v14[2];
    *((_BYTE *)v4 + v12) = *((_BYTE *)a2 + v12);
    sub_1DA66BE60();
  }
  sub_1DA66BE60();
  return v4;
}

uint64_t sub_1DA5FCA00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1DA66E5B4();
    v3 = *(_QWORD *)(v2 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_release();
}

_QWORD *sub_1DA5FCAA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1DA66E5B4();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    sub_1DA66BE60();
  }
  swift_storeEnumTagMultiPayload();
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v9);
  v12 = (_QWORD *)((char *)a2 + v9);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v11[2] = v12[2];
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  sub_1DA66BE60();
  sub_1DA66BE60();
  return a1;
}

_QWORD *sub_1DA5FCBD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  if (a1 != a2)
  {
    sub_1DA47E2F0((uint64_t)a1, &qword_1F026D3A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1DA66E5B4();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      sub_1DA66BE60();
    }
    swift_storeEnumTagMultiPayload();
  }
  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
  sub_1DA66BE60();
  swift_release();
  *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
  sub_1DA66BE60();
  swift_release();
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_1DA5FCD38(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1DA66E5B4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v10 = *(int *)(a3 + 20);
  v11 = *(int *)(a3 + 24);
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  a1[v11] = a2[v11];
  return a1;
}

char *sub_1DA5FCE58(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  if (a1 != a2)
  {
    sub_1DA47E2F0((uint64_t)a1, &qword_1F026D3A8);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1DA66E5B4();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  swift_release();
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  swift_release();
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1DA5FCFAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5FCFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, qword_1F026D3B8);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_1DA5FD044()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5FD050(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, qword_1F026D3B8);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result;
  uint64_t v10;

  result = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_1DA5FD0D8()
{
  unint64_t v0;

  sub_1DA5FD154();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1DA5FD154()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F026D428[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D3B0);
    v0 = sub_1DA66E35C();
    if (!v1)
      atomic_store(v0, qword_1F026D428);
  }
}

uint64_t sub_1DA5FD1AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5FD1BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3B0);
  MEMORY[0x1E0C80A78](v2);
  sub_1DA49CC94(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1F026D3B0);
  return sub_1DA66E47C();
}

uint64_t sub_1DA5FD23C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v2 = v1;
  v4 = sub_1DA66E4D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA49CC94(v2, (uint64_t)v10, &qword_1F026D0D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_1DA66E3A4();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = sub_1DA66FDB4();
    v14 = sub_1DA66E5F0();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19[1] = a1;
      v18 = v17;
      v20 = v17;
      *(_DWORD *)v16 = 136315138;
      v19[2] = sub_1DA49AD00(0x417373696D736944, 0xED00006E6F697463, &v20);
      sub_1DA6702C4();
      _os_log_impl(&dword_1DA478000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v18, -1, -1);
      MEMORY[0x1DF0A0474](v16, -1, -1);
    }

    sub_1DA66E4C4();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1DA5FD480@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_1DA66E4D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D3A8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA49CC94(v2, (uint64_t)v10, &qword_1F026D3A8);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_1DA4A686C((uint64_t)v10, a1, &qword_1F026D3B0);
  v12 = sub_1DA66FDB4();
  v13 = sub_1DA66E5F0();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_1DA49AD00(0xD000000000000020, 0x80000001DA6909D0, &v19);
    sub_1DA6702C4();
    _os_log_impl(&dword_1DA478000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v17, -1, -1);
    MEMORY[0x1DF0A0474](v15, -1, -1);
  }

  sub_1DA66E4C4();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DA5FD6B4()
{
  return sub_1DA66E470();
}

uint64_t sub_1DA5FD6DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA5F8E94(v1 + 16, a1);
}

unint64_t sub_1DA5FD6F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F026D498;
  if (!qword_1F026D498)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D480);
    v2 = MEMORY[0x1E0CDDD58];
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFEE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1F026D498);
  }
  return result;
}

uint64_t sub_1DA5FD750(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t objectdestroy_2Tm_4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 48) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5FD7DC(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = sub_1DA66DEF4();
  *(_QWORD *)(v2 + 104) = v4;
  *(_QWORD *)(v2 + 112) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 120) = swift_task_alloc();
  v13 = v1[1];
  v14 = *v1;
  v12 = v1[2];
  v5 = *((_QWORD *)v1 + 6);
  v6 = *((_BYTE *)v1 + 56);
  v7 = *((_QWORD *)v1 + 8);
  v8 = *((_QWORD *)v1 + 9);
  v9 = *((_BYTE *)v1 + 80);
  *(_QWORD *)(v2 + 128) = sub_1DA66FB68();
  *(_QWORD *)(v2 + 136) = sub_1DA66FB5C();
  *(_OWORD *)(v2 + 16) = v14;
  *(_OWORD *)(v2 + 32) = v13;
  *(_OWORD *)(v2 + 48) = v12;
  *(_QWORD *)(v2 + 64) = v5;
  *(_BYTE *)(v2 + 72) = v6;
  *(_QWORD *)(v2 + 80) = v7;
  *(_QWORD *)(v2 + 88) = v8;
  *(_BYTE *)(v2 + 96) = v9;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 144) = v10;
  *v10 = v2;
  v10[1] = sub_1DA5FD8CC;
  return sub_1DA5F8FE8(a1);
}

uint64_t sub_1DA5FD8CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = v1;
  swift_task_dealloc();
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA5FD968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 152);
  swift_release();
  if (!v1)
    goto LABEL_4;
  v2 = *(_QWORD *)(v0 + 152);
  if (v2 < 0)
  {
    __break(1u);
LABEL_4:
    v2 = 0;
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, BOOL))(v0 + 8))(v2, v1 == 0);
}

uint64_t sub_1DA5FD9C8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  sub_1DA66DEC4();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FDA8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1DA478000, v1, v2, "Failed to calculate the number of episodes impacted, skipping confirmation.", v3, 2u);
    MEMORY[0x1DF0A0474](v3, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 104);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(0, 1);
}

uint64_t sub_1DA5FDAA8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA66E440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA5FDAE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA66E488();
  *a1 = result;
  return result;
}

uint64_t sub_1DA5FDB0C()
{
  return sub_1DA66E494();
}

uint64_t sub_1DA5FDB30(uint64_t a1)
{
  sub_1DA525244(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  return a1;
}

uint64_t sub_1DA5FDB7C(uint64_t a1)
{
  sub_1DA5251EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DA5FDBC8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0CDDCD8] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t sub_1DA5FDC04(uint64_t a1)
{
  sub_1DA525244(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_1DA5FDC34(uint64_t a1)
{
  sub_1DA66BE60();
  return a1;
}

uint64_t sub_1DA5FDC5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA5F5D28(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1DA5FDC68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AutoDownloadPickerView(0) - 8) + 80);
  return sub_1DA5F6198(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1DA5FDCB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DA5FDCE0()
{
  uint64_t v0;

  return sub_1DA5F63B8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1DA5FDCEC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DA5FDD10()
{
  sub_1DA5F6684();
}

uint64_t sub_1DA5FDD1C()
{
  return sub_1DA66E4AC();
}

uint64_t objectdestroy_72Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for AutoDownloadPickerView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D0D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1DA66E3A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + v3 + *(int *)(v1 + 28) + 8) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DA5FDE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AutoDownloadPickerView(0) - 8) + 80);
  return sub_1DA5F6780(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1DA5FDE84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AutoDownloadPickerView(0) - 8) + 80);
  return sub_1DA5F67F4(v0 + ((v1 + 16) & ~v1));
}

void sub_1DA5FDEB0()
{
  sub_1DA66C16C();
  __break(1u);
}

unint64_t sub_1DA5FDECC()
{
  unint64_t result;

  result = qword_1F026D578;
  if (!qword_1F026D578)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CAED98], MEMORY[0x1E0CAEDA8]);
    atomic_store(result, (unint64_t *)&qword_1F026D578);
  }
  return result;
}

void sub_1DA5FDF10()
{
  sub_1DA5FDECC();
  sub_1DA66C1E4();
  __break(1u);
}

uint64_t sub_1DA5FDF34()
{
  return 8;
}

uint64_t sub_1DA5FDF40()
{
  return swift_release();
}

uint64_t sub_1DA5FDF48(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return sub_1DA66BE60();
}

uint64_t sub_1DA5FDF58()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D588);
  return sub_1DA66F808();
}

_QWORD *sub_1DA5FDF9C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t destroy for AutomaticallyDownloadCellContent()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AutomaticallyDownloadCellContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  return a1;
}

uint64_t assignWithCopy for AutomaticallyDownloadCellContent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_1DA66BE60();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for AutomaticallyDownloadCellContent(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutomaticallyDownloadCellContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutomaticallyDownloadCellContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomaticallyDownloadCellContent()
{
  return &type metadata for AutomaticallyDownloadCellContent;
}

unint64_t sub_1DA5FE1D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1F026D590;
  if (!qword_1F026D590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D598);
    v2[0] = sub_1DA4841D4(&qword_1F026D470, &qword_1F026D460, MEMORY[0x1E0CDFCC0]);
    v2[1] = sub_1DA4841D4(&qword_1F026D478, &qword_1F026D468, MEMORY[0x1E0CDFB10]);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1F026D590);
  }
  return result;
}

uint64_t sub_1DA5FE270()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5FE280(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1DA525244(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DA5FE2B0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1DA5251EC(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DA5FE2E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F026D5A0;
  if (!qword_1F026D5A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026D5A8);
    v2 = sub_1DA4841D4(&qword_1F026D5B0, &qword_1F026D5B8, MEMORY[0x1E0CE0680]);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDF690], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1F026D5A0);
  }
  return result;
}

id MPModelObject.uuid.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(v0, sel_identifiers);
  v2 = objc_msgSend(v1, sel_library);

  if (v2)
  {
    v3 = objc_msgSend(v2, sel_databaseID);
    swift_unknownObjectRelease();
    v2 = (id)sub_1DA66F8BC();

  }
  return v2;
}

uint64_t MPModelObject.adamID.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_identifiers);
  v2 = objc_msgSend(v1, sel_universalStore);

  if (!v2)
    return 0;
  objc_msgSend(v2, sel_adamID);
  swift_unknownObjectRelease();
  return sub_1DA66DCE4();
}

uint64_t sub_1DA5FE49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1DA658DEC(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  _DWORD v28[4];
  uint64_t v29;
  int v30;
  uint64_t v31;
  _BYTE v32[40];

  v31 = a6;
  v28[3] = a5;
  v30 = a3;
  v29 = a8;
  v16 = sub_1DA66D5C4();
  MEMORY[0x1E0C80A78](v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1DA66D1F8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v24);
  sub_1DA5FE724(a1, (uint64_t)v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66C9F4();
  v26 = (unsigned int *)MEMORY[0x1E0D7E1D0];
  if ((a2 & 1) != 0)
    v26 = (unsigned int *)MEMORY[0x1E0D7E1C8];
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *v26, v20);
  CGSize.fitting(_:aspectRule:)((uint64_t)v23, a9, a10);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_1DA49CC94(a4, (uint64_t)v19, &qword_1EDAE53D8);
  sub_1DA66D5AC();
  sub_1DA49CC94(a7, (uint64_t)v32, &qword_1EDAE5310);
  sub_1DA66CE5C();
  sub_1DA47E2F0(a7, &qword_1EDAE5310);
  sub_1DA47E2F0(a4, &qword_1EDAE53D8);
  return sub_1DA4E8990(a1);
}

uint64_t sub_1DA5FE724(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66CA0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  _BYTE v31[40];

  v30 = a6;
  v27 = a8;
  v28 = a5 & 1;
  v29 = a3;
  v16 = sub_1DA66D5C4();
  MEMORY[0x1E0C80A78](v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1DA66D1F8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v24);
  sub_1DA5FE724(a1, (uint64_t)&v27 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66C9F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0D7E1D0], v20);
  CGSize.fitting(_:mode:aspectRule:)(a2, (uint64_t)v23, a9, a10);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_1DA49CC94(a4, (uint64_t)v19, &qword_1EDAE53D8);
  sub_1DA66D5AC();
  sub_1DA49CC94(a7, (uint64_t)v31, &qword_1EDAE5310);
  sub_1DA66CE5C();
  sub_1DA47E2F0(a7, &qword_1EDAE5310);
  sub_1DA47E2F0(a4, &qword_1EDAE53D8);
  return sub_1DA4E8990(a1);
}

uint64_t ArtworkRequest.artworkLoaderConfig.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;

  v1 = v0;
  v2 = sub_1DA66C928();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x1E0C80A78](v2);
  v43 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66CEBC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1DA66DD14();
  v10 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v52 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v43 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint64_t *)((char *)&v43 - v19);
  sub_1DA66CE68();
  v21 = v20[1];
  v49 = *v20;
  v50 = v21;
  swift_bridgeObjectRetain();
  sub_1DA4E8990((uint64_t)v20);
  sub_1DA66CDC0();
  v23 = v22;
  v25 = v24;
  sub_1DA66CDD8();
  v27 = v26;
  sub_1DA66CE68();
  v48 = v17[*(int *)(v12 + 52)];
  sub_1DA4E8990((uint64_t)v17);
  sub_1DA66CDFC();
  v28 = v47;
  v29 = v5;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v51 = v4;
  v31 = v4;
  v32 = v46;
  v30(v47, v1, v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v32) == 1)
  {
    v33 = v28;
    sub_1DA66CE68();
    v34 = &v14[*(int *)(v12 + 44)];
    v35 = v43;
    v36 = v44;
    v37 = v45;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v43, v34, v45);
    sub_1DA4E8990((uint64_t)v14);
    v38 = v52;
    sub_1DA66C91C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v51);
    sub_1DA47E2F0((uint64_t)v9, &qword_1EDAE53D8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v51);
    v38 = v52;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v52, v9, v32);
  }
  v39 = sub_1DA66CE2C();
  type metadata accessor for ArtworkLoaderConfig();
  v40 = swift_allocObject();
  v41 = v50;
  *(_QWORD *)(v40 + 16) = v49;
  *(_QWORD *)(v40 + 24) = v41;
  *(_QWORD *)(v40 + 32) = v23;
  *(_QWORD *)(v40 + 40) = v25;
  *(_BYTE *)(v40 + 48) = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v40 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop, v38, v32);
  *(_QWORD *)(v40 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) = v27;
  *(_BYTE *)(v40 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) = v39 & 1;
  return v40;
}

uint64_t PreparedArtworkRequest.init(request:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DA66CEBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t PreparedArtworkRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66CEBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PreparedArtworkRequest.hash(into:)()
{
  sub_1DA66CEBC();
  sub_1DA47E32C(&qword_1EDAE4188, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD40]);
  return sub_1DA66F7FC();
}

uint64_t sub_1DA5FEDF4()
{
  return 0x74736575716572;
}

uint64_t sub_1DA5FEE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DA6706D8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DA5FEEA0()
{
  sub_1DA5FF000();
  return sub_1DA670810();
}

uint64_t sub_1DA5FEEC8()
{
  sub_1DA5FF000();
  return sub_1DA67081C();
}

uint64_t PreparedArtworkRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D5C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA5FF000();
  sub_1DA670804();
  sub_1DA66CEBC();
  sub_1DA47E32C((unint64_t *)&qword_1EDAE4180, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD38]);
  sub_1DA670660();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1DA5FF000()
{
  unint64_t result;

  result = qword_1F026D5C8;
  if (!qword_1F026D5C8)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA682E98, &type metadata for PreparedArtworkRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026D5C8);
  }
  return result;
}

uint64_t PreparedArtworkRequest.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA66CEBC();
  sub_1DA47E32C(&qword_1EDAE4188, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD40]);
  sub_1DA66F7FC();
  return sub_1DA6707C8();
}

uint64_t PreparedArtworkRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v15 = a2;
  v17 = sub_1DA66CEBC();
  v14 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v16 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D5D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PreparedArtworkRequest();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA5FF000();
  sub_1DA6707EC();
  if (!v2)
  {
    sub_1DA47E32C((unint64_t *)&unk_1EDAE4190, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD50]);
    sub_1DA670630();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v16, v17);
    sub_1DA5ED40C((uint64_t)v11, v15);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1DA5FF274@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PreparedArtworkRequest.init(from:)(a1, a2);
}

uint64_t sub_1DA5FF288(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D5C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA5FF000();
  sub_1DA670804();
  sub_1DA66CEBC();
  sub_1DA47E32C((unint64_t *)&qword_1EDAE4180, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD38]);
  sub_1DA670660();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1DA5FF398()
{
  sub_1DA670798();
  sub_1DA66CEBC();
  sub_1DA47E32C(&qword_1EDAE4188, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD40]);
  sub_1DA66F7FC();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5FF404()
{
  sub_1DA66CEBC();
  sub_1DA47E32C(&qword_1EDAE4188, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD40]);
  return sub_1DA66F7FC();
}

uint64_t PreparedArtworkRequest.encode(_:)(UIImage *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSData *v6;
  char *v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  uint64_t v13;

  v2 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66CE68();
  v5 = v4[*(int *)(v2 + 52)];
  sub_1DA4E8990((uint64_t)v4);
  if ((v5 - 1) < 2)
  {
    v6 = UIImageJPEGRepresentation(a1, 1.0);
    if (!v6)
    {
      sub_1DA5FF5EC();
      swift_allocError();
      v8 = 1;
LABEL_9:
      *v7 = v8;
LABEL_12:
      swift_willThrow();
      return v5;
    }
    goto LABEL_6;
  }
  if (!(_DWORD)v5)
  {
    v6 = UIImagePNGRepresentation(a1);
    if (!v6)
    {
      sub_1DA5FF5EC();
      swift_allocError();
      *v11 = 0;
      goto LABEL_12;
    }
LABEL_6:
    v5 = sub_1DA66C394();

    return v5;
  }
  v5 = (uint64_t)a1;
  v9 = UIImage.heicData(compressionQuality:)(1.0);
  if (v10 >> 60 == 15)
  {
    sub_1DA5FF5EC();
    swift_allocError();
    v8 = 2;
    goto LABEL_9;
  }
  return v9;
}

unint64_t sub_1DA5FF5EC()
{
  unint64_t result;

  result = qword_1F026D5D8;
  if (!qword_1F026D5D8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PreparedArtworkRequest.CodingError, &type metadata for PreparedArtworkRequest.CodingError);
    atomic_store(result, (unint64_t *)&qword_1F026D5D8);
  }
  return result;
}

id PreparedArtworkRequest.decode(_:)(uint64_t a1, unint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  _BYTE *v7;

  v4 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  sub_1DA498750(a1, a2);
  v5 = (void *)sub_1DA66C37C();
  v6 = objc_msgSend(v4, sel_initWithData_, v5);
  sub_1DA4986F8(a1, a2);

  if (!v6)
  {
    sub_1DA5FF5EC();
    swift_allocError();
    *v7 = 3;
    swift_willThrow();
  }
  return v6;
}

BOOL static PreparedArtworkRequest.CodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PreparedArtworkRequest.CodingError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t PreparedArtworkRequest.CodingError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t sub_1DA5FF778()
{
  unint64_t result;

  result = qword_1F026D5E0;
  if (!qword_1F026D5E0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PreparedArtworkRequest.CodingError, &type metadata for PreparedArtworkRequest.CodingError);
    atomic_store(result, (unint64_t *)&qword_1F026D5E0);
  }
  return result;
}

uint64_t sub_1DA5FF7C4(UIImage **a1)
{
  return PreparedArtworkRequest.encode(_:)(*a1);
}

void sub_1DA5FF7DC(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  void *v7;
  id v8;
  _BYTE *v9;

  v6 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  sub_1DA498750(a1, a2);
  v7 = (void *)sub_1DA66C37C();
  v8 = objc_msgSend(v6, sel_initWithData_, v7);
  sub_1DA4986F8(a1, a2);

  if (v8)
  {
    *a3 = v8;
  }
  else
  {
    sub_1DA5FF5EC();
    swift_allocError();
    *v9 = 3;
    swift_willThrow();
  }
}

uint64_t sub_1DA5FF8A8()
{
  return _s10PodcastsUI22PreparedArtworkRequestV4with6formatAC0A10Foundation0D6FormatO_tF_0();
}

uint64_t initializeBufferWithCopyOfBuffer for PreparedArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66CEBC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t assignWithCopy for PreparedArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66CEBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PreparedArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66CEBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PreparedArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66CEBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DA5FF9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66CEBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DA5FF9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66CEBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PreparedArtworkRequest.CodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DA5FFA80 + 4 * byte_1DA682B45[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DA5FFAB4 + 4 * byte_1DA682B40[v4]))();
}

uint64_t sub_1DA5FFAB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5FFABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5FFAC4);
  return result;
}

uint64_t sub_1DA5FFAD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5FFAD8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DA5FFADC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5FFAE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreparedArtworkRequest.CodingError()
{
  return &type metadata for PreparedArtworkRequest.CodingError;
}

uint64_t storeEnumTagSinglePayload for PreparedArtworkRequest.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA5FFB40 + 4 * byte_1DA682B4A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA5FFB60 + 4 * byte_1DA682B4F[v4]))();
}

_BYTE *sub_1DA5FFB40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA5FFB60(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5FFB68(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5FFB70(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5FFB78(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5FFB80(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PreparedArtworkRequest.CodingKeys()
{
  return &type metadata for PreparedArtworkRequest.CodingKeys;
}

unint64_t sub_1DA5FFBA0()
{
  unint64_t result;

  result = qword_1F026D610;
  if (!qword_1F026D610)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA682E70, &type metadata for PreparedArtworkRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026D610);
  }
  return result;
}

unint64_t sub_1DA5FFBE8()
{
  unint64_t result;

  result = qword_1F026D618;
  if (!qword_1F026D618)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA682DE0, &type metadata for PreparedArtworkRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026D618);
  }
  return result;
}

unint64_t sub_1DA5FFC30()
{
  unint64_t result;

  result = qword_1F026D620;
  if (!qword_1F026D620)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA682E08, &type metadata for PreparedArtworkRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026D620);
  }
  return result;
}

id sub_1DA5FFC74()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaLibraryStorageController()), sel_init);
  qword_1EDAE15F8 = (uint64_t)result;
  return result;
}

id static MediaLibraryStorageController.shared.getter()
{
  if (qword_1EDAE1608 != -1)
    swift_once();
  return (id)qword_1EDAE15F8;
}

uint64_t sub_1DA5FFD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1DA66FEBC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66FE80();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1DA66EA04();
  MEMORY[0x1E0C80A78](v6);
  sub_1DA486298();
  sub_1DA66E9F8();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1DA47E32C((unint64_t *)&unk_1EDADE730, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6F8);
  sub_1DA4841D4((unint64_t *)&unk_1EDADE700, &qword_1EDADE6F8, MEMORY[0x1E0DEAF38]);
  sub_1DA670378();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1DA66FEF8();
  qword_1EDAE1610 = result;
  return result;
}

uint64_t MediaLibraryStorageController.shouldDisplayStorageCleanupTip.getter()
{
  unsigned __int8 v1;

  swift_beginAccess();
  sub_1DA66BE60();
  sub_1DA66E2D8();
  swift_release();
  return v1;
}

uint64_t sub_1DA600008()
{
  char v1;

  swift_beginAccess();
  sub_1DA66BE60();
  sub_1DA66E2D8();
  swift_release();
  sub_1DA66BE60();
  sub_1DA66E2E4();
  swift_release();
  return sub_1DA60012C(v1);
}

uint64_t sub_1DA6000B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_beginAccess();
  sub_1DA66BE60();
  sub_1DA66E2D8();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA60012C(char a1)
{
  void *v1;
  int v2;
  uint64_t result;
  id v4;
  unsigned __int8 v5;

  v2 = a1 & 1;
  swift_beginAccess();
  sub_1DA66BE60();
  sub_1DA66E2D8();
  result = swift_release();
  if (v5 != v2)
  {
    sub_1DA66BE60();
    sub_1DA66E2D8();
    swift_release();
    sub_1DA600238(v5);
    sub_1DA66BE60();
    sub_1DA66E2D8();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    v4 = v1;
    return sub_1DA66E0C8();
  }
  return result;
}

uint64_t sub_1DA600238(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void (*v6)(char *);
  char v8;

  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19D8);
  sub_1DA66CBF8();
  swift_release();
  v2 = sub_1DA66D588();
  swift_release();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = a1 & 1;
    swift_bridgeObjectRetain();
    v5 = v2 + 40;
    do
    {
      v6 = *(void (**)(char *))(v5 - 8);
      v8 = v4;
      sub_1DA66BE60();
      v6(&v8);
      swift_release();
      v5 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t MediaLibraryStorageController.$shouldDisplayStorageCleanupTip.getter()
{
  uint64_t v1;

  swift_beginAccess();
  sub_1DA66BE60();
  sub_1DA66E2F0();
  swift_release();
  return v1;
}

uint64_t MediaLibraryStorageController.shouldDisplayStorageCleanupTipPublisher.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA6003E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA600468(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_1DA66E0C8();
}

uint64_t MediaLibraryStorageController.$shouldDisplayStorageCleanupTipPublisher.getter()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E098();
  return swift_endAccess();
}

uint64_t sub_1DA600538()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E098();
  return swift_endAccess();
}

uint64_t sub_1DA60059C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D48);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E0A4();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

char *sub_1DA6006AC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t *v17;
  id v18;
  char *v19;
  id v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  objc_class *ObjectType;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;
  uint64_t v37;

  ObjectType = (objc_class *)swift_getObjectType();
  v1 = sub_1DA66FF70();
  v2 = *(_QWORD *)(v1 - 8);
  v34 = v1;
  v35 = v2;
  MEMORY[0x1E0C80A78](v1);
  v33 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR___PUIMediaLibraryStorageController__storageCleanupObservers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19D8);
  swift_allocObject();
  v9 = v0;
  v37 = sub_1DA66D5A0();
  *(_QWORD *)&v0[v8] = sub_1DA66CBEC();
  v10 = OBJC_IVAR___PUIMediaLibraryStorageController__globalAutomaticDownloadLimit;
  sub_1DA66FFAC();
  sub_1DA670030();
  v31 = *MEMORY[0x1E0D7F368];
  sub_1DA66F8BC();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel__applePodcastsFoundationSettingsUserDefaults);
  *(_QWORD *)&v9[v10] = sub_1DA66E2CC();
  *(_QWORD *)&v9[OBJC_IVAR___PUIMediaLibraryStorageController_activeObserver] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___PUIMediaLibraryStorageController_globalDownloadLimitObserver] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___PUIMediaLibraryStorageController_downloadedAssetsAsPercentageOfTotalSpace] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___PUIMediaLibraryStorageController_totalConsumedSpace] = 0;
  v13 = OBJC_IVAR___PUIMediaLibraryStorageController__ignoredAssetsAsPercentageOfTotalSpace;
  sub_1DA66F8BC();
  v14 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  *(_QWORD *)&v9[v13] = sub_1DA66E308();
  v15 = OBJC_IVAR___PUIMediaLibraryStorageController__ignoredConsumedSpaceQuantity;
  sub_1DA66F8BC();
  v16 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  *(_QWORD *)&v9[v15] = sub_1DA66E314();
  v17 = (uint64_t *)&v9[OBJC_IVAR___PUIMediaLibraryStorageController__shouldDisplayStorageCleanupTip];
  sub_1DA66F8BC();
  v18 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  *v17 = sub_1DA66E2C0();
  v19 = &v9[OBJC_IVAR___PUIMediaLibraryStorageController__shouldDisplayStorageCleanupTipPublisher];
  LOBYTE(v37) = 0;
  sub_1DA66E08C();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v19, v7, v4);
  swift_beginAccess();
  swift_release();
  sub_1DA66F8BC();
  v20 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  *v17 = sub_1DA66E2C0();
  swift_endAccess();

  v36.receiver = v9;
  v36.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v36, sel_init);
  v22 = objc_msgSend(v11, sel__applePodcastsFoundationSettingsUserDefaults);
  sub_1DA66F8BC();
  v23 = sub_1DA66FDCC();

  swift_bridgeObjectRelease();
  v37 = v23;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C60);
  sub_1DA4841D4(&qword_1EDAE1C58, (uint64_t *)&unk_1EDAE1C60, MEMORY[0x1E0C95D90]);
  v24 = sub_1DA66E284();
  swift_release();
  swift_release();
  *(_QWORD *)&v21[OBJC_IVAR___PUIMediaLibraryStorageController_globalDownloadLimitObserver] = v24;
  swift_release();
  v25 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v26 = (id)*MEMORY[0x1E0DC4860];
  v27 = v33;
  sub_1DA66FF64();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DA47E32C((unint64_t *)&qword_1EDADEBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  v28 = v34;
  v29 = sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v28);
  *(_QWORD *)&v21[OBJC_IVAR___PUIMediaLibraryStorageController_activeObserver] = v29;
  swift_release();
  MediaLibraryStorageController.refreshDownloadedAssets()();
  sub_1DA600CF0((uint64_t)sub_1DA601A60, (uint64_t)&block_descriptor_17_0);

  return v21;
}

void sub_1DA600BD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0A054C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1DA66BE60();
    sub_1DA66E2D8();
    swift_release();
    if (v6 != v2)
      sub_1DA600CF0((uint64_t)sub_1DA601A60, (uint64_t)&block_descriptor_17_0);

  }
}

void sub_1DA600C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1DF0A054C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1DA600CF0((uint64_t)sub_1DA601A60, (uint64_t)&block_descriptor_17_0);

  }
}

Swift::Void __swiftcall MediaLibraryStorageController.refreshDownloadedAssets()()
{
  sub_1DA600CF0((uint64_t)sub_1DA60159C, (uint64_t)&block_descriptor_25);
}

uint64_t sub_1DA600CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v4 = sub_1DA66E9C8();
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66EA04();
  v7 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDADEE10 != -1)
    swift_once();
  v10 = (void *)qword_1EDAE1610;
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA4A9194;
  aBlock[3] = a2;
  v12 = _Block_copy(aBlock);
  v13 = v10;
  sub_1DA66BE60();
  sub_1DA66E9EC();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1DA47E32C((unint64_t *)&qword_1EDADE6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA4841D4((unint64_t *)&qword_1EDADE6F0, (uint64_t *)&unk_1EDADE6E0, MEMORY[0x1E0DEAF38]);
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v9, v6, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_1DA600F20()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

id MediaLibraryStorageController.__deallocating_deinit()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  if (*(_QWORD *)&v0[OBJC_IVAR___PUIMediaLibraryStorageController_globalDownloadLimitObserver])
  {
    sub_1DA66BE60();
    sub_1DA66DF9C();
    swift_release();
  }
  if (*(_QWORD *)&v0[OBJC_IVAR___PUIMediaLibraryStorageController_activeObserver])
  {
    sub_1DA66BE60();
    sub_1DA66DF9C();
    swift_release();
  }
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19D8);
  sub_1DA66CC04();
  swift_release();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1DA601038()
{
  return sub_1DA66D594();
}

uint64_t MediaLibraryStorageController.observeStorageCleanupChange(_:)()
{
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19D8);
  sub_1DA66CC04();
  swift_release();
  return 0;
}

uint64_t sub_1DA6011A4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  sub_1DA66BE60();
  v8 = sub_1DA66D570();
  result = swift_release();
  *a2 = v8;
  return result;
}

Swift::Void __swiftcall MediaLibraryStorageController.removeStorageCleanupChangeObserver(with:)(Swift::Int64 with)
{
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19D8);
  sub_1DA66CC04();
  swift_release();
}

Swift::Void __swiftcall MediaLibraryStorageController.mediaLibraryDidChange()()
{
  MediaLibraryStorageController.refreshDownloadedAssets()();
  sub_1DA600CF0((uint64_t)sub_1DA602300, (uint64_t)&block_descriptor_31_0);
}

void sub_1DA601434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  char v13;
  char v14;
  double v15;
  id v16;
  uint64_t v17;

  v2 = sub_1DA66C358();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v6 = MEMORY[0x1DF0A054C](a1 + 16);
  if (v6)
  {
    v7 = (char *)v6;
    v8 = objc_msgSend((id)objc_opt_self(), sel_defaultMediaLibrary);
    v9 = objc_msgSend(v8, sel_databasePath);
    if (v9)
    {
      v10 = v9;
      sub_1DA66F8BC();

      sub_1DA66C2B0();
      swift_bridgeObjectRelease();
      v11 = _sSo14MPMediaLibraryC10PodcastsUIE05totalC14AssetsFileSizeSivg_0();
      v12 = sub_1DA66C268();
      v14 = v13;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v15 = 0.0;
      if ((v14 & 1) == 0)
        v15 = (double)(uint64_t)v11 / (double)v12;
      *(double *)&v7[OBJC_IVAR___PUIMediaLibraryStorageController_downloadedAssetsAsPercentageOfTotalSpace] = v15;
      v16 = _sSo14MPMediaLibraryC10PodcastsUIE05totalC14AssetsFileSizeSivg_0();

      *(_QWORD *)&v7[OBJC_IVAR___PUIMediaLibraryStorageController_totalConsumedSpace] = v16;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1DA60159C()
{
  uint64_t v0;

  sub_1DA601434(v0);
}

uint64_t sub_1DA6015A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA6011A4(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1DA6015B0()
{
  return sub_1DA66D57C();
}

Swift::Void __swiftcall MediaLibraryStorageController.ignoreStorageCleanupPrompt()()
{
  char v0;

  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2008);
  sub_1DA66E2E4();
  swift_release();
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4BB8);
  sub_1DA66E2E4();
  swift_release();
  swift_beginAccess();
  sub_1DA66BE60();
  sub_1DA66E2D8();
  swift_release();
  sub_1DA66BE60();
  sub_1DA66E2E4();
  swift_release();
  sub_1DA60012C(v0);
}

uint64_t sub_1DA60174C()
{
  return sub_1DA600008();
}

uint64_t sub_1DA601778()
{
  return type metadata accessor for MediaLibraryStorageController();
}

uint64_t type metadata accessor for MediaLibraryStorageController()
{
  uint64_t result;

  result = qword_1EDAE1618;
  if (!qword_1EDAE1618)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DA6017F0()
{
  unint64_t v0;

  sub_1DA4A9F5C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1DA601890()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DA6018B4(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

void sub_1DA6018C8(uint64_t *a1)
{
  uint64_t v1;

  sub_1DA600BD8(a1, v1);
}

void sub_1DA6018D0(uint64_t a1)
{
  uint64_t v1;

  sub_1DA600C7C(a1, v1);
}

void sub_1DA6018D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  double v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1DF0A054C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(double *)(v2 + OBJC_IVAR___PUIMediaLibraryStorageController_downloadedAssetsAsPercentageOfTotalSpace);
    v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain_n();
    sub_1DA66BE60();
    sub_1DA66E2D8();
    swift_release();
    if (v9)
    {
      swift_beginAccess();
      v6 = (id)MEMORY[0x1DF0A054C](v5 + 16);

      swift_release_n();
    }
    else
    {
      v7 = sub_1DA66FFAC();
      v8 = objc_msgSend((id)objc_opt_self(), sel_defaultMediaLibrary);
      sub_1DA66BE60();
      v6 = v3;
      sub_1DA663A44(v7, v8, (uint64_t)sub_1DA601BB8, v5, v7, v6, 0, 1, v4);

      swift_release_n();
    }

  }
}

void sub_1DA601A60()
{
  uint64_t v0;

  sub_1DA6018D8(v0);
}

void sub_1DA601A68(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0A054C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if ((a1 & 1) != 0)
    {
      swift_beginAccess();
      sub_1DA66BE60();
      sub_1DA66E2D8();
      swift_release();
      if ((v6 & 1) == 0)
      {
        sub_1DA66BE60();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2008);
        sub_1DA66E2E4();
        swift_release();
        sub_1DA66BE60();
        sub_1DA66E2D8();
        swift_release();
        sub_1DA66BE60();
        sub_1DA66E2E4();
        swift_release();
        sub_1DA60012C(0);
      }
    }

  }
}

void sub_1DA601BB8(char a1)
{
  uint64_t v1;

  sub_1DA601A68(a1, v1);
}

void sub_1DA601BC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  char v11;
  uint64_t v12;
  char v13;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1DF0A054C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(double *)(v2 + OBJC_IVAR___PUIMediaLibraryStorageController_downloadedAssetsAsPercentageOfTotalSpace);
    sub_1DA66BE60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2008);
    sub_1DA66E2D8();
    swift_release();
    v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain_n();
    sub_1DA66BE60();
    sub_1DA66E2D8();
    swift_release();
    if (v12)
    {
      swift_beginAccess();
      v6 = MEMORY[0x1DF0A054C](v5 + 16);
      if (v6)
      {
        v7 = (void *)v6;
        swift_beginAccess();
        sub_1DA66BE60();
        sub_1DA66E2D8();
        swift_release();
        if ((v11 & 1) != 0)
        {
          sub_1DA66BE60();
          sub_1DA66E2D8();
          swift_release();
          sub_1DA66BE60();
          sub_1DA66E2E4();
          swift_release();
          sub_1DA60012C(v11);
        }
        swift_release_n();

      }
      else
      {
        swift_release_n();
      }

      swift_release();
    }
    else
    {
      v8 = sub_1DA66FFAC();
      v9 = objc_msgSend((id)objc_opt_self(), sel_defaultMediaLibrary);
      sub_1DA66BE60();
      v10 = v3;
      sub_1DA663A44(v8, v9, (uint64_t)sub_1DA602308, v5, v8, v10, 0, v13, v4);

      swift_release_n();
    }
  }
}

void sub_1DA601E50(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0A054C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    swift_beginAccess();
    sub_1DA66BE60();
    sub_1DA66E2D8();
    swift_release();
    if (v6 != (a1 & 1))
    {
      sub_1DA66BE60();
      sub_1DA66E2D8();
      swift_release();
      sub_1DA66BE60();
      sub_1DA66E2E4();
      swift_release();
      sub_1DA60012C(v6);
    }

  }
}

uint64_t sub_1DA601F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, char a8)
{
  return sub_1DA602188(a1, a2, a3, a5, a4, a7, a8 & 1);
}

uint64_t sub_1DA601F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v6 = sub_1DA66E9C8();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DA66EA04();
  v10 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA486298();
  v13 = (void *)sub_1DA66FEC8();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_1DA6022A0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA4A9194;
  aBlock[3] = &block_descriptor_24_0;
  v15 = _Block_copy(aBlock);
  sub_1DA66BE60();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66E9EC();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DA47E32C((unint64_t *)&qword_1EDADE6D0, v7, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA4841D4((unint64_t *)&qword_1EDADE6F0, (uint64_t *)&unk_1EDADE6E0, MEMORY[0x1E0DEAF38]);
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
}

uint64_t sub_1DA602188(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v13;
  char v14;

  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = 1;
  if (a1 < 500000001 || sub_1DA66FFE8() < 1)
    goto LABEL_7;
  if ((a7 & 1) != 0)
  {
    if (a4 >= 0.15)
      goto LABEL_5;
LABEL_7:
    v14 = 0;
    goto LABEL_8;
  }
  if (*(double *)&a6 + 0.15 > a4)
    goto LABEL_7;
LABEL_5:
  v14 = 1;
LABEL_8:
  *(_BYTE *)(v13 + 16) = v14;
  sub_1DA601F6C(a2, a3, v13);
  return swift_release();
}

uint64_t sub_1DA602274()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA6022A0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  swift_beginAccess();
  return v1(*(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_1DA6022F0()
{
  return swift_deallocObject();
}

void sub_1DA602300()
{
  uint64_t v0;

  sub_1DA601BC0(v0);
}

void sub_1DA602308(char a1)
{
  uint64_t v1;

  sub_1DA601E50(a1, v1);
}

uint64_t sub_1DA602310()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA602334(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t UIColor.RGBAInterpolator.floatInterpolator.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  sub_1DA66BE60();
  return v1;
}

__n128 UIColor.RGBAInterpolator.init(value1:value2:floatInterpolator:)@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __n128 result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;
  __int128 v35;
  _QWORD v36[5];
  _QWORD v37[5];
  _QWORD v38[5];
  _OWORD v39[2];
  _BYTE v40[40];
  _BYTE v41[40];
  _BYTE v42[40];
  _BYTE v43[48];

  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_traitCollectionWithUserInterfaceStyle_, 1);
  v11 = objc_msgSend(v9, sel_traitCollectionWithUserInterfaceStyle_, 2);
  v12 = objc_msgSend(a1, sel_resolvedColorWithTraitCollection_, v10);
  UIColor.rgbaComponents.getter((uint64_t)v36);
  v13 = v36[0];
  v14 = v36[1];
  v15 = v36[2];
  v16 = v36[3];

  sub_1DA602694((uint64_t)v36, (uint64_t)v43);
  if (v43[32] == 1)
  {
    if (qword_1F0268560 != -1)
      swift_once();
    v14 = *((_QWORD *)&xmmword_1F026B490 + 1);
    v13 = xmmword_1F026B490;
    v16 = *((_QWORD *)&xmmword_1F026B4A0 + 1);
    v15 = xmmword_1F026B4A0;
  }
  v17 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, v10);
  UIColor.rgbaComponents.getter((uint64_t)v37);
  v18 = v37[0];
  v19 = v37[1];
  v20 = v37[2];
  v21 = v37[3];

  sub_1DA602694((uint64_t)v37, (uint64_t)v42);
  if (v42[32] == 1)
  {
    if (qword_1F0268560 != -1)
      swift_once();
    v19 = *((_QWORD *)&xmmword_1F026B490 + 1);
    v18 = xmmword_1F026B490;
    v21 = *((_QWORD *)&xmmword_1F026B4A0 + 1);
    v20 = xmmword_1F026B4A0;
  }
  v29 = v16;
  v30 = v15;
  v31 = v14;
  v32 = v13;
  v22 = objc_msgSend(a1, sel_resolvedColorWithTraitCollection_, v11);
  UIColor.rgbaComponents.getter((uint64_t)v38);
  v23 = v38[0];
  v24 = v38[1];
  v25 = v38[2];
  v26 = v38[3];

  sub_1DA602694((uint64_t)v38, (uint64_t)v41);
  if (v41[32] == 1)
  {
    if (qword_1F0268560 != -1)
      swift_once();
    v24 = *((_QWORD *)&xmmword_1F026B490 + 1);
    v23 = xmmword_1F026B490;
    v26 = *((_QWORD *)&xmmword_1F026B4A0 + 1);
    v25 = xmmword_1F026B4A0;
  }
  v27 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, v11);
  UIColor.rgbaComponents.getter((uint64_t)v39);
  v34 = v39[1];
  v35 = v39[0];

  sub_1DA602694((uint64_t)v39, (uint64_t)v40);
  if (v40[32] == 1)
  {
    if (qword_1F0268560 != -1)
      swift_once();
    v34 = xmmword_1F026B4A0;
    v35 = xmmword_1F026B490;
  }

  *(_QWORD *)a5 = v32;
  *(_QWORD *)(a5 + 8) = v31;
  *(_QWORD *)(a5 + 16) = v30;
  *(_QWORD *)(a5 + 24) = v29;
  *(_QWORD *)(a5 + 32) = v18;
  *(_QWORD *)(a5 + 40) = v19;
  *(_QWORD *)(a5 + 48) = v20;
  *(_QWORD *)(a5 + 56) = v21;
  *(_QWORD *)(a5 + 64) = v23;
  *(_QWORD *)(a5 + 72) = v24;
  *(_QWORD *)(a5 + 80) = v25;
  *(_QWORD *)(a5 + 88) = v26;
  result = (__n128)v34;
  *(_OWORD *)(a5 + 96) = v35;
  *(_OWORD *)(a5 + 112) = v34;
  *(_QWORD *)(a5 + 128) = a3;
  *(_QWORD *)(a5 + 136) = a4;
  return result;
}

uint64_t sub_1DA602694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id UIColor.RGBAInterpolator.value(forInput:)(double a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v16[6];
  _OWORD v17[9];

  v3 = v1[7];
  v17[6] = v1[6];
  v17[7] = v3;
  v17[8] = v1[8];
  v4 = v1[3];
  v17[2] = v1[2];
  v17[3] = v4;
  v5 = v1[5];
  v17[4] = v1[4];
  v17[5] = v5;
  v6 = v1[1];
  v17[0] = *v1;
  v17[1] = v6;
  v7 = swift_allocObject();
  v8 = v1[7];
  *(_OWORD *)(v7 + 112) = v1[6];
  *(_OWORD *)(v7 + 128) = v8;
  *(_OWORD *)(v7 + 144) = v1[8];
  v9 = v1[3];
  *(_OWORD *)(v7 + 48) = v1[2];
  *(_OWORD *)(v7 + 64) = v9;
  v10 = v1[5];
  *(_OWORD *)(v7 + 80) = v1[4];
  *(_OWORD *)(v7 + 96) = v10;
  v11 = v1[1];
  *(_OWORD *)(v7 + 16) = *v1;
  *(_OWORD *)(v7 + 32) = v11;
  *(double *)(v7 + 160) = a1;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v16[4] = sub_1DA602910;
  v16[5] = v7;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1DA58905C;
  v16[3] = &block_descriptor_26;
  v13 = _Block_copy(v16);
  sub_1DA60291C((uint64_t)v17);
  v14 = objc_msgSend(v12, sel_initWithDynamicProvider_, v13);
  _Block_release(v13);
  swift_release();
  return v14;
}

id sub_1DA6027FC(void *a1, double *a2, double a3)
{
  __n128 v5;
  __n128 v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double (*v13)(__n128, __n128, double);
  double v14;
  double v15;
  double v16;

  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
  {
    v5.n128_f64[0] = a2[8];
    v7 = a2[9];
    v8 = a2[10];
    v9 = a2[11];
    v6.n128_f64[0] = a2[12];
    v10 = a2[13];
    v11 = a2[14];
    v12 = a2[15];
  }
  else
  {
    v5.n128_f64[0] = *a2;
    v7 = a2[1];
    v8 = a2[2];
    v9 = a2[3];
    v6.n128_f64[0] = a2[4];
    v10 = a2[5];
    v11 = a2[6];
    v12 = a2[7];
  }
  v13 = (double (*)(__n128, __n128, double))*((_QWORD *)a2 + 16);
  v14 = v13(v5, v6, a3);
  v15 = ((double (*)(double, double, double))v13)(v7, v10, a3);
  v16 = ((double (*)(double, double, double))v13)(v8, v11, a3);
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v14, v15, v16, ((double (*)(double, double, double))v13)(v9, v12, a3));
}

uint64_t sub_1DA6028EC()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1DA602910(void *a1)
{
  uint64_t v1;

  return sub_1DA6027FC(a1, (double *)(v1 + 16), *(double *)(v1 + 160));
}

uint64_t sub_1DA60291C(uint64_t a1)
{
  sub_1DA66BE60();
  return a1;
}

unint64_t sub_1DA602948()
{
  unint64_t result;

  result = qword_1F026D638;
  if (!qword_1F026D638)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEF058], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1F026D638);
  }
  return result;
}

uint64_t _s16RGBAInterpolatorVwxx()
{
  return swift_release();
}

uint64_t _s16RGBAInterpolatorVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v7;
  sub_1DA66BE60();
  return a1;
}

_QWORD *_s16RGBAInterpolatorVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  v3 = a2[17];
  a1[16] = a2[16];
  a1[17] = v3;
  sub_1DA66BE60();
  swift_release();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

_OWORD *_s16RGBAInterpolatorVwta(_OWORD *a1, _OWORD *a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_release();
  return a1;
}

uint64_t _s16RGBAInterpolatorVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 128);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s16RGBAInterpolatorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 128) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UIColor.RGBAInterpolator()
{
  return &type metadata for UIColor.RGBAInterpolator;
}

void **sub_1DA602BD0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;

  if (a1 != a2)
  {
    sub_1DA602D74((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = *a2;
        *a1 = *a2;
        v7 = v6;
        goto LABEL_8;
      case 1u:
      case 2u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
      case 4u:
        v8 = sub_1DA66EB90();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_8;
      case 6u:
        v9 = a2[3];
        a1[3] = v9;
        a1[4] = a2[4];
        (**((void (***)(void **, const void *))v9 - 1))(a1, a2);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1DA602D74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JSPackageError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1DA602DB0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 3)
  {
    v7 = sub_1DA66EB90();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1DA602E78(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1DA602D74((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 3)
    {
      v7 = sub_1DA66EB90();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t DownloadEpisodesIntent.init(episodeIdentifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t static DownloadEpisodesIntent.kind.getter()
{
  return 0xD000000000000016;
}

uint64_t DownloadEpisodesIntent.episodeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1DA602F7C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000001DA6830C0;
}

ValueMetadata *type metadata accessor for DownloadEpisodesIntent()
{
  return &type metadata for DownloadEpisodesIntent;
}

id static NSBundle.podcastsUI.getter()
{
  if (qword_1EDAE52F8 != -1)
    swift_once();
  return (id)qword_1EDAE5390;
}

uint64_t sub_1DA602FEC(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v9;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_1DA48AF08((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v6);
        swift_unknownObjectRetain();
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_1DA67054C();

  if (!v4)
    return 0;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D700);
  swift_dynamicCast();
  v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1DA6030B4()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v32;
  __int128 v33;
  __int128 v34;
  unint64_t v35;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_domain);
  v3 = sub_1DA66F8BC();
  v5 = v4;

  v6 = objc_msgSend(v1, sel_code);
  if (sub_1DA66F8BC() == v3 && v7 == v5)
  {
    swift_bridgeObjectRelease_n();
    if (v6 == (id)2)
      return 1;
  }
  else
  {
    v9 = sub_1DA6706D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0 && v6 == (id)2)
      return 1;
  }
  v35 = MEMORY[0x1E0DEE9D8];
  v11 = objc_msgSend(v1, sel_userInfo);
  v12 = sub_1DA66F754();

  v13 = sub_1DA66F8BC();
  if (*(_QWORD *)(v12 + 16) && (v15 = sub_1DA499108(v13, v14), (v16 & 1) != 0))
  {
    sub_1DA49ADD0(*(_QWORD *)(v12 + 56) + 32 * v15, (uint64_t)&v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v34 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D718);
      if ((swift_dynamicCast() & 1) != 0)
        sub_1DA65F4F8((unint64_t)v32);
      goto LABEL_16;
    }
  }
  else
  {
    v33 = 0u;
    v34 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DA47E2F0((uint64_t)&v33, &qword_1EDAE5130);
LABEL_16:
  v17 = objc_msgSend(v1, sel_userInfo);
  v18 = sub_1DA66F754();

  v19 = sub_1DA66F8BC();
  if (*(_QWORD *)(v18 + 16) && (v21 = sub_1DA499108(v19, v20), (v22 & 1) != 0))
  {
    sub_1DA49ADD0(*(_QWORD *)(v18 + 56) + 32 * v21, (uint64_t)&v33);
  }
  else
  {
    v33 = 0u;
    v34 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v34 + 1))
  {
    sub_1DA47D774(0, &qword_1F026D710);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v23 = v32;
      MEMORY[0x1DF09E464]();
      if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DA66FAC0();
      sub_1DA66FB14();
      sub_1DA66FAB4();

    }
  }
  else
  {
    sub_1DA47E2F0((uint64_t)&v33, &qword_1EDAE5130);
  }
  v24 = v35;
  if (v35 >> 62)
    goto LABEL_44;
  v25 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v25)
  {
    while (1)
    {
      v26 = (v24 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF09EE48](0, v24) : *(id *)(v24 + 32);
      v27 = v26;
      if ((sub_1DA6030B4() & 1) != 0)
        break;

      if (v25 != 1)
      {
        v28 = 5;
        while (1)
        {
          v29 = (v24 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1DF09EE48](v28 - 4, v24)
              : *(id *)(v24 + 8 * v28);
          v27 = v29;
          v30 = v28 - 3;
          if (__OFADD__(v28 - 4, 1))
            break;
          if ((sub_1DA6030B4() & 1) != 0)
            goto LABEL_31;

          ++v28;
          if (v30 == v25)
            goto LABEL_40;
        }
        __break(1u);
LABEL_44:
        swift_bridgeObjectRetain_n();
        v25 = sub_1DA6705A0();
        if (v25)
          continue;
      }
      goto LABEL_40;
    }
LABEL_31:
    swift_bridgeObjectRelease_n();

    v10 = 1;
  }
  else
  {
LABEL_40:
    swift_bridgeObjectRelease_n();
    v10 = 0;
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1DA6034D8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(_QWORD *, _QWORD, uint64_t);
  uint64_t v34;
  char *v35;
  void (*v36)(_QWORD *, uint64_t);
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD aBlock[6];

  v3 = sub_1DA66E9B0();
  v56 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v55 = (uint64_t *)((char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v43 - v6);
  v58 = sub_1DA66EA1C();
  v53 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v52 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v43 - v10;
  v11 = sub_1DA66E9C8();
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  MEMORY[0x1E0C80A78](v11);
  v49 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66EA04();
  v47 = *(_QWORD *)(v13 - 8);
  v48 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66FF10();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v1 + 32;
  swift_beginAccess();
  v20 = v1;
  v21 = *(_QWORD *)(v1 + 32);
  v22 = a1;
  swift_bridgeObjectRetain();
  v23 = sub_1DA602FEC(v22, v21);

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v23)
  {
    v45 = (id)sub_1DA47D774(0, &qword_1F026D6D0);
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1DA47E32C(&qword_1F026D6D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
    v46 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D6E0);
    sub_1DA4841D4(&qword_1F026D6E8, &qword_1F026D6E0, MEMORY[0x1E0DEAF38]);
    sub_1DA670378();
    v43 = v20;
    v24 = *(id *)(v20 + 24);
    sub_1DA66FF1C();

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    ObjectType = swift_getObjectType();
    v26 = swift_allocObject();
    v27 = v43;
    swift_weakInit();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v26;
    *(_QWORD *)(v28 + 24) = v22;
    aBlock[4] = sub_1DA603DC0;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA4A9194;
    aBlock[3] = &block_descriptor_27;
    v29 = _Block_copy(aBlock);
    v45 = v22;
    sub_1DA66BE60();
    sub_1DA66E9EC();
    v30 = v49;
    v44 = ObjectType;
    sub_1DA603C88();
    sub_1DA66FF28();
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v51);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v48);
    swift_release();
    swift_release();
    v31 = v52;
    sub_1DA66EA10();
    *v7 = *(_QWORD *)(v27 + 40);
    v32 = v56;
    v33 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v56 + 104);
    v34 = v46;
    v33(v7, *MEMORY[0x1E0DEF4A0], v46);
    v35 = v57;
    MEMORY[0x1DF09D414](v31, v7);
    v36 = *(void (**)(_QWORD *, uint64_t))(v32 + 8);
    v36(v7, v34);
    v37 = *(void (**)(char *, uint64_t))(v53 + 8);
    v38 = v31;
    v39 = v58;
    v37(v38, v58);
    v33(v7, *MEMORY[0x1E0DEF498], v34);
    v40 = v55;
    *v55 = 0;
    v33(v40, *MEMORY[0x1E0DEF480], v34);
    MEMORY[0x1DF09EA88](v35, v7, v40, v44);
    v36(v40, v34);
    v36(v7, v34);
    v37(v35, v39);
    sub_1DA66FF40();
    swift_beginAccess();
    v41 = v45;
    v42 = swift_unknownObjectRetain();
    sub_1DA603DC8(v42, v41);
    swift_endAccess();
    swift_unknownObjectRelease();

  }
}

void sub_1DA603A20(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;

  v3 = sub_1DA66DEF4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    v7 = a2;
    sub_1DA48ADBC((unint64_t)v7);
    swift_endAccess();
    swift_release();

    swift_unknownObjectRelease();
  }
  sub_1DA66DE70();
  v8 = a2;
  v9 = sub_1DA66DEDC();
  v10 = sub_1DA66FDC0();
  if (os_log_type_enabled(v9, v10))
  {
    v19 = v3;
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v18 = v4;
    v13 = (_QWORD *)v12;
    *(_DWORD *)v11 = 138412290;
    v20 = v8;
    v14 = v8;
    sub_1DA6702C4();
    *v13 = v8;

    v3 = v19;
    _os_log_impl(&dword_1DA478000, v9, v10, "Route for player path %@ has timed out, switching to system route", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    v15 = v13;
    v4 = v18;
    MEMORY[0x1DF0A0474](v15, -1, -1);
    MEMORY[0x1DF0A0474](v11, -1, -1);
  }
  else
  {

    v9 = v8;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_systemRoute);
  objc_msgSend(v16, sel_setActiveRoute_completion_, v17, 0);

}

uint64_t sub_1DA603C88()
{
  sub_1DA66E9C8();
  sub_1DA47E32C((unint64_t *)&qword_1EDADE6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA4841D4((unint64_t *)&qword_1EDADE6F0, (uint64_t *)&unk_1EDADE6E0, MEMORY[0x1E0DEAF38]);
  return sub_1DA670378();
}

uint64_t sub_1DA603D3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DA603D70()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA603D94()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1DA603DC0()
{
  uint64_t v0;

  sub_1DA603A20(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1DA603DC8(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = sub_1DA6703A8();
  if (!__OFADD__(result, 1))
  {
    *v3 = sub_1DA603E68(v7, result + 1);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DA5384E0(a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA603E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D6F0);
    v2 = sub_1DA6705C4();
    v18 = v2;
    sub_1DA670534();
    v3 = sub_1DA670558();
    if (v3)
    {
      v4 = v3;
      sub_1DA47D774(0, (unint64_t *)&unk_1F026A758);
      do
      {
        swift_dynamicCast();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D700);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1DA57A3F0(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1DA670198();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1DA670558();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

id sub_1DA6040A8(id result, void *a2)
{
  id v2;

  if (result)
  {
    v2 = result;
    return a2;
  }
  return result;
}

uint64_t sub_1DA6040D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t BookmarkEpisodeIntent.init(episodeIdentifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t static BookmarkEpisodeIntent.kind.getter()
{
  return 0xD000000000000015;
}

uint64_t BookmarkEpisodeIntent.episodeIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1DA604128(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001DA683180;
}

ValueMetadata *type metadata accessor for BookmarkEpisodeIntent()
{
  return &type metadata for BookmarkEpisodeIntent;
}

uint64_t UnbookmarkEpisodeIntent.init(episodeIdentifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t static UnbookmarkEpisodeIntent.kind.getter()
{
  return 0xD000000000000017;
}

uint64_t UnbookmarkEpisodeIntent.episodeIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1DA604184(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x80000001DA683200;
}

ValueMetadata *type metadata accessor for UnbookmarkEpisodeIntent()
{
  return &type metadata for UnbookmarkEpisodeIntent;
}

uint64_t EpisodeEntity.EpisodeEntityQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  *a1 = result;
  return result;
}

uint64_t EpisodeEntity.EpisodeEntityQuery.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t EpisodeEntity.EpisodeEntityQuery.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

void (*EpisodeEntity.EpisodeEntityQuery.objectGraph.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7AE4;
}

uint64_t EpisodeEntity.EpisodeEntityQuery.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t EpisodeEntity.EpisodeEntityQuery.predicate(forAdamIDs:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  id v14;
  unint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1DA6704E0();
    result = sub_1DA6047A8(a1);
    v5 = result;
    v7 = v6;
    v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_11;
      if (*(_DWORD *)(a1 + 36) != v7)
        goto LABEL_12;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v5));
      sub_1DA6704BC();
      sub_1DA6704EC();
      sub_1DA6704F8();
      sub_1DA6704C8();
      result = sub_1DA60484C(v5, v7, v9 & 1, a1);
      v5 = result;
      v7 = v10;
      v9 = v11 & 1;
      if (!--v1)
      {
        sub_1DA57DB40(result, v10, v11 & 1);
        v2 = v15;
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_9:
    v12 = (void *)objc_opt_self();
    sub_1DA640A40(v2);
    swift_bridgeObjectRelease();
    sub_1DA52A3C8();
    sub_1DA47E32C((unint64_t *)&qword_1F026D720, (uint64_t (*)(uint64_t))sub_1DA52A3C8, MEMORY[0x1E0DEFCF8]);
    v13 = (void *)sub_1DA66FC4C();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v12, sel_predicateForEpisodeStoreTrackIds_, v13);

    return (uint64_t)v14;
  }
  return result;
}

id EpisodeEntity.EpisodeEntityQuery.predicate(forUuids:)()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1DA66FC4C();
  v2 = objc_msgSend(v0, sel_predicateForEpisodeUuids_, v1);

  return v2;
}

uint64_t sub_1DA604568(uint64_t a1)
{
  return EpisodeEntity.EpisodeEntityQuery.predicate(forAdamIDs:)(a1);
}

id sub_1DA60457C()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1DA66FC4C();
  v2 = objc_msgSend(v0, sel_predicateForEpisodeUuids_, v1);

  return v2;
}

uint64_t sub_1DA6045EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = *v1;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F026DEB8 + dword_1F026DEB8);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4B1798;
  return v7(a1, v4);
}

uint64_t sub_1DA604658()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DA4AD77C;
  return sub_1DA66BD28();
}

uint64_t sub_1DA6046C4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1DA604B50();
  *v1 = v0;
  v1[1] = sub_1DA4A9520;
  return sub_1DA66BD34();
}

uint64_t sub_1DA604730()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DA4AD77C;
  return sub_1DA66BFA4();
}

uint64_t sub_1DA6047A8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1DA60484C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DA604930()
{
  return sub_1DA47E32C((unint64_t *)&qword_1EDAE3B58, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA60495C()
{
  return sub_1DA47E32C(&qword_1F026D728, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA604988()
{
  return sub_1DA47E32C(&qword_1F026D730, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

unint64_t sub_1DA6049B8()
{
  unint64_t result;

  result = qword_1F026D780;
  if (!qword_1F026D780)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for EpisodeEntity.EpisodeEntityQuery, &type metadata for EpisodeEntity.EpisodeEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026D780);
  }
  return result;
}

unint64_t sub_1DA604A00()
{
  unint64_t result;

  result = qword_1F026D788[0];
  if (!qword_1F026D788[0])
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for EpisodeEntity.EpisodeEntityQuery, &type metadata for EpisodeEntity.EpisodeEntityQuery);
    atomic_store(result, qword_1F026D788);
  }
  return result;
}

unint64_t sub_1DA604A48()
{
  unint64_t result;

  result = qword_1F026D7A0;
  if (!qword_1F026D7A0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for EpisodeEntity.EpisodeEntityQuery, &type metadata for EpisodeEntity.EpisodeEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026D7A0);
  }
  return result;
}

uint64_t sub_1DA604A8C()
{
  return sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

unint64_t sub_1DA604ABC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F026D7A8[0];
  if (!qword_1F026D7A8[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269628);
    v2 = sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0C91CE0], v1, &v2);
    atomic_store(result, qword_1F026D7A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeEntity.EpisodeEntityQuery()
{
  return &type metadata for EpisodeEntity.EpisodeEntityQuery;
}

unint64_t sub_1DA604B50()
{
  unint64_t result;

  result = qword_1F026D7C0;
  if (!qword_1F026D7C0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for EpisodeEntity.EpisodeEntityQuery, &type metadata for EpisodeEntity.EpisodeEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026D7C0);
  }
  return result;
}

uint64_t sub_1DA604B94()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1DA66F8BC();
  qword_1F026D7C8 = result;
  unk_1F026D7D0 = v1;
  return result;
}

uint64_t static ChannelEntity.databaseEntityName.getter()
{
  uint64_t v0;

  if (qword_1F02687A0 != -1)
    swift_once();
  v0 = qword_1F026D7C8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1DA604C1C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DA66CA3C();
  __swift_allocate_value_buffer(v0, qword_1F026D7D8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F026D7D8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0D7D830], v0);
}

uint64_t static ChannelEntity.serverContentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02687A8 != -1)
    swift_once();
  v2 = sub_1DA66CA3C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F026D7D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA604CE4()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  qword_1F026D7F0 = result;
  return result;
}

uint64_t static ChannelEntity.defaultQuery.getter@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1F02687B0 != -1)
    swift_once();
  *a1 = qword_1F026D7F0;
  return sub_1DA66BE60();
}

uint64_t static ChannelEntity.typeDisplayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66C220();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1DA66C208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1DA66C01C();
}

uint64_t ChannelEntity.displayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AC8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66C220();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1DA66F880();
  MEMORY[0x1E0C80A78](v8);
  sub_1DA66F874();
  sub_1DA66F868();
  sub_1DA66BDA0();
  sub_1DA66F85C();
  swift_bridgeObjectRelease();
  sub_1DA66F868();
  sub_1DA66C214();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  v9 = sub_1DA66BF8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
  return sub_1DA66BF98();
}

uint64_t ChannelEntity.name.getter()
{
  uint64_t v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t ChannelEntity.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelEntity.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ChannelEntity.id.modify())()
{
  return nullsub_1;
}

uint64_t ChannelEntity.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelEntity.uuid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ChannelEntity.uuid.modify())()
{
  return nullsub_1;
}

void *ChannelEntity.objectID.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void ChannelEntity.objectID.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*ChannelEntity.objectID.modify())()
{
  return nullsub_1;
}

uint64_t ChannelEntity.adamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ChannelEntity.adamID.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*ChannelEntity.adamID.modify())()
{
  return nullsub_1;
}

uint64_t ChannelEntity.name.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*ChannelEntity.name.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ChannelEntity.$name.getter()
{
  return sub_1DA66BDB8();
}

uint64_t ChannelEntity.subscribed.getter()
{
  unsigned __int8 v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t ChannelEntity.subscribed.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*ChannelEntity.subscribed.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ChannelEntity.$subscribed.getter()
{
  return sub_1DA66BDB8();
}

uint64_t ChannelEntity.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ChannelEntity();
  return sub_1DA49CC94(v1 + *(int *)(v3 + 40), a1, &qword_1EDAE4108);
}

uint64_t type metadata accessor for ChannelEntity()
{
  uint64_t result;

  result = qword_1F026D8D0;
  if (!qword_1F026D8D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ChannelEntity.artworkData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for ChannelEntity() + 44);
  v2 = *(_QWORD *)v1;
  sub_1DA498D8C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t ChannelEntity.storeURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ChannelEntity();
  return sub_1DA49CC94(v1 + *(int *)(v3 + 48), a1, &qword_1EDAE5020);
}

uint64_t ChannelEntity.init(model:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  _BYTE v53[25];

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66C358();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66C928();
  MEMORY[0x1E0C80A78](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v11);
  v48 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v14 = MEMORY[0x1E0C80A78](v13).n128_u64[0];
  v16 = (char *)&v43 - v15;
  v17 = a1;
  v18 = objc_msgSend(a1, sel_artworkURL, v14);
  v50 = v5;
  v47 = v16;
  if (v18)
  {
    v19 = v18;
    sub_1DA66F8BC();

    v51 = xmmword_1DA67D4C0;
    v52 = 0u;
    memset(v53, 0, sizeof(v53));
    swift_bridgeObjectRetain();
    sub_1DA66C904();
    sub_1DA66CC1C();
    sub_1DA66CA00();
    v20 = sub_1DA66CA0C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 0, 1, v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = sub_1DA66CA0C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v16, 1, 1, v21);
  }
  v22 = a1;
  v23 = objc_msgSend(a1, sel_objectID);
  v24 = objc_msgSend(v23, sel_URIRepresentation);

  sub_1DA66C304();
  v25 = sub_1DA66C298();
  v27 = v26;
  v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  v49 = v6;
  v28(v9, v6);
  v29 = objc_msgSend(v17, sel_objectID);
  if (((unint64_t)objc_msgSend(v17, sel_storeId) & 0x8000000000000000) != 0)
  {
    result = sub_1DA670564();
    __break(1u);
  }
  else
  {
    v30 = sub_1DA66DCE4();
    v31 = objc_msgSend(v17, sel_name);
    v44 = v30;
    v45 = v29;
    if (v31)
    {
      v32 = v31;
      v33 = v46;
      v34 = sub_1DA66F8BC();
      v36 = v35;

    }
    else
    {
      v33 = v46;
      v34 = 0;
      v36 = 0xE000000000000000;
    }
    v37 = objc_msgSend(v22, sel_subscriptionActive);
    v39 = (uint64_t)v47;
    v38 = v48;
    sub_1DA49CC94((uint64_t)v47, v48, &qword_1EDAE4108);
    v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v41 = (uint64_t)v50;
    v40(v50, 1, 1, v49);
    ChannelEntity.init(id:uuid:objectID:adamID:name:subscribed:artworkModel:artworkData:storeURL:)(v25, v27, 0, 0, v45, v44, v34, v36, v33, v37, v38, 0, 0xF000000000000000, v41);

    return sub_1DA47E2F0(v39, &qword_1EDAE4108);
  }
  return result;
}

uint64_t ChannelEntity.init(id:uuid:objectID:adamID:name:subscribed:artworkModel:artworkData:storeURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v35 = a6;
  v36 = a7;
  v33 = a3;
  v34 = a4;
  v41 = a13;
  v42 = a14;
  v40 = a12;
  v38 = a8;
  v39 = a11;
  v37 = a10;
  v18 = sub_1DA66C220();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AB8);
  sub_1DA66C208();
  a9[6] = MEMORY[0x1DF09A7B0](v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AC0);
  sub_1DA66C208();
  a9[7] = MEMORY[0x1DF09A7BC](v20);
  v21 = (int *)type metadata accessor for ChannelEntity();
  v22 = (uint64_t)a9 + v21[10];
  v23 = sub_1DA66CA0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = (char *)a9 + v21[11];
  *(_OWORD *)v24 = xmmword_1DA6833E0;
  v25 = (uint64_t)a9 + v21[12];
  v26 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *a9 = a1;
  a9[1] = a2;
  v27 = v34;
  a9[2] = v33;
  a9[3] = v27;
  v28 = v35;
  a9[4] = a5;
  a9[5] = v28;
  v43 = v36;
  v44 = v38;
  v29 = a5;
  sub_1DA66BDAC();
  LOBYTE(v43) = v37;
  sub_1DA66BDAC();

  sub_1DA605AA4(v39, v22, &qword_1EDAE4108);
  sub_1DA49873C(*(_QWORD *)v24, *((_QWORD *)v24 + 1));
  v31 = v41;
  v30 = v42;
  *(_QWORD *)v24 = v40;
  *((_QWORD *)v24 + 1) = v31;
  return sub_1DA605AA4(v30, v25, &qword_1EDAE5020);
}

uint64_t sub_1DA605AA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void ChannelEntity.init(mediaObject:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  *(_QWORD *)&v7 = MEMORY[0x1E0C80A78](v6).n128_u64[0];
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_storeId, v7);
  v11 = sub_1DA66F8BC();
  v28 = v12;
  v29 = v11;

  v13 = objc_msgSend(a1, sel_storeId);
  sub_1DA66F8BC();

  v14 = sub_1DA66DCCC();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(a1, sel_name);
  if (v15)
  {
    v16 = v15;
    v17 = sub_1DA66F8BC();
    v19 = v18;

  }
  else
  {
    v17 = 0;
    v19 = 0xE000000000000000;
  }
  sub_1DA66CD60();
  v20 = sub_1DA66D21C();
  swift_release();
  sub_1DA66CD60();
  v21 = sub_1DA66D228();
  swift_release();
  if (v21)
  {
    ArtworkModel.init(serverArtwork:)((uint64_t)v9);
  }
  else
  {
    v22 = sub_1DA66CA0C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
  }
  v23 = objc_msgSend(a1, "url");
  if (v23)
  {
    v24 = v23;
    sub_1DA66F8BC();

    swift_bridgeObjectRetain();
    v25 = (uint64_t)v27;
    sub_1DA66C334();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v26 = sub_1DA66C358();
    v25 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v27, 1, 1, v26);
  }
  ChannelEntity.init(id:uuid:objectID:adamID:name:subscribed:artworkModel:artworkData:storeURL:)(v29, v28, 0, 0, 0, v14, v17, v19, a2, v20 & 1, (uint64_t)v9, 0, 0xF000000000000000, v25);

}

Swift::Void __swiftcall ChannelEntity.alignID(with:)(NSManagedObjectID with)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  objc_class *v9;
  id v10;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)v2[4];
  if (v8)
  {
    sub_1DA524308();
    v9 = with.super.isa;
    v10 = v8;
    v11 = sub_1DA6701A4();

    if ((v11 & 1) != 0)
    {
      v12 = -[objc_class URIRepresentation](v9, sel_URIRepresentation);
      sub_1DA66C304();

      v13 = sub_1DA66C298();
      v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      *v2 = v13;
      v2[1] = v15;
    }
  }
}

Swift::Void __swiftcall ChannelEntity.alignID(with:)(Swift::String with)
{
  uint64_t *v1;
  void *object;
  void *v3;
  uint64_t countAndFlagsBits;
  BOOL v5;

  object = with._object;
  v3 = (void *)v1[3];
  if (v3)
  {
    countAndFlagsBits = with._countAndFlagsBits;
    v5 = v1[2] == with._countAndFlagsBits && v3 == object;
    if (v5 || (sub_1DA6706D8() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v1 = countAndFlagsBits;
      v1[1] = (uint64_t)object;
    }
  }
}

uint64_t ChannelEntity.alignID(with:)(uint64_t result)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (v1[5] == result)
  {
    v2 = v1;
    sub_1DA4F726C();
    v3 = sub_1DA670354();
    v5 = v4;
    result = swift_bridgeObjectRelease();
    *v2 = v3;
    v2[1] = v5;
  }
  return result;
}

uint64_t sub_1DA605F94@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1F02687B0 != -1)
    swift_once();
  *a1 = qword_1F026D7F0;
  return sub_1DA66BE60();
}

uint64_t sub_1DA605FE8()
{
  uint64_t v0;

  if (qword_1F02687A0 != -1)
    swift_once();
  v0 = qword_1F026D7C8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1DA606044()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1DA606070()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t sub_1DA606094(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v4 = v2[3];
  if (v4)
  {
    v5 = result;
    v6 = v2[2] == result && v4 == a2;
    if (v6 || (result = sub_1DA6706D8(), (result & 1) != 0))
    {
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRelease();
      *v2 = v5;
      v2[1] = a2;
    }
  }
  return result;
}

uint64_t sub_1DA606108@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02687A8 != -1)
    swift_once();
  v2 = sub_1DA66CA3C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F026D7D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA60617C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_1DA606184(uint64_t result)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (v1[5] == result)
  {
    v2 = v1;
    sub_1DA4F726C();
    v3 = sub_1DA670354();
    v5 = v4;
    result = swift_bridgeObjectRelease();
    *v2 = v3;
    v2[1] = v5;
  }
  return result;
}

uint64_t sub_1DA6061EC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66C220();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1DA66C208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1DA66C01C();
}

uint64_t sub_1DA6062D0()
{
  sub_1DA607958(&qword_1F026D870, (uint64_t)&protocol conformance descriptor for ChannelEntity);
  return sub_1DA66BCEC();
}

uint64_t sub_1DA60631C()
{
  sub_1DA607958(&qword_1F026D848, (uint64_t)&protocol conformance descriptor for ChannelEntity);
  return sub_1DA66C028();
}

uint64_t ChannelEntity.prepare(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2[103] = v1;
  v2[97] = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v2[104] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[105] = v4;
  v2[106] = *(_QWORD *)(v4 + 64);
  v2[107] = swift_task_alloc();
  v2[108] = swift_task_alloc();
  v2[109] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  v5 = (_QWORD *)swift_task_alloc();
  v2[110] = v5;
  *v5 = v2;
  v5[1] = sub_1DA606434;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA606434()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 888) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA606498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 872);
  v2 = *(_QWORD *)(v0 + 856);
  v3 = *(_QWORD *)(v0 + 848);
  v4 = *(_QWORD *)(v0 + 840);
  v5 = *(_QWORD *)(v0 + 824);
  v6 = *(_QWORD *)(v0 + 776);
  v7 = *(_QWORD *)(v5 + 40);
  v8 = type metadata accessor for ChannelEntity();
  *(_QWORD *)(v0 + 896) = v8;
  v9 = *(int *)(v8 + 48);
  *(_DWORD *)(v0 + 944) = v9;
  sub_1DA49CC94(v5 + v9, v1, &qword_1EDAE5020);
  sub_1DA49CC94(v1, v2, &qword_1EDAE5020);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = (v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject();
  *(_QWORD *)(v0 + 904) = v12;
  sub_1DA49B0AC(v2, v12 + v10);
  *(_QWORD *)(v12 + v11) = v7;
  *(_QWORD *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v6;
  sub_1DA66BE60();
  sub_1DA66BE60();
  swift_asyncLet_begin();
  v13 = v5 + *(int *)(v8 + 40);
  v16 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F026DD08 + dword_1F026DD08);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 912) = v14;
  *v14 = v0;
  v14[1] = sub_1DA606614;
  return v16(v13, v0 + 696);
}

uint64_t sub_1DA606614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 920) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_asyncLet_finish();
  *(_QWORD *)(v6 + 928) = a2;
  *(_QWORD *)(v6 + 936) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA6066AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[117];
  v2 = v0[116];
  v3 = v0[103] + *(int *)(v0[112] + 44);
  sub_1DA49873C(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = v2;
  return swift_asyncLet_get();
}

uint64_t sub_1DA606720()
{
  return swift_task_switch();
}

uint64_t sub_1DA606734()
{
  uint64_t v0;

  sub_1DA606C24(*(_QWORD *)(v0 + 864), *(_QWORD *)(v0 + 824) + *(int *)(v0 + 944));
  return swift_asyncLet_finish();
}

uint64_t sub_1DA606788()
{
  return swift_task_switch();
}

uint64_t sub_1DA60679C()
{
  uint64_t v0;

  sub_1DA47E2F0(*(_QWORD *)(v0 + 872), &qword_1EDAE5020);
  __swift_destroy_boxed_opaque_existential_0(v0 + 696);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA606828()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA60687C()
{
  return swift_task_switch();
}

uint64_t sub_1DA606890()
{
  uint64_t v0;

  sub_1DA47E2F0(*(_QWORD *)(v0 + 872), &qword_1EDAE5020);
  __swift_destroy_boxed_opaque_existential_0(v0 + 696);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA606910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v4[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA606970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1DA49CC94(*(_QWORD *)(v0 + 24), v1, &qword_1EDAE5020);
  v2 = sub_1DA66C358();
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1DA47E2F0(*(_QWORD *)(v0 + 48), &qword_1EDAE5020);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v4;
    *v4 = v0;
    v4[1] = sub_1DA606A74;
    return sub_1DA606C6C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v6, *(_QWORD *)(v0 + 48), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v6, 0, 1, v2);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DA606A74()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DA606AC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = sub_1DA66C358();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA606B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + v6);
  v9 = *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1DA4AD77C;
  return sub_1DA606910(a1, v7, v8, v9);
}

uint64_t sub_1DA606C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA606C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  v4 = sub_1DA66DEF4();
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v5 = (_QWORD *)swift_task_alloc();
  v3[21] = v5;
  *v5 = v3;
  v5[1] = sub_1DA606D14;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA606D14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA606D78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v1 = v0[16];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269BC0);
  v2 = swift_allocObject();
  v0[23] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v2 + 32) = v1;
  v3 = sub_1DA63CC0C(MEMORY[0x1E0DEE9D8]);
  v0[24] = v3;
  v0[10] = v2;
  v0[11] = v3;
  v4 = (_QWORD *)swift_task_alloc();
  v0[25] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026D940);
  sub_1DA4841D4(&qword_1F026D948, &qword_1F026D940, (uint64_t)&protocol conformance descriptor for FetchMAPIRepresentableIntent<A>);
  *v4 = v0;
  v4[1] = sub_1DA606E90;
  return sub_1DA66EE90();
}

uint64_t sub_1DA606E90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_1DA606F10()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 112);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_10:
    v8 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease();
    v9 = sub_1DA66C358();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
LABEL_11:
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_10;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1DF09EE48](0, v1);
LABEL_6:
    v3 = v2;
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v3, "url");

    v5 = *(_QWORD *)(v0 + 120);
    if (v4)
    {
      sub_1DA66F8BC();

      swift_bridgeObjectRetain();
      sub_1DA66C334();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v6 = sub_1DA66C358();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    }
    goto LABEL_11;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(v1 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1DA607080()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 176);
  sub_1DA66DE28();
  v2 = v1;
  v3 = v1;
  v4 = sub_1DA66DEDC();
  v5 = sub_1DA66FDA8();
  if (os_log_type_enabled(v4, v5))
  {
    v16 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 160);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v19 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_1DA670750();
    *(_QWORD *)(v0 + 104) = sub_1DA49AD00(v8, v9, &v19);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v4, v5, "Failed to prepare channel share URL, but failing silently: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v7, -1, -1);
    MEMORY[0x1DF0A0474](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 144);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  v13 = *(_QWORD *)(v0 + 120);
  v14 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA607298()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v1 = *(void **)(v0 + 208);
  sub_1DA66DE28();
  v2 = v1;
  v3 = v1;
  v4 = sub_1DA66DEDC();
  v5 = sub_1DA66FDA8();
  if (os_log_type_enabled(v4, v5))
  {
    v16 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 160);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v19 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_1DA670750();
    *(_QWORD *)(v0 + 104) = sub_1DA49AD00(v8, v9, &v19);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v4, v5, "Failed to prepare channel share URL, but failing silently: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v7, -1, -1);
    MEMORY[0x1DF0A0474](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 144);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  v13 = *(_QWORD *)(v0 + 120);
  v14 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA6074BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return ChannelEntity.prepare(asPartOf:)(a1);
}

uint64_t static ChannelEntity.transferRepresentation.getter()
{
  type metadata accessor for ChannelEntity();
  sub_1DA607958(&qword_1F026D810, (uint64_t)&protocol conformance descriptor for ChannelEntity);
  sub_1DA6076EC();
  return sub_1DA66C688();
}

uint64_t sub_1DA607578@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];

  v4 = type metadata accessor for ChannelEntity();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA49CC94(a1 + *(int *)(v4 + 48), (uint64_t)v9, &qword_1EDAE5020);
  v10 = sub_1DA66C358();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DA47E2F0((uint64_t)v9, &qword_1EDAE5020);
    sub_1DA6097E8(a1, (uint64_t)v6);
LABEL_4:
    sub_1DA66BDA0();
    v12 = v16[0];
    v14 = v16[1];
    goto LABEL_5;
  }
  v12 = sub_1DA66C298();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  sub_1DA6097E8(a1, (uint64_t)v6);
  if (!v14)
    goto LABEL_4;
LABEL_5:
  result = sub_1DA47F880((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
  *a2 = v12;
  a2[1] = v14;
  return result;
}

unint64_t sub_1DA6076EC()
{
  unint64_t result;

  result = qword_1F026D818;
  if (!qword_1F026D818)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CA88D0], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1F026D818);
  }
  return result;
}

uint64_t sub_1DA607730()
{
  return sub_1DA607958(&qword_1F026D820, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

uint64_t sub_1DA607754()
{
  return sub_1DA607958(&qword_1F026D828, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

uint64_t sub_1DA607778()
{
  return sub_1DA607958(&qword_1F026D830, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

unint64_t sub_1DA6077A0()
{
  unint64_t result;

  result = qword_1F026DBC0;
  if (!qword_1F026DBC0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ChannelEntity.ChannelEntityQuery, &type metadata for ChannelEntity.ChannelEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026DBC0);
  }
  return result;
}

uint64_t sub_1DA6077E4()
{
  return MEMORY[0x1E0C91C88];
}

uint64_t sub_1DA6077F0()
{
  return sub_1DA607958(&qword_1F026D838, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

uint64_t sub_1DA607814()
{
  return sub_1DA607958(&qword_1F026D840, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

uint64_t sub_1DA607838()
{
  return sub_1DA607958(&qword_1F026DBA0, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

uint64_t sub_1DA60785C()
{
  return sub_1DA607958(&qword_1F026D848, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

uint64_t sub_1DA607880()
{
  return sub_1DA4841D4(&qword_1F026D850, &qword_1F026D858, MEMORY[0x1E0C91998]);
}

uint64_t sub_1DA6078AC()
{
  return sub_1DA607958(&qword_1F026D860, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

uint64_t sub_1DA6078D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA6078E0()
{
  sub_1DA6076EC();
  return sub_1DA66C688();
}

uint64_t sub_1DA607934()
{
  return sub_1DA607958(&qword_1F026D870, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

uint64_t sub_1DA607958(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ChannelEntity();
    result = MEMORY[0x1DF0A039C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA60799C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1DA66BDA0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DA6079D4()
{
  swift_bridgeObjectRetain();
  return sub_1DA66BDAC();
}

uint64_t sub_1DA607A0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA607A44()
{
  return sub_1DA66BDAC();
}

uint64_t *initializeBufferWithCopyOfBuffer for ChannelEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  int v23;
  id v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v63)(_QWORD *, uint64_t, int *);
  _QWORD *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v9 = (void *)a2[4];
    v8 = a2[5];
    a1[4] = (uint64_t)v9;
    a1[5] = v8;
    v10 = a2[7];
    v11 = *(int *)(a3 + 40);
    __dst = (uint64_t *)((char *)a1 + v11);
    v12 = (uint64_t *)((char *)a2 + v11);
    a1[6] = a2[6];
    a1[7] = v10;
    v13 = (int *)sub_1DA66CA0C();
    v14 = *((_QWORD *)v13 - 1);
    v63 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v9;
    sub_1DA66BE60();
    sub_1DA66BE60();
    if (v63(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = v12[1];
      *__dst = *v12;
      __dst[1] = v18;
      v19 = *((unsigned __int8 *)v12 + 32);
      swift_bridgeObjectRetain();
      if (v19 == 255)
      {
        *((_OWORD *)__dst + 1) = *((_OWORD *)v12 + 1);
        *((_BYTE *)__dst + 32) = *((_BYTE *)v12 + 32);
      }
      else
      {
        v20 = v12[2];
        v21 = v12[3];
        sub_1DA481390(v20, v21, v19);
        __dst[2] = v20;
        __dst[3] = v21;
        *((_BYTE *)__dst + 32) = v19;
      }
      *(_OWORD *)(__dst + 5) = *(_OWORD *)(v12 + 5);
      v22 = (id *)(v12 + 7);
      v23 = *((unsigned __int8 *)v12 + 64);
      if (v23 == 255)
      {
        __dst[7] = *v22;
        *((_BYTE *)__dst + 64) = *((_BYTE *)v12 + 64);
      }
      else
      {
        v24 = *v22;
        sub_1DA4E762C(*v22, *((_BYTE *)v12 + 64));
        __dst[7] = v24;
        *((_BYTE *)__dst + 64) = v23;
      }
      v25 = (id *)(v12 + 9);
      v26 = *((unsigned __int8 *)v12 + 80);
      if (v26 == 255)
      {
        __dst[9] = *v25;
        *((_BYTE *)__dst + 80) = *((_BYTE *)v12 + 80);
      }
      else
      {
        v27 = *v25;
        sub_1DA4E762C(*v25, *((_BYTE *)v12 + 80));
        __dst[9] = v27;
        *((_BYTE *)__dst + 80) = v26;
      }
      v28 = (id *)(v12 + 11);
      v29 = *((unsigned __int8 *)v12 + 96);
      if (v29 == 255)
      {
        __dst[11] = *v28;
        *((_BYTE *)__dst + 96) = *((_BYTE *)v12 + 96);
      }
      else
      {
        v30 = *v28;
        sub_1DA4E762C(*v28, *((_BYTE *)v12 + 96));
        __dst[11] = v30;
        *((_BYTE *)__dst + 96) = v29;
      }
      v31 = (id *)(v12 + 13);
      v32 = *((unsigned __int8 *)v12 + 112);
      if (v32 == 255)
      {
        __dst[13] = *v31;
        *((_BYTE *)__dst + 112) = *((_BYTE *)v12 + 112);
      }
      else
      {
        v33 = *v31;
        sub_1DA4E762C(*v31, *((_BYTE *)v12 + 112));
        __dst[13] = v33;
        *((_BYTE *)__dst + 112) = v32;
      }
      v34 = (id *)(v12 + 15);
      v35 = *((unsigned __int8 *)v12 + 128);
      if (v35 == 255)
      {
        __dst[15] = *v34;
        *((_BYTE *)__dst + 128) = *((_BYTE *)v12 + 128);
      }
      else
      {
        v36 = *v34;
        sub_1DA4E762C(*v34, *((_BYTE *)v12 + 128));
        __dst[15] = v36;
        *((_BYTE *)__dst + 128) = v35;
      }
      *((_BYTE *)__dst + 129) = *((_BYTE *)v12 + 129);
      v37 = v13[11];
      v38 = (char *)__dst + v37;
      v39 = (char *)v12 + v37;
      v40 = sub_1DA66C928();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      v41 = v13[12];
      v42 = (_QWORD *)((char *)__dst + v41);
      v43 = (_QWORD *)((char *)v12 + v41);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      *((_BYTE *)__dst + v13[13]) = *((_BYTE *)v12 + v13[13]);
      *((_BYTE *)__dst + v13[14]) = *((_BYTE *)v12 + v13[14]);
      *((_BYTE *)__dst + v13[15]) = *((_BYTE *)v12 + v13[15]);
      v45 = v13[16];
      v46 = (_QWORD *)((char *)__dst + v45);
      v47 = (_QWORD *)((char *)v12 + v45);
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v14 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v49(__dst, 0, 1, v13);
    }
    v50 = a3;
    v51 = *(int *)(a3 + 44);
    v52 = (char *)v4 + v51;
    v53 = (char *)a2 + v51;
    v54 = *((_QWORD *)v53 + 1);
    if (v54 >> 60 == 15)
    {
      *(_OWORD *)v52 = *(_OWORD *)v53;
    }
    else
    {
      v55 = *(_QWORD *)v53;
      sub_1DA498750(*(_QWORD *)v53, *((_QWORD *)v53 + 1));
      v50 = a3;
      *(_QWORD *)v52 = v55;
      *((_QWORD *)v52 + 1) = v54;
    }
    v56 = *(int *)(v50 + 48);
    v57 = (char *)v4 + v56;
    v58 = (char *)a2 + v56;
    v59 = sub_1DA66C358();
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
  }
  return v4;
}

uint64_t destroy for ChannelEntity(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  v4 = a1 + a2[10];
  v5 = sub_1DA66CA0C();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255)
      sub_1DA47F868(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v6);
    v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255)
      sub_1DA4E7898(*(id *)(v4 + 56), v7);
    v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255)
      sub_1DA4E7898(*(id *)(v4 + 72), v8);
    v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255)
      sub_1DA4E7898(*(id *)(v4 + 88), v9);
    v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255)
      sub_1DA4E7898(*(id *)(v4 + 104), v10);
    v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255)
      sub_1DA4E7898(*(id *)(v4 + 120), v11);
    v12 = v4 + *(int *)(v5 + 44);
    v13 = sub_1DA66C928();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v14 = (uint64_t *)(a1 + a2[11]);
  v15 = v14[1];
  if (v15 >> 60 != 15)
    sub_1DA4986F8(*v14, v15);
  v16 = a1 + a2[12];
  v17 = sub_1DA66C358();
  v18 = *(_QWORD *)(v17 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  return result;
}

_QWORD *initializeWithCopy for ChannelEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *__dst;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v7 = (void *)a2[4];
  v6 = a2[5];
  a1[4] = v7;
  a1[5] = v6;
  v8 = a2[7];
  v9 = a3[10];
  __dst = (_QWORD *)((char *)a1 + v9);
  v10 = (_QWORD *)((char *)a2 + v9);
  a1[6] = a2[6];
  a1[7] = v8;
  v11 = (int *)sub_1DA66CA0C();
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v7;
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v13(v10, 1, v11))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    v16 = a1;
  }
  else
  {
    v17 = v10[1];
    *__dst = *v10;
    __dst[1] = v17;
    v18 = *((unsigned __int8 *)v10 + 32);
    swift_bridgeObjectRetain();
    if (v18 == 255)
    {
      *((_OWORD *)__dst + 1) = *((_OWORD *)v10 + 1);
      *((_BYTE *)__dst + 32) = *((_BYTE *)v10 + 32);
    }
    else
    {
      v19 = v10[2];
      v20 = v10[3];
      sub_1DA481390(v19, v20, v18);
      __dst[2] = v19;
      __dst[3] = v20;
      *((_BYTE *)__dst + 32) = v18;
    }
    v16 = a1;
    *(_OWORD *)(__dst + 5) = *(_OWORD *)(v10 + 5);
    v21 = (id *)(v10 + 7);
    v22 = *((unsigned __int8 *)v10 + 64);
    if (v22 == 255)
    {
      __dst[7] = *v21;
      *((_BYTE *)__dst + 64) = *((_BYTE *)v10 + 64);
    }
    else
    {
      v23 = *v21;
      sub_1DA4E762C(*v21, *((_BYTE *)v10 + 64));
      __dst[7] = v23;
      *((_BYTE *)__dst + 64) = v22;
    }
    v24 = (id *)(v10 + 9);
    v25 = *((unsigned __int8 *)v10 + 80);
    if (v25 == 255)
    {
      __dst[9] = *v24;
      *((_BYTE *)__dst + 80) = *((_BYTE *)v10 + 80);
    }
    else
    {
      v26 = *v24;
      sub_1DA4E762C(*v24, *((_BYTE *)v10 + 80));
      __dst[9] = v26;
      *((_BYTE *)__dst + 80) = v25;
    }
    v27 = (id *)(v10 + 11);
    v28 = *((unsigned __int8 *)v10 + 96);
    if (v28 == 255)
    {
      __dst[11] = *v27;
      *((_BYTE *)__dst + 96) = *((_BYTE *)v10 + 96);
    }
    else
    {
      v29 = *v27;
      sub_1DA4E762C(*v27, *((_BYTE *)v10 + 96));
      __dst[11] = v29;
      *((_BYTE *)__dst + 96) = v28;
    }
    v30 = (id *)(v10 + 13);
    v31 = *((unsigned __int8 *)v10 + 112);
    if (v31 == 255)
    {
      __dst[13] = *v30;
      *((_BYTE *)__dst + 112) = *((_BYTE *)v10 + 112);
    }
    else
    {
      v32 = *v30;
      sub_1DA4E762C(*v30, *((_BYTE *)v10 + 112));
      __dst[13] = v32;
      *((_BYTE *)__dst + 112) = v31;
    }
    v33 = (id *)(v10 + 15);
    v34 = *((unsigned __int8 *)v10 + 128);
    if (v34 == 255)
    {
      __dst[15] = *v33;
      *((_BYTE *)__dst + 128) = *((_BYTE *)v10 + 128);
    }
    else
    {
      v35 = *v33;
      sub_1DA4E762C(*v33, *((_BYTE *)v10 + 128));
      __dst[15] = v35;
      *((_BYTE *)__dst + 128) = v34;
    }
    *((_BYTE *)__dst + 129) = *((_BYTE *)v10 + 129);
    v36 = v11[11];
    v37 = (char *)__dst + v36;
    v38 = (char *)v10 + v36;
    v39 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = v11[12];
    v41 = (_QWORD *)((char *)__dst + v40);
    v42 = (_QWORD *)((char *)v10 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    *((_BYTE *)__dst + v11[13]) = *((_BYTE *)v10 + v11[13]);
    *((_BYTE *)__dst + v11[14]) = *((_BYTE *)v10 + v11[14]);
    *((_BYTE *)__dst + v11[15]) = *((_BYTE *)v10 + v11[15]);
    v44 = v11[16];
    v45 = (_QWORD *)((char *)__dst + v44);
    v46 = (_QWORD *)((char *)v10 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(__dst, 0, 1, v11);
  }
  v49 = a3[11];
  v50 = (char *)v16 + v49;
  v51 = (char *)a2 + v49;
  v52 = *((_QWORD *)v51 + 1);
  if (v52 >> 60 == 15)
  {
    *(_OWORD *)v50 = *(_OWORD *)v51;
  }
  else
  {
    v53 = *(_QWORD *)v51;
    sub_1DA498750(*(_QWORD *)v51, *((_QWORD *)v51 + 1));
    *(_QWORD *)v50 = v53;
    *((_QWORD *)v50 + 1) = v52;
  }
  v54 = a3[12];
  v55 = (char *)v16 + v54;
  v56 = (char *)a2 + v54;
  v57 = sub_1DA66C358();
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  return v16;
}

_QWORD *assignWithCopy for ChannelEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, int *);
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  __int128 v29;
  id *v30;
  int v31;
  id v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  void (*v60)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v61;
  uint64_t v62;
  char v63;
  __int128 v64;
  id *v65;
  id *v66;
  int v67;
  id v68;
  void *v69;
  char v70;
  id v71;
  char v72;
  id v73;
  id *v74;
  id *v75;
  int v76;
  id v77;
  void *v78;
  char v79;
  id v80;
  char v81;
  id v82;
  id *v83;
  id *v84;
  int v85;
  id v86;
  void *v87;
  char v88;
  id v89;
  char v90;
  id v91;
  id *v92;
  id *v93;
  int v94;
  id v95;
  void *v96;
  char v97;
  id v98;
  char v99;
  id v100;
  id *v101;
  id *v102;
  int v103;
  id v104;
  void *v105;
  char v106;
  id v107;
  char v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)(char *, uint64_t, uint64_t);
  int v134;
  int v135;
  uint64_t v136;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[4];
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = v7;

  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1DA66BE60();
  swift_release();
  a1[7] = a2[7];
  sub_1DA66BE60();
  swift_release();
  v9 = a3[10];
  v10 = (uint64_t)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = (int *)sub_1DA66CA0C();
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *(_QWORD *)(v10 + 8) = *((_QWORD *)v11 + 1);
      v17 = v11[32];
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        v29 = *((_OWORD *)v11 + 1);
        *(_BYTE *)(v10 + 32) = v11[32];
        *(_OWORD *)(v10 + 16) = v29;
      }
      else
      {
        v18 = *((_QWORD *)v11 + 2);
        v19 = *((_QWORD *)v11 + 3);
        sub_1DA481390(v18, v19, v17);
        *(_QWORD *)(v10 + 16) = v18;
        *(_QWORD *)(v10 + 24) = v19;
        *(_BYTE *)(v10 + 32) = v17;
      }
      *(_QWORD *)(v10 + 40) = *((_QWORD *)v11 + 5);
      *(_QWORD *)(v10 + 48) = *((_QWORD *)v11 + 6);
      v30 = (id *)(v11 + 56);
      v31 = v11[64];
      if (v31 == 255)
      {
        v33 = *v30;
        *(_BYTE *)(v10 + 64) = v11[64];
        *(_QWORD *)(v10 + 56) = v33;
      }
      else
      {
        v32 = *v30;
        sub_1DA4E762C(*v30, v11[64]);
        *(_QWORD *)(v10 + 56) = v32;
        *(_BYTE *)(v10 + 64) = v31;
      }
      v34 = (id *)(v11 + 72);
      v35 = v11[80];
      if (v35 == 255)
      {
        v37 = *v34;
        *(_BYTE *)(v10 + 80) = v11[80];
        *(_QWORD *)(v10 + 72) = v37;
      }
      else
      {
        v36 = *v34;
        sub_1DA4E762C(*v34, v11[80]);
        *(_QWORD *)(v10 + 72) = v36;
        *(_BYTE *)(v10 + 80) = v35;
      }
      v38 = (id *)(v11 + 88);
      v39 = v11[96];
      if (v39 == 255)
      {
        v41 = *v38;
        *(_BYTE *)(v10 + 96) = v11[96];
        *(_QWORD *)(v10 + 88) = v41;
      }
      else
      {
        v40 = *v38;
        sub_1DA4E762C(*v38, v11[96]);
        *(_QWORD *)(v10 + 88) = v40;
        *(_BYTE *)(v10 + 96) = v39;
      }
      v42 = (id *)(v11 + 104);
      v43 = v11[112];
      if (v43 == 255)
      {
        v45 = *v42;
        *(_BYTE *)(v10 + 112) = v11[112];
        *(_QWORD *)(v10 + 104) = v45;
      }
      else
      {
        v44 = *v42;
        sub_1DA4E762C(*v42, v11[112]);
        *(_QWORD *)(v10 + 104) = v44;
        *(_BYTE *)(v10 + 112) = v43;
      }
      v46 = (id *)(v11 + 120);
      v47 = v11[128];
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v10 + 128) = v11[128];
        *(_QWORD *)(v10 + 120) = v49;
      }
      else
      {
        v48 = *v46;
        sub_1DA4E762C(*v46, v11[128]);
        *(_QWORD *)(v10 + 120) = v48;
        *(_BYTE *)(v10 + 128) = v47;
      }
      *(_BYTE *)(v10 + 129) = v11[129];
      v50 = v12[11];
      v51 = v10 + v50;
      v52 = &v11[v50];
      v53 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
      v54 = v12[12];
      v55 = (_QWORD *)(v10 + v54);
      v56 = &v11[v54];
      *v55 = *(_QWORD *)v56;
      v55[1] = *((_QWORD *)v56 + 1);
      *(_BYTE *)(v10 + v12[13]) = v11[v12[13]];
      *(_BYTE *)(v10 + v12[14]) = v11[v12[14]];
      *(_BYTE *)(v10 + v12[15]) = v11[v12[15]];
      v57 = v12[16];
      v58 = (_QWORD *)(v10 + v57);
      v59 = &v11[v57];
      *v58 = *(_QWORD *)v59;
      v58[1] = *((_QWORD *)v59 + 1);
      v60 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60(v10, 0, 1, v12);
      goto LABEL_68;
    }
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_68;
  }
  if (v16)
  {
    sub_1DA47F880(v10, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    goto LABEL_7;
  }
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (__int128 *)(v10 + 16);
  v22 = (__int128 *)(v11 + 16);
  v23 = v11[32];
  if (*(unsigned __int8 *)(v10 + 32) == 255)
  {
    if (v23 == 255)
    {
      v64 = *v22;
      *(_BYTE *)(v10 + 32) = v11[32];
      *v21 = v64;
    }
    else
    {
      v61 = *((_QWORD *)v11 + 2);
      v62 = *((_QWORD *)v11 + 3);
      sub_1DA481390(v61, v62, v11[32]);
      *(_QWORD *)(v10 + 16) = v61;
      *(_QWORD *)(v10 + 24) = v62;
      *(_BYTE *)(v10 + 32) = v23;
    }
  }
  else if (v23 == 255)
  {
    sub_1DA4E8928(v10 + 16);
    v63 = v11[32];
    *v21 = *v22;
    *(_BYTE *)(v10 + 32) = v63;
  }
  else
  {
    v24 = *((_QWORD *)v11 + 2);
    v25 = *((_QWORD *)v11 + 3);
    sub_1DA481390(v24, v25, v11[32]);
    v26 = *(_QWORD *)(v10 + 16);
    v27 = *(_QWORD *)(v10 + 24);
    *(_QWORD *)(v10 + 16) = v24;
    *(_QWORD *)(v10 + 24) = v25;
    v28 = *(_BYTE *)(v10 + 32);
    *(_BYTE *)(v10 + 32) = v23;
    sub_1DA47F868(v26, v27, v28);
  }
  *(_QWORD *)(v10 + 40) = *((_QWORD *)v11 + 5);
  *(_QWORD *)(v10 + 48) = *((_QWORD *)v11 + 6);
  v65 = (id *)(v10 + 56);
  v66 = (id *)(v11 + 56);
  v67 = v11[64];
  if (*(unsigned __int8 *)(v10 + 64) == 255)
  {
    if (v67 == 255)
    {
      v73 = *v66;
      *(_BYTE *)(v10 + 64) = v11[64];
      *v65 = v73;
    }
    else
    {
      v71 = *v66;
      sub_1DA4E762C(*v66, v11[64]);
      *(_QWORD *)(v10 + 56) = v71;
      *(_BYTE *)(v10 + 64) = v67;
    }
  }
  else if (v67 == 255)
  {
    sub_1DA4E895C(v10 + 56);
    v72 = v11[64];
    *v65 = *v66;
    *(_BYTE *)(v10 + 64) = v72;
  }
  else
  {
    v68 = *v66;
    sub_1DA4E762C(*v66, v11[64]);
    v69 = *(void **)(v10 + 56);
    *(_QWORD *)(v10 + 56) = v68;
    v70 = *(_BYTE *)(v10 + 64);
    *(_BYTE *)(v10 + 64) = v67;
    sub_1DA4E7898(v69, v70);
  }
  v74 = (id *)(v10 + 72);
  v75 = (id *)(v11 + 72);
  v76 = v11[80];
  if (*(unsigned __int8 *)(v10 + 80) == 255)
  {
    if (v76 == 255)
    {
      v82 = *v75;
      *(_BYTE *)(v10 + 80) = v11[80];
      *v74 = v82;
    }
    else
    {
      v80 = *v75;
      sub_1DA4E762C(*v75, v11[80]);
      *(_QWORD *)(v10 + 72) = v80;
      *(_BYTE *)(v10 + 80) = v76;
    }
  }
  else if (v76 == 255)
  {
    sub_1DA4E895C(v10 + 72);
    v81 = v11[80];
    *v74 = *v75;
    *(_BYTE *)(v10 + 80) = v81;
  }
  else
  {
    v77 = *v75;
    sub_1DA4E762C(*v75, v11[80]);
    v78 = *(void **)(v10 + 72);
    *(_QWORD *)(v10 + 72) = v77;
    v79 = *(_BYTE *)(v10 + 80);
    *(_BYTE *)(v10 + 80) = v76;
    sub_1DA4E7898(v78, v79);
  }
  v83 = (id *)(v10 + 88);
  v84 = (id *)(v11 + 88);
  v85 = v11[96];
  if (*(unsigned __int8 *)(v10 + 96) == 255)
  {
    if (v85 == 255)
    {
      v91 = *v84;
      *(_BYTE *)(v10 + 96) = v11[96];
      *v83 = v91;
    }
    else
    {
      v89 = *v84;
      sub_1DA4E762C(*v84, v11[96]);
      *(_QWORD *)(v10 + 88) = v89;
      *(_BYTE *)(v10 + 96) = v85;
    }
  }
  else if (v85 == 255)
  {
    sub_1DA4E895C(v10 + 88);
    v90 = v11[96];
    *v83 = *v84;
    *(_BYTE *)(v10 + 96) = v90;
  }
  else
  {
    v86 = *v84;
    sub_1DA4E762C(*v84, v11[96]);
    v87 = *(void **)(v10 + 88);
    *(_QWORD *)(v10 + 88) = v86;
    v88 = *(_BYTE *)(v10 + 96);
    *(_BYTE *)(v10 + 96) = v85;
    sub_1DA4E7898(v87, v88);
  }
  v92 = (id *)(v10 + 104);
  v93 = (id *)(v11 + 104);
  v94 = v11[112];
  if (*(unsigned __int8 *)(v10 + 112) == 255)
  {
    if (v94 == 255)
    {
      v100 = *v93;
      *(_BYTE *)(v10 + 112) = v11[112];
      *v92 = v100;
    }
    else
    {
      v98 = *v93;
      sub_1DA4E762C(*v93, v11[112]);
      *(_QWORD *)(v10 + 104) = v98;
      *(_BYTE *)(v10 + 112) = v94;
    }
  }
  else if (v94 == 255)
  {
    sub_1DA4E895C(v10 + 104);
    v99 = v11[112];
    *v92 = *v93;
    *(_BYTE *)(v10 + 112) = v99;
  }
  else
  {
    v95 = *v93;
    sub_1DA4E762C(*v93, v11[112]);
    v96 = *(void **)(v10 + 104);
    *(_QWORD *)(v10 + 104) = v95;
    v97 = *(_BYTE *)(v10 + 112);
    *(_BYTE *)(v10 + 112) = v94;
    sub_1DA4E7898(v96, v97);
  }
  v101 = (id *)(v10 + 120);
  v102 = (id *)(v11 + 120);
  v103 = v11[128];
  if (*(unsigned __int8 *)(v10 + 128) == 255)
  {
    if (v103 == 255)
    {
      v109 = *v102;
      *(_BYTE *)(v10 + 128) = v11[128];
      *v101 = v109;
    }
    else
    {
      v107 = *v102;
      sub_1DA4E762C(*v102, v11[128]);
      *(_QWORD *)(v10 + 120) = v107;
      *(_BYTE *)(v10 + 128) = v103;
    }
  }
  else if (v103 == 255)
  {
    sub_1DA4E895C(v10 + 120);
    v108 = v11[128];
    *v101 = *v102;
    *(_BYTE *)(v10 + 128) = v108;
  }
  else
  {
    v104 = *v102;
    sub_1DA4E762C(*v102, v11[128]);
    v105 = *(void **)(v10 + 120);
    *(_QWORD *)(v10 + 120) = v104;
    v106 = *(_BYTE *)(v10 + 128);
    *(_BYTE *)(v10 + 128) = v103;
    sub_1DA4E7898(v105, v106);
  }
  *(_BYTE *)(v10 + 129) = v11[129];
  v110 = v12[11];
  v111 = v10 + v110;
  v112 = &v11[v110];
  v113 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 24))(v111, v112, v113);
  v114 = v12[12];
  v115 = (_QWORD *)(v10 + v114);
  v116 = &v11[v114];
  *v115 = *(_QWORD *)v116;
  v115[1] = *((_QWORD *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + v12[13]) = v11[v12[13]];
  *(_BYTE *)(v10 + v12[14]) = v11[v12[14]];
  *(_BYTE *)(v10 + v12[15]) = v11[v12[15]];
  v117 = v12[16];
  v118 = (_QWORD *)(v10 + v117);
  v119 = &v11[v117];
  *v118 = *(_QWORD *)v119;
  v118[1] = *((_QWORD *)v119 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  v120 = a3[11];
  v121 = (_QWORD *)((char *)a1 + v120);
  v122 = (_QWORD *)((char *)a2 + v120);
  v123 = *(_QWORD *)((char *)a2 + v120 + 8);
  if (*(_QWORD *)((char *)a1 + v120 + 8) >> 60 == 15)
  {
    if (v123 >> 60 != 15)
    {
      v124 = *v122;
      sub_1DA498750(v124, v123);
      *v121 = v124;
      v121[1] = v123;
      goto LABEL_75;
    }
    goto LABEL_73;
  }
  if (v123 >> 60 == 15)
  {
    sub_1DA4E89CC((uint64_t)v121);
LABEL_73:
    *(_OWORD *)v121 = *(_OWORD *)v122;
    goto LABEL_75;
  }
  v125 = *v122;
  sub_1DA498750(v125, v123);
  v126 = *v121;
  v127 = v121[1];
  *v121 = v125;
  v121[1] = v123;
  sub_1DA4986F8(v126, v127);
LABEL_75:
  v128 = a3[12];
  v129 = (char *)a1 + v128;
  v130 = (char *)a2 + v128;
  v131 = sub_1DA66C358();
  v132 = *(_QWORD *)(v131 - 8);
  v133 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v132 + 48);
  v134 = v133(v129, 1, v131);
  v135 = v133(v130, 1, v131);
  if (!v134)
  {
    if (!v135)
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 24))(v129, v130, v131);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v132 + 8))(v129, v131);
    goto LABEL_80;
  }
  if (v135)
  {
LABEL_80:
    v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v129, v130, v131);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v131);
  return a1;
}

uint64_t initializeWithTake for ChannelEntity(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v8 = a3[10];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = (int *)sub_1DA66CA0C();
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v10[1];
    *v9 = *v10;
    v9[1] = v14;
    *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
    *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
    *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
    *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
    *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
    *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
    *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
    *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
    *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
    v15 = v11[11];
    v16 = (char *)v9 + v15;
    v17 = (char *)v10 + v15;
    v18 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)v9 + v11[12]) = *(_OWORD *)((char *)v10 + v11[12]);
    *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
    *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
    *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
    *(_OWORD *)((char *)v9 + v11[16]) = *(_OWORD *)((char *)v10 + v11[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v19 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_1DA66C358();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

_QWORD *assignWithTake for ChannelEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, int *);
  int v16;
  int v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v40;
  _OWORD *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int v47;
  int v48;
  void *v49;
  _QWORD *v50;
  int v51;
  int v52;
  void *v53;
  _QWORD *v54;
  int v55;
  int v56;
  void *v57;
  _QWORD *v58;
  int v59;
  int v60;
  void *v61;
  _QWORD *v62;
  int v63;
  int v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)a1[4];
  a1[4] = a2[4];

  v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_release();
  a1[7] = a2[7];
  swift_release();
  v10 = a3[10];
  v11 = (uint64_t)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = (int *)sub_1DA66CA0C();
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15((uint64_t)v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      v18 = *((_OWORD *)v12 + 1);
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *(_OWORD *)(v11 + 16) = v18;
      *(_BYTE *)(v11 + 32) = v12[32];
      *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
      *(_QWORD *)(v11 + 56) = *((_QWORD *)v12 + 7);
      *(_BYTE *)(v11 + 64) = v12[64];
      *(_OWORD *)(v11 + 113) = *(_OWORD *)(v12 + 113);
      *(_OWORD *)(v11 + 104) = *(_OWORD *)(v12 + 104);
      *(_OWORD *)(v11 + 88) = *(_OWORD *)(v12 + 88);
      *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
      *(_BYTE *)(v11 + 129) = v12[129];
      v19 = v13[11];
      v20 = v11 + v19;
      v21 = &v12[v19];
      v22 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      *(_OWORD *)(v11 + v13[12]) = *(_OWORD *)&v12[v13[12]];
      *(_BYTE *)(v11 + v13[13]) = v12[v13[13]];
      *(_BYTE *)(v11 + v13[14]) = v12[v13[14]];
      *(_BYTE *)(v11 + v13[15]) = v12[v13[15]];
      *(_OWORD *)(v11 + v13[16]) = *(_OWORD *)&v12[v13[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1DA47F880(v11, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  v40 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = v40;
  swift_bridgeObjectRelease();
  v41 = v12 + 16;
  v42 = *(unsigned __int8 *)(v11 + 32);
  if (v42 != 255)
  {
    v43 = v12[32];
    if (v43 != 255)
    {
      v44 = *(_QWORD *)(v11 + 16);
      v45 = *(_QWORD *)(v11 + 24);
      *(_OWORD *)(v11 + 16) = *v41;
      *(_BYTE *)(v11 + 32) = v43;
      sub_1DA47F868(v44, v45, v42);
      goto LABEL_25;
    }
    sub_1DA4E8928(v11 + 16);
  }
  *(_OWORD *)(v11 + 16) = *v41;
  *(_BYTE *)(v11 + 32) = v12[32];
LABEL_25:
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
  v46 = v12 + 56;
  v47 = *(unsigned __int8 *)(v11 + 64);
  if (v47 != 255)
  {
    v48 = v12[64];
    if (v48 != 255)
    {
      v49 = *(void **)(v11 + 56);
      *(_QWORD *)(v11 + 56) = *v46;
      *(_BYTE *)(v11 + 64) = v48;
      sub_1DA4E7898(v49, v47);
      goto LABEL_30;
    }
    sub_1DA4E895C(v11 + 56);
  }
  *(_QWORD *)(v11 + 56) = *v46;
  *(_BYTE *)(v11 + 64) = v12[64];
LABEL_30:
  v50 = v12 + 72;
  v51 = *(unsigned __int8 *)(v11 + 80);
  if (v51 != 255)
  {
    v52 = v12[80];
    if (v52 != 255)
    {
      v53 = *(void **)(v11 + 72);
      *(_QWORD *)(v11 + 72) = *v50;
      *(_BYTE *)(v11 + 80) = v52;
      sub_1DA4E7898(v53, v51);
      goto LABEL_35;
    }
    sub_1DA4E895C(v11 + 72);
  }
  *(_QWORD *)(v11 + 72) = *v50;
  *(_BYTE *)(v11 + 80) = v12[80];
LABEL_35:
  v54 = v12 + 88;
  v55 = *(unsigned __int8 *)(v11 + 96);
  if (v55 != 255)
  {
    v56 = v12[96];
    if (v56 != 255)
    {
      v57 = *(void **)(v11 + 88);
      *(_QWORD *)(v11 + 88) = *v54;
      *(_BYTE *)(v11 + 96) = v56;
      sub_1DA4E7898(v57, v55);
      goto LABEL_40;
    }
    sub_1DA4E895C(v11 + 88);
  }
  *(_QWORD *)(v11 + 88) = *v54;
  *(_BYTE *)(v11 + 96) = v12[96];
LABEL_40:
  v58 = v12 + 104;
  v59 = *(unsigned __int8 *)(v11 + 112);
  if (v59 != 255)
  {
    v60 = v12[112];
    if (v60 != 255)
    {
      v61 = *(void **)(v11 + 104);
      *(_QWORD *)(v11 + 104) = *v58;
      *(_BYTE *)(v11 + 112) = v60;
      sub_1DA4E7898(v61, v59);
      goto LABEL_45;
    }
    sub_1DA4E895C(v11 + 104);
  }
  *(_QWORD *)(v11 + 104) = *v58;
  *(_BYTE *)(v11 + 112) = v12[112];
LABEL_45:
  v62 = v12 + 120;
  v63 = *(unsigned __int8 *)(v11 + 128);
  if (v63 == 255)
  {
LABEL_49:
    *(_QWORD *)(v11 + 120) = *v62;
    *(_BYTE *)(v11 + 128) = v12[128];
    goto LABEL_50;
  }
  v64 = v12[128];
  if (v64 == 255)
  {
    sub_1DA4E895C(v11 + 120);
    goto LABEL_49;
  }
  v65 = *(void **)(v11 + 120);
  *(_QWORD *)(v11 + 120) = *v62;
  *(_BYTE *)(v11 + 128) = v64;
  sub_1DA4E7898(v65, v63);
LABEL_50:
  *(_BYTE *)(v11 + 129) = v12[129];
  v66 = v13[11];
  v67 = v11 + v66;
  v68 = &v12[v66];
  v69 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v67, v68, v69);
  v70 = v13[12];
  v71 = (_QWORD *)(v11 + v70);
  v72 = &v12[v70];
  v74 = *(_QWORD *)v72;
  v73 = *((_QWORD *)v72 + 1);
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + v13[13]) = v12[v13[13]];
  *(_BYTE *)(v11 + v13[14]) = v12[v13[14]];
  *(_BYTE *)(v11 + v13[15]) = v12[v13[15]];
  v75 = v13[16];
  v76 = (_QWORD *)(v11 + v75);
  v77 = &v12[v75];
  v79 = *(_QWORD *)v77;
  v78 = *((_QWORD *)v77 + 1);
  *v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
LABEL_7:
  v24 = a3[11];
  v25 = (uint64_t)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)((char *)a1 + v24 + 8);
  if (v27 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v25 = *(_OWORD *)v26;
    goto LABEL_12;
  }
  v28 = *((_QWORD *)v26 + 1);
  if (v28 >> 60 == 15)
  {
    sub_1DA4E89CC(v25);
    goto LABEL_10;
  }
  v29 = *(_QWORD *)v25;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v28;
  sub_1DA4986F8(v29, v27);
LABEL_12:
  v30 = a3[12];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_1DA66C358();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_17;
  }
  if (v37)
  {
LABEL_17:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA60957C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 40);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ChannelEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA609630(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 40);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1DA6096D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DA56DA8C(319, (unint64_t *)&qword_1EDAE4110, (void (*)(uint64_t))MEMORY[0x1E0D7D7F0]);
  if (v0 <= 0x3F)
  {
    sub_1DA56DA8C(319, (unint64_t *)&qword_1EDAE0148, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1DA6097BC()
{
  return sub_1DA4841D4(&qword_1F026D928, &qword_1F026D930, MEMORY[0x1E0CA87C8]);
}

uint64_t sub_1DA6097E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChannelEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t UpdateEpisodeDownloadBehavior.init(contentIDs:newBehavior:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

unint64_t static UpdateEpisodeDownloadBehavior.kind.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t UpdateEpisodeDownloadBehavior.contentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UpdateEpisodeDownloadBehavior.newBehavior.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void sub_1DA609860(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x80000001DA683790;
}

_QWORD *initializeBufferWithCopyOfBuffer for UpdateEpisodeDownloadBehavior(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for UpdateEpisodeDownloadBehavior()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for UpdateEpisodeDownloadBehavior(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for UpdateEpisodeDownloadBehavior(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for UpdateEpisodeDownloadBehavior()
{
  return &type metadata for UpdateEpisodeDownloadBehavior;
}

uint64_t BaseObjectGraph.addingMetricsFieldsContext(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v2 = sub_1DA66F124();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66EBD8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, a1, v2, v8);
  sub_1DA66EBCC();
  v11 = sub_1DA66EE0C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v11;
}

uint64_t BaseObjectGraph.transformingMetricsFieldsContext(with:)(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  void (*v19)(char *);

  v18 = a2;
  v19 = a1;
  v2 = sub_1DA66EBD8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66F124();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v18 - v14;
  sub_1DA66EDC4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DA66F118();
    sub_1DA609C04((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  }
  v19(v15);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  sub_1DA66EBCC();
  v16 = sub_1DA66EE0C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v16;
}

uint64_t sub_1DA609C04(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BaseObjectGraph.addingClickLocationTracker(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66F124();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v22 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - v9;
  v23 = sub_1DA66EBD8();
  v11 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v14 = a1;
  }
  else
  {
    type metadata accessor for ClickLocationTracker();
    v14 = swift_allocObject();
    v15 = sub_1DA63CFEC(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C88);
    v16 = swift_allocObject();
    *(_DWORD *)(v16 + 24) = 0;
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v14 + 16) = v16;
  }
  type metadata accessor for ClickLocationTracker();
  v24 = v14;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v13, v23);
  sub_1DA66BE60();
  sub_1DA66EDC4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1DA66F118();
    sub_1DA609C04((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  }
  v24 = v14;
  if (qword_1EDAE49B0 != -1)
    swift_once();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49E8);
  __swift_project_value_buffer(v18, (uint64_t)qword_1EDAE4990);
  sub_1DA66F10C();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v10, v5);
  sub_1DA66EBCC();
  v19 = sub_1DA66EE0C();
  v17(v13, v23);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  swift_release();
  swift_release_n();
  return v19;
}

uint64_t BaseObjectGraph.addingChildClickLocation(_:)(uint64_t a1)
{
  return sub_1DA609F44(a1, (void (*)(_QWORD *))MetricsFieldsContext.addChildClickLocation(_:));
}

uint64_t BaseObjectGraph.addingSiblingClickLocation(_:)(uint64_t a1)
{
  return sub_1DA609F44(a1, (void (*)(_QWORD *))MetricsFieldsContext.addSiblingClickLocation(_:));
}

uint64_t BaseObjectGraph.replacingClickLocation(with:)(uint64_t a1)
{
  return sub_1DA609F44(a1, (void (*)(_QWORD *))MetricsFieldsContext.replacingClickLocation(with:));
}

uint64_t sub_1DA609F44(uint64_t a1, void (*a2)(_QWORD *))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void (*v22)(_QWORD *);
  uint64_t v23;
  _QWORD v24[3];
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v22 = a2;
  v23 = sub_1DA66EBD8();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66F124();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - v14;
  v16 = *(_QWORD *)(a1 + 8);
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 56);
  v24[0] = *(_QWORD *)a1;
  v24[1] = v16;
  v24[2] = v17;
  v25 = *(_OWORD *)(a1 + 24);
  v26 = *(_OWORD *)(a1 + 40);
  v27 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DA66EDC4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DA66F118();
    sub_1DA609C04((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  }
  v22(v24);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  sub_1DA66EBCC();
  v19 = sub_1DA66EE0C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t BaseObjectGraph.addingImpressionsTracker(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49F0);
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x1E0C80A78](v2);
  v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66F124();
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v24 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - v10;
  v12 = sub_1DA66EBD8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66F34C();
  v28 = a1;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v16 = *(void (**)(char *, uint64_t))(v13 + 8);
  v16(v15, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4968);
  v28 = a1;
  v29 = MEMORY[0x1E0D40B38];
  swift_retain_n();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v23 = v16;
  v16(v15, v12);
  swift_release();
  swift_release();
  sub_1DA66BE60();
  sub_1DA66EDC4();
  v17 = v22;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v6, 1, v7) == 1)
  {
    sub_1DA66F118();
    sub_1DA609C04((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v11, v6, v7);
  }
  v18 = v17;
  v28 = a1;
  v29 = MEMORY[0x1E0D40B38];
  sub_1DA66BE60();
  v19 = v25;
  sub_1DA66F0F4();
  sub_1DA66F10C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v27);
  swift_unknownObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v24, v11, v7);
  sub_1DA66EBCC();
  v20 = sub_1DA66EE0C();
  v23(v15, v12);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v7);
  swift_release();
  swift_release();
  return v20;
}

uint64_t BaseObjectGraph.addingImpressionsTracker(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v32 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49F0);
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  MEMORY[0x1E0C80A78](v1);
  v37 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66F124();
  v31 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v30 - v8;
  v9 = sub_1DA66EBD8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66F328();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v30 - v18;
  sub_1DA66F34C();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v20(v19, v32, v13);
  v20(v16, (uint64_t)v19, v13);
  v21 = sub_1DA66F358();
  v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23 = v31;
  v22(v19, v13);
  v40 = v21;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v12, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4968);
  v40 = v21;
  v41 = MEMORY[0x1E0D40B38];
  swift_retain_n();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v34 = v9;
  v24(v12, v9);
  swift_release();
  v25 = (uint64_t)v33;
  sub_1DA66EDC4();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v25, 1, v5) == 1)
  {
    v26 = v36;
    sub_1DA66F118();
    sub_1DA609C04(v25);
  }
  else
  {
    v26 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v36, v25, v5);
  }
  v40 = v21;
  v41 = MEMORY[0x1E0D40B38];
  sub_1DA66BE60();
  v27 = v37;
  sub_1DA66F0F4();
  sub_1DA66F10C();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
  swift_unknownObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v35, v26, v5);
  sub_1DA66EBCC();
  v28 = sub_1DA66EE0C();
  v24(v12, v34);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v5);
  swift_release();
  swift_release_n();
  return v28;
}

uint64_t BaseObjectGraph.addingImpressionsCalculator(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[2];

  v2 = sub_1DA66EBD8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DynamicImpressionsCalculator();
  v8[1] = a1;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  v6 = sub_1DA66EE0C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t BaseObjectGraph.addingImpressionsCalculator(with:)(uint64_t a1)
{
  void (*v1)(char *, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v55 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49F0);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  MEMORY[0x1E0C80A78](v2);
  v52 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  MEMORY[0x1E0C80A78](v4);
  v51 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66F124();
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v45 - v10;
  v11 = sub_1DA66F328();
  v46 = *(_QWORD *)(v11 - 8);
  v47 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - v15;
  v58 = sub_1DA66EBD8();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DA66F16C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66F34C();
  v57 = v1;
  sub_1DA66EDC4();
  v23 = v59;
  if (v59)
  {
    type metadata accessor for DynamicImpressionsCalculator();
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v55, v19);
    v24 = (void *)objc_opt_self();
    sub_1DA66BE60();
    v25 = objc_msgSend(v24, sel_defaultCenter);
    v26 = sub_1DA5A8EF4((uint64_t)v22, v23, v25);
    swift_release();

    v59 = v26;
    sub_1DA66BE60();
    sub_1DA66EBCC();
    v27 = sub_1DA66EE0C();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v58);
  }
  else
  {
    v45 = v8;
    sub_1DA66F31C();
    v29 = v46;
    v28 = v47;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v13, v16, v47);
    v30 = sub_1DA66F358();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v28);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v55, v19);
    v31 = (void *)objc_opt_self();
    sub_1DA66BE60();
    v32 = objc_msgSend(v31, sel_defaultCenter);
    v55 = sub_1DA5A8EF4((uint64_t)v22, v30, v32);
    swift_release();

    v59 = v30;
    sub_1DA66BE60();
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    v33 = *(void (**)(char *, uint64_t))(v56 + 8);
    v34 = v58;
    v33(v18, v58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4968);
    v35 = MEMORY[0x1E0D40B38];
    v59 = v30;
    v60 = MEMORY[0x1E0D40B38];
    swift_retain_n();
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    v57 = v33;
    v33(v18, v34);
    swift_release();
    v37 = v50;
    v36 = (uint64_t)v51;
    sub_1DA66EDC4();
    v38 = v49;
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v36, 1, v37);
    v40 = v48;
    if (v39 == 1)
    {
      sub_1DA66F118();
      sub_1DA609C04(v36);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v48, v36, v37);
    }
    type metadata accessor for DynamicImpressionsCalculator();
    v59 = v30;
    v60 = v35;
    sub_1DA66BE60();
    v41 = v52;
    sub_1DA66F0F4();
    sub_1DA66F10C();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v41, v54);
    swift_unknownObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v45, v40, v37);
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    v42 = v57;
    v43 = v58;
    v57(v18, v58);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
    swift_release();
    swift_release();
    v59 = v55;
    sub_1DA66BE60();
    sub_1DA66EBCC();
    v27 = sub_1DA66EE0C();
    v42(v18, v43);
    swift_release();
  }
  swift_release();
  swift_release();
  return v27;
}

uint64_t BaseObjectGraph.addingPageContextTracker(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66F124();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v20 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v21 = sub_1DA66EBD8();
  v11 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v14 = a1;
  }
  else
  {
    sub_1DA66D3F0();
    v14 = sub_1DA66D3D8();
  }
  sub_1DA66D3F0();
  v22 = v14;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v15 = *(void (**)(char *, uint64_t))(v11 + 8);
  v15(v13, v21);
  sub_1DA66BE60();
  sub_1DA66EDC4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1DA66F118();
    sub_1DA609C04((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  }
  v22 = v14;
  if (qword_1F0268570 != -1)
    swift_once();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B900);
  __swift_project_value_buffer(v16, (uint64_t)qword_1F026B8E8);
  sub_1DA66F10C();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v20, v10, v5);
  sub_1DA66EBCC();
  v17 = sub_1DA66EE0C();
  v15(v13, v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  swift_release();
  swift_release_n();
  return v17;
}

uint64_t BaseObjectGraph.addingSearchFiltersSource(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66F124();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v21 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  v22 = sub_1DA66EBD8();
  v11 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v14 = a1;
  }
  else
  {
    type metadata accessor for SearchFiltersSource();
    v14 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C58);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = 0u;
    *(_OWORD *)(v15 + 32) = 0u;
    *(_DWORD *)(v15 + 48) = 0;
    *(_QWORD *)(v14 + 16) = v15;
  }
  type metadata accessor for SearchFiltersSource();
  v23 = v14;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v16 = *(void (**)(char *, uint64_t))(v11 + 8);
  v16(v13, v22);
  sub_1DA66BE60();
  sub_1DA66EDC4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1DA66F118();
    sub_1DA609C04((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  }
  v23 = v14;
  if (qword_1EDAE4988 != -1)
    swift_once();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49E0);
  __swift_project_value_buffer(v17, (uint64_t)qword_1EDAE4970);
  sub_1DA66F10C();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v21, v10, v5);
  sub_1DA66EBCC();
  v18 = sub_1DA66EE0C();
  v16(v13, v22);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  swift_release();
  swift_release_n();
  return v18;
}

ValueMetadata *type metadata accessor for QueryError()
{
  return &type metadata for QueryError;
}

_QWORD *sub_1DA60B488(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = (_BYTE *)(swift_bridgeObjectRetain() + 48);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (*v2 == 1)
    {
      v6 = (void *)*((_QWORD *)v2 - 2);
      v5 = (void *)*((_QWORD *)v2 - 1);
      sub_1DA4FAB3C(v6, v5, 1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1DA4981C8(0, v3[2] + 1, 1, v3);
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
        v3 = sub_1DA4981C8((_QWORD *)(v7 > 1), v8 + 1, 1, v3);
      v3[2] = v8 + 1;
      v4 = &v3[2 * v8];
      v4[4] = v6;
      v4[5] = v5;
    }
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t StationEntity.StationEntityQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  *a1 = result;
  return result;
}

uint64_t StationEntity.StationEntityQuery.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t StationEntity.StationEntityQuery.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

void (*StationEntity.StationEntityQuery.objectGraph.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7AE4;
}

uint64_t StationEntity.StationEntityQuery.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

id StationEntity.StationEntityQuery.predicate(forUuids:)()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1DA66FC4C();
  v2 = objc_msgSend(v0, sel_predicateForStationsWithUUIDs_, v1);

  return v2;
}

uint64_t StationEntity.StationEntityQuery.suggestedEntities()()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1DA670078();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v3 = sub_1DA66FB98();
  v1[8] = v3;
  v1[9] = *(_QWORD *)(v3 - 8);
  v4 = swift_task_alloc();
  v5 = *v0;
  v1[10] = v4;
  v1[11] = v5;
  return swift_task_switch();
}

uint64_t sub_1DA60B7E8()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BE60();
  sub_1DA66BC98();
  swift_release();
  v0[12] = v0[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA60B888;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA60B888()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA60B8F4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[15] = v0[2];
  swift_getObjectType();
  sub_1DA4EE300();
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  *v1 = v0;
  v1[1] = sub_1DA60B974;
  return sub_1DA6700C0();
}

uint64_t sub_1DA60B974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DA60B9F8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v1 = (void *)v0[17];
  v3 = v0[6];
  v2 = v0[7];
  v4 = v0[5];
  v5 = swift_allocObject();
  v0[18] = v5;
  *(_QWORD *)(v5 + 16) = v1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0C977C0], v4);
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc();
  v0[19] = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D970);
  *v7 = v0;
  v7[1] = sub_1DA60BAD0;
  return sub_1DA67009C();
}

uint64_t sub_1DA60BAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA60BB64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA60BBC0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA60BC08()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DA60BC50(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  uint64_t *v24;
  id v25;
  uint64_t v26;

  v24 = a1;
  v1 = type metadata accessor for StationEntity();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (_QWORD *)((char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66F8BC();
  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DA67B2A0;
  sub_1DA66F8BC();
  v9 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v10 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithKey_ascending_, v10, 1);

  *(_QWORD *)(v8 + 32) = v11;
  v26 = v8;
  sub_1DA66FAB4();
  sub_1DA47D774(0, &qword_1F026DBD0);
  v12 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v12);

  sub_1DA47D774(0, &qword_1F026DA58);
  v13 = v25;
  v14 = sub_1DA670090();
  if (v13)
  {

    return;
  }
  v15 = v14;
  if (!(v14 >> 62))
  {
    v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = v24;
    if (v16)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease();

    *v17 = MEMORY[0x1E0DEE9D8];
    return;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  v17 = v24;
  if (!v16)
    goto LABEL_15;
LABEL_5:
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1DA50A094(0, v16 & ~(v16 >> 63), 0);
  if (v16 < 0)
  {
    __break(1u);
  }
  else
  {
    v23[1] = 0;
    v25 = v7;
    v18 = 0;
    v19 = v26;
    do
    {
      if ((v15 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x1DF09EE48](v18, v15);
      else
        v20 = *(id *)(v15 + 8 * v18 + 32);
      StationEntity.init(model:)(v20, v4);
      v26 = v19;
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1DA50A094(v21 > 1, v22 + 1, 1);
        v19 = v26;
      }
      ++v18;
      *(_QWORD *)(v19 + 16) = v22 + 1;
      sub_1DA574DAC((uint64_t)v4, v19+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v22);
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();

    *v24 = v19;
  }
}

uint64_t sub_1DA60BF98()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DA60BFBC(uint64_t *a1@<X8>)
{
  sub_1DA60BC50(a1);
}

uint64_t sub_1DA60BFD4()
{
  return sub_1DA60C490((unint64_t *)&qword_1F0269A18, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60BFF8()
{
  return sub_1DA60C490(&qword_1F026D980, (uint64_t)&protocol conformance descriptor for StationEntity);
}

id sub_1DA60C01C()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1DA66FC4C();
  v2 = objc_msgSend(v0, sel_predicateForStationsWithUUIDs_, v1);

  return v2;
}

unint64_t sub_1DA60C090()
{
  unint64_t result;

  result = qword_1F026D9C0;
  if (!qword_1F026D9C0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for StationEntity.StationEntityQuery, &type metadata for StationEntity.StationEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026D9C0);
  }
  return result;
}

unint64_t sub_1DA60C0D8()
{
  unint64_t result;

  result = qword_1F026D9C8[0];
  if (!qword_1F026D9C8[0])
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for StationEntity.StationEntityQuery, &type metadata for StationEntity.StationEntityQuery);
    atomic_store(result, qword_1F026D9C8);
  }
  return result;
}

uint64_t sub_1DA60C11C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = *v1;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F026DA10 + dword_1F026DA10);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4B1798;
  return v7(a1, v4);
}

uint64_t sub_1DA60C188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_QWORD *)(v2 + 24) = a2;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F026DA18 + dword_1F026DA18);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v5;
  *v5 = v2;
  v5[1] = sub_1DA60C1F8;
  return v7(a1, a2);
}

uint64_t sub_1DA60C1F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  _QWORD *v8;

  v8 = (_QWORD *)*v2;
  v8[5] = a1;
  v8[6] = a2;
  swift_task_dealloc();
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F026DA20 + dword_1F026DA20);
  v5 = (_QWORD *)swift_task_alloc();
  v8[7] = v5;
  *v5 = v8;
  v5[1] = sub_1DA60C28C;
  return v7(a1, a2, v8[3]);
}

uint64_t sub_1DA60C28C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA60C308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  sub_1DA66FBEC();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = sub_1DA640AD4(*(_QWORD *)(v0 + 40));
    swift_bridgeObjectRelease();
    sub_1DA60D840((uint64_t *)(v0 + 16), v3, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_1DA60C3D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA60C3DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1DA527068;
  return StationEntity.StationEntityQuery.suggestedEntities()();
}

unint64_t sub_1DA60C428()
{
  unint64_t result;

  result = qword_1F026D9E0;
  if (!qword_1F026D9E0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for StationEntity.StationEntityQuery, &type metadata for StationEntity.StationEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026D9E0);
  }
  return result;
}

uint64_t sub_1DA60C46C()
{
  return sub_1DA60C490(&qword_1F0269550, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60C490(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StationEntity();
    result = MEMORY[0x1DF0A039C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DA60C4D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F026D9F0[0];
  if (!qword_1F026D9F0[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1F026D970);
    v2 = sub_1DA60C490(&qword_1F0269550, (uint64_t)&protocol conformance descriptor for StationEntity);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0C91CE0], v1, &v2);
    atomic_store(result, qword_1F026D9F0);
  }
  return result;
}

uint64_t sub_1DA60C548()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1DA60C5CC();
  *v1 = v0;
  v1[1] = sub_1DA4AD77C;
  return sub_1DA66BD34();
}

ValueMetadata *type metadata accessor for StationEntity.StationEntityQuery()
{
  return &type metadata for StationEntity.StationEntityQuery;
}

unint64_t sub_1DA60C5CC()
{
  unint64_t result;

  result = qword_1F026DA08;
  if (!qword_1F026DA08)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for StationEntity.StationEntityQuery, &type metadata for StationEntity.StationEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026DA08);
  }
  return result;
}

uint64_t sub_1DA60C610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_1DA60C628()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = v0[3];
  sub_1DA66BE60();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA4841D4(&qword_1F026DE40, &qword_1EDAE5340, MEMORY[0x1E0DEAF50]);
  *v1 = v0;
  v1[1] = sub_1DA60C6D8;
  return sub_1DA66FCF4();
}

uint64_t sub_1DA60C6D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = v1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA60C73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (id *)(v1 + 48);
    do
    {
      if (*(_BYTE *)v4 == 2)
      {
        v5 = *(v4 - 2);
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
      v4 += 3;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v2 = v9;
    v1 = *(_QWORD *)(v0 + 48);
  }
  v6 = sub_1DA60B488(v1);
  swift_bridgeObjectRelease();
  v7 = sub_1DA5B95EC((uint64_t)v6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v7);
}

uint64_t sub_1DA60C854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  v4 = sub_1DA66DEF4();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA60C8B8()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  swift_bridgeObjectRetain_n();
  sub_1DA66BC98();
  sub_1DA66EE30();
  sub_1DA66F580();
  swift_release();
  v1 = objc_msgSend(*(id *)(v0 + 48), sel_privateQueueContext);
  *(_QWORD *)(v0 + 128) = v1;
  swift_unknownObjectRelease();
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F026DA30 + dword_1F026DA30);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v2;
  *v2 = v0;
  v2[1] = sub_1DA60C9B8;
  return v4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), (uint64_t)v1);
}

uint64_t sub_1DA60C9B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA60CA38()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA60CA88()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = (_QWORD *)swift_task_alloc();
  *v2 = &type metadata for StationEntity.StationEntityQuery;
  v2[1] = sub_1DA60DD10();
  swift_getKeyPath();
  swift_task_dealloc();
  sub_1DA66BE60();
  v3 = sub_1DA60D314(v1);
  swift_release_n();
  v4 = *(_QWORD *)(v0 + 40);
  if (*(_QWORD *)(v4 + 16) && (v5 = v3[2]) != 0)
  {
    swift_bridgeObjectRetain();
    v6 = v3 + 5;
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      swift_bridgeObjectRetain();
      sub_1DA625D70(v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    v4 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 64) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0000);
  sub_1DA4841D4((unint64_t *)&unk_1F026DA48, &qword_1EDAE0000, MEMORY[0x1E0DEB3E0]);
  if ((sub_1DA66FCDC() & 1) != 0)
  {
    sub_1DA66DE28();
    v9 = sub_1DA66DEDC();
    v10 = sub_1DA66FDA8();
    v11 = os_log_type_enabled(v9, v10);
    v13 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 104);
    if (v11)
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v22 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v17 = sub_1DA66FC64();
      v21 = v14;
      v19 = v18;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 72) = sub_1DA49AD00(v17, v19, &v22);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v9, v10, "Failed to find requested local episodes with identifiers: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v16, -1, -1);
      MEMORY[0x1DF0A0474](v15, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v21);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
}

uint64_t sub_1DA60CDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA60CDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = sub_1DA66F8BC();
  v3 = v2;
  *(_QWORD *)(v0 + 48) = v2;
  sub_1DA66BC98();
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  v4 = sub_1DA66DCCC();
  swift_bridgeObjectRelease();
  if ((sub_1DA66DCD8() & 1) != 0)
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v5;
    *v5 = v0;
    v5[1] = sub_1DA60CEE8;
    return sub_1DA5901C8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1, v3);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v0 + 8))(v4, 0, 0);
  }
}

uint64_t sub_1DA60CEE8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA60CF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    v2 = 0;
    v3 = 2;
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 24);
    v2 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRetain();
    v3 = 1;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v1, v2, v3);
}

uint64_t sub_1DA60CFB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_1DA66D6E4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DA60D044(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  v3 = type metadata accessor for StationEntity();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA47D774(0, &qword_1F026DA58);
  v7 = a1;
  v8 = sub_1DA670090();
  if (v1)
    return v7;
  v9 = v8;
  if (!(v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_4;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_4:
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1DA50A094(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v16[1] = 0;
    v12 = 0;
    v7 = v17;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1DF09EE48](v12, v9);
      else
        v13 = *(id *)(v9 + 8 * v12 + 32);
      StationEntity.init(model:)(v13, v6);
      v17 = v7;
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1DA50A094(v14 > 1, v15 + 1, 1);
        v7 = v17;
      }
      ++v12;
      *(_QWORD *)(v7 + 16) = v15 + 1;
      sub_1DA574DAC((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA60D230(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = *a2;
  v4 = a2[1];
  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v7;
  *v7 = v3;
  v7[1] = sub_1DA60D2A4;
  v7[4] = v4;
  v7[5] = v6;
  v7[3] = v5;
  return swift_task_switch();
}

uint64_t sub_1DA60D2A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *v4;
  v9 = *v4;
  swift_task_dealloc();
  if (!v3)
  {
    v10 = *(_QWORD *)(v8 + 16);
    *(_QWORD *)v10 = a1;
    *(_QWORD *)(v10 + 8) = a2;
    *(_BYTE *)(v10 + 16) = a3;
  }
  return (*(uint64_t (**)(void))(v9 + 8))();
}

_QWORD *sub_1DA60D314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(type metadata accessor for StationEntity() - 8);
  v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v5 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    swift_getAtKeyPath();
    if (v12)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1DA4981C8(0, v6[2] + 1, 1, v6);
      v9 = v6[2];
      v8 = v6[3];
      if (v9 >= v8 >> 1)
        v6 = sub_1DA4981C8((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      v6[2] = v9 + 1;
      v7 = &v6[2 * v9];
      v7[4] = v11;
      v7[5] = v12;
    }
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA60D44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_1DA670078();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA60D4B0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v18;

  v1 = v0[7];
  v18 = v0[8];
  v2 = (void *)v0[5];
  v3 = v0[6];
  sub_1DA66F8BC();
  v4 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v5 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);
  v0[9] = v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DA67ABA0;
  sub_1DA47D774(0, &qword_1EDADE720);
  *(_QWORD *)(v7 + 32) = sub_1DA66FE08();
  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_1DA66FC4C();
  v10 = objc_msgSend(v8, sel_predicateForStationsWithUUIDs_, v9);

  *(_QWORD *)(v7 + 40) = v10;
  sub_1DA66FAB4();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
  v11 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v11);

  objc_msgSend(v6, sel_setPredicate_, v12);
  v13 = swift_allocObject();
  v0[10] = v13;
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v18, *MEMORY[0x1E0C977C0], v3);
  v14 = v2;
  v15 = v6;
  v16 = (_QWORD *)swift_task_alloc();
  v0[11] = v16;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D970);
  *v16 = v0;
  v16[1] = sub_1DA60D72C;
  return sub_1DA67009C();
}

uint64_t sub_1DA60D72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA60D7C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA60D804()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DA60D840(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  unint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v50 = a3;
  v46 = a2;
  v4 = sub_1DA66C358();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StationEntity();
  v53 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v49 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v52 = (uint64_t)&v42 - v9;
  v10 = *a1;
  v51 = *(_QWORD *)(*a1 + 16);
  if (v51)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_46;
    while (1)
    {
      v11 = 0;
      v12 = v50;
      *a1 = v10;
      v13 = v12 & 0xFFFFFFFFFFFFFF8;
      if (v12 < 0)
        v13 = v12;
      v45 = v13;
      v47 = v12 & 0xC000000000000001;
      v48 = v12 + 56;
      while (v11 < *(_QWORD *)(*a1 + 16))
      {
        v14 = v52;
        v15 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
        v16 = *(_QWORD *)(v53 + 72) * v11;
        sub_1DA50C4C0(*a1 + v15 + v16, v52);
        v10 = *(_QWORD *)(v14 + 32);
        v17 = (id)v10;
        sub_1DA60DCB8(v14);
        if (v10)
        {
          sub_1DA47D774(0, (unint64_t *)&qword_1EDAE4C00);
          if (v47)
          {
            v10 = (uint64_t)v17;
            v18 = sub_1DA6703CC();

            if ((v18 & 1) != 0)
              goto LABEL_12;
          }
          else if (*(_QWORD *)(v50 + 16))
          {
            v29 = v50;
            v10 = (uint64_t)v17;
            v30 = sub_1DA670198();
            v31 = -1 << *(_BYTE *)(v29 + 32);
            v32 = v30 & ~v31;
            if (((*(_QWORD *)(v48 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
            {
              v33 = *(id *)(*(_QWORD *)(v50 + 48) + 8 * v32);
              v10 = sub_1DA6701A4();

              if ((v10 & 1) != 0)
              {
LABEL_12:
                v19 = *a1;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *a1 = v19;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  v19 = sub_1DA626280(v19);
                  *a1 = v19;
                }
                if (v11 >= *(_QWORD *)(v19 + 16))
                  goto LABEL_44;
                v21 = (uint64_t *)(v19 + v15 + v16);
                v10 = v21[4];
                if (v10
                  && (v22 = v17,
                      v23 = (id)v10,
                      v10 = sub_1DA6701A4(),
                      v23,
                      v22,
                      (v10 & 1) != 0))
                {
                  v24 = objc_msgSend(v22, sel_URIRepresentation);
                  v25 = v42;
                  sub_1DA66C304();

                  v26 = sub_1DA66C298();
                  v28 = v27;
                  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v44);
                  swift_bridgeObjectRelease();
                  *v21 = v26;
                  v21[1] = v28;
                  v10 = *a1;

                  *a1 = v10;
                }
                else
                {

                  *a1 = v19;
                }
                goto LABEL_7;
              }
              v34 = ~v31;
              while (1)
              {
                v32 = (v32 + 1) & v34;
                if (((*(_QWORD *)(v48 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
                  break;
                v35 = *(id *)(*(_QWORD *)(v50 + 48) + 8 * v32);
                v10 = sub_1DA6701A4();

                if ((v10 & 1) != 0)
                  goto LABEL_12;
              }
            }
          }

        }
        if (v11 >= *(_QWORD *)(*a1 + 16))
          goto LABEL_43;
        v36 = v49;
        sub_1DA50C4C0(*a1 + v15 + v16, v49);
        v37 = *(_QWORD *)(v36 + 16);
        v10 = *(_QWORD *)(v36 + 24);
        swift_bridgeObjectRetain();
        sub_1DA60DCB8(v36);
        if (v10)
        {
          if ((sub_1DA523D48(v37, v10, v46) & 1) != 0)
          {
            v38 = *a1;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v38 = sub_1DA626280(v38);
            if (v11 >= *(_QWORD *)(v38 + 16))
              goto LABEL_45;
            v39 = (uint64_t *)(v38 + v15 + v16);
            v40 = v39[3];
            if (v40)
            {
              v41 = v39[2] == v37 && v40 == v10;
              if (v41 || (sub_1DA6706D8() & 1) != 0)
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *v39 = v37;
                v39[1] = v10;
              }
            }
            swift_bridgeObjectRelease();
            *a1 = v38;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
LABEL_7:
        if (++v11 == v51)
          return;
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      v10 = sub_1DA626280(v10);
    }
  }
}

uint64_t sub_1DA60DCB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StationEntity();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA60DCF8()
{
  return 16;
}

__n128 sub_1DA60DD04(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1DA60DD10()
{
  unint64_t result;

  result = qword_1F026DA38;
  if (!qword_1F026DA38)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for StationEntity.StationEntityQuery, &type metadata for StationEntity.StationEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026DA38);
  }
  return result;
}

uint64_t sub_1DA60DD54()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA60DD80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_1DA60D044(*(_QWORD *)(v1 + 16));
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1DA60DDAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1DA60DE24;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t *))((char *)&dword_1F026DA60 + dword_1F026DA60))(a1, a2, (uint64_t *)(v3 + 16));
}

uint64_t sub_1DA60DE24()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t StationEntity.title.getter()
{
  uint64_t v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t StationEntity.init(model:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char v70[32];
  _OWORD v71[2];
  __int128 v72;
  uint64_t v73;

  v63 = a2;
  v3 = sub_1DA66C430();
  MEMORY[0x1E0C80A78](v3);
  v66 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C358();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66CA0C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v68 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v67 = (uint64_t)&v57 - v13;
  v14 = sub_1DA66C244();
  v61 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v17);
  v64 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v57 - v20;
  *(_QWORD *)&v23 = MEMORY[0x1E0C80A78](v22).n128_u64[0];
  v65 = (uint64_t)&v57 - v24;
  v62 = a1;
  v25 = objc_msgSend(a1, sel_podcasts, v23);
  if (v25)
  {
    v58 = v8;
    v59 = v6;
    v60 = v5;
    v26 = v25;
    sub_1DA66FD6C();
    v57 = v26;

    sub_1DA47E32C((unint64_t *)&qword_1F026A800, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    sub_1DA6702B8();
    if (v73)
    {
      v27 = MEMORY[0x1E0DEE9D8];
      do
      {
        sub_1DA49ACF0(&v72, v71);
        sub_1DA49ADD0((uint64_t)v71, (uint64_t)v70);
        sub_1DA47D774(0, (unint64_t *)&qword_1EDAE0080);
        if (swift_dynamicCast())
        {
          v28 = v69;
          sub_1DA670210();

        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v21, 1, 1, v9);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v21, 1, v9) == 1)
        {
          sub_1DA51C17C((uint64_t)v21);
        }
        else
        {
          v29 = v67;
          sub_1DA51C1BC((uint64_t)v21, v67);
          sub_1DA51C1BC(v29, v68);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_1DA53FE78(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
          v31 = *(_QWORD *)(v27 + 16);
          v30 = *(_QWORD *)(v27 + 24);
          if (v31 >= v30 >> 1)
            v27 = sub_1DA53FE78(v30 > 1, v31 + 1, 1, v27);
          *(_QWORD *)(v27 + 16) = v31 + 1;
          sub_1DA51C1BC(v68, v27+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v31);
        }
        sub_1DA6702B8();
      }
      while (v73);
    }
    else
    {
      v27 = MEMORY[0x1E0DEE9D8];
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v14);

    *(_QWORD *)&v72 = v27;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4B10);
    sub_1DA4841D4(&qword_1F026DA80, (uint64_t *)&unk_1EDAE4B10, MEMORY[0x1E0DEAF50]);
    if ((sub_1DA66FCDC() & 1) != 0)
    {
      ArtworkModel.init(composite:width:height:backgroundColor:)(v27, 0, 255, v65);
      v32 = v62;
      v5 = v60;
      v6 = v59;
      v8 = v58;
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    v5 = v60;
    v6 = v59;
    v8 = v58;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v65, 1, 1, v9);
  v32 = v62;
LABEL_20:
  v33 = objc_msgSend(v32, sel_objectID);
  v34 = objc_msgSend(v33, sel_URIRepresentation);

  sub_1DA66C304();
  v35 = sub_1DA66C298();
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v38 = objc_msgSend(v32, sel_uuid);
  v68 = v35;
  if (v38)
  {
    v39 = v38;
    v67 = sub_1DA66F8BC();
    v41 = v40;

  }
  else
  {
    v67 = 0;
    v41 = 0;
  }
  v42 = objc_msgSend(v32, sel_objectID);
  v43 = objc_msgSend(v32, sel_title);
  if (v43)
  {
    v44 = v43;
    v45 = sub_1DA66F8BC();
    v47 = v46;

  }
  else
  {
    v45 = 0;
    v47 = 0xE000000000000000;
  }
  objc_msgSend(v32, sel_generatedDate);
  sub_1DA66C3AC();
  v48 = objc_msgSend(v32, sel_defaultSettings);
  if (v48)
  {
    v49 = v48;
    v50 = v37;
    v51 = objc_msgSend(v48, sel_showPlayedEpisodes);

    v52 = v51 ^ 1;
  }
  else
  {
    v50 = v37;
    v52 = 1;
  }
  v54 = v63;
  v53 = v64;
  v55 = v65;
  sub_1DA51C134(v65, v64);
  StationEntity.init(id:uuid:objectID:title:dateCreated:showUnplayedEpisodes:artworkModel:artworkData:)(v68, v50, v67, v41, v42, v45, v47, v66, v54, v52, v53, 0, 0xF000000000000000);

  return sub_1DA51C17C(v55);
}

uint64_t static StationEntity.typeDisplayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66C220();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1DA66C208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1DA66C01C();
}

uint64_t StationEntity.displayRepresentation.getter()
{
  sub_1DA66BDA0();
  return sub_1DA66BF74();
}

uint64_t static StationEntity.databaseEntityName.getter()
{
  return sub_1DA66F8BC();
}

uint64_t sub_1DA60E64C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  qword_1F026DA78 = result;
  return result;
}

uint64_t static StationEntity.defaultQuery.getter@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1F02687B8 != -1)
    swift_once();
  *a1 = qword_1F026DA78;
  return sub_1DA66BE60();
}

uint64_t StationEntity.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StationEntity.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void *StationEntity.objectID.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t StationEntity.title.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*StationEntity.title.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t StationEntity.$title.getter()
{
  return sub_1DA66BDB8();
}

uint64_t StationEntity.dateCreated.getter()
{
  return sub_1DA66BDA0();
}

uint64_t sub_1DA60E84C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  v2 = sub_1DA66C430();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  sub_1DA66BDAC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t StationEntity.dateCreated.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1DA66C430();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_1DA66BDAC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*StationEntity.dateCreated.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t StationEntity.$dateCreated.getter()
{
  return sub_1DA66BDB8();
}

uint64_t StationEntity.showUnplayedEpisodes.getter()
{
  unsigned __int8 v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t StationEntity.showUnplayedEpisodes.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*StationEntity.showUnplayedEpisodes.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t StationEntity.$showUnplayedEpisodes.getter()
{
  return sub_1DA66BDB8();
}

uint64_t StationEntity.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for StationEntity() + 40);
  return sub_1DA51C134(v3, a1);
}

uint64_t StationEntity.artworkData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for StationEntity() + 44);
  v2 = *(_QWORD *)v1;
  sub_1DA498D8C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t StationEntity.init(id:uuid:objectID:title:dateCreated:showUnplayedEpisodes:artworkModel:artworkData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, _QWORD *a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v44 = a7;
  v45 = a8;
  v42 = a3;
  v43 = a4;
  v39 = a1;
  v40 = a2;
  v48 = a12;
  v49 = a13;
  v47 = a11;
  v46 = a10;
  v16 = sub_1DA66C430();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v41 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  v22 = sub_1DA66C220();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AB8);
  sub_1DA66C208();
  a9[5] = MEMORY[0x1DF09A7B0](v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DA88);
  sub_1DA66C208();
  v38 = MEMORY[0x1DF09A7A4](v24);
  a9[6] = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AC0);
  sub_1DA66C208();
  a9[7] = MEMORY[0x1DF09A7BC](v24);
  v25 = type metadata accessor for StationEntity();
  v26 = (uint64_t)a9 + *(int *)(v25 + 40);
  v27 = sub_1DA66CA0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = (char *)a9 + *(int *)(v25 + 44);
  *(_OWORD *)v28 = xmmword_1DA6833E0;
  v29 = v40;
  *a9 = v39;
  a9[1] = v29;
  v30 = v43;
  a9[2] = v42;
  a9[3] = v30;
  a9[4] = a5;
  v50 = a6;
  v51 = v44;
  v31 = a5;
  sub_1DA66BDAC();
  v32 = v17;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v34 = v45;
  v33(v21, (uint64_t)v45, v16);
  v33(v41, (uint64_t)v21, v16);
  sub_1DA66BDAC();
  v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  v35(v21, v16);
  LOBYTE(v50) = v46;
  sub_1DA66BDAC();

  v35(v34, v16);
  sub_1DA60F8D8(v47, v26);
  result = sub_1DA49873C(*(_QWORD *)v28, *((_QWORD *)v28 + 1));
  v37 = v49;
  *(_QWORD *)v28 = v48;
  *((_QWORD *)v28 + 1) = v37;
  return result;
}

Swift::Void __swiftcall StationEntity.alignID(with:)(Swift::String with)
{
  uint64_t *v1;
  void *object;
  void *v3;
  uint64_t countAndFlagsBits;
  BOOL v5;

  object = with._object;
  v3 = (void *)v1[3];
  if (v3)
  {
    countAndFlagsBits = with._countAndFlagsBits;
    v5 = v1[2] == with._countAndFlagsBits && v3 == object;
    if (v5 || (sub_1DA6706D8() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v1 = countAndFlagsBits;
      v1[1] = (uint64_t)object;
    }
  }
}

Swift::Void __swiftcall StationEntity.alignID(with:)(NSManagedObjectID with)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  objc_class *v9;
  id v10;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)v2[4];
  if (v8)
  {
    sub_1DA47D774(0, (unint64_t *)&qword_1EDAE4C00);
    v9 = with.super.isa;
    v10 = v8;
    v11 = sub_1DA6701A4();

    if ((v11 & 1) != 0)
    {
      v12 = -[objc_class URIRepresentation](v9, sel_URIRepresentation);
      sub_1DA66C304();

      v13 = sub_1DA66C298();
      v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      *v2 = v13;
      v2[1] = v15;
    }
  }
}

uint64_t sub_1DA60EFA4@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1F02687B8 != -1)
    swift_once();
  *a1 = qword_1F026DA78;
  return sub_1DA66BE60();
}

uint64_t sub_1DA60EFF8()
{
  return sub_1DA66F8BC();
}

uint64_t sub_1DA60F00C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66C220();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1DA66C208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1DA66C01C();
}

uint64_t sub_1DA60F0F0()
{
  sub_1DA47E32C((unint64_t *)&qword_1F0269A18, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
  return sub_1DA66BCEC();
}

uint64_t sub_1DA60F140()
{
  sub_1DA66BDA0();
  return sub_1DA66BF74();
}

uint64_t sub_1DA60F17C()
{
  sub_1DA47E32C(&qword_1F026DAC8, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
  return sub_1DA66C028();
}

uint64_t StationEntity.mediaRepresentation.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[4] = a1;
  v2[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v2[6] = swift_task_alloc();
  v3 = sub_1DA66BDF4();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = type metadata accessor for StationEntity();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA60F274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 24);
  sub_1DA50C4C0(v1, *(_QWORD *)(v0 + 88));
  v3 = *(_QWORD *)(v0 + 88);
  if (!v2)
    swift_bridgeObjectRetain();
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  sub_1DA47F880(v3, (uint64_t (*)(_QWORD))type metadata accessor for StationEntity);
  sub_1DA66BDA0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x1E0C90C80], v7);
  v10 = (uint64_t *)(v9 + *(int *)(v4 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
  sub_1DA498D8C(v12, v11);
  sub_1DA66BE00();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA60F3C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return StationEntity.mediaRepresentation.getter(a1);
}

uint64_t StationEntity.prepare(asPartOf:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 56) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v2;
  *v2 = v1;
  v2[1] = sub_1DA60F494;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA60F494()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;

  v2 = (_QWORD *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = v2[7];
  v5 = type metadata accessor for StationEntity();
  v2[10] = v5;
  v6 = v4 + *(int *)(v5 + 40);
  v8 = (char *)&dword_1F026DD00 + dword_1F026DD00;
  v7 = (_QWORD *)swift_task_alloc();
  v2[11] = v7;
  *v7 = v2;
  v7[1] = sub_1DA60F56C;
  return ((uint64_t (*)(uint64_t, _QWORD *))v8)(v6, v2 + 2);
}

uint64_t sub_1DA60F56C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 104) = a2;
    *(_QWORD *)(v6 + 112) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA60F5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v5 = v4 + *(int *)(v3 + 44);
  sub_1DA49873C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA60F640()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA60F674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v3[7] = v2;
  v3[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  v4 = (_QWORD *)swift_task_alloc();
  v3[9] = v4;
  *v4 = v3;
  v4[1] = sub_1DA60F6F4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA60F6F4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  char *v6;

  v2 = (_QWORD *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = v2[7] + *(int *)(v2[8] + 40);
  v6 = (char *)&dword_1F026DD00 + dword_1F026DD00;
  v5 = (_QWORD *)swift_task_alloc();
  v2[11] = v5;
  *v5 = v2;
  v5[1] = sub_1DA60F7C0;
  return ((uint64_t (*)(uint64_t, _QWORD *))v6)(v4, v2 + 2);
}

uint64_t sub_1DA60F7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 104) = a2;
    *(_QWORD *)(v6 + 112) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA60F838()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA60F844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v5 = v4 + *(int *)(v3 + 44);
  sub_1DA49873C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for StationEntity()
{
  uint64_t result;

  result = qword_1EDAE3BA8;
  if (!qword_1EDAE3BA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA60F8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA60F920()
{
  return sub_1DA47E32C(&qword_1F026DAA0, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60F94C()
{
  return sub_1DA47E32C(&qword_1F026DAA8, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60F978()
{
  return sub_1DA47E32C(&qword_1F026DAB0, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60F9A8()
{
  return sub_1DA47E32C(&qword_1F026DAB8, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60F9D4()
{
  return sub_1DA47E32C(&qword_1F026DAC0, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60FA00()
{
  return sub_1DA47E32C(&qword_1F0269550, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60FA2C()
{
  return sub_1DA47E32C(&qword_1F026DAC8, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60FA58()
{
  return sub_1DA4841D4(&qword_1F026DAD0, &qword_1F026DAD8, MEMORY[0x1E0C91998]);
}

uint64_t sub_1DA60FA84()
{
  return sub_1DA47E32C((unint64_t *)&unk_1F026DAE0, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60FAB0()
{
  return sub_1DA47E32C((unint64_t *)&qword_1F0269A18, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
}

uint64_t sub_1DA60FADC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1DA66BDA0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DA60FB14()
{
  swift_bridgeObjectRetain();
  return sub_1DA66BDAC();
}

uint64_t sub_1DA60FB4C()
{
  return sub_1DA66BDA0();
}

uint64_t sub_1DA60FB70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA60FBA8()
{
  return sub_1DA66BDAC();
}

uint64_t *initializeBufferWithCopyOfBuffer for StationEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v55;
  unsigned int (*v56)(_QWORD *, uint64_t, int *);
  _QWORD *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v9 = (void *)a2[4];
    v8 = a2[5];
    a1[4] = (uint64_t)v9;
    a1[5] = v8;
    v10 = a2[7];
    v11 = *(int *)(a3 + 40);
    __dst = (uint64_t *)((char *)a1 + v11);
    v12 = (uint64_t *)((char *)a2 + v11);
    a1[6] = a2[6];
    a1[7] = v10;
    v13 = (int *)sub_1DA66CA0C();
    v55 = *((_QWORD *)v13 - 1);
    v56 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v55 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v9;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    if (v56(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v12[1];
      *__dst = *v12;
      __dst[1] = v17;
      v18 = *((unsigned __int8 *)v12 + 32);
      swift_bridgeObjectRetain();
      if (v18 == 255)
      {
        *((_OWORD *)__dst + 1) = *((_OWORD *)v12 + 1);
        *((_BYTE *)__dst + 32) = *((_BYTE *)v12 + 32);
      }
      else
      {
        v19 = v12[2];
        v20 = v12[3];
        sub_1DA481390(v19, v20, v18);
        __dst[2] = v19;
        __dst[3] = v20;
        *((_BYTE *)__dst + 32) = v18;
      }
      *(_OWORD *)(__dst + 5) = *(_OWORD *)(v12 + 5);
      v21 = (id *)(v12 + 7);
      v22 = *((unsigned __int8 *)v12 + 64);
      if (v22 == 255)
      {
        __dst[7] = *v21;
        *((_BYTE *)__dst + 64) = *((_BYTE *)v12 + 64);
      }
      else
      {
        v23 = *v21;
        sub_1DA4E762C(*v21, *((_BYTE *)v12 + 64));
        __dst[7] = v23;
        *((_BYTE *)__dst + 64) = v22;
      }
      v24 = (id *)(v12 + 9);
      v25 = *((unsigned __int8 *)v12 + 80);
      if (v25 == 255)
      {
        __dst[9] = *v24;
        *((_BYTE *)__dst + 80) = *((_BYTE *)v12 + 80);
      }
      else
      {
        v26 = *v24;
        sub_1DA4E762C(*v24, *((_BYTE *)v12 + 80));
        __dst[9] = v26;
        *((_BYTE *)__dst + 80) = v25;
      }
      v27 = (id *)(v12 + 11);
      v28 = *((unsigned __int8 *)v12 + 96);
      if (v28 == 255)
      {
        __dst[11] = *v27;
        *((_BYTE *)__dst + 96) = *((_BYTE *)v12 + 96);
      }
      else
      {
        v29 = *v27;
        sub_1DA4E762C(*v27, *((_BYTE *)v12 + 96));
        __dst[11] = v29;
        *((_BYTE *)__dst + 96) = v28;
      }
      v30 = (id *)(v12 + 13);
      v31 = *((unsigned __int8 *)v12 + 112);
      if (v31 == 255)
      {
        __dst[13] = *v30;
        *((_BYTE *)__dst + 112) = *((_BYTE *)v12 + 112);
      }
      else
      {
        v32 = *v30;
        sub_1DA4E762C(*v30, *((_BYTE *)v12 + 112));
        __dst[13] = v32;
        *((_BYTE *)__dst + 112) = v31;
      }
      v33 = (id *)(v12 + 15);
      v34 = *((unsigned __int8 *)v12 + 128);
      if (v34 == 255)
      {
        __dst[15] = *v33;
        *((_BYTE *)__dst + 128) = *((_BYTE *)v12 + 128);
      }
      else
      {
        v35 = *v33;
        sub_1DA4E762C(*v33, *((_BYTE *)v12 + 128));
        __dst[15] = v35;
        *((_BYTE *)__dst + 128) = v34;
      }
      *((_BYTE *)__dst + 129) = *((_BYTE *)v12 + 129);
      v36 = v13[11];
      v37 = (char *)__dst + v36;
      v38 = (char *)v12 + v36;
      v39 = sub_1DA66C928();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v13[12];
      v41 = (_QWORD *)((char *)__dst + v40);
      v42 = (_QWORD *)((char *)v12 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *((_BYTE *)__dst + v13[13]) = *((_BYTE *)v12 + v13[13]);
      *((_BYTE *)__dst + v13[14]) = *((_BYTE *)v12 + v13[14]);
      *((_BYTE *)__dst + v13[15]) = *((_BYTE *)v12 + v13[15]);
      v44 = v13[16];
      v45 = (_QWORD *)((char *)__dst + v44);
      v46 = (_QWORD *)((char *)v12 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v55 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48(__dst, 0, 1, v13);
    }
    v49 = *(int *)(a3 + 44);
    v50 = (char *)v4 + v49;
    v51 = (char *)a2 + v49;
    v52 = *((_QWORD *)v51 + 1);
    if (v52 >> 60 == 15)
    {
      *(_OWORD *)v50 = *(_OWORD *)v51;
    }
    else
    {
      v53 = *(_QWORD *)v51;
      sub_1DA498750(*(_QWORD *)v51, *((_QWORD *)v51 + 1));
      *(_QWORD *)v50 = v53;
      *((_QWORD *)v50 + 1) = v52;
    }
  }
  return v4;
}

uint64_t destroy for StationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1DA66CA0C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v7 = *(unsigned __int8 *)(v4 + 32);
    if (v7 != 255)
      sub_1DA47F868(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v7);
    v8 = *(unsigned __int8 *)(v4 + 64);
    if (v8 != 255)
      sub_1DA4E7898(*(id *)(v4 + 56), v8);
    v9 = *(unsigned __int8 *)(v4 + 80);
    if (v9 != 255)
      sub_1DA4E7898(*(id *)(v4 + 72), v9);
    v10 = *(unsigned __int8 *)(v4 + 96);
    if (v10 != 255)
      sub_1DA4E7898(*(id *)(v4 + 88), v10);
    v11 = *(unsigned __int8 *)(v4 + 112);
    if (v11 != 255)
      sub_1DA4E7898(*(id *)(v4 + 104), v11);
    v12 = *(unsigned __int8 *)(v4 + 128);
    if (v12 != 255)
      sub_1DA4E7898(*(id *)(v4 + 120), v12);
    v13 = v4 + *(int *)(v5 + 44);
    v14 = sub_1DA66C928();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v15 = (uint64_t *)(a1 + *(int *)(a2 + 44));
  v16 = v15[1];
  if (v16 >> 60 != 15)
    return sub_1DA4986F8(*v15, v16);
  return result;
}

_QWORD *initializeWithCopy for StationEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, int *);
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *__dst;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v6 = (void *)a2[4];
  v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  v7 = a2[7];
  v8 = *(int *)(a3 + 40);
  __dst = (_QWORD *)((char *)a1 + v8);
  v9 = (_QWORD *)((char *)a2 + v8);
  a1[6] = a2[6];
  a1[7] = v7;
  v10 = (int *)sub_1DA66CA0C();
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v6;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v12(v9, 1, v10))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    v15 = a1;
  }
  else
  {
    v16 = v9[1];
    *__dst = *v9;
    __dst[1] = v16;
    v17 = *((unsigned __int8 *)v9 + 32);
    swift_bridgeObjectRetain();
    if (v17 == 255)
    {
      *((_OWORD *)__dst + 1) = *((_OWORD *)v9 + 1);
      *((_BYTE *)__dst + 32) = *((_BYTE *)v9 + 32);
    }
    else
    {
      v18 = v9[2];
      v19 = v9[3];
      sub_1DA481390(v18, v19, v17);
      __dst[2] = v18;
      __dst[3] = v19;
      *((_BYTE *)__dst + 32) = v17;
    }
    v20 = v11;
    *(_OWORD *)(__dst + 5) = *(_OWORD *)(v9 + 5);
    v21 = (id *)(v9 + 7);
    v22 = *((unsigned __int8 *)v9 + 64);
    v15 = a1;
    if (v22 == 255)
    {
      __dst[7] = *v21;
      *((_BYTE *)__dst + 64) = *((_BYTE *)v9 + 64);
    }
    else
    {
      v23 = *v21;
      sub_1DA4E762C(*v21, *((_BYTE *)v9 + 64));
      __dst[7] = v23;
      *((_BYTE *)__dst + 64) = v22;
    }
    v24 = (id *)(v9 + 9);
    v25 = *((unsigned __int8 *)v9 + 80);
    if (v25 == 255)
    {
      __dst[9] = *v24;
      *((_BYTE *)__dst + 80) = *((_BYTE *)v9 + 80);
    }
    else
    {
      v26 = *v24;
      sub_1DA4E762C(*v24, *((_BYTE *)v9 + 80));
      __dst[9] = v26;
      *((_BYTE *)__dst + 80) = v25;
    }
    v27 = (id *)(v9 + 11);
    v28 = *((unsigned __int8 *)v9 + 96);
    if (v28 == 255)
    {
      __dst[11] = *v27;
      *((_BYTE *)__dst + 96) = *((_BYTE *)v9 + 96);
    }
    else
    {
      v29 = *v27;
      sub_1DA4E762C(*v27, *((_BYTE *)v9 + 96));
      __dst[11] = v29;
      *((_BYTE *)__dst + 96) = v28;
    }
    v30 = (id *)(v9 + 13);
    v31 = *((unsigned __int8 *)v9 + 112);
    if (v31 == 255)
    {
      __dst[13] = *v30;
      *((_BYTE *)__dst + 112) = *((_BYTE *)v9 + 112);
    }
    else
    {
      v32 = *v30;
      sub_1DA4E762C(*v30, *((_BYTE *)v9 + 112));
      __dst[13] = v32;
      *((_BYTE *)__dst + 112) = v31;
    }
    v33 = (id *)(v9 + 15);
    v34 = *((unsigned __int8 *)v9 + 128);
    if (v34 == 255)
    {
      __dst[15] = *v33;
      *((_BYTE *)__dst + 128) = *((_BYTE *)v9 + 128);
    }
    else
    {
      v35 = *v33;
      sub_1DA4E762C(*v33, *((_BYTE *)v9 + 128));
      __dst[15] = v35;
      *((_BYTE *)__dst + 128) = v34;
    }
    *((_BYTE *)__dst + 129) = *((_BYTE *)v9 + 129);
    v36 = v10[11];
    v37 = (char *)__dst + v36;
    v38 = (char *)v9 + v36;
    v39 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = v10[12];
    v41 = (_QWORD *)((char *)__dst + v40);
    v42 = (_QWORD *)((char *)v9 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    *((_BYTE *)__dst + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)__dst + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)__dst + v10[15]) = *((_BYTE *)v9 + v10[15]);
    v44 = v10[16];
    v45 = (_QWORD *)((char *)__dst + v44);
    v46 = (_QWORD *)((char *)v9 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v20 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(__dst, 0, 1, v10);
  }
  v49 = *(int *)(a3 + 44);
  v50 = (char *)v15 + v49;
  v51 = (char *)a2 + v49;
  v52 = *((_QWORD *)v51 + 1);
  if (v52 >> 60 == 15)
  {
    *(_OWORD *)v50 = *(_OWORD *)v51;
  }
  else
  {
    v53 = *(_QWORD *)v51;
    sub_1DA498750(*(_QWORD *)v51, *((_QWORD *)v51 + 1));
    *(_QWORD *)v50 = v53;
    *((_QWORD *)v50 + 1) = v52;
  }
  return v15;
}

_QWORD *assignWithCopy for StationEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, int *);
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  __int128 v29;
  id *v30;
  int v31;
  id v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  void (*v60)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v61;
  uint64_t v62;
  char v63;
  __int128 v64;
  id *v65;
  id *v66;
  int v67;
  id v68;
  void *v69;
  char v70;
  id v71;
  char v72;
  id v73;
  id *v74;
  id *v75;
  int v76;
  id v77;
  void *v78;
  char v79;
  id v80;
  char v81;
  id v82;
  id *v83;
  id *v84;
  int v85;
  id v86;
  void *v87;
  char v88;
  id v89;
  char v90;
  id v91;
  id *v92;
  id *v93;
  int v94;
  id v95;
  void *v96;
  char v97;
  id v98;
  char v99;
  id v100;
  id *v101;
  id *v102;
  int v103;
  id v104;
  void *v105;
  char v106;
  id v107;
  char v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[4];
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = v7;

  a1[5] = a2[5];
  sub_1DA66BE60();
  swift_release();
  a1[6] = a2[6];
  sub_1DA66BE60();
  swift_release();
  a1[7] = a2[7];
  sub_1DA66BE60();
  swift_release();
  v9 = *(int *)(a3 + 40);
  v10 = (uint64_t)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = (int *)sub_1DA66CA0C();
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *(_QWORD *)(v10 + 8) = *((_QWORD *)v11 + 1);
      v17 = v11[32];
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        v29 = *((_OWORD *)v11 + 1);
        *(_BYTE *)(v10 + 32) = v11[32];
        *(_OWORD *)(v10 + 16) = v29;
      }
      else
      {
        v18 = *((_QWORD *)v11 + 2);
        v19 = *((_QWORD *)v11 + 3);
        sub_1DA481390(v18, v19, v17);
        *(_QWORD *)(v10 + 16) = v18;
        *(_QWORD *)(v10 + 24) = v19;
        *(_BYTE *)(v10 + 32) = v17;
      }
      *(_QWORD *)(v10 + 40) = *((_QWORD *)v11 + 5);
      *(_QWORD *)(v10 + 48) = *((_QWORD *)v11 + 6);
      v30 = (id *)(v11 + 56);
      v31 = v11[64];
      if (v31 == 255)
      {
        v33 = *v30;
        *(_BYTE *)(v10 + 64) = v11[64];
        *(_QWORD *)(v10 + 56) = v33;
      }
      else
      {
        v32 = *v30;
        sub_1DA4E762C(*v30, v11[64]);
        *(_QWORD *)(v10 + 56) = v32;
        *(_BYTE *)(v10 + 64) = v31;
      }
      v34 = (id *)(v11 + 72);
      v35 = v11[80];
      if (v35 == 255)
      {
        v37 = *v34;
        *(_BYTE *)(v10 + 80) = v11[80];
        *(_QWORD *)(v10 + 72) = v37;
      }
      else
      {
        v36 = *v34;
        sub_1DA4E762C(*v34, v11[80]);
        *(_QWORD *)(v10 + 72) = v36;
        *(_BYTE *)(v10 + 80) = v35;
      }
      v38 = (id *)(v11 + 88);
      v39 = v11[96];
      if (v39 == 255)
      {
        v41 = *v38;
        *(_BYTE *)(v10 + 96) = v11[96];
        *(_QWORD *)(v10 + 88) = v41;
      }
      else
      {
        v40 = *v38;
        sub_1DA4E762C(*v38, v11[96]);
        *(_QWORD *)(v10 + 88) = v40;
        *(_BYTE *)(v10 + 96) = v39;
      }
      v42 = (id *)(v11 + 104);
      v43 = v11[112];
      if (v43 == 255)
      {
        v45 = *v42;
        *(_BYTE *)(v10 + 112) = v11[112];
        *(_QWORD *)(v10 + 104) = v45;
      }
      else
      {
        v44 = *v42;
        sub_1DA4E762C(*v42, v11[112]);
        *(_QWORD *)(v10 + 104) = v44;
        *(_BYTE *)(v10 + 112) = v43;
      }
      v46 = (id *)(v11 + 120);
      v47 = v11[128];
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v10 + 128) = v11[128];
        *(_QWORD *)(v10 + 120) = v49;
      }
      else
      {
        v48 = *v46;
        sub_1DA4E762C(*v46, v11[128]);
        *(_QWORD *)(v10 + 120) = v48;
        *(_BYTE *)(v10 + 128) = v47;
      }
      *(_BYTE *)(v10 + 129) = v11[129];
      v50 = v12[11];
      v51 = v10 + v50;
      v52 = &v11[v50];
      v53 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
      v54 = v12[12];
      v55 = (_QWORD *)(v10 + v54);
      v56 = &v11[v54];
      *v55 = *(_QWORD *)v56;
      v55[1] = *((_QWORD *)v56 + 1);
      *(_BYTE *)(v10 + v12[13]) = v11[v12[13]];
      *(_BYTE *)(v10 + v12[14]) = v11[v12[14]];
      *(_BYTE *)(v10 + v12[15]) = v11[v12[15]];
      v57 = v12[16];
      v58 = (_QWORD *)(v10 + v57);
      v59 = &v11[v57];
      *v58 = *(_QWORD *)v59;
      v58[1] = *((_QWORD *)v59 + 1);
      v60 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60(v10, 0, 1, v12);
      goto LABEL_68;
    }
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_68;
  }
  if (v16)
  {
    sub_1DA47F880(v10, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    goto LABEL_7;
  }
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (__int128 *)(v10 + 16);
  v22 = (__int128 *)(v11 + 16);
  v23 = v11[32];
  if (*(unsigned __int8 *)(v10 + 32) == 255)
  {
    if (v23 == 255)
    {
      v64 = *v22;
      *(_BYTE *)(v10 + 32) = v11[32];
      *v21 = v64;
    }
    else
    {
      v61 = *((_QWORD *)v11 + 2);
      v62 = *((_QWORD *)v11 + 3);
      sub_1DA481390(v61, v62, v11[32]);
      *(_QWORD *)(v10 + 16) = v61;
      *(_QWORD *)(v10 + 24) = v62;
      *(_BYTE *)(v10 + 32) = v23;
    }
  }
  else if (v23 == 255)
  {
    sub_1DA4E8928(v10 + 16);
    v63 = v11[32];
    *v21 = *v22;
    *(_BYTE *)(v10 + 32) = v63;
  }
  else
  {
    v24 = *((_QWORD *)v11 + 2);
    v25 = *((_QWORD *)v11 + 3);
    sub_1DA481390(v24, v25, v11[32]);
    v26 = *(_QWORD *)(v10 + 16);
    v27 = *(_QWORD *)(v10 + 24);
    *(_QWORD *)(v10 + 16) = v24;
    *(_QWORD *)(v10 + 24) = v25;
    v28 = *(_BYTE *)(v10 + 32);
    *(_BYTE *)(v10 + 32) = v23;
    sub_1DA47F868(v26, v27, v28);
  }
  *(_QWORD *)(v10 + 40) = *((_QWORD *)v11 + 5);
  *(_QWORD *)(v10 + 48) = *((_QWORD *)v11 + 6);
  v65 = (id *)(v10 + 56);
  v66 = (id *)(v11 + 56);
  v67 = v11[64];
  if (*(unsigned __int8 *)(v10 + 64) == 255)
  {
    if (v67 == 255)
    {
      v73 = *v66;
      *(_BYTE *)(v10 + 64) = v11[64];
      *v65 = v73;
    }
    else
    {
      v71 = *v66;
      sub_1DA4E762C(*v66, v11[64]);
      *(_QWORD *)(v10 + 56) = v71;
      *(_BYTE *)(v10 + 64) = v67;
    }
  }
  else if (v67 == 255)
  {
    sub_1DA4E895C(v10 + 56);
    v72 = v11[64];
    *v65 = *v66;
    *(_BYTE *)(v10 + 64) = v72;
  }
  else
  {
    v68 = *v66;
    sub_1DA4E762C(*v66, v11[64]);
    v69 = *(void **)(v10 + 56);
    *(_QWORD *)(v10 + 56) = v68;
    v70 = *(_BYTE *)(v10 + 64);
    *(_BYTE *)(v10 + 64) = v67;
    sub_1DA4E7898(v69, v70);
  }
  v74 = (id *)(v10 + 72);
  v75 = (id *)(v11 + 72);
  v76 = v11[80];
  if (*(unsigned __int8 *)(v10 + 80) == 255)
  {
    if (v76 == 255)
    {
      v82 = *v75;
      *(_BYTE *)(v10 + 80) = v11[80];
      *v74 = v82;
    }
    else
    {
      v80 = *v75;
      sub_1DA4E762C(*v75, v11[80]);
      *(_QWORD *)(v10 + 72) = v80;
      *(_BYTE *)(v10 + 80) = v76;
    }
  }
  else if (v76 == 255)
  {
    sub_1DA4E895C(v10 + 72);
    v81 = v11[80];
    *v74 = *v75;
    *(_BYTE *)(v10 + 80) = v81;
  }
  else
  {
    v77 = *v75;
    sub_1DA4E762C(*v75, v11[80]);
    v78 = *(void **)(v10 + 72);
    *(_QWORD *)(v10 + 72) = v77;
    v79 = *(_BYTE *)(v10 + 80);
    *(_BYTE *)(v10 + 80) = v76;
    sub_1DA4E7898(v78, v79);
  }
  v83 = (id *)(v10 + 88);
  v84 = (id *)(v11 + 88);
  v85 = v11[96];
  if (*(unsigned __int8 *)(v10 + 96) == 255)
  {
    if (v85 == 255)
    {
      v91 = *v84;
      *(_BYTE *)(v10 + 96) = v11[96];
      *v83 = v91;
    }
    else
    {
      v89 = *v84;
      sub_1DA4E762C(*v84, v11[96]);
      *(_QWORD *)(v10 + 88) = v89;
      *(_BYTE *)(v10 + 96) = v85;
    }
  }
  else if (v85 == 255)
  {
    sub_1DA4E895C(v10 + 88);
    v90 = v11[96];
    *v83 = *v84;
    *(_BYTE *)(v10 + 96) = v90;
  }
  else
  {
    v86 = *v84;
    sub_1DA4E762C(*v84, v11[96]);
    v87 = *(void **)(v10 + 88);
    *(_QWORD *)(v10 + 88) = v86;
    v88 = *(_BYTE *)(v10 + 96);
    *(_BYTE *)(v10 + 96) = v85;
    sub_1DA4E7898(v87, v88);
  }
  v92 = (id *)(v10 + 104);
  v93 = (id *)(v11 + 104);
  v94 = v11[112];
  if (*(unsigned __int8 *)(v10 + 112) == 255)
  {
    if (v94 == 255)
    {
      v100 = *v93;
      *(_BYTE *)(v10 + 112) = v11[112];
      *v92 = v100;
    }
    else
    {
      v98 = *v93;
      sub_1DA4E762C(*v93, v11[112]);
      *(_QWORD *)(v10 + 104) = v98;
      *(_BYTE *)(v10 + 112) = v94;
    }
  }
  else if (v94 == 255)
  {
    sub_1DA4E895C(v10 + 104);
    v99 = v11[112];
    *v92 = *v93;
    *(_BYTE *)(v10 + 112) = v99;
  }
  else
  {
    v95 = *v93;
    sub_1DA4E762C(*v93, v11[112]);
    v96 = *(void **)(v10 + 104);
    *(_QWORD *)(v10 + 104) = v95;
    v97 = *(_BYTE *)(v10 + 112);
    *(_BYTE *)(v10 + 112) = v94;
    sub_1DA4E7898(v96, v97);
  }
  v101 = (id *)(v10 + 120);
  v102 = (id *)(v11 + 120);
  v103 = v11[128];
  if (*(unsigned __int8 *)(v10 + 128) == 255)
  {
    if (v103 == 255)
    {
      v109 = *v102;
      *(_BYTE *)(v10 + 128) = v11[128];
      *v101 = v109;
    }
    else
    {
      v107 = *v102;
      sub_1DA4E762C(*v102, v11[128]);
      *(_QWORD *)(v10 + 120) = v107;
      *(_BYTE *)(v10 + 128) = v103;
    }
  }
  else if (v103 == 255)
  {
    sub_1DA4E895C(v10 + 120);
    v108 = v11[128];
    *v101 = *v102;
    *(_BYTE *)(v10 + 128) = v108;
  }
  else
  {
    v104 = *v102;
    sub_1DA4E762C(*v102, v11[128]);
    v105 = *(void **)(v10 + 120);
    *(_QWORD *)(v10 + 120) = v104;
    v106 = *(_BYTE *)(v10 + 128);
    *(_BYTE *)(v10 + 128) = v103;
    sub_1DA4E7898(v105, v106);
  }
  *(_BYTE *)(v10 + 129) = v11[129];
  v110 = v12[11];
  v111 = v10 + v110;
  v112 = &v11[v110];
  v113 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 24))(v111, v112, v113);
  v114 = v12[12];
  v115 = (_QWORD *)(v10 + v114);
  v116 = &v11[v114];
  *v115 = *(_QWORD *)v116;
  v115[1] = *((_QWORD *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + v12[13]) = v11[v12[13]];
  *(_BYTE *)(v10 + v12[14]) = v11[v12[14]];
  *(_BYTE *)(v10 + v12[15]) = v11[v12[15]];
  v117 = v12[16];
  v118 = (_QWORD *)(v10 + v117);
  v119 = &v11[v117];
  *v118 = *(_QWORD *)v119;
  v118[1] = *((_QWORD *)v119 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  v120 = *(int *)(a3 + 44);
  v121 = (_QWORD *)((char *)a1 + v120);
  v122 = (_QWORD *)((char *)a2 + v120);
  v123 = *(_QWORD *)((char *)a2 + v120 + 8);
  if (*(_QWORD *)((char *)a1 + v120 + 8) >> 60 != 15)
  {
    if (v123 >> 60 != 15)
    {
      v125 = *v122;
      sub_1DA498750(v125, v123);
      v126 = *v121;
      v127 = v121[1];
      *v121 = v125;
      v121[1] = v123;
      sub_1DA4986F8(v126, v127);
      return a1;
    }
    sub_1DA4E89CC((uint64_t)v121);
    goto LABEL_73;
  }
  if (v123 >> 60 == 15)
  {
LABEL_73:
    *(_OWORD *)v121 = *(_OWORD *)v122;
    return a1;
  }
  v124 = *v122;
  sub_1DA498750(v124, v123);
  *v121 = v124;
  v121[1] = v123;
  return a1;
}

_OWORD *initializeWithTake for StationEntity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 40);
  v9 = (_OWORD *)((char *)a1 + v8);
  v10 = (_OWORD *)((char *)a2 + v8);
  v11 = (int *)sub_1DA66CA0C();
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v10[1];
    *v9 = *v10;
    v9[1] = v14;
    *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
    *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
    *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
    *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
    *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
    *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
    *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
    *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
    *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
    v15 = v11[11];
    v16 = (char *)v9 + v15;
    v17 = (char *)v10 + v15;
    v18 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)v9 + v11[12]) = *(_OWORD *)((char *)v10 + v11[12]);
    *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
    *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
    *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
    *(_OWORD *)((char *)v9 + v11[16]) = *(_OWORD *)((char *)v10 + v11[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 44));
  return a1;
}

_QWORD *assignWithTake for StationEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, int *);
  int v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  _OWORD *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int v37;
  int v38;
  void *v39;
  _QWORD *v40;
  int v41;
  int v42;
  void *v43;
  _QWORD *v44;
  int v45;
  int v46;
  void *v47;
  _QWORD *v48;
  int v49;
  int v50;
  void *v51;
  _QWORD *v52;
  int v53;
  int v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)a1[4];
  a1[4] = a2[4];

  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  v9 = *(int *)(a3 + 40);
  v10 = (uint64_t)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = (int *)sub_1DA66CA0C();
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      v17 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *(_OWORD *)(v10 + 16) = v17;
      *(_BYTE *)(v10 + 32) = v11[32];
      *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
      *(_QWORD *)(v10 + 56) = *((_QWORD *)v11 + 7);
      *(_BYTE *)(v10 + 64) = v11[64];
      *(_OWORD *)(v10 + 113) = *(_OWORD *)(v11 + 113);
      *(_OWORD *)(v10 + 104) = *(_OWORD *)(v11 + 104);
      *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
      *(_BYTE *)(v10 + 129) = v11[129];
      v18 = v12[11];
      v19 = v10 + v18;
      v20 = &v11[v18];
      v21 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      *(_OWORD *)(v10 + v12[12]) = *(_OWORD *)&v11[v12[12]];
      *(_BYTE *)(v10 + v12[13]) = v11[v12[13]];
      *(_BYTE *)(v10 + v12[14]) = v11[v12[14]];
      *(_BYTE *)(v10 + v12[15]) = v11[v12[15]];
      *(_OWORD *)(v10 + v12[16]) = *(_OWORD *)&v11[v12[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1DA47F880(v10, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v10, v11, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v30 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = v30;
  swift_bridgeObjectRelease();
  v31 = v11 + 16;
  v32 = *(unsigned __int8 *)(v10 + 32);
  if (v32 != 255)
  {
    v33 = v11[32];
    if (v33 != 255)
    {
      v34 = *(_QWORD *)(v10 + 16);
      v35 = *(_QWORD *)(v10 + 24);
      *(_OWORD *)(v10 + 16) = *v31;
      *(_BYTE *)(v10 + 32) = v33;
      sub_1DA47F868(v34, v35, v32);
      goto LABEL_18;
    }
    sub_1DA4E8928(v10 + 16);
  }
  *(_OWORD *)(v10 + 16) = *v31;
  *(_BYTE *)(v10 + 32) = v11[32];
LABEL_18:
  *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
  v36 = v11 + 56;
  v37 = *(unsigned __int8 *)(v10 + 64);
  if (v37 != 255)
  {
    v38 = v11[64];
    if (v38 != 255)
    {
      v39 = *(void **)(v10 + 56);
      *(_QWORD *)(v10 + 56) = *v36;
      *(_BYTE *)(v10 + 64) = v38;
      sub_1DA4E7898(v39, v37);
      goto LABEL_23;
    }
    sub_1DA4E895C(v10 + 56);
  }
  *(_QWORD *)(v10 + 56) = *v36;
  *(_BYTE *)(v10 + 64) = v11[64];
LABEL_23:
  v40 = v11 + 72;
  v41 = *(unsigned __int8 *)(v10 + 80);
  if (v41 != 255)
  {
    v42 = v11[80];
    if (v42 != 255)
    {
      v43 = *(void **)(v10 + 72);
      *(_QWORD *)(v10 + 72) = *v40;
      *(_BYTE *)(v10 + 80) = v42;
      sub_1DA4E7898(v43, v41);
      goto LABEL_28;
    }
    sub_1DA4E895C(v10 + 72);
  }
  *(_QWORD *)(v10 + 72) = *v40;
  *(_BYTE *)(v10 + 80) = v11[80];
LABEL_28:
  v44 = v11 + 88;
  v45 = *(unsigned __int8 *)(v10 + 96);
  if (v45 != 255)
  {
    v46 = v11[96];
    if (v46 != 255)
    {
      v47 = *(void **)(v10 + 88);
      *(_QWORD *)(v10 + 88) = *v44;
      *(_BYTE *)(v10 + 96) = v46;
      sub_1DA4E7898(v47, v45);
      goto LABEL_33;
    }
    sub_1DA4E895C(v10 + 88);
  }
  *(_QWORD *)(v10 + 88) = *v44;
  *(_BYTE *)(v10 + 96) = v11[96];
LABEL_33:
  v48 = v11 + 104;
  v49 = *(unsigned __int8 *)(v10 + 112);
  if (v49 != 255)
  {
    v50 = v11[112];
    if (v50 != 255)
    {
      v51 = *(void **)(v10 + 104);
      *(_QWORD *)(v10 + 104) = *v48;
      *(_BYTE *)(v10 + 112) = v50;
      sub_1DA4E7898(v51, v49);
      goto LABEL_38;
    }
    sub_1DA4E895C(v10 + 104);
  }
  *(_QWORD *)(v10 + 104) = *v48;
  *(_BYTE *)(v10 + 112) = v11[112];
LABEL_38:
  v52 = v11 + 120;
  v53 = *(unsigned __int8 *)(v10 + 128);
  if (v53 == 255)
  {
LABEL_42:
    *(_QWORD *)(v10 + 120) = *v52;
    *(_BYTE *)(v10 + 128) = v11[128];
    goto LABEL_43;
  }
  v54 = v11[128];
  if (v54 == 255)
  {
    sub_1DA4E895C(v10 + 120);
    goto LABEL_42;
  }
  v55 = *(void **)(v10 + 120);
  *(_QWORD *)(v10 + 120) = *v52;
  *(_BYTE *)(v10 + 128) = v54;
  sub_1DA4E7898(v55, v53);
LABEL_43:
  *(_BYTE *)(v10 + 129) = v11[129];
  v56 = v12[11];
  v57 = v10 + v56;
  v58 = &v11[v56];
  v59 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  v60 = v12[12];
  v61 = (_QWORD *)(v10 + v60);
  v62 = &v11[v60];
  v64 = *(_QWORD *)v62;
  v63 = *((_QWORD *)v62 + 1);
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + v12[13]) = v11[v12[13]];
  *(_BYTE *)(v10 + v12[14]) = v11[v12[14]];
  *(_BYTE *)(v10 + v12[15]) = v11[v12[15]];
  v65 = v12[16];
  v66 = (_QWORD *)(v10 + v65);
  v67 = &v11[v65];
  v69 = *(_QWORD *)v67;
  v68 = *((_QWORD *)v67 + 1);
  *v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
LABEL_7:
  v23 = *(int *)(a3 + 44);
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = *(_QWORD *)((char *)a1 + v23 + 8);
  if (v26 >> 60 != 15)
  {
    v27 = v25[1];
    if (v27 >> 60 != 15)
    {
      v28 = *v24;
      *v24 = *v25;
      v24[1] = v27;
      sub_1DA4986F8(v28, v26);
      return a1;
    }
    sub_1DA4E89CC((uint64_t)v24);
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
  return a1;
}

uint64_t getEnumTagSinglePayload for StationEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA6113BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for StationEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA611448(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void sub_1DA6114C0()
{
  unint64_t v0;

  sub_1DA611560();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1DA611560()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE4110)
  {
    sub_1DA66CA0C();
    v0 = sub_1DA670294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE4110);
  }
}

uint64_t ChannelEntity.ChannelEntityQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  *a1 = result;
  return result;
}

uint64_t ChannelEntity.ChannelEntityQuery.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t ChannelEntity.ChannelEntityQuery.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

void (*ChannelEntity.ChannelEntityQuery.objectGraph.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7AE4;
}

uint64_t ChannelEntity.ChannelEntityQuery.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t ChannelEntity.ChannelEntityQuery.predicate(forAdamIDs:)(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1DA498794(0, v1, 0);
    v2 = v22;
    result = sub_1DA6047A4(a1);
    v5 = result;
    v7 = v6;
    v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v7)
        goto LABEL_14;
      sub_1DA66DCE4();
      sub_1DA4F726C();
      v10 = sub_1DA670354();
      v12 = v11;
      v14 = *(_QWORD *)(v2 + 16);
      v13 = *(_QWORD *)(v2 + 24);
      v15 = v2;
      if (v14 >= v13 >> 1)
      {
        sub_1DA498794(v13 > 1, v14 + 1, 1);
        v15 = v2;
      }
      *(_QWORD *)(v15 + 16) = v14 + 1;
      v16 = v15 + 16 * v14;
      *(_QWORD *)(v16 + 32) = v10;
      *(_QWORD *)(v16 + 40) = v12;
      result = sub_1DA604848(v5, v7, v9 & 1, a1);
      v5 = result;
      v7 = v17;
      v9 = v18 & 1;
      --v1;
      v2 = v15;
      if (!v1)
      {
        sub_1DA57DB40(result, v17, v18 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    v19 = (void *)objc_opt_self();
    sub_1DA5B95EC(v2);
    swift_bridgeObjectRelease();
    v20 = (void *)sub_1DA66FC4C();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v19, sel_predicateForChannelStoreIds_, v20);

    return (uint64_t)v21;
  }
  return result;
}

id ChannelEntity.ChannelEntityQuery.predicate(forUuids:)()
{
  return objc_msgSend((id)objc_opt_self(), sel_falsePredicate);
}

uint64_t ChannelEntity.ChannelEntityQuery.suggestedEntities()()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1DA670078();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v3 = sub_1DA66FB98();
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 - 8);
  v4 = swift_task_alloc();
  v5 = *v0;
  v1[11] = v4;
  v1[12] = v5;
  return swift_task_switch();
}

uint64_t sub_1DA6119BC()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BE60();
  sub_1DA66BC98();
  swift_release();
  v0[13] = v0[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v1 = (_QWORD *)swift_task_alloc();
  v0[14] = v1;
  *v1 = v0;
  v1[1] = sub_1DA611A5C;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA611A5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA611AC8()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[16] = v0[2];
  swift_getObjectType();
  sub_1DA4EE300();
  v1 = (_QWORD *)swift_task_alloc();
  v0[17] = v1;
  *v1 = v0;
  v1[1] = sub_1DA611B48;
  return sub_1DA6700C0();
}

uint64_t sub_1DA611B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DA611BCC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v1 = (void *)v0[18];
  v3 = v0[7];
  v2 = v0[8];
  v4 = v0[6];
  v5 = swift_allocObject();
  v0[19] = v5;
  *(_QWORD *)(v5 + 16) = v1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0C977C0], v4);
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc();
  v0[20] = v7;
  v0[21] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DE90);
  *v7 = v0;
  v7[1] = sub_1DA611CA8;
  return sub_1DA67009C();
}

uint64_t sub_1DA611CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA611D3C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[4];
  v0[23] = v1;
  v0[5] = v1;
  sub_1DA66BE60();
  v2 = (_QWORD *)swift_task_alloc();
  v0[24] = v2;
  sub_1DA6125EC();
  *v2 = v0;
  v2[1] = sub_1DA611DBC;
  return sub_1DA66FCE8();
}

uint64_t sub_1DA611DBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 208) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA611E44()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 208));
}

uint64_t sub_1DA611E94()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA611EDC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA611F24()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DA611F84(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  id v24;
  uint64_t *v25;
  uint64_t v26;

  v25 = a1;
  v2 = type metadata accessor for ChannelEntity();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66F8BC();
  v6 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v7 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DA67B2A0;
  v10 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v11 = (void *)sub_1DA66F88C();
  v12 = objc_msgSend(v10, sel_initWithKey_ascending_, v11, 1);

  *(_QWORD *)(v9 + 32) = v12;
  v26 = v9;
  sub_1DA66FAB4();
  sub_1DA47D774(0, &qword_1F026DBD0);
  v13 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setSortDescriptors_, v13);

  sub_1DA47D774(0, &qword_1F026DBD8);
  v14 = sub_1DA670090();
  if (v1)
  {

    return;
  }
  v15 = v14;
  if (!(v14 >> 62))
  {
    v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = v25;
    if (v16)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease();

    *v17 = MEMORY[0x1E0DEE9D8];
    return;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  v17 = v25;
  if (!v16)
    goto LABEL_15;
LABEL_5:
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1DA50A0C0(0, v16 & ~(v16 >> 63), 0);
  if (v16 < 0)
  {
    __break(1u);
  }
  else
  {
    v23[1] = 0;
    v24 = v8;
    v18 = 0;
    v19 = v26;
    do
    {
      if ((v15 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x1DF09EE48](v18, v15);
      else
        v20 = *(id *)(v15 + 8 * v18 + 32);
      ChannelEntity.init(model:)(v20, v5);
      v26 = v19;
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1DA50A0C0(v21 > 1, v22 + 1, 1);
        v19 = v26;
      }
      ++v18;
      *(_QWORD *)(v19 + 16) = v22 + 1;
      sub_1DA612830((uint64_t)v5, v19+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v22);
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();

    *v25 = v19;
  }
}

uint64_t sub_1DA6122B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_1DA6122CC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1DA66BE60();
  sub_1DA66BC98();
  swift_release();
  v1 = v0[2];
  v0[5] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[6] = v2;
  *v2 = v0;
  v2[1] = sub_1DA612348;
  return ChannelEntity.prepare(asPartOf:)(v1);
}

uint64_t sub_1DA612348()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DA6123BC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA6123F0(uint64_t a1)
{
  return ChannelEntity.ChannelEntityQuery.predicate(forAdamIDs:)(a1);
}

id sub_1DA612404()
{
  return objc_msgSend((id)objc_opt_self(), sel_falsePredicate);
}

uint64_t sub_1DA612430(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = *v1;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F026DE50 + dword_1F026DE50);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4B1798;
  return v7(a1, v4);
}

uint64_t sub_1DA61249C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1DA527068;
  return ChannelEntity.ChannelEntityQuery.suggestedEntities()();
}

uint64_t sub_1DA6124E4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1DA6077A0();
  *v1 = v0;
  v1[1] = sub_1DA4AD77C;
  return sub_1DA66BD34();
}

uint64_t sub_1DA612550()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DA612574(uint64_t *a1@<X8>)
{
  sub_1DA611F84(a1);
}

uint64_t sub_1DA61258C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DA4AD77C;
  v4[3] = a1;
  v4[4] = v1;
  return swift_task_switch();
}

unint64_t sub_1DA6125EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026DB10;
  if (!qword_1F026DB10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1F026DE90);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1F026DB10);
  }
  return result;
}

uint64_t sub_1DA612638()
{
  return sub_1DA607958(&qword_1F026D870, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

uint64_t sub_1DA61265C()
{
  return sub_1DA607958(&qword_1F026DB20, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

uint64_t sub_1DA612680()
{
  return sub_1DA607958(&qword_1F026DB28, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

unint64_t sub_1DA6126A8()
{
  unint64_t result;

  result = qword_1F026DB78;
  if (!qword_1F026DB78)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ChannelEntity.ChannelEntityQuery, &type metadata for ChannelEntity.ChannelEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026DB78);
  }
  return result;
}

unint64_t sub_1DA6126F0()
{
  unint64_t result;

  result = qword_1F026DB80[0];
  if (!qword_1F026DB80[0])
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ChannelEntity.ChannelEntityQuery, &type metadata for ChannelEntity.ChannelEntityQuery);
    atomic_store(result, qword_1F026DB80);
  }
  return result;
}

unint64_t sub_1DA612738()
{
  unint64_t result;

  result = qword_1F026DB98;
  if (!qword_1F026DB98)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ChannelEntity.ChannelEntityQuery, &type metadata for ChannelEntity.ChannelEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026DB98);
  }
  return result;
}

uint64_t sub_1DA61277C()
{
  return sub_1DA607958(&qword_1F026DBA0, (uint64_t)&protocol conformance descriptor for ChannelEntity);
}

unint64_t sub_1DA6127A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F026DBA8[0];
  if (!qword_1F026DBA8[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1F026DE90);
    v2 = sub_1DA607958(&qword_1F026DBA0, (uint64_t)&protocol conformance descriptor for ChannelEntity);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0C91CE0], v1, &v2);
    atomic_store(result, qword_1F026DBA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelEntity.ChannelEntityQuery()
{
  return &type metadata for ChannelEntity.ChannelEntityQuery;
}

uint64_t sub_1DA612830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChannelEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ShowEntity.followed.getter()
{
  unsigned __int8 v1;

  type metadata accessor for ShowEntity();
  sub_1DA66BDA0();
  return v1;
}

uint64_t type metadata accessor for ShowEntity()
{
  uint64_t result;

  result = qword_1EDAE3B38;
  if (!qword_1EDAE3B38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ShowEntity.explicit.getter()
{
  unsigned __int8 v1;

  type metadata accessor for ShowEntity();
  sub_1DA66BDA0();
  return v1;
}

uint64_t sub_1DA612928()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1DA66F8BC();
  qword_1F026DBE0 = result;
  *(_QWORD *)algn_1F026DBE8 = v1;
  return result;
}

uint64_t static ShowEntity.databaseEntityName.getter()
{
  uint64_t v0;

  if (qword_1F02687C0 != -1)
    swift_once();
  v0 = qword_1F026DBE0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1DA6129B0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DA66CA3C();
  __swift_allocate_value_buffer(v0, qword_1F026DBF0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F026DBF0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0D7D840], v0);
}

uint64_t static ShowEntity.serverContentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02687C8 != -1)
    swift_once();
  v2 = sub_1DA66CA3C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F026DBF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA612A78()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  qword_1F026DC08 = result;
  return result;
}

uint64_t static ShowEntity.defaultQuery.getter@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1F02687D0 != -1)
    swift_once();
  *a1 = qword_1F026DC08;
  return sub_1DA66BE60();
}

uint64_t static ShowEntity.typeDisplayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66C220();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1DA66C208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1DA66C01C();
}

uint64_t ShowEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v12[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AC8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1DA66C220();
  v7 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v8 = sub_1DA66F880();
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  sub_1DA66F874();
  sub_1DA66F868();
  type metadata accessor for ShowEntity();
  sub_1DA66BDA0();
  sub_1DA66F85C();
  swift_bridgeObjectRelease();
  sub_1DA66F868();
  sub_1DA66C214();
  sub_1DA66F874();
  sub_1DA66F868();
  sub_1DA66BDA0();
  sub_1DA66F85C();
  swift_bridgeObjectRelease();
  sub_1DA66F868();
  sub_1DA66C214();
  (*(void (**)(char *, _QWORD, uint64_t, _QWORD))(v7 + 56))(v6, 0, 1, v12[0]);
  v10 = sub_1DA66BF8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  return sub_1DA66BF98();
}

uint64_t ShowEntity.title.getter()
{
  uint64_t v1;

  type metadata accessor for ShowEntity();
  sub_1DA66BDA0();
  return v1;
}

uint64_t ShowEntity.provider.getter()
{
  uint64_t v1;

  type metadata accessor for ShowEntity();
  sub_1DA66BDA0();
  return v1;
}

uint64_t ShowEntity.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *ShowEntity.objectID.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t ShowEntity.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ShowEntity.adamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ShowEntity.feedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShowEntity();
  return sub_1DA49CC94(v1 + *(int *)(v3 + 32), a1, &qword_1EDAE5020);
}

uint64_t ShowEntity.explicit.setter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t (*ShowEntity.explicit.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity();
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ShowEntity.$explicit.getter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDB8();
}

uint64_t sub_1DA613080()
{
  type metadata accessor for ShowEntity();
  swift_bridgeObjectRetain();
  return sub_1DA66BDAC();
}

uint64_t ShowEntity.title.setter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t (*ShowEntity.title.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity();
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ShowEntity.$title.getter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDB8();
}

uint64_t ShowEntity.description.getter()
{
  uint64_t v1;

  type metadata accessor for ShowEntity();
  sub_1DA66BDA0();
  return v1;
}

uint64_t sub_1DA6131E0()
{
  type metadata accessor for ShowEntity();
  swift_bridgeObjectRetain();
  return sub_1DA66BDAC();
}

uint64_t ShowEntity.description.setter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t (*ShowEntity.description.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity();
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ShowEntity.$description.getter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDB8();
}

uint64_t sub_1DA613304()
{
  type metadata accessor for ShowEntity();
  swift_bridgeObjectRetain();
  return sub_1DA66BDAC();
}

uint64_t ShowEntity.provider.setter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t (*ShowEntity.provider.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity();
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ShowEntity.$provider.getter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDB8();
}

uint64_t ShowEntity.lastDatePlayed.getter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDA0();
}

uint64_t sub_1DA61345C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1DA49CC94(a1, (uint64_t)&v9 - v6, &qword_1EDADE6C8);
  type metadata accessor for ShowEntity();
  sub_1DA49CC94((uint64_t)v7, (uint64_t)v4, &qword_1EDADE6C8);
  sub_1DA66BDAC();
  return sub_1DA47E2F0((uint64_t)v7, &qword_1EDADE6C8);
}

uint64_t ShowEntity.lastDatePlayed.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShowEntity();
  sub_1DA49CC94(a1, (uint64_t)v4, &qword_1EDADE6C8);
  sub_1DA66BDAC();
  return sub_1DA47E2F0(a1, &qword_1EDADE6C8);
}

uint64_t (*ShowEntity.lastDatePlayed.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity();
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ShowEntity.$lastDatePlayed.getter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDB8();
}

uint64_t ShowEntity.followed.setter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t (*ShowEntity.followed.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity();
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ShowEntity.$followed.getter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDB8();
}

uint64_t ShowEntity.notificationsEnabled.getter()
{
  unsigned __int8 v1;

  type metadata accessor for ShowEntity();
  sub_1DA66BDA0();
  return v1;
}

uint64_t ShowEntity.notificationsEnabled.setter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t (*ShowEntity.notificationsEnabled.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity();
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ShowEntity.$notificationsEnabled.getter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDB8();
}

uint64_t ShowEntity.hidePlayedEpisodes.getter()
{
  unsigned __int8 v1;

  type metadata accessor for ShowEntity();
  sub_1DA66BDA0();
  return v1;
}

uint64_t ShowEntity.hidePlayedEpisodes.setter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t (*ShowEntity.hidePlayedEpisodes.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity();
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ShowEntity.$hidePlayedEpisodes.getter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDB8();
}

uint64_t ShowEntity.removePlayedDownloads.getter()
{
  unsigned __int8 v1;

  type metadata accessor for ShowEntity();
  sub_1DA66BDA0();
  return v1;
}

uint64_t ShowEntity.removePlayedDownloads.setter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t (*ShowEntity.removePlayedDownloads.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity();
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t ShowEntity.$removePlayedDownloads.getter()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDB8();
}

uint64_t ShowEntity.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShowEntity();
  return sub_1DA49CC94(v1 + *(int *)(v3 + 72), a1, &qword_1EDAE4108);
}

uint64_t ShowEntity.artworkData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for ShowEntity() + 76);
  v2 = *(_QWORD *)v1;
  sub_1DA498D8C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t ShowEntity.shareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShowEntity();
  return sub_1DA49CC94(v1 + *(int *)(v3 + 80), a1, &qword_1EDAE5020);
}

uint64_t ShowEntity.init(id:objectID:uuid:adamID:feedURL:explicit:title:description:provider:lastDatePlayed:followed:notificationsEnabled:hidePlayedEpisodes:removePlayedDownloads:artworkModel:artworkData:shareURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17, unsigned __int8 a18, unsigned __int8 a19, unsigned __int8 a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  int v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v81 = a8;
  v78 = a7;
  v76 = a6;
  v72 = a4;
  v73 = a5;
  v67 = a3;
  v71 = a2;
  v70 = a1;
  v91 = a23;
  v92 = a24;
  v89 = a21;
  v90 = a22;
  v87 = a19;
  v88 = a20;
  v85 = a17;
  v86 = a18;
  v69 = a16;
  v83 = a14;
  v84 = a15;
  v79 = a12;
  v80 = a13;
  v77 = a11;
  v74 = a10;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v25);
  v82 = (uint64_t)v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v75 = (uint64_t)v59 - v28;
  v29 = sub_1DA66C220();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (int *)type metadata accessor for ShowEntity();
  v68 = (uint64_t)a9 + v32[8];
  v33 = v68;
  v34 = sub_1DA66C358();
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v35(v33, 1, 1, v34);
  v36 = v32[9];
  v66 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AC0);
  sub_1DA66C208();
  *(_QWORD *)((char *)a9 + v36) = MEMORY[0x1DF09A7BC](v31);
  v37 = v32[10];
  v65 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AB8);
  sub_1DA66C208();
  *(_QWORD *)((char *)a9 + v37) = MEMORY[0x1DF09A7B0](v31);
  v38 = v32[11];
  v64 = v38;
  sub_1DA66C208();
  *(_QWORD *)((char *)a9 + v38) = MEMORY[0x1DF09A7B0](v31);
  v39 = v32[12];
  sub_1DA66C208();
  *(_QWORD *)((char *)a9 + v39) = MEMORY[0x1DF09A7B0](v31);
  v40 = v32[13];
  v62 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AB0);
  sub_1DA66C208();
  *(_QWORD *)((char *)a9 + v40) = MEMORY[0x1DF09A7A4](v31);
  v41 = v32[14];
  v63 = v41;
  sub_1DA66C208();
  *(_QWORD *)((char *)a9 + v41) = MEMORY[0x1DF09A7BC](v31);
  v42 = v32[15];
  v61 = v42;
  sub_1DA66C208();
  *(_QWORD *)((char *)a9 + v42) = MEMORY[0x1DF09A7BC](v31);
  v43 = v32[16];
  v59[1] = v43;
  sub_1DA66C208();
  *(_QWORD *)((char *)a9 + v43) = MEMORY[0x1DF09A7BC](v31);
  v44 = v32[17];
  sub_1DA66C208();
  *(_QWORD *)((char *)a9 + v44) = MEMORY[0x1DF09A7BC](v31);
  v60 = (uint64_t)a9 + v32[18];
  v45 = v60;
  v46 = sub_1DA66CA0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 1, 1, v46);
  v47 = (char *)a9 + v32[19];
  *(_OWORD *)v47 = xmmword_1DA6833E0;
  v48 = (uint64_t)a9 + v32[20];
  v35(v48, 1, 1, v34);
  v49 = v71;
  *a9 = v70;
  a9[1] = v49;
  v50 = v67;
  v51 = v72;
  a9[2] = v67;
  a9[3] = v51;
  v52 = v76;
  a9[4] = v73;
  a9[5] = v52;
  v76 = v50;
  v53 = v78;
  sub_1DA606C24(v78, v68);
  LOBYTE(v93) = v81;
  sub_1DA66BDAC();
  v93 = v74;
  v94 = v77;
  sub_1DA66BDAC();
  v93 = v79;
  v94 = v80;
  sub_1DA66BDAC();
  v93 = v83;
  v94 = v84;
  sub_1DA66BDAC();
  v54 = v69;
  v55 = v75;
  sub_1DA49CC94(v69, v75, &qword_1EDADE6C8);
  sub_1DA49CC94(v55, v82, &qword_1EDADE6C8);
  sub_1DA66BDAC();
  sub_1DA47E2F0(v55, &qword_1EDADE6C8);
  LOBYTE(v93) = v85;
  sub_1DA66BDAC();
  LOBYTE(v93) = v86;
  sub_1DA66BDAC();
  LOBYTE(v93) = v87;
  sub_1DA66BDAC();
  LOBYTE(v93) = v88;
  sub_1DA66BDAC();

  sub_1DA47E2F0(v54, &qword_1EDADE6C8);
  sub_1DA47E2F0(v53, &qword_1EDAE5020);
  sub_1DA605AA4(v89, v60, &qword_1EDAE4108);
  sub_1DA49873C(*(_QWORD *)v47, *((_QWORD *)v47 + 1));
  v57 = v91;
  v56 = v92;
  *(_QWORD *)v47 = v90;
  *((_QWORD *)v47 + 1) = v57;
  return sub_1DA605AA4(v56, v48, &qword_1EDAE5020);
}

void ShowEntity.init(model:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  unsigned int v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  unsigned __int8 v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  id v53;
  void *v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  id v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v4);
  v80 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v62 - v13;
  MEMORY[0x1E0C80A78](v14);
  v79 = (uint64_t)&v62 - v15;
  v16 = sub_1DA66C358();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v62 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v20 = MEMORY[0x1E0C80A78](v19).n128_u64[0];
  v22 = (char *)&v62 - v21;
  v23 = objc_msgSend(a1, sel_objectID, v20);
  v24 = objc_msgSend(v23, sel_URIRepresentation);

  sub_1DA66C304();
  v25 = sub_1DA66C298();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  v28 = objc_msgSend(a1, sel_objectID);
  v29 = objc_msgSend(a1, sel_uuid);
  if (v29)
  {
    v30 = v29;
    v31 = sub_1DA66F8BC();
    v71 = v32;
    v72 = v31;

  }
  else
  {
    v71 = 0;
    v72 = 0;
  }
  if (((unint64_t)objc_msgSend(a1, sel_storeCollectionId) & 0x8000000000000000) == 0)
  {
    v74 = v27;
    v75 = v25;
    v70 = (void *)sub_1DA66DCE4();
    v33 = objc_msgSend(a1, sel_feedURL);
    if (v33)
    {
      v34 = v33;
      sub_1DA66F8BC();

      swift_bridgeObjectRetain();
      sub_1DA66C334();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v79, 1, 1, v16);
    }
    v35 = objc_msgSend(a1, sel_isExplicit);
    v36 = objc_msgSend(a1, sel_title);
    if (v36)
    {
      v37 = v36;
      v38 = sub_1DA66F8BC();
      v67 = v39;
      v68 = v38;

    }
    else
    {
      v67 = 0xE000000000000000;
      v68 = 0;
    }
    v40 = objc_msgSend(a1, sel_description);
    v41 = sub_1DA66F8BC();
    v65 = v42;

    v43 = objc_msgSend(a1, sel_provider);
    v78 = a2;
    v69 = v35;
    v66 = v41;
    if (v43)
    {
      v44 = v43;
      v45 = sub_1DA66F8BC();
      v63 = v46;
      v64 = v45;

    }
    else
    {
      v63 = 0xE000000000000000;
      v64 = 0;
    }
    v73 = v28;
    objc_msgSend(a1, sel_lastDatePlayed);
    sub_1DA66C3AC();
    v47 = sub_1DA66C430();
    v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56);
    v77 = v8;
    v48(v8, 0, 1, v47);
    v49 = objc_msgSend(a1, sel_subscribed);
    v50 = objc_msgSend(a1, sel_notifications);
    objc_msgSend(a1, sel_hidesPlayedEpisodes);
    v51 = MTPodcastHidesPlayedEpisodesResolved();
    v52 = objc_msgSend(a1, sel_deletePlayedEpisodesResolvedValue);
    sub_1DA670210();
    v53 = objc_msgSend(a1, sel_bestAvailableStoreCleanURL);
    if (v53)
    {
      v54 = v53;
      v55 = v62;
      sub_1DA66C304();

      v56 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v56(v11, v55, v16);
      v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v57(v11, 0, 1, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) != 1)
      {
        v58 = v76;
        v56(v76, v11, v16);
        v59 = (uint64_t)v58;
        v57(v58, 0, 1, v16);
LABEL_22:
        ShowEntity.init(id:objectID:uuid:adamID:feedURL:explicit:title:description:provider:lastDatePlayed:followed:notificationsEnabled:hidePlayedEpisodes:removePlayedDownloads:artworkModel:artworkData:shareURL:)(v75, v74, v73, v72, v71, v70, v79, v69, v78, v68, v67, v66, v65, v64, v63, (uint64_t)v77, v49, v50, v51,
          v52,
          v80,
          0,
          0xF000000000000000,
          v59);

        return;
      }
    }
    else
    {
      v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v57(v11, 1, 1, v16);
    }
    v60 = objc_msgSend(a1, sel_feedURL);
    if (v60)
    {
      v61 = v60;
      sub_1DA66F8BC();

      swift_bridgeObjectRetain();
      v59 = (uint64_t)v76;
      sub_1DA66C334();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v59 = (uint64_t)v76;
      v57(v76, 1, 1, v16);
    }
    sub_1DA47E2F0((uint64_t)v11, &qword_1EDAE5020);
    goto LABEL_22;
  }
  sub_1DA670564();
  __break(1u);
}

void *ShowEntity.init(mediaObject:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *result;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  _BYTE v81[25];

  v76 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v3);
  v75 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C928();
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v6);
  v74 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v78 = (uint64_t)&v64 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v77 = (uint64_t)&v64 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v64 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v64 - v19;
  *(_QWORD *)&v22 = MEMORY[0x1E0C80A78](v21).n128_u64[0];
  v24 = (char *)&v64 - v23;
  v25 = objc_msgSend(a1, sel_podcastStoreId, v22);
  v73 = v12;
  if (v25)
  {
    v26 = v25;
    sub_1DA66F8BC();

    v29 = sub_1DA66DCCC();
    swift_bridgeObjectRelease();
    result = (void *)objc_opt_self();
    if (v29 < 0)
    {
      __break(1u);
      return result;
    }
    v31 = objc_msgSend(result, sel_storeCleanURLForAdamID_, v29);
    if (v31)
    {
      v32 = v31;
      sub_1DA66C304();

      v33 = sub_1DA66C358();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v20, 0, 1, v33);
    }
    else
    {
      v34 = sub_1DA66C358();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v20, 1, 1, v34);
    }
  }
  else
  {
    v27 = objc_msgSend(a1, sel_resolvedFeedURL);
    if (v27)
    {
      v28 = v27;
      sub_1DA66F8BC();

      swift_bridgeObjectRetain();
      sub_1DA66C334();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v35 = sub_1DA66C358();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v17, 1, 1, v35);
    }
    v20 = v17;
  }
  v36 = (uint64_t)v24;
  sub_1DA49B0AC((uint64_t)v20, (uint64_t)v24);
  v37 = objc_msgSend(a1, sel_artworkTemplateURL);
  if (v37)
  {
    v38 = v37;
    sub_1DA66F8BC();

    v79 = xmmword_1DA67D4C0;
    v80 = 0u;
    memset(v81, 0, sizeof(v81));
    swift_bridgeObjectRetain();
    sub_1DA66C904();
    sub_1DA66CC1C();
    v39 = v78;
    sub_1DA66CA00();
    v40 = sub_1DA66CA0C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = sub_1DA66CA0C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v78, 1, 1, v41);
  }
  v42 = a1;
  v43 = sub_1DA66D318();
  v71 = v44;
  v72 = v43;

  v45 = v42;
  sub_1DA66D318();

  v70 = (void *)sub_1DA66DCCC();
  swift_bridgeObjectRelease();
  v46 = objc_msgSend(v45, (SEL)&selRef_changePositionToElapsedInterval_ + 3);
  if (v46)
  {
    v47 = v46;
    sub_1DA66F8BC();

    swift_bridgeObjectRetain();
    sub_1DA66C334();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v48 = sub_1DA66C358();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v77, 1, 1, v48);
  }
  v69 = objc_msgSend(v45, sel_isExplicit);
  v49 = objc_msgSend(v45, sel_title);
  if (v49)
  {
    v50 = v49;
    v68 = sub_1DA66F8BC();
    v67 = v51;

  }
  else
  {
    v68 = 0;
    v67 = 0xE000000000000000;
  }
  v52 = objc_msgSend(v45, sel_description);
  v66 = sub_1DA66F8BC();
  v65 = v53;

  v54 = objc_msgSend(v45, sel_provider);
  if (v54)
  {
    v55 = v54;
    v56 = sub_1DA66F8BC();
    v58 = v57;

  }
  else
  {
    v56 = 0;
    v58 = 0xE000000000000000;
  }
  v59 = sub_1DA66C430();
  v60 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v75, 1, 1, v59);
  v61 = v78;
  v62 = v74;
  sub_1DA49CC94(v78, v74, &qword_1EDAE4108);
  v63 = (uint64_t)v73;
  sub_1DA49CC94(v36, (uint64_t)v73, &qword_1EDAE5020);
  ShowEntity.init(id:objectID:uuid:adamID:feedURL:explicit:title:description:provider:lastDatePlayed:followed:notificationsEnabled:hidePlayedEpisodes:removePlayedDownloads:artworkModel:artworkData:shareURL:)(v72, v71, 0, 0, 0, v70, v77, v69, v76, v68, v67, v66, v65, v56, v58, v60, 0, 0, 0,
    0,
    v62,
    0,
    0xF000000000000000,
    v63);

  sub_1DA47E2F0(v61, &qword_1EDAE4108);
  return (void *)sub_1DA47E2F0(v36, &qword_1EDAE5020);
}

uint64_t ShowEntity.preferredIdentifier()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  if (v1)
    v2 = *(_QWORD *)(v0 + 16);
  else
    v2 = *(_QWORD *)(v0 + 40);
  v3 = v1;
  return v2;
}

uint64_t sub_1DA614E5C@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1F02687D0 != -1)
    swift_once();
  *a1 = qword_1F026DC08;
  return sub_1DA66BE60();
}

uint64_t sub_1DA614EB0()
{
  uint64_t v0;

  if (qword_1F02687C0 != -1)
    swift_once();
  v0 = qword_1F026DBE0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1DA614F0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1DA614F38()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_1DA614F5C(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v4 = v2[4];
  if (v4)
  {
    v5 = result;
    v6 = v2[3] == result && v4 == a2;
    if (v6 || (result = sub_1DA6706D8(), (result & 1) != 0))
    {
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRelease();
      *v2 = v5;
      v2[1] = a2;
    }
  }
  return result;
}

Swift::Void __swiftcall ShowEntity.alignID(with:)(Swift::String with)
{
  uint64_t *v1;
  void *object;
  void *v3;
  uint64_t countAndFlagsBits;
  BOOL v5;

  object = with._object;
  v3 = (void *)v1[4];
  if (v3)
  {
    countAndFlagsBits = with._countAndFlagsBits;
    v5 = v1[3] == with._countAndFlagsBits && v3 == object;
    if (v5 || (sub_1DA6706D8() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v1 = countAndFlagsBits;
      v1[1] = (uint64_t)object;
    }
  }
}

Swift::Void __swiftcall ShowEntity.alignID(with:)(NSManagedObjectID with)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  objc_class *v9;
  id v10;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)v2[2];
  if (v8)
  {
    sub_1DA524308();
    v9 = with.super.isa;
    v10 = v8;
    v11 = sub_1DA6701A4();

    if ((v11 & 1) != 0)
    {
      v12 = -[objc_class URIRepresentation](v9, sel_URIRepresentation);
      sub_1DA66C304();

      v13 = sub_1DA66C298();
      v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      *v2 = v13;
      v2[1] = v15;
    }
  }
}

uint64_t sub_1DA615144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02687C8 != -1)
    swift_once();
  v2 = sub_1DA66CA3C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F026DBF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t ShowEntity.alignID(with:)(uint64_t result)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (v1[5] == result)
  {
    v2 = v1;
    sub_1DA4F726C();
    v3 = sub_1DA670354();
    v5 = v4;
    result = swift_bridgeObjectRelease();
    *v2 = v3;
    v2[1] = v5;
  }
  return result;
}

uint64_t sub_1DA61521C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66C220();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1DA66C208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1DA66C01C();
}

uint64_t sub_1DA615300()
{
  sub_1DA50E1D0((unint64_t *)&qword_1EDAE3AF0, (uint64_t)&protocol conformance descriptor for ShowEntity);
  return sub_1DA66BCEC();
}

uint64_t sub_1DA61534C()
{
  sub_1DA50E1D0(&qword_1EDAE3B20, (uint64_t)&protocol conformance descriptor for ShowEntity);
  return sub_1DA66C028();
}

uint64_t ShowEntity.debugDescription.getter()
{
  uint64_t v0;
  id v1;

  sub_1DA670444();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  v1 = *(id *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B8E0);
  sub_1DA66F904();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA67027C();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA4F726C();
  sub_1DA670354();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  type metadata accessor for ShowEntity();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  return 0;
}

uint64_t ShowEntity.mediaRepresentation.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[7] = a1;
  v2[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v2[9] = swift_task_alloc();
  v3 = sub_1DA66BDF4();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for ShowEntity();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA6157FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 40);
  if ((sub_1DA66DCD8() & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 64);
    v3 = *(_QWORD *)(v2 + 32);
    sub_1DA4E6FEC(v2, *(_QWORD *)(v0 + 112));
    v4 = *(_QWORD *)(v0 + 112);
    if (!v3)
      swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DA47F880(v4, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  }
  else
  {
    *(_QWORD *)(v0 + 48) = v1;
    sub_1DA4F726C();
    sub_1DA670354();
  }
  v5 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 64);
  sub_1DA66BDA0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v6, *MEMORY[0x1E0C90C68], v9);
  sub_1DA498D8C(*(_QWORD *)(v10 + *(int *)(v5 + 76)), *(_QWORD *)(v10 + *(int *)(v5 + 76) + 8));
  sub_1DA66BDA0();
  v11 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  sub_1DA66BE00();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA6159A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return ShowEntity.mediaRepresentation.getter(a1);
}

uint64_t ShowEntity.prepare(asPartOf:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 56) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v2;
  *v2 = v1;
  v2[1] = sub_1DA615A70;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA615A70()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;

  v2 = (_QWORD *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = v2[7];
  v5 = type metadata accessor for ShowEntity();
  v2[10] = v5;
  v6 = v4 + *(int *)(v5 + 72);
  v8 = (char *)&dword_1F026DCF8 + dword_1F026DCF8;
  v7 = (_QWORD *)swift_task_alloc();
  v2[11] = v7;
  *v7 = v2;
  v7[1] = sub_1DA615B48;
  return ((uint64_t (*)(uint64_t, _QWORD *))v8)(v6, v2 + 2);
}

uint64_t sub_1DA615B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 104) = a2;
    *(_QWORD *)(v6 + 112) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA615BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v5 = v4 + *(int *)(v3 + 76);
  sub_1DA49873C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA615C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v3[7] = v2;
  v3[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  v4 = (_QWORD *)swift_task_alloc();
  v3[9] = v4;
  *v4 = v3;
  v4[1] = sub_1DA615C9C;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA615C9C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  char *v6;

  v2 = (_QWORD *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = v2[7] + *(int *)(v2[8] + 72);
  v6 = (char *)&dword_1F026DCF8 + dword_1F026DCF8;
  v5 = (_QWORD *)swift_task_alloc();
  v2[11] = v5;
  *v5 = v2;
  v5[1] = sub_1DA615D68;
  return ((uint64_t (*)(uint64_t, _QWORD *))v6)(v4, v2 + 2);
}

uint64_t sub_1DA615D68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 104) = a2;
    *(_QWORD *)(v6 + 112) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA615DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v5 = v4 + *(int *)(v3 + 76);
  sub_1DA49873C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static ShowEntity.transferRepresentation.getter()
{
  type metadata accessor for ShowEntity();
  sub_1DA50E1D0(&qword_1F026DC20, (uint64_t)&protocol conformance descriptor for ShowEntity);
  sub_1DA6076EC();
  return sub_1DA66C688();
}

uint64_t sub_1DA615EA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];

  v4 = type metadata accessor for ShowEntity();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA49CC94(a1 + *(int *)(v4 + 80), (uint64_t)v9, &qword_1EDAE5020);
  v10 = sub_1DA66C358();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DA47E2F0((uint64_t)v9, &qword_1EDAE5020);
    sub_1DA4E6FEC(a1, (uint64_t)v6);
LABEL_4:
    sub_1DA66BDA0();
    v12 = v16[0];
    v14 = v16[1];
    goto LABEL_5;
  }
  v12 = sub_1DA66C298();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  sub_1DA4E6FEC(a1, (uint64_t)v6);
  if (!v14)
    goto LABEL_4;
LABEL_5:
  result = sub_1DA47F880((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  *a2 = v12;
  a2[1] = v14;
  return result;
}

uint64_t sub_1DA616028()
{
  return sub_1DA50E1D0(&qword_1EDAE3AE8, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

uint64_t sub_1DA61604C()
{
  return sub_1DA50E1D0(&qword_1EDAE3B08, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

uint64_t sub_1DA616070()
{
  return sub_1DA50E1D0(&qword_1EDAE3B30, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

unint64_t sub_1DA616098()
{
  unint64_t result;

  result = qword_1F026DDD0;
  if (!qword_1F026DDD0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ShowEntity.ShowEntityQuery, &type metadata for ShowEntity.ShowEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026DDD0);
  }
  return result;
}

uint64_t sub_1DA6160DC()
{
  return sub_1DA50E1D0(&qword_1EDAE3B10, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

uint64_t sub_1DA616100()
{
  return sub_1DA50E1D0(&qword_1EDAE3B18, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

uint64_t sub_1DA616124()
{
  return sub_1DA50E1D0(&qword_1EDAE3B00, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

uint64_t sub_1DA616148()
{
  return sub_1DA50E1D0(&qword_1EDAE3B20, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

uint64_t sub_1DA61616C()
{
  return sub_1DA4841D4(&qword_1F026DC28, (uint64_t *)&unk_1F026DC30, MEMORY[0x1E0C91998]);
}

uint64_t sub_1DA616198()
{
  return sub_1DA50E1D0(&qword_1EDAE3B28, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

uint64_t sub_1DA6161BC()
{
  return sub_1DA50E1D0((unint64_t *)&qword_1EDAE3AF0, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

uint64_t sub_1DA6161E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA6161F0()
{
  sub_1DA6076EC();
  return sub_1DA66C688();
}

uint64_t sub_1DA616244@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for ShowEntity();
  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA616294()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t sub_1DA6162E0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for ShowEntity();
  result = sub_1DA66BDA0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DA616334@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for ShowEntity();
  result = sub_1DA66BDA0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DA616388@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for ShowEntity();
  result = sub_1DA66BDA0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DA6163DC()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDA0();
}

uint64_t sub_1DA616420@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for ShowEntity();
  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA616470()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t sub_1DA6164BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for ShowEntity();
  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA61650C()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t sub_1DA616558@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for ShowEntity();
  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA6165A8()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t sub_1DA6165F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for ShowEntity();
  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA616644()
{
  type metadata accessor for ShowEntity();
  return sub_1DA66BDAC();
}

uint64_t *initializeBufferWithCopyOfBuffer for ShowEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  _QWORD *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  id *v35;
  int v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  id *v44;
  int v45;
  id v46;
  id *v47;
  int v48;
  id v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  void (*v63)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v74;
  _QWORD *v75;
  unsigned int (*v76)(_QWORD *, uint64_t, int *);
  _QWORD *v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  char *__dst;
  int *__dsta;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v10 = (void *)a2[2];
    v9 = a2[3];
    a1[2] = (uint64_t)v10;
    a1[3] = v9;
    v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    v12 = a3[8];
    __dst = (char *)a1 + v12;
    v13 = (char *)a2 + v12;
    *a1 = v7;
    a1[1] = v8;
    v14 = sub_1DA66C358();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    v17 = v10;
    swift_bridgeObjectRetain();
    v78 = v16;
    v79 = v15;
    if (v16(v13, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    v20 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v20) = *(uint64_t *)((char *)a2 + v20);
    v21 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    v22 = a3[14];
    *(uint64_t *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    v23 = a3[16];
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)v4 + v23) = *(uint64_t *)((char *)a2 + v23);
    v24 = a3[18];
    __dsta = a3;
    *(uint64_t *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    v77 = (uint64_t *)((char *)v4 + v24);
    v75 = (uint64_t *)((char *)a2 + v24);
    v25 = (int *)sub_1DA66CA0C();
    v74 = *((_QWORD *)v25 - 1);
    v76 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v74 + 48);
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    v26 = v75;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    if (v76(v75, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      memcpy(v77, v75, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      v29 = v14;
      v28 = __dsta;
      v30 = v79;
    }
    else
    {
      v31 = v75[1];
      *v77 = *v75;
      v77[1] = v31;
      v32 = *((unsigned __int8 *)v75 + 32);
      swift_bridgeObjectRetain();
      if (v32 == 255)
      {
        *((_OWORD *)v77 + 1) = *((_OWORD *)v75 + 1);
        *((_BYTE *)v77 + 32) = *((_BYTE *)v75 + 32);
      }
      else
      {
        v33 = v75[2];
        v34 = v75[3];
        sub_1DA481390(v33, v34, v32);
        v77[2] = v33;
        v77[3] = v34;
        v26 = v75;
        *((_BYTE *)v77 + 32) = v32;
      }
      v29 = v14;
      v28 = __dsta;
      v30 = v79;
      *(_OWORD *)(v77 + 5) = *(_OWORD *)(v26 + 5);
      v35 = (id *)(v26 + 7);
      v36 = *((unsigned __int8 *)v26 + 64);
      if (v36 == 255)
      {
        v77[7] = *v35;
        *((_BYTE *)v77 + 64) = *((_BYTE *)v26 + 64);
      }
      else
      {
        v37 = *v35;
        sub_1DA4E762C(*v35, *((_BYTE *)v26 + 64));
        v77[7] = v37;
        *((_BYTE *)v77 + 64) = v36;
      }
      v38 = (id *)(v26 + 9);
      v39 = *((unsigned __int8 *)v26 + 80);
      if (v39 == 255)
      {
        v77[9] = *v38;
        *((_BYTE *)v77 + 80) = *((_BYTE *)v26 + 80);
      }
      else
      {
        v40 = *v38;
        sub_1DA4E762C(*v38, *((_BYTE *)v26 + 80));
        v77[9] = v40;
        *((_BYTE *)v77 + 80) = v39;
      }
      v41 = (id *)(v26 + 11);
      v42 = *((unsigned __int8 *)v26 + 96);
      if (v42 == 255)
      {
        v77[11] = *v41;
        *((_BYTE *)v77 + 96) = *((_BYTE *)v26 + 96);
      }
      else
      {
        v43 = *v41;
        sub_1DA4E762C(*v41, *((_BYTE *)v26 + 96));
        v77[11] = v43;
        *((_BYTE *)v77 + 96) = v42;
      }
      v44 = (id *)(v26 + 13);
      v45 = *((unsigned __int8 *)v26 + 112);
      if (v45 == 255)
      {
        v77[13] = *v44;
        *((_BYTE *)v77 + 112) = *((_BYTE *)v26 + 112);
      }
      else
      {
        v46 = *v44;
        sub_1DA4E762C(*v44, *((_BYTE *)v26 + 112));
        v77[13] = v46;
        *((_BYTE *)v77 + 112) = v45;
      }
      v47 = (id *)(v26 + 15);
      v48 = *((unsigned __int8 *)v26 + 128);
      if (v48 == 255)
      {
        v77[15] = *v47;
        *((_BYTE *)v77 + 128) = *((_BYTE *)v26 + 128);
      }
      else
      {
        v49 = *v47;
        sub_1DA4E762C(*v47, *((_BYTE *)v26 + 128));
        v77[15] = v49;
        *((_BYTE *)v77 + 128) = v48;
      }
      *((_BYTE *)v77 + 129) = *((_BYTE *)v26 + 129);
      v50 = v25[11];
      v51 = (char *)v77 + v50;
      v52 = v26;
      v53 = (char *)v26 + v50;
      v54 = sub_1DA66C928();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v51, v53, v54);
      v55 = v25[12];
      v56 = (_QWORD *)((char *)v77 + v55);
      v57 = (_QWORD *)((char *)v52 + v55);
      v58 = v57[1];
      *v56 = *v57;
      v56[1] = v58;
      *((_BYTE *)v77 + v25[13]) = *((_BYTE *)v52 + v25[13]);
      *((_BYTE *)v77 + v25[14]) = *((_BYTE *)v52 + v25[14]);
      *((_BYTE *)v77 + v25[15]) = *((_BYTE *)v52 + v25[15]);
      v59 = v25[16];
      v60 = (_QWORD *)((char *)v77 + v59);
      v61 = (_QWORD *)((char *)v52 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      v63 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v74 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v63(v77, 0, 1, v25);
    }
    v64 = v28[19];
    v65 = (char *)v4 + v64;
    v66 = (char *)a2 + v64;
    v67 = *((_QWORD *)v66 + 1);
    if (v67 >> 60 == 15)
    {
      *(_OWORD *)v65 = *(_OWORD *)v66;
    }
    else
    {
      v68 = *(_QWORD *)v66;
      sub_1DA498750(*(_QWORD *)v66, *((_QWORD *)v66 + 1));
      *(_QWORD *)v65 = v68;
      *((_QWORD *)v65 + 1) = v67;
    }
    v69 = v28[20];
    v70 = (char *)v4 + v69;
    v71 = (char *)a2 + v69;
    if (v78(v71, 1, v29))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v70, v71, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v70, 0, 1, v29);
    }
  }
  return v4;
}

uint64_t destroy for ShowEntity(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = a1 + a2[8];
  v5 = sub_1DA66C358();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = a1 + a2[18];
  v9 = sub_1DA66CA0C();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v10 = *(unsigned __int8 *)(v8 + 32);
    if (v10 != 255)
      sub_1DA47F868(*(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), v10);
    v11 = *(unsigned __int8 *)(v8 + 64);
    if (v11 != 255)
      sub_1DA4E7898(*(id *)(v8 + 56), v11);
    v12 = *(unsigned __int8 *)(v8 + 80);
    if (v12 != 255)
      sub_1DA4E7898(*(id *)(v8 + 72), v12);
    v13 = *(unsigned __int8 *)(v8 + 96);
    if (v13 != 255)
      sub_1DA4E7898(*(id *)(v8 + 88), v13);
    v14 = *(unsigned __int8 *)(v8 + 112);
    if (v14 != 255)
      sub_1DA4E7898(*(id *)(v8 + 104), v14);
    v15 = *(unsigned __int8 *)(v8 + 128);
    if (v15 != 255)
      sub_1DA4E7898(*(id *)(v8 + 120), v15);
    v16 = v8 + *(int *)(v9 + 44);
    v17 = sub_1DA66C928();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v18 = (uint64_t *)(a1 + a2[19]);
  v19 = v18[1];
  if (v19 >> 60 != 15)
    sub_1DA4986F8(*v18, v19);
  v20 = a1 + a2[20];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v20, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  return result;
}

_QWORD *initializeWithCopy for ShowEntity(_QWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id *v45;
  int v46;
  id v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  void (*v61)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v72;
  _QWORD *v73;
  unsigned int (*v74)(_QWORD *, uint64_t, int *);
  _QWORD *v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  char *__dst;
  uint64_t v79;

  v6 = *a2;
  v7 = a2[1];
  v9 = (void *)a2[2];
  v8 = a2[3];
  a1[2] = v9;
  a1[3] = v8;
  v10 = a2[5];
  a1[4] = a2[4];
  a1[5] = v10;
  v11 = a3[8];
  __dst = (char *)a1 + v11;
  v12 = (char *)a2 + v11;
  *a1 = v6;
  a1[1] = v7;
  v13 = sub_1DA66C358();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  v16 = v9;
  swift_bridgeObjectRetain();
  v76 = v15;
  v79 = v13;
  v77 = v14;
  if (v15(v12, 1, v13))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  v18 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
  v19 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
  v20 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v20) = *(uint64_t *)((char *)a2 + v20);
  v21 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v21) = *(uint64_t *)((char *)a2 + v21);
  v22 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
  v75 = (_QWORD *)((char *)a1 + v22);
  v73 = (uint64_t *)((char *)a2 + v22);
  v23 = (int *)sub_1DA66CA0C();
  v72 = *((_QWORD *)v23 - 1);
  v74 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v72 + 48);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  v24 = v73;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v74(v73, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v75, v73, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    v27 = a3;
    v26 = v79;
    v28 = v77;
  }
  else
  {
    v29 = v73[1];
    *v75 = *v73;
    v75[1] = v29;
    v30 = *((unsigned __int8 *)v73 + 32);
    swift_bridgeObjectRetain();
    if (v30 == 255)
    {
      *((_OWORD *)v75 + 1) = *((_OWORD *)v73 + 1);
      *((_BYTE *)v75 + 32) = *((_BYTE *)v73 + 32);
    }
    else
    {
      v31 = v73[2];
      v32 = v73[3];
      sub_1DA481390(v31, v32, v30);
      v75[2] = v31;
      v75[3] = v32;
      v24 = v73;
      *((_BYTE *)v75 + 32) = v30;
    }
    v27 = a3;
    v26 = v79;
    v28 = v77;
    *(_OWORD *)(v75 + 5) = *(_OWORD *)(v24 + 5);
    v33 = (id *)(v24 + 7);
    v34 = *((unsigned __int8 *)v24 + 64);
    if (v34 == 255)
    {
      v75[7] = *v33;
      *((_BYTE *)v75 + 64) = *((_BYTE *)v24 + 64);
    }
    else
    {
      v35 = *v33;
      sub_1DA4E762C(*v33, *((_BYTE *)v24 + 64));
      v75[7] = v35;
      *((_BYTE *)v75 + 64) = v34;
    }
    v36 = (id *)(v24 + 9);
    v37 = *((unsigned __int8 *)v24 + 80);
    if (v37 == 255)
    {
      v75[9] = *v36;
      *((_BYTE *)v75 + 80) = *((_BYTE *)v24 + 80);
    }
    else
    {
      v38 = *v36;
      sub_1DA4E762C(*v36, *((_BYTE *)v24 + 80));
      v75[9] = v38;
      *((_BYTE *)v75 + 80) = v37;
    }
    v39 = (id *)(v24 + 11);
    v40 = *((unsigned __int8 *)v24 + 96);
    if (v40 == 255)
    {
      v75[11] = *v39;
      *((_BYTE *)v75 + 96) = *((_BYTE *)v24 + 96);
    }
    else
    {
      v41 = *v39;
      sub_1DA4E762C(*v39, *((_BYTE *)v24 + 96));
      v75[11] = v41;
      *((_BYTE *)v75 + 96) = v40;
    }
    v42 = (id *)(v24 + 13);
    v43 = *((unsigned __int8 *)v24 + 112);
    if (v43 == 255)
    {
      v75[13] = *v42;
      *((_BYTE *)v75 + 112) = *((_BYTE *)v24 + 112);
    }
    else
    {
      v44 = *v42;
      sub_1DA4E762C(*v42, *((_BYTE *)v24 + 112));
      v75[13] = v44;
      *((_BYTE *)v75 + 112) = v43;
    }
    v45 = (id *)(v24 + 15);
    v46 = *((unsigned __int8 *)v24 + 128);
    if (v46 == 255)
    {
      v75[15] = *v45;
      *((_BYTE *)v75 + 128) = *((_BYTE *)v24 + 128);
    }
    else
    {
      v47 = *v45;
      sub_1DA4E762C(*v45, *((_BYTE *)v24 + 128));
      v75[15] = v47;
      *((_BYTE *)v75 + 128) = v46;
    }
    *((_BYTE *)v75 + 129) = *((_BYTE *)v24 + 129);
    v48 = v23[11];
    v49 = (char *)v75 + v48;
    v50 = v24;
    v51 = (char *)v24 + v48;
    v52 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v49, v51, v52);
    v53 = v23[12];
    v54 = (_QWORD *)((char *)v75 + v53);
    v55 = (_QWORD *)((char *)v50 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    *((_BYTE *)v75 + v23[13]) = *((_BYTE *)v50 + v23[13]);
    *((_BYTE *)v75 + v23[14]) = *((_BYTE *)v50 + v23[14]);
    *((_BYTE *)v75 + v23[15]) = *((_BYTE *)v50 + v23[15]);
    v57 = v23[16];
    v58 = (_QWORD *)((char *)v75 + v57);
    v59 = (_QWORD *)((char *)v50 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v72 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61(v75, 0, 1, v23);
  }
  v62 = v27[19];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = *((_QWORD *)v64 + 1);
  if (v65 >> 60 == 15)
  {
    *(_OWORD *)v63 = *(_OWORD *)v64;
  }
  else
  {
    v66 = *(_QWORD *)v64;
    sub_1DA498750(*(_QWORD *)v64, *((_QWORD *)v64 + 1));
    *(_QWORD *)v63 = v66;
    *((_QWORD *)v63 + 1) = v65;
  }
  v67 = v27[20];
  v68 = (char *)a1 + v67;
  v69 = (char *)a2 + v67;
  if (v76(v69, 1, v26))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v68, v69, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v68, 0, 1, v26);
  }
  return a1;
}

char *assignWithCopy for ShowEntity(char *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, int *);
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  __int128 *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  __int128 v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  id *v47;
  int v48;
  id v49;
  id v50;
  id *v51;
  int v52;
  id v53;
  id v54;
  id *v55;
  int v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  void (*v69)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v70;
  uint64_t v71;
  char v72;
  __int128 v73;
  id *v74;
  id *v75;
  int v76;
  id v77;
  void *v78;
  char v79;
  id v80;
  char v81;
  id v82;
  id *v83;
  id *v84;
  int v85;
  id v86;
  void *v87;
  char v88;
  id v89;
  char v90;
  id v91;
  id *v92;
  id *v93;
  int v94;
  id v95;
  void *v96;
  char v97;
  id v98;
  char v99;
  id v100;
  id *v101;
  id *v102;
  int v103;
  id v104;
  void *v105;
  char v106;
  id v107;
  char v108;
  id v109;
  id *v110;
  id *v111;
  int v112;
  id v113;
  void *v114;
  char v115;
  id v116;
  char v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  _QWORD *v127;
  char *v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  int v140;
  int v141;
  uint64_t v142;
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(char *, uint64_t, uint64_t);
  uint64_t v147;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)*((_QWORD *)a1 + 2);
  v7 = (void *)a2[2];
  *((_QWORD *)a1 + 2) = v7;
  v8 = v7;

  *((_QWORD *)a1 + 3) = a2[3];
  *((_QWORD *)a1 + 4) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 5) = a2[5];
  v9 = a3[8];
  v10 = &a1[v9];
  v11 = (char *)a2 + v9;
  v12 = sub_1DA66C358();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  v146 = v14;
  v147 = v13;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)((char *)a2 + a3[9]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)((char *)a2 + a3[10]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)((char *)a2 + a3[11]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)((char *)a2 + a3[12]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)((char *)a2 + a3[13]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)((char *)a2 + a3[14]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[a3[15]] = *(_QWORD *)((char *)a2 + a3[15]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)((char *)a2 + a3[16]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)((char *)a2 + a3[17]);
  sub_1DA66BE60();
  swift_release();
  v18 = a3[18];
  v19 = (uint64_t)&a1[v18];
  v20 = (char *)a2 + v18;
  v21 = (int *)sub_1DA66CA0C();
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23((uint64_t)v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      v144 = v12;
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
      v26 = v20[32];
      swift_bridgeObjectRetain();
      if (v26 == 255)
      {
        v38 = *((_OWORD *)v20 + 1);
        *(_BYTE *)(v19 + 32) = v20[32];
        *(_OWORD *)(v19 + 16) = v38;
      }
      else
      {
        v27 = *((_QWORD *)v20 + 2);
        v28 = *((_QWORD *)v20 + 3);
        sub_1DA481390(v27, v28, v26);
        *(_QWORD *)(v19 + 16) = v27;
        *(_QWORD *)(v19 + 24) = v28;
        *(_BYTE *)(v19 + 32) = v26;
      }
      *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
      *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
      v39 = (id *)(v20 + 56);
      v40 = v20[64];
      if (v40 == 255)
      {
        v42 = *v39;
        *(_BYTE *)(v19 + 64) = v20[64];
        *(_QWORD *)(v19 + 56) = v42;
      }
      else
      {
        v41 = *v39;
        sub_1DA4E762C(*v39, v20[64]);
        *(_QWORD *)(v19 + 56) = v41;
        *(_BYTE *)(v19 + 64) = v40;
      }
      v12 = v144;
      v43 = (id *)(v20 + 72);
      v44 = v20[80];
      if (v44 == 255)
      {
        v46 = *v43;
        *(_BYTE *)(v19 + 80) = v20[80];
        *(_QWORD *)(v19 + 72) = v46;
      }
      else
      {
        v45 = *v43;
        sub_1DA4E762C(*v43, v20[80]);
        *(_QWORD *)(v19 + 72) = v45;
        *(_BYTE *)(v19 + 80) = v44;
      }
      v47 = (id *)(v20 + 88);
      v48 = v20[96];
      if (v48 == 255)
      {
        v50 = *v47;
        *(_BYTE *)(v19 + 96) = v20[96];
        *(_QWORD *)(v19 + 88) = v50;
      }
      else
      {
        v49 = *v47;
        sub_1DA4E762C(*v47, v20[96]);
        *(_QWORD *)(v19 + 88) = v49;
        *(_BYTE *)(v19 + 96) = v48;
      }
      v51 = (id *)(v20 + 104);
      v52 = v20[112];
      if (v52 == 255)
      {
        v54 = *v51;
        *(_BYTE *)(v19 + 112) = v20[112];
        *(_QWORD *)(v19 + 104) = v54;
      }
      else
      {
        v53 = *v51;
        sub_1DA4E762C(*v51, v20[112]);
        *(_QWORD *)(v19 + 104) = v53;
        *(_BYTE *)(v19 + 112) = v52;
      }
      v55 = (id *)(v20 + 120);
      v56 = v20[128];
      if (v56 == 255)
      {
        v58 = *v55;
        *(_BYTE *)(v19 + 128) = v20[128];
        *(_QWORD *)(v19 + 120) = v58;
      }
      else
      {
        v57 = *v55;
        sub_1DA4E762C(*v55, v20[128]);
        *(_QWORD *)(v19 + 120) = v57;
        *(_BYTE *)(v19 + 128) = v56;
      }
      *(_BYTE *)(v19 + 129) = v20[129];
      v59 = v21[11];
      v60 = v19 + v59;
      v61 = &v20[v59];
      v62 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
      v63 = v21[12];
      v64 = (_QWORD *)(v19 + v63);
      v65 = &v20[v63];
      *v64 = *(_QWORD *)v65;
      v64[1] = *((_QWORD *)v65 + 1);
      *(_BYTE *)(v19 + v21[13]) = v20[v21[13]];
      *(_BYTE *)(v19 + v21[14]) = v20[v21[14]];
      *(_BYTE *)(v19 + v21[15]) = v20[v21[15]];
      v66 = v21[16];
      v67 = (_QWORD *)(v19 + v66);
      v68 = &v20[v66];
      *v67 = *(_QWORD *)v68;
      v67[1] = *((_QWORD *)v68 + 1);
      v69 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v22 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69(v19, 0, 1, v21);
      goto LABEL_75;
    }
LABEL_13:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v19, v20, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_75;
  }
  if (v25)
  {
    sub_1DA47F880(v19, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    goto LABEL_13;
  }
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = (__int128 *)(v19 + 16);
  v31 = (__int128 *)(v20 + 16);
  v32 = v20[32];
  v145 = v12;
  if (*(unsigned __int8 *)(v19 + 32) == 255)
  {
    if (v32 == 255)
    {
      v73 = *v31;
      *(_BYTE *)(v19 + 32) = v20[32];
      *v30 = v73;
    }
    else
    {
      v70 = *((_QWORD *)v20 + 2);
      v71 = *((_QWORD *)v20 + 3);
      sub_1DA481390(v70, v71, v32);
      *(_QWORD *)(v19 + 16) = v70;
      *(_QWORD *)(v19 + 24) = v71;
      *(_BYTE *)(v19 + 32) = v32;
    }
  }
  else if (v32 == 255)
  {
    sub_1DA4E8928(v19 + 16);
    v72 = v20[32];
    *v30 = *v31;
    *(_BYTE *)(v19 + 32) = v72;
  }
  else
  {
    v33 = *((_QWORD *)v20 + 2);
    v34 = *((_QWORD *)v20 + 3);
    sub_1DA481390(v33, v34, v32);
    v35 = *(_QWORD *)(v19 + 16);
    v36 = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v19 + 16) = v33;
    *(_QWORD *)(v19 + 24) = v34;
    v37 = *(_BYTE *)(v19 + 32);
    *(_BYTE *)(v19 + 32) = v32;
    sub_1DA47F868(v35, v36, v37);
  }
  *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
  *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
  v74 = (id *)(v19 + 56);
  v75 = (id *)(v20 + 56);
  v76 = v20[64];
  if (*(unsigned __int8 *)(v19 + 64) == 255)
  {
    v12 = v145;
    if (v76 == 255)
    {
      v82 = *v75;
      *(_BYTE *)(v19 + 64) = v20[64];
      *v74 = v82;
    }
    else
    {
      v80 = *v75;
      sub_1DA4E762C(*v75, v20[64]);
      *(_QWORD *)(v19 + 56) = v80;
      *(_BYTE *)(v19 + 64) = v76;
    }
  }
  else
  {
    v12 = v145;
    if (v76 == 255)
    {
      sub_1DA4E895C(v19 + 56);
      v81 = v20[64];
      *v74 = *v75;
      *(_BYTE *)(v19 + 64) = v81;
    }
    else
    {
      v77 = *v75;
      sub_1DA4E762C(*v75, v20[64]);
      v78 = *(void **)(v19 + 56);
      *(_QWORD *)(v19 + 56) = v77;
      v79 = *(_BYTE *)(v19 + 64);
      *(_BYTE *)(v19 + 64) = v76;
      sub_1DA4E7898(v78, v79);
    }
  }
  v83 = (id *)(v19 + 72);
  v84 = (id *)(v20 + 72);
  v85 = v20[80];
  if (*(unsigned __int8 *)(v19 + 80) == 255)
  {
    if (v85 == 255)
    {
      v91 = *v84;
      *(_BYTE *)(v19 + 80) = v20[80];
      *v83 = v91;
    }
    else
    {
      v89 = *v84;
      sub_1DA4E762C(*v84, v20[80]);
      *(_QWORD *)(v19 + 72) = v89;
      *(_BYTE *)(v19 + 80) = v85;
    }
  }
  else if (v85 == 255)
  {
    sub_1DA4E895C(v19 + 72);
    v90 = v20[80];
    *v83 = *v84;
    *(_BYTE *)(v19 + 80) = v90;
  }
  else
  {
    v86 = *v84;
    sub_1DA4E762C(*v84, v20[80]);
    v87 = *(void **)(v19 + 72);
    *(_QWORD *)(v19 + 72) = v86;
    v88 = *(_BYTE *)(v19 + 80);
    *(_BYTE *)(v19 + 80) = v85;
    sub_1DA4E7898(v87, v88);
  }
  v92 = (id *)(v19 + 88);
  v93 = (id *)(v20 + 88);
  v94 = v20[96];
  if (*(unsigned __int8 *)(v19 + 96) == 255)
  {
    if (v94 == 255)
    {
      v100 = *v93;
      *(_BYTE *)(v19 + 96) = v20[96];
      *v92 = v100;
    }
    else
    {
      v98 = *v93;
      sub_1DA4E762C(*v93, v20[96]);
      *(_QWORD *)(v19 + 88) = v98;
      *(_BYTE *)(v19 + 96) = v94;
    }
  }
  else if (v94 == 255)
  {
    sub_1DA4E895C(v19 + 88);
    v99 = v20[96];
    *v92 = *v93;
    *(_BYTE *)(v19 + 96) = v99;
  }
  else
  {
    v95 = *v93;
    sub_1DA4E762C(*v93, v20[96]);
    v96 = *(void **)(v19 + 88);
    *(_QWORD *)(v19 + 88) = v95;
    v97 = *(_BYTE *)(v19 + 96);
    *(_BYTE *)(v19 + 96) = v94;
    sub_1DA4E7898(v96, v97);
  }
  v101 = (id *)(v19 + 104);
  v102 = (id *)(v20 + 104);
  v103 = v20[112];
  if (*(unsigned __int8 *)(v19 + 112) == 255)
  {
    if (v103 == 255)
    {
      v109 = *v102;
      *(_BYTE *)(v19 + 112) = v20[112];
      *v101 = v109;
    }
    else
    {
      v107 = *v102;
      sub_1DA4E762C(*v102, v20[112]);
      *(_QWORD *)(v19 + 104) = v107;
      *(_BYTE *)(v19 + 112) = v103;
    }
  }
  else if (v103 == 255)
  {
    sub_1DA4E895C(v19 + 104);
    v108 = v20[112];
    *v101 = *v102;
    *(_BYTE *)(v19 + 112) = v108;
  }
  else
  {
    v104 = *v102;
    sub_1DA4E762C(*v102, v20[112]);
    v105 = *(void **)(v19 + 104);
    *(_QWORD *)(v19 + 104) = v104;
    v106 = *(_BYTE *)(v19 + 112);
    *(_BYTE *)(v19 + 112) = v103;
    sub_1DA4E7898(v105, v106);
  }
  v110 = (id *)(v19 + 120);
  v111 = (id *)(v20 + 120);
  v112 = v20[128];
  if (*(unsigned __int8 *)(v19 + 128) == 255)
  {
    if (v112 == 255)
    {
      v118 = *v111;
      *(_BYTE *)(v19 + 128) = v20[128];
      *v110 = v118;
    }
    else
    {
      v116 = *v111;
      sub_1DA4E762C(*v111, v20[128]);
      *(_QWORD *)(v19 + 120) = v116;
      *(_BYTE *)(v19 + 128) = v112;
    }
  }
  else if (v112 == 255)
  {
    sub_1DA4E895C(v19 + 120);
    v117 = v20[128];
    *v110 = *v111;
    *(_BYTE *)(v19 + 128) = v117;
  }
  else
  {
    v113 = *v111;
    sub_1DA4E762C(*v111, v20[128]);
    v114 = *(void **)(v19 + 120);
    *(_QWORD *)(v19 + 120) = v113;
    v115 = *(_BYTE *)(v19 + 128);
    *(_BYTE *)(v19 + 128) = v112;
    sub_1DA4E7898(v114, v115);
  }
  *(_BYTE *)(v19 + 129) = v20[129];
  v119 = v21[11];
  v120 = v19 + v119;
  v121 = &v20[v119];
  v122 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 24))(v120, v121, v122);
  v123 = v21[12];
  v124 = (_QWORD *)(v19 + v123);
  v125 = &v20[v123];
  *v124 = *(_QWORD *)v125;
  v124[1] = *((_QWORD *)v125 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + v21[13]) = v20[v21[13]];
  *(_BYTE *)(v19 + v21[14]) = v20[v21[14]];
  *(_BYTE *)(v19 + v21[15]) = v20[v21[15]];
  v126 = v21[16];
  v127 = (_QWORD *)(v19 + v126);
  v128 = &v20[v126];
  *v127 = *(_QWORD *)v128;
  v127[1] = *((_QWORD *)v128 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_75:
  v129 = a3[19];
  v130 = (uint64_t *)&a1[v129];
  v131 = (_QWORD *)((char *)a2 + v129);
  v132 = *(_QWORD *)((char *)a2 + v129 + 8);
  if (*(_QWORD *)&a1[v129 + 8] >> 60 == 15)
  {
    if (v132 >> 60 != 15)
    {
      v133 = *v131;
      sub_1DA498750(*v131, v132);
      *v130 = v133;
      v130[1] = v132;
      goto LABEL_82;
    }
    goto LABEL_80;
  }
  if (v132 >> 60 == 15)
  {
    sub_1DA4E89CC((uint64_t)v130);
LABEL_80:
    *(_OWORD *)v130 = *(_OWORD *)v131;
    goto LABEL_82;
  }
  v134 = *v131;
  sub_1DA498750(*v131, v132);
  v135 = *v130;
  v136 = v130[1];
  *v130 = v134;
  v130[1] = v132;
  sub_1DA4986F8(v135, v136);
LABEL_82:
  v137 = a3[20];
  v138 = &a1[v137];
  v139 = (char *)a2 + v137;
  v140 = v146(&a1[v137], 1, v12);
  v141 = v146(v139, 1, v12);
  if (!v140)
  {
    if (!v141)
    {
      (*(void (**)(char *, char *, uint64_t))(v147 + 24))(v138, v139, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v147 + 8))(v138, v12);
    goto LABEL_87;
  }
  if (v141)
  {
LABEL_87:
    v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v138, v139, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v138, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for ShowEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  unsigned int (*v35)(const void *, uint64_t, uint64_t);
  uint64_t v36;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = a3[8];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1DA66C358();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v18 = (_OWORD *)(a1 + v17);
  v19 = (_OWORD *)(a2 + v17);
  v20 = (int *)sub_1DA66CA0C();
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = v19[1];
    *v18 = *v19;
    v18[1] = v23;
    *((_BYTE *)v18 + 32) = *((_BYTE *)v19 + 32);
    *(_OWORD *)((char *)v18 + 40) = *(_OWORD *)((char *)v19 + 40);
    *((_QWORD *)v18 + 7) = *((_QWORD *)v19 + 7);
    *((_BYTE *)v18 + 64) = *((_BYTE *)v19 + 64);
    *(_OWORD *)((char *)v18 + 113) = *(_OWORD *)((char *)v19 + 113);
    *(_OWORD *)((char *)v18 + 104) = *(_OWORD *)((char *)v19 + 104);
    *(_OWORD *)((char *)v18 + 88) = *(_OWORD *)((char *)v19 + 88);
    *(_OWORD *)((char *)v18 + 72) = *(_OWORD *)((char *)v19 + 72);
    *((_BYTE *)v18 + 129) = *((_BYTE *)v19 + 129);
    v24 = v20[11];
    v35 = v11;
    v36 = v10;
    v25 = (char *)v18 + v24;
    v26 = (char *)v19 + v24;
    v27 = sub_1DA66C928();
    v28 = v25;
    v29 = v26;
    v11 = v35;
    v10 = v36;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v28, v29, v27);
    *(_OWORD *)((char *)v18 + v20[12]) = *(_OWORD *)((char *)v19 + v20[12]);
    *((_BYTE *)v18 + v20[13]) = *((_BYTE *)v19 + v20[13]);
    *((_BYTE *)v18 + v20[14]) = *((_BYTE *)v19 + v20[14]);
    *((_BYTE *)v18 + v20[15]) = *((_BYTE *)v19 + v20[15]);
    *(_OWORD *)((char *)v18 + v20[16]) = *(_OWORD *)((char *)v19 + v20[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  v30 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  if (v11(v32, 1, v9))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for ShowEntity(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, int *);
  int v24;
  int v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v46;
  _OWORD *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  int v53;
  int v54;
  void *v55;
  _QWORD *v56;
  int v57;
  int v58;
  void *v59;
  _QWORD *v60;
  int v61;
  int v62;
  void *v63;
  _QWORD *v64;
  int v65;
  int v66;
  void *v67;
  _QWORD *v68;
  int v69;
  int v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(char *, uint64_t, uint64_t);

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)*((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = a2[2];

  v8 = a2[4];
  *((_QWORD *)a1 + 3) = a2[3];
  *((_QWORD *)a1 + 4) = v8;
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 5) = a2[5];
  v9 = a3[8];
  v10 = &a1[v9];
  v11 = (char *)a2 + v9;
  v12 = sub_1DA66C358();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  v86 = v13;
  v87 = v14;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)((char *)a2 + a3[9]);
  swift_release();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)((char *)a2 + a3[10]);
  swift_release();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)((char *)a2 + a3[11]);
  swift_release();
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)((char *)a2 + a3[12]);
  swift_release();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)((char *)a2 + a3[13]);
  swift_release();
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)((char *)a2 + a3[14]);
  swift_release();
  *(_QWORD *)&a1[a3[15]] = *(_QWORD *)((char *)a2 + a3[15]);
  swift_release();
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)((char *)a2 + a3[16]);
  swift_release();
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)((char *)a2 + a3[17]);
  swift_release();
  v18 = a3[18];
  v19 = (uint64_t)&a1[v18];
  v20 = (char *)a2 + v18;
  v21 = (int *)sub_1DA66CA0C();
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23((uint64_t)v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      v26 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + 16) = v26;
      *(_BYTE *)(v19 + 32) = v20[32];
      *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
      *(_QWORD *)(v19 + 56) = *((_QWORD *)v20 + 7);
      *(_BYTE *)(v19 + 64) = v20[64];
      *(_OWORD *)(v19 + 113) = *(_OWORD *)(v20 + 113);
      *(_OWORD *)(v19 + 104) = *(_OWORD *)(v20 + 104);
      *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
      *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
      *(_BYTE *)(v19 + 129) = v20[129];
      v27 = v21[11];
      v28 = v19 + v27;
      v29 = &v20[v27];
      v30 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)(v19 + v21[12]) = *(_OWORD *)&v20[v21[12]];
      *(_BYTE *)(v19 + v21[13]) = v20[v21[13]];
      *(_BYTE *)(v19 + v21[14]) = v20[v21[14]];
      *(_BYTE *)(v19 + v21[15]) = v20[v21[15]];
      *(_OWORD *)(v19 + v21[16]) = *(_OWORD *)&v20[v21[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
      v32 = v86;
      goto LABEL_14;
    }
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v19, v20, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  if (v25)
  {
    sub_1DA47F880(v19, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    goto LABEL_12;
  }
  v46 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v46;
  swift_bridgeObjectRelease();
  v47 = v20 + 16;
  v48 = *(unsigned __int8 *)(v19 + 32);
  if (v48 != 255)
  {
    v49 = v20[32];
    if (v49 != 255)
    {
      v50 = *(_QWORD *)(v19 + 16);
      v51 = *(_QWORD *)(v19 + 24);
      *(_OWORD *)(v19 + 16) = *v47;
      *(_BYTE *)(v19 + 32) = v49;
      sub_1DA47F868(v50, v51, v48);
      goto LABEL_33;
    }
    sub_1DA4E8928(v19 + 16);
  }
  *(_OWORD *)(v19 + 16) = *v47;
  *(_BYTE *)(v19 + 32) = v20[32];
LABEL_33:
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
  v52 = v20 + 56;
  v53 = *(unsigned __int8 *)(v19 + 64);
  if (v53 != 255)
  {
    v54 = v20[64];
    if (v54 != 255)
    {
      v55 = *(void **)(v19 + 56);
      *(_QWORD *)(v19 + 56) = *v52;
      *(_BYTE *)(v19 + 64) = v54;
      sub_1DA4E7898(v55, v53);
      goto LABEL_38;
    }
    sub_1DA4E895C(v19 + 56);
  }
  *(_QWORD *)(v19 + 56) = *v52;
  *(_BYTE *)(v19 + 64) = v20[64];
LABEL_38:
  v32 = v86;
  v56 = v20 + 72;
  v57 = *(unsigned __int8 *)(v19 + 80);
  if (v57 != 255)
  {
    v58 = v20[80];
    if (v58 != 255)
    {
      v59 = *(void **)(v19 + 72);
      *(_QWORD *)(v19 + 72) = *v56;
      *(_BYTE *)(v19 + 80) = v58;
      sub_1DA4E7898(v59, v57);
      goto LABEL_43;
    }
    sub_1DA4E895C(v19 + 72);
  }
  *(_QWORD *)(v19 + 72) = *v56;
  *(_BYTE *)(v19 + 80) = v20[80];
LABEL_43:
  v60 = v20 + 88;
  v61 = *(unsigned __int8 *)(v19 + 96);
  if (v61 != 255)
  {
    v62 = v20[96];
    if (v62 != 255)
    {
      v63 = *(void **)(v19 + 88);
      *(_QWORD *)(v19 + 88) = *v60;
      *(_BYTE *)(v19 + 96) = v62;
      sub_1DA4E7898(v63, v61);
      goto LABEL_48;
    }
    sub_1DA4E895C(v19 + 88);
  }
  *(_QWORD *)(v19 + 88) = *v60;
  *(_BYTE *)(v19 + 96) = v20[96];
LABEL_48:
  v64 = v20 + 104;
  v65 = *(unsigned __int8 *)(v19 + 112);
  if (v65 != 255)
  {
    v66 = v20[112];
    if (v66 != 255)
    {
      v67 = *(void **)(v19 + 104);
      *(_QWORD *)(v19 + 104) = *v64;
      *(_BYTE *)(v19 + 112) = v66;
      sub_1DA4E7898(v67, v65);
      goto LABEL_53;
    }
    sub_1DA4E895C(v19 + 104);
  }
  *(_QWORD *)(v19 + 104) = *v64;
  *(_BYTE *)(v19 + 112) = v20[112];
LABEL_53:
  v68 = v20 + 120;
  v69 = *(unsigned __int8 *)(v19 + 128);
  if (v69 == 255)
  {
LABEL_57:
    *(_QWORD *)(v19 + 120) = *v68;
    *(_BYTE *)(v19 + 128) = v20[128];
    goto LABEL_58;
  }
  v70 = v20[128];
  if (v70 == 255)
  {
    sub_1DA4E895C(v19 + 120);
    goto LABEL_57;
  }
  v71 = *(void **)(v19 + 120);
  *(_QWORD *)(v19 + 120) = *v68;
  *(_BYTE *)(v19 + 128) = v70;
  sub_1DA4E7898(v71, v69);
LABEL_58:
  *(_BYTE *)(v19 + 129) = v20[129];
  v72 = v21[11];
  v73 = v19 + v72;
  v74 = &v20[v72];
  v75 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 40))(v73, v74, v75);
  v76 = v21[12];
  v77 = (_QWORD *)(v19 + v76);
  v78 = &v20[v76];
  v80 = *(_QWORD *)v78;
  v79 = *((_QWORD *)v78 + 1);
  *v77 = v80;
  v77[1] = v79;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + v21[13]) = v20[v21[13]];
  *(_BYTE *)(v19 + v21[14]) = v20[v21[14]];
  *(_BYTE *)(v19 + v21[15]) = v20[v21[15]];
  v81 = v21[16];
  v82 = (_QWORD *)(v19 + v81);
  v83 = &v20[v81];
  v85 = *(_QWORD *)v83;
  v84 = *((_QWORD *)v83 + 1);
  *v82 = v85;
  v82[1] = v84;
  swift_bridgeObjectRelease();
LABEL_14:
  v33 = a3[19];
  v34 = (uint64_t)&a1[v33];
  v35 = (char *)a2 + v33;
  v36 = *(_QWORD *)&a1[v33 + 8];
  if (v36 >> 60 == 15)
  {
LABEL_17:
    *(_OWORD *)v34 = *(_OWORD *)v35;
    goto LABEL_19;
  }
  v37 = *((_QWORD *)v35 + 1);
  if (v37 >> 60 == 15)
  {
    sub_1DA4E89CC(v34);
    goto LABEL_17;
  }
  v38 = *(_QWORD *)v34;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = v37;
  sub_1DA4986F8(v38, v36);
LABEL_19:
  v39 = a3[20];
  v40 = &a1[v39];
  v41 = (char *)a2 + v39;
  v42 = v87(&a1[v39], 1, v12);
  v43 = v87(v41, 1, v12);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v40, v41, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v40, v12);
    goto LABEL_24;
  }
  if (v43)
  {
LABEL_24:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v40, v41, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v40, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA6188AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 72);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ShowEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA618960(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 72);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1DA618A04()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DA56DA8C(319, (unint64_t *)&qword_1EDAE0148, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
  {
    sub_1DA56DA8C(319, (unint64_t *)&qword_1EDAE4110, (void (*)(uint64_t))MEMORY[0x1E0D7D7F0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1DA618AFC()
{
  return sub_1DA4841D4(&qword_1F026DC48, &qword_1F026DC50, MEMORY[0x1E0CA87C8]);
}

uint64_t EpisodeEntity.title.getter()
{
  uint64_t v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t EpisodeEntity.preferredIdentifier()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  if (v1)
    v2 = *(_QWORD *)(v0 + 16);
  else
    v2 = *(_QWORD *)(v0 + 40);
  v3 = v1;
  return v2;
}

uint64_t EpisodeEntity.prepare(asPartOf:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 56) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v2;
  *v2 = v1;
  v2[1] = sub_1DA618C1C;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA618C1C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;

  v2 = (_QWORD *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = v2[7];
  v5 = type metadata accessor for EpisodeEntity();
  v2[10] = v5;
  v6 = v4 + *(int *)(v5 + 84);
  v8 = (char *)&dword_1F026DC98 + dword_1F026DC98;
  v7 = (_QWORD *)swift_task_alloc();
  v2[11] = v7;
  *v7 = v2;
  v7[1] = sub_1DA618CF4;
  return ((uint64_t (*)(uint64_t, _QWORD *))v8)(v6, v2 + 2);
}

uint64_t sub_1DA618CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 104) = a2;
    *(_QWORD *)(v6 + 112) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA618D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v5 = v4 + *(int *)(v3 + 88);
  sub_1DA49873C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for EpisodeEntity()
{
  uint64_t result;

  result = qword_1EDAE3B98;
  if (!qword_1EDAE3B98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA618E04(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_1DA66DEF4();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v4 = sub_1DA66CEBC();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  v2[12] = swift_task_alloc();
  v5 = sub_1DA66CA0C();
  v2[13] = v5;
  v2[14] = *(_QWORD *)(v5 - 8);
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA618EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_1DA49CC94(*(_QWORD *)(v0 + 24), v3, &qword_1EDAE4108);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DA47E2F0(*(_QWORD *)(v0 + 96), &qword_1EDAE4108);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD **)(v0 + 32);
    sub_1DA51C1BC(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    ArtworkModel.preferredRequest.getter(v5);
    v8 = v6[3];
    v7 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v8);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v9;
    *v9 = v0;
    v9[1] = sub_1DA61901C;
    return ImageProvider.data(for:)(*(_QWORD *)(v0 + 88), v8, v7);
  }
}

uint64_t sub_1DA61901C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 136) = a2;
    *(_QWORD *)(v6 + 144) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA619098()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  _QWORD *v8;

  v1 = *(_QWORD **)(v0 + 32);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  sub_1DA66CDC0();
  v5 = v4;
  v7 = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v8;
  *v8 = v0;
  v8[1] = sub_1DA619128;
  return ImageProvider.placeholderData(with:)(v2, v3, v5, v7);
}

uint64_t sub_1DA619128(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 160) = a2;
    *(_QWORD *)(v6 + 168) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA6191A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_1DA66DEF4();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v4 = sub_1DA66CEBC();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  v2[12] = swift_task_alloc();
  v5 = sub_1DA66CA0C();
  v2[13] = v5;
  v2[14] = *(_QWORD *)(v5 - 8);
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA619288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_1DA49CC94(*(_QWORD *)(v0 + 24), v3, &qword_1EDAE4108);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DA47E2F0(*(_QWORD *)(v0 + 96), &qword_1EDAE4108);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD **)(v0 + 32);
    sub_1DA51C1BC(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    ArtworkModel.preferredRequest.getter(v5);
    v8 = v6[3];
    v7 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v8);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v9;
    *v9 = v0;
    v9[1] = sub_1DA6193BC;
    return ImageProvider.data(for:)(*(_QWORD *)(v0 + 88), v8, v7);
  }
}

uint64_t sub_1DA6193BC(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 136) = a2;
    *(_QWORD *)(v6 + 144) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA619438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
}

uint64_t sub_1DA6194D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  _QWORD *v8;

  v1 = *(_QWORD **)(v0 + 32);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  sub_1DA66CDC0();
  v5 = v4;
  v7 = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v8;
  *v8 = v0;
  v8[1] = sub_1DA619568;
  return ImageProvider.placeholderData(with:)(v2, v3, v5, v7);
}

uint64_t sub_1DA619568(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 160) = a2;
    *(_QWORD *)(v6 + 168) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA6195E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
}

uint64_t sub_1DA619684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  sub_1DA66DE28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  v5 = sub_1DA66DEDC();
  v6 = sub_1DA66FDA8();
  if (os_log_type_enabled(v5, v6))
  {
    v8 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 64);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
    *(_QWORD *)(v0 + 16) = v11;
    sub_1DA6702C4();
    *v10 = v11;
    v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v12(v7, v20);
    _os_log_impl(&dword_1DA478000, v5, v6, "Episode entity was unable to prepare artwork or placeholder for %@.", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v10, -1, -1);
    MEMORY[0x1DF0A0474](v9, -1, -1);

  }
  else
  {
    v14 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 64);

    v12 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v12(v13, v15);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  v12(v17, v18);
  sub_1DA47F880(v16, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
}

uint64_t sub_1DA619888()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1DA66F8BC();
  qword_1F026DC58 = result;
  unk_1F026DC60 = v1;
  return result;
}

uint64_t static EpisodeEntity.databaseEntityName.getter()
{
  uint64_t v0;

  if (qword_1F02687D8 != -1)
    swift_once();
  v0 = qword_1F026DC58;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1DA619910()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DA66CA3C();
  __swift_allocate_value_buffer(v0, qword_1F026DC68);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F026DC68);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0D7D838], v0);
}

uint64_t static EpisodeEntity.serverContentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02687E0 != -1)
    swift_once();
  v2 = sub_1DA66CA3C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F026DC68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_1DA6199D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, _QWORD, uint64_t);
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1D8);
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1E0);
  v1 = *(unsigned __int8 *)(*(_QWORD *)(v0 - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DA678510;
  v4 = v3 + v2;
  v5 = *(int *)(v0 + 48);
  v6 = *MEMORY[0x1E0D7D838];
  v7 = sub_1DA66CA3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v4, v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1E8);
  v8 = sub_1DA66CA60();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DA678FA0;
  v13 = v12 + v11;
  v14 = *(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104);
  v14(v13, *MEMORY[0x1E0D7D898], v8);
  v14(v13 + v10, *MEMORY[0x1E0D7D8A0], v8);
  v14(v13 + 2 * v10, *MEMORY[0x1E0D7D8B8], v8);
  v14(v13 + 3 * v10, *MEMORY[0x1E0D7D8B0], v8);
  *(_QWORD *)(v4 + v5) = v12;
  result = sub_1DA63CC0C(v3);
  qword_1F026DC80 = result;
  return result;
}

uint64_t static EpisodeEntity.typedIncludes.getter()
{
  if (qword_1F02687E8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA619BAC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  qword_1F026DC88 = result;
  return result;
}

uint64_t static EpisodeEntity.defaultQuery.getter@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1F02687F0 != -1)
    swift_once();
  *a1 = qword_1F026DC88;
  return sub_1DA66BE60();
}

uint64_t static EpisodeEntity.typeDisplayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66C220();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1DA66C208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1DA66C01C();
}

uint64_t EpisodeEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AC8);
  MEMORY[0x1E0C80A78](v2);
  v31 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)&v30 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - v10;
  v12 = sub_1DA66C220();
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_1DA66F880();
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  sub_1DA66BDA0();
  if (v36)
  {
    sub_1DA66F874();
    sub_1DA66F868();
    sub_1DA66BDA0();
    sub_1DA66F85C();
    swift_bridgeObjectRelease();
    sub_1DA66F868();
    sub_1DA66C214();
    sub_1DA66F874();
    sub_1DA66F868();
    sub_1DA66F85C();
    swift_bridgeObjectRelease();
    sub_1DA66F868();
    sub_1DA66C214();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v11, 0, 1, v34);
    v17 = v1 + *(int *)(type metadata accessor for EpisodeEntity() + 88);
    v18 = *(_QWORD *)(v17 + 8);
    if (v18 >> 60 == 15)
    {
      v19 = sub_1DA66BF8C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v32, 1, 1, v19);
    }
    else
    {
      v24 = *(_QWORD *)v17;
      sub_1DA498750(*(_QWORD *)v17, *(_QWORD *)(v17 + 8));
      sub_1DA498750(v24, v18);
      v25 = v32;
      sub_1DA66BF80();
      v26 = sub_1DA66BF8C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
      sub_1DA49873C(v24, v18);
    }
  }
  else
  {
    sub_1DA66F874();
    sub_1DA66F868();
    sub_1DA66BDA0();
    sub_1DA66F85C();
    swift_bridgeObjectRelease();
    sub_1DA66F868();
    sub_1DA66C214();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v8, 1, 1, v34);
    v20 = v1 + *(int *)(type metadata accessor for EpisodeEntity() + 88);
    v21 = *(_QWORD *)(v20 + 8);
    v22 = v31;
    if (v21 >> 60 == 15)
    {
      v23 = sub_1DA66BF8C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    }
    else
    {
      v27 = *(_QWORD *)v20;
      sub_1DA498750(*(_QWORD *)v20, *(_QWORD *)(v20 + 8));
      sub_1DA498750(v27, v21);
      sub_1DA66BF80();
      v28 = sub_1DA66BF8C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v22, 0, 1, v28);
      sub_1DA49873C(v27, v21);
    }
  }
  return sub_1DA66BF98();
}

uint64_t EpisodeEntity.showName.getter()
{
  uint64_t v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t EpisodeEntity.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *EpisodeEntity.objectID.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t EpisodeEntity.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodeEntity.adamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t EpisodeEntity.title.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*EpisodeEntity.title.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$title.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.description.getter()
{
  uint64_t v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t EpisodeEntity.description.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*EpisodeEntity.description.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$description.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.category.getter()
{
  uint64_t v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t EpisodeEntity.category.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*EpisodeEntity.category.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$category.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.author.getter()
{
  uint64_t v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t EpisodeEntity.author.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*EpisodeEntity.author.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$author.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.showName.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*EpisodeEntity.showName.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$showName.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.downloadDate.getter()
{
  return sub_1DA66BDA0();
}

uint64_t sub_1DA61A640(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1DA49CC94(a1, (uint64_t)&v9 - v6, &qword_1EDADE6C8);
  sub_1DA49CC94((uint64_t)v7, (uint64_t)v4, &qword_1EDADE6C8);
  sub_1DA66BDAC();
  return sub_1DA47E2F0((uint64_t)v7, &qword_1EDADE6C8);
}

uint64_t EpisodeEntity.downloadDate.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v2);
  sub_1DA49CC94(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EDADE6C8);
  sub_1DA66BDAC();
  return sub_1DA47E2F0(a1, &qword_1EDADE6C8);
}

uint64_t (*EpisodeEntity.downloadDate.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$downloadDate.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.publishedDate.getter()
{
  return sub_1DA66BDA0();
}

uint64_t sub_1DA61A818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1DA49CC94(a1, (uint64_t)&v9 - v6, &qword_1EDADE6C8);
  sub_1DA49CC94((uint64_t)v7, (uint64_t)v4, &qword_1EDADE6C8);
  sub_1DA66BDAC();
  return sub_1DA47E2F0((uint64_t)v7, &qword_1EDADE6C8);
}

uint64_t EpisodeEntity.publishedDate.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v2);
  sub_1DA49CC94(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EDADE6C8);
  sub_1DA66BDAC();
  return sub_1DA47E2F0(a1, &qword_1EDADE6C8);
}

uint64_t (*EpisodeEntity.publishedDate.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$publishedDate.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.episodeNumber.getter()
{
  uint64_t v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t EpisodeEntity.episodeNumber.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*EpisodeEntity.episodeNumber.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$episodeNumber.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.isPlayed.getter()
{
  unsigned __int8 v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t EpisodeEntity.isPlayed.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*EpisodeEntity.isPlayed.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$isPlayed.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.isSaved.getter()
{
  unsigned __int8 v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t EpisodeEntity.isSaved.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*EpisodeEntity.isSaved.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$isSaved.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.isDownloaded.getter()
{
  unsigned __int8 v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t EpisodeEntity.isDownloaded.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*EpisodeEntity.isDownloaded.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$isDownloaded.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.isTranscriptAvailable.getter()
{
  unsigned __int8 v1;

  sub_1DA66BDA0();
  return v1;
}

uint64_t EpisodeEntity.isTranscriptAvailable.setter()
{
  return sub_1DA66BDAC();
}

uint64_t (*EpisodeEntity.isTranscriptAvailable.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BD94();
  return sub_1DA4F7884;
}

uint64_t EpisodeEntity.$isTranscriptAvailable.getter()
{
  return sub_1DA66BDB8();
}

uint64_t EpisodeEntity.transcriptRequestInformation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EpisodeEntity();
  return sub_1DA49CC94(v1 + *(int *)(v3 + 80), a1, qword_1F0269260);
}

uint64_t EpisodeEntity.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EpisodeEntity();
  return sub_1DA49CC94(v1 + *(int *)(v3 + 84), a1, &qword_1EDAE4108);
}

uint64_t EpisodeEntity.artworkData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for EpisodeEntity() + 88);
  v2 = *(_QWORD *)v1;
  sub_1DA498D8C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t EpisodeEntity.shareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EpisodeEntity();
  return sub_1DA49CC94(v1 + *(int *)(v3 + 92), a1, &qword_1EDAE5020);
}

uint64_t EpisodeEntity.init(id:objectID:uuid:adamID:title:description:category:author:showName:downloadDate:publishedDate:episodeNumber:isPlayed:isSaved:isDownloaded:isTranscriptAvailable:artworkModel:artworkData:shareURL:transcriptInformation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,unsigned __int8 a22,unsigned __int8 a23,unsigned __int8 a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v71 = a7;
  v72 = a8;
  v68 = a6;
  v66 = a5;
  v64 = a4;
  v63 = a3;
  v62 = a2;
  v61 = a1;
  v86 = a27;
  v87 = a28;
  v84 = a25;
  v85 = a26;
  v82 = a23;
  v83 = a24;
  v80 = a21;
  v81 = a22;
  v78 = a19;
  v79 = a20;
  v76 = a17;
  v77 = a18;
  v74 = a15;
  v75 = a16;
  v73 = a14;
  v69 = a12;
  v70 = a13;
  v67 = a11;
  v65 = a10;
  v55 = a29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v55 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v55 - v34;
  v36 = sub_1DA66C220();
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v55 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AB8);
  sub_1DA66C208();
  v60 = MEMORY[0x1DF09A7B0](v38);
  a9[6] = v60;
  sub_1DA66C208();
  v59 = MEMORY[0x1DF09A7B0](v38);
  a9[7] = v59;
  sub_1DA66C208();
  v58 = MEMORY[0x1DF09A7B0](v38);
  a9[8] = v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DCA0);
  sub_1DA66C208();
  v57 = MEMORY[0x1DF09A7B0](v38);
  a9[9] = v57;
  sub_1DA66C208();
  a9[10] = MEMORY[0x1DF09A7B0](v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AB0);
  sub_1DA66C208();
  a9[11] = MEMORY[0x1DF09A7A4](v38);
  sub_1DA66C208();
  a9[12] = MEMORY[0x1DF09A7A4](v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DCA8);
  sub_1DA66C208();
  a9[13] = MEMORY[0x1DF09A7C8](v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AC0);
  sub_1DA66C208();
  a9[14] = MEMORY[0x1DF09A7BC](v38);
  sub_1DA66C208();
  a9[15] = MEMORY[0x1DF09A7BC](v38);
  sub_1DA66C208();
  a9[16] = MEMORY[0x1DF09A7BC](v38);
  sub_1DA66C208();
  a9[17] = MEMORY[0x1DF09A7BC](v38);
  v39 = (int *)type metadata accessor for EpisodeEntity();
  v56 = (uint64_t)a9 + v39[21];
  v40 = v56;
  v41 = sub_1DA66CA0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
  v42 = (char *)a9 + v39[22];
  *(_OWORD *)v42 = xmmword_1DA6833E0;
  v43 = (uint64_t)a9 + v39[23];
  v44 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v43, 1, 1, v44);
  v45 = v62;
  *a9 = v61;
  a9[1] = v45;
  v46 = v63;
  v47 = v64;
  a9[2] = v63;
  a9[3] = v47;
  v48 = v68;
  a9[4] = v66;
  a9[5] = v48;
  sub_1DA49CC94(a29, (uint64_t)a9 + v39[20], qword_1F0269260);
  v88 = v71;
  v89 = v72;
  v49 = v46;
  sub_1DA66BDAC();
  v88 = v65;
  v89 = v67;
  sub_1DA66BDAC();
  v88 = v69;
  v89 = v70;
  sub_1DA66BDAC();
  v88 = v73;
  v89 = v74;
  sub_1DA66BDAC();
  v88 = v75;
  v89 = v76;
  sub_1DA66BDAC();
  v50 = v77;
  sub_1DA49CC94(v77, (uint64_t)v35, &qword_1EDADE6C8);
  sub_1DA49CC94((uint64_t)v35, (uint64_t)v32, &qword_1EDADE6C8);
  sub_1DA66BDAC();
  sub_1DA47E2F0((uint64_t)v35, &qword_1EDADE6C8);
  v51 = v78;
  sub_1DA49CC94(v78, (uint64_t)v35, &qword_1EDADE6C8);
  sub_1DA49CC94((uint64_t)v35, (uint64_t)v32, &qword_1EDADE6C8);
  sub_1DA66BDAC();
  sub_1DA47E2F0((uint64_t)v35, &qword_1EDADE6C8);
  v88 = v79;
  sub_1DA66BDAC();
  LOBYTE(v88) = v80;
  sub_1DA66BDAC();
  LOBYTE(v88) = v81;
  sub_1DA66BDAC();
  LOBYTE(v88) = v82;
  sub_1DA66BDAC();
  LOBYTE(v88) = v83;
  sub_1DA66BDAC();

  sub_1DA47E2F0(v55, qword_1F0269260);
  sub_1DA47E2F0(v51, &qword_1EDADE6C8);
  sub_1DA47E2F0(v50, &qword_1EDADE6C8);
  sub_1DA605AA4(v84, v56, &qword_1EDAE4108);
  sub_1DA49873C(*(_QWORD *)v42, *((_QWORD *)v42 + 1));
  v53 = v86;
  v52 = v87;
  *(_QWORD *)v42 = v85;
  *((_QWORD *)v42 + 1) = v53;
  return sub_1DA605AA4(v52, v43, &qword_1EDAE5020);
}

uint64_t EpisodeEntity.init(model:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t, uint64_t, _QWORD *);
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  _BYTE *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  id v68;
  void *v69;
  id v70;
  uint64_t v71;
  double v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  _BYTE *v90;
  _BYTE *v91;
  uint64_t result;
  _BYTE v93[12];
  unsigned int v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  _BYTE *v110;
  _BYTE *v111;
  _BYTE *v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  uint64_t v119;

  v113 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v93[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v6);
  v118 = &v93[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v117 = &v93[-v9];
  v10 = (_QWORD *)sub_1DA66C358();
  v11 = *(v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v93[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DCB0);
  MEMORY[0x1E0C80A78](v14);
  v16 = &v93[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
  MEMORY[0x1E0C80A78](v17);
  v111 = &v93[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v19);
  v116 = &v93[-v20];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v21);
  v110 = &v93[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v23);
  v25 = &v93[-v24];
  *(_QWORD *)&v27 = MEMORY[0x1E0C80A78](v26).n128_u64[0];
  v29 = &v93[-v28];
  if (((unint64_t)objc_msgSend(a1, sel_storeTrackId, v27) & 0x8000000000000000) != 0)
  {
    result = sub_1DA670564();
    __break(1u);
  }
  else
  {
    v109 = v16;
    v30 = sub_1DA66DCE4();
    v114 = v10;
    v115 = v30;
    v107 = v11;
    v31 = *(void (**)(_BYTE *, uint64_t, uint64_t, _QWORD *))(v11 + 56);
    v31(v29, 1, 1, v10);
    v32 = objc_msgSend(a1, sel_podcast);
    if (v32)
    {
      v33 = v32;
      v34 = objc_msgSend(v32, sel_storeCollectionId);

      v35 = objc_msgSend((id)objc_opt_self(), sel_productURLForStoreCollectionId_storeTrackId_, v34, objc_msgSend(a1, sel_storeTrackId));
      if (v35)
      {
        v36 = v35;
        sub_1DA66C304();

        v37 = 0;
      }
      else
      {
        v37 = 1;
      }
      sub_1DA47E2F0((uint64_t)v29, &qword_1EDAE5020);
      v31(v25, v37, 1, v114);
      sub_1DA49B0AC((uint64_t)v25, (uint64_t)v29);
    }
    v38 = objc_msgSend(a1, sel_transcriptIdentifier);
    v112 = v29;
    if (v38)
    {
      v39 = v38;
      v108 = v5;
      v106 = sub_1DA66F8BC();

      v119 = v115;
      sub_1DA4F726C();
      swift_bridgeObjectRetain();
      sub_1DA670354();
      v40 = objc_msgSend(a1, sel_title);
      if (v40)
      {
        v41 = v40;
        sub_1DA66F8BC();

      }
      swift_bridgeObjectRetain();
      v43 = objc_msgSend(a1, sel_transcriptProvider);
      sub_1DA66F8BC();

      sub_1DA66D1EC();
      v44 = v116;
      sub_1DA66DB4C();
      swift_bridgeObjectRelease();
      v45 = sub_1DA66DB58();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
      swift_bridgeObjectRelease();
      v5 = v108;
    }
    else
    {
      v42 = sub_1DA66DB58();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v116, 1, 1, v42);
    }
    v46 = objc_msgSend(a1, sel_objectID);
    v47 = objc_msgSend(v46, sel_URIRepresentation);

    sub_1DA66C304();
    v48 = sub_1DA66C298();
    v108 = (_BYTE *)v49;
    (*(void (**)(_BYTE *, _QWORD *))(v107 + 8))(v13, v114);
    v114 = objc_msgSend(a1, sel_objectID);
    v50 = objc_msgSend(a1, sel_uuid);
    if (v50)
    {
      v51 = v50;
      v52 = sub_1DA66F8BC();
      v106 = v53;
      v107 = v52;

    }
    else
    {
      v106 = 0;
      v107 = 0;
    }
    v54 = objc_msgSend(a1, sel_title);
    if (v54)
    {
      v55 = v54;
      v56 = sub_1DA66F8BC();
      v104 = v57;
      v105 = v56;

    }
    else
    {
      v104 = 0xE000000000000000;
      v105 = 0;
    }
    v58 = objc_msgSend(a1, sel_description);
    v59 = sub_1DA66F8BC();
    v102 = v60;
    v103 = v59;

    v61 = objc_msgSend(a1, sel_category);
    if (v61)
    {
      v62 = v61;
      v63 = sub_1DA66F8BC();
      v100 = v64;
      v101 = v63;

    }
    else
    {
      v100 = 0xE000000000000000;
      v101 = 0;
    }
    v65 = objc_msgSend(a1, sel_author);
    if (v65)
    {
      v66 = v65;
      v99 = sub_1DA66F8BC();
      v98 = v67;

    }
    else
    {
      v99 = 0;
      v98 = 0;
    }
    v68 = objc_msgSend(a1, sel_podcast);
    if (v68
      && (v69 = v68, v70 = objc_msgSend(v68, sel_title), v69, v70))
    {
      v97 = sub_1DA66F8BC();
      v96 = v71;

    }
    else
    {
      v97 = 0;
      v96 = 0;
    }
    objc_msgSend(a1, sel_downloadDate);
    if (v72 <= 0.0)
    {
      v75 = sub_1DA66C430();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v117, 1, 1, v75);
    }
    else
    {
      objc_msgSend(a1, sel_downloadDate);
      v73 = v117;
      sub_1DA66C3AC();
      v74 = sub_1DA66C430();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v73, 0, 1, v74);
    }
    objc_msgSend(a1, sel_pubDate);
    if (v76 <= 0.0)
    {
      v79 = sub_1DA66C430();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v118, 1, 1, v79);
    }
    else
    {
      objc_msgSend(a1, sel_pubDate);
      v77 = v118;
      sub_1DA66C3AC();
      v78 = sub_1DA66C430();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
    }
    v95 = objc_msgSend(a1, sel_episodeNumber);
    v80 = objc_msgSend(a1, sel_playState);
    v94 = objc_msgSend(a1, sel_isBookmarked);
    v81 = objc_msgSend(a1, sel_assetURL);
    v82 = v81;
    if (v81)

    v83 = objc_msgSend(a1, sel_transcriptIdentifier);
    v84 = v83;
    if (v83)

    v85 = objc_msgSend(a1, sel_podcast);
    v109 = (_BYTE *)v48;
    if (v85)
    {
      v86 = v85;
      sub_1DA670210();

    }
    else
    {
      v87 = sub_1DA66CA0C();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v5, 1, 1, v87);
    }
    v88 = (uint64_t)v112;
    v89 = v110;
    sub_1DA49CC94((uint64_t)v112, (uint64_t)v110, &qword_1EDAE5020);
    v90 = v116;
    v91 = v111;
    sub_1DA49CC94((uint64_t)v116, (uint64_t)v111, qword_1F0269260);
    EpisodeEntity.init(id:objectID:uuid:adamID:title:description:category:author:showName:downloadDate:publishedDate:episodeNumber:isPlayed:isSaved:isDownloaded:isTranscriptAvailable:artworkModel:artworkData:shareURL:transcriptInformation:)((uint64_t)v109, (uint64_t)v108, v114, v107, v106, v115, v105, v104, v113, v103, v102, v101, v100, v99, v98, v97, v96, (uint64_t)v117, (uint64_t)v118,
      (uint64_t)v95,
      v80 == 0,
      v94,
      v82 != 0,
      v84 != 0,
      (uint64_t)v5,
      0,
      0xF000000000000000,
      (uint64_t)v89,
      (uint64_t)v91);

    sub_1DA47E2F0((uint64_t)v90, qword_1F0269260);
    return sub_1DA47E2F0(v88, &qword_1EDAE5020);
  }
  return result;
}

void EpisodeEntity.init(mediaObject:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  void *v27;
  void *v28;
  unint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  unsigned __int8 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v10);
  v86 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v87 = (uint64_t)&v71 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v71 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  sub_1DA66D6C0();
  v23 = sub_1DA66DCCC();
  v82 = v16;
  v83 = v6;
  v84 = v23;
  swift_bridgeObjectRelease();
  v24 = sub_1DA66C358();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v22, 1, 1, v24);
  v26 = sub_1DA66D6A8();
  v85 = v22;
  if (v26)
  {
    v27 = (void *)v26;
    v28 = (void *)sub_1DA66DA8C();

    if (v28)
    {
      v29 = sub_1DA66DAD4();

      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        v38 = sub_1DA6705A0();
        swift_bridgeObjectRelease();
        if (v38)
        {
LABEL_5:
          if ((v29 & 0xC000000000000001) != 0)
          {
            v30 = (id)MEMORY[0x1DF09EE48](0, v29);
          }
          else
          {
            if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_36;
            }
            v30 = *(id *)(v29 + 32);
          }
          v31 = v30;
          swift_bridgeObjectRelease();
          sub_1DA66D318();

          v32 = sub_1DA66DCCC();
          swift_bridgeObjectRelease();
          v33 = (uint64_t)v85;
          v34 = (void *)objc_opt_self();
          if (((v32 | v84) & 0x8000000000000000) == 0)
          {
            v35 = objc_msgSend(v34, sel_productURLForStoreCollectionId_storeTrackId_, v32);
            if (v35)
            {
              v36 = v35;
              sub_1DA66C304();

              v37 = 0;
            }
            else
            {
              v37 = 1;
            }
            sub_1DA47E2F0(v33, &qword_1EDAE5020);
            v25(v19, v37, 1, v24);
            sub_1DA49B0AC((uint64_t)v19, v33);
            goto LABEL_15;
          }
LABEL_36:
          __break(1u);
          return;
        }
      }
      else if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
    }
  }
LABEL_15:
  v39 = sub_1DA66D6C0();
  v41 = v40;
  v42 = objc_msgSend(a1, sel_title);
  if (v42)
  {
    v43 = v42;
    v44 = sub_1DA66F8BC();
    v78 = v45;
    v79 = v44;

  }
  else
  {
    v78 = 0xE000000000000000;
    v79 = 0;
  }
  v46 = v86;
  v47 = objc_msgSend(a1, sel_itemSummary);
  if (v47)
  {
    v48 = v47;
    v49 = sub_1DA66F8BC();
    v76 = v50;
    v77 = v49;

  }
  else
  {
    v76 = 0xE000000000000000;
    v77 = 0;
  }
  v51 = objc_msgSend(a1, sel_category);
  if (v51)
  {
    v52 = v51;
    v53 = sub_1DA66F8BC();
    v74 = v54;
    v75 = v53;

  }
  else
  {
    v74 = 0xE000000000000000;
    v75 = 0;
  }
  v55 = objc_msgSend(a1, sel_author);
  v80 = v41;
  v81 = a2;
  if (v55)
  {
    v56 = v55;
    v57 = sub_1DA66F8BC();
    v72 = v58;
    v73 = v57;

  }
  else
  {
    v72 = 0;
    v73 = 0;
  }
  v59 = sub_1DA66C430();
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
  v61 = 1;
  v60(v87, 1, 1, v59);
  v62 = objc_msgSend(a1, sel_pubDate);
  if (v62)
  {
    v63 = v62;
    sub_1DA66C40C();

    v61 = 0;
  }
  v60(v46, v61, 1, v59);
  v64 = objc_msgSend(a1, sel_episodeNumber);
  v65 = objc_msgSend(a1, sel_freeTranscriptIdentifier);
  if (v65 || (v65 = objc_msgSend(a1, sel_entitledTranscriptIdentifier)) != 0)
  {

    v66 = 1;
  }
  else
  {
    v66 = 0;
  }
  v67 = sub_1DA66CA0C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v9, 1, 1, v67);
  v68 = (uint64_t)v85;
  v69 = (uint64_t)v82;
  sub_1DA49CC94((uint64_t)v85, (uint64_t)v82, &qword_1EDAE5020);
  v70 = (uint64_t)v83;
  sub_1DA66D6B4();
  EpisodeEntity.init(id:objectID:uuid:adamID:title:description:category:author:showName:downloadDate:publishedDate:episodeNumber:isPlayed:isSaved:isDownloaded:isTranscriptAvailable:artworkModel:artworkData:shareURL:transcriptInformation:)(v39, v80, 0, 0, 0, v84, v79, v78, v81, v77, v76, v75, v74, v73, v72, 0, 0, v87, v86,
    (uint64_t)v64,
    0,
    0,
    0,
    v66,
    (uint64_t)v9,
    0,
    0xF000000000000000,
    v69,
    v70);

  sub_1DA47E2F0(v68, &qword_1EDAE5020);
}

uint64_t sub_1DA61C574@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1F02687F0 != -1)
    swift_once();
  *a1 = qword_1F026DC88;
  return sub_1DA66BE60();
}

uint64_t sub_1DA61C5C8()
{
  uint64_t v0;

  if (qword_1F02687D8 != -1)
    swift_once();
  v0 = qword_1F026DC58;
  swift_bridgeObjectRetain();
  return v0;
}

Swift::Void __swiftcall EpisodeEntity.alignID(with:)(Swift::String with)
{
  uint64_t *v1;
  void *object;
  void *v3;
  uint64_t countAndFlagsBits;
  BOOL v5;

  object = with._object;
  v3 = (void *)v1[4];
  if (v3)
  {
    countAndFlagsBits = with._countAndFlagsBits;
    v5 = v1[3] == with._countAndFlagsBits && v3 == object;
    if (v5 || (sub_1DA6706D8() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v1 = countAndFlagsBits;
      v1[1] = (uint64_t)object;
    }
  }
}

Swift::Void __swiftcall EpisodeEntity.alignID(with:)(NSManagedObjectID with)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  objc_class *v9;
  id v10;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)v2[2];
  if (v8)
  {
    sub_1DA524308();
    v9 = with.super.isa;
    v10 = v8;
    v11 = sub_1DA6701A4();

    if ((v11 & 1) != 0)
    {
      v12 = -[objc_class URIRepresentation](v9, sel_URIRepresentation);
      sub_1DA66C304();

      v13 = sub_1DA66C298();
      v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      *v2 = v13;
      v2[1] = v15;
    }
  }
}

uint64_t sub_1DA61C7A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02687E0 != -1)
    swift_once();
  v2 = sub_1DA66CA3C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F026DC68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA61C810()
{
  if (qword_1F02687E8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeEntity.alignID(with:)(uint64_t result)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (v1[5] == result)
  {
    v2 = v1;
    sub_1DA4F726C();
    v3 = sub_1DA670354();
    v5 = v4;
    result = swift_bridgeObjectRelease();
    *v2 = v3;
    v2[1] = v5;
  }
  return result;
}

uint64_t sub_1DA61C8B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66C220();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1DA66C208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1DA66C01C();
}

uint64_t sub_1DA61C99C()
{
  sub_1DA61D8C0((unint64_t *)&qword_1EDAE3B58, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  return sub_1DA66BCEC();
}

uint64_t sub_1DA61C9E8()
{
  sub_1DA61D8C0(&qword_1EDAE3B80, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  return sub_1DA66C028();
}

uint64_t EpisodeEntity.mediaRepresentation.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[7] = a1;
  v2[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v2[9] = swift_task_alloc();
  v3 = sub_1DA66BDF4();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for EpisodeEntity();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA61CAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 40);
  if ((sub_1DA66DCD8() & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 64);
    v3 = *(_QWORD *)(v2 + 32);
    sub_1DA4F23B0(v2, *(_QWORD *)(v0 + 112));
    v4 = *(_QWORD *)(v0 + 112);
    if (!v3)
      swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DA47F880(v4, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  }
  else
  {
    *(_QWORD *)(v0 + 48) = v1;
    sub_1DA4F726C();
    sub_1DA670354();
  }
  v5 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 64);
  sub_1DA66BDA0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v6, *MEMORY[0x1E0C90C78], v9);
  sub_1DA498D8C(*(_QWORD *)(v10 + *(int *)(v5 + 88)), *(_QWORD *)(v10 + *(int *)(v5 + 88) + 8));
  sub_1DA66BDA0();
  v11 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  sub_1DA66BE00();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA61CC74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return EpisodeEntity.mediaRepresentation.getter(a1);
}

uint64_t EpisodeEntity.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v11);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v6);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1DA670444();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  v12 = *(id *)(v0 + 16);
  v7 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B8E0);
  sub_1DA66F904();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA67027C();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  v12 = *(id *)(v0 + 40);
  sub_1DA4F726C();
  sub_1DA670354();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA67027C();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F904();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F904();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA670684();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66BDA0();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  v8 = type metadata accessor for EpisodeEntity();
  sub_1DA49CC94(v0 + *(int *)(v8 + 92), (uint64_t)v5, &qword_1EDAE5020);
  sub_1DA66F904();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA49CC94(v0 + *(int *)(v8 + 84), (uint64_t)v2, &qword_1EDAE4108);
  sub_1DA66F904();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  return v13;
}

uint64_t static EpisodeEntity.transferRepresentation.getter()
{
  type metadata accessor for EpisodeEntity();
  sub_1DA61D8C0(&qword_1F026DCC0, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA6076EC();
  return sub_1DA66C688();
}

uint64_t sub_1DA61D30C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];

  v4 = type metadata accessor for EpisodeEntity();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA49CC94(a1 + *(int *)(v4 + 92), (uint64_t)v9, &qword_1EDAE5020);
  v10 = sub_1DA66C358();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DA47E2F0((uint64_t)v9, &qword_1EDAE5020);
    sub_1DA4F23B0(a1, (uint64_t)v6);
LABEL_4:
    sub_1DA66BDA0();
    v12 = v16[0];
    v14 = v16[1];
    goto LABEL_5;
  }
  v12 = sub_1DA66C298();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  sub_1DA4F23B0(a1, (uint64_t)v6);
  if (!v14)
    goto LABEL_4;
LABEL_5:
  result = sub_1DA47F880((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  *a2 = v12;
  a2[1] = v14;
  return result;
}

uint64_t sub_1DA61D480()
{
  sub_1DA6076EC();
  return sub_1DA66C688();
}

uint64_t sub_1DA61D4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v3[7] = v2;
  v3[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  v4 = (_QWORD *)swift_task_alloc();
  v3[9] = v4;
  *v4 = v3;
  v4[1] = sub_1DA61D554;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA61D554()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  char *v6;

  v2 = (_QWORD *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = v2[7] + *(int *)(v2[8] + 84);
  v6 = (char *)&dword_1F026DC98 + dword_1F026DC98;
  v5 = (_QWORD *)swift_task_alloc();
  v2[11] = v5;
  *v5 = v2;
  v5[1] = sub_1DA61D620;
  return ((uint64_t (*)(uint64_t, _QWORD *))v6)(v4, v2 + 2);
}

uint64_t sub_1DA61D620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 104) = a2;
    *(_QWORD *)(v6 + 112) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA61D698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v5 = v4 + *(int *)(v3 + 88);
  sub_1DA49873C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EpisodeEntity.episodeStateIdentifier.getter()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[5];
  if ((sub_1DA66DCD8() & 1) != 0 && v0[4])
  {
    v1 = v0[3];
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_1DA61D74C()
{
  return sub_1DA61D8C0(&qword_1EDAE3B50, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA61D770()
{
  return sub_1DA61D8C0(&qword_1EDAE3B68, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA61D794()
{
  return sub_1DA61D8C0(&qword_1EDAE3B90, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA61D7BC()
{
  return sub_1DA61D8C0(&qword_1EDAE3B70, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA61D7E0()
{
  return sub_1DA61D8C0(&qword_1EDAE3B78, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA61D804()
{
  return sub_1DA61D8C0(&qword_1EDAE3B60, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA61D828()
{
  return sub_1DA61D8C0(&qword_1EDAE3B80, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA61D84C()
{
  return sub_1DA4841D4(&qword_1F026DCC8, (uint64_t *)&unk_1F026DCD0, MEMORY[0x1E0C91998]);
}

uint64_t sub_1DA61D878()
{
  return sub_1DA61D8C0(&qword_1EDAE3B88, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA61D89C()
{
  return sub_1DA61D8C0((unint64_t *)&qword_1EDAE3B58, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
}

uint64_t sub_1DA61D8C0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for EpisodeEntity();
    result = MEMORY[0x1DF0A039C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA61D900()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA61D910@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1DA66BDA0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DA61D948()
{
  swift_bridgeObjectRetain();
  return sub_1DA66BDAC();
}

uint64_t sub_1DA61D980@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1DA66BDA0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DA61D9B8()
{
  swift_bridgeObjectRetain();
  return sub_1DA66BDAC();
}

uint64_t sub_1DA61D9F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1DA66BDA0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DA61DA28()
{
  swift_bridgeObjectRetain();
  return sub_1DA66BDAC();
}

double sub_1DA61DA60@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1DA66BDA0();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1DA61DA98()
{
  swift_bridgeObjectRetain();
  return sub_1DA66BDAC();
}

double sub_1DA61DAD0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1DA66BDA0();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1DA61DB08()
{
  swift_bridgeObjectRetain();
  return sub_1DA66BDAC();
}

uint64_t sub_1DA61DB40()
{
  return sub_1DA66BDA0();
}

uint64_t sub_1DA61DB64()
{
  return sub_1DA66BDA0();
}

uint64_t sub_1DA61DB88@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA61DBC0()
{
  return sub_1DA66BDAC();
}

uint64_t sub_1DA61DBF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA61DC2C()
{
  return sub_1DA66BDAC();
}

uint64_t sub_1DA61DC60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA61DC98()
{
  return sub_1DA66BDAC();
}

uint64_t sub_1DA61DCCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA61DD04()
{
  return sub_1DA66BDAC();
}

uint64_t sub_1DA61DD38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1DA66BDA0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA61DD70()
{
  return sub_1DA66BDAC();
}

uint64_t *initializeBufferWithCopyOfBuffer for EpisodeEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  id *v40;
  int v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  void (*v58)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v8 = (void *)a2[2];
    v7 = a2[3];
    a1[2] = (uint64_t)v8;
    a1[3] = v7;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    v73 = a2[11];
    a1[10] = a2[10];
    a1[11] = v73;
    v12 = a2[13];
    a1[12] = a2[12];
    a1[13] = v12;
    v13 = a2[15];
    v14 = a2[16];
    a1[14] = a2[14];
    a1[15] = v13;
    v15 = a2[17];
    v16 = a3[20];
    __dst = (char *)a1 + v16;
    v72 = (char *)a2 + v16;
    a1[16] = v14;
    a1[17] = v15;
    v17 = sub_1DA66DB58();
    v71 = *(_QWORD *)(v17 - 8);
    v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
    swift_bridgeObjectRetain();
    v18 = v8;
    swift_bridgeObjectRetain();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    if (v74(v72, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
      memcpy(__dst, v72, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(__dst, v72, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 1, v17);
    }
    v21 = a3[21];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = (int *)sub_1DA66CA0C();
    v25 = *((_QWORD *)v24 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v27 = v23[1];
      *v22 = *v23;
      v22[1] = v27;
      v28 = *((unsigned __int8 *)v23 + 32);
      swift_bridgeObjectRetain();
      if (v28 == 255)
      {
        *((_OWORD *)v22 + 1) = *((_OWORD *)v23 + 1);
        *((_BYTE *)v22 + 32) = *((_BYTE *)v23 + 32);
      }
      else
      {
        v29 = v23[2];
        v30 = v23[3];
        sub_1DA481390(v29, v30, v28);
        v22[2] = v29;
        v22[3] = v30;
        *((_BYTE *)v22 + 32) = v28;
      }
      *(_OWORD *)(v22 + 5) = *(_OWORD *)(v23 + 5);
      v31 = (id *)(v23 + 7);
      v32 = *((unsigned __int8 *)v23 + 64);
      if (v32 == 255)
      {
        v22[7] = *v31;
        *((_BYTE *)v22 + 64) = *((_BYTE *)v23 + 64);
      }
      else
      {
        v33 = *v31;
        sub_1DA4E762C(*v31, *((_BYTE *)v23 + 64));
        v22[7] = v33;
        *((_BYTE *)v22 + 64) = v32;
      }
      v34 = (id *)(v23 + 9);
      v35 = *((unsigned __int8 *)v23 + 80);
      if (v35 == 255)
      {
        v22[9] = *v34;
        *((_BYTE *)v22 + 80) = *((_BYTE *)v23 + 80);
      }
      else
      {
        v36 = *v34;
        sub_1DA4E762C(*v34, *((_BYTE *)v23 + 80));
        v22[9] = v36;
        *((_BYTE *)v22 + 80) = v35;
      }
      v37 = (id *)(v23 + 11);
      v38 = *((unsigned __int8 *)v23 + 96);
      if (v38 == 255)
      {
        v22[11] = *v37;
        *((_BYTE *)v22 + 96) = *((_BYTE *)v23 + 96);
      }
      else
      {
        v39 = *v37;
        sub_1DA4E762C(*v37, *((_BYTE *)v23 + 96));
        v22[11] = v39;
        *((_BYTE *)v22 + 96) = v38;
      }
      v40 = (id *)(v23 + 13);
      v41 = *((unsigned __int8 *)v23 + 112);
      if (v41 == 255)
      {
        v22[13] = *v40;
        *((_BYTE *)v22 + 112) = *((_BYTE *)v23 + 112);
      }
      else
      {
        v42 = *v40;
        sub_1DA4E762C(*v40, *((_BYTE *)v23 + 112));
        v22[13] = v42;
        *((_BYTE *)v22 + 112) = v41;
      }
      v43 = (id *)(v23 + 15);
      v44 = *((unsigned __int8 *)v23 + 128);
      if (v44 == 255)
      {
        v22[15] = *v43;
        *((_BYTE *)v22 + 128) = *((_BYTE *)v23 + 128);
      }
      else
      {
        v45 = *v43;
        sub_1DA4E762C(*v43, *((_BYTE *)v23 + 128));
        v22[15] = v45;
        *((_BYTE *)v22 + 128) = v44;
      }
      *((_BYTE *)v22 + 129) = *((_BYTE *)v23 + 129);
      v46 = v24[11];
      v47 = (char *)v22 + v46;
      v48 = (char *)v23 + v46;
      v49 = sub_1DA66C928();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      v50 = v24[12];
      v51 = (_QWORD *)((char *)v22 + v50);
      v52 = (_QWORD *)((char *)v23 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      *((_BYTE *)v22 + v24[13]) = *((_BYTE *)v23 + v24[13]);
      *((_BYTE *)v22 + v24[14]) = *((_BYTE *)v23 + v24[14]);
      *((_BYTE *)v22 + v24[15]) = *((_BYTE *)v23 + v24[15]);
      v54 = v24[16];
      v55 = (_QWORD *)((char *)v22 + v54);
      v56 = (_QWORD *)((char *)v23 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      v58 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v25 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58(v22, 0, 1, v24);
    }
    v59 = a3[22];
    v60 = (char *)v4 + v59;
    v61 = (char *)a2 + v59;
    v62 = *((_QWORD *)v61 + 1);
    if (v62 >> 60 == 15)
    {
      *(_OWORD *)v60 = *(_OWORD *)v61;
    }
    else
    {
      v63 = *(_QWORD *)v61;
      sub_1DA498750(*(_QWORD *)v61, *((_QWORD *)v61 + 1));
      *(_QWORD *)v60 = v63;
      *((_QWORD *)v60 + 1) = v62;
    }
    v64 = a3[23];
    v65 = (char *)v4 + v64;
    v66 = (char *)a2 + v64;
    v67 = sub_1DA66C358();
    v68 = *(_QWORD *)(v67 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
    }
  }
  return v4;
}

uint64_t destroy for EpisodeEntity(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + a2[20];
  v5 = sub_1DA66DB58();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + a2[21];
  v8 = sub_1DA66CA0C();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = *(unsigned __int8 *)(v7 + 32);
    if (v9 != 255)
      sub_1DA47F868(*(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), v9);
    v10 = *(unsigned __int8 *)(v7 + 64);
    if (v10 != 255)
      sub_1DA4E7898(*(id *)(v7 + 56), v10);
    v11 = *(unsigned __int8 *)(v7 + 80);
    if (v11 != 255)
      sub_1DA4E7898(*(id *)(v7 + 72), v11);
    v12 = *(unsigned __int8 *)(v7 + 96);
    if (v12 != 255)
      sub_1DA4E7898(*(id *)(v7 + 88), v12);
    v13 = *(unsigned __int8 *)(v7 + 112);
    if (v13 != 255)
      sub_1DA4E7898(*(id *)(v7 + 104), v13);
    v14 = *(unsigned __int8 *)(v7 + 128);
    if (v14 != 255)
      sub_1DA4E7898(*(id *)(v7 + 120), v14);
    v15 = v7 + *(int *)(v8 + 44);
    v16 = sub_1DA66C928();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = (uint64_t *)(a1 + a2[22]);
  v18 = v17[1];
  if (v18 >> 60 != 15)
    sub_1DA4986F8(*v17, v18);
  v19 = a1 + a2[23];
  v20 = sub_1DA66C358();
  v21 = *(_QWORD *)(v20 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  return result;
}

_QWORD *initializeWithCopy for EpisodeEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  char *__dst;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v7 = (void *)a2[2];
  v6 = a2[3];
  a1[2] = v7;
  a1[3] = v6;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  v71 = a2[11];
  a1[10] = a2[10];
  a1[11] = v71;
  v11 = a2[13];
  a1[12] = a2[12];
  a1[13] = v11;
  v12 = a2[15];
  v13 = a2[16];
  a1[14] = a2[14];
  a1[15] = v12;
  v14 = a2[17];
  v15 = a3[20];
  __dst = (char *)a1 + v15;
  v70 = (char *)a2 + v15;
  a1[16] = v13;
  a1[17] = v14;
  v16 = sub_1DA66DB58();
  v69 = *(_QWORD *)(v16 - 8);
  v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  swift_bridgeObjectRetain();
  v17 = v7;
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v72(v70, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(__dst, v70, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(__dst, v70, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(__dst, 0, 1, v16);
  }
  v19 = a3[21];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = (int *)sub_1DA66CA0C();
  v23 = *((_QWORD *)v22 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v21[1];
    *v20 = *v21;
    v20[1] = v25;
    v26 = *((unsigned __int8 *)v21 + 32);
    swift_bridgeObjectRetain();
    if (v26 == 255)
    {
      *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
      *((_BYTE *)v20 + 32) = *((_BYTE *)v21 + 32);
    }
    else
    {
      v27 = v21[2];
      v28 = v21[3];
      sub_1DA481390(v27, v28, v26);
      v20[2] = v27;
      v20[3] = v28;
      *((_BYTE *)v20 + 32) = v26;
    }
    *(_OWORD *)(v20 + 5) = *(_OWORD *)(v21 + 5);
    v29 = (id *)(v21 + 7);
    v30 = *((unsigned __int8 *)v21 + 64);
    if (v30 == 255)
    {
      v20[7] = *v29;
      *((_BYTE *)v20 + 64) = *((_BYTE *)v21 + 64);
    }
    else
    {
      v31 = *v29;
      sub_1DA4E762C(*v29, *((_BYTE *)v21 + 64));
      v20[7] = v31;
      *((_BYTE *)v20 + 64) = v30;
    }
    v32 = (id *)(v21 + 9);
    v33 = *((unsigned __int8 *)v21 + 80);
    if (v33 == 255)
    {
      v20[9] = *v32;
      *((_BYTE *)v20 + 80) = *((_BYTE *)v21 + 80);
    }
    else
    {
      v34 = *v32;
      sub_1DA4E762C(*v32, *((_BYTE *)v21 + 80));
      v20[9] = v34;
      *((_BYTE *)v20 + 80) = v33;
    }
    v35 = (id *)(v21 + 11);
    v36 = *((unsigned __int8 *)v21 + 96);
    if (v36 == 255)
    {
      v20[11] = *v35;
      *((_BYTE *)v20 + 96) = *((_BYTE *)v21 + 96);
    }
    else
    {
      v37 = *v35;
      sub_1DA4E762C(*v35, *((_BYTE *)v21 + 96));
      v20[11] = v37;
      *((_BYTE *)v20 + 96) = v36;
    }
    v38 = (id *)(v21 + 13);
    v39 = *((unsigned __int8 *)v21 + 112);
    if (v39 == 255)
    {
      v20[13] = *v38;
      *((_BYTE *)v20 + 112) = *((_BYTE *)v21 + 112);
    }
    else
    {
      v40 = *v38;
      sub_1DA4E762C(*v38, *((_BYTE *)v21 + 112));
      v20[13] = v40;
      *((_BYTE *)v20 + 112) = v39;
    }
    v41 = (id *)(v21 + 15);
    v42 = *((unsigned __int8 *)v21 + 128);
    if (v42 == 255)
    {
      v20[15] = *v41;
      *((_BYTE *)v20 + 128) = *((_BYTE *)v21 + 128);
    }
    else
    {
      v43 = *v41;
      sub_1DA4E762C(*v41, *((_BYTE *)v21 + 128));
      v20[15] = v43;
      *((_BYTE *)v20 + 128) = v42;
    }
    *((_BYTE *)v20 + 129) = *((_BYTE *)v21 + 129);
    v44 = v22[11];
    v45 = (char *)v20 + v44;
    v46 = (char *)v21 + v44;
    v47 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = v22[12];
    v49 = (_QWORD *)((char *)v20 + v48);
    v50 = (_QWORD *)((char *)v21 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    *((_BYTE *)v20 + v22[13]) = *((_BYTE *)v21 + v22[13]);
    *((_BYTE *)v20 + v22[14]) = *((_BYTE *)v21 + v22[14]);
    *((_BYTE *)v20 + v22[15]) = *((_BYTE *)v21 + v22[15]);
    v52 = v22[16];
    v53 = (_QWORD *)((char *)v20 + v52);
    v54 = (_QWORD *)((char *)v21 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v23 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56(v20, 0, 1, v22);
  }
  v57 = a3[22];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = *((_QWORD *)v59 + 1);
  if (v60 >> 60 == 15)
  {
    *(_OWORD *)v58 = *(_OWORD *)v59;
  }
  else
  {
    v61 = *(_QWORD *)v59;
    sub_1DA498750(*(_QWORD *)v59, *((_QWORD *)v59 + 1));
    *(_QWORD *)v58 = v61;
    *((_QWORD *)v58 + 1) = v60;
  }
  v62 = a3[23];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = sub_1DA66C358();
  v66 = *(_QWORD *)(v65 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
  }
  return a1;
}

_QWORD *assignWithCopy for EpisodeEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, int *);
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  __int128 *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  __int128 v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  id *v47;
  int v48;
  id v49;
  id v50;
  id *v51;
  int v52;
  id v53;
  id v54;
  id *v55;
  int v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  void (*v69)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v70;
  uint64_t v71;
  char v72;
  __int128 v73;
  id *v74;
  id *v75;
  int v76;
  id v77;
  void *v78;
  char v79;
  id v80;
  char v81;
  id v82;
  id *v83;
  id *v84;
  int v85;
  id v86;
  void *v87;
  char v88;
  id v89;
  char v90;
  id v91;
  id *v92;
  id *v93;
  int v94;
  id v95;
  void *v96;
  char v97;
  id v98;
  char v99;
  id v100;
  id *v101;
  id *v102;
  int v103;
  id v104;
  void *v105;
  char v106;
  id v107;
  char v108;
  id v109;
  id *v110;
  id *v111;
  int v112;
  id v113;
  void *v114;
  char v115;
  id v116;
  char v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  _QWORD *v127;
  char *v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t (*v142)(char *, uint64_t, uint64_t);
  int v143;
  int v144;
  uint64_t v145;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[2];
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = v7;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1DA66BE60();
  swift_release();
  a1[7] = a2[7];
  sub_1DA66BE60();
  swift_release();
  a1[8] = a2[8];
  sub_1DA66BE60();
  swift_release();
  a1[9] = a2[9];
  sub_1DA66BE60();
  swift_release();
  a1[10] = a2[10];
  sub_1DA66BE60();
  swift_release();
  a1[11] = a2[11];
  sub_1DA66BE60();
  swift_release();
  a1[12] = a2[12];
  sub_1DA66BE60();
  swift_release();
  a1[13] = a2[13];
  sub_1DA66BE60();
  swift_release();
  a1[14] = a2[14];
  sub_1DA66BE60();
  swift_release();
  a1[15] = a2[15];
  sub_1DA66BE60();
  swift_release();
  a1[16] = a2[16];
  sub_1DA66BE60();
  swift_release();
  a1[17] = a2[17];
  sub_1DA66BE60();
  swift_release();
  v9 = a3[20];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1DA66DB58();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  v18 = a3[21];
  v19 = (uint64_t)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = (int *)sub_1DA66CA0C();
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23((uint64_t)v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
      v26 = v20[32];
      swift_bridgeObjectRetain();
      if (v26 == 255)
      {
        v38 = *((_OWORD *)v20 + 1);
        *(_BYTE *)(v19 + 32) = v20[32];
        *(_OWORD *)(v19 + 16) = v38;
      }
      else
      {
        v27 = *((_QWORD *)v20 + 2);
        v28 = *((_QWORD *)v20 + 3);
        sub_1DA481390(v27, v28, v26);
        *(_QWORD *)(v19 + 16) = v27;
        *(_QWORD *)(v19 + 24) = v28;
        *(_BYTE *)(v19 + 32) = v26;
      }
      *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
      *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
      v39 = (id *)(v20 + 56);
      v40 = v20[64];
      if (v40 == 255)
      {
        v42 = *v39;
        *(_BYTE *)(v19 + 64) = v20[64];
        *(_QWORD *)(v19 + 56) = v42;
      }
      else
      {
        v41 = *v39;
        sub_1DA4E762C(*v39, v20[64]);
        *(_QWORD *)(v19 + 56) = v41;
        *(_BYTE *)(v19 + 64) = v40;
      }
      v43 = (id *)(v20 + 72);
      v44 = v20[80];
      if (v44 == 255)
      {
        v46 = *v43;
        *(_BYTE *)(v19 + 80) = v20[80];
        *(_QWORD *)(v19 + 72) = v46;
      }
      else
      {
        v45 = *v43;
        sub_1DA4E762C(*v43, v20[80]);
        *(_QWORD *)(v19 + 72) = v45;
        *(_BYTE *)(v19 + 80) = v44;
      }
      v47 = (id *)(v20 + 88);
      v48 = v20[96];
      if (v48 == 255)
      {
        v50 = *v47;
        *(_BYTE *)(v19 + 96) = v20[96];
        *(_QWORD *)(v19 + 88) = v50;
      }
      else
      {
        v49 = *v47;
        sub_1DA4E762C(*v47, v20[96]);
        *(_QWORD *)(v19 + 88) = v49;
        *(_BYTE *)(v19 + 96) = v48;
      }
      v51 = (id *)(v20 + 104);
      v52 = v20[112];
      if (v52 == 255)
      {
        v54 = *v51;
        *(_BYTE *)(v19 + 112) = v20[112];
        *(_QWORD *)(v19 + 104) = v54;
      }
      else
      {
        v53 = *v51;
        sub_1DA4E762C(*v51, v20[112]);
        *(_QWORD *)(v19 + 104) = v53;
        *(_BYTE *)(v19 + 112) = v52;
      }
      v55 = (id *)(v20 + 120);
      v56 = v20[128];
      if (v56 == 255)
      {
        v58 = *v55;
        *(_BYTE *)(v19 + 128) = v20[128];
        *(_QWORD *)(v19 + 120) = v58;
      }
      else
      {
        v57 = *v55;
        sub_1DA4E762C(*v55, v20[128]);
        *(_QWORD *)(v19 + 120) = v57;
        *(_BYTE *)(v19 + 128) = v56;
      }
      *(_BYTE *)(v19 + 129) = v20[129];
      v59 = v21[11];
      v60 = v19 + v59;
      v61 = &v20[v59];
      v62 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
      v63 = v21[12];
      v64 = (_QWORD *)(v19 + v63);
      v65 = &v20[v63];
      *v64 = *(_QWORD *)v65;
      v64[1] = *((_QWORD *)v65 + 1);
      *(_BYTE *)(v19 + v21[13]) = v20[v21[13]];
      *(_BYTE *)(v19 + v21[14]) = v20[v21[14]];
      *(_BYTE *)(v19 + v21[15]) = v20[v21[15]];
      v66 = v21[16];
      v67 = (_QWORD *)(v19 + v66);
      v68 = &v20[v66];
      *v67 = *(_QWORD *)v68;
      v67[1] = *((_QWORD *)v68 + 1);
      v69 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v22 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69(v19, 0, 1, v21);
      goto LABEL_75;
    }
LABEL_13:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v19, v20, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_75;
  }
  if (v25)
  {
    sub_1DA47F880(v19, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    goto LABEL_13;
  }
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = (__int128 *)(v19 + 16);
  v31 = (__int128 *)(v20 + 16);
  v32 = v20[32];
  if (*(unsigned __int8 *)(v19 + 32) == 255)
  {
    if (v32 == 255)
    {
      v73 = *v31;
      *(_BYTE *)(v19 + 32) = v20[32];
      *v30 = v73;
    }
    else
    {
      v70 = *((_QWORD *)v20 + 2);
      v71 = *((_QWORD *)v20 + 3);
      sub_1DA481390(v70, v71, v20[32]);
      *(_QWORD *)(v19 + 16) = v70;
      *(_QWORD *)(v19 + 24) = v71;
      *(_BYTE *)(v19 + 32) = v32;
    }
  }
  else if (v32 == 255)
  {
    sub_1DA4E8928(v19 + 16);
    v72 = v20[32];
    *v30 = *v31;
    *(_BYTE *)(v19 + 32) = v72;
  }
  else
  {
    v33 = *((_QWORD *)v20 + 2);
    v34 = *((_QWORD *)v20 + 3);
    sub_1DA481390(v33, v34, v20[32]);
    v35 = *(_QWORD *)(v19 + 16);
    v36 = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v19 + 16) = v33;
    *(_QWORD *)(v19 + 24) = v34;
    v37 = *(_BYTE *)(v19 + 32);
    *(_BYTE *)(v19 + 32) = v32;
    sub_1DA47F868(v35, v36, v37);
  }
  *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
  *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
  v74 = (id *)(v19 + 56);
  v75 = (id *)(v20 + 56);
  v76 = v20[64];
  if (*(unsigned __int8 *)(v19 + 64) == 255)
  {
    if (v76 == 255)
    {
      v82 = *v75;
      *(_BYTE *)(v19 + 64) = v20[64];
      *v74 = v82;
    }
    else
    {
      v80 = *v75;
      sub_1DA4E762C(*v75, v20[64]);
      *(_QWORD *)(v19 + 56) = v80;
      *(_BYTE *)(v19 + 64) = v76;
    }
  }
  else if (v76 == 255)
  {
    sub_1DA4E895C(v19 + 56);
    v81 = v20[64];
    *v74 = *v75;
    *(_BYTE *)(v19 + 64) = v81;
  }
  else
  {
    v77 = *v75;
    sub_1DA4E762C(*v75, v20[64]);
    v78 = *(void **)(v19 + 56);
    *(_QWORD *)(v19 + 56) = v77;
    v79 = *(_BYTE *)(v19 + 64);
    *(_BYTE *)(v19 + 64) = v76;
    sub_1DA4E7898(v78, v79);
  }
  v83 = (id *)(v19 + 72);
  v84 = (id *)(v20 + 72);
  v85 = v20[80];
  if (*(unsigned __int8 *)(v19 + 80) == 255)
  {
    if (v85 == 255)
    {
      v91 = *v84;
      *(_BYTE *)(v19 + 80) = v20[80];
      *v83 = v91;
    }
    else
    {
      v89 = *v84;
      sub_1DA4E762C(*v84, v20[80]);
      *(_QWORD *)(v19 + 72) = v89;
      *(_BYTE *)(v19 + 80) = v85;
    }
  }
  else if (v85 == 255)
  {
    sub_1DA4E895C(v19 + 72);
    v90 = v20[80];
    *v83 = *v84;
    *(_BYTE *)(v19 + 80) = v90;
  }
  else
  {
    v86 = *v84;
    sub_1DA4E762C(*v84, v20[80]);
    v87 = *(void **)(v19 + 72);
    *(_QWORD *)(v19 + 72) = v86;
    v88 = *(_BYTE *)(v19 + 80);
    *(_BYTE *)(v19 + 80) = v85;
    sub_1DA4E7898(v87, v88);
  }
  v92 = (id *)(v19 + 88);
  v93 = (id *)(v20 + 88);
  v94 = v20[96];
  if (*(unsigned __int8 *)(v19 + 96) == 255)
  {
    if (v94 == 255)
    {
      v100 = *v93;
      *(_BYTE *)(v19 + 96) = v20[96];
      *v92 = v100;
    }
    else
    {
      v98 = *v93;
      sub_1DA4E762C(*v93, v20[96]);
      *(_QWORD *)(v19 + 88) = v98;
      *(_BYTE *)(v19 + 96) = v94;
    }
  }
  else if (v94 == 255)
  {
    sub_1DA4E895C(v19 + 88);
    v99 = v20[96];
    *v92 = *v93;
    *(_BYTE *)(v19 + 96) = v99;
  }
  else
  {
    v95 = *v93;
    sub_1DA4E762C(*v93, v20[96]);
    v96 = *(void **)(v19 + 88);
    *(_QWORD *)(v19 + 88) = v95;
    v97 = *(_BYTE *)(v19 + 96);
    *(_BYTE *)(v19 + 96) = v94;
    sub_1DA4E7898(v96, v97);
  }
  v101 = (id *)(v19 + 104);
  v102 = (id *)(v20 + 104);
  v103 = v20[112];
  if (*(unsigned __int8 *)(v19 + 112) == 255)
  {
    if (v103 == 255)
    {
      v109 = *v102;
      *(_BYTE *)(v19 + 112) = v20[112];
      *v101 = v109;
    }
    else
    {
      v107 = *v102;
      sub_1DA4E762C(*v102, v20[112]);
      *(_QWORD *)(v19 + 104) = v107;
      *(_BYTE *)(v19 + 112) = v103;
    }
  }
  else if (v103 == 255)
  {
    sub_1DA4E895C(v19 + 104);
    v108 = v20[112];
    *v101 = *v102;
    *(_BYTE *)(v19 + 112) = v108;
  }
  else
  {
    v104 = *v102;
    sub_1DA4E762C(*v102, v20[112]);
    v105 = *(void **)(v19 + 104);
    *(_QWORD *)(v19 + 104) = v104;
    v106 = *(_BYTE *)(v19 + 112);
    *(_BYTE *)(v19 + 112) = v103;
    sub_1DA4E7898(v105, v106);
  }
  v110 = (id *)(v19 + 120);
  v111 = (id *)(v20 + 120);
  v112 = v20[128];
  if (*(unsigned __int8 *)(v19 + 128) == 255)
  {
    if (v112 == 255)
    {
      v118 = *v111;
      *(_BYTE *)(v19 + 128) = v20[128];
      *v110 = v118;
    }
    else
    {
      v116 = *v111;
      sub_1DA4E762C(*v111, v20[128]);
      *(_QWORD *)(v19 + 120) = v116;
      *(_BYTE *)(v19 + 128) = v112;
    }
  }
  else if (v112 == 255)
  {
    sub_1DA4E895C(v19 + 120);
    v117 = v20[128];
    *v110 = *v111;
    *(_BYTE *)(v19 + 128) = v117;
  }
  else
  {
    v113 = *v111;
    sub_1DA4E762C(*v111, v20[128]);
    v114 = *(void **)(v19 + 120);
    *(_QWORD *)(v19 + 120) = v113;
    v115 = *(_BYTE *)(v19 + 128);
    *(_BYTE *)(v19 + 128) = v112;
    sub_1DA4E7898(v114, v115);
  }
  *(_BYTE *)(v19 + 129) = v20[129];
  v119 = v21[11];
  v120 = v19 + v119;
  v121 = &v20[v119];
  v122 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 24))(v120, v121, v122);
  v123 = v21[12];
  v124 = (_QWORD *)(v19 + v123);
  v125 = &v20[v123];
  *v124 = *(_QWORD *)v125;
  v124[1] = *((_QWORD *)v125 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + v21[13]) = v20[v21[13]];
  *(_BYTE *)(v19 + v21[14]) = v20[v21[14]];
  *(_BYTE *)(v19 + v21[15]) = v20[v21[15]];
  v126 = v21[16];
  v127 = (_QWORD *)(v19 + v126);
  v128 = &v20[v126];
  *v127 = *(_QWORD *)v128;
  v127[1] = *((_QWORD *)v128 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_75:
  v129 = a3[22];
  v130 = (_QWORD *)((char *)a1 + v129);
  v131 = (_QWORD *)((char *)a2 + v129);
  v132 = *(_QWORD *)((char *)a2 + v129 + 8);
  if (*(_QWORD *)((char *)a1 + v129 + 8) >> 60 == 15)
  {
    if (v132 >> 60 != 15)
    {
      v133 = *v131;
      sub_1DA498750(v133, v132);
      *v130 = v133;
      v130[1] = v132;
      goto LABEL_82;
    }
    goto LABEL_80;
  }
  if (v132 >> 60 == 15)
  {
    sub_1DA4E89CC((uint64_t)v130);
LABEL_80:
    *(_OWORD *)v130 = *(_OWORD *)v131;
    goto LABEL_82;
  }
  v134 = *v131;
  sub_1DA498750(v134, v132);
  v135 = *v130;
  v136 = v130[1];
  *v130 = v134;
  v130[1] = v132;
  sub_1DA4986F8(v135, v136);
LABEL_82:
  v137 = a3[23];
  v138 = (char *)a1 + v137;
  v139 = (char *)a2 + v137;
  v140 = sub_1DA66C358();
  v141 = *(_QWORD *)(v140 - 8);
  v142 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 48);
  v143 = v142(v138, 1, v140);
  v144 = v142(v139, 1, v140);
  if (!v143)
  {
    if (!v144)
    {
      (*(void (**)(char *, char *, uint64_t))(v141 + 24))(v138, v139, v140);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v141 + 8))(v138, v140);
    goto LABEL_87;
  }
  if (v144)
  {
LABEL_87:
    v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v138, v139, v140);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
  return a1;
}

uint64_t initializeWithTake for EpisodeEntity(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  v8 = *(_OWORD *)(a2 + 128);
  v9 = a3[20];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  v12 = sub_1DA66DB58();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[21];
  v16 = (_OWORD *)(a1 + v15);
  v17 = (_OWORD *)(a2 + v15);
  v18 = (int *)sub_1DA66CA0C();
  v19 = *((_QWORD *)v18 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = v17[1];
    *v16 = *v17;
    v16[1] = v21;
    *((_BYTE *)v16 + 32) = *((_BYTE *)v17 + 32);
    *(_OWORD *)((char *)v16 + 40) = *(_OWORD *)((char *)v17 + 40);
    *((_QWORD *)v16 + 7) = *((_QWORD *)v17 + 7);
    *((_BYTE *)v16 + 64) = *((_BYTE *)v17 + 64);
    *(_OWORD *)((char *)v16 + 113) = *(_OWORD *)((char *)v17 + 113);
    *(_OWORD *)((char *)v16 + 104) = *(_OWORD *)((char *)v17 + 104);
    *(_OWORD *)((char *)v16 + 88) = *(_OWORD *)((char *)v17 + 88);
    *(_OWORD *)((char *)v16 + 72) = *(_OWORD *)((char *)v17 + 72);
    *((_BYTE *)v16 + 129) = *((_BYTE *)v17 + 129);
    v22 = v18[11];
    v23 = (char *)v16 + v22;
    v24 = (char *)v17 + v22;
    v25 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    *(_OWORD *)((char *)v16 + v18[12]) = *(_OWORD *)((char *)v17 + v18[12]);
    *((_BYTE *)v16 + v18[13]) = *((_BYTE *)v17 + v18[13]);
    *((_BYTE *)v16 + v18[14]) = *((_BYTE *)v17 + v18[14]);
    *((_BYTE *)v16 + v18[15]) = *((_BYTE *)v17 + v18[15]);
    *(_OWORD *)((char *)v16 + v18[16]) = *(_OWORD *)((char *)v17 + v18[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  v26 = a3[23];
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = sub_1DA66C358();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

_QWORD *assignWithTake for EpisodeEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, int *);
  int v25;
  int v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v49;
  _OWORD *v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int v56;
  int v57;
  void *v58;
  _QWORD *v59;
  int v60;
  int v61;
  void *v62;
  _QWORD *v63;
  int v64;
  int v65;
  void *v66;
  _QWORD *v67;
  int v68;
  int v69;
  void *v70;
  _QWORD *v71;
  int v72;
  int v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  a1[13] = a2[13];
  swift_release();
  a1[14] = a2[14];
  swift_release();
  a1[15] = a2[15];
  swift_release();
  a1[16] = a2[16];
  swift_release();
  a1[17] = a2[17];
  swift_release();
  v10 = a3[20];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DA66DB58();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = a3[21];
  v20 = (uint64_t)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = (int *)sub_1DA66CA0C();
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24((uint64_t)v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      v27 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *(_OWORD *)(v20 + 16) = v27;
      *(_BYTE *)(v20 + 32) = v21[32];
      *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
      *(_QWORD *)(v20 + 56) = *((_QWORD *)v21 + 7);
      *(_BYTE *)(v20 + 64) = v21[64];
      *(_OWORD *)(v20 + 113) = *(_OWORD *)(v21 + 113);
      *(_OWORD *)(v20 + 104) = *(_OWORD *)(v21 + 104);
      *(_OWORD *)(v20 + 88) = *(_OWORD *)(v21 + 88);
      *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
      *(_BYTE *)(v20 + 129) = v21[129];
      v28 = v22[11];
      v29 = v20 + v28;
      v30 = &v21[v28];
      v31 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      *(_OWORD *)(v20 + v22[12]) = *(_OWORD *)&v21[v22[12]];
      *(_BYTE *)(v20 + v22[13]) = v21[v22[13]];
      *(_BYTE *)(v20 + v22[14]) = v21[v22[14]];
      *(_BYTE *)(v20 + v22[15]) = v21[v22[15]];
      *(_OWORD *)(v20 + v22[16]) = *(_OWORD *)&v21[v22[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    sub_1DA47F880(v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  v49 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v49;
  swift_bridgeObjectRelease();
  v50 = v21 + 16;
  v51 = *(unsigned __int8 *)(v20 + 32);
  if (v51 != 255)
  {
    v52 = v21[32];
    if (v52 != 255)
    {
      v53 = *(_QWORD *)(v20 + 16);
      v54 = *(_QWORD *)(v20 + 24);
      *(_OWORD *)(v20 + 16) = *v50;
      *(_BYTE *)(v20 + 32) = v52;
      sub_1DA47F868(v53, v54, v51);
      goto LABEL_32;
    }
    sub_1DA4E8928(v20 + 16);
  }
  *(_OWORD *)(v20 + 16) = *v50;
  *(_BYTE *)(v20 + 32) = v21[32];
LABEL_32:
  *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
  v55 = v21 + 56;
  v56 = *(unsigned __int8 *)(v20 + 64);
  if (v56 != 255)
  {
    v57 = v21[64];
    if (v57 != 255)
    {
      v58 = *(void **)(v20 + 56);
      *(_QWORD *)(v20 + 56) = *v55;
      *(_BYTE *)(v20 + 64) = v57;
      sub_1DA4E7898(v58, v56);
      goto LABEL_37;
    }
    sub_1DA4E895C(v20 + 56);
  }
  *(_QWORD *)(v20 + 56) = *v55;
  *(_BYTE *)(v20 + 64) = v21[64];
LABEL_37:
  v59 = v21 + 72;
  v60 = *(unsigned __int8 *)(v20 + 80);
  if (v60 != 255)
  {
    v61 = v21[80];
    if (v61 != 255)
    {
      v62 = *(void **)(v20 + 72);
      *(_QWORD *)(v20 + 72) = *v59;
      *(_BYTE *)(v20 + 80) = v61;
      sub_1DA4E7898(v62, v60);
      goto LABEL_42;
    }
    sub_1DA4E895C(v20 + 72);
  }
  *(_QWORD *)(v20 + 72) = *v59;
  *(_BYTE *)(v20 + 80) = v21[80];
LABEL_42:
  v63 = v21 + 88;
  v64 = *(unsigned __int8 *)(v20 + 96);
  if (v64 != 255)
  {
    v65 = v21[96];
    if (v65 != 255)
    {
      v66 = *(void **)(v20 + 88);
      *(_QWORD *)(v20 + 88) = *v63;
      *(_BYTE *)(v20 + 96) = v65;
      sub_1DA4E7898(v66, v64);
      goto LABEL_47;
    }
    sub_1DA4E895C(v20 + 88);
  }
  *(_QWORD *)(v20 + 88) = *v63;
  *(_BYTE *)(v20 + 96) = v21[96];
LABEL_47:
  v67 = v21 + 104;
  v68 = *(unsigned __int8 *)(v20 + 112);
  if (v68 != 255)
  {
    v69 = v21[112];
    if (v69 != 255)
    {
      v70 = *(void **)(v20 + 104);
      *(_QWORD *)(v20 + 104) = *v67;
      *(_BYTE *)(v20 + 112) = v69;
      sub_1DA4E7898(v70, v68);
      goto LABEL_52;
    }
    sub_1DA4E895C(v20 + 104);
  }
  *(_QWORD *)(v20 + 104) = *v67;
  *(_BYTE *)(v20 + 112) = v21[112];
LABEL_52:
  v71 = v21 + 120;
  v72 = *(unsigned __int8 *)(v20 + 128);
  if (v72 == 255)
  {
LABEL_56:
    *(_QWORD *)(v20 + 120) = *v71;
    *(_BYTE *)(v20 + 128) = v21[128];
    goto LABEL_57;
  }
  v73 = v21[128];
  if (v73 == 255)
  {
    sub_1DA4E895C(v20 + 120);
    goto LABEL_56;
  }
  v74 = *(void **)(v20 + 120);
  *(_QWORD *)(v20 + 120) = *v71;
  *(_BYTE *)(v20 + 128) = v73;
  sub_1DA4E7898(v74, v72);
LABEL_57:
  *(_BYTE *)(v20 + 129) = v21[129];
  v75 = v22[11];
  v76 = v20 + v75;
  v77 = &v21[v75];
  v78 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v76, v77, v78);
  v79 = v22[12];
  v80 = (_QWORD *)(v20 + v79);
  v81 = &v21[v79];
  v83 = *(_QWORD *)v81;
  v82 = *((_QWORD *)v81 + 1);
  *v80 = v83;
  v80[1] = v82;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + v22[13]) = v21[v22[13]];
  *(_BYTE *)(v20 + v22[14]) = v21[v22[14]];
  *(_BYTE *)(v20 + v22[15]) = v21[v22[15]];
  v84 = v22[16];
  v85 = (_QWORD *)(v20 + v84);
  v86 = &v21[v84];
  v88 = *(_QWORD *)v86;
  v87 = *((_QWORD *)v86 + 1);
  *v85 = v88;
  v85[1] = v87;
  swift_bridgeObjectRelease();
LABEL_13:
  v33 = a3[22];
  v34 = (uint64_t)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = *(_QWORD *)((char *)a1 + v33 + 8);
  if (v36 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)v34 = *(_OWORD *)v35;
    goto LABEL_18;
  }
  v37 = *((_QWORD *)v35 + 1);
  if (v37 >> 60 == 15)
  {
    sub_1DA4E89CC(v34);
    goto LABEL_16;
  }
  v38 = *(_QWORD *)v34;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = v37;
  sub_1DA4986F8(v38, v36);
LABEL_18:
  v39 = a3[23];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_1DA66C358();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 1, v42);
  v46 = v44(v41, 1, v42);
  if (!v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v40, v41, v42);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
    goto LABEL_23;
  }
  if (v46)
  {
LABEL_23:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA61FF40(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[20];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[21];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[23];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for EpisodeEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA62001C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[20];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[21];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[23];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1DA6200E8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DA56DA8C(319, &qword_1EDAE4310, (void (*)(uint64_t))MEMORY[0x1E0D7EB98]);
  if (v0 <= 0x3F)
  {
    sub_1DA56DA8C(319, (unint64_t *)&qword_1EDAE4110, (void (*)(uint64_t))MEMORY[0x1E0D7D7F0]);
    if (v1 <= 0x3F)
    {
      sub_1DA56DA8C(319, (unint64_t *)&qword_1EDAE0148, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DA620210()
{
  return sub_1DA4841D4(&qword_1F026DCE8, &qword_1F026DCF0, MEMORY[0x1E0CA87C8]);
}

_QWORD *sub_1DA620248(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = (_BYTE *)(swift_bridgeObjectRetain() + 48);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (!*v2)
    {
      v4 = *((_QWORD *)v2 - 2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1DA54079C(0, v3[2] + 1, 1, v3);
      v6 = v3[2];
      v5 = v3[3];
      if (v6 >= v5 >> 1)
        v3 = sub_1DA54079C((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
      v3[2] = v6 + 1;
      v3[v6 + 4] = v4;
    }
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DA620338(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1DA509EA4(0, v2, 0);
    result = v9;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v6 = *v4++;
      v5 = v6;
      v10 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1DA509EA4(v7 > 1, v8 + 1, 1);
        result = v10;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      *(_QWORD *)(result + 8 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1DA6203F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_QWORD *)(v2 + 24) = a2;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F026DEC0 + dword_1F026DEC0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v5;
  *v5 = v2;
  v5[1] = sub_1DA620464;
  return v7(a1, a2);
}

uint64_t sub_1DA620464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  char *v9;
  _QWORD *v10;

  v10 = (_QWORD *)*v3;
  v10[5] = a1;
  v10[6] = a2;
  v10[7] = a3;
  swift_task_dealloc();
  v9 = (char *)&dword_1F026DEC8 + dword_1F026DEC8;
  v7 = (_QWORD *)swift_task_alloc();
  v10[8] = v7;
  *v7 = v10;
  v7[1] = sub_1DA620508;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v9)(a1, a2, a3, v10[3]);
}

uint64_t sub_1DA620508(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[9] = a1;
  v3[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    v3[11] = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA62059C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  sub_1DA66FBEC();
  if (v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
    v6 = sub_1DA640AD4(v5);
    swift_bridgeObjectRelease();
    sub_1DA62974C(v0 + 16, v3, v4, v6, (uint64_t (*)(_QWORD, __n128))type metadata accessor for EpisodeEntity, (uint64_t (*)(uint64_t))sub_1DA62626C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_1DA6206A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_QWORD *)(v2 + 24) = a2;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F026DE58 + dword_1F026DE58);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v5;
  *v5 = v2;
  v5[1] = sub_1DA620710;
  return v7(a1, a2);
}

uint64_t sub_1DA620710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  char *v9;
  _QWORD *v10;

  v10 = (_QWORD *)*v3;
  v10[5] = a1;
  v10[6] = a2;
  v10[7] = a3;
  swift_task_dealloc();
  v9 = (char *)&dword_1F026DE60 + dword_1F026DE60;
  v7 = (_QWORD *)swift_task_alloc();
  v10[8] = v7;
  *v7 = v10;
  v7[1] = sub_1DA6207B4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v9)(a1, a2, a3, v10[3]);
}

uint64_t sub_1DA6207B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[9] = a1;
  v3[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    v3[11] = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA620848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  sub_1DA66FBEC();
  if (v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
    v6 = sub_1DA640AD4(v5);
    swift_bridgeObjectRelease();
    sub_1DA62810C((unint64_t *)(v0 + 16), v3, v4, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_1DA62093C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_QWORD *)(v2 + 24) = a2;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F026DDE0 + dword_1F026DDE0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v5;
  *v5 = v2;
  v5[1] = sub_1DA6209AC;
  return v7(a1, a2);
}

uint64_t sub_1DA6209AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  char *v9;
  _QWORD *v10;

  v10 = (_QWORD *)*v3;
  v10[5] = a1;
  v10[6] = a2;
  v10[7] = a3;
  swift_task_dealloc();
  v9 = (char *)&dword_1F026DDE8 + dword_1F026DDE8;
  v7 = (_QWORD *)swift_task_alloc();
  v10[8] = v7;
  *v7 = v10;
  v7[1] = sub_1DA620A50;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v9)(a1, a2, a3, v10[3]);
}

uint64_t sub_1DA620A50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[9] = a1;
  v3[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    v3[11] = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA620AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  sub_1DA66FBEC();
  if (v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
    v6 = sub_1DA640AD4(v5);
    swift_bridgeObjectRelease();
    sub_1DA62974C(v0 + 16, v3, v4, v6, (uint64_t (*)(_QWORD, __n128))type metadata accessor for ShowEntity, (uint64_t (*)(uint64_t))sub_1DA6262A8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
  }
}

uint64_t ShowEntity.ShowEntityQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  *a1 = result;
  return result;
}

uint64_t ShowEntity.ShowEntityQuery.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t ShowEntity.ShowEntityQuery.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

void (*ShowEntity.ShowEntityQuery.objectGraph.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7AE4;
}

uint64_t ShowEntity.ShowEntityQuery.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t ShowEntity.ShowEntityQuery.predicate(forAdamIDs:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  id v14;
  unint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1DA6704E0();
    result = sub_1DA6047A4(a1);
    v5 = result;
    v7 = v6;
    v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_11;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v7)
        goto LABEL_12;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v5));
      sub_1DA6704BC();
      sub_1DA6704EC();
      sub_1DA6704F8();
      sub_1DA6704C8();
      result = sub_1DA604848(v5, v7, v9 & 1, a1);
      v5 = result;
      v7 = v10;
      v9 = v11 & 1;
      if (!--v1)
      {
        sub_1DA57DB40(result, v10, v11 & 1);
        v2 = v15;
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_9:
    v12 = (void *)objc_opt_self();
    sub_1DA640A40(v2);
    swift_bridgeObjectRelease();
    sub_1DA47D774(0, (unint64_t *)&qword_1EDADE760);
    sub_1DA626658();
    v13 = (void *)sub_1DA66FC4C();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v12, sel_predicateForPodcastStoreIDs_, v13);

    return (uint64_t)v14;
  }
  return result;
}

id ShowEntity.ShowEntityQuery.predicate(forUuids:)()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1DA66FC4C();
  v2 = objc_msgSend(v0, sel_predicateForPodcastUuids_, v1);

  return v2;
}

uint64_t ShowEntity.ShowEntityQuery.suggestedEntities()()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1DA670078();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v3 = sub_1DA66FB98();
  v1[8] = v3;
  v1[9] = *(_QWORD *)(v3 - 8);
  v4 = swift_task_alloc();
  v5 = *v0;
  v1[10] = v4;
  v1[11] = v5;
  return swift_task_switch();
}

uint64_t sub_1DA62101C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BE60();
  sub_1DA66BC98();
  swift_release();
  v0[12] = v0[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA6210BC;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA6210BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA621128()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[15] = v0[2];
  swift_getObjectType();
  sub_1DA4EE300();
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  *v1 = v0;
  v1[1] = sub_1DA6211A8;
  return sub_1DA6700C0();
}

uint64_t sub_1DA6211A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DA62122C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v1 = (void *)v0[17];
  v3 = v0[6];
  v2 = v0[7];
  v4 = v0[5];
  v5 = swift_allocObject();
  v0[18] = v5;
  *(_QWORD *)(v5 + 16) = v1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0C977C0], v4);
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc();
  v0[19] = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DD20);
  *v7 = v0;
  v7[1] = sub_1DA60BAD0;
  return sub_1DA67009C();
}

void sub_1DA621304(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  uint64_t *v24;
  id v25;
  uint64_t v26;

  v24 = a1;
  v1 = type metadata accessor for ShowEntity();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (_QWORD *)((char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66F8BC();
  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DA67B2A0;
  sub_1DA66F8BC();
  v9 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v10 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithKey_ascending_, v10, 0);

  *(_QWORD *)(v8 + 32) = v11;
  v26 = v8;
  sub_1DA66FAB4();
  sub_1DA47D774(0, &qword_1F026DBD0);
  v12 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v12);

  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE0080);
  v13 = v25;
  v14 = sub_1DA670090();
  if (v13)
  {

    return;
  }
  v15 = v14;
  if (!(v14 >> 62))
  {
    v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = v24;
    if (v16)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease();

    *v17 = MEMORY[0x1E0DEE9D8];
    return;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  v17 = v24;
  if (!v16)
    goto LABEL_15;
LABEL_5:
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1DA50A0EC(0, v16 & ~(v16 >> 63), 0);
  if (v16 < 0)
  {
    __break(1u);
  }
  else
  {
    v23[1] = 0;
    v25 = v7;
    v18 = 0;
    v19 = v26;
    do
    {
      if ((v15 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x1DF09EE48](v18, v15);
      else
        v20 = *(id *)(v15 + 8 * v18 + 32);
      ShowEntity.init(model:)(v20, v4);
      v26 = v19;
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1DA50A0EC(v21 > 1, v22 + 1, 1);
        v19 = v26;
      }
      ++v18;
      *(_QWORD *)(v19 + 16) = v22 + 1;
      sub_1DA4F7228((uint64_t)v4, v19+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v22, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();

    *v24 = v19;
  }
}

uint64_t sub_1DA621654(uint64_t a1)
{
  return ShowEntity.ShowEntityQuery.predicate(forAdamIDs:)(a1);
}

id sub_1DA621668()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1DA66FC4C();
  v2 = objc_msgSend(v0, sel_predicateForPodcastUuids_, v1);

  return v2;
}

uint64_t sub_1DA6216D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = *v1;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F026DDD8 + dword_1F026DDD8);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4B1798;
  return v7(a1, v4);
}

uint64_t sub_1DA621744(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1DA527068;
  return ShowEntity.ShowEntityQuery.suggestedEntities()();
}

uint64_t sub_1DA62178C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1DA616098();
  *v1 = v0;
  v1[1] = sub_1DA4AD77C;
  return sub_1DA66BD34();
}

uint64_t sub_1DA6217F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_task_switch();
}

uint64_t sub_1DA621810()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = v0[4];
  sub_1DA66BE60();
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA4841D4(&qword_1F026DE40, &qword_1EDAE5340, MEMORY[0x1E0DEAF50]);
  *v1 = v0;
  v1[1] = sub_1DA6218C0;
  return sub_1DA66FCF4();
}

uint64_t sub_1DA6218C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA621924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_task_switch();
}

uint64_t sub_1DA62193C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = v0[4];
  sub_1DA66BE60();
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA4841D4(&qword_1F026DE40, &qword_1EDAE5340, MEMORY[0x1E0DEAF50]);
  *v1 = v0;
  v1[1] = sub_1DA6218C0;
  return sub_1DA66FCF4();
}

uint64_t sub_1DA6219EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_task_switch();
}

uint64_t sub_1DA621A04()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = v0[4];
  sub_1DA66BE60();
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA4841D4(&qword_1F026DE40, &qword_1EDAE5340, MEMORY[0x1E0DEAF50]);
  *v1 = v0;
  v1[1] = sub_1DA621AB4;
  return sub_1DA66FCF4();
}

uint64_t sub_1DA621AB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA621B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (id *)(v1 + 48);
    do
    {
      if (*(_BYTE *)v4 == 2)
      {
        v5 = *(v4 - 2);
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
      v4 += 3;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v2 = v12;
    v1 = *(_QWORD *)(v0 + 56);
  }
  v6 = sub_1DA60B488(v1);
  v7 = sub_1DA5B95EC((uint64_t)v6);
  swift_bridgeObjectRelease();
  v8 = sub_1DA620248(v1);
  swift_bridgeObjectRelease();
  v9 = sub_1DA620338((uint64_t)v8);
  swift_bridgeObjectRelease();
  v10 = sub_1DA640A64(v9);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v2, v7, v10);
}

uint64_t sub_1DA621C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[23] = a3;
  v4[24] = a4;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = *(_QWORD *)(type metadata accessor for EpisodeEntity() - 8);
  v4[26] = swift_task_alloc();
  v5 = sub_1DA66DEF4();
  v4[27] = v5;
  v4[28] = *(_QWORD *)(v5 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA621D24()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;
  char *v5;

  v1 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 136) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1DA66BC98();
  sub_1DA66EE30();
  sub_1DA66F580();
  swift_release();
  v2 = objc_msgSend(*(id *)(v0 + 64), sel_privateQueueContext);
  *(_QWORD *)(v0 + 264) = v2;
  swift_unknownObjectRelease();
  v5 = (char *)&dword_1F026DED0 + dword_1F026DED0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v3;
  *v3 = v0;
  v3[1] = sub_1DA621E40;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, id, _QWORD))v5)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v2, *(_QWORD *)(v0 + 192));
}

uint64_t sub_1DA621E40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 280) = a1;
  *(_QWORD *)(v3 + 288) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA621EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t KeyPath;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t result;
  NSObject *v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  _QWORD *v69;
  os_log_type_t type;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v4 = (_QWORD *)swift_task_alloc();
  *v4 = &type metadata for EpisodeEntity.EpisodeEntityQuery;
  v5 = sub_1DA629FF0();
  v4[1] = v5;
  KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  sub_1DA66BE60();
  v7 = sub_1DA626418(v2, KeyPath, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  swift_release_n();
  v8 = (_QWORD *)(v1 + 152);
  v9 = v1 + 80;
  v10 = (_QWORD *)(v1 + 88);
  v11 = (uint64_t *)(v1 + 136);
  if (*(_QWORD *)(*(_QWORD *)(v1 + 152) + 16))
  {
    v76 = v3;
    v12 = v1 + 80;
    v13 = (_QWORD *)(v1 + 88);
    v14 = v7[2];
    if (v14)
    {
      v71 = v1;
      swift_bridgeObjectRetain();
      v15 = v7 + 5;
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        swift_bridgeObjectRetain();
        sub_1DA625D70(v16, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease_n();
      v1 = v71;
      v10 = v13;
    }
    else
    {
      swift_bridgeObjectRelease();
      v10 = (_QWORD *)(v1 + 88);
    }
    v9 = v12;
    v3 = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v18 = *(_QWORD *)(v1 + 280);
  v19 = (_QWORD *)swift_task_alloc();
  *v19 = &type metadata for EpisodeEntity.EpisodeEntityQuery;
  v19[1] = v5;
  v20 = swift_getKeyPath();
  swift_task_dealloc();
  sub_1DA66BE60();
  v21 = sub_1DA626550(v18, v20, v9, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  swift_release_n();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 136) + 16) && (v22 = *(_QWORD *)(v21 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v22; ++i)
    {
      v24 = *(_QWORD *)(v21 + 8 * i + 32);
      sub_1DA625C68(v24);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *v10 = *v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0000);
  sub_1DA4841D4((unint64_t *)&unk_1F026DA48, &qword_1EDAE0000, MEMORY[0x1E0DEB3E0]);
  if ((sub_1DA66FCDC() & 1) != 0
    || (*(v8 - 7) = *v11,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DE00),
        sub_1DA4841D4(&qword_1F026DE08, &qword_1F026DE00, MEMORY[0x1E0DEB3E0]),
        (sub_1DA66FCDC() & 1) != 0))
  {
    sub_1DA66FBEC();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v1 + 8))();
    }
    else
    {
      sub_1DA66DE28();
      v26 = sub_1DA66DEDC();
      v27 = sub_1DA66FD90();
      if (os_log_type_enabled(v26, (os_log_type_t)v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_1DA478000, v26, (os_log_type_t)v27, "Some entities are lingering, checking remote source for episode content.", v28, 2u);
        MEMORY[0x1DF0A0474](v28, -1, -1);
      }
      v29 = *(_QWORD *)(v1 + 256);
      v30 = (_QWORD *)v1;
      v31 = *(_QWORD *)(v1 + 224);
      v32 = v30[27];

      v33 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v30[37] = v33;
      v33(v29, v32);
      v72 = v30;
      v30[13] = v30[19];
      if ((sub_1DA66FCDC() & 1) != 0)
      {
        sub_1DA66DE28();
        v34 = sub_1DA66DEDC();
        v35 = sub_1DA66FDA8();
        v36 = os_log_type_enabled(v34, v35);
        v37 = v30[31];
        v38 = v30[27];
        if (v36)
        {
          v77 = v30[27];
          v75 = v30[31];
          v39 = (uint8_t *)swift_slowAlloc();
          v73 = swift_slowAlloc();
          v79 = v73;
          *(_DWORD *)v39 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          type = v35;
          v40 = sub_1DA66FC64();
          v42 = v41;
          swift_bridgeObjectRelease();
          v30[20] = sub_1DA49AD00(v40, v42, &v79);
          sub_1DA6702C4();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DA478000, v34, type, "Failed to find requested local episodes with identifiers: %s", v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1DF0A0474](v73, -1, -1);
          MEMORY[0x1DF0A0474](v39, -1, -1);

          v43 = v75;
          v44 = v77;
        }
        else
        {

          v43 = v37;
          v44 = v38;
        }
        v33(v43, v44);
      }
      v52 = *v11;
      v53 = *(_QWORD *)(*v11 + 16);
      v54 = MEMORY[0x1E0DEE9D8];
      if (v53)
      {
        v74 = v8 - 5;
        v79 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1DA498794(0, v53, 0);
        v54 = v79;
        result = sub_1DA6047A4(v52);
        v55 = result;
        v57 = v56;
        v59 = v58 & 1;
        while ((v55 & 0x8000000000000000) == 0 && v55 < 1 << *(_BYTE *)(v52 + 32))
        {
          if (((*(_QWORD *)(v52 + 56 + (((unint64_t)v55 >> 3) & 0xFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
            goto LABEL_41;
          if (*(_DWORD *)(v52 + 36) != (_DWORD)v57)
            goto LABEL_42;
          v78 = v59;
          *v74 = *(_QWORD *)(*(_QWORD *)(v52 + 48) + 8 * v55);
          v60 = sub_1DA670684();
          v62 = v61;
          v79 = v54;
          v64 = *(_QWORD *)(v54 + 16);
          v63 = *(_QWORD *)(v54 + 24);
          if (v64 >= v63 >> 1)
          {
            sub_1DA498794(v63 > 1, v64 + 1, 1);
            v54 = v79;
          }
          *(_QWORD *)(v54 + 16) = v64 + 1;
          v65 = v54 + 16 * v64;
          *(_QWORD *)(v65 + 32) = v60;
          *(_QWORD *)(v65 + 40) = v62;
          result = sub_1DA604848(v55, v57, v78 & 1, v52);
          v55 = result;
          v57 = v66;
          v59 = v67 & 1;
          if (!--v53)
          {
            sub_1DA57DB40(result, v66, v59);
            swift_bridgeObjectRelease();
            goto LABEL_39;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
      }
      else
      {
LABEL_39:
        v72[38] = v54;
        sub_1DA66BC98();
        v68 = v72[15];
        v72[39] = v68;
        v69 = (_QWORD *)swift_task_alloc();
        v72[40] = v69;
        *v69 = v72;
        v69[1] = sub_1DA6226E0;
        return sub_1DA626FEC(v54, v68);
      }
    }
  }
  else
  {
    sub_1DA66DE28();
    v45 = sub_1DA66DEDC();
    v46 = sub_1DA66FD90();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1DA478000, v45, v46, "Found episodes using local-only identifiers", v47, 2u);
      MEMORY[0x1DF0A0474](v47, -1, -1);
    }
    v48 = *(_QWORD *)(v1 + 224);
    v49 = *(_QWORD *)(v1 + 232);
    v50 = *(_QWORD *)(v1 + 216);

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v51 = *(_QWORD *)(v1 + 280);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v51);
  }
  return result;
}

uint64_t sub_1DA6226E0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA622750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v1 = v0 + 136;
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 208);
    v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v7 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v9 = *(_QWORD *)(v0 + 208);
      sub_1DA484504(v6, v9, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
      v10 = *(_QWORD *)(v5 + 40);
      sub_1DA47F880(v9, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1DA5402F8(0, v8[2] + 1, 1, v8);
      v12 = v8[2];
      v11 = v8[3];
      if (v12 >= v11 >> 1)
        v8 = sub_1DA5402F8((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
      v8[2] = v12 + 1;
      v8[v12 + 4] = v10;
      v6 += v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v1 = v0 + 136;
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16) && (v13 = v8[2]) != 0)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v13; ++i)
    {
      v15 = v8[i + 4];
      sub_1DA625C68(v15);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 128) = *(_QWORD *)v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DE00);
  sub_1DA4841D4(&qword_1F026DE08, &qword_1F026DE00, MEMORY[0x1E0DEB3E0]);
  if ((sub_1DA66FCDC() & 1) != 0)
  {
    sub_1DA66DE28();
    v16 = sub_1DA66DEDC();
    v17 = sub_1DA66FDA8();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    v20 = *(_QWORD *)(v0 + 240);
    v21 = *(_QWORD *)(v0 + 216);
    if (v18)
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v31 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v24 = sub_1DA66FC64();
      v30 = v21;
      v26 = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 144) = sub_1DA49AD00(v24, v26, &v31);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v16, v17, "Failed to find requested remote episodes with identifiers: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v23, -1, -1);
      MEMORY[0x1DF0A0474](v22, -1, -1);

      v19(v20, v30);
    }
    else
    {

      v19(v20, v21);
    }
  }
  v27 = *(_QWORD *)(v0 + 328);
  v31 = *(_QWORD *)(v0 + 280);
  sub_1DA65F504(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = v31;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v28);
}

uint64_t sub_1DA622B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[23] = a3;
  v4[24] = a4;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = *(_QWORD *)(type metadata accessor for ChannelEntity() - 8);
  v4[26] = swift_task_alloc();
  v5 = sub_1DA66DEF4();
  v4[27] = v5;
  v4[28] = *(_QWORD *)(v5 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA622BC0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;
  char *v5;

  v1 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 136) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1DA66BC98();
  sub_1DA66EE30();
  sub_1DA66F580();
  swift_release();
  v2 = objc_msgSend(*(id *)(v0 + 64), sel_privateQueueContext);
  *(_QWORD *)(v0 + 264) = v2;
  swift_unknownObjectRelease();
  v5 = (char *)&dword_1F026DE68 + dword_1F026DE68;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v3;
  *v3 = v0;
  v3[1] = sub_1DA622CDC;
  return ((uint64_t (*)(_QWORD, _QWORD, id, _QWORD))v5)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), v2, *(_QWORD *)(v0 + 192));
}

uint64_t sub_1DA622CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 280) = a1;
  *(_QWORD *)(v3 + 288) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA622D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t KeyPath;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t result;
  NSObject *v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  _QWORD *v69;
  os_log_type_t type;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v4 = (_QWORD *)swift_task_alloc();
  *v4 = &type metadata for ChannelEntity.ChannelEntityQuery;
  v5 = sub_1DA629F18();
  v4[1] = v5;
  KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  sub_1DA66BE60();
  v7 = sub_1DA626418(v2, KeyPath, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
  swift_release_n();
  v8 = (_QWORD *)(v1 + 152);
  v9 = v1 + 80;
  v10 = (_QWORD *)(v1 + 88);
  v11 = (uint64_t *)(v1 + 136);
  if (*(_QWORD *)(*(_QWORD *)(v1 + 152) + 16))
  {
    v76 = v3;
    v12 = v1 + 80;
    v13 = (_QWORD *)(v1 + 88);
    v14 = v7[2];
    if (v14)
    {
      v71 = v1;
      swift_bridgeObjectRetain();
      v15 = v7 + 5;
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        swift_bridgeObjectRetain();
        sub_1DA625D70(v16, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease_n();
      v1 = v71;
      v10 = v13;
    }
    else
    {
      swift_bridgeObjectRelease();
      v10 = (_QWORD *)(v1 + 88);
    }
    v9 = v12;
    v3 = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v18 = *(_QWORD *)(v1 + 280);
  v19 = (_QWORD *)swift_task_alloc();
  *v19 = &type metadata for ChannelEntity.ChannelEntityQuery;
  v19[1] = v5;
  v20 = swift_getKeyPath();
  swift_task_dealloc();
  sub_1DA66BE60();
  v21 = sub_1DA626550(v18, v20, v9, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
  swift_release_n();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 136) + 16) && (v22 = *(_QWORD *)(v21 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v22; ++i)
    {
      v24 = *(_QWORD *)(v21 + 8 * i + 32);
      sub_1DA625C68(v24);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *v10 = *v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0000);
  sub_1DA4841D4((unint64_t *)&unk_1F026DA48, &qword_1EDAE0000, MEMORY[0x1E0DEB3E0]);
  if ((sub_1DA66FCDC() & 1) != 0
    || (*(v8 - 7) = *v11,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DE00),
        sub_1DA4841D4(&qword_1F026DE08, &qword_1F026DE00, MEMORY[0x1E0DEB3E0]),
        (sub_1DA66FCDC() & 1) != 0))
  {
    sub_1DA66FBEC();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v1 + 8))();
    }
    else
    {
      sub_1DA66DE28();
      v26 = sub_1DA66DEDC();
      v27 = sub_1DA66FD90();
      if (os_log_type_enabled(v26, (os_log_type_t)v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_1DA478000, v26, (os_log_type_t)v27, "Some entities are lingering, checking remote source for episode content.", v28, 2u);
        MEMORY[0x1DF0A0474](v28, -1, -1);
      }
      v29 = *(_QWORD *)(v1 + 256);
      v30 = (_QWORD *)v1;
      v31 = *(_QWORD *)(v1 + 224);
      v32 = v30[27];

      v33 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v30[37] = v33;
      v33(v29, v32);
      v72 = v30;
      v30[13] = v30[19];
      if ((sub_1DA66FCDC() & 1) != 0)
      {
        sub_1DA66DE28();
        v34 = sub_1DA66DEDC();
        v35 = sub_1DA66FDA8();
        v36 = os_log_type_enabled(v34, v35);
        v37 = v30[31];
        v38 = v30[27];
        if (v36)
        {
          v77 = v30[27];
          v75 = v30[31];
          v39 = (uint8_t *)swift_slowAlloc();
          v73 = swift_slowAlloc();
          v79 = v73;
          *(_DWORD *)v39 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          type = v35;
          v40 = sub_1DA66FC64();
          v42 = v41;
          swift_bridgeObjectRelease();
          v30[20] = sub_1DA49AD00(v40, v42, &v79);
          sub_1DA6702C4();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DA478000, v34, type, "Failed to find requested local episodes with identifiers: %s", v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1DF0A0474](v73, -1, -1);
          MEMORY[0x1DF0A0474](v39, -1, -1);

          v43 = v75;
          v44 = v77;
        }
        else
        {

          v43 = v37;
          v44 = v38;
        }
        v33(v43, v44);
      }
      v52 = *v11;
      v53 = *(_QWORD *)(*v11 + 16);
      v54 = MEMORY[0x1E0DEE9D8];
      if (v53)
      {
        v74 = v8 - 5;
        v79 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1DA498794(0, v53, 0);
        v54 = v79;
        result = sub_1DA6047A4(v52);
        v55 = result;
        v57 = v56;
        v59 = v58 & 1;
        while ((v55 & 0x8000000000000000) == 0 && v55 < 1 << *(_BYTE *)(v52 + 32))
        {
          if (((*(_QWORD *)(v52 + 56 + (((unint64_t)v55 >> 3) & 0xFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
            goto LABEL_41;
          if (*(_DWORD *)(v52 + 36) != (_DWORD)v57)
            goto LABEL_42;
          v78 = v59;
          *v74 = *(_QWORD *)(*(_QWORD *)(v52 + 48) + 8 * v55);
          v60 = sub_1DA670684();
          v62 = v61;
          v79 = v54;
          v64 = *(_QWORD *)(v54 + 16);
          v63 = *(_QWORD *)(v54 + 24);
          if (v64 >= v63 >> 1)
          {
            sub_1DA498794(v63 > 1, v64 + 1, 1);
            v54 = v79;
          }
          *(_QWORD *)(v54 + 16) = v64 + 1;
          v65 = v54 + 16 * v64;
          *(_QWORD *)(v65 + 32) = v60;
          *(_QWORD *)(v65 + 40) = v62;
          result = sub_1DA604848(v55, v57, v78 & 1, v52);
          v55 = result;
          v57 = v66;
          v59 = v67 & 1;
          if (!--v53)
          {
            sub_1DA57DB40(result, v66, v59);
            swift_bridgeObjectRelease();
            goto LABEL_39;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
      }
      else
      {
LABEL_39:
        v72[38] = v54;
        sub_1DA66BC98();
        v68 = v72[15];
        v72[39] = v68;
        v69 = (_QWORD *)swift_task_alloc();
        v72[40] = v69;
        *v69 = v72;
        v69[1] = sub_1DA623618;
        return sub_1DA627E38(v54, v68);
      }
    }
  }
  else
  {
    sub_1DA66DE28();
    v45 = sub_1DA66DEDC();
    v46 = sub_1DA66FD90();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1DA478000, v45, v46, "Found episodes using local-only identifiers", v47, 2u);
      MEMORY[0x1DF0A0474](v47, -1, -1);
    }
    v48 = *(_QWORD *)(v1 + 224);
    v49 = *(_QWORD *)(v1 + 232);
    v50 = *(_QWORD *)(v1 + 216);

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v51 = *(_QWORD *)(v1 + 280);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v51);
  }
  return result;
}

uint64_t sub_1DA62357C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA623618(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA623688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v1 = v0 + 136;
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 208);
    v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v7 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v9 = *(_QWORD *)(v0 + 208);
      sub_1DA484504(v6, v9, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
      v10 = *(_QWORD *)(v5 + 40);
      sub_1DA47F880(v9, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1DA5402F8(0, v8[2] + 1, 1, v8);
      v12 = v8[2];
      v11 = v8[3];
      if (v12 >= v11 >> 1)
        v8 = sub_1DA5402F8((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
      v8[2] = v12 + 1;
      v8[v12 + 4] = v10;
      v6 += v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v1 = v0 + 136;
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16) && (v13 = v8[2]) != 0)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v13; ++i)
    {
      v15 = v8[i + 4];
      sub_1DA625C68(v15);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 128) = *(_QWORD *)v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DE00);
  sub_1DA4841D4(&qword_1F026DE08, &qword_1F026DE00, MEMORY[0x1E0DEB3E0]);
  if ((sub_1DA66FCDC() & 1) != 0)
  {
    sub_1DA66DE28();
    v16 = sub_1DA66DEDC();
    v17 = sub_1DA66FDA8();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    v20 = *(_QWORD *)(v0 + 240);
    v21 = *(_QWORD *)(v0 + 216);
    if (v18)
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v31 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v24 = sub_1DA66FC64();
      v30 = v21;
      v26 = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 144) = sub_1DA49AD00(v24, v26, &v31);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v16, v17, "Failed to find requested remote episodes with identifiers: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v23, -1, -1);
      MEMORY[0x1DF0A0474](v22, -1, -1);

      v19(v20, v30);
    }
    else
    {

      v19(v20, v21);
    }
  }
  v27 = *(_QWORD *)(v0 + 328);
  v31 = *(_QWORD *)(v0 + 280);
  sub_1DA65F690(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = v31;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v28);
}

uint64_t sub_1DA623A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[23] = a3;
  v4[24] = a4;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = *(_QWORD *)(type metadata accessor for ShowEntity() - 8);
  v4[26] = swift_task_alloc();
  v5 = sub_1DA66DEF4();
  v4[27] = v5;
  v4[28] = *(_QWORD *)(v5 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA623AF8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;
  char *v5;

  v1 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 136) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1DA66BC98();
  sub_1DA66EE30();
  sub_1DA66F580();
  swift_release();
  v2 = objc_msgSend(*(id *)(v0 + 64), sel_privateQueueContext);
  *(_QWORD *)(v0 + 264) = v2;
  swift_unknownObjectRelease();
  v5 = (char *)&dword_1F026DDF0 + dword_1F026DDF0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v3;
  *v3 = v0;
  v3[1] = sub_1DA623C14;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, id, _QWORD))v5)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v2, *(_QWORD *)(v0 + 192));
}

uint64_t sub_1DA623C14(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 280) = a1;
  *(_QWORD *)(v3 + 288) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA623C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t KeyPath;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t result;
  NSObject *v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  _QWORD *v69;
  os_log_type_t type;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v4 = (_QWORD *)swift_task_alloc();
  *v4 = &type metadata for ShowEntity.ShowEntityQuery;
  v5 = sub_1DA629DF8();
  v4[1] = v5;
  KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  sub_1DA66BE60();
  v7 = sub_1DA626418(v2, KeyPath, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  swift_release_n();
  v8 = (_QWORD *)(v1 + 152);
  v9 = v1 + 80;
  v10 = (_QWORD *)(v1 + 88);
  v11 = (uint64_t *)(v1 + 136);
  if (*(_QWORD *)(*(_QWORD *)(v1 + 152) + 16))
  {
    v76 = v3;
    v12 = v1 + 80;
    v13 = (_QWORD *)(v1 + 88);
    v14 = v7[2];
    if (v14)
    {
      v71 = v1;
      swift_bridgeObjectRetain();
      v15 = v7 + 5;
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        swift_bridgeObjectRetain();
        sub_1DA625D70(v16, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease_n();
      v1 = v71;
      v10 = v13;
    }
    else
    {
      swift_bridgeObjectRelease();
      v10 = (_QWORD *)(v1 + 88);
    }
    v9 = v12;
    v3 = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v18 = *(_QWORD *)(v1 + 280);
  v19 = (_QWORD *)swift_task_alloc();
  *v19 = &type metadata for ShowEntity.ShowEntityQuery;
  v19[1] = v5;
  v20 = swift_getKeyPath();
  swift_task_dealloc();
  sub_1DA66BE60();
  v21 = sub_1DA626550(v18, v20, v9, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  swift_release_n();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 136) + 16) && (v22 = *(_QWORD *)(v21 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v22; ++i)
    {
      v24 = *(_QWORD *)(v21 + 8 * i + 32);
      sub_1DA625C68(v24);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *v10 = *v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0000);
  sub_1DA4841D4((unint64_t *)&unk_1F026DA48, &qword_1EDAE0000, MEMORY[0x1E0DEB3E0]);
  if ((sub_1DA66FCDC() & 1) != 0
    || (*(v8 - 7) = *v11,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DE00),
        sub_1DA4841D4(&qword_1F026DE08, &qword_1F026DE00, MEMORY[0x1E0DEB3E0]),
        (sub_1DA66FCDC() & 1) != 0))
  {
    sub_1DA66FBEC();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v1 + 8))();
    }
    else
    {
      sub_1DA66DE28();
      v26 = sub_1DA66DEDC();
      v27 = sub_1DA66FD90();
      if (os_log_type_enabled(v26, (os_log_type_t)v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_1DA478000, v26, (os_log_type_t)v27, "Some entities are lingering, checking remote source for episode content.", v28, 2u);
        MEMORY[0x1DF0A0474](v28, -1, -1);
      }
      v29 = *(_QWORD *)(v1 + 256);
      v30 = (_QWORD *)v1;
      v31 = *(_QWORD *)(v1 + 224);
      v32 = v30[27];

      v33 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v30[37] = v33;
      v33(v29, v32);
      v72 = v30;
      v30[13] = v30[19];
      if ((sub_1DA66FCDC() & 1) != 0)
      {
        sub_1DA66DE28();
        v34 = sub_1DA66DEDC();
        v35 = sub_1DA66FDA8();
        v36 = os_log_type_enabled(v34, v35);
        v37 = v30[31];
        v38 = v30[27];
        if (v36)
        {
          v77 = v30[27];
          v75 = v30[31];
          v39 = (uint8_t *)swift_slowAlloc();
          v73 = swift_slowAlloc();
          v79 = v73;
          *(_DWORD *)v39 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          type = v35;
          v40 = sub_1DA66FC64();
          v42 = v41;
          swift_bridgeObjectRelease();
          v30[20] = sub_1DA49AD00(v40, v42, &v79);
          sub_1DA6702C4();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DA478000, v34, type, "Failed to find requested local episodes with identifiers: %s", v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1DF0A0474](v73, -1, -1);
          MEMORY[0x1DF0A0474](v39, -1, -1);

          v43 = v75;
          v44 = v77;
        }
        else
        {

          v43 = v37;
          v44 = v38;
        }
        v33(v43, v44);
      }
      v52 = *v11;
      v53 = *(_QWORD *)(*v11 + 16);
      v54 = MEMORY[0x1E0DEE9D8];
      if (v53)
      {
        v74 = v8 - 5;
        v79 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1DA498794(0, v53, 0);
        v54 = v79;
        result = sub_1DA6047A4(v52);
        v55 = result;
        v57 = v56;
        v59 = v58 & 1;
        while ((v55 & 0x8000000000000000) == 0 && v55 < 1 << *(_BYTE *)(v52 + 32))
        {
          if (((*(_QWORD *)(v52 + 56 + (((unint64_t)v55 >> 3) & 0xFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
            goto LABEL_41;
          if (*(_DWORD *)(v52 + 36) != (_DWORD)v57)
            goto LABEL_42;
          v78 = v59;
          *v74 = *(_QWORD *)(*(_QWORD *)(v52 + 48) + 8 * v55);
          v60 = sub_1DA670684();
          v62 = v61;
          v79 = v54;
          v64 = *(_QWORD *)(v54 + 16);
          v63 = *(_QWORD *)(v54 + 24);
          if (v64 >= v63 >> 1)
          {
            sub_1DA498794(v63 > 1, v64 + 1, 1);
            v54 = v79;
          }
          *(_QWORD *)(v54 + 16) = v64 + 1;
          v65 = v54 + 16 * v64;
          *(_QWORD *)(v65 + 32) = v60;
          *(_QWORD *)(v65 + 40) = v62;
          result = sub_1DA604848(v55, v57, v78 & 1, v52);
          v55 = result;
          v57 = v66;
          v59 = v67 & 1;
          if (!--v53)
          {
            sub_1DA57DB40(result, v66, v59);
            swift_bridgeObjectRelease();
            goto LABEL_39;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
      }
      else
      {
LABEL_39:
        v72[38] = v54;
        sub_1DA66BC98();
        v68 = v72[15];
        v72[39] = v68;
        v69 = (_QWORD *)swift_task_alloc();
        v72[40] = v69;
        *v69 = v72;
        v69[1] = sub_1DA6244B4;
        return sub_1DA628F4C(v54, v68);
      }
    }
  }
  else
  {
    sub_1DA66DE28();
    v45 = sub_1DA66DEDC();
    v46 = sub_1DA66FD90();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1DA478000, v45, v46, "Found episodes using local-only identifiers", v47, 2u);
      MEMORY[0x1DF0A0474](v47, -1, -1);
    }
    v48 = *(_QWORD *)(v1 + 224);
    v49 = *(_QWORD *)(v1 + 232);
    v50 = *(_QWORD *)(v1 + 216);

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v51 = *(_QWORD *)(v1 + 280);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v51);
  }
  return result;
}

uint64_t sub_1DA6244B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA624524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v1 = v0 + 136;
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 208);
    v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v7 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v9 = *(_QWORD *)(v0 + 208);
      sub_1DA484504(v6, v9, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
      v10 = *(_QWORD *)(v5 + 40);
      sub_1DA47F880(v9, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1DA5402F8(0, v8[2] + 1, 1, v8);
      v12 = v8[2];
      v11 = v8[3];
      if (v12 >= v11 >> 1)
        v8 = sub_1DA5402F8((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
      v8[2] = v12 + 1;
      v8[v12 + 4] = v10;
      v6 += v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v1 = v0 + 136;
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16) && (v13 = v8[2]) != 0)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v13; ++i)
    {
      v15 = v8[i + 4];
      sub_1DA625C68(v15);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 128) = *(_QWORD *)v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DE00);
  sub_1DA4841D4(&qword_1F026DE08, &qword_1F026DE00, MEMORY[0x1E0DEB3E0]);
  if ((sub_1DA66FCDC() & 1) != 0)
  {
    sub_1DA66DE28();
    v16 = sub_1DA66DEDC();
    v17 = sub_1DA66FDA8();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    v20 = *(_QWORD *)(v0 + 240);
    v21 = *(_QWORD *)(v0 + 216);
    if (v18)
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v31 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v24 = sub_1DA66FC64();
      v30 = v21;
      v26 = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 144) = sub_1DA49AD00(v24, v26, &v31);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v16, v17, "Failed to find requested remote episodes with identifiers: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v23, -1, -1);
      MEMORY[0x1DF0A0474](v22, -1, -1);

      v19(v20, v30);
    }
    else
    {

      v19(v20, v21);
    }
  }
  v27 = *(_QWORD *)(v0 + 328);
  v31 = *(_QWORD *)(v0 + 280);
  sub_1DA65F6A4(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = v31;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v28);
}

uint64_t sub_1DA6248E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA624900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (qword_1F02687D8 != -1)
    swift_once();
  v1 = qword_1F026DC58;
  v2 = unk_1F026DC60;
  *(_QWORD *)(v0 + 48) = unk_1F026DC60;
  swift_bridgeObjectRetain();
  sub_1DA66BC98();
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  v3 = sub_1DA66DCCC();
  swift_bridgeObjectRelease();
  if ((sub_1DA66DCD8() & 1) != 0)
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v4;
    *v4 = v0;
    v4[1] = sub_1DA624A50;
    return sub_1DA5901C8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1, v2);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v0 + 8))(v3, 0, 0);
  }
}

uint64_t sub_1DA624A50(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA624AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA624AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (qword_1F02687A0 != -1)
    swift_once();
  v1 = qword_1F026D7C8;
  v2 = unk_1F026D7D0;
  *(_QWORD *)(v0 + 48) = unk_1F026D7D0;
  swift_bridgeObjectRetain();
  sub_1DA66BC98();
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  v3 = sub_1DA66DCCC();
  swift_bridgeObjectRelease();
  if ((sub_1DA66DCD8() & 1) != 0)
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v4;
    *v4 = v0;
    v4[1] = sub_1DA624A50;
    return sub_1DA5901C8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1, v2);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v0 + 8))(v3, 0, 0);
  }
}

uint64_t sub_1DA624C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA624C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (qword_1F02687C0 != -1)
    swift_once();
  v1 = qword_1F026DBE0;
  v2 = *(_QWORD *)algn_1F026DBE8;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)algn_1F026DBE8;
  swift_bridgeObjectRetain();
  sub_1DA66BC98();
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  v3 = sub_1DA66DCCC();
  swift_bridgeObjectRelease();
  if ((sub_1DA66DCD8() & 1) != 0)
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v4;
    *v4 = v0;
    v4[1] = sub_1DA60CEE8;
    return sub_1DA5901C8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1, v2);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v0 + 8))(v3, 0, 0);
  }
}

uint64_t sub_1DA624D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;

  v5[6] = a3;
  v5[7] = a4;
  v5[4] = a1;
  v5[5] = a2;
  v7 = sub_1DA670078();
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = swift_task_alloc();
  v5[2] = a5;
  return swift_task_switch();
}

uint64_t sub_1DA624DF0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (qword_1F02687D8 != -1)
    swift_once();
  v19 = v0[10];
  v1 = (void *)v0[7];
  v17 = v0[9];
  v18 = v0[8];
  v2 = v0[6];
  v3 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);
  v0[11] = v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DA67F560;
  sub_1DA47D774(0, &qword_1EDADE720);
  *(_QWORD *)(v6 + 32) = sub_1DA66FE08();
  *(_QWORD *)(v6 + 40) = EpisodeEntity.EpisodeEntityQuery.predicate(forAdamIDs:)(v2);
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1DA66FC4C();
  v9 = objc_msgSend(v7, sel_predicateForEpisodeUuids_, v8);

  *(_QWORD *)(v6 + 48) = v9;
  sub_1DA66FAB4();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
  v10 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v10);

  objc_msgSend(v5, sel_setPredicate_, v11);
  v12 = swift_allocObject();
  v0[12] = v12;
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = v5;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0C977C0], v18);
  v13 = v1;
  v14 = v5;
  v15 = (_QWORD *)swift_task_alloc();
  v0[13] = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269628);
  *v15 = v0;
  v15[1] = sub_1DA6250B0;
  return sub_1DA67009C();
}

uint64_t sub_1DA6250B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA625144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;

  v5[6] = a3;
  v5[7] = a4;
  v5[4] = a1;
  v5[5] = a2;
  v7 = sub_1DA670078();
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = swift_task_alloc();
  v5[2] = a5;
  return swift_task_switch();
}

uint64_t sub_1DA6251B0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;

  if (qword_1F02687C0 != -1)
    swift_once();
  v1 = v0[9];
  v19 = v0[10];
  v2 = (void *)v0[7];
  v18 = v0[8];
  v3 = v0[6];
  v4 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);
  v0[11] = v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DA67F560;
  sub_1DA47D774(0, &qword_1EDADE720);
  *(_QWORD *)(v7 + 32) = sub_1DA66FE08();
  *(_QWORD *)(v7 + 40) = ShowEntity.ShowEntityQuery.predicate(forAdamIDs:)(v3);
  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_1DA66FC4C();
  v10 = objc_msgSend(v8, sel_predicateForPodcastUuids_, v9);

  *(_QWORD *)(v7 + 48) = v10;
  sub_1DA66FAB4();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
  v11 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v11);

  objc_msgSend(v6, sel_setPredicate_, v12);
  v13 = swift_allocObject();
  v0[12] = v13;
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v19, *MEMORY[0x1E0C977C0], v18);
  v14 = v2;
  v15 = v6;
  v16 = (_QWORD *)swift_task_alloc();
  v0[13] = v16;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DD20);
  *v16 = v0;
  v16[1] = sub_1DA625460;
  return sub_1DA67009C();
}

uint64_t sub_1DA625460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA6254F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA625538()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA625574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_1DA66D6E4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DA625600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_1DA66D288();
  *a1 = result;
  return result;
}

uint64_t sub_1DA62568C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  v3 = type metadata accessor for EpisodeEntity();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA47D774(0, &qword_1EDADEC00);
  v7 = a1;
  v8 = sub_1DA670090();
  if (v1)
    return v7;
  v9 = v8;
  if (!(v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_4;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_4:
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1DA50A068(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v16[1] = 0;
    v12 = 0;
    v7 = v17;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1DF09EE48](v12, v9);
      else
        v13 = *(id *)(v9 + 8 * v12 + 32);
      EpisodeEntity.init(model:)(v13, v6);
      v17 = v7;
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1DA50A068(v14 > 1, v15 + 1, 1);
        v7 = v17;
      }
      ++v12;
      *(_QWORD *)(v7 + 16) = v15 + 1;
      sub_1DA4F7228((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA625880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  v3 = type metadata accessor for ChannelEntity();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA47D774(0, &qword_1F026DBD8);
  v7 = a1;
  v8 = sub_1DA670090();
  if (v1)
    return v7;
  v9 = v8;
  if (!(v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_4;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_4:
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1DA50A0C0(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v16[1] = 0;
    v12 = 0;
    v7 = v17;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1DF09EE48](v12, v9);
      else
        v13 = *(id *)(v9 + 8 * v12 + 32);
      ChannelEntity.init(model:)(v13, v6);
      v17 = v7;
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1DA50A0C0(v14 > 1, v15 + 1, 1);
        v7 = v17;
      }
      ++v12;
      *(_QWORD *)(v7 + 16) = v15 + 1;
      sub_1DA4F7228((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA625A74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  v3 = type metadata accessor for ShowEntity();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE0080);
  v7 = a1;
  v8 = sub_1DA670090();
  if (v1)
    return v7;
  v9 = v8;
  if (!(v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_4;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_4:
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1DA50A0EC(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v16[1] = 0;
    v12 = 0;
    v7 = v17;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1DF09EE48](v12, v9);
      else
        v13 = *(id *)(v9 + 8 * v12 + 32);
      ShowEntity.init(model:)(v13, v6);
      v17 = v7;
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1DA50A0EC(v14 > 1, v15 + 1, 1);
        v7 = v17;
      }
      ++v12;
      *(_QWORD *)(v7 + 16) = v15 + 1;
      sub_1DA4F7228((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA625C68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  v5 = sub_1DA67078C();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DA5DC844();
    v11 = v14;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_1DA625EFC(v7);
  *v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1DA625D70(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1DA670798();
  swift_bridgeObjectRetain();
  sub_1DA66F94C();
  v6 = sub_1DA6707C8();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1DA6706D8() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1DA6706D8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DA5DC694();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1DA626080(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1DA625EFC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    sub_1DA66BE60();
    v8 = sub_1DA670384();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = sub_1DA67078C() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1DA626080(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    sub_1DA66BE60();
    v8 = sub_1DA670384();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1DA670798();
        swift_bridgeObjectRetain();
        sub_1DA66F94C();
        v10 = sub_1DA6707C8();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1DA626244(unint64_t a1)
{
  return sub_1DA53FE3C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1DA626258(_QWORD *a1)
{
  return sub_1DA47ECD8(0, a1[2], 0, a1);
}

uint64_t sub_1DA62626C(unint64_t a1)
{
  return sub_1DA5409E4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1DA626280(unint64_t a1)
{
  return sub_1DA5409F8(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1DA626294(unint64_t a1)
{
  return sub_1DA540A0C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1DA6262A8(unint64_t a1)
{
  return sub_1DA540A20(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1DA6262BC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = *a2;
  v4 = a2[1];
  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v7;
  *v7 = v3;
  v7[1] = sub_1DA62A0F8;
  v7[4] = v4;
  v7[5] = v6;
  v7[3] = v5;
  return swift_task_switch();
}

uint64_t sub_1DA626330(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = *a2;
  v4 = a2[1];
  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v7;
  *v7 = v3;
  v7[1] = sub_1DA62A0F8;
  v7[4] = v4;
  v7[5] = v6;
  v7[3] = v5;
  return swift_task_switch();
}

uint64_t sub_1DA6263A4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = *a2;
  v4 = a2[1];
  v6 = *a3;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v7;
  *v7 = v3;
  v7[1] = sub_1DA60D2A4;
  v7[4] = v4;
  v7[5] = v6;
  v7[3] = v5;
  return swift_task_switch();
}

_QWORD *sub_1DA626418(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a3(0) - 8);
  v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    swift_getAtKeyPath();
    if (v14)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1DA4981C8(0, v8[2] + 1, 1, v8);
      v11 = v8[2];
      v10 = v8[3];
      if (v11 >= v10 >> 1)
        v8 = sub_1DA4981C8((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
      v8[2] = v11 + 1;
      v9 = &v8[2 * v11];
      v9[4] = v13;
      v9[5] = v14;
    }
    v6 += v7;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1DA626550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1DA509EA4(0, v4, 0);
    v5 = v15;
    v8 = *(_QWORD *)(a4(0) - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    do
    {
      swift_getAtKeyPath();
      v12 = *(_QWORD *)(v15 + 16);
      v11 = *(_QWORD *)(v15 + 24);
      if (v12 >= v11 >> 1)
        sub_1DA509EA4(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v15 + 16) = v12 + 1;
      *(_QWORD *)(v15 + 8 * v12 + 32) = v14;
      v9 += v10;
      --v4;
    }
    while (v4);
  }
  return v5;
}

unint64_t sub_1DA626658()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026D720;
  if (!qword_1F026D720)
  {
    v1 = sub_1DA47D774(255, (unint64_t *)&qword_1EDADE760);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1F026D720);
  }
  return result;
}

uint64_t sub_1DA6266B0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DA6266D4(uint64_t *a1@<X8>)
{
  sub_1DA621304(a1);
}

uint64_t sub_1DA6266EC()
{
  return sub_1DA50E1D0((unint64_t *)&qword_1EDAE3AF0, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

uint64_t sub_1DA626710()
{
  return sub_1DA50E1D0(&qword_1F026DD30, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

uint64_t sub_1DA626734()
{
  return sub_1DA50E1D0(&qword_1F026DD38, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

unint64_t sub_1DA62675C()
{
  unint64_t result;

  result = qword_1F026DD88;
  if (!qword_1F026DD88)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ShowEntity.ShowEntityQuery, &type metadata for ShowEntity.ShowEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026DD88);
  }
  return result;
}

unint64_t sub_1DA6267A4()
{
  unint64_t result;

  result = qword_1F026DD90[0];
  if (!qword_1F026DD90[0])
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ShowEntity.ShowEntityQuery, &type metadata for ShowEntity.ShowEntityQuery);
    atomic_store(result, qword_1F026DD90);
  }
  return result;
}

unint64_t sub_1DA6267EC()
{
  unint64_t result;

  result = qword_1F026DDA8;
  if (!qword_1F026DDA8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ShowEntity.ShowEntityQuery, &type metadata for ShowEntity.ShowEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026DDA8);
  }
  return result;
}

uint64_t sub_1DA626830()
{
  return sub_1DA50E1D0(&qword_1EDAE3B00, (uint64_t)&protocol conformance descriptor for ShowEntity);
}

unint64_t sub_1DA626858()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F026DDB8[0];
  if (!qword_1F026DDB8[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1F026DD20);
    v2 = sub_1DA50E1D0(&qword_1EDAE3B00, (uint64_t)&protocol conformance descriptor for ShowEntity);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0C91CE0], v1, &v2);
    atomic_store(result, qword_1F026DDB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowEntity.ShowEntityQuery()
{
  return &type metadata for ShowEntity.ShowEntityQuery;
}

uint64_t sub_1DA6268E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[7] = a1;
  v2[8] = a2;
  v2[9] = *(_QWORD *)(type metadata accessor for EpisodeEntity() - 8);
  v2[10] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DEF0);
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1C0);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFD0);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1D0);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFE0);
  v2[18] = swift_task_alloc();
  v4 = sub_1DA66CA30();
  v2[19] = v4;
  v2[20] = *(_QWORD *)(v4 - 8);
  v2[21] = swift_task_alloc();
  v5 = sub_1DA66CA90();
  v2[22] = v5;
  v2[23] = *(_QWORD *)(v5 - 8);
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA626A70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[20] + 104))(v0[21], *MEMORY[0x1E0D7D820], v0[19]);
  if (qword_1F02687E0 != -1)
    swift_once();
  v1 = v0[17];
  v2 = v0[18];
  v4 = v0[15];
  v3 = v0[16];
  v5 = v0[14];
  v6 = sub_1DA66CA3C();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1F026DC68);
  v8 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v7, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v6);
  v9 = sub_1DA66CA9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  v10 = sub_1DA66CA54();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  v11 = sub_1DA66CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  v12 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
  swift_bridgeObjectRetain();
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1DA656BAC(MEMORY[0x1E0DEE9D8]);
  sub_1DA656BAC(v13);
  sub_1DA656BD0(v13);
  sub_1DA63CC0C(v13);
  sub_1DA63CC0C(v13);
  sub_1DA656D64(v13);
  sub_1DA656D88(v13);
  sub_1DA66CA84();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
  sub_1DA66EE30();
  sub_1DA66F580();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66D6CC();
  v14 = (_QWORD *)swift_task_alloc();
  v0[25] = v14;
  *v14 = v0;
  v14[1] = sub_1DA626D68;
  return sub_1DA66DBAC();
}

uint64_t sub_1DA626D68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA626DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = sub_1DA66D1C8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
  }
  swift_bridgeObjectRetain();
  v5 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_13;
LABEL_3:
  v14 = MEMORY[0x1E0DEE9D8];
  result = sub_1DA50A068(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v8 = *(_QWORD *)(v0 + 72);
    v9 = v14;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1DF09EE48](v7, v4);
      else
        v10 = *(id *)(v4 + 8 * v7 + 32);
      EpisodeEntity.init(mediaObject:)(v10, *(_QWORD **)(v0 + 80));
      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        sub_1DA50A068(v11 > 1, v12 + 1, 1);
      v13 = *(_QWORD *)(v0 + 80);
      ++v7;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      sub_1DA4F7228(v13, v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA626FEC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_1DA66DDE0();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v4 = sub_1DA66DD74();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v5 = sub_1DA66DDD4();
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA6270FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint8_t *v11;
  os_signpost_id_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  _QWORD *v20;

  v1 = v0[18];
  v2 = v0[14];
  v3 = v0[15];
  sub_1DA66DD80();
  sub_1DA66DD80();
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[20] = (uint64_t)v4;
  v4(v1, v2);
  v5 = sub_1DA66DDB0();
  v6 = sub_1DA66FF58();
  if ((sub_1DA670240() & 1) != 0)
  {
    v7 = v0[12];
    v8 = v0[8];
    v9 = v0[9];
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v10(v7, v0[13], v8);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v5, v6, v12, "LibraryAppIntentMediaAPIFetch", "", v11, 2u);
    MEMORY[0x1DF0A0474](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    v13 = v0[9];

    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  }
  v0[21] = (uint64_t)v10;
  v14 = v0[19];
  v16 = v0[13];
  v15 = v0[14];
  v17 = v0[8];
  v18 = v0[9];
  v10(v0[12], v16, v17);
  sub_1DA66DE10();
  swift_allocObject();
  v0[22] = sub_1DA66DE04();
  v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[23] = (uint64_t)v19;
  v19(v16, v17);
  v4(v14, v15);
  v20 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v20;
  *v20 = v0;
  v20[1] = sub_1DA6272C0;
  return sub_1DA6268E4(v0[2], v0[3]);
}

uint64_t sub_1DA6272C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 200) = a1;
  *(_QWORD *)(v3 + 208) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA62732C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;

  v4[5] = a2;
  v4[6] = a3;
  v4[4] = a1;
  v6 = sub_1DA670078();
  v4[7] = v6;
  v4[8] = *(_QWORD *)(v6 - 8);
  v4[9] = swift_task_alloc();
  v4[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1DA627398()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  if (qword_1F02687A0 != -1)
    swift_once();
  v1 = v0[8];
  v16 = v0[9];
  v2 = (void *)v0[6];
  v15 = v0[7];
  v3 = v0[5];
  v4 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);
  v0[10] = v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DA67F560;
  sub_1DA47D774(0, &qword_1EDADE720);
  *(_QWORD *)(v7 + 32) = sub_1DA66FE08();
  *(_QWORD *)(v7 + 40) = ChannelEntity.ChannelEntityQuery.predicate(forAdamIDs:)(v3);
  *(_QWORD *)(v7 + 48) = objc_msgSend((id)objc_opt_self(), sel_falsePredicate);
  sub_1DA66FAB4();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
  v8 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v8);

  objc_msgSend(v6, sel_setPredicate_, v9);
  v10 = swift_allocObject();
  v0[11] = v10;
  *(_QWORD *)(v10 + 16) = v2;
  *(_QWORD *)(v10 + 24) = v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v16, *MEMORY[0x1E0C977C0], v15);
  v11 = v2;
  v12 = v6;
  v13 = (_QWORD *)swift_task_alloc();
  v0[12] = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DE90);
  *v13 = v0;
  v13[1] = sub_1DA62761C;
  return sub_1DA67009C();
}

uint64_t sub_1DA62761C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA6276B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA6276F4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA627730(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[7] = a1;
  v2[8] = a2;
  v2[9] = *(_QWORD *)(type metadata accessor for ChannelEntity() - 8);
  v2[10] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DE88);
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1C0);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFD0);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1D0);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFE0);
  v2[18] = swift_task_alloc();
  v4 = sub_1DA66CA30();
  v2[19] = v4;
  v2[20] = *(_QWORD *)(v4 - 8);
  v2[21] = swift_task_alloc();
  v5 = sub_1DA66CA90();
  v2[22] = v5;
  v2[23] = *(_QWORD *)(v5 - 8);
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA6278BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[20] + 104))(v0[21], *MEMORY[0x1E0D7D820], v0[19]);
  if (qword_1F02687A8 != -1)
    swift_once();
  v1 = v0[17];
  v2 = v0[18];
  v4 = v0[15];
  v3 = v0[16];
  v5 = v0[14];
  v6 = sub_1DA66CA3C();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1F026D7D8);
  v8 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v7, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v6);
  v9 = sub_1DA66CA9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  v10 = sub_1DA66CA54();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  v11 = sub_1DA66CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  v12 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
  swift_bridgeObjectRetain();
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1DA656BAC(MEMORY[0x1E0DEE9D8]);
  sub_1DA656BAC(v13);
  sub_1DA656BD0(v13);
  sub_1DA63CC0C(v13);
  sub_1DA63CC0C(v13);
  sub_1DA656D64(v13);
  sub_1DA656D88(v13);
  sub_1DA66CA84();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
  sub_1DA66EE30();
  sub_1DA66F580();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66CD6C();
  v14 = (_QWORD *)swift_task_alloc();
  v0[25] = v14;
  *v14 = v0;
  v14[1] = sub_1DA627BB4;
  return sub_1DA66DBAC();
}

uint64_t sub_1DA627BB4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA627C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = sub_1DA66D1C8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
  }
  swift_bridgeObjectRetain();
  v5 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_13;
LABEL_3:
  v14 = MEMORY[0x1E0DEE9D8];
  result = sub_1DA50A0C0(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v8 = *(_QWORD *)(v0 + 72);
    v9 = v14;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1DF09EE48](v7, v4);
      else
        v10 = *(id *)(v4 + 8 * v7 + 32);
      ChannelEntity.init(mediaObject:)(v10, *(_QWORD **)(v0 + 80));
      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        sub_1DA50A0C0(v11 > 1, v12 + 1, 1);
      v13 = *(_QWORD *)(v0 + 80);
      ++v7;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      sub_1DA4F7228(v13, v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA627E38(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_1DA66DDE0();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v4 = sub_1DA66DD74();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v5 = sub_1DA66DDD4();
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA627F48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint8_t *v11;
  os_signpost_id_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  _QWORD *v20;

  v1 = v0[18];
  v2 = v0[14];
  v3 = v0[15];
  sub_1DA66DD80();
  sub_1DA66DD80();
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[20] = (uint64_t)v4;
  v4(v1, v2);
  v5 = sub_1DA66DDB0();
  v6 = sub_1DA66FF58();
  if ((sub_1DA670240() & 1) != 0)
  {
    v7 = v0[12];
    v8 = v0[8];
    v9 = v0[9];
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v10(v7, v0[13], v8);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v5, v6, v12, "LibraryAppIntentMediaAPIFetch", "", v11, 2u);
    MEMORY[0x1DF0A0474](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    v13 = v0[9];

    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  }
  v0[21] = (uint64_t)v10;
  v14 = v0[19];
  v16 = v0[13];
  v15 = v0[14];
  v17 = v0[8];
  v18 = v0[9];
  v10(v0[12], v16, v17);
  sub_1DA66DE10();
  swift_allocObject();
  v0[22] = sub_1DA66DE04();
  v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[23] = (uint64_t)v19;
  v19(v16, v17);
  v4(v14, v15);
  v20 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v20;
  *v20 = v0;
  v20[1] = sub_1DA6272C0;
  return sub_1DA627730(v0[2], v0[3]);
}

void sub_1DA62810C(unint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  char v24;
  unint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v27;
  void *v28;
  id v29;
  char v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v71 = a4;
  v63 = a2;
  v6 = sub_1DA66C358();
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ChannelEntity();
  v74 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v65 = (uint64_t *)((char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v62 = (uint64_t)&v58 - v11;
  MEMORY[0x1E0C80A78](v12);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x1E0C80A78](v14);
  v73 = (uint64_t)&v58 - v15;
  v16 = (uint64_t *)*a1;
  v72 = *(_QWORD *)(*a1 + 16);
  if (v72)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_63;
    while (1)
    {
      v17 = 0;
      *a1 = (unint64_t)v16;
      v18 = v71 & 0xFFFFFFFFFFFFFF8;
      if (v71 < 0)
        v18 = v71;
      v64 = v18;
      v68 = v71 & 0xC000000000000001;
      v69 = v71 + 56;
      v19 = a3 + 56;
      v66 = a3 + 56;
      v67 = a3;
      while (v17 < *(_QWORD *)(*a1 + 16))
      {
        v20 = v73;
        v21 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
        v22 = *(_QWORD *)(v74 + 72) * v17;
        sub_1DA484504(*a1 + v21 + v22, v73, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
        v16 = *(uint64_t **)(v20 + 32);
        v23 = v16;
        sub_1DA47F880(v20, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
        if (v16)
        {
          sub_1DA47D774(0, (unint64_t *)&qword_1EDAE4C00);
          if (v68)
          {
            v16 = v23;
            v24 = sub_1DA6703CC();

            if ((v24 & 1) != 0)
              goto LABEL_14;
          }
          else if (*(_QWORD *)(v71 + 16))
          {
            v16 = (uint64_t *)v71;
            v37 = sub_1DA670198();
            v38 = -1 << *((_BYTE *)v16 + 32);
            a3 = v37 & ~v38;
            if (((*(_QWORD *)(v69 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
            {
              v16 = (uint64_t *)*(id *)(*(_QWORD *)(v71 + 48) + 8 * a3);
              v39 = sub_1DA6701A4();

              if ((v39 & 1) != 0)
              {
LABEL_14:
                v25 = *a1;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *a1 = v25;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  v25 = sub_1DA626294(v25);
                  *a1 = v25;
                }
                if (v17 >= *(_QWORD *)(v25 + 16))
                  goto LABEL_59;
                v27 = (uint64_t *)(v25 + v21 + v22);
                v28 = (void *)v27[4];
                if (v28
                  && (v16 = v23,
                      v29 = v28,
                      v30 = sub_1DA6701A4(),
                      v29,
                      v16,
                      (v30 & 1) != 0))
                {
                  v31 = objc_msgSend(v16, sel_URIRepresentation);
                  v32 = v59;
                  sub_1DA66C304();

                  v33 = sub_1DA66C298();
                  v35 = v34;
                  (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v61);
                  swift_bridgeObjectRelease();
                  *v27 = v33;
                  v27[1] = v35;
                  v36 = *a1;

                  *a1 = v36;
                }
                else
                {

                  *a1 = v25;
                }
                v19 = v66;
                a3 = v67;
                goto LABEL_9;
              }
              v40 = ~v38;
              while (1)
              {
                a3 = (a3 + 1) & v40;
                if (((*(_QWORD *)(v69 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
                  break;
                v16 = (uint64_t *)*(id *)(*(_QWORD *)(v71 + 48) + 8 * a3);
                v41 = sub_1DA6701A4();

                if ((v41 & 1) != 0)
                  goto LABEL_14;
              }
            }
          }

          v19 = v66;
          a3 = v67;
        }
        if (v17 >= *(_QWORD *)(*a1 + 16))
          goto LABEL_57;
        v42 = v70;
        sub_1DA484504(*a1 + v21 + v22, v70, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
        v16 = *(uint64_t **)(v42 + 40);
        sub_1DA47F880(v42, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
        if (*(_QWORD *)(a3 + 16))
        {
          v43 = sub_1DA67078C();
          v44 = -1 << *(_BYTE *)(a3 + 32);
          v45 = v43 & ~v44;
          if (((*(_QWORD *)(v19 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) != 0)
          {
            v46 = *(_QWORD *)(a3 + 48);
            if (*(uint64_t **)(v46 + 8 * v45) == v16)
            {
LABEL_35:
              if (v17 >= *(_QWORD *)(*a1 + 16))
                goto LABEL_60;
              v48 = v62;
              sub_1DA484504(*a1 + v21 + v22, v62, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
              v49 = *(_QWORD *)(v48 + 40);
              sub_1DA47F880(v48, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
              v16 = (uint64_t *)*a1;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v16 = (uint64_t *)sub_1DA626294((unint64_t)v16);
              if (v17 >= v16[2])
                goto LABEL_61;
              v50 = (uint64_t *)((char *)v16 + v21 + v22);
              if (v50[5] == v49)
              {
                v75 = v49;
                sub_1DA4F726C();
                v51 = sub_1DA670354();
                v53 = v52;
                swift_bridgeObjectRelease();
                *v50 = v51;
                v50[1] = v53;
              }
LABEL_8:
              *a1 = (unint64_t)v16;
              goto LABEL_9;
            }
            v47 = ~v44;
            while (1)
            {
              v45 = (v45 + 1) & v47;
              if (((*(_QWORD *)(v19 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
                break;
              if (*(uint64_t **)(v46 + 8 * v45) == v16)
                goto LABEL_35;
            }
          }
        }
        if (v17 >= *(_QWORD *)(*a1 + 16))
          goto LABEL_58;
        v16 = v65;
        sub_1DA484504(*a1 + v21 + v22, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
        v55 = v16[2];
        v54 = v16[3];
        swift_bridgeObjectRetain();
        sub_1DA47F880((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
        if (v54)
        {
          if ((sub_1DA523D48(v55, v54, v63) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
          v16 = (uint64_t *)*a1;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v16 = (uint64_t *)sub_1DA626294((unint64_t)v16);
          if (v17 >= v16[2])
            goto LABEL_62;
          v56 = (uint64_t *)((char *)v16 + v21 + v22);
          v57 = v56[3];
          if (v57 && (v56[2] == v55 && v57 == v54 || (sub_1DA6706D8() & 1) != 0))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *v56 = v55;
            v56[1] = v54;
          }
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
LABEL_9:
        if (++v17 == v72)
          return;
      }
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      v16 = (uint64_t *)sub_1DA626294((unint64_t)v16);
    }
  }
}

uint64_t sub_1DA62877C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[7] = a1;
  v2[8] = a2;
  v2[9] = *(_QWORD *)(type metadata accessor for ShowEntity() - 8);
  v2[10] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DE20);
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1C0);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFD0);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1D0);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFE0);
  v2[18] = swift_task_alloc();
  v4 = sub_1DA66CA30();
  v2[19] = v4;
  v2[20] = *(_QWORD *)(v4 - 8);
  v2[21] = swift_task_alloc();
  v5 = sub_1DA66CA90();
  v2[22] = v5;
  v2[23] = *(_QWORD *)(v5 - 8);
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA628908()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[20] + 104))(v0[21], *MEMORY[0x1E0D7D820], v0[19]);
  if (qword_1F02687C8 != -1)
    swift_once();
  v1 = v0[17];
  v2 = v0[18];
  v4 = v0[15];
  v3 = v0[16];
  v5 = v0[14];
  v6 = sub_1DA66CA3C();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1F026DBF0);
  v8 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v7, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v6);
  v9 = sub_1DA66CA9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  v10 = sub_1DA66CA54();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  v11 = sub_1DA66CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  v12 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
  swift_bridgeObjectRetain();
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1DA656BAC(MEMORY[0x1E0DEE9D8]);
  sub_1DA656BAC(v13);
  sub_1DA656BD0(v13);
  sub_1DA63CC0C(v13);
  sub_1DA63CC0C(v13);
  sub_1DA656D64(v13);
  sub_1DA656D88(v13);
  sub_1DA66CA84();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
  sub_1DA66EE30();
  sub_1DA66F580();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66CD78();
  v14 = (_QWORD *)swift_task_alloc();
  v0[25] = v14;
  *v14 = v0;
  v14[1] = sub_1DA628C00;
  return sub_1DA66DBAC();
}

uint64_t sub_1DA628C00()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA628C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = sub_1DA66D1C8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
  }
  swift_bridgeObjectRetain();
  v5 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_13;
LABEL_3:
  v14 = MEMORY[0x1E0DEE9D8];
  result = sub_1DA50A0EC(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v8 = *(_QWORD *)(v0 + 72);
    v9 = v14;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1DF09EE48](v7, v4);
      else
        v10 = *(id *)(v4 + 8 * v7 + 32);
      ShowEntity.init(mediaObject:)(v10, *(_QWORD **)(v0 + 80));
      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        sub_1DA50A0EC(v11 > 1, v12 + 1, 1);
      v13 = *(_QWORD *)(v0 + 80);
      ++v7;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      sub_1DA4F7228(v13, v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA628E84()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA628F4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_1DA66DDE0();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v4 = sub_1DA66DD74();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v5 = sub_1DA66DDD4();
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62905C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint8_t *v11;
  os_signpost_id_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  _QWORD *v20;

  v1 = v0[18];
  v2 = v0[14];
  v3 = v0[15];
  sub_1DA66DD80();
  sub_1DA66DD80();
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[20] = (uint64_t)v4;
  v4(v1, v2);
  v5 = sub_1DA66DDB0();
  v6 = sub_1DA66FF58();
  if ((sub_1DA670240() & 1) != 0)
  {
    v7 = v0[12];
    v8 = v0[8];
    v9 = v0[9];
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v10(v7, v0[13], v8);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v5, v6, v12, "LibraryAppIntentMediaAPIFetch", "", v11, 2u);
    MEMORY[0x1DF0A0474](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    v13 = v0[9];

    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  }
  v0[21] = (uint64_t)v10;
  v14 = v0[19];
  v16 = v0[13];
  v15 = v0[14];
  v17 = v0[8];
  v18 = v0[9];
  v10(v0[12], v16, v17);
  sub_1DA66DE10();
  swift_allocObject();
  v0[22] = sub_1DA66DE04();
  v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[23] = (uint64_t)v19;
  v19(v16, v17);
  v4(v14, v15);
  v20 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v20;
  *v20 = v0;
  v20[1] = sub_1DA629220;
  return sub_1DA62877C(v0[2], v0[3]);
}

uint64_t sub_1DA629220(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 200) = a1;
  *(_QWORD *)(v3 + 208) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA62928C()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;

  sub_1DA66DD80();
  v1 = sub_1DA66DDB0();
  sub_1DA66DDF8();
  v2 = sub_1DA66FF4C();
  if ((sub_1DA670240() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    sub_1DA66BE60();
    sub_1DA66DE1C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32));
      v6 = "SUCCESS";
    }
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v21 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 168))(v15, v16, v17);
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    v19 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v1, v2, v19, "LibraryAppIntentMediaAPIFetch", v6, v18, 2u);
    MEMORY[0x1DF0A0474](v18, -1, -1);

    v13(v16, v17);
    v22(v21, v14);
    swift_release();
    v13(v15, v17);
  }
  else
  {
    v7 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 64);

    v7(v11, v12);
    v8(v9, v10);
    swift_release();
  }
  v23 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
}

uint64_t sub_1DA6294DC()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  NSObject *v3;
  os_signpost_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void (**v9)(_QWORD, _QWORD);
  void (**v10)(uint64_t, uint64_t);
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  void *v20;
  char *format;
  void (*v23)(uint64_t, uint64_t);
  os_signpost_type_t v24;

  v1 = (uint64_t *)(v0 + 128);
  v2 = (_QWORD *)(v0 + 80);
  sub_1DA66DD80();
  v3 = sub_1DA66DDB0();
  sub_1DA66DDF8();
  v4 = sub_1DA66FF4C();
  if ((sub_1DA670240() & 1) != 0)
  {
    v24 = v4;
    v5 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(_QWORD *)(v0 + 32);
    sub_1DA66BE60();
    sub_1DA66DE1C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v6, v7) == *MEMORY[0x1E0DF2190])
    {
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
      v8 = "FAILURE";
    }
    format = (char *)v8;
    v10 = (void (**)(uint64_t, uint64_t))(v0 + 184);
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    v13 = *(_QWORD *)(v0 + 80);
    v11 = (uint64_t *)(v0 + 64);
    v14 = *(_QWORD *)(v0 + 64);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 168))(*(_QWORD *)(v0 + 96), v13, v14);
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    v16 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v3, v24, v16, "LibraryAppIntentMediaAPIFetch", format, v15, 2u);
    MEMORY[0x1DF0A0474](v15, -1, -1);

    v23(v13, v14);
    v9 = (void (**)(_QWORD, _QWORD))(v0 + 160);
    v12 = 112;
    v2 = (_QWORD *)(v0 + 128);
    v1 = (uint64_t *)(v0 + 96);
  }
  else
  {

    v9 = (void (**)(_QWORD, _QWORD))(v0 + 184);
    v10 = (void (**)(uint64_t, uint64_t))(v0 + 160);
    v11 = (uint64_t *)(v0 + 112);
    v12 = 64;
  }
  v17 = *v1;
  v18 = *v11;
  v19 = *v10;
  v20 = *(void **)(v0 + 208);
  (*v9)(*v2, *(_QWORD *)(v0 + v12));
  v19(v17, v18);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
}

void sub_1DA62974C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, __n128), uint64_t (*a6)(uint64_t))
{
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t *v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t (*v65)(uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;

  v65 = a6;
  v77 = a4;
  v70 = a2;
  v9 = sub_1DA66C358();
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v66 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a5(0, v10);
  v80 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v72 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v69 = (uint64_t)&v65 - v15;
  MEMORY[0x1E0C80A78](v16);
  v76 = (uint64_t)&v65 - v17;
  MEMORY[0x1E0C80A78](v18);
  v79 = (uint64_t)&v65 - v19;
  v20 = *(_QWORD *)a1;
  v78 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v78)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_61;
    while (1)
    {
      v21 = 0;
      *(_QWORD *)a1 = v20;
      v73 = v77 & 0xC000000000000001;
      v74 = a3;
      v22 = v77 & 0xFFFFFFFFFFFFFF8;
      if (v77 < 0)
        v22 = v77;
      v71 = v22;
      v75 = v77 + 56;
      v81 = (uint64_t *)a1;
      v82 = a3 + 56;
      while (v21 < *(_QWORD *)(*(_QWORD *)a1 + 16))
      {
        v23 = v79;
        v24 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
        v25 = *(_QWORD *)(v80 + 72) * v21;
        sub_1DA484504(*(_QWORD *)a1 + v24 + v25, v79, (uint64_t (*)(_QWORD))a5);
        v20 = *(_QWORD *)(v23 + 16);
        v26 = (id)v20;
        sub_1DA47F880(v23, (uint64_t (*)(_QWORD))a5);
        if (v20)
        {
          v20 = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE4C00);
          if (v73)
          {
            v27 = v26;
            a1 = sub_1DA6703CC();

            if ((a1 & 1) != 0)
              goto LABEL_12;
          }
          else if (*(_QWORD *)(v77 + 16))
          {
            v41 = v77;
            v42 = sub_1DA670198();
            v43 = -1 << *(_BYTE *)(v41 + 32);
            v44 = v42 & ~v43;
            if (((*(_QWORD *)(v75 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) != 0)
            {
              a1 = (uint64_t)*(id *)(*(_QWORD *)(v77 + 48) + 8 * v44);
              v45 = sub_1DA6701A4();

              if ((v45 & 1) != 0)
              {
LABEL_12:
                v28 = v81;
                v29 = *v81;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *v28 = v29;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  v29 = v65(v29);
                  *v28 = v29;
                }
                a3 = v74;
                if (v21 >= *(_QWORD *)(v29 + 16))
                  goto LABEL_57;
                v31 = (uint64_t *)(v29 + v24 + v25);
                v32 = (void *)v31[2];
                if (v32
                  && (v33 = v26,
                      v34 = v32,
                      v20 = sub_1DA6701A4(),
                      v34,
                      v33,
                      (v20 & 1) != 0))
                {
                  v35 = objc_msgSend(v33, sel_URIRepresentation);
                  v36 = v66;
                  sub_1DA66C304();

                  v37 = sub_1DA66C298();
                  v39 = v38;
                  (*(void (**)(char *, uint64_t))(v67 + 8))(v36, v68);
                  swift_bridgeObjectRelease();
                  *v31 = v37;
                  v31[1] = v39;
                  v40 = v81;
                  v20 = *v81;

                  a1 = (uint64_t)v40;
                  *v40 = v20;
                }
                else
                {

                  a1 = (uint64_t)v81;
                  *v81 = v29;
                }
                goto LABEL_7;
              }
              v46 = ~v43;
              while (1)
              {
                v44 = (v44 + 1) & v46;
                if (((*(_QWORD *)(v75 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) == 0)
                  break;
                a1 = (uint64_t)*(id *)(*(_QWORD *)(v77 + 48) + 8 * v44);
                v47 = sub_1DA6701A4();

                if ((v47 & 1) != 0)
                  goto LABEL_12;
              }
            }
          }

          a3 = v74;
          a1 = (uint64_t)v81;
        }
        if (v21 >= *(_QWORD *)(*(_QWORD *)a1 + 16))
          goto LABEL_55;
        v48 = v76;
        sub_1DA484504(*(_QWORD *)a1 + v24 + v25, v76, (uint64_t (*)(_QWORD))a5);
        v20 = *(_QWORD *)(v48 + 40);
        sub_1DA47F880(v48, (uint64_t (*)(_QWORD))a5);
        if (!*(_QWORD *)(a3 + 16))
          goto LABEL_39;
        v49 = sub_1DA67078C();
        v50 = -1 << *(_BYTE *)(a3 + 32);
        v51 = v49 & ~v50;
        if (((*(_QWORD *)(v82 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
          goto LABEL_39;
        v52 = *(_QWORD *)(a3 + 48);
        if (*(_QWORD *)(v52 + 8 * v51) != v20)
        {
          v53 = ~v50;
          while (1)
          {
            v51 = (v51 + 1) & v53;
            if (((*(_QWORD *)(v82 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
              break;
            if (*(_QWORD *)(v52 + 8 * v51) == v20)
              goto LABEL_33;
          }
LABEL_39:
          if (v21 >= *(_QWORD *)(*(_QWORD *)a1 + 16))
            goto LABEL_56;
          v60 = v72;
          sub_1DA484504(*(_QWORD *)a1 + v24 + v25, v72, (uint64_t (*)(_QWORD))a5);
          v61 = *(_QWORD *)(v60 + 24);
          v20 = *(_QWORD *)(v60 + 32);
          swift_bridgeObjectRetain();
          sub_1DA47F880(v60, (uint64_t (*)(_QWORD))a5);
          if (v20)
          {
            if ((sub_1DA523D48(v61, v20, v70) & 1) != 0)
            {
              a1 = *(_QWORD *)a1;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                a1 = v65(a1);
              if (v21 >= *(_QWORD *)(a1 + 16))
                goto LABEL_60;
              v62 = (uint64_t *)(a1 + v24 + v25);
              v63 = v62[4];
              if (v63 && (v62[3] == v61 && v63 == v20 || (sub_1DA6706D8() & 1) != 0))
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *v62 = v61;
                v62[1] = v20;
              }
              swift_bridgeObjectRelease();
              v64 = v81;
              *v81 = a1;
              a1 = (uint64_t)v64;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          goto LABEL_7;
        }
LABEL_33:
        if (v21 >= *(_QWORD *)(*(_QWORD *)a1 + 16))
          goto LABEL_58;
        v54 = v69;
        sub_1DA484504(*(_QWORD *)a1 + v24 + v25, v69, (uint64_t (*)(_QWORD))a5);
        v55 = *(_QWORD *)(v54 + 40);
        sub_1DA47F880(v54, (uint64_t (*)(_QWORD))a5);
        v20 = *(_QWORD *)a1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = v65(v20);
        if (v21 >= *(_QWORD *)(v20 + 16))
          goto LABEL_59;
        v56 = (uint64_t *)(v20 + v24 + v25);
        if (v56[5] == v55)
        {
          v83 = v55;
          sub_1DA4F726C();
          v57 = sub_1DA670354();
          v59 = v58;
          swift_bridgeObjectRelease();
          *v56 = v57;
          v56[1] = v59;
          a1 = (uint64_t)v81;
        }
        *(_QWORD *)a1 = v20;
LABEL_7:
        if (++v21 == v78)
          return;
      }
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      v20 = v65(v20);
    }
  }
}

uint64_t sub_1DA629DE0()
{
  return 16;
}

__n128 sub_1DA629DEC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1DA629DF8()
{
  unint64_t result;

  result = qword_1F026DDF8;
  if (!qword_1F026DDF8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ShowEntity.ShowEntityQuery, &type metadata for ShowEntity.ShowEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1F026DDF8);
  }
  return result;
}

uint64_t sub_1DA629E40()
{
  return 16;
}

__n128 sub_1DA629E4C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1DA629E58()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA629E84@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA62A050((uint64_t (*)(_QWORD, _QWORD))sub_1DA625A74, a1);
}

uint64_t sub_1DA629EA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1DA60DE24;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t *))((char *)&dword_1F026DE28 + dword_1F026DE28))(a1, a2, (uint64_t *)(v3 + 16));
}

unint64_t sub_1DA629F18()
{
  unint64_t result;

  result = qword_1F026DE70;
  if (!qword_1F026DE70)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ChannelEntity.ChannelEntityQuery, &type metadata for ChannelEntity.ChannelEntityQuery);
    atomic_store(result, &qword_1F026DE70);
  }
  return result;
}

uint64_t sub_1DA629F5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA62A050((uint64_t (*)(_QWORD, _QWORD))sub_1DA625880, a1);
}

uint64_t sub_1DA629F78(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1DA62A104;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t *))((char *)&dword_1F026DEA0 + dword_1F026DEA0))(a1, a2, (uint64_t *)(v3 + 16));
}

unint64_t sub_1DA629FF0()
{
  unint64_t result;

  result = qword_1F026DED8;
  if (!qword_1F026DED8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for EpisodeEntity.EpisodeEntityQuery, &type metadata for EpisodeEntity.EpisodeEntityQuery);
    atomic_store(result, &qword_1F026DED8);
  }
  return result;
}

uint64_t sub_1DA62A034@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA62A050((uint64_t (*)(_QWORD, _QWORD))sub_1DA62568C, a1);
}

uint64_t sub_1DA62A050@<X0>(uint64_t (*a1)(_QWORD, _QWORD)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = a1(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1DA62A080(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1DA62A104;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t *))((char *)&dword_1F026DEF8 + dword_1F026DEF8))(a1, a2, (uint64_t *)(v3 + 16));
}

id sub_1DA62A12C()
{
  id v0;
  id v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66BC98();
  sub_1DA66EE30();
  sub_1DA66F580();
  swift_release();
  v0 = objc_msgSend(v2, sel_privateQueueContext);
  swift_unknownObjectRelease();
  return v0;
}

id LocalLibraryEntityQuery.managedObjectContext.getter(uint64_t a1, uint64_t a2)
{
  id v4;
  id v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  sub_1DA66EE30();
  sub_1DA66F580();
  swift_release();
  v4 = objc_msgSend(v6, sel_privateQueueContext);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t LocalLibraryEntityQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v8;

  v4[4] = a3;
  v4[5] = v3;
  v4[3] = a2;
  v8 = (_QWORD *)swift_task_alloc();
  v4[6] = v8;
  *v8 = v4;
  v8[1] = sub_1DA62A2D4;
  return sub_1DA62A4C4(a1, a2, a3);
}

uint64_t sub_1DA62A2D4(uint64_t a1, uint64_t a2)
{
  uint64_t **v2;
  uint64_t *v5;
  uint64_t *v6;
  _QWORD *v7;

  v5 = *v2;
  v6 = *v2;
  v5[7] = a1;
  v5[8] = a2;
  swift_task_dealloc();
  v7 = (_QWORD *)swift_task_alloc();
  v5[9] = (uint64_t)v7;
  *v7 = v6;
  v7[1] = sub_1DA62A358;
  return sub_1DA62A7C8(a1, a2, v5[3], v5[4]);
}

uint64_t sub_1DA62A358(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA62A3D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  sub_1DA66FBEC();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v0 + 32);
    v6 = sub_1DA640AD4(*(_QWORD *)(v0 + 56));
    swift_bridgeObjectRelease();
    sub_1DA62C2E4((uint64_t *)(v0 + 16), v3, v6, v5, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_1DA62A4B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62A4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = *(_QWORD *)(a2 - 8);
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 + 64);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62A520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 24);
  v9 = *(_OWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 80) = v6;
  *(_OWORD *)(v6 + 16) = v9;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + v5, v1, v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA4841D4(&qword_1F026DE40, &qword_1EDAE5340, MEMORY[0x1E0DEAF50]);
  *v7 = v0;
  v7[1] = sub_1DA62A640;
  return sub_1DA66FCF4();
}

uint64_t sub_1DA62A640(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA62A6A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (id *)(v1 + 48);
    do
    {
      if (*(_BYTE *)v4 == 2)
      {
        v5 = *(v4 - 2);
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
      v4 += 3;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v2 = v9;
    v1 = *(_QWORD *)(v0 + 96);
  }
  v6 = sub_1DA60B488(v1);
  swift_bridgeObjectRelease();
  v7 = sub_1DA5B95EC((uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v7);
}

uint64_t sub_1DA62A7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v6 = sub_1DA66DEF4();
  v5[14] = v6;
  v5[15] = *(_QWORD *)(v6 - 8);
  v5[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62A830()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[12];
  v2 = v0[11];
  v0[5] = v0[10];
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 40);
  swift_bridgeObjectRetain_n();
  v4 = v3(v2, v1);
  v0[17] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v0[18] = v5;
  *v5 = v0;
  v5[1] = sub_1DA62A8BC;
  return sub_1DA62AF84(v0[9], v0[10], v4, v0[11], v0[12]);
}

uint64_t sub_1DA62A8BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA62A93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t KeyPath;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 152);
  v3 = (_QWORD *)swift_task_alloc();
  *v3 = v2;
  v3[1] = v1;
  KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  v5 = (_QWORD *)swift_task_alloc();
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = KeyPath;
  swift_getAssociatedTypeWitness();
  v6 = sub_1DA66FB20();
  MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF38], v6);
  v7 = sub_1DA66FA3C();
  swift_release();
  swift_task_dealloc();
  v8 = *(_QWORD *)(v0 + 40);
  if (*(_QWORD *)(v8 + 16) && (v9 = *(_QWORD *)(v7 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    v10 = (uint64_t *)(v7 + 40);
    do
    {
      v11 = *(v10 - 1);
      v12 = *v10;
      swift_bridgeObjectRetain();
      sub_1DA625D70(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 += 2;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease_n();
    v8 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 56) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0000);
  sub_1DA4841D4((unint64_t *)&unk_1F026DA48, &qword_1EDAE0000, MEMORY[0x1E0DEB3E0]);
  if ((sub_1DA66FCDC() & 1) != 0)
  {
    sub_1DA66DE28();
    v13 = sub_1DA66DEDC();
    v14 = sub_1DA66FDA8();
    v15 = os_log_type_enabled(v13, v14);
    v17 = *(_QWORD *)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 112);
    if (v15)
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v26 = v20;
      *(_DWORD *)v19 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v21 = sub_1DA66FC64();
      v25 = v18;
      v23 = v22;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 64) = sub_1DA49AD00(v21, v23, &v26);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v13, v14, "Failed to find requested local episodes with identifiers: %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v20, -1, -1);
      MEMORY[0x1DF0A0474](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v25);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 152));
}

uint64_t sub_1DA62ACB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62AD00(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a3;
  v6 = a2[1];
  v5[6] = *a2;
  v5[7] = v6;
  return swift_task_switch();
}

uint64_t sub_1DA62AD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v3 = sub_1DA66D6D8();
  v5 = v4;
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v0 + 72) = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(v2, v1);
  swift_bridgeObjectRetain();
  v6 = sub_1DA66DCCC();
  swift_bridgeObjectRelease();
  if ((sub_1DA66DCD8() & 1) != 0)
  {
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v7;
    *v7 = v0;
    v7[1] = sub_1DA62AEAC;
    return sub_1DA5901C8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v3, v5);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)v9 = v6;
    *(_QWORD *)(v9 + 8) = 0;
    *(_BYTE *)(v9 + 16) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DA62AEAC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA62AF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 88);
  if (v1)
  {
    v2 = 0;
    v3 = 2;
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 48);
    v2 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    v3 = 1;
  }
  v4 = *(_QWORD *)(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = v2;
  *(_BYTE *)(v4 + 16) = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62AF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v7 = sub_1DA670078();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62AFEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD *v8;
  id v9;
  id v10;
  _QWORD *v11;
  void *v13;
  uint64_t v14;

  v14 = v0[11];
  v1 = v0[7];
  v2 = v0[6];
  v13 = (void *)v0[5];
  v3 = v0[4];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DF50);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DA66D6D8();
  swift_getAssociatedTypeWitness();
  v4 = sub_1DA62CAB0();
  v0[12] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA67ABA0;
  sub_1DA47D774(0, &qword_1EDADE720);
  *(_QWORD *)(v5 + 32) = sub_1DA66FE08();
  *(_QWORD *)(v5 + 40) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, v2, v1);
  sub_1DA66FAB4();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
  v6 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v6);

  objc_msgSend(v4, sel_setPredicate_, v7);
  v8 = (_QWORD *)swift_allocObject();
  v0[13] = v8;
  v8[2] = v2;
  v8[3] = v1;
  v8[4] = v13;
  v8[5] = v4;
  sub_1DA66FB20();
  sub_1DA62C77C(v14);
  v9 = v13;
  v10 = v4;
  v11 = (_QWORD *)swift_task_alloc();
  v0[14] = v11;
  *v11 = v0;
  v11[1] = sub_1DA62B278;
  return sub_1DA67009C();
}

uint64_t sub_1DA62B278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA62B30C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA62B350()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62B38C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[8];

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  result = sub_1DA670090();
  if (!v3)
  {
    v14[7] = result;
    v8 = swift_checkMetadataState();
    MEMORY[0x1E0C80A78](v8);
    v14[2] = a1;
    v14[3] = a2;
    v14[4] = v9;
    v10 = sub_1DA66FB20();
    v11 = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF50], v10);
    v13 = sub_1DA62C7C0((void (*)(char *, char *))sub_1DA62C62C, (uint64_t)v14, v10, v8, MEMORY[0x1E0DEDCE8], v11, MEMORY[0x1E0DEDD18], v12);
    result = swift_bridgeObjectRelease();
    *a3 = v13;
  }
  return result;
}

uint64_t sub_1DA62B50C(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2 = v1;
  return sub_1DA66D6F0();
}

uint64_t LocalLibraryEntityQuery.fetchEntities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_1DA66FB98();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62B618()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[10] = (*(uint64_t (**)(_QWORD))(v0[5] + 32))(v0[4]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v1 = (_QWORD *)swift_task_alloc();
  v0[11] = v1;
  *v1 = v0;
  v1[1] = sub_1DA62B6A4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA62B6A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA62B710()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[13] = v0[2];
  swift_getObjectType();
  sub_1DA4EE300();
  v1 = (_QWORD *)swift_task_alloc();
  v0[14] = v1;
  *v1 = v0;
  v1[1] = sub_1DA62B790;
  return sub_1DA6700C0();
}

uint64_t sub_1DA62B790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DA62B814()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = sub_1DA66FACC();
  v3 = v2;
  v0[16] = v1;
  v0[17] = v2;
  v0[18] = v4;
  swift_bridgeObjectRetain();
  v5 = sub_1DA5B95EC(v3);
  v0[19] = v5;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)swift_task_alloc();
  v0[20] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = sub_1DA62B8AC;
  return sub_1DA62AF84(v1, v5, v0[15], v0[4], v0[5]);
}

uint64_t sub_1DA62B8AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 176) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA62B94C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 176));
}

uint64_t sub_1DA62B990()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62B9CC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LocalLibraryEntityQuery.artworkData(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v5 = sub_1DA66DEF4();
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v6 = sub_1DA66CEBC();
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  v4[19] = swift_task_alloc();
  v7 = sub_1DA66CA0C();
  v4[20] = v7;
  v4[21] = *(_QWORD *)(v7 - 8);
  v4[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62BB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  sub_1DA51C134(*(_QWORD *)(v0 + 64), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DA51C17C(*(_QWORD *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 72);
    sub_1DA51C1BC(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 176));
    *(_QWORD *)(v0 + 184) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v6, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v7;
    *v7 = v0;
    v7[1] = sub_1DA62BC4C;
    return sub_1DA66EDD0();
  }
}

uint64_t sub_1DA62BC4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA62BCB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  ArtworkModel.preferredRequest.getter(v0[18]);
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = (_QWORD *)swift_task_alloc();
  v0[26] = v3;
  *v3 = v0;
  v3[1] = sub_1DA62BD40;
  return ImageProvider.data(for:)(v0[18], v1, v2);
}

uint64_t sub_1DA62BD40(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 216) = a2;
    *(_QWORD *)(v6 + 224) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA62BDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 176);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
  sub_1DA4E8990(v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
}

uint64_t sub_1DA62BE60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  _QWORD *v7;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  sub_1DA66CDC0();
  v4 = v3;
  v6 = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[29] = v7;
  *v7 = v0;
  v7[1] = sub_1DA62BEF0;
  return ImageProvider.placeholderData(with:)(v1, v2, v4, v6);
}

uint64_t sub_1DA62BEF0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 240) = a2;
    *(_QWORD *)(v6 + 248) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA62BF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 176);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
  sub_1DA4E8990(v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
}

uint64_t sub_1DA62C010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  sub_1DA66DE28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  v5 = sub_1DA66DEDC();
  v6 = sub_1DA66FDA8();
  if (os_log_type_enabled(v5, v6))
  {
    v8 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 120);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
    *(_QWORD *)(v0 + 56) = v11;
    sub_1DA6702C4();
    *v10 = v11;
    v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v12(v7, v20);
    _os_log_impl(&dword_1DA478000, v5, v6, "Episode entity was unable to prepare artwork or placeholder for %@.", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v10, -1, -1);
    MEMORY[0x1DF0A0474](v9, -1, -1);

  }
  else
  {
    v14 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 120);

    v12 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v12(v13, v15);
  }
  v16 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  v12(v17, v18);
  sub_1DA4E8990(v16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
}

uint64_t sub_1DA62C218()
{
  uint64_t v0;

  sub_1DA4E8990(*(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62C294(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

void sub_1DA62C2E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[2];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;

  v21 = a3;
  v20[0] = a2;
  v23 = a4;
  v24 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v22 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - v9;
  v26 = *a1;
  v11 = sub_1DA66FB20();
  MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF48], v11);
  v20[1] = v11;
  sub_1DA66FCC4();
  v12 = v27;
  v13 = v28;
  if (v27 != v28)
  {
    if (v28 < v27)
    {
      __break(1u);
      return;
    }
    if (v27 < v28)
      goto LABEL_8;
    __break(1u);
LABEL_6:
    swift_bridgeObjectRelease();
    while (1)
    {
      while (1)
      {
        if (v13 == ++v12)
          return;
LABEL_8:
        sub_1DA66FB2C();
        swift_getAssociatedConformanceWitness();
        v14 = (void *)sub_1DA66D714();
        v15 = *(void (**)(char *, uint64_t))(v25 + 8);
        v15(v10, AssociatedTypeWitness);
        if (v14)
          break;
LABEL_12:
        v16 = v22;
        sub_1DA66FB2C();
        v17 = sub_1DA66D6E4();
        v19 = v18;
        v15(v16, AssociatedTypeWitness);
        if (v19)
        {
          if ((sub_1DA523D48(v17, v19, v20[0]) & 1) != 0)
          {
            sub_1DA66FAF0();
            sub_1DA62C294(v12, *a1);
            _swift_isClassOrObjCExistentialType();
            sub_1DA66D6FC();
          }
          goto LABEL_6;
        }
      }
      if ((sub_1DA523F68(v14, v21) & 1) == 0)
      {

        goto LABEL_12;
      }
      sub_1DA66FAF0();
      sub_1DA62C294(v12, *a1);
      _swift_isClassOrObjCExistentialType();
      sub_1DA66D708();

    }
  }
}

uint64_t dispatch thunk of LocalLibraryEntityQuery.objectGraph.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of LocalLibraryEntityQuery.managedObjectContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of LocalLibraryEntityQuery.predicate(forUuids:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1DA62C5E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA62C610@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1DA62B38C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1DA62C62C(void **a1)
{
  return sub_1DA62B50C(a1);
}

uint64_t sub_1DA62C650()
{
  return 16;
}

__n128 sub_1DA62C65C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1DA62C668()
{
  return swift_getAtKeyPath();
}

uint64_t sub_1DA62C690()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1DA62C6E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v2 + 16);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 80);
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_1DA4AD77C;
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v2 + ((v8 + 32) & ~v8);
  v9 = a2[1];
  *(_QWORD *)(v6 + 48) = *a2;
  *(_QWORD *)(v6 + 56) = v9;
  return swift_task_switch();
}

uint64_t sub_1DA62C77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0C977C0];
  v3 = sub_1DA670078();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1DA62C7C0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v29 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_1DA66FD00();
  if (!v20)
    return sub_1DA66FAFC();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_1DA670510();
  v34 = sub_1DA67051C();
  sub_1DA6704D4();
  v37 = v8;
  result = sub_1DA66FCD0();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_1DA66FD24();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v13);
      v24(v43, 0);
      v28 = v42;
      v38(v13, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
      sub_1DA670504();
      result = sub_1DA66FD18();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1DA62CAB0()
{
  id v0;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1DA62F270();
}

id LibraryEntityQuery.managedObjectContext.getter(uint64_t a1, uint64_t a2)
{
  id v4;
  id v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  sub_1DA66EE30();
  sub_1DA66F580();
  swift_release();
  v4 = objc_msgSend(v6, sel_privateQueueContext);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t LibraryEntityQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v8;

  v4[4] = a3;
  v4[5] = v3;
  v4[3] = a2;
  v8 = (_QWORD *)swift_task_alloc();
  v4[6] = v8;
  *v8 = v4;
  v8[1] = sub_1DA62CC14;
  return sub_1DA62CE10(a1, a2, a3);
}

uint64_t sub_1DA62CC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v7 = (_QWORD *)*v3;
  v8 = (_QWORD *)*v3;
  v7[7] = a1;
  v7[8] = a2;
  v7[9] = a3;
  swift_task_dealloc();
  v9 = (_QWORD *)swift_task_alloc();
  v7[10] = v9;
  *v9 = v8;
  v9[1] = sub_1DA62CCD4;
  v10 = v7[4];
  v11 = v7[3];
  v12 = (_QWORD *)swift_task_alloc();
  v9[2] = v12;
  *v12 = v9;
  v12[1] = sub_1DA62D1D4;
  return sub_1DA62D2B0(a1, a2, a3, v11, v10);
}

uint64_t sub_1DA62CCD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v4 + 96) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA62CD64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 96);
  v6 = sub_1DA640AD4(v3);
  swift_bridgeObjectRelease();
  sub_1DA630258((uint64_t *)(v0 + 16), v1, v2, v6, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1DA62CE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = *(_QWORD *)(a2 - 8);
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 + 64);
  v4[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62CE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 32);
  v9 = *(_OWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 88) = v6;
  *(_OWORD *)(v6 + 16) = v9;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + v5, v1, v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA4841D4(&qword_1F026DE40, &qword_1EDAE5340, MEMORY[0x1E0DEAF50]);
  *v7 = v0;
  v7[1] = sub_1DA62CF8C;
  return sub_1DA66FCF4();
}

uint64_t sub_1DA62CF8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA62CFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (id *)(v1 + 48);
    do
    {
      if (*(_BYTE *)v4 == 2)
      {
        v5 = *(v4 - 2);
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
      v4 += 3;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v2 = v12;
    v1 = *(_QWORD *)(v0 + 104);
  }
  v6 = sub_1DA60B488(v1);
  v7 = sub_1DA5B95EC((uint64_t)v6);
  swift_bridgeObjectRelease();
  v8 = sub_1DA620248(v1);
  swift_bridgeObjectRelease();
  v9 = sub_1DA620338((uint64_t)v8);
  swift_bridgeObjectRelease();
  v10 = sub_1DA640A64(v9);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v2, v7, v10);
}

uint64_t LibraryEntityQuery.findAndPrepareEntities(for:adamIDs:uuids:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1DA62D1D4;
  return sub_1DA62D2B0(a1, a3, a2, a4, a5);
}

uint64_t sub_1DA62D1D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = v1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1DA62D248()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1DA66FBEC();
  if (!v1)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62D2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[24] = a5;
  v6[25] = v5;
  v6[22] = a3;
  v6[23] = a4;
  v6[20] = a1;
  v6[21] = a2;
  v7 = sub_1DA66DEF4();
  v6[26] = v7;
  v6[27] = *(_QWORD *)(v7 - 8);
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62D340()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[24];
  v3 = v0[22];
  v2 = v0[23];
  v0[18] = v0[21];
  v0[16] = v3;
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v5 = v4(v2, v1);
  v0[32] = v5;
  v6 = (_QWORD *)swift_task_alloc();
  v0[33] = v6;
  *v6 = v0;
  v6[1] = sub_1DA62D3E8;
  return sub_1DA62E2A4(v0[20], v0[21], v0[22], v5, v0[23], v0[24]);
}

uint64_t sub_1DA62D3E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 272) = a1;
  *(_QWORD *)(v3 + 280) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA62D470()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t KeyPath;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  uint64_t v25;
  uint64_t result;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  _QWORD *v69;
  os_log_type_t type;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  char v76;
  uint64_t v77;

  v1 = v0[35];
  v2 = v0[23];
  v3 = v0[24];
  v0[8] = v0[34];
  v4 = (_QWORD *)swift_task_alloc();
  *v4 = v2;
  v4[1] = v3;
  KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  v6 = (_QWORD *)swift_task_alloc();
  v6[2] = v2;
  v6[3] = v3;
  v6[4] = KeyPath;
  v0[36] = swift_getAssociatedTypeWitness();
  v7 = sub_1DA66FB20();
  v0[37] = v7;
  v0[38] = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF38], v7);
  v8 = sub_1DA66FA3C();
  swift_release();
  swift_task_dealloc();
  v71 = v0;
  v9 = v0 + 18;
  v75 = v0 + 10;
  v10 = v0 + 16;
  if (*(_QWORD *)(v0[18] + 16) && (v11 = *(_QWORD *)(v8 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    v12 = (uint64_t *)(v8 + 40);
    do
    {
      v13 = *(v12 - 1);
      v14 = *v12;
      swift_bridgeObjectRetain();
      sub_1DA625D70(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v16 = v71[23];
  v15 = v71[24];
  v71[9] = v71[34];
  v17 = (_QWORD *)swift_task_alloc();
  *v17 = v16;
  v17[1] = v15;
  v18 = swift_getKeyPath();
  swift_task_dealloc();
  v19 = (_QWORD *)swift_task_alloc();
  v19[2] = v16;
  v19[3] = v15;
  v19[4] = v18;
  v20 = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF50], v7);
  v22 = sub_1DA62C7C0((void (*)(char *, char *))sub_1DA62C668, (uint64_t)v19, v7, MEMORY[0x1E0DEE190], MEMORY[0x1E0DEDCE8], v20, MEMORY[0x1E0DEDD18], v21);
  swift_release();
  swift_task_dealloc();
  if (*(_QWORD *)(v71[16] + 16) && (v23 = *(_QWORD *)(v22 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v23; ++i)
    {
      v25 = *(_QWORD *)(v22 + 8 * i + 32);
      sub_1DA625C68(v25);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *v75 = *v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0000);
  sub_1DA4841D4((unint64_t *)&unk_1F026DA48, &qword_1EDAE0000, MEMORY[0x1E0DEB3E0]);
  if ((sub_1DA66FCDC() & 1) != 0
    || (*(v9 - 7) = *v10,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DE00),
        sub_1DA4841D4(&qword_1F026DE08, &qword_1F026DE00, MEMORY[0x1E0DEB3E0]),
        (sub_1DA66FCDC() & 1) != 0))
  {
    sub_1DA66FBEC();
    v71[39] = v1;
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return ((uint64_t (*)(void))v71[1])();
    }
    else
    {
      sub_1DA66DE28();
      v27 = sub_1DA66DEDC();
      v28 = sub_1DA66FD90();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_1DA478000, v27, v28, "Some entities are lingering, checking remote source for episode content.", v29, 2u);
        MEMORY[0x1DF0A0474](v29, -1, -1);
      }
      v30 = v71[31];
      v31 = v71[26];
      v32 = v71[27];

      v33 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v71[40] = v33;
      v33(v30, v31);
      v71[12] = v71[18];
      if ((sub_1DA66FCDC() & 1) != 0)
      {
        sub_1DA66DE28();
        v34 = sub_1DA66DEDC();
        v35 = sub_1DA66FDA8();
        v36 = os_log_type_enabled(v34, v35);
        v37 = v71[30];
        v38 = v71[26];
        if (v36)
        {
          v74 = v71[26];
          v39 = (uint8_t *)swift_slowAlloc();
          v72 = swift_slowAlloc();
          v77 = v72;
          *(_DWORD *)v39 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          type = v35;
          v40 = sub_1DA66FC64();
          v42 = v41;
          swift_bridgeObjectRelease();
          v71[19] = sub_1DA49AD00(v40, v42, &v77);
          sub_1DA6702C4();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DA478000, v34, type, "Failed to find requested local episodes with identifiers: %s", v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1DF0A0474](v72, -1, -1);
          MEMORY[0x1DF0A0474](v39, -1, -1);

          v44 = v74;
          v43 = v37;
        }
        else
        {

          v43 = v37;
          v44 = v38;
        }
        v33(v43, v44);
      }
      v52 = *v10;
      v53 = *(_QWORD *)(*v10 + 16);
      v54 = MEMORY[0x1E0DEE9D8];
      if (v53)
      {
        v73 = v9 - 5;
        v77 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1DA498794(0, v53, 0);
        v54 = v77;
        result = sub_1DA6047A4(v52);
        v55 = result;
        v57 = v56;
        v59 = v58 & 1;
        while ((v55 & 0x8000000000000000) == 0 && v55 < 1 << *(_BYTE *)(v52 + 32))
        {
          if (((*(_QWORD *)(v52 + 56 + (((unint64_t)v55 >> 3) & 0xFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
            goto LABEL_39;
          if (*(_DWORD *)(v52 + 36) != (_DWORD)v57)
            goto LABEL_40;
          v76 = v59;
          *v73 = *(_QWORD *)(*(_QWORD *)(v52 + 48) + 8 * v55);
          v60 = sub_1DA670684();
          v62 = v61;
          v77 = v54;
          v64 = *(_QWORD *)(v54 + 16);
          v63 = *(_QWORD *)(v54 + 24);
          if (v64 >= v63 >> 1)
          {
            sub_1DA498794(v63 > 1, v64 + 1, 1);
            v54 = v77;
          }
          *(_QWORD *)(v54 + 16) = v64 + 1;
          v65 = v54 + 16 * v64;
          *(_QWORD *)(v65 + 32) = v60;
          *(_QWORD *)(v65 + 40) = v62;
          result = sub_1DA604848(v55, v57, v76 & 1, v52);
          v55 = result;
          v57 = v66;
          v59 = v67 & 1;
          if (!--v53)
          {
            sub_1DA57DB40(result, v66, v59);
            swift_bridgeObjectRelease();
            goto LABEL_37;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
      }
      else
      {
LABEL_37:
        v71[41] = v54;
        v68 = (*(uint64_t (**)(_QWORD))(v71[24] + 40))(v71[23]);
        v71[42] = v68;
        v69 = (_QWORD *)swift_task_alloc();
        v71[43] = v69;
        *v69 = v71;
        v69[1] = sub_1DA62DCE0;
        return sub_1DA62FA20(v54, v68, v71[23], v71[24]);
      }
    }
  }
  else
  {
    sub_1DA66DE28();
    v45 = sub_1DA66DEDC();
    v46 = sub_1DA66FD90();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1DA478000, v45, v46, "Found episodes using local-only identifiers", v47, 2u);
      MEMORY[0x1DF0A0474](v47, -1, -1);
    }
    v48 = v71[27];
    v49 = v71[28];
    v50 = v71[26];

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v51 = v71[34];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(uint64_t))v71[1])(v51);
  }
  return result;
}

uint64_t sub_1DA62DCE0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA62DD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 352);
  *(_OWORD *)(swift_task_alloc() + 16) = *(_OWORD *)(v0 + 184);
  v1 = sub_1DA66FA3C();
  swift_task_dealloc();
  v2 = *(_QWORD *)(v0 + 128);
  if (*(_QWORD *)(v2 + 16) && (v3 = *(_QWORD *)(v1 + 16)) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      v5 = *(_QWORD *)(v1 + 8 * i + 32);
      sub_1DA625C68(v5);
    }
    swift_bridgeObjectRelease();
    v2 = *(_QWORD *)(v0 + 128);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 120) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DE00);
  sub_1DA4841D4(&qword_1F026DE08, &qword_1F026DE00, MEMORY[0x1E0DEB3E0]);
  if ((sub_1DA66FCDC() & 1) != 0)
  {
    sub_1DA66DE28();
    v6 = sub_1DA66DEDC();
    v7 = sub_1DA66FDA8();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
    v10 = *(_QWORD *)(v0 + 232);
    v11 = *(_QWORD *)(v0 + 208);
    if (v8)
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v20 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v14 = sub_1DA66FC64();
      v19 = v10;
      v16 = v15;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 136) = sub_1DA49AD00(v14, v16, &v20);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v6, v7, "Failed to find requested remote episodes with identifiers: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v13, -1, -1);
      MEMORY[0x1DF0A0474](v12, -1, -1);

      v9(v19, v11);
    }
    else
    {

      v9(v10, v11);
    }
  }
  v17 = sub_1DA66FAE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v17);
}

uint64_t sub_1DA62E06C()
{
  uint64_t v0;

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62E0F8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a3;
  v6 = a2[1];
  v5[6] = *a2;
  v5[7] = v6;
  return swift_task_switch();
}

uint64_t sub_1DA62E11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v3 = sub_1DA66D6D8();
  v5 = v4;
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v0 + 72) = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(v2, v1);
  swift_bridgeObjectRetain();
  v6 = sub_1DA66DCCC();
  swift_bridgeObjectRelease();
  if ((sub_1DA66DCD8() & 1) != 0)
  {
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v7;
    *v7 = v0;
    v7[1] = sub_1DA62AEAC;
    return sub_1DA5901C8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v3, v5);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)v9 = v6;
    *(_QWORD *)(v9 + 8) = 0;
    *(_BYTE *)(v9 + 16) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DA62E2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v7[8] = a6;
  v7[9] = v6;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  v8 = sub_1DA670078();
  v7[10] = v8;
  v7[11] = *(_QWORD *)(v8 - 8);
  v7[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62E310()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  v18 = v0[12];
  v1 = v0[8];
  v2 = v0[7];
  v15 = v0[5];
  v16 = v0[4];
  v17 = (void *)v0[6];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DF50);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DA66D6D8();
  swift_getAssociatedTypeWitness();
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = sub_1DA62F270();
  v0[13] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA67F560;
  sub_1DA47D774(0, &qword_1EDADE720);
  *(_QWORD *)(v5 + 32) = sub_1DA66FE08();
  *(_QWORD *)(v5 + 40) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 56))(v15, v2, v1);
  *(_QWORD *)(v5 + 48) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 64))(v16, v2, v1);
  sub_1DA66FAB4();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
  v6 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v6);

  objc_msgSend(v4, sel_setPredicate_, v7);
  v8 = (_QWORD *)swift_allocObject();
  v0[14] = v8;
  v8[2] = v2;
  v8[3] = v1;
  v8[4] = v17;
  v8[5] = v4;
  sub_1DA66FB20();
  v9 = *MEMORY[0x1E0C977C0];
  v10 = sub_1DA670078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v18, v9, v10);
  v11 = v17;
  v12 = v4;
  v13 = (_QWORD *)swift_task_alloc();
  v0[15] = v13;
  *v13 = v0;
  v13[1] = sub_1DA62E5F4;
  return sub_1DA67009C();
}

uint64_t sub_1DA62E5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA62E688()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA62E6CC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62E708@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_1DA66D288();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_1DA62E7AC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[8];

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  result = sub_1DA670090();
  if (!v3)
  {
    v14[7] = result;
    v8 = swift_checkMetadataState();
    MEMORY[0x1E0C80A78](v8);
    v14[2] = a1;
    v14[3] = a2;
    v14[4] = v9;
    v10 = sub_1DA66FB20();
    v11 = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF50], v10);
    v13 = sub_1DA62C7C0((void (*)(char *, char *))sub_1DA630720, (uint64_t)v14, v10, v8, MEMORY[0x1E0DEDCE8], v11, MEMORY[0x1E0DEDD18], v12);
    result = swift_bridgeObjectRelease();
    *a3 = v13;
  }
  return result;
}

uint64_t sub_1DA62E92C(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2 = v1;
  return sub_1DA66D6F0();
}

uint64_t sub_1DA62E9D4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_unknownObjectRetain();
  return sub_1DA66D270();
}

uint64_t LibraryEntityQuery.fetchEntities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = sub_1DA66FB98();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62EAE4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[11] = (*(uint64_t (**)(_QWORD))(v0[6] + 40))(v0[5]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = v1;
  *v1 = v0;
  v1[1] = sub_1DA62EB70;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA62EB70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA62EBDC()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[14] = v0[2];
  swift_getObjectType();
  sub_1DA4EE300();
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  *v1 = v0;
  v1[1] = sub_1DA62EC5C;
  return sub_1DA6700C0();
}

uint64_t sub_1DA62EC5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DA62ECE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = sub_1DA66FACC();
  v3 = v2;
  v5 = v4;
  v0[17] = v1;
  v0[18] = v2;
  v0[19] = v4;
  swift_bridgeObjectRetain();
  v6 = sub_1DA5B95EC(v3);
  v0[20] = v6;
  swift_bridgeObjectRelease();
  v7 = sub_1DA620338(v5);
  v8 = sub_1DA640A64(v7);
  v0[21] = v8;
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)swift_task_alloc();
  v0[22] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_1DA62EDBC;
  return sub_1DA62E2A4(v1, v6, v8, v0[16], v0[5], v0[6]);
}

uint64_t sub_1DA62EDBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;

  v4 = (_QWORD *)*v2;
  v4[23] = a1;
  v4[24] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)swift_task_alloc();
  v4[25] = v6;
  *v6 = v4;
  v6[1] = sub_1DA62EE98;
  return sub_1DA62EE98(a1);
}

uint64_t sub_1DA62EE98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v4 + 216) = a1;
    swift_bridgeObjectRetain();
  }
  return swift_task_switch();
}

uint64_t sub_1DA62EF14()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 216));
}

uint64_t sub_1DA62EF60()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62EFA4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62EFE0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LibraryEntityQuery.artworkData(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v5 = sub_1DA66DEF4();
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v6 = sub_1DA66CEBC();
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  v4[19] = swift_task_alloc();
  v7 = sub_1DA66CA0C();
  v4[20] = v7;
  v4[21] = *(_QWORD *)(v7 - 8);
  v4[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62F140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  sub_1DA51C134(*(_QWORD *)(v0 + 64), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DA51C17C(*(_QWORD *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 72);
    sub_1DA51C1BC(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 176));
    *(_QWORD *)(v0 + 184) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 40))(v6, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v7;
    *v7 = v0;
    v7[1] = sub_1DA62BC4C;
    return sub_1DA66EDD0();
  }
}

id sub_1DA62F270()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1DA62F2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = swift_getAssociatedTypeWitness();
  v4[13] = swift_getAssociatedConformanceWitness();
  v4[14] = swift_getAssociatedTypeWitness();
  v5 = sub_1DA66D1D4();
  v4[15] = v5;
  v4[16] = *(_QWORD *)(v5 - 8);
  v4[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1C0);
  v4[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFD0);
  v4[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1D0);
  v4[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFE0);
  v4[22] = swift_task_alloc();
  v6 = sub_1DA66CA30();
  v4[23] = v6;
  v4[24] = *(_QWORD *)(v6 - 8);
  v4[25] = swift_task_alloc();
  v7 = sub_1DA66CA90();
  v4[26] = v7;
  v4[27] = *(_QWORD *)(v7 - 8);
  v4[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62F4AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = v0[21];
  v2 = v0[22];
  v4 = v0[19];
  v3 = v0[20];
  v5 = v0[18];
  (*(void (**)(void))(v0[24] + 104))();
  v0[29] = swift_checkMetadataState();
  sub_1DA66D27C();
  v6 = sub_1DA66CA3C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 0, 1, v6);
  v7 = sub_1DA66CA9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v1, 1, 1, v7);
  v8 = sub_1DA66CA54();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = sub_1DA66CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  swift_bridgeObjectRetain();
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1DA656BAC(MEMORY[0x1E0DEE9D8]);
  sub_1DA656BAC(v11);
  sub_1DA656BD0(v11);
  sub_1DA63CC0C(v11);
  sub_1DA63CC0C(v11);
  sub_1DA656D64(v11);
  sub_1DA656D88(v11);
  sub_1DA66CA84();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
  sub_1DA66EE30();
  sub_1DA66F580();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  v12 = (_QWORD *)swift_task_alloc();
  v0[30] = v12;
  *v12 = v0;
  v12[1] = sub_1DA62F76C;
  return sub_1DA66DBAC();
}

uint64_t sub_1DA62F76C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA62F7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v14 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v13 = *(_OWORD *)(v0 + 80);
  v6 = sub_1DA66D1C8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  *(_QWORD *)(v0 + 56) = v6;
  v7 = swift_task_alloc();
  *(_OWORD *)(v7 + 16) = v13;
  *(_QWORD *)(v7 + 32) = v2;
  v8 = sub_1DA66FB20();
  v9 = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF50], v8);
  v11 = sub_1DA62C7C0((void (*)(char *, char *))sub_1DA630790, v7, v8, v2, MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v15);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_1DA62F968()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA62FA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_1DA66DDE0();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v6 = sub_1DA66DD74();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  v7 = sub_1DA66DDD4();
  v4[16] = v7;
  v4[17] = *(_QWORD *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA62FB34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint8_t *v11;
  os_signpost_id_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  _QWORD *v20;

  v1 = v0[20];
  v2 = v0[16];
  v3 = v0[17];
  sub_1DA66DD80();
  sub_1DA66DD80();
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[22] = (uint64_t)v4;
  v4(v1, v2);
  v5 = sub_1DA66DDB0();
  v6 = sub_1DA66FF58();
  if ((sub_1DA670240() & 1) != 0)
  {
    v7 = v0[14];
    v8 = v0[10];
    v9 = v0[11];
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v10(v7, v0[15], v8);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v5, v6, v12, "LibraryAppIntentMediaAPIFetch", "", v11, 2u);
    MEMORY[0x1DF0A0474](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    v13 = v0[11];

    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  }
  v0[23] = (uint64_t)v10;
  v14 = v0[21];
  v16 = v0[15];
  v15 = v0[16];
  v17 = v0[10];
  v18 = v0[11];
  v10(v0[14], v16, v17);
  sub_1DA66DE10();
  swift_allocObject();
  v0[24] = sub_1DA66DE04();
  v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[25] = (uint64_t)v19;
  v19(v16, v17);
  v4(v14, v15);
  v20 = (_QWORD *)swift_task_alloc();
  v0[26] = (uint64_t)v20;
  *v20 = v0;
  v20[1] = sub_1DA62FCFC;
  return sub_1DA62F2C4(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1DA62FCFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 216) = a1;
  *(_QWORD *)(v3 + 224) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA62FD68()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;

  sub_1DA66DD80();
  v1 = sub_1DA66DDB0();
  sub_1DA66DDF8();
  v2 = sub_1DA66FF4C();
  if ((sub_1DA670240() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    sub_1DA66BE60();
    sub_1DA66DE1C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
      v6 = "SUCCESS";
    }
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    v21 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 112);
    v17 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 184))(v15, v16, v17);
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    v19 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v1, v2, v19, "LibraryAppIntentMediaAPIFetch", v6, v18, 2u);
    MEMORY[0x1DF0A0474](v18, -1, -1);

    v13(v16, v17);
    v22(v21, v14);
    swift_release();
    v13(v15, v17);
  }
  else
  {
    v7 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    v9 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 80);

    v7(v11, v12);
    v8(v9, v10);
    swift_release();
  }
  v23 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
}

uint64_t sub_1DA62FFB8()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  NSObject *v3;
  os_signpost_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void (**v9)(_QWORD, _QWORD);
  void (**v10)(uint64_t, uint64_t);
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  void *v20;
  char *format;
  void (*v23)(uint64_t, uint64_t);
  os_signpost_type_t v24;
  uint64_t v25;

  v1 = (uint64_t *)(v0 + 144);
  v2 = (_QWORD *)(v0 + 96);
  sub_1DA66DD80();
  v3 = sub_1DA66DDB0();
  sub_1DA66DDF8();
  v4 = sub_1DA66FF4C();
  if ((sub_1DA670240() & 1) != 0)
  {
    v24 = v4;
    v5 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 48);
    sub_1DA66BE60();
    sub_1DA66DE1C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v6, v7) == *MEMORY[0x1E0DF2190])
    {
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
      v8 = "FAILURE";
    }
    format = (char *)v8;
    v10 = (void (**)(uint64_t, uint64_t))(v0 + 200);
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    v13 = *(_QWORD *)(v0 + 96);
    v11 = (uint64_t *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 184))(*(_QWORD *)(v0 + 112), v13, v14);
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    v16 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v3, v24, v16, "LibraryAppIntentMediaAPIFetch", format, v15, 2u);
    MEMORY[0x1DF0A0474](v15, -1, -1);

    v23(v13, v14);
    v9 = (void (**)(_QWORD, _QWORD))(v0 + 176);
    v12 = 128;
    v2 = (_QWORD *)(v0 + 144);
    v1 = (uint64_t *)(v0 + 112);
  }
  else
  {

    v9 = (void (**)(_QWORD, _QWORD))(v0 + 200);
    v10 = (void (**)(uint64_t, uint64_t))(v0 + 176);
    v11 = (uint64_t *)(v0 + 128);
    v12 = 80;
  }
  v17 = *v1;
  v18 = *v11;
  v19 = *v10;
  v20 = *(void **)(v0 + 224);
  (*v9)(*v2, *(_QWORD *)(v0 + v12));
  v19(v17, v18);
  swift_getAssociatedTypeWitness();
  v25 = sub_1DA66FAFC();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v25);
}

void sub_1DA630258(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  int64_t v43;

  v34 = a4;
  v36 = a3;
  v31 = a2;
  v39 = a5;
  v40 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v33 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v32 = (char *)&v30 - v11;
  MEMORY[0x1E0C80A78](v12);
  v35 = (char *)&v30 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  v41 = *a1;
  v17 = sub_1DA66FB20();
  MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF48], v17);
  v37 = v17;
  sub_1DA66FCC4();
  v18 = v42;
  if (v42 != v43)
  {
    if (v43 < v42)
    {
      __break(1u);
    }
    else if (v42 < v43)
    {
      v38 = v43;
      while (1)
      {
        sub_1DA66FB2C();
        swift_getAssociatedConformanceWitness();
        v20 = (void *)sub_1DA66D714();
        v21 = *(void (**)(char *, uint64_t))(v8 + 8);
        v21(v16, AssociatedTypeWitness);
        if (v20)
        {
          if ((sub_1DA523F68(v20, v34) & 1) != 0)
          {
            v19 = v37;
            sub_1DA66FAF0();
            sub_1DA62C294(v18, *a1);
            _swift_isClassOrObjCExistentialType();
            sub_1DA66D708();
            nullsub_1(v19);

            goto LABEL_7;
          }

        }
        v22 = v35;
        sub_1DA66FB2C();
        swift_getAssociatedConformanceWitness();
        v23 = sub_1DA66D288();
        v21(v22, AssociatedTypeWitness);
        if (sub_1DA5240B4(v23, v36))
        {
          v24 = v32;
          sub_1DA66FB2C();
          sub_1DA66D288();
          v21(v24, AssociatedTypeWitness);
          v25 = v37;
          sub_1DA66FAF0();
          sub_1DA62C294(v18, *a1);
          _swift_isClassOrObjCExistentialType();
          sub_1DA66D294();
LABEL_16:
          nullsub_1(v25);
          goto LABEL_7;
        }
        v26 = v33;
        sub_1DA66FB2C();
        v27 = sub_1DA66D6E4();
        v29 = v28;
        v21(v26, AssociatedTypeWitness);
        if (v29)
        {
          if ((sub_1DA523D48(v27, v29, v31) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
          v25 = v37;
          sub_1DA66FAF0();
          sub_1DA62C294(v18, *a1);
          _swift_isClassOrObjCExistentialType();
          sub_1DA66D6FC();
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
LABEL_7:
        if (v38 == ++v18)
          return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DA6306A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA5CDDF8(*(uint64_t (**)(uint64_t))(v1 + 8), v1, a1);
}

uint64_t dispatch thunk of LibraryEntityQuery.objectGraph.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of LibraryEntityQuery.managedObjectContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of LibraryEntityQuery.predicate(forAdamIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of LibraryEntityQuery.predicate(forUuids:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1DA6306D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA630704@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1DA62E7AC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1DA630720(void **a1)
{
  return sub_1DA62E92C(a1);
}

uint64_t sub_1DA630744()
{
  return 16;
}

__n128 sub_1DA630750(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1DA630760()
{
  return 16;
}

__n128 sub_1DA63076C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1DA630778@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA62E708(a1);
}

uint64_t sub_1DA630790()
{
  return sub_1DA62E9D4();
}

uint64_t sub_1DA6307B0()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1DA630808(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v2 + 16);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 80);
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_1DA4AD77C;
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v2 + ((v8 + 32) & ~v8);
  v9 = a2[1];
  *(_QWORD *)(v6 + 48) = *a2;
  *(_QWORD *)(v6 + 56) = v9;
  return swift_task_switch();
}

void AssetProcessingStep.mapMetadata<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[4];

  v12 = *(_QWORD *)(a2 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 16))(v15, v6, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v15, a2);
  v16[0] = a2;
  v16[1] = a3;
  v16[2] = a4;
  v16[3] = a5;
  type metadata accessor for MapMetadataProcessingStep();
}

uint64_t sub_1DA63093C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(a1 + 52));
  *v4 = v2;
  v4[1] = v1;
  return sub_1DA66BE60();
}

void MapMetadataProcessingStep.init(upstream:transform:)(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for MapMetadataProcessingStep();
}

uint64_t sub_1DA6309D4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(result + 52));
  *v4 = v2;
  v4[1] = v1;
  return result;
}

void type metadata accessor for MapMetadataProcessingStep()
{
  JUMPOUT(0x1DF0A02F4);
}

uint64_t MapMetadataProcessingStep.metadata.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *);
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v6 = (char *)&v9 - v5;
  v7 = *(void (**)(char *))(v1 + *(int *)(a1 + 52));
  sub_1DA66D4A4();
  v7(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
}

uint64_t MapMetadataProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t MapMetadataProcessingStep.transform.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 52));
  sub_1DA66BE60();
  return v2;
}

uint64_t MapMetadataProcessingStep.publisher.getter()
{
  return sub_1DA66D4B0();
}

uint64_t sub_1DA630B38()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DA630B60()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DA630BD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  sub_1DA66BE60();
  return v4;
}

uint64_t sub_1DA630C88(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_1DA630CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  sub_1DA66BE60();
  return a1;
}

uint64_t sub_1DA630D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  sub_1DA66BE60();
  swift_release();
  return a1;
}

uint64_t sub_1DA630D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DA630DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1DA630E54(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1DA630ED0 + 4 * byte_1DA6849B0[v10]))();
  }
}

void sub_1DA630F54(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1DA631048()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1DA6310C0);
}

void sub_1DA631050(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1DA631058);
  JUMPOUT(0x1DA6310C0);
}

void sub_1DA631098()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1DA6310C0);
}

void sub_1DA6310A0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1DA6310C0);
}

uint64_t sub_1DA6310A8(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1DA6310C0);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1DA6310BCLL);
    JUMPOUT(0x1DA6310B4);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t ApplyEpisodeLimitRecommendationAction.init(actionMetrics:recommendation:userAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v7 = *a3;
  v8 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for ApplyEpisodeLimitRecommendationAction();
  result = sub_1DA56DAFC(a2, a4 + *(int *)(v9 + 20));
  *(_BYTE *)(a4 + *(int *)(v9 + 24)) = v7;
  return result;
}

uint64_t type metadata accessor for ApplyEpisodeLimitRecommendationAction()
{
  uint64_t result;

  result = qword_1F026E0D8;
  if (!qword_1F026E0D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ApplyEpisodeLimitRecommendationAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ApplyEpisodeLimitRecommendationAction.recommendation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ApplyEpisodeLimitRecommendationAction() + 20);
  return sub_1DA55464C(v3, a1);
}

uint64_t ApplyEpisodeLimitRecommendationAction.userAction.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ApplyEpisodeLimitRecommendationAction();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ApplyEpisodeLimitRecommendationAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = sub_1DA66ED64();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for EpisodeLimitTip();
    v12 = v11[5];
    v13 = &v9[v12];
    v14 = &v10[v12];
    v15 = sub_1DA66CBE0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    *(_QWORD *)&v9[v11[6]] = *(_QWORD *)&v10[v11[6]];
    v16 = v11[7];
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = sub_1DA66D63C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = v11[8];
    v21 = &v9[v20];
    v22 = &v10[v20];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = v11[9];
    v25 = &v9[v24];
    v26 = &v10[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ApplyEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for EpisodeLimitTip();
  v7 = v5 + *(int *)(v6 + 20);
  v8 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + *(int *)(v6 + 28);
  v10 = sub_1DA66D63C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ApplyEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for EpisodeLimitTip();
  v11 = v10[5];
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  *(_QWORD *)(v8 + v10[6]) = *(_QWORD *)(v9 + v10[6]);
  v15 = v10[7];
  v16 = v8 + v15;
  v17 = v9 + v15;
  v18 = sub_1DA66D63C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = v10[8];
  v20 = (_QWORD *)(v8 + v19);
  v21 = (_QWORD *)(v9 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = v10[9];
  v24 = (_QWORD *)(v8 + v23);
  v25 = (_QWORD *)(v9 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ApplyEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for EpisodeLimitTip();
  v11 = v10[5];
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  *(_QWORD *)(v8 + v10[6]) = *(_QWORD *)(v9 + v10[6]);
  v15 = v10[7];
  v16 = v8 + v15;
  v17 = v9 + v15;
  v18 = sub_1DA66D63C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = v10[8];
  v20 = (_QWORD *)(v8 + v19);
  v21 = (_QWORD *)(v9 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v10[9];
  v23 = (_QWORD *)(v8 + v22);
  v24 = (_QWORD *)(v9 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for ApplyEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for EpisodeLimitTip();
  v11 = v10[5];
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(v8 + v10[6]) = *(_QWORD *)(v9 + v10[6]);
  v15 = v10[7];
  v16 = v8 + v15;
  v17 = v9 + v15;
  v18 = sub_1DA66D63C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  *(_OWORD *)(v8 + v10[8]) = *(_OWORD *)(v9 + v10[8]);
  *(_OWORD *)(v8 + v10[9]) = *(_OWORD *)(v9 + v10[9]);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for ApplyEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for EpisodeLimitTip();
  v11 = v10[5];
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *(_QWORD *)(v8 + v10[6]) = *(_QWORD *)(v9 + v10[6]);
  v15 = v10[7];
  v16 = v8 + v15;
  v17 = v9 + v15;
  v18 = sub_1DA66D63C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = v10[8];
  v20 = (_QWORD *)(v8 + v19);
  v21 = (uint64_t *)(v9 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = v10[9];
  v25 = (_QWORD *)(v8 + v24);
  v26 = (uint64_t *)(v9 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplyEpisodeLimitRecommendationAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA6318D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_1DA66ED64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for EpisodeLimitTip();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ApplyEpisodeLimitRecommendationAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA631984(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DA66ED64();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for EpisodeLimitTip();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t sub_1DA631A28()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DA66ED64();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for EpisodeLimitTip();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA631AB4()
{
  return sub_1DA631AF0();
}

uint64_t sub_1DA631AC8()
{
  return sub_1DA631AF0();
}

uint64_t sub_1DA631ADC()
{
  return sub_1DA631AF0();
}

uint64_t sub_1DA631AF0()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  return v1;
}

void sub_1DA631B58()
{
  sub_1DA631BAC((uint64_t)&unk_1EA0D49F0, (uint64_t)sub_1DA635268, (uint64_t)&block_descriptor_42);
}

void sub_1DA631B74()
{
  sub_1DA631BAC((uint64_t)&unk_1EA0D4978, (uint64_t)sub_1DA635120, (uint64_t)&block_descriptor_25);
}

void sub_1DA631B90()
{
  sub_1DA631BAC((uint64_t)&unk_1EA0D4888, (uint64_t)sub_1DA633530, (uint64_t)&block_descriptor_28);
}

void sub_1DA631BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v11[6];

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_privateQueueContext);

  v7 = swift_allocObject();
  swift_weakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[4] = a2;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1DA4A9194;
  v11[3] = a3;
  v9 = _Block_copy(v11);
  v10 = v6;
  swift_release();
  objc_msgSend(v10, sel_performBlock_, v9);
  _Block_release(v9);

}

uint64_t sub_1DA631CCC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA631D30(a1);
}

uint64_t sub_1DA631CE0()
{
  return sub_1DA631DBC();
}

uint64_t sub_1DA631CF4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA631D30(a1);
}

uint64_t sub_1DA631D08()
{
  return sub_1DA631DBC();
}

uint64_t sub_1DA631D1C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA631D30(a1);
}

uint64_t sub_1DA631D30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA631DA8()
{
  return sub_1DA631DBC();
}

uint64_t sub_1DA631DBC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

uint64_t sub_1DA631E30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  void *v12;
  void *v13;
  BOOL v14;
  id v15;
  void *v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = sub_1DA63499C();
    if (v8 >> 62)
    {
      result = sub_1DA6705A0();
      v34 = v7;
      v35 = v5;
      if (result)
        goto LABEL_4;
    }
    else
    {
      result = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      v34 = v7;
      v35 = v5;
      if (result)
      {
LABEL_4:
        if (result < 1)
        {
          __break(1u);
          return result;
        }
        v9 = 0;
        v36 = v8 & 0xC000000000000001;
        v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v38 = v8;
        v39 = a2;
        v37 = result;
        do
        {
          if (v36)
            v11 = (id)MEMORY[0x1DF09EE48](v9, v8);
          else
            v11 = *(id *)(v8 + 8 * v9 + 32);
          v12 = v11;
          v13 = (void *)sub_1DA634AB0(v11);
          v14 = sub_1DA634D54(v12);
          v42 = objc_msgSend(v12, sel_storeTrackId);
          v15 = objc_msgSend(v12, sel_cleanedTitle);
          if (v15)
          {
            v16 = v15;
            v40 = sub_1DA66F8BC();
            v41 = v17;

          }
          else
          {
            v40 = 0x656C746954206F4ELL;
            v41 = 0xE800000000000000;
          }
          v18 = objc_msgSend(v12, sel_author, v34);
          if (v18)
          {
            v19 = v18;
            v20 = sub_1DA66F8BC();
            v22 = v21;

          }
          else
          {
            v22 = 0xE900000000000072;
            v20 = 0x6F68747541206F4ELL;
          }
          v23 = v13;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = sub_1DA540A34(0, v10[2] + 1, 1, v10);
          v25 = v10[2];
          v24 = v10[3];
          if (v25 >= v24 >> 1)
            v10 = sub_1DA540A34((_QWORD *)(v24 > 1), v25 + 1, 1, v10);
          ++v9;
          v10[2] = v25 + 1;
          v26 = &v10[7 * v25];
          v27 = v40;
          v26[4] = v42;
          v26[5] = v27;
          v26[6] = v41;
          v26[7] = v20;
          v26[8] = v22;
          *((_BYTE *)v26 + 72) = v13 != 0;
          *((_BYTE *)v26 + 73) = v14;
          v26[10] = v13;

          v8 = v38;
        }
        while (v37 != v9);
        goto LABEL_23;
      }
    }
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_23:
    swift_bridgeObjectRelease();
    v28 = sub_1DA66FB98();
    v29 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v35, 1, 1, v28);
    sub_1DA66FB68();
    v30 = v34;
    sub_1DA66BE60();
    v31 = sub_1DA66FB5C();
    v32 = (_QWORD *)swift_allocObject();
    v33 = MEMORY[0x1E0DF06E8];
    v32[2] = v31;
    v32[3] = v33;
    v32[4] = v30;
    v32[5] = v10;
    sub_1DA569804(v29, (uint64_t)&unk_1F026E228, (uint64_t)v32);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA632180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  sub_1DA66FB68();
  v5[5] = sub_1DA66FB5C();
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA6321EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 16) = v1;
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66E0C8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA63227C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v5 = sub_1DA635270();
    v6 = sub_1DA66FB98();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
    sub_1DA66FB68();
    sub_1DA66BE60();
    v7 = sub_1DA66FB5C();
    v8 = (_QWORD *)swift_allocObject();
    v9 = MEMORY[0x1E0DF06E8];
    v8[2] = v7;
    v8[3] = v9;
    v8[4] = v4;
    v8[5] = v5;
    sub_1DA569804((uint64_t)v2, (uint64_t)&unk_1F026E248, (uint64_t)v8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA63239C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  sub_1DA66FB68();
  v5[5] = sub_1DA66FB5C();
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA632408()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 16) = v1;
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66E0C8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA632498(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    MEMORY[0x1E0C80A78](result);
    *(&v13 - 2) = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269128);
    sub_1DA670054();
    v8 = v13;
    v9 = sub_1DA66FB98();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    sub_1DA66FB68();
    sub_1DA66BE60();
    v10 = sub_1DA66FB5C();
    v11 = (_QWORD *)swift_allocObject();
    v12 = MEMORY[0x1E0DF06E8];
    v11[2] = v10;
    v11[3] = v12;
    v11[4] = v7;
    v11[5] = v8;
    sub_1DA569804((uint64_t)v5, (uint64_t)&unk_1F026E238, (uint64_t)v11);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA632604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  sub_1DA66FB68();
  v5[5] = sub_1DA66FB5C();
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA632670()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 16) = v1;
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66E0C8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA632700(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  unsigned __int8 v22;
  void (*v23)(char *, uint64_t);
  id v24;
  id v25;
  void *v26;
  char *v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  void *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  id v48[2];

  v48[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1DA66DEF4();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x1E0C80A78](v2);
  v45 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v46 = (char *)&v39 - v11;
  v12 = type metadata accessor for FairPlayKeyViewModel();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  v16 = *((_QWORD *)v48[0] + 2);
  result = swift_bridgeObjectRelease();
  if (v16 <= (uint64_t)a1)
    return result;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
  }
  if (*((_QWORD *)v48[0] + 2) <= a1)
    goto LABEL_15;
  sub_1DA4F0230((uint64_t)v48[0]+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * a1, (uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_1DA4B2F78((uint64_t)&v15[*(int *)(v12 + 32)], (uint64_t)v6);
  v18 = v7;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DA47E2F0((uint64_t)v6, &qword_1EDAE5020);
  }
  else
  {
    v19 = v46;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v46, v6, v7);
    v20 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v21 = (void *)sub_1DA66C2C8();
    v48[0] = 0;
    v22 = objc_msgSend(v20, sel_removeItemAtURL_error_, v21, v48);

    if ((v22 & 1) != 0)
    {
      v23 = *(void (**)(char *, uint64_t))(v8 + 8);
      v24 = v48[0];
      v23(v19, v7);
    }
    else
    {
      v25 = v48[0];
      v26 = (void *)sub_1DA66C1FC();

      v41 = v26;
      swift_willThrow();
      v27 = v45;
      sub_1DA66DEB8();
      v28 = v44;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v44, v19, v18);
      v29 = sub_1DA66DEDC();
      v30 = sub_1DA66FD9C();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc();
        v39 = v18;
        v32 = (uint8_t *)v31;
        v40 = (void *)swift_slowAlloc();
        v48[0] = v40;
        *(_DWORD *)v32 = 136315138;
        v33 = sub_1DA66C31C();
        v47 = sub_1DA49AD00(v33, v34, (uint64_t *)v48);
        sub_1DA6702C4();
        swift_bridgeObjectRelease();
        v35 = *(void (**)(char *, uint64_t))(v8 + 8);
        v36 = v39;
        v35(v28, v39);
        _os_log_impl(&dword_1DA478000, v29, v30, "FairPlayDebugController: Unable to delete key @ %s.", v32, 0xCu);
        v37 = v40;
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v37, -1, -1);
        MEMORY[0x1DF0A0474](v32, -1, -1);

        (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v43);
        v35(v46, v36);
      }
      else
      {

        v38 = *(void (**)(char *, uint64_t))(v8 + 8);
        v38(v28, v18);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v43);
        v38(v19, v18);
      }
    }
  }
  return sub_1DA635634((uint64_t)v15);
}

uint64_t sub_1DA632BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  unint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  void *v45;
  uint64_t (*v46)();
  uint64_t v47;

  v4 = sub_1DA66E9C8();
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66EA04();
  v39 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FairPlayKeyViewModel();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  v14 = *(_QWORD *)(aBlock + 16);
  result = swift_bridgeObjectRelease();
  if (v14 > a1)
  {
    swift_getKeyPath();
    KeyPath = swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(aBlock + 16) > (unint64_t)a1)
    {
      sub_1DA4F0230(aBlock+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * a1, (uint64_t)v13);
      result = swift_bridgeObjectRelease();
      a1 = *v13;
      KeyPath = v13[1];
      v17 = HIBYTE(KeyPath) & 0xF;
      v18 = *v13 & 0xFFFFFFFFFFFFLL;
      if ((KeyPath & 0x2000000000000000) != 0)
        v19 = HIBYTE(KeyPath) & 0xF;
      else
        v19 = *v13 & 0xFFFFFFFFFFFFLL;
      if (!v19)
        return sub_1DA635634((uint64_t)v13);
      if ((KeyPath & 0x1000000000000000) == 0)
      {
        if ((KeyPath & 0x2000000000000000) == 0)
        {
          if ((a1 & 0x1000000000000000) != 0)
            v20 = (unsigned __int8 *)((KeyPath & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v20 = (unsigned __int8 *)sub_1DA6704A4();
          v21 = (uint64_t)sub_1DA5668FC(v20, v18, 10);
          LOBYTE(a1) = v22 & 1;
          goto LABEL_47;
        }
        aBlock = *v13;
        v43 = KeyPath & 0xFFFFFFFFFFFFFFLL;
        if (a1 == 43)
        {
          if (!v17)
            goto LABEL_62;
          if (v17 == 1 || (BYTE1(a1) - 48) > 9u)
            goto LABEL_34;
          v21 = (BYTE1(a1) - 48);
          if (v17 != 2)
          {
            if ((BYTE2(a1) - 48) > 9u)
              goto LABEL_34;
            v21 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
            v23 = v17 - 3;
            if (v23)
            {
              v24 = (unsigned __int8 *)&aBlock + 3;
              while (1)
              {
                v25 = *v24 - 48;
                if (v25 > 9)
                  goto LABEL_34;
                v26 = 10 * v21;
                if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63)
                  goto LABEL_34;
                v21 = v26 + v25;
                if (__OFADD__(v26, v25))
                  goto LABEL_34;
                LOBYTE(a1) = 0;
                ++v24;
                if (!--v23)
                  goto LABEL_47;
              }
            }
          }
        }
        else
        {
          if (a1 == 45)
          {
            if (v17)
            {
              if (v17 != 1 && (BYTE1(a1) - 48) <= 9u)
              {
                if (v17 == 2)
                {
                  LOBYTE(a1) = 0;
                  v21 = -(uint64_t)(BYTE1(a1) - 48);
                  goto LABEL_47;
                }
                if ((BYTE2(a1) - 48) <= 9u)
                {
                  v21 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
                  v31 = v17 - 3;
                  if (!v31)
                    goto LABEL_46;
                  v35 = (unsigned __int8 *)&aBlock + 3;
                  while (1)
                  {
                    v36 = *v35 - 48;
                    if (v36 > 9)
                      break;
                    v37 = 10 * v21;
                    if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63)
                      break;
                    v21 = v37 - v36;
                    if (__OFSUB__(v37, v36))
                      break;
                    LOBYTE(a1) = 0;
                    ++v35;
                    if (!--v31)
                      goto LABEL_47;
                  }
                }
              }
LABEL_34:
              v21 = 0;
              LOBYTE(a1) = 1;
              goto LABEL_47;
            }
            __break(1u);
LABEL_62:
            __break(1u);
            return result;
          }
          if (!v17 || (a1 - 48) > 9u)
            goto LABEL_34;
          v21 = (a1 - 48);
          if (v17 != 1)
          {
            if ((BYTE1(a1) - 48) > 9u)
              goto LABEL_34;
            v21 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
            v27 = v17 - 2;
            if (v27)
            {
              v28 = (unsigned __int8 *)&aBlock + 2;
              while (1)
              {
                v29 = *v28 - 48;
                if (v29 > 9)
                  goto LABEL_34;
                v30 = 10 * v21;
                if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63)
                  goto LABEL_34;
                v21 = v30 + v29;
                if (__OFADD__(v30, v29))
                  goto LABEL_34;
                LOBYTE(a1) = 0;
                ++v28;
                if (!--v27)
                  goto LABEL_47;
              }
            }
          }
        }
LABEL_46:
        LOBYTE(a1) = 0;
        goto LABEL_47;
      }
LABEL_59:
      swift_bridgeObjectRetain();
      v21 = (uint64_t)sub_1DA566910(a1, KeyPath, 10);
      LOBYTE(a1) = v38;
      swift_bridgeObjectRelease();
LABEL_47:
      if ((a1 & 1) == 0)
      {
        sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
        v32 = (void *)sub_1DA66FEC8();
        v33 = swift_allocObject();
        *(_QWORD *)(v33 + 16) = a2;
        *(_QWORD *)(v33 + 24) = v21;
        v46 = sub_1DA635694;
        v47 = v33;
        aBlock = MEMORY[0x1E0C809B0];
        v43 = 1107296256;
        v44 = sub_1DA4A9194;
        v45 = &block_descriptor_68;
        v34 = _Block_copy(&aBlock);
        sub_1DA66BE60();
        sub_1DA66E9EC();
        v41 = MEMORY[0x1E0DEE9D8];
        sub_1DA4F719C();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
        sub_1DA4841D4((unint64_t *)&qword_1EDADE6F0, (uint64_t *)&unk_1EDADE6E0, MEMORY[0x1E0DEAF38]);
        sub_1DA670378();
        MEMORY[0x1DF09E8CC](0, v9, v6, v34);
        _Block_release(v34);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v4);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v7);
        swift_release();
      }
      return sub_1DA635634((uint64_t)v13);
    }
    __break(1u);
    goto LABEL_59;
  }
  return result;
}

uint64_t sub_1DA63319C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__keys;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E210);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__legacyKeys, v2);
  v4 = v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__episodes;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E218);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA63324C()
{
  return type metadata accessor for FairPlayDebugController();
}

uint64_t type metadata accessor for FairPlayDebugController()
{
  uint64_t result;

  result = qword_1F026E160;
  if (!qword_1F026E160)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DA633290()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DA48D80C(319, &qword_1F026E170, &qword_1F0269128);
  if (v0 <= 0x3F)
  {
    sub_1DA48D80C(319, qword_1F026E178, &qword_1F0269140);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1DA633344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E218);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E210);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__keys;
  v10 = MEMORY[0x1E0DEE9D8];
  v17 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269128);
  sub_1DA66E08C();
  v11 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v11(v9, v8, v5);
  v12 = v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__legacyKeys;
  v17 = v10;
  sub_1DA66E08C();
  v11(v12, v8, v5);
  v13 = v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__episodes;
  v17 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269140);
  sub_1DA66E08C();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v13, v4, v1);
  v14 = OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController_legacyKeyStorage;
  *(_QWORD *)(v0 + v14) = objc_msgSend(objc_allocWithZone((Class)sub_1DA66D99C()), sel_init);
  return v0;
}

uint64_t sub_1DA6334E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA66DFC0();
  *a1 = result;
  return result;
}

uint64_t sub_1DA633508()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA633530()
{
  uint64_t v0;

  return sub_1DA631E30(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1DA633538(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void sub_1DA63357C(_QWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char *v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  unint64_t v53;
  uint64_t v54;
  void (*v55)(char *, unint64_t, uint64_t);
  uint64_t v56;
  char v57;
  char *v58;
  char *v59;
  char v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint8_t *v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  char v77;
  _QWORD *v78;
  char *v79;
  unint64_t v80;
  char *v81;
  id v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  id v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  void *v104;
  id v105;
  uint64_t v106;
  _QWORD *v107;
  void *v108;
  id v109;
  uint64_t v110;
  unsigned int (*v111)(char *, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  void *v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  id v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unsigned int (*v130)(char *, uint64_t, uint64_t);
  id v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  id v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  void (*v147)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v148)(char *, uint64_t, uint64_t);
  char *v149;
  void (*v150)(char *, char *, uint64_t);
  uint64_t v151;
  id aBlock[6];
  id v153[2];

  v2 = v1;
  v153[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v4);
  v134 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v132 - v7;
  v143 = sub_1DA66DEF4();
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v10 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v136 = (char *)&v132 - v12;
  MEMORY[0x1E0C80A78](v13);
  v135 = (char *)&v132 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v15);
  v137 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v132 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v132 - v21;
  v23 = sub_1DA66C358();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v138 = (char *)&v132 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v145 = (char *)&v132 - v27;
  MEMORY[0x1E0C80A78](v28);
  v149 = (char *)&v132 - v29;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v132 - v31;
  *(_QWORD *)&v34 = MEMORY[0x1E0C80A78](v33).n128_u64[0];
  v36 = (char *)&v132 - v35;
  v140 = v2;
  v37 = objc_msgSend(v2, sel_assetURL, v34);
  if (!v37)
    goto LABEL_4;
  v38 = v37;
  v133 = v8;
  v144 = v36;
  v141 = a1;
  sub_1DA66F8BC();

  sub_1DA66C334();
  swift_bridgeObjectRelease();
  v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v148(v22, 1, v23) == 1)
  {
    sub_1DA47E2F0((uint64_t)v22, &qword_1EDAE5020);
    a1 = v141;
LABEL_4:
    v39 = type metadata accessor for FairPlayKeyViewModel();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(a1, 1, 1, v39);
    return;
  }
  v150 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v150(v144, v22, v23);
  v40 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v41 = (void *)sub_1DA66C2C8();
  type metadata accessor for URLResourceKey(0);
  v42 = (void *)MEMORY[0x1E0DEE9D8];
  v43 = (void *)sub_1DA66FA90();
  aBlock[0] = 0;
  v44 = objc_msgSend(v40, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v41, v43, 0, aBlock);

  v45 = aBlock[0];
  v139 = v23;
  if (v44)
  {
    v46 = sub_1DA66FA9C();
    v47 = v45;

    aBlock[0] = v42;
    v48 = *(_QWORD *)(v46 + 16);
    v49 = v23;
    v151 = v24;
    v146 = v48;
    if (v48)
    {
      v50 = 0;
      while (1)
      {
        if (v50 >= *(_QWORD *)(v46 + 16))
        {
          __break(1u);
LABEL_53:
          __break(1u);
        }
        v53 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
        v54 = *(_QWORD *)(v24 + 72);
        v55 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
        v55(v19, v46 + v53 + v54 * v50, v49);
        v147 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
        v147(v19, 0, 1, v49);
        if (v148(v19, 1, v49) == 1)
          goto LABEL_24;
        v150(v32, v19, v49);
        v56 = v49;
        sub_1DA66C2BC();
        v57 = sub_1DA66F9F4();
        swift_bridgeObjectRelease();
        v58 = v149;
        v55(v149, (unint64_t)v32, v56);
        if ((v57 & 1) != 0)
        {
          sub_1DA66C2BC();
          v59 = v58;
          v60 = sub_1DA66FA00();
          swift_bridgeObjectRelease();
          v52 = *(void (**)(char *, uint64_t))(v151 + 8);
          v52(v59, v56);
          if ((v60 & 1) != 0)
          {
            v150(v145, v32, v56);
            v61 = aBlock[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1DA50A118(0, v61[2] + 1, 1);
              v61 = aBlock[0];
            }
            v24 = v151;
            v63 = v61[2];
            v62 = v61[3];
            if (v63 >= v62 >> 1)
            {
              sub_1DA50A118(v62 > 1, v63 + 1, 1);
              v61 = aBlock[0];
            }
            v61[2] = v63 + 1;
            v64 = (char *)v61 + v53 + v63 * v54;
            v49 = v139;
            v150(v64, v145, v139);
            aBlock[0] = v61;
            goto LABEL_10;
          }
        }
        else
        {
          v51 = v58;
          v52 = *(void (**)(char *, uint64_t))(v151 + 8);
          v52(v51, v56);
        }
        v52(v32, v56);
        v49 = v56;
        v24 = v151;
LABEL_10:
        if (v146 == ++v50)
          goto LABEL_23;
      }
    }
    v147 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
LABEL_23:
    v147(v19, 1, 1, v49);
LABEL_24:
    swift_bridgeObjectRelease();
    sub_1DA47E2F0((uint64_t)v19, &qword_1EDAE5020);
    v76 = aBlock[0];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026AC20);
    sub_1DA4841D4(&qword_1F026E258, (uint64_t *)&unk_1F026AC20, MEMORY[0x1E0DEAF50]);
    v77 = sub_1DA66FCDC();
    v78 = v141;
    v79 = v144;
    if ((v77 & 1) == 0)
    {
      swift_release();
      v89 = v136;
      sub_1DA66DEB8();
      v90 = v140;
      v91 = sub_1DA66DEDC();
      v92 = sub_1DA66FD9C();
      if (os_log_type_enabled(v91, v92))
      {
        v93 = swift_slowAlloc();
        v94 = (void *)swift_slowAlloc();
        aBlock[0] = v94;
        *(_DWORD *)v93 = 141558275;
        v153[0] = (id)1752392040;
        sub_1DA6702C4();
        *(_WORD *)(v93 + 12) = 2081;
        v153[0] = objc_msgSend(v90, sel_storeTrackId);
        v95 = sub_1DA670684();
        v153[0] = (id)sub_1DA49AD00(v95, v96, (uint64_t *)aBlock);
        sub_1DA6702C4();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA478000, v91, v92, "FairPlayDebugController: No key file found for asset: %{private,mask.hash}s", (uint8_t *)v93, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v94, -1, -1);
        MEMORY[0x1DF0A0474](v93, -1, -1);

        (*(void (**)(char *, uint64_t))(v142 + 8))(v89, v143);
        (*(void (**)(char *, uint64_t))(v151 + 8))(v144, v139);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v142 + 8))(v89, v143);
        (*(void (**)(char *, uint64_t))(v151 + 8))(v79, v139);
      }
      goto LABEL_40;
    }
    v80 = v76[2];
    if (v80 >= 2)
    {
      v81 = v135;
      sub_1DA66DEB8();
      v82 = v140;
      v83 = sub_1DA66DEDC();
      v84 = sub_1DA66FD9C();
      if (os_log_type_enabled(v83, v84))
      {
        v85 = swift_slowAlloc();
        v86 = (void *)swift_slowAlloc();
        aBlock[0] = v86;
        *(_DWORD *)v85 = 141558275;
        v153[0] = (id)1752392040;
        sub_1DA6702C4();
        *(_WORD *)(v85 + 12) = 2081;
        v149 = (char *)(v85 + 14);
        v153[0] = objc_msgSend(v82, sel_storeTrackId);
        v87 = sub_1DA670684();
        v153[0] = (id)sub_1DA49AD00(v87, v88, (uint64_t *)aBlock);
        sub_1DA6702C4();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA478000, v83, v84, "FairPlayDebugController: More than 1 key file found for asset: %{private,mask.hash}s", (uint8_t *)v85, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v86, -1, -1);
        MEMORY[0x1DF0A0474](v85, -1, -1);

        (*(void (**)(char *, uint64_t))(v142 + 8))(v135, v143);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v142 + 8))(v81, v143);
      }
      v80 = v76[2];
    }
    v98 = v139;
    v99 = v138;
    v100 = (uint64_t)v137;
    if (v80)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v151 + 16))(v137, (unint64_t)v76+ ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80)), v139);
      v101 = 0;
    }
    else
    {
      v101 = 1;
    }
    v147((char *)v100, v101, 1, v98);
    swift_release();
    if (v148((char *)v100, 1, v98) == 1)
    {
      (*(void (**)(char *, uint64_t))(v151 + 8))(v79, v98);
      sub_1DA47E2F0(v100, &qword_1EDAE5020);
LABEL_40:
      v102 = type metadata accessor for FairPlayKeyViewModel();
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v78, 1, 1, v102);
      return;
    }
    v150(v99, (char *)v100, v98);
    sub_1DA66C31C();
    v103 = objc_allocWithZone(MEMORY[0x1E0DDBF68]);
    v104 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v105 = objc_msgSend(v103, sel_initWithPath_, v104);

    v153[0] = 0;
    v106 = swift_allocObject();
    *(_QWORD *)(v106 + 16) = v153;
    v107 = (_QWORD *)swift_allocObject();
    v107[2] = sub_1DA6356E8;
    v107[3] = v106;
    aBlock[4] = sub_1DA4E4438;
    aBlock[5] = v107;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1DA633538;
    aBlock[3] = &block_descriptor_62;
    v108 = _Block_copy(aBlock);
    sub_1DA66BE60();
    swift_release();
    objc_msgSend(v105, sel_enumerateKeyEntriesUsingBlock_, v108);
    _Block_release(v108);
    LOBYTE(v108) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v108 & 1) != 0)
      goto LABEL_53;
    v109 = v140;
    aBlock[0] = objc_msgSend(v140, sel_storeTrackId);
    v110 = sub_1DA670684();
    v148 = v111;
    v149 = (char *)v110;
    v112 = sub_1DA66C2BC();
    v114 = v113;
    v115 = objc_msgSend(v109, sel_cleanedTitle);
    if (v115)
    {
      v116 = v115;
      v117 = sub_1DA66F8BC();
      v119 = v118;

    }
    else
    {
      v119 = 0xE800000000000000;
      v117 = 0x656C746954206F4ELL;
    }
    if (v153[0])
    {
      v120 = objc_msgSend(v153[0], sel_renewalDate);
      if (v120)
      {
        v121 = v120;
        v122 = (uint64_t)v134;
        sub_1DA66C40C();

        (*(void (**)(char *, uint64_t))(v151 + 8))(v79, v139);
        v123 = sub_1DA66C430();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v122, 0, 1, v123);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v151 + 8))(v79, v139);
        v127 = sub_1DA66C430();
        v122 = (uint64_t)v134;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v134, 1, 1, v127);
      }
      v126 = (uint64_t)v133;
      sub_1DA6355EC(v122, (uint64_t)v133);
      v124 = v139;
    }
    else
    {
      v124 = v139;
      (*(void (**)(char *, uint64_t))(v151 + 8))(v79, v139);

      v125 = sub_1DA66C430();
      v126 = (uint64_t)v133;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v133, 1, 1, v125);
    }
    v128 = type metadata accessor for FairPlayKeyViewModel();
    v129 = (char *)v78 + *(int *)(v128 + 32);
    v150(v129, v138, v124);
    v147(v129, 0, 1, v124);
    v130 = v148;
    *v78 = v149;
    v78[1] = v130;
    v78[2] = v112;
    v78[3] = v114;
    v78[4] = v117;
    v78[5] = v119;
    sub_1DA6355EC(v126, (uint64_t)v78 + *(int *)(v128 + 28));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v78, 0, 1, v128);
    v131 = v153[0];
    swift_release();

  }
  else
  {
    v65 = aBlock[0];
    v66 = (void *)sub_1DA66C1FC();

    swift_willThrow();
    sub_1DA66DEB8();
    v67 = v66;
    v68 = v66;
    v69 = sub_1DA66DEDC();
    v70 = sub_1DA66FD9C();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = v24;
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = (void *)swift_slowAlloc();
      aBlock[0] = v73;
      *(_DWORD *)v72 = 136315138;
      swift_getErrorValue();
      v74 = sub_1DA670750();
      v153[0] = (id)sub_1DA49AD00(v74, v75, (uint64_t *)aBlock);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DA478000, v69, v70, "FairPlayDebugController: %s", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v73, -1, -1);
      MEMORY[0x1DF0A0474](v72, -1, -1);

      (*(void (**)(char *, uint64_t))(v142 + 8))(v10, v143);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v144, v139);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v142 + 8))(v10, v143);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v144, v139);
    }
    v97 = type metadata accessor for FairPlayKeyViewModel();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v141, 1, 1, v97);
  }
}

void sub_1DA634638(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  _QWORD *v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;

  v2 = type metadata accessor for FairPlayKeyViewModel();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66F8BC();
  v6 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v7 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_1DA47D774(0, &qword_1EDADE728);
  v9 = sub_1DA670090();
  v35 = v9;
  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();

    v12 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    *a1 = v12;
    return;
  }
  swift_bridgeObjectRetain();
  v9 = v35;
  v10 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_14;
LABEL_3:
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1DA50A144(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v28 = v8;
    v29 = a1;
    v11 = 0;
    v12 = v37;
    v32 = v9 & 0xC000000000000001;
    v30 = xmmword_1DA684AF0;
    v33 = v10;
    v34 = v3;
    v31 = v2;
    do
    {
      if (v32)
        v13 = (id)MEMORY[0x1DF09EE48](v11, v9);
      else
        v13 = *(id *)(v9 + 8 * v11 + 32);
      v14 = v13;
      v36 = objc_msgSend(v13, sel_storeTrackId, v28);
      v15 = sub_1DA670684();
      v17 = v16;
      v36 = objc_msgSend(v14, sel_storeTrackId);
      v18 = sub_1DA670684();
      v20 = v19;
      v21 = v31;
      v22 = &v5[*(int *)(v31 + 28)];
      objc_msgSend(v14, sel_expirationDate);
      sub_1DA66C3AC();
      v23 = sub_1DA66C430();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
      v24 = &v5[*(int *)(v21 + 32)];
      v25 = sub_1DA66C358();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);

      *(_QWORD *)v5 = v15;
      *((_QWORD *)v5 + 1) = v17;
      *((_QWORD *)v5 + 2) = v18;
      *((_QWORD *)v5 + 3) = v20;
      *((_OWORD *)v5 + 2) = v30;
      v37 = v12;
      v27 = *(_QWORD *)(v12 + 16);
      v26 = *(_QWORD *)(v12 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1DA50A144(v26 > 1, v27 + 1, 1);
        v12 = v37;
      }
      ++v11;
      *(_QWORD *)(v12 + 16) = v27 + 1;
      sub_1DA6351F4((uint64_t)v5, v12+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v27);
      v9 = v35;
    }
    while (v33 != v11);
    swift_bridgeObjectRelease();

    a1 = v29;
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1DA63499C()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  sub_1DA66F8BC();
  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  v3 = objc_msgSend((id)objc_opt_self(), sel_predicateForDownloadedFairPlayEpisodes);
  objc_msgSend(v2, sel_setPredicate_, v3);

  sub_1DA47D774(0, &qword_1EDADEC00);
  v4 = sub_1DA670090();

  return v4;
}

uint64_t sub_1DA634AB0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];
  uint64_t v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C358();
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = MEMORY[0x1E0C80A78](v5).n128_u64[0];
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_assetURL, v7);
  if (!v10)
    return 0;
  v11 = v10;
  sub_1DA66F8BC();

  sub_1DA66C334();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1DA47E2F0((uint64_t)v4, &qword_1EDAE5020);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  sub_1DA66C31C();
  v13 = objc_allocWithZone(MEMORY[0x1E0DDBF68]);
  v14 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_initWithPath_, v14);

  v23 = 0;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = &v23;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1DA6350DC;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_1DA4E4158;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA633538;
  aBlock[3] = &block_descriptor_18;
  v18 = _Block_copy(aBlock);
  sub_1DA66BE60();
  swift_release();
  objc_msgSend(v15, sel_enumerateKeyEntriesUsingBlock_, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v12 = v23;
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

BOOL sub_1DA634D54(void *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;

  sub_1DA66F8BC();
  v2 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v3 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678FE0;
  v6 = sub_1DA66F8BC();
  v8 = v7;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1DA486218();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  v9 = objc_msgSend(a1, sel_storeTrackId);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v9);
  *(_QWORD *)(v5 + 96) = sub_1DA47D774(0, (unint64_t *)&qword_1EDADE760);
  *(_QWORD *)(v5 + 104) = sub_1DA635074();
  *(_QWORD *)(v5 + 72) = v10;
  v11 = (void *)sub_1DA66FD48();
  objc_msgSend(v4, sel_setPredicate_, v11);

  objc_msgSend(v4, sel_setFetchLimit_, 1);
  sub_1DA47D774(0, &qword_1EDADE728);
  v12 = sub_1DA670090();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1DA6705A0();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

  }
  return v13 == 1;
}

uint64_t sub_1DA634FB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DA4A9520;
  return sub_1DA632180(a1, v4, v5, v7, v6);
}

uint64_t sub_1DA63502C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA631D30(a1);
}

uint64_t sub_1DA635050()
{
  return sub_1DA631DBC();
}

unint64_t sub_1DA635074()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDADE768;
  if (!qword_1EDADE768)
  {
    v1 = sub_1DA47D774(255, (unint64_t *)&qword_1EDADE760);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1EDADE768);
  }
  return result;
}

uint64_t sub_1DA6350CC()
{
  return swift_deallocObject();
}

void sub_1DA6350DC(void *a1)
{
  uint64_t v1;
  id *v2;
  id v3;
  id v4;

  v2 = *(id **)(v1 + 16);
  v4 = *v2;
  *v2 = a1;
  v3 = a1;

}

uint64_t sub_1DA63510C()
{
  return swift_deallocObject();
}

uint64_t sub_1DA635120()
{
  uint64_t v0;

  return sub_1DA632498(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1DA635128(_QWORD *a1@<X8>)
{
  sub_1DA634638(a1);
}

uint64_t sub_1DA635134(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DA4AD77C;
  return sub_1DA632604(a1, v4, v5, v7, v6);
}

uint64_t sub_1DA6351AC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA631D30(a1);
}

uint64_t sub_1DA6351D0()
{
  return sub_1DA631DBC();
}

uint64_t sub_1DA6351F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FairPlayKeyViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_2Tm_5()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DA635268()
{
  return sub_1DA63227C();
}

uint64_t sub_1DA635270()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E250);
  MEMORY[0x1E0C80A78](v0);
  v2 = (uint64_t *)((char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for FairPlayKeyViewModel();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v20 = (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - v7;
  v9 = sub_1DA63499C();
  v10 = v9;
  if (!(v9 >> 62))
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_3;
LABEL_17:
    v14 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease_n();
    return v14;
  }
  swift_bridgeObjectRetain();
  result = sub_1DA6705A0();
  v11 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v11 >= 1)
  {
    v13 = 0;
    v14 = MEMORY[0x1E0DEE9D8];
    v19 = v3;
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
        v15 = (id)MEMORY[0x1DF09EE48](v13, v10);
      else
        v15 = *(id *)(v10 + 8 * v13 + 32);
      v16 = v15;
      sub_1DA63357C(v2);

      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
      {
        sub_1DA47E2F0((uint64_t)v2, &qword_1F026E250);
      }
      else
      {
        sub_1DA6351F4((uint64_t)v2, (uint64_t)v8);
        sub_1DA6351F4((uint64_t)v8, v20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_1DA540B5C(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
        v18 = *(_QWORD *)(v14 + 16);
        v17 = *(_QWORD *)(v14 + 24);
        if (v18 >= v17 >> 1)
          v14 = sub_1DA540B5C(v17 > 1, v18 + 1, 1, v14);
        *(_QWORD *)(v14 + 16) = v18 + 1;
        sub_1DA6351F4(v20, v14+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v18);
        v3 = v19;
      }
      ++v13;
    }
    while (v11 != v13);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t objectdestroy_5Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DA63550C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DA4A9520;
  return sub_1DA63239C(a1, v4, v5, v7, v6);
}

uint64_t sub_1DA635584@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA631D30(a1);
}

uint64_t sub_1DA6355A8()
{
  return sub_1DA631DBC();
}

uint64_t sub_1DA6355CC()
{
  return swift_deallocObject();
}

uint64_t sub_1DA6355DC()
{
  return swift_deallocObject();
}

uint64_t sub_1DA6355EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA635634(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FairPlayKeyViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA635670()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA635694()
{
  return sub_1DA66D990();
}

double MTPodcastEpisodeLimit.jsRepresentation(in:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  double result;
  uint64_t v3;

  result = (double)a1;
  v3 = MEMORY[0x1E0D416A8];
  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(a2 + 32) = v3;
  *(double *)a2 = (double)a1;
  return result;
}

double sub_1DA63570C@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  double result;

  v2 = MEMORY[0x1E0D416A8];
  result = (double)*v1;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(a1 + 32) = v2;
  *(double *)a1 = result;
  return result;
}

id sub_1DA635730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id result;

  result = sub_1DA658E10(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t PlayerArtwork.artworkModel(libraryEntity:fallbackWidth:fallbackHeight:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  v8 = sub_1DA66C928();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66CD18();
  v12 = v11;
  v40 = sub_1DA66CCE8();
  v39 = v13;
  v38 = sub_1DA66CD00();
  v37 = v14;
  sub_1DA66CCAC();
  v45 = v12;
  if (v15)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1DA66DC84();
    v41 = v19;
    v42 = v16;
    swift_bridgeObjectRelease();
    sub_1DA66CCB8();
    if (!v20)
      goto LABEL_6;
LABEL_4:
    swift_bridgeObjectRetain();
    v18 = sub_1DA66DC84();
    v35 = v21;
    v36 = v18;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v42 = 0;
  v41 = 255;
  sub_1DA66CCB8();
  if (v17)
    goto LABEL_4;
LABEL_6:
  v36 = 0;
  v35 = 255;
LABEL_7:
  sub_1DA66CCD0();
  v44 = v10;
  if (v22)
  {
    swift_bridgeObjectRetain();
    v23 = sub_1DA66DC84();
    v33 = v24;
    v34 = v23;
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = 0;
    v33 = 255;
  }
  sub_1DA66CCC4();
  v43 = a4;
  if (!v25)
  {
    v26 = a1;
    v27 = a2;
    v28 = a3;
    sub_1DA66CCDC();
    if (!v29)
      goto LABEL_16;
    goto LABEL_15;
  }
  v26 = a1;
  v27 = a2;
  v28 = a3;
  swift_bridgeObjectRetain();
  sub_1DA66DC84();
  swift_bridgeObjectRelease();
  sub_1DA66CCDC();
  if (v30)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    sub_1DA66DC84();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  sub_1DA66D210();
  v54 = v46;
  v55 = v47;
  v56 = v48;
  v57 = v49;
  v58 = v50;
  v59 = v51;
  v60 = v52;
  v61 = v53;
  sub_1DA66C904();
  sub_1DA66CC1C();
  sub_1DA47F9DC(v26, v27, v28);
  return sub_1DA66CA00();
}

uint64_t unrecognizedEnumValueEncountered(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v16[4];
  uint64_t v17;
  _BYTE v18[32];
  _QWORD v19[4];

  v2 = sub_1DA66DEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66DEA0();
  sub_1DA49ADD0(a1, (uint64_t)v19);
  sub_1DA49ADD0(a1, (uint64_t)v18);
  v6 = sub_1DA66DEDC();
  v7 = sub_1DA66FDB4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315394;
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    swift_getDynamicType();
    v10 = sub_1DA670828();
    v16[0] = sub_1DA49AD00(v10, v11, &v17);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    *(_WORD *)(v8 + 12) = 2080;
    sub_1DA49ADD0((uint64_t)v18, (uint64_t)v16);
    v12 = sub_1DA66F904();
    v16[0] = sub_1DA49AD00(v12, v13, &v17);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
    _os_log_impl(&dword_1DA478000, v6, v7, "Unrecognized %s encountered => %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v9, -1, -1);
    MEMORY[0x1DF0A0474](v8, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1DA635DCC(void (*a1)(void))
{
  a1();
  return sub_1DA670828();
}

uint64_t FetchShowLatestEpisodesIntent.init(show:limit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  sub_1DA4E7038(a1, a3);
  result = type metadata accessor for FetchShowLatestEpisodesIntent();
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for FetchShowLatestEpisodesIntent()
{
  uint64_t result;

  result = qword_1EDAE3F38;
  if (!qword_1EDAE3F38)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t static FetchShowLatestEpisodesIntent.kind.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t FetchShowLatestEpisodesIntent.show.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4E6FEC(v1, a1);
}

uint64_t FetchShowLatestEpisodesIntent.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FetchShowLatestEpisodesIntent() + 20));
}

void sub_1DA635EAC(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x80000001DA684CA0;
}

uint64_t *initializeBufferWithCopyOfBuffer for FetchShowLatestEpisodesIntent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  void (*v54)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  unsigned int (*v68)(_QWORD *, uint64_t, int *);
  _QWORD *v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v72;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v8 = (void *)a2[2];
    v7 = a2[3];
    a1[2] = (uint64_t)v8;
    a1[3] = v7;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = (int *)type metadata accessor for ShowEntity();
    v11 = v10[8];
    __dst = (char *)v4 + v11;
    v12 = (char *)a2 + v11;
    v13 = sub_1DA66C358();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    v16 = v8;
    swift_bridgeObjectRetain();
    v70 = v15;
    v72 = v13;
    v66 = v14;
    if (v15(v12, 1, v13))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    *(uint64_t *)((char *)v4 + v10[9]) = *(uint64_t *)((char *)a2 + v10[9]);
    *(uint64_t *)((char *)v4 + v10[10]) = *(uint64_t *)((char *)a2 + v10[10]);
    *(uint64_t *)((char *)v4 + v10[11]) = *(uint64_t *)((char *)a2 + v10[11]);
    *(uint64_t *)((char *)v4 + v10[12]) = *(uint64_t *)((char *)a2 + v10[12]);
    *(uint64_t *)((char *)v4 + v10[13]) = *(uint64_t *)((char *)a2 + v10[13]);
    *(uint64_t *)((char *)v4 + v10[14]) = *(uint64_t *)((char *)a2 + v10[14]);
    *(uint64_t *)((char *)v4 + v10[15]) = *(uint64_t *)((char *)a2 + v10[15]);
    *(uint64_t *)((char *)v4 + v10[16]) = *(uint64_t *)((char *)a2 + v10[16]);
    *(uint64_t *)((char *)v4 + v10[17]) = *(uint64_t *)((char *)a2 + v10[17]);
    v19 = v10[18];
    v69 = (uint64_t *)((char *)v4 + v19);
    v67 = (uint64_t *)((char *)a2 + v19);
    v20 = (int *)sub_1DA66CA0C();
    v65 = *((_QWORD *)v20 - 1);
    v68 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v65 + 48);
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    if (v68(v67, 1, v20))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      memcpy(v69, v67, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      v22 = v10;
    }
    else
    {
      v23 = v67[1];
      *v69 = *v67;
      v69[1] = v23;
      v24 = *((unsigned __int8 *)v67 + 32);
      swift_bridgeObjectRetain();
      if (v24 == 255)
      {
        *((_OWORD *)v69 + 1) = *((_OWORD *)v67 + 1);
        *((_BYTE *)v69 + 32) = *((_BYTE *)v67 + 32);
      }
      else
      {
        v25 = v67[2];
        v26 = v67[3];
        sub_1DA481390(v25, v26, v24);
        v69[2] = v25;
        v69[3] = v26;
        *((_BYTE *)v69 + 32) = v24;
      }
      v22 = v10;
      *(_OWORD *)(v69 + 5) = *(_OWORD *)(v67 + 5);
      v27 = (id *)(v67 + 7);
      v28 = *((unsigned __int8 *)v67 + 64);
      if (v28 == 255)
      {
        v69[7] = *v27;
        *((_BYTE *)v69 + 64) = *((_BYTE *)v67 + 64);
      }
      else
      {
        v29 = *v27;
        sub_1DA4E762C(*v27, *((_BYTE *)v67 + 64));
        v69[7] = v29;
        *((_BYTE *)v69 + 64) = v28;
      }
      v30 = (id *)(v67 + 9);
      v31 = *((unsigned __int8 *)v67 + 80);
      if (v31 == 255)
      {
        v69[9] = *v30;
        *((_BYTE *)v69 + 80) = *((_BYTE *)v67 + 80);
      }
      else
      {
        v32 = *v30;
        sub_1DA4E762C(*v30, *((_BYTE *)v67 + 80));
        v69[9] = v32;
        *((_BYTE *)v69 + 80) = v31;
      }
      v33 = (id *)(v67 + 11);
      v34 = *((unsigned __int8 *)v67 + 96);
      if (v34 == 255)
      {
        v69[11] = *v33;
        *((_BYTE *)v69 + 96) = *((_BYTE *)v67 + 96);
      }
      else
      {
        v35 = *v33;
        sub_1DA4E762C(*v33, *((_BYTE *)v67 + 96));
        v69[11] = v35;
        *((_BYTE *)v69 + 96) = v34;
      }
      v36 = (id *)(v67 + 13);
      v37 = *((unsigned __int8 *)v67 + 112);
      if (v37 == 255)
      {
        v69[13] = *v36;
        *((_BYTE *)v69 + 112) = *((_BYTE *)v67 + 112);
      }
      else
      {
        v38 = *v36;
        sub_1DA4E762C(*v36, *((_BYTE *)v67 + 112));
        v69[13] = v38;
        *((_BYTE *)v69 + 112) = v37;
      }
      v39 = (id *)(v67 + 15);
      v40 = *((unsigned __int8 *)v67 + 128);
      if (v40 == 255)
      {
        v69[15] = *v39;
        *((_BYTE *)v69 + 128) = *((_BYTE *)v67 + 128);
      }
      else
      {
        v41 = *v39;
        sub_1DA4E762C(*v39, *((_BYTE *)v67 + 128));
        v69[15] = v41;
        *((_BYTE *)v69 + 128) = v40;
      }
      *((_BYTE *)v69 + 129) = *((_BYTE *)v67 + 129);
      v42 = v20[11];
      v43 = (char *)v69 + v42;
      v44 = (char *)v67 + v42;
      v45 = sub_1DA66C928();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      v46 = v20[12];
      v47 = (_QWORD *)((char *)v69 + v46);
      v48 = (_QWORD *)((char *)v67 + v46);
      v49 = v48[1];
      *v47 = *v48;
      v47[1] = v49;
      *((_BYTE *)v69 + v20[13]) = *((_BYTE *)v67 + v20[13]);
      *((_BYTE *)v69 + v20[14]) = *((_BYTE *)v67 + v20[14]);
      *((_BYTE *)v69 + v20[15]) = *((_BYTE *)v67 + v20[15]);
      v50 = v20[16];
      v51 = (_QWORD *)((char *)v69 + v50);
      v52 = (_QWORD *)((char *)v67 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      v54 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v65 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(v69, 0, 1, v20);
    }
    v55 = v22[19];
    v56 = (char *)v4 + v55;
    v57 = (char *)a2 + v55;
    v58 = *((_QWORD *)v57 + 1);
    if (v58 >> 60 == 15)
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
    else
    {
      v59 = *(_QWORD *)v57;
      sub_1DA498750(*(_QWORD *)v57, *((_QWORD *)v57 + 1));
      *(_QWORD *)v56 = v59;
      *((_QWORD *)v56 + 1) = v58;
    }
    v60 = v22[20];
    v61 = (char *)v4 + v60;
    v62 = (char *)a2 + v60;
    if (v70((char *)a2 + v60, 1, v72))
    {
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v61, v62, v72);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v61, 0, 1, v72);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return v4;
}

_QWORD *initializeWithCopy for FetchShowLatestEpisodesIntent(_QWORD *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unsigned int (*v66)(char *, uint64_t, int *);
  _QWORD *v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v70;

  v5 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v7 = (void *)*((_QWORD *)a2 + 2);
  v6 = *((_QWORD *)a2 + 3);
  a1[2] = v7;
  a1[3] = v6;
  v8 = *((_QWORD *)a2 + 5);
  a1[4] = *((_QWORD *)a2 + 4);
  a1[5] = v8;
  v9 = (int *)type metadata accessor for ShowEntity();
  v10 = v9[8];
  __dst = (char *)a1 + v10;
  v11 = &a2[v10];
  v12 = sub_1DA66C358();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  v15 = v7;
  swift_bridgeObjectRetain();
  v68 = v14;
  v70 = v12;
  v64 = v13;
  if (v14(v11, 1, v12))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  *(_QWORD *)((char *)a1 + v9[9]) = *(_QWORD *)&a2[v9[9]];
  *(_QWORD *)((char *)a1 + v9[10]) = *(_QWORD *)&a2[v9[10]];
  *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)&a2[v9[11]];
  *(_QWORD *)((char *)a1 + v9[12]) = *(_QWORD *)&a2[v9[12]];
  *(_QWORD *)((char *)a1 + v9[13]) = *(_QWORD *)&a2[v9[13]];
  *(_QWORD *)((char *)a1 + v9[14]) = *(_QWORD *)&a2[v9[14]];
  *(_QWORD *)((char *)a1 + v9[15]) = *(_QWORD *)&a2[v9[15]];
  *(_QWORD *)((char *)a1 + v9[16]) = *(_QWORD *)&a2[v9[16]];
  *(_QWORD *)((char *)a1 + v9[17]) = *(_QWORD *)&a2[v9[17]];
  v17 = v9[18];
  v67 = (_QWORD *)((char *)a1 + v17);
  v65 = &a2[v17];
  v18 = (int *)sub_1DA66CA0C();
  v63 = *((_QWORD *)v18 - 1);
  v66 = *(unsigned int (**)(char *, uint64_t, int *))(v63 + 48);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v66(v65, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v67, v65, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    v20 = v9;
  }
  else
  {
    v21 = *((_QWORD *)v65 + 1);
    *v67 = *(_QWORD *)v65;
    v67[1] = v21;
    v22 = v65[32];
    swift_bridgeObjectRetain();
    if (v22 == 255)
    {
      *((_OWORD *)v67 + 1) = *((_OWORD *)v65 + 1);
      *((_BYTE *)v67 + 32) = v65[32];
    }
    else
    {
      v23 = *((_QWORD *)v65 + 2);
      v24 = *((_QWORD *)v65 + 3);
      sub_1DA481390(v23, v24, v22);
      v67[2] = v23;
      v67[3] = v24;
      *((_BYTE *)v67 + 32) = v22;
    }
    v20 = v9;
    *(_OWORD *)(v67 + 5) = *(_OWORD *)(v65 + 40);
    v25 = (id *)(v65 + 56);
    v26 = v65[64];
    if (v26 == 255)
    {
      v67[7] = *v25;
      *((_BYTE *)v67 + 64) = v65[64];
    }
    else
    {
      v27 = *v25;
      sub_1DA4E762C(*v25, v65[64]);
      v67[7] = v27;
      *((_BYTE *)v67 + 64) = v26;
    }
    v28 = (id *)(v65 + 72);
    v29 = v65[80];
    if (v29 == 255)
    {
      v67[9] = *v28;
      *((_BYTE *)v67 + 80) = v65[80];
    }
    else
    {
      v30 = *v28;
      sub_1DA4E762C(*v28, v65[80]);
      v67[9] = v30;
      *((_BYTE *)v67 + 80) = v29;
    }
    v31 = (id *)(v65 + 88);
    v32 = v65[96];
    if (v32 == 255)
    {
      v67[11] = *v31;
      *((_BYTE *)v67 + 96) = v65[96];
    }
    else
    {
      v33 = *v31;
      sub_1DA4E762C(*v31, v65[96]);
      v67[11] = v33;
      *((_BYTE *)v67 + 96) = v32;
    }
    v34 = (id *)(v65 + 104);
    v35 = v65[112];
    if (v35 == 255)
    {
      v67[13] = *v34;
      *((_BYTE *)v67 + 112) = v65[112];
    }
    else
    {
      v36 = *v34;
      sub_1DA4E762C(*v34, v65[112]);
      v67[13] = v36;
      *((_BYTE *)v67 + 112) = v35;
    }
    v37 = (id *)(v65 + 120);
    v38 = v65[128];
    if (v38 == 255)
    {
      v67[15] = *v37;
      *((_BYTE *)v67 + 128) = v65[128];
    }
    else
    {
      v39 = *v37;
      sub_1DA4E762C(*v37, v65[128]);
      v67[15] = v39;
      *((_BYTE *)v67 + 128) = v38;
    }
    *((_BYTE *)v67 + 129) = v65[129];
    v40 = v18[11];
    v41 = (char *)v67 + v40;
    v42 = &v65[v40];
    v43 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = v18[12];
    v45 = (_QWORD *)((char *)v67 + v44);
    v46 = &v65[v44];
    v47 = *((_QWORD *)v46 + 1);
    *v45 = *(_QWORD *)v46;
    v45[1] = v47;
    *((_BYTE *)v67 + v18[13]) = v65[v18[13]];
    *((_BYTE *)v67 + v18[14]) = v65[v18[14]];
    *((_BYTE *)v67 + v18[15]) = v65[v18[15]];
    v48 = v18[16];
    v49 = (_QWORD *)((char *)v67 + v48);
    v50 = &v65[v48];
    v51 = *((_QWORD *)v50 + 1);
    *v49 = *(_QWORD *)v50;
    v49[1] = v51;
    v52 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v63 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v52(v67, 0, 1, v18);
  }
  v53 = v20[19];
  v54 = (char *)a1 + v53;
  v55 = &a2[v53];
  v56 = *((_QWORD *)v55 + 1);
  if (v56 >> 60 == 15)
  {
    *(_OWORD *)v54 = *(_OWORD *)v55;
  }
  else
  {
    v57 = *(_QWORD *)v55;
    sub_1DA498750(*(_QWORD *)v55, *((_QWORD *)v55 + 1));
    *(_QWORD *)v54 = v57;
    *((_QWORD *)v54 + 1) = v56;
  }
  v58 = v20[20];
  v59 = (char *)a1 + v58;
  v60 = &a2[v58];
  if (v68(&a2[v58], 1, v70))
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v59, v60, v70);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v59, 0, 1, v70);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithCopy for FetchShowLatestEpisodesIntent(char *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, int *);
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  __int128 *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  __int128 v40;
  id *v41;
  int v42;
  id v43;
  id v44;
  id *v45;
  int v46;
  id v47;
  id v48;
  id *v49;
  int v50;
  id v51;
  id v52;
  id *v53;
  int v54;
  id v55;
  id v56;
  id *v57;
  int v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  void (*v71)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v72;
  uint64_t v73;
  char v74;
  __int128 v75;
  void **v76;
  void **v77;
  int v78;
  void *v79;
  void *v80;
  char v81;
  void *v82;
  char v83;
  void *v84;
  void **v85;
  void **v86;
  int v87;
  void *v88;
  void *v89;
  char v90;
  void *v91;
  char v92;
  void *v93;
  void **v94;
  void **v95;
  int v96;
  void *v97;
  void *v98;
  char v99;
  void *v100;
  char v101;
  void *v102;
  void **v103;
  void **v104;
  int v105;
  void *v106;
  void *v107;
  char v108;
  void *v109;
  char v110;
  void *v111;
  void **v112;
  void **v113;
  int v114;
  void *v115;
  void *v116;
  char v117;
  void *v118;
  char v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  _QWORD *v129;
  char *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  int v142;
  int v143;
  uint64_t v144;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)*((_QWORD *)a1 + 2);
  v7 = (void *)a2[2];
  *((_QWORD *)a1 + 2) = v7;
  v8 = v7;

  *((_QWORD *)a1 + 3) = a2[3];
  *((_QWORD *)a1 + 4) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 5) = a2[5];
  v9 = (int *)type metadata accessor for ShowEntity();
  v10 = v9[8];
  v11 = &a1[v10];
  v12 = (char *)a2 + v10;
  v13 = sub_1DA66C358();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  v148 = v15;
  v149 = v13;
  v147 = v14;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)((char *)a2 + v9[9]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)((char *)a2 + v9[10]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v9[11]] = *(_QWORD *)((char *)a2 + v9[11]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v9[12]] = *(_QWORD *)((char *)a2 + v9[12]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v9[13]] = *(_QWORD *)((char *)a2 + v9[13]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v9[14]] = *(_QWORD *)((char *)a2 + v9[14]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v9[15]] = *(_QWORD *)((char *)a2 + v9[15]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v9[16]] = *(_QWORD *)((char *)a2 + v9[16]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v9[17]] = *(_QWORD *)((char *)a2 + v9[17]);
  sub_1DA66BE60();
  swift_release();
  v19 = v9[18];
  v20 = (uint64_t)&a1[v19];
  v21 = (char *)a2 + v19;
  v22 = (int *)sub_1DA66CA0C();
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24((uint64_t)v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      v146 = a3;
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
      v27 = v21[32];
      swift_bridgeObjectRetain();
      if (v27 == 255)
      {
        v40 = *((_OWORD *)v21 + 1);
        *(_BYTE *)(v20 + 32) = v21[32];
        *(_OWORD *)(v20 + 16) = v40;
      }
      else
      {
        v28 = *((_QWORD *)v21 + 2);
        v29 = *((_QWORD *)v21 + 3);
        sub_1DA481390(v28, v29, v27);
        *(_QWORD *)(v20 + 16) = v28;
        *(_QWORD *)(v20 + 24) = v29;
        *(_BYTE *)(v20 + 32) = v27;
      }
      *(_QWORD *)(v20 + 40) = *((_QWORD *)v21 + 5);
      *(_QWORD *)(v20 + 48) = *((_QWORD *)v21 + 6);
      v41 = (id *)(v21 + 56);
      v42 = v21[64];
      if (v42 == 255)
      {
        v44 = *v41;
        *(_BYTE *)(v20 + 64) = v21[64];
        *(_QWORD *)(v20 + 56) = v44;
      }
      else
      {
        v43 = *v41;
        sub_1DA4E762C(*v41, v21[64]);
        *(_QWORD *)(v20 + 56) = v43;
        *(_BYTE *)(v20 + 64) = v42;
      }
      a3 = v146;
      v45 = (id *)(v21 + 72);
      v46 = v21[80];
      if (v46 == 255)
      {
        v48 = *v45;
        *(_BYTE *)(v20 + 80) = v21[80];
        *(_QWORD *)(v20 + 72) = v48;
      }
      else
      {
        v47 = *v45;
        sub_1DA4E762C(*v45, v21[80]);
        *(_QWORD *)(v20 + 72) = v47;
        *(_BYTE *)(v20 + 80) = v46;
      }
      v49 = (id *)(v21 + 88);
      v50 = v21[96];
      if (v50 == 255)
      {
        v52 = *v49;
        *(_BYTE *)(v20 + 96) = v21[96];
        *(_QWORD *)(v20 + 88) = v52;
      }
      else
      {
        v51 = *v49;
        sub_1DA4E762C(*v49, v21[96]);
        *(_QWORD *)(v20 + 88) = v51;
        *(_BYTE *)(v20 + 96) = v50;
      }
      v53 = (id *)(v21 + 104);
      v54 = v21[112];
      if (v54 == 255)
      {
        v56 = *v53;
        *(_BYTE *)(v20 + 112) = v21[112];
        *(_QWORD *)(v20 + 104) = v56;
      }
      else
      {
        v55 = *v53;
        sub_1DA4E762C(*v53, v21[112]);
        *(_QWORD *)(v20 + 104) = v55;
        *(_BYTE *)(v20 + 112) = v54;
      }
      v57 = (id *)(v21 + 120);
      v58 = v21[128];
      if (v58 == 255)
      {
        v60 = *v57;
        *(_BYTE *)(v20 + 128) = v21[128];
        *(_QWORD *)(v20 + 120) = v60;
      }
      else
      {
        v59 = *v57;
        sub_1DA4E762C(*v57, v21[128]);
        *(_QWORD *)(v20 + 120) = v59;
        *(_BYTE *)(v20 + 128) = v58;
      }
      *(_BYTE *)(v20 + 129) = v21[129];
      v61 = v22[11];
      v62 = v20 + v61;
      v63 = &v21[v61];
      v64 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      v65 = v22[12];
      v66 = (_QWORD *)(v20 + v65);
      v67 = &v21[v65];
      *v66 = *(_QWORD *)v67;
      v66[1] = *((_QWORD *)v67 + 1);
      *(_BYTE *)(v20 + v22[13]) = v21[v22[13]];
      *(_BYTE *)(v20 + v22[14]) = v21[v22[14]];
      *(_BYTE *)(v20 + v22[15]) = v21[v22[15]];
      v68 = v22[16];
      v69 = (_QWORD *)(v20 + v68);
      v70 = &v21[v68];
      *v69 = *(_QWORD *)v70;
      v69[1] = *((_QWORD *)v70 + 1);
      v71 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(v20, 0, 1, v22);
      goto LABEL_75;
    }
LABEL_13:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v20, v21, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_75;
  }
  if (v26)
  {
    sub_1DA4E8990(v20);
    goto LABEL_13;
  }
  v31 = a3;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = (__int128 *)(v20 + 16);
  v33 = (__int128 *)(v21 + 16);
  v34 = v21[32];
  if (*(unsigned __int8 *)(v20 + 32) == 255)
  {
    if (v34 == 255)
    {
      v75 = *v33;
      *(_BYTE *)(v20 + 32) = v21[32];
      *v32 = v75;
    }
    else
    {
      v72 = *((_QWORD *)v21 + 2);
      v73 = *((_QWORD *)v21 + 3);
      sub_1DA481390(v72, v73, v21[32]);
      *(_QWORD *)(v20 + 16) = v72;
      *(_QWORD *)(v20 + 24) = v73;
      *(_BYTE *)(v20 + 32) = v34;
    }
  }
  else if (v34 == 255)
  {
    sub_1DA4E8928(v20 + 16);
    v74 = v21[32];
    *v32 = *v33;
    *(_BYTE *)(v20 + 32) = v74;
  }
  else
  {
    v36 = *((_QWORD *)v21 + 2);
    v35 = *((_QWORD *)v21 + 3);
    sub_1DA481390(v36, v35, v21[32]);
    v37 = *(_QWORD *)(v20 + 16);
    v38 = *(_QWORD *)(v20 + 24);
    *(_QWORD *)(v20 + 16) = v36;
    *(_QWORD *)(v20 + 24) = v35;
    v39 = *(_BYTE *)(v20 + 32);
    *(_BYTE *)(v20 + 32) = v34;
    sub_1DA47F868(v37, v38, v39);
  }
  *(_QWORD *)(v20 + 40) = *((_QWORD *)v21 + 5);
  *(_QWORD *)(v20 + 48) = *((_QWORD *)v21 + 6);
  v76 = (void **)(v20 + 56);
  v77 = (void **)(v21 + 56);
  v78 = v21[64];
  if (*(unsigned __int8 *)(v20 + 64) == 255)
  {
    if (v78 == 255)
    {
      v84 = *v77;
      *(_BYTE *)(v20 + 64) = v21[64];
      *v76 = v84;
    }
    else
    {
      v82 = *v77;
      sub_1DA4E762C(v82, v21[64]);
      *(_QWORD *)(v20 + 56) = v82;
      *(_BYTE *)(v20 + 64) = v78;
    }
  }
  else if (v78 == 255)
  {
    sub_1DA4E895C(v20 + 56);
    v83 = v21[64];
    *v76 = *v77;
    *(_BYTE *)(v20 + 64) = v83;
  }
  else
  {
    v79 = *v77;
    sub_1DA4E762C(v79, v21[64]);
    v80 = *(void **)(v20 + 56);
    *(_QWORD *)(v20 + 56) = v79;
    v81 = *(_BYTE *)(v20 + 64);
    *(_BYTE *)(v20 + 64) = v78;
    sub_1DA4E7898(v80, v81);
  }
  v85 = (void **)(v20 + 72);
  v86 = (void **)(v21 + 72);
  v87 = v21[80];
  if (*(unsigned __int8 *)(v20 + 80) == 255)
  {
    if (v87 == 255)
    {
      v93 = *v86;
      *(_BYTE *)(v20 + 80) = v21[80];
      *v85 = v93;
    }
    else
    {
      v91 = *v86;
      sub_1DA4E762C(v91, v21[80]);
      *(_QWORD *)(v20 + 72) = v91;
      *(_BYTE *)(v20 + 80) = v87;
    }
  }
  else if (v87 == 255)
  {
    sub_1DA4E895C(v20 + 72);
    v92 = v21[80];
    *v85 = *v86;
    *(_BYTE *)(v20 + 80) = v92;
  }
  else
  {
    v88 = *v86;
    sub_1DA4E762C(v88, v21[80]);
    v89 = *(void **)(v20 + 72);
    *(_QWORD *)(v20 + 72) = v88;
    v90 = *(_BYTE *)(v20 + 80);
    *(_BYTE *)(v20 + 80) = v87;
    sub_1DA4E7898(v89, v90);
  }
  v94 = (void **)(v20 + 88);
  v95 = (void **)(v21 + 88);
  v96 = v21[96];
  if (*(unsigned __int8 *)(v20 + 96) == 255)
  {
    if (v96 == 255)
    {
      v102 = *v95;
      *(_BYTE *)(v20 + 96) = v21[96];
      *v94 = v102;
    }
    else
    {
      v100 = *v95;
      sub_1DA4E762C(v100, v21[96]);
      *(_QWORD *)(v20 + 88) = v100;
      *(_BYTE *)(v20 + 96) = v96;
    }
  }
  else if (v96 == 255)
  {
    sub_1DA4E895C(v20 + 88);
    v101 = v21[96];
    *v94 = *v95;
    *(_BYTE *)(v20 + 96) = v101;
  }
  else
  {
    v97 = *v95;
    sub_1DA4E762C(v97, v21[96]);
    v98 = *(void **)(v20 + 88);
    *(_QWORD *)(v20 + 88) = v97;
    v99 = *(_BYTE *)(v20 + 96);
    *(_BYTE *)(v20 + 96) = v96;
    sub_1DA4E7898(v98, v99);
  }
  v103 = (void **)(v20 + 104);
  v104 = (void **)(v21 + 104);
  v105 = v21[112];
  if (*(unsigned __int8 *)(v20 + 112) == 255)
  {
    if (v105 == 255)
    {
      v111 = *v104;
      *(_BYTE *)(v20 + 112) = v21[112];
      *v103 = v111;
    }
    else
    {
      v109 = *v104;
      sub_1DA4E762C(v109, v21[112]);
      *(_QWORD *)(v20 + 104) = v109;
      *(_BYTE *)(v20 + 112) = v105;
    }
  }
  else if (v105 == 255)
  {
    sub_1DA4E895C(v20 + 104);
    v110 = v21[112];
    *v103 = *v104;
    *(_BYTE *)(v20 + 112) = v110;
  }
  else
  {
    v106 = *v104;
    sub_1DA4E762C(v106, v21[112]);
    v107 = *(void **)(v20 + 104);
    *(_QWORD *)(v20 + 104) = v106;
    v108 = *(_BYTE *)(v20 + 112);
    *(_BYTE *)(v20 + 112) = v105;
    sub_1DA4E7898(v107, v108);
  }
  v112 = (void **)(v20 + 120);
  v113 = (void **)(v21 + 120);
  v114 = v21[128];
  if (*(unsigned __int8 *)(v20 + 128) == 255)
  {
    if (v114 == 255)
    {
      v120 = *v113;
      *(_BYTE *)(v20 + 128) = v21[128];
      *v112 = v120;
    }
    else
    {
      v118 = *v113;
      sub_1DA4E762C(v118, v21[128]);
      *(_QWORD *)(v20 + 120) = v118;
      *(_BYTE *)(v20 + 128) = v114;
    }
  }
  else if (v114 == 255)
  {
    sub_1DA4E895C(v20 + 120);
    v119 = v21[128];
    *v112 = *v113;
    *(_BYTE *)(v20 + 128) = v119;
  }
  else
  {
    v115 = *v113;
    sub_1DA4E762C(v115, v21[128]);
    v116 = *(void **)(v20 + 120);
    *(_QWORD *)(v20 + 120) = v115;
    v117 = *(_BYTE *)(v20 + 128);
    *(_BYTE *)(v20 + 128) = v114;
    sub_1DA4E7898(v116, v117);
  }
  a3 = v31;
  *(_BYTE *)(v20 + 129) = v21[129];
  v121 = v22[11];
  v122 = v20 + v121;
  v123 = &v21[v121];
  v124 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 24))(v122, v123, v124);
  v125 = v22[12];
  v126 = (_QWORD *)(v20 + v125);
  v127 = &v21[v125];
  *v126 = *(_QWORD *)v127;
  v126[1] = *((_QWORD *)v127 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + v22[13]) = v21[v22[13]];
  *(_BYTE *)(v20 + v22[14]) = v21[v22[14]];
  *(_BYTE *)(v20 + v22[15]) = v21[v22[15]];
  v128 = v22[16];
  v129 = (_QWORD *)(v20 + v128);
  v130 = &v21[v128];
  *v129 = *(_QWORD *)v130;
  v129[1] = *((_QWORD *)v130 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_75:
  v131 = v9[19];
  v132 = (uint64_t *)&a1[v131];
  v133 = (_QWORD *)((char *)a2 + v131);
  v134 = *(_QWORD *)((char *)a2 + v131 + 8);
  if (*(_QWORD *)&a1[v131 + 8] >> 60 == 15)
  {
    if (v134 >> 60 != 15)
    {
      v135 = *v133;
      sub_1DA498750(v135, v134);
      *v132 = v135;
      v132[1] = v134;
      goto LABEL_82;
    }
    goto LABEL_80;
  }
  if (v134 >> 60 == 15)
  {
    sub_1DA4E89CC((uint64_t)v132);
LABEL_80:
    *(_OWORD *)v132 = *(_OWORD *)v133;
    goto LABEL_82;
  }
  v136 = *v133;
  sub_1DA498750(v136, v134);
  v137 = *v132;
  v138 = v132[1];
  *v132 = v136;
  v132[1] = v134;
  sub_1DA4986F8(v137, v138);
LABEL_82:
  v139 = v9[20];
  v140 = &a1[v139];
  v141 = (char *)a2 + v139;
  v142 = v148(&a1[v139], 1, v149);
  v143 = v148(v141, 1, v149);
  if (!v142)
  {
    if (!v143)
    {
      (*(void (**)(char *, char *, uint64_t))(v147 + 24))(v140, v141, v149);
      goto LABEL_88;
    }
    (*(void (**)(char *, uint64_t))(v147 + 8))(v140, v149);
    goto LABEL_87;
  }
  if (v143)
  {
LABEL_87:
    v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
    goto LABEL_88;
  }
  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v140, v141, v149);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v140, 0, 1, v149);
LABEL_88:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for FetchShowLatestEpisodesIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(const void *, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (int *)type metadata accessor for ShowEntity();
  v7 = v6[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DA66C358();
  v11 = *(_QWORD *)(v10 - 8);
  v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v33(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  *(_QWORD *)(a1 + v6[11]) = *(_QWORD *)(a2 + v6[11]);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_QWORD *)(a1 + v6[13]) = *(_QWORD *)(a2 + v6[13]);
  *(_QWORD *)(a1 + v6[14]) = *(_QWORD *)(a2 + v6[14]);
  *(_QWORD *)(a1 + v6[15]) = *(_QWORD *)(a2 + v6[15]);
  *(_QWORD *)(a1 + v6[16]) = *(_QWORD *)(a2 + v6[16]);
  *(_QWORD *)(a1 + v6[17]) = *(_QWORD *)(a2 + v6[17]);
  v13 = v6[18];
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = (int *)sub_1DA66CA0C();
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = v15[1];
    *v14 = *v15;
    v14[1] = v19;
    *((_BYTE *)v14 + 32) = *((_BYTE *)v15 + 32);
    *(_OWORD *)((char *)v14 + 40) = *(_OWORD *)((char *)v15 + 40);
    *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
    *((_BYTE *)v14 + 64) = *((_BYTE *)v15 + 64);
    *(_OWORD *)((char *)v14 + 113) = *(_OWORD *)((char *)v15 + 113);
    *(_OWORD *)((char *)v14 + 104) = *(_OWORD *)((char *)v15 + 104);
    *(_OWORD *)((char *)v14 + 88) = *(_OWORD *)((char *)v15 + 88);
    *(_OWORD *)((char *)v14 + 72) = *(_OWORD *)((char *)v15 + 72);
    *((_BYTE *)v14 + 129) = *((_BYTE *)v15 + 129);
    v20 = v16[11];
    v31 = v11;
    v32 = a3;
    v21 = (char *)v14 + v20;
    v22 = (char *)v15 + v20;
    v23 = sub_1DA66C928();
    v24 = v21;
    v25 = v22;
    v11 = v31;
    a3 = v32;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v24, v25, v23);
    *(_OWORD *)((char *)v14 + v16[12]) = *(_OWORD *)((char *)v15 + v16[12]);
    *((_BYTE *)v14 + v16[13]) = *((_BYTE *)v15 + v16[13]);
    *((_BYTE *)v14 + v16[14]) = *((_BYTE *)v15 + v16[14]);
    *((_BYTE *)v14 + v16[15]) = *((_BYTE *)v15 + v16[15]);
    *(_OWORD *)((char *)v14 + v16[16]) = *(_OWORD *)((char *)v15 + v16[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_OWORD *)(a1 + v6[19]) = *(_OWORD *)(a2 + v6[19]);
  v26 = v6[20];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  if (v33((const void *)(a2 + v26), 1, v10))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v27, v28, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

char *assignWithTake for FetchShowLatestEpisodesIntent(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, int *);
  int v25;
  int v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v46;
  _OWORD *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  int v53;
  int v54;
  void *v55;
  _QWORD *v56;
  int v57;
  int v58;
  void *v59;
  _QWORD *v60;
  int v61;
  int v62;
  void *v63;
  _QWORD *v64;
  int v65;
  int v66;
  void *v67;
  _QWORD *v68;
  int v69;
  int v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)*((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = a2[2];

  v8 = a2[4];
  *((_QWORD *)a1 + 3) = a2[3];
  *((_QWORD *)a1 + 4) = v8;
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 5) = a2[5];
  v9 = (int *)type metadata accessor for ShowEntity();
  v10 = v9[8];
  v11 = &a1[v10];
  v12 = (char *)a2 + v10;
  v13 = sub_1DA66C358();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  v87 = v14;
  v88 = a3;
  v86 = v15;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)((char *)a2 + v9[9]);
  swift_release();
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)((char *)a2 + v9[10]);
  swift_release();
  *(_QWORD *)&a1[v9[11]] = *(_QWORD *)((char *)a2 + v9[11]);
  swift_release();
  *(_QWORD *)&a1[v9[12]] = *(_QWORD *)((char *)a2 + v9[12]);
  swift_release();
  *(_QWORD *)&a1[v9[13]] = *(_QWORD *)((char *)a2 + v9[13]);
  swift_release();
  *(_QWORD *)&a1[v9[14]] = *(_QWORD *)((char *)a2 + v9[14]);
  swift_release();
  *(_QWORD *)&a1[v9[15]] = *(_QWORD *)((char *)a2 + v9[15]);
  swift_release();
  *(_QWORD *)&a1[v9[16]] = *(_QWORD *)((char *)a2 + v9[16]);
  swift_release();
  *(_QWORD *)&a1[v9[17]] = *(_QWORD *)((char *)a2 + v9[17]);
  swift_release();
  v19 = v9[18];
  v20 = (uint64_t)&a1[v19];
  v21 = (char *)a2 + v19;
  v22 = (int *)sub_1DA66CA0C();
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24((uint64_t)v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      v27 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *(_OWORD *)(v20 + 16) = v27;
      *(_BYTE *)(v20 + 32) = v21[32];
      *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
      *(_QWORD *)(v20 + 56) = *((_QWORD *)v21 + 7);
      *(_BYTE *)(v20 + 64) = v21[64];
      *(_OWORD *)(v20 + 113) = *(_OWORD *)(v21 + 113);
      *(_OWORD *)(v20 + 104) = *(_OWORD *)(v21 + 104);
      *(_OWORD *)(v20 + 88) = *(_OWORD *)(v21 + 88);
      *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
      *(_BYTE *)(v20 + 129) = v21[129];
      v28 = v22[11];
      v29 = v20 + v28;
      v30 = &v21[v28];
      v31 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      *(_OWORD *)(v20 + v22[12]) = *(_OWORD *)&v21[v22[12]];
      *(_BYTE *)(v20 + v22[13]) = v21[v22[13]];
      *(_BYTE *)(v20 + v22[14]) = v21[v22[14]];
      *(_BYTE *)(v20 + v22[15]) = v21[v22[15]];
      *(_OWORD *)(v20 + v22[16]) = *(_OWORD *)&v21[v22[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    sub_1DA4E8990(v20);
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  v46 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v46;
  swift_bridgeObjectRelease();
  v47 = v21 + 16;
  v48 = *(unsigned __int8 *)(v20 + 32);
  if (v48 != 255)
  {
    v49 = v21[32];
    if (v49 != 255)
    {
      v50 = *(_QWORD *)(v20 + 16);
      v51 = *(_QWORD *)(v20 + 24);
      *(_OWORD *)(v20 + 16) = *v47;
      *(_BYTE *)(v20 + 32) = v49;
      sub_1DA47F868(v50, v51, v48);
      goto LABEL_32;
    }
    sub_1DA4E8928(v20 + 16);
  }
  *(_OWORD *)(v20 + 16) = *v47;
  *(_BYTE *)(v20 + 32) = v21[32];
LABEL_32:
  *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
  v52 = v21 + 56;
  v53 = *(unsigned __int8 *)(v20 + 64);
  if (v53 != 255)
  {
    v54 = v21[64];
    if (v54 != 255)
    {
      v55 = *(void **)(v20 + 56);
      *(_QWORD *)(v20 + 56) = *v52;
      *(_BYTE *)(v20 + 64) = v54;
      sub_1DA4E7898(v55, v53);
      goto LABEL_37;
    }
    sub_1DA4E895C(v20 + 56);
  }
  *(_QWORD *)(v20 + 56) = *v52;
  *(_BYTE *)(v20 + 64) = v21[64];
LABEL_37:
  v56 = v21 + 72;
  v57 = *(unsigned __int8 *)(v20 + 80);
  if (v57 != 255)
  {
    v58 = v21[80];
    if (v58 != 255)
    {
      v59 = *(void **)(v20 + 72);
      *(_QWORD *)(v20 + 72) = *v56;
      *(_BYTE *)(v20 + 80) = v58;
      sub_1DA4E7898(v59, v57);
      goto LABEL_42;
    }
    sub_1DA4E895C(v20 + 72);
  }
  *(_QWORD *)(v20 + 72) = *v56;
  *(_BYTE *)(v20 + 80) = v21[80];
LABEL_42:
  v60 = v21 + 88;
  v61 = *(unsigned __int8 *)(v20 + 96);
  if (v61 != 255)
  {
    v62 = v21[96];
    if (v62 != 255)
    {
      v63 = *(void **)(v20 + 88);
      *(_QWORD *)(v20 + 88) = *v60;
      *(_BYTE *)(v20 + 96) = v62;
      sub_1DA4E7898(v63, v61);
      goto LABEL_47;
    }
    sub_1DA4E895C(v20 + 88);
  }
  *(_QWORD *)(v20 + 88) = *v60;
  *(_BYTE *)(v20 + 96) = v21[96];
LABEL_47:
  v64 = v21 + 104;
  v65 = *(unsigned __int8 *)(v20 + 112);
  if (v65 != 255)
  {
    v66 = v21[112];
    if (v66 != 255)
    {
      v67 = *(void **)(v20 + 104);
      *(_QWORD *)(v20 + 104) = *v64;
      *(_BYTE *)(v20 + 112) = v66;
      sub_1DA4E7898(v67, v65);
      goto LABEL_52;
    }
    sub_1DA4E895C(v20 + 104);
  }
  *(_QWORD *)(v20 + 104) = *v64;
  *(_BYTE *)(v20 + 112) = v21[112];
LABEL_52:
  v68 = v21 + 120;
  v69 = *(unsigned __int8 *)(v20 + 128);
  if (v69 == 255)
  {
LABEL_56:
    *(_QWORD *)(v20 + 120) = *v68;
    *(_BYTE *)(v20 + 128) = v21[128];
    goto LABEL_57;
  }
  v70 = v21[128];
  if (v70 == 255)
  {
    sub_1DA4E895C(v20 + 120);
    goto LABEL_56;
  }
  v71 = *(void **)(v20 + 120);
  *(_QWORD *)(v20 + 120) = *v68;
  *(_BYTE *)(v20 + 128) = v70;
  sub_1DA4E7898(v71, v69);
LABEL_57:
  *(_BYTE *)(v20 + 129) = v21[129];
  v72 = v22[11];
  v73 = v20 + v72;
  v74 = &v21[v72];
  v75 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 40))(v73, v74, v75);
  v76 = v22[12];
  v77 = (_QWORD *)(v20 + v76);
  v78 = &v21[v76];
  v80 = *(_QWORD *)v78;
  v79 = *((_QWORD *)v78 + 1);
  *v77 = v80;
  v77[1] = v79;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + v22[13]) = v21[v22[13]];
  *(_BYTE *)(v20 + v22[14]) = v21[v22[14]];
  *(_BYTE *)(v20 + v22[15]) = v21[v22[15]];
  v81 = v22[16];
  v82 = (_QWORD *)(v20 + v81);
  v83 = &v21[v81];
  v85 = *(_QWORD *)v83;
  v84 = *((_QWORD *)v83 + 1);
  *v82 = v85;
  v82[1] = v84;
  swift_bridgeObjectRelease();
LABEL_13:
  v33 = v9[19];
  v34 = (uint64_t)&a1[v33];
  v35 = (char *)a2 + v33;
  v36 = *(_QWORD *)&a1[v33 + 8];
  if (v36 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)v34 = *(_OWORD *)v35;
    goto LABEL_18;
  }
  v37 = *((_QWORD *)v35 + 1);
  if (v37 >> 60 == 15)
  {
    sub_1DA4E89CC(v34);
    goto LABEL_16;
  }
  v38 = *(_QWORD *)v34;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = v37;
  sub_1DA4986F8(v38, v36);
LABEL_18:
  v39 = v9[20];
  v40 = &a1[v39];
  v41 = (char *)a2 + v39;
  v42 = v86(&a1[v39], 1, v13);
  v43 = v86(v41, 1, v13);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v40, v41, v13);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v87 + 8))(v40, v13);
    goto LABEL_23;
  }
  if (v43)
  {
LABEL_23:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v40, v41, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v40, 0, 1, v13);
LABEL_24:
  *(_QWORD *)&a1[*(int *)(v88 + 20)] = *(_QWORD *)((char *)a2 + *(int *)(v88 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchShowLatestEpisodesIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA637F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShowEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FetchShowLatestEpisodesIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA637F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShowEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DA637FCC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ShowEntity();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *static Dependencies.allDependencies()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;

  v64 = sub_1DA66EBD8();
  v58 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v54 = (char *)&v54 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v59 = (char *)&v54 - v2;
  MEMORY[0x1E0C80A78](v3);
  v57 = (char *)&v54 - v4;
  MEMORY[0x1E0C80A78](v5);
  v56 = (char *)&v54 - v6;
  MEMORY[0x1E0C80A78](v7);
  v72 = (char *)&v54 - v8;
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)&v54 - v10;
  MEMORY[0x1E0C80A78](v11);
  v70 = (char *)&v54 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v54 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v54 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v54 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v54 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v54 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v54 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v54 - v32;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v54 - v35;
  v37 = _s18PodcastsFoundation12DependenciesO0A2UIE03allC09JetEngine15BaseObjectGraphCyFZ_0();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2030);
  v60 = v37;
  sub_1DA66BE60();
  v61 = v36;
  sub_1DA66EBC0();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE2040);
  v62 = v33;
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1EA8);
  v63 = v30;
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E90);
  v65 = v27;
  sub_1DA66EBC0();
  sub_1DA66F4FC();
  v66 = v24;
  sub_1DA66EBC0();
  type metadata accessor for ExplicitContentPresenter();
  v67 = v21;
  sub_1DA66EBC0();
  type metadata accessor for LazyJSStack();
  v68 = v18;
  sub_1DA66EBC0();
  type metadata accessor for AssetCaches();
  v69 = v15;
  sub_1DA66EBC0();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2018);
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0170);
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3DC0);
  sub_1DA66EBC0();
  if (objc_msgSend((id)objc_opt_self(), sel_supportsLocalLibrary))
  {
    sub_1DA66D660();
    v38 = v56;
    sub_1DA66EBC0();
    sub_1DA66DA14();
    v39 = v57;
    sub_1DA66EBC0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3B48);
    v40 = v59;
    sub_1DA66EBC0();
    sub_1DA66EE30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D48);
    v41 = v58;
    v42 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1DA678510;
    (*(void (**)(unint64_t, char *, uint64_t))(v41 + 16))(v43 + v42, v38, v64);
    sub_1DA66EE00();
    sub_1DA66EE0C();
    v55 = sub_1DA66EE0C();
    swift_release();
    swift_release();
    v44 = *(void (**)(char *, uint64_t))(v41 + 8);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FC0);
    v38 = v56;
    sub_1DA66EBC0();
    sub_1DA66DBE8();
    v39 = v57;
    sub_1DA66EBC0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FC8);
    v40 = v59;
    sub_1DA66EBC0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FD0);
    v45 = v54;
    sub_1DA66EBC0();
    sub_1DA66EE30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D48);
    v46 = v58;
    v47 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1DA678510;
    v49 = v64;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 16))(v48 + v47, v38, v64);
    sub_1DA66EE00();
    sub_1DA66EE0C();
    sub_1DA66EE0C();
    v55 = sub_1DA66EE0C();
    swift_release();
    swift_release();
    swift_release();
    v44 = *(void (**)(char *, uint64_t))(v46 + 8);
    v44(v45, v49);
  }
  v50 = v64;
  v44(v40, v64);
  v44(v39, v50);
  v44(v38, v50);
  sub_1DA66BE60();
  v59 = (char *)sub_1DA66EE0C();
  swift_release();
  sub_1DA66BE60();
  v51 = sub_1DA66EE0C();
  swift_release();
  v58 = v51;
  sub_1DA66BE60();
  v57 = (char *)sub_1DA66EE0C();
  swift_release();
  sub_1DA66BE60();
  v52 = sub_1DA66EE0C();
  swift_release();
  v54 = (char *)v52;
  sub_1DA66BE60();
  sub_1DA66EE0C();
  swift_release();
  sub_1DA66BE60();
  sub_1DA66EE0C();
  swift_release();
  sub_1DA66BE60();
  sub_1DA66EE0C();
  swift_release();
  sub_1DA66BE60();
  sub_1DA66EE0C();
  swift_release();
  sub_1DA66BE60();
  sub_1DA66EE0C();
  swift_release();
  sub_1DA66BE60();
  sub_1DA66EE0C();
  swift_release();
  sub_1DA66BE60();
  sub_1DA66EE0C();
  swift_release();
  sub_1DA66BE60();
  v56 = (char *)sub_1DA66EE18();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  v44(v72, v50);
  v44(v71, v50);
  v44(v70, v50);
  v44(v69, v50);
  v44(v68, v50);
  v44(v67, v50);
  v44(v66, v50);
  v44(v65, v50);
  v44(v63, v50);
  v44(v62, v50);
  v44(v61, v50);
  return v56;
}

id sub_1DA638970@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA638998((SEL *)&selRef_ams_sharedAccountStore, a1);
}

id sub_1DA638984@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA638998((SEL *)&selRef_currentProcess, a1);
}

id sub_1DA638998@<X0>(SEL *a1@<X1>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), *a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DA6389D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA638D08((unint64_t *)&qword_1EDAE2030, MEMORY[0x1E0D416D0], a1);
}

unint64_t sub_1DA6389F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;

  v2 = sub_1DA66FDF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66EE30();
  sub_1DA66EE24();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0D7EF98], v2);
  v6 = sub_1DA4EAF00((uint64_t)v5);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for UserPreferences();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  result = sub_1DA63921C();
  *a1 = v7;
  a1[1] = result;
  return result;
}

uint64_t sub_1DA638AD0()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_bagProfileName);
  sub_1DA66F8BC();

  v2 = objc_msgSend(v0, sel_bagProfileVersion);
  sub_1DA66F8BC();

  v3 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bagForProfile_profileVersion_, v3, v4);

  return sub_1DA66F4A8();
}

uint64_t sub_1DA638BCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  type metadata accessor for ExplicitContentPresenter();
  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A0);
  result = swift_allocObject();
  *(_DWORD *)(result + 20) = 0;
  *(_BYTE *)(result + 16) = 2;
  *(_QWORD *)(v2 + 16) = result;
  *a1 = v2;
  return result;
}

uint64_t sub_1DA638C2C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA638E24((void (*)(_QWORD))type metadata accessor for LazyJSStack, LazyJSStack.__allocating_init(asPartOf:), a1);
}

uint64_t sub_1DA638C40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDAE0190 != -1)
    swift_once();
  v2 = type metadata accessor for AssetCaches();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDAE0178);
  return sub_1DA484548(v3, a1);
}

id sub_1DA638C9C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2018);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultStore);
  *a1 = result;
  return result;
}

uint64_t sub_1DA638CEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA638D08((unint64_t *)&qword_1EDAE2018, (uint64_t)&protocol witness table for MTImageStore, a1);
}

uint64_t sub_1DA638D08@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1DA66EE30();
  sub_1DA66EE24();
  *(_QWORD *)(a3 + 24) = sub_1DA47D774(0, a1);
  *(_QWORD *)(a3 + 32) = a2;
  sub_1DA66EDDC();
  return swift_release();
}

uint64_t sub_1DA638D78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  __int128 v5;

  sub_1DA66EE30();
  sub_1DA66EE24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  sub_1DA66EDDC();
  swift_release();
  v2 = type metadata accessor for NowPlayingArtworkProvider();
  v3 = swift_allocObject();
  result = sub_1DA4841BC(&v5, v3 + 16);
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for NowPlayingArtworkProvider;
  *a1 = v3;
  return result;
}

uint64_t sub_1DA638E10@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA638E24((void (*)(_QWORD))MEMORY[0x1E0D7E688], (uint64_t (*)(uint64_t))MediaSpaceCalculator.init(asPartOf:), a1);
}

uint64_t sub_1DA638E24@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  a1(0);
  sub_1DA66EE30();
  v5 = sub_1DA66EE24();
  result = a2(v5);
  *a3 = result;
  return result;
}

uint64_t sub_1DA638E78()
{
  sub_1DA66EE30();
  sub_1DA66EE24();
  sub_1DA66D660();
  sub_1DA66EDDC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C20);
  sub_1DA66EDDC();
  sub_1DA66DA08();
  return swift_release();
}

_QWORD *sub_1DA638F00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D18);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DA678FF0;
  sub_1DA66EE30();
  v3 = sub_1DA66EE24();
  v4 = type metadata accessor for RestorePurgedEpisodesTipProvider();
  swift_allocObject();
  v5 = RestorePurgedEpisodesTipProvider.init(asPartOf:)(v3);
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = &protocol witness table for RestorePurgedEpisodesTipProvider;
  *(_QWORD *)(v2 + 32) = v5;
  v6 = sub_1DA66EE24();
  v7 = type metadata accessor for JSLibraryStorageTipProvider();
  swift_allocObject();
  v8 = JSLibraryStorageTipProvider.init(asPartOf:)(v6);
  *(_QWORD *)(v2 + 96) = v7;
  *(_QWORD *)(v2 + 104) = &protocol witness table for JSLibraryStorageTipProvider;
  *(_QWORD *)(v2 + 72) = v8;
  v9 = sub_1DA66EE24();
  v10 = type metadata accessor for RemoveAbandonedDownloadsTipProvider();
  swift_allocObject();
  result = RemoveAbandonedDownloadsTipProvider.init(asPartOf:)(v9);
  *(_QWORD *)(v2 + 136) = v10;
  *(_QWORD *)(v2 + 144) = &protocol witness table for RemoveAbandonedDownloadsTipProvider;
  *(_QWORD *)(v2 + 112) = result;
  a1[3] = (uint64_t)&type metadata for OrderedTipProvider;
  a1[4] = (uint64_t)&protocol witness table for OrderedTipProvider;
  *a1 = v2;
  return result;
}

uint64_t sub_1DA639044@<X0>(uint64_t *a1@<X8>)
{
  sub_1DA66EE30();
  sub_1DA66EE24();
  a1[3] = (uint64_t)&type metadata for ThinClientEpisodeStateNetworking;
  a1[4] = sub_1DA4EB93C();
  *a1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
  sub_1DA66EDDC();
  return swift_release();
}

uint64_t sub_1DA6390C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1DA66DBE8();
  sub_1DA66EE30();
  sub_1DA66EE24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FC0);
  sub_1DA66EDDC();
  v2 = sub_1DA66DBDC();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1DA63914C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA639164(&qword_1F0268FC8, a1);
}

uint64_t sub_1DA639158@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA639164(&qword_1F0268FD0, a1);
}

uint64_t sub_1DA639164@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  sub_1DA66EE30();
  sub_1DA66EE24();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  sub_1DA66DBE8();
  sub_1DA66EDDC();
  v4 = sub_1DA66DC48();
  result = swift_release();
  *a2 = v4;
  return result;
}

ValueMetadata *type metadata accessor for Dependencies()
{
  return &type metadata for Dependencies;
}

uint64_t sub_1DA6391F8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_1DA63921C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE07D8;
  if (!qword_1EDAE07D8)
  {
    v1 = type metadata accessor for UserPreferences();
    result = MEMORY[0x1DF0A039C](&unk_1DA678BB4, v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE07D8);
  }
  return result;
}

uint64_t dispatch thunk of TipProvider.tips.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TipProvider.requestRefresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unint64_t static PlayNextChapterIntent.kind.getter()
{
  return 0xD000000000000015;
}

void sub_1DA639294(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001DA684D60;
}

ValueMetadata *type metadata accessor for PlayNextChapterIntent()
{
  return &type metadata for PlayNextChapterIntent;
}

uint64_t HSBColor.init(uiColor:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[40];

  sub_1DA47EBD4(a1, (uint64_t)v4);
  return sub_1DA47EC90((uint64_t)v4, a2);
}

id HSBColor.uiColor.getter(double a1, double a2, double a3, double a4)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, a1, a2, a3, a4);
}

BOOL static HSBColor.== infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  _BOOL4 v8;

  v8 = a1 == a5;
  if (a2 != a6)
    v8 = 0;
  if (a3 != a7)
    v8 = 0;
  return a4 == a8 && v8;
}

void HSBColor.hue.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*HSBColor.hue.modify())()
{
  return nullsub_1;
}

double HSBColor.saturation.getter(double a1, double a2)
{
  return a2;
}

void HSBColor.saturation.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*HSBColor.saturation.modify())()
{
  return nullsub_1;
}

double HSBColor.brightness.getter(double a1, double a2, double a3)
{
  return a3;
}

void HSBColor.brightness.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*HSBColor.brightness.modify())()
{
  return nullsub_1;
}

double HSBColor.alpha.getter(double a1, double a2, double a3, double a4)
{
  return a4;
}

void HSBColor.alpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*HSBColor.alpha.modify())()
{
  return nullsub_1;
}

uint64_t HSBColor.hash(into:)()
{
  sub_1DA6707BC();
  sub_1DA6707BC();
  sub_1DA6707BC();
  return sub_1DA6707BC();
}

uint64_t HSBColor.hashValue.getter()
{
  sub_1DA670798();
  HSBColor.hash(into:)();
  return sub_1DA6707C8();
}

uint64_t sub_1DA6394D8()
{
  sub_1DA670798();
  HSBColor.hash(into:)();
  return sub_1DA6707C8();
}

uint64_t sub_1DA63953C()
{
  return HSBColor.hash(into:)();
}

uint64_t sub_1DA639548()
{
  sub_1DA670798();
  HSBColor.hash(into:)();
  return sub_1DA6707C8();
}

unint64_t sub_1DA6395AC()
{
  unint64_t result;

  result = qword_1F026E260;
  if (!qword_1F026E260)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for HSBColor, &type metadata for HSBColor);
    atomic_store(result, (unint64_t *)&qword_1F026E260);
  }
  return result;
}

char *sub_1DA6395F0(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  objc_class *v13;
  char *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  objc_super v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v1[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_playbackPositionTracker];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_QWORD *)v6 + 4) = 0;
  v7 = objc_allocWithZone(MEMORY[0x1E0D4B348]);
  v8 = v1;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v7, sel_initWithPlayerID_, v9);

  *(_QWORD *)&v8[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine] = v10;
  v11 = *(_QWORD *)(a1 + 32);
  objc_msgSend(v10, sel_setStateRestorationSupported_, sub_1DA523E7C(0, v11));
  objc_msgSend(v10, sel_setVideoSupported_, sub_1DA523E7C(1u, v11));
  LOBYTE(v11) = sub_1DA523E7C(2u, v11);
  v12 = v10;
  objc_msgSend(v12, sel_setPictureInPictureSupported_, v11 & 1);

  v13 = (objc_class *)_s9MPCPlayerCMa();
  v21.receiver = v8;
  v21.super_class = v13;
  v14 = (char *)objc_msgSendSuper2(&v21, sel_init);
  v15 = *(void **)&v14[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine];
  v16 = v14;
  objc_msgSend(v15, sel_setDelegate_, v16);
  objc_msgSend(v15, sel_becomeActive);
  sub_1DA66FB74();
  v17 = sub_1DA66FB98();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 0, 1, v17);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 48) = v19;
  *(_QWORD *)(v18 + 64) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v18 + 72) = v16;
  sub_1DA569804((uint64_t)v5, (uint64_t)&unk_1F026E308, v18);
  swift_release();
  return v16;
}

uint64_t sub_1DA639810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[16] = a4;
  v5[17] = a5;
  v6 = sub_1DA66DEF4();
  v5[18] = v6;
  v5[19] = *(_QWORD *)(v6 - 8);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA63988C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  if (sub_1DA523E7C(0, *(_QWORD *)(v0[16] + 32)))
  {
    v1 = *(void **)(v0[17] + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine);
    v0[7] = v0 + 26;
    v0[2] = v0;
    v0[3] = sub_1DA6399A8;
    v2 = swift_continuation_init();
    v0[10] = MEMORY[0x1E0C809B0];
    v3 = v0 + 10;
    v3[1] = 0x40000000;
    v3[2] = sub_1DA639E48;
    v3[3] = &block_descriptor_29;
    v3[4] = v2;
    objc_msgSend(v1, sel_restoreStateWithCompletion_, v3);
    return swift_continuation_await();
  }
  else
  {
    v0[24] = *(_QWORD *)(v0[17] + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine);
    sub_1DA66FB68();
    v0[25] = sub_1DA66FB5C();
    sub_1DA66FB38();
    return swift_task_switch();
  }
}

uint64_t sub_1DA6399A8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1DA639A08()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  sub_1DA66DE70();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FDC0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1DA478000, v1, v2, "Engine successfully restored a playback queue", v3, 2u);
    MEMORY[0x1DF0A0474](v3, -1, -1);
  }

  (*(void (**)(_QWORD, _QWORD))(v0[19] + 8))(v0[22], v0[18]);
  v0[24] = *(_QWORD *)(v0[17] + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine);
  sub_1DA66FB68();
  v0[25] = sub_1DA66FB5C();
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA639B14()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);
  swift_release();
  objc_msgSend(v1, sel_start);
  return swift_task_switch();
}

uint64_t sub_1DA639B60()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DA66DE70();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FDC0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1DA478000, v1, v2, "MPC Playback Engine started", v3, 2u);
    MEMORY[0x1DF0A0474](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 144);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA639C44()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = (void *)v0[23];
  swift_willThrow();
  sub_1DA66DE70();
  v2 = v1;
  v3 = v1;
  v4 = sub_1DA66DEDC();
  v5 = sub_1DA66FDC0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[23];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138543362;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[15] = v10;
    sub_1DA6702C4();
    *v8 = v10;

    _os_log_impl(&dword_1DA478000, v4, v5, "Error restoring playback queue: %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v8, -1, -1);
    MEMORY[0x1DF0A0474](v7, -1, -1);

  }
  else
  {
    v11 = (void *)v0[23];

  }
  (*(void (**)(_QWORD, _QWORD))(v0[19] + 8))(v0[20], v0[18]);
  v0[24] = *(_QWORD *)(v0[17] + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine);
  sub_1DA66FB68();
  v0[25] = sub_1DA66FB5C();
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA639E48(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

id sub_1DA639EF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s9MPCPlayerCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

float sub_1DA639F5C()
{
  id v0;
  float v1;
  float v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  objc_msgSend(v0, sel_floatForKey_, CFSTR("IMAVPlayerVolumeUserDefaultKey"));
  v2 = v1;

  return v2;
}

uint64_t (*sub_1DA639FC4(_DWORD *a1))(_QWORD)
{
  id v2;
  int v3;
  int v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  objc_msgSend(v2, sel_floatForKey_, CFSTR("IMAVPlayerVolumeUserDefaultKey"));
  v4 = v3;

  *a1 = v4;
  return nullsub_1;
}

uint64_t sub_1DA63A03C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_playbackPositionTracker;
  swift_beginAccess();
  sub_1DA63A5A4(a1, v3);
  return swift_endAccess();
}

void sub_1DA63A16C(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  v4 = sub_1DA66DEF4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v8 = a1;
    sub_1DA66DE7C();
    v9 = a1;
    v10 = a1;
    v11 = sub_1DA66DEDC();
    v12 = sub_1DA66FDA8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)v13 = 138412290;
      v14 = a1;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      v17[1] = v15;
      sub_1DA6702C4();
      v16 = v17[0];
      *(_QWORD *)v17[0] = v15;
      sub_1DA63AE38(a1, 1);
      sub_1DA63AE38(a1, 1);
      _os_log_impl(&dword_1DA478000, v11, v12, "Error updating playback position: %@", v13, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v16, -1, -1);
      MEMORY[0x1DF0A0474](v13, -1, -1);

      sub_1DA63AE38(a1, 1);
    }
    else
    {
      sub_1DA63AE38(a1, 1);
      sub_1DA63AE38(a1, 1);

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1DA63A3C8()
{
  uint64_t v0;

  sub_1DA63A5EC(v0 + 16);
  return swift_deallocClassInstance();
}

float sub_1DA63A3EC()
{
  return 0.0;
}

uint64_t (*sub_1DA63A3F4(_DWORD *a1))()
{
  *a1 = 0;
  return nullsub_1;
}

uint64_t sub_1DA63A408(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  sub_1DA63A5A4(a1, v1 + 16);
  return swift_endAccess();
}

uint64_t sub_1DA63A458(uint64_t a1, uint64_t a2)
{
  return sub_1DA63A488(a1, a2, (SEL *)&selRef_podcastAdamID);
}

uint64_t sub_1DA63A464(uint64_t a1, uint64_t a2)
{
  return sub_1DA63A488(a1, a2, (SEL *)&selRef_episodeAdamID);
}

uint64_t sub_1DA63A470(uint64_t a1, uint64_t a2)
{
  return sub_1DA63A488(a1, a2, (SEL *)&selRef_episodeUUID);
}

uint64_t sub_1DA63A47C(uint64_t a1, uint64_t a2)
{
  return sub_1DA63A488(a1, a2, (SEL *)&selRef_feedURL);
}

uint64_t sub_1DA63A488(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v4 = objc_msgSend(*v3, *a3);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = sub_1DA66F8BC();

  return v6;
}

id sub_1DA63A4E8()
{
  id *v0;

  return objc_msgSend(*v0, sel_accountID);
}

id sub_1DA63A50C()
{
  id *v0;

  return objc_msgSend(*v0, sel_timestamp);
}

id sub_1DA63A51C()
{
  id *v0;

  return objc_msgSend(*v0, sel_duration);
}

id sub_1DA63A52C()
{
  id *v0;

  return objc_msgSend(*v0, sel_position);
}

id sub_1DA63A53C()
{
  id *v0;

  return objc_msgSend(*v0, sel_subscribable);
}

id sub_1DA63A55C()
{
  id *v0;

  return objc_msgSend(*v0, sel_completed);
}

uint64_t _s9MPCPlayerCMa()
{
  return objc_opt_self();
}

uint64_t sub_1DA63A59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1DA63A5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADF9A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA63A5EC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADF9A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA63A62C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1DA66DEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66DE70();
  v6 = a1;
  v7 = a1;
  v8 = sub_1DA66DEDC();
  v9 = sub_1DA66FDA8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v18 = v2;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v19 = (uint64_t)a1;
    v20 = v12;
    *(_DWORD *)v11 = 136446210;
    v13 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v14 = sub_1DA66F904();
    v19 = sub_1DA49AD00(v14, v15, &v20);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v8, v9, "engine:didFailToPlay: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v12, -1, -1);
    MEMORY[0x1DF0A0474](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1DA63A814(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint8_t *v15;
  _QWORD v17[2];

  v2 = sub_1DA66DEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66DE70();
  v6 = a1;
  v7 = a1;
  v8 = sub_1DA66DEDC();
  v9 = sub_1DA66FDA8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v17[0] = v2;
    v11 = (uint8_t *)v10;
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = a1;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    v17[1] = v14;
    sub_1DA6702C4();
    *v12 = v14;

    _os_log_impl(&dword_1DA478000, v8, v9, "engine:didFailToPlayFirstItem: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v12, -1, -1);
    v15 = v11;
    v2 = v17[0];
    MEMORY[0x1DF0A0474](v15, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1DA63A9D4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t (*v14)(__int128 *, uint64_t, uint64_t);
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(__int128 *, void (*)(void *, char), _QWORD, uint64_t, uint64_t);
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  unint64_t v42;
  _UNKNOWN **v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;

  v3 = sub_1DA66DEF4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v36 - v8;
  v10 = v1 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_playbackPositionTracker;
  swift_beginAccess();
  sub_1DA63ADB4(v10, (uint64_t)&v41);
  if (v42)
  {
    sub_1DA4841BC(&v41, (uint64_t)v44);
    v11 = v45;
    v12 = v46;
    __swift_project_boxed_opaque_existential_1(v44, v45);
    v13 = sub_1DA63ADFC();
    v42 = v13;
    v43 = &protocol witness table for MPCPodcastPlaybackPositionEvent;
    *(_QWORD *)&v41 = a1;
    v14 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v12 + 8);
    v15 = a1;
    v16 = v14(&v41, v11, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v41);
    if ((v16 & 1) != 0)
    {
      v17 = v45;
      v18 = v46;
      __swift_project_boxed_opaque_existential_1(v44, v45);
      v42 = v13;
      v43 = &protocol witness table for MPCPodcastPlaybackPositionEvent;
      *(_QWORD *)&v41 = v15;
      v19 = *(void (**)(__int128 *, void (*)(void *, char), _QWORD, uint64_t, uint64_t))(v18 + 16);
      v20 = v15;
      v19(&v41, sub_1DA63A16C, 0, v17, v18);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v41);
    }
    else
    {
      sub_1DA66DE7C();
      v25 = v15;
      v26 = sub_1DA66DEDC();
      v27 = sub_1DA66FDC0();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc();
        v29 = swift_slowAlloc();
        *(_QWORD *)&v41 = v29;
        *(_DWORD *)v28 = 141558275;
        v39 = 1752392040;
        sub_1DA6702C4();
        *(_WORD *)(v28 + 12) = 2081;
        v30 = objc_msgSend(v25, sel_episodeAdamID);
        v37 = v29;
        v38 = v3;
        v36[1] = &v40;
        if (v30)
        {
          v31 = v30;
          sub_1DA66F8BC();

        }
        v32 = sub_1DA67027C();
        v34 = v33;
        swift_bridgeObjectRelease();
        v39 = sub_1DA49AD00(v32, v34, (uint64_t *)&v41);
        sub_1DA6702C4();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA478000, v26, v27, "Not allowing sync for episode adam id %{private,mask.hash}s", (uint8_t *)v28, 0x16u);
        v35 = v37;
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v35, -1, -1);
        MEMORY[0x1DF0A0474](v28, -1, -1);

        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v38);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      }
    }
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  }
  else
  {
    sub_1DA63A5EC((uint64_t)&v41);
    sub_1DA66DE7C();
    v21 = sub_1DA66DEDC();
    v22 = sub_1DA66FDA8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1DA478000, v21, v22, "No playback positon tracker setup.", v23, 2u);
      MEMORY[0x1DF0A0474](v23, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1DA63ADB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADF9A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DA63ADFC()
{
  unint64_t result;

  result = qword_1F026E2F0;
  if (!qword_1F026E2F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F026E2F0);
  }
  return result;
}

void sub_1DA63AE38(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_1DA63AE44()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DA63AE88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[9];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DA4AD77C;
  return sub_1DA639810(a1, v4, v5, v6, v7);
}

uint64_t PodcastsFoundationBootstrap.buildForegroundDependencies(basedOn:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_signpost_type_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v16;

  v2 = sub_1DA66DD74();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  if (qword_1EDADFCB0 != -1)
    swift_once();
  v9 = sub_1DA66DDD4();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EDADFC90);
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v10 = sub_1DA66DDB0();
  v11 = sub_1DA66FF58();
  if ((sub_1DA670240() & 1) != 0)
  {
    v12 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v12(v5, v8, v2);
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v10, v11, v14, "PodcastsFoundationBootstrap.foreground", "", v13, 2u);
    MEMORY[0x1DF0A0474](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {

    v12 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  }
  v12(v5, v8, v2);
  sub_1DA66DE10();
  swift_allocObject();
  sub_1DA66DE04();
  sub_1DA66BE60();
  sub_1DA4EAC6C("PodcastsFoundationBootstrap.foreground", 38, 2);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return a1;
}

uint64_t PodcastsFoundationBootstrap.buildBackgroundDependencies()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_signpost_type_t v19;
  char v20;
  void (*v21)(char *, char *, uint64_t);
  uint8_t *v22;
  os_signpost_id_t v23;
  uint8_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  os_unfair_lock_s *v31;
  void (*v32)(char *, uint64_t);
  _QWORD *v33;
  void (*v34)(_QWORD, _QWORD);
  void (*v35)(char *, _QWORD, void (*)(_QWORD, _QWORD));
  void *v36;
  id v37;
  void (*v38)(char *, _QWORD);
  id v39;
  id v40;
  objc_class *v41;
  os_unfair_lock_s *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  os_unfair_lock_s *v45;
  os_unfair_lock_s *v46;
  os_unfair_lock_s *v47;
  os_unfair_lock_s *v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  os_unfair_lock_s *v51;
  os_unfair_lock_s *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void);
  os_unfair_lock_s *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  os_unfair_lock_s *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t result;
  uint64_t v77;
  id v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  os_unfair_lock_s *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  void (*v86)(_QWORD, _QWORD);
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  _QWORD v95[5];
  os_unfair_lock_s *v96[3];
  uint64_t v97;
  uint64_t v98;

  v0 = sub_1DA66EBD8();
  v92 = *(_QWORD **)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v93 = (char *)&v77 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1DA66FDF0();
  v85 = *(_QWORD **)(v2 - 8);
  v86 = (void (*)(_QWORD, _QWORD))v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1DA66C544();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v82 = (os_unfair_lock_s *)((char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1DA66C4E4();
  v80 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v79 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v81 = (uint64_t)&v77 - v9;
  v10 = sub_1DA66DD74();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v77 - v15;
  if (qword_1EDADFCB0 != -1)
    swift_once();
  v94 = v0;
  v17 = sub_1DA66DDD4();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EDADFC90);
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v18 = sub_1DA66DDB0();
  v19 = sub_1DA66FF58();
  v20 = sub_1DA670240();
  v90 = v11;
  v91 = v10;
  if ((v20 & 1) != 0)
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v21(v13, v16, v10);
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    v23 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v18, v19, v23, "PodcastsFoundationBootstrap.background", "", v22, 2u);
    v24 = v22;
    v10 = v91;
    MEMORY[0x1DF0A0474](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {

    v21 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  }
  v89 = v16;
  v21(v13, v16, v10);
  sub_1DA66DE10();
  swift_allocObject();
  v88 = sub_1DA66DE04();
  v25 = v93;
  if (qword_1EDAE0888 != -1)
    swift_once();
  v78 = (id)qword_1EDAE0880;
  v87 = sub_1DA66EE30();
  sub_1DA66EE00();
  v26 = *MEMORY[0x1E0CB0EF8];
  v27 = v80;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 104);
  v29 = v81;
  v28(v81, v26, v6);
  v30 = v79;
  v28((uint64_t)v79, v26, v6);
  v31 = v82;
  sub_1DA66C4F0();
  v32 = *(void (**)(char *, uint64_t))(v27 + 8);
  v32(v30, v6);
  sub_1DA63E184(v29, (uint64_t)v31);
  swift_release();
  (*(void (**)(os_unfair_lock_s *, uint64_t))(v83 + 8))(v31, v84);
  v32((char *)v29, v6);
  v33 = v85;
  v34 = v86;
  v35 = (void (*)(char *, _QWORD, void (*)(_QWORD, _QWORD)))v85[13];
  v35(v4, *MEMORY[0x1E0D7EFA0], v86);
  v36 = (void *)objc_opt_self();
  v37 = objc_msgSend(v36, sel__applePodcastsFoundationSettingsUserDefaults);
  sub_1DA63E3F8((uint64_t)v4, v37);

  swift_release();
  v38 = (void (*)(char *, _QWORD))v33[1];
  v38(v4, v34);
  v35(v4, *MEMORY[0x1E0D7EF98], v34);
  v39 = objc_msgSend(v36, sel__applePodcastsFoundationSharedUserDefaults);
  sub_1DA63E3F8((uint64_t)v4, v39);

  swift_release();
  v38(v4, v34);
  v35(v4, *MEMORY[0x1E0D7EFA8], v34);
  v40 = objc_msgSend(v36, sel_standardUserDefaults);
  sub_1DA63E3F8((uint64_t)v4, v40);

  swift_release();
  v38(v4, v34);
  v41 = (objc_class *)sub_1DA66D7BC();
  v42 = (os_unfair_lock_s *)objc_msgSend(objc_allocWithZone(v41), sel_init);
  v97 = (uint64_t)v41;
  v98 = MEMORY[0x1E0D7E800];
  v96[0] = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
  sub_1DA4813E4((uint64_t)v96, (uint64_t)v95);
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v43 = (void (*)(char *, uint64_t))v92[1];
  v44 = v94;
  v43(v25, v94);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
  sub_1DA66D408();
  v96[0] = (os_unfair_lock_s *)sub_1DA66D3FC();
  v45 = v96[0];
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v43(v25, v44);

  swift_release();
  v46 = (os_unfair_lock_s *)objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1DA47D774(0, &qword_1EDAE2890);
  v96[0] = v46;
  v47 = v46;
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v43(v25, v44);

  swift_release();
  v48 = (os_unfair_lock_s *)objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v97 = sub_1DA47D774(0, (unint64_t *)&unk_1EDAE4BD0);
  v98 = MEMORY[0x1E0D7EF78];
  v96[0] = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4120);
  sub_1DA4813E4((uint64_t)v96, (uint64_t)v95);
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v43(v25, v44);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
  v49 = (os_unfair_lock_s *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7F280]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C20);
  v96[0] = v49;
  swift_unknownObjectRetain();
  sub_1DA66EBCC();
  v50 = sub_1DA66EE0C();
  v43(v25, v44);

  swift_release();
  v85 = (_QWORD *)objc_opt_self();
  if ((objc_msgSend(v85, sel_isRunningOnDesktop) & 1) == 0)
  {
    v51 = (os_unfair_lock_s *)objc_msgSend((id)objc_opt_self(), sel_defaultMediaLibrary);
    sub_1DA47D774(0, &qword_1EDAE4BE0);
    v96[0] = v51;
    v52 = v51;
    sub_1DA66EBCC();
    v53 = sub_1DA66EE0C();
    v43(v25, v44);
    swift_release();

    v50 = v53;
  }
  v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3BF0);
  v55 = v78;
  v83 = v54;
  sub_1DA66EDC4();
  v86 = (void (*)(_QWORD, _QWORD))v43;
  v84 = v50;
  if (v96[0])
  {
    v82 = v96[0];
  }
  else
  {
    v56 = sub_1DA63BF94(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B488);
    v57 = swift_allocObject();
    *(_DWORD *)(v57 + 24) = 0;
    v82 = (os_unfair_lock_s *)v57;
    *(_QWORD *)(v57 + 16) = v56;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E370);
  v58 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026E378) - 8);
  v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v60 = swift_allocObject();
  v81 = v60;
  *(_OWORD *)(v60 + 16) = xmmword_1DA678FA0;
  v61 = v60 + v59;
  v62 = *MEMORY[0x1E0D7E5A8];
  v63 = sub_1DA66D5C4();
  v64 = *(void (**)(void))(*(_QWORD *)(v63 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v64)(v61, v62, v63);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4200);
  v92 = v55;
  sub_1DA4841D4((unint64_t *)&unk_1EDAE41F0, &qword_1EDAE4200, MEMORY[0x1E0D7E440]);
  sub_1DA66C934();
  v64();
  sub_1DA66C934();
  v64();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27D0);
  sub_1DA4841D4(&qword_1EDAE4270, (uint64_t *)&unk_1EDAE27D0, MEMORY[0x1E0D7E858]);
  sub_1DA66C934();
  v64();
  sub_1DA66C934();
  v65 = (os_unfair_lock_s *)sub_1DA63BF94(v81);
  sub_1DA5DDB3C((unint64_t *)&unk_1F026E380, MEMORY[0x1E0D7E5F0]);
  sub_1DA67045C();
  v66 = sub_1DA640608((uint64_t)v96[0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v67 = swift_bridgeObjectRetain();
  v68 = sub_1DA63F944(v67, v66);
  swift_bridgeObjectRelease();
  v69 = *(_QWORD *)(v68 + 16);
  swift_release();
  if (v69)
  {

    v96[0] = 0;
    v96[1] = (os_unfair_lock_s *)0xE000000000000000;
    sub_1DA670444();
    sub_1DA66F988();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
    sub_1DA5DDB3C((unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0]);
    sub_1DA66F790();
    sub_1DA66F988();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA66F988();
    sub_1DA66FC64();
    sub_1DA66F988();
    swift_bridgeObjectRelease();
    result = sub_1DA670570();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DA63D7C4(v82, v65, v96);
    swift_bridgeObjectRelease();
    swift_release();
    v95[0] = v96[0];
    sub_1DA66BE60();
    v70 = v93;
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    v71 = v94;
    v72 = (void (*)(char *, uint64_t))v86;
    v86(v70, v94);
    swift_release();

    swift_release();
    if ((objc_msgSend(v85, sel_supportsLocalLibrary) & 1) != 0)
    {
      sub_1DA63E5BC();
    }
    else
    {
      v96[0] = (os_unfair_lock_s *)objc_msgSend(objc_allocWithZone((Class)sub_1DA66DA50()), sel_init);
      v73 = v96[0];
      sub_1DA66EBCC();
      sub_1DA66EE0C();
      v72(v70, v71);

      sub_1DA66DC00();
      swift_allocObject();
      v96[0] = (os_unfair_lock_s *)sub_1DA66DBF4();
      sub_1DA66BE60();
      sub_1DA66EBCC();
      sub_1DA66EE0C();
      v72(v70, v71);
      swift_release();
      swift_release();
    }
    v74 = v91;
    swift_release();
    sub_1DA66BE60();
    v75 = sub_1DA66EE3C();
    sub_1DA66EDF4();
    swift_release();
    sub_1DA4EAC6C("PodcastsFoundationBootstrap.background", 38, 2);
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v74);
    return v75;
  }
  return result;
}

unint64_t sub_1DA63BF94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E378);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E470);
  v6 = sub_1DA6705D0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v12, (uint64_t)v5, &qword_1F026E378);
    result = sub_1DA55C8B8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1DA66D5C4();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63C150(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4BF8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CF0);
  v6 = sub_1DA6705D0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v12, (uint64_t)v5, &qword_1EDAE4BF8);
    v14 = *(_QWORD *)&v5[v9];
    result = sub_1DA55C950((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v7[6];
    v19 = sub_1DA66FDF0();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v7[7] + 8 * v17) = v14;
    v20 = v7[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63C2E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AE0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4CA0);
  v6 = sub_1DA6705D0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v12, (uint64_t)v5, &qword_1EDAE3AE0);
    result = sub_1DA55C9E8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1DA66C4E4();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = sub_1DA66C544();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63C49C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A8);
  v2 = sub_1DA6705D0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v6, (uint64_t)&v13, &qword_1EDAE5380);
    v7 = v13;
    result = sub_1DA55CA80(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1DA49ACF0(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63C5C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2198);
  v2 = (_QWORD *)sub_1DA6705D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1DA66BE60();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1DA499108(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63C6D8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E400);
  v2 = (_QWORD *)sub_1DA6705D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1DA66BE60();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    result = sub_1DA55CB70((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63C7D4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  char v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE21D0);
  v2 = (_QWORD *)sub_1DA6705D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1DA66BE60();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *(_BYTE *)v4;
    v6 = *(v4 - 1);
    result = sub_1DA55CA80((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v6;
    *(_BYTE *)(v2[7] + result) = v5;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63C8D0(uint64_t a1)
{
  return sub_1DA63C918(a1, (uint64_t *)&unk_1EDAE4920, (uint64_t *)&unk_1EDAE4CD0, (uint64_t (*)(char *))sub_1DA55CC64, (uint64_t (*)(_QWORD))MEMORY[0x1E0D40048]);
}

unint64_t sub_1DA63C8F4(uint64_t a1)
{
  return sub_1DA63C918(a1, &qword_1EDAE4918, (uint64_t *)&unk_1F026E3F0, (uint64_t (*)(char *))sub_1DA55CC64, (uint64_t (*)(_QWORD))MEMORY[0x1E0D40048]);
}

unint64_t sub_1DA63C918(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t (*v30)(_QWORD);
  uint64_t (*v31)(char *);

  v30 = a5;
  v31 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_1DA6705D0();
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  v15 = *(int *)(v8 + 48);
  v16 = a1;
  v17 = v12 + 64;
  v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v29[1] = v16;
  v19 = v16 + v18;
  v20 = *(_QWORD *)(v9 + 72);
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v19, (uint64_t)v11, a2);
    result = v31(v11);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = v13[6];
    v25 = v30(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v11, v25);
    *(_QWORD *)(v13[7] + 8 * v23) = *(_QWORD *)&v11[v15];
    v26 = v13[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v13[2] = v28;
    v19 += v20;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63CAB4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE21C0);
  v2 = sub_1DA6705D0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v6, (uint64_t)&v15, &qword_1EDAE2680);
    v7 = v15;
    v8 = v16;
    result = sub_1DA499108(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1DA49ACF0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63CBE8(uint64_t a1)
{
  return sub_1DA63C918(a1, &qword_1EDAE41A0, &qword_1F026E3E8, (uint64_t (*)(char *))sub_1DA55CD84, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7DD28]);
}

unint64_t sub_1DA63CC0C(uint64_t a1)
{
  return sub_1DA63C918(a1, &qword_1F026B1E0, &qword_1F026E3A0, (uint64_t (*)(char *))sub_1DA55CEB4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D848]);
}

unint64_t sub_1DA63CC30(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E3C0);
  v2 = (_QWORD *)sub_1DA6705D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1DA66BE60();
  v4 = (_BYTE *)(a1 + 56);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 3);
    v6 = *((_QWORD *)v4 - 2);
    v7 = *((_QWORD *)v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1DA499108(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = v2[7] + 16 * result;
    *(_QWORD *)v12 = v7;
    *(_BYTE *)(v12 + 8) = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 32;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63CD50(uint64_t a1)
{
  return sub_1DA63CD88(a1, &qword_1F026E3C8, &qword_1F026E3D0, (uint64_t (*)(uint64_t))sub_1DA491310);
}

unint64_t sub_1DA63CD6C(uint64_t a1)
{
  return sub_1DA63CD88(a1, &qword_1F026E3A8, &qword_1F026E3B0, (uint64_t (*)(uint64_t))sub_1DA491310);
}

unint64_t sub_1DA63CD88(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_1DA6705D0();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v11, (uint64_t)&v18, a3);
    v12 = v18;
    result = a4(v18);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v12;
    result = (unint64_t)sub_1DA49ACF0(&v19, (_OWORD *)(v8[7] + 32 * result));
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63CEB0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CB0);
  v2 = (_QWORD *)sub_1DA6705D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1DA66BE60();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DA55CFAC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63CFC8(uint64_t a1)
{
  return sub_1DA63C918(a1, &qword_1EDAE4958, &qword_1EDAE4CE0, (uint64_t (*)(char *))sub_1DA55D02C, (uint64_t (*)(_QWORD))MEMORY[0x1E0D40198]);
}

unint64_t sub_1DA63CFEC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CE8);
  v2 = sub_1DA6705D0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  sub_1DA66BE60();
  v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v22 = v4;
    v6 = *(v5 - 3);
    v7 = *(v5 - 2);
    v9 = *(v5 - 1);
    v8 = *v5;
    v11 = v5[1];
    v10 = v5[2];
    v12 = v5[4];
    v13 = v5[6];
    v23 = v5[5];
    v24 = v5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DA499108(v6, v7);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = (_QWORD *)(v3[7] + (result << 6));
    *v17 = v9;
    v17[1] = v8;
    v17[2] = v11;
    v17[3] = v10;
    v17[4] = v24;
    v17[5] = v12;
    v17[6] = v23;
    v17[7] = v13;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v5 += 10;
    v3[2] = v20;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA63D164(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E450);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1F026B220);
  v6 = sub_1DA6705D0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v12, (uint64_t)v5, (uint64_t *)&unk_1F026E450);
    result = sub_1DA55C8B8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1DA66D5C4();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = sub_1DA66DA68();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DA63D31C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FE8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1DA47E2F0(a1, &qword_1F0268FE8);
    sub_1DA5A766C(a2, v8);
    v14 = sub_1DA66D5C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_1DA47E2F0((uint64_t)v8, &qword_1F0268FE8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DA5376C8((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    v17 = sub_1DA66D5C4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_1DA63D4AC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E478);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66C544();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1DA47E2F0(a1, &qword_1F026E478);
    sub_1DA5A77F4(a2, v8);
    v14 = sub_1DA66C4E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_1DA47E2F0((uint64_t)v8, &qword_1F026E478);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DA5379D0((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    v17 = sub_1DA66C4E4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_1DA63D638(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E430);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66DA68();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1DA47E2F0(a1, &qword_1F026E430);
    sub_1DA5A7B58(a2, (uint64_t)v8);
    v14 = sub_1DA66D5C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_1DA47E2F0((uint64_t)v8, &qword_1F026E430);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DA538640((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    v17 = sub_1DA66D5C4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

void sub_1DA63D7C4(os_unfair_lock_s *a1@<X0>, os_unfair_lock_s *a2@<X1>, os_unfair_lock_s **a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v19;
  int64_t v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_unfair_lock_s **v30;
  uint64_t v31;
  os_unfair_lock_s **v32;
  os_unfair_lock_s *v33;
  int64_t v34;
  char *v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  uint64_t v38;
  os_unfair_lock_s *v39;

  v4 = v3;
  v32 = a3;
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E460);
  MEMORY[0x1E0C80A78](v36);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v35 = (char *)&v31 - v10;
  v11 = *(_QWORD *)&a2[16]._os_unfair_lock_opaque;
  v33 = a2 + 16;
  v12 = 1 << LOBYTE(a2[8]._os_unfair_lock_opaque);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v34 = (unint64_t)(v12 + 63) >> 6;
  sub_1DA66BE60();
  v37 = a2;
  swift_bridgeObjectRetain();
  v15 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v38 = v4;
  v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = v37;
    v22 = *(_QWORD *)&v37[12]._os_unfair_lock_opaque;
    v23 = sub_1DA66D5C4();
    v24 = (uint64_t)v35;
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v35, v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * i, v23);
    v25 = *(_QWORD *)&v21[14]._os_unfair_lock_opaque;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24 + *(int *)(v36 + 48), v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * i, v26);
    v27 = sub_1DA4A686C(v24, (uint64_t)v8, (uint64_t *)&unk_1F026E460);
    MEMORY[0x1E0C80A78](v27);
    *(&v31 - 4) = (uint64_t)v8;
    *(&v31 - 3) = v28;
    a2 = a1 + 6;
    *(&v31 - 2) = (uint64_t)a1;
    os_unfair_lock_lock(a1 + 6);
    v29 = v38;
    sub_1DA63DE20(*(&v31 - 4), *(&v31 - 3), *(&v31 - 2), &v39);
    if (v29)
      break;
    v4 = 0;
    os_unfair_lock_unlock(a1 + 6);
    sub_1DA47E2F0((uint64_t)v8, (uint64_t *)&unk_1F026E460);
    swift_release();
    a1 = v39;
    if (v14)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    if (v15 >= v34)
      goto LABEL_25;
    v19 = *(_QWORD *)&v33[2 * v15]._os_unfair_lock_opaque;
    if (!v19)
    {
      v20 = v15 + 1;
      if (v15 + 1 >= v34)
        goto LABEL_25;
      v19 = *(_QWORD *)&v33[2 * v20]._os_unfair_lock_opaque;
      if (!v19)
      {
        v20 = v15 + 2;
        if (v15 + 2 >= v34)
          goto LABEL_25;
        v19 = *(_QWORD *)&v33[2 * v20]._os_unfair_lock_opaque;
        if (!v19)
        {
          v20 = v15 + 3;
          if (v15 + 3 >= v34)
            goto LABEL_25;
          v19 = *(_QWORD *)&v33[2 * v20]._os_unfair_lock_opaque;
          if (!v19)
          {
            v20 = v15 + 4;
            if (v15 + 4 >= v34)
            {
LABEL_25:
              v30 = v32;
              swift_release();
              *v30 = a1;
              return;
            }
            v19 = *(_QWORD *)&v33[2 * v20]._os_unfair_lock_opaque;
            if (!v19)
            {
              while (1)
              {
                v15 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_27;
                if (v15 >= v34)
                  goto LABEL_25;
                v19 = *(_QWORD *)&v33[2 * v15]._os_unfair_lock_opaque;
                ++v20;
                if (v19)
                  goto LABEL_17;
              }
            }
          }
        }
      }
      v15 = v20;
    }
LABEL_17:
    v38 = v4;
    v14 = (v19 - 1) & v19;
  }
  os_unfair_lock_unlock(a2);
  __break(1u);
}

void sub_1DA63DAE0(os_unfair_lock_s *a1@<X0>, uint64_t a2@<X1>, os_unfair_lock_s **a3@<X8>)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_unfair_lock_s **v30;
  uint64_t v31;
  os_unfair_lock_s **v32;
  os_unfair_lock_s **v33;
  uint64_t v34;
  int64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_unfair_lock_s *v41;

  v5 = v3;
  v33 = a3;
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E410);
  MEMORY[0x1E0C80A78](v38);
  v37 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v36 = (char *)&v33 - v10;
  v11 = *(_QWORD *)(a2 + 64);
  v34 = a2 + 64;
  v12 = 1 << *(_BYTE *)(a2 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v35 = (unint64_t)(v12 + 63) >> 6;
  sub_1DA66BE60();
  v39 = a2;
  swift_bridgeObjectRetain();
  v15 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v40 = v5;
  v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = v39;
    v22 = *(_QWORD *)(v39 + 48);
    v23 = sub_1DA66D5C4();
    v24 = v36;
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v36, v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * i, v23);
    v25 = *(_QWORD *)(v21 + 56);
    v26 = sub_1DA66DA68();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(&v24[*(int *)(v38 + 48)], v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * i, v26);
    v27 = (uint64_t)v24;
    v28 = v37;
    v29 = sub_1DA4A686C(v27, v37, (uint64_t *)&unk_1F026E410);
    MEMORY[0x1E0C80A78](v29);
    *(&v33 - 4) = (os_unfair_lock_s **)v28;
    *(&v33 - 3) = v30;
    v4 = a1 + 6;
    *(&v33 - 2) = (os_unfair_lock_s **)a1;
    os_unfair_lock_lock(a1 + 6);
    v31 = v40;
    sub_1DA63E054((uint64_t)*(&v33 - 4), (uint64_t)*(&v33 - 3), (uint64_t)*(&v33 - 2), &qword_1F026E430, (uint64_t (*)(_QWORD, __n128))MEMORY[0x1E0D7E5D0], (uint64_t (*)(_QWORD))MEMORY[0x1E0D7EAB0], (void (*)(char *, char *))sub_1DA63D638, &v41);
    if (v31)
      break;
    v5 = 0;
    os_unfair_lock_unlock(a1 + 6);
    sub_1DA47E2F0(v28, (uint64_t *)&unk_1F026E410);
    swift_release();
    a1 = v41;
    if (v14)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    if (v15 >= v35)
      goto LABEL_25;
    v19 = *(_QWORD *)(v34 + 8 * v15);
    if (!v19)
    {
      v20 = v15 + 1;
      if (v15 + 1 >= v35)
        goto LABEL_25;
      v19 = *(_QWORD *)(v34 + 8 * v20);
      if (!v19)
      {
        v20 = v15 + 2;
        if (v15 + 2 >= v35)
          goto LABEL_25;
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          v20 = v15 + 3;
          if (v15 + 3 >= v35)
            goto LABEL_25;
          v19 = *(_QWORD *)(v34 + 8 * v20);
          if (!v19)
          {
            v20 = v15 + 4;
            if (v15 + 4 >= v35)
            {
LABEL_25:
              v32 = v33;
              swift_release();
              *v32 = a1;
              return;
            }
            v19 = *(_QWORD *)(v34 + 8 * v20);
            if (!v19)
            {
              while (1)
              {
                v15 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_27;
                if (v15 >= v35)
                  goto LABEL_25;
                v19 = *(_QWORD *)(v34 + 8 * v15);
                ++v20;
                if (v19)
                  goto LABEL_17;
              }
            }
          }
        }
      }
      v15 = v20;
    }
LABEL_17:
    v40 = v5;
    v14 = (v19 - 1) & v19;
  }
  os_unfair_lock_unlock(v4);
  __break(1u);
}

uint64_t sub_1DA63DE20@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FE8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66D5C4();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 16))(v14, a1, v12);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v10, a2, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
  sub_1DA63D31C((uint64_t)v10, (uint64_t)v14);
  *a4 = a3;
  return sub_1DA66BE60();
}

uint64_t sub_1DA63DF50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v10 = sub_1DA66FDF0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a2, v10, v12);
  v15 = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *a1;
  *a1 = 0x8000000000000000;
  sub_1DA537854((uint64_t)v15, (uint64_t)v14, isUniquelyReferenced_nonNull_native);
  *a1 = v19;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  *a5 = a4;
  return sub_1DA66BE60();
}

uint64_t sub_1DA63E054@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X4>, uint64_t (*a5)(_QWORD, __n128)@<X5>, uint64_t (*a6)(_QWORD)@<X6>, void (*a7)(char *, char *)@<X7>, _QWORD *a8@<X8>)
{
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a5(0, v16);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v27 - v21;
  (*(void (**)(char *, uint64_t, __n128))(v23 + 16))((char *)&v27 - v21, a1, v20);
  v24 = a6(0);
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v18, a2, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v18, 0, 1, v24);
  a7(v18, v22);
  *a8 = a3;
  return sub_1DA66BE60();
}

uint64_t sub_1DA63E184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = sub_1DA66EBD8();
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66C544();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - v11;
  v24 = v13;
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v14((char *)&v23 - v11, a2, v6, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3C10);
  sub_1DA66EDC4();
  v15 = v29;
  if (!v29)
  {
    v16 = a1;
    v17 = sub_1DA63C2E4(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4C70);
    v15 = swift_allocObject();
    *(_DWORD *)(v15 + 24) = 0;
    *(_QWORD *)(v15 + 16) = v17;
    a1 = v16;
  }
  v18 = ((uint64_t (*)(char *, char *, uint64_t))v14)(v8, v12, v6);
  MEMORY[0x1E0C80A78](v18);
  *(&v23 - 4) = a1;
  *(&v23 - 3) = (uint64_t)v8;
  *(&v23 - 2) = v15;
  os_unfair_lock_lock((os_unfair_lock_t)(v15 + 24));
  sub_1DA63E054(*(&v23 - 4), *(&v23 - 3), *(&v23 - 2), &qword_1F026E478, (uint64_t (*)(_QWORD, __n128))MEMORY[0x1E0CB0F00], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB11F0], (void (*)(char *, char *))sub_1DA63D4AC, &v29);
  os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 24));
  v19 = *(void (**)(char *, uint64_t))(v24 + 8);
  v19(v8, v6);
  swift_release();
  v28 = v29;
  sub_1DA66BE60();
  v20 = v25;
  sub_1DA66EBCC();
  v21 = sub_1DA66EE0C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v27);
  swift_release();
  v19(v12, v6);
  return v21;
}

uint64_t sub_1DA63E3F8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD v14[2];
  id v15;
  void *v16;

  v14[0] = sub_1DA66EBD8();
  v4 = *(_QWORD *)(v14[0] - 8);
  MEMORY[0x1E0C80A78](v14[0]);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3C18);
  v7 = a2;
  v8 = sub_1DA66EDC4();
  v9 = (uint64_t)v16;
  if (!v16)
  {
    v10 = sub_1DA63C150(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4C90);
    v8 = swift_allocObject();
    v9 = v8;
    *(_DWORD *)(v8 + 24) = 0;
    *(_QWORD *)(v8 + 16) = v10;
  }
  v15 = v7;
  MEMORY[0x1E0C80A78](v8);
  v14[-4] = a1;
  v14[-3] = &v15;
  v14[-2] = v9;
  v11 = v7;
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  sub_1DA63DF50((uint64_t *)(v9 + 16), v14[-4], *(void **)v14[-3], v14[-2], &v16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
  swift_release();

  v15 = v16;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  v12 = sub_1DA66EE0C();
  (*(void (**)(char *, _QWORD))(v4 + 8))(v6, v14[0]);

  swift_release();
  return v12;
}

uint64_t sub_1DA63E5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  id v33;
  os_unfair_lock_s *v34;
  id v35;
  os_unfair_lock_s *v36;
  os_unfair_lock_s *v37;
  id v38;
  os_unfair_lock_s *v39;
  os_unfair_lock_s *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  os_unfair_lock_s *v43;
  os_unfair_lock_s *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  char *v60;
  void (*v61)(char *, _QWORD *);
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, char *, uint64_t);
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  os_unfair_lock_s *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t result;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  os_unfair_lock_s *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  os_unfair_lock_s *v146;
  os_unfair_lock_s *v147[5];

  v120 = sub_1DA66FDF0();
  v118 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v117 = (char *)&v106 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_1DA66D9E4();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v119 = (char *)&v106 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v121 = (char *)&v106 - v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v136 = *(_QWORD *)(v4 - 8);
  v137 = v4;
  MEMORY[0x1E0C80A78](v4);
  v135 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v134 = (char *)&v106 - v7;
  v142 = sub_1DA66D5C4();
  v138 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v133 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v132 = (char *)&v106 - v10;
  v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E410);
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v141 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40D8);
  v144 = *(_QWORD *)(v12 - 8);
  v145 = v12;
  MEMORY[0x1E0C80A78](v12);
  v129 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v139 = (char *)&v106 - v15;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4100);
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v113 = (os_unfair_lock_s *)((char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v116 = (char *)&v106 - v18;
  v126 = (_QWORD *)sub_1DA66DB34();
  v112 = *(v126 - 1);
  MEMORY[0x1E0C80A78](v126);
  v114 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  v111 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v109 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v110 = (char *)&v106 - v22;
  v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  v108 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v107 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v140 = (char *)&v106 - v25;
  v26 = sub_1DA66EBD8();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = (os_unfair_lock_s *)objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v147[0] = v30;
  swift_unknownObjectRetain();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v32 = *(void (**)(char *, uint64_t))(v27 + 8);
  v32(v29, v26);

  sub_1DA66D8D0();
  sub_1DA66BE60();
  sub_1DA66EDDC();
  v33 = -[os_unfair_lock_s privateQueueContext](v147[0], sel_privateQueueContext);
  v34 = (os_unfair_lock_s *)sub_1DA66D8C4();
  swift_unknownObjectRelease();

  swift_release();
  v147[0] = v34;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v32(v29, v26);
  swift_release();
  swift_release();
  sub_1DA66CC88();
  sub_1DA66BE60();
  sub_1DA66EDDC();
  v35 = -[os_unfair_lock_s privateQueueContext](v147[0], sel_privateQueueContext);
  v36 = (os_unfair_lock_s *)sub_1DA66CC7C();
  swift_unknownObjectRelease();

  swift_release();
  v147[0] = v36;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v32(v29, v26);
  swift_release();
  swift_release();
  sub_1DA66D3CC();
  sub_1DA66BE60();
  sub_1DA66EDDC();
  sub_1DA66D408();
  sub_1DA66EDDC();
  v37 = (os_unfair_lock_s *)sub_1DA66D3C0();
  swift_release();
  v147[0] = v37;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v32(v29, v26);
  swift_release();
  swift_release();
  sub_1DA66D924();
  sub_1DA66BE60();
  sub_1DA66EDDC();
  v38 = -[os_unfair_lock_s privateQueueContext](v147[0], sel_privateQueueContext);
  v39 = (os_unfair_lock_s *)sub_1DA66D918();
  swift_unknownObjectRelease();

  swift_release();
  v147[0] = v39;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v32(v29, v26);
  swift_release();
  swift_release();
  sub_1DA66D810();
  sub_1DA66BE60();
  v115 = v31;
  sub_1DA66EDDC();
  sub_1DA66DB94();
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_1DA66DB88();
  sub_1DA66BE60();
  v40 = (os_unfair_lock_s *)sub_1DA66D804();
  v41 = v29;
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  v147[0] = v40;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v32(v29, v26);
  swift_release();
  v42 = v32;
  swift_release();
  v43 = (os_unfair_lock_s *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7F240]), sel_init);
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE0040);
  v147[0] = v43;
  v44 = v43;
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v125 = v26;
  v32(v29, v26);

  swift_release();
  if (qword_1EDAE0190 != -1)
    swift_once();
  v45 = type metadata accessor for AssetCaches();
  v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1EDAE0178);
  v47 = v108;
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
  v49 = v140;
  v50 = v143;
  v48(v140, v46, v143);
  v48(v107, (uint64_t)v49, v50);
  v51 = v50;
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v52 = v125;
  v42(v41, v125);
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v51);
  v53 = v46 + *(int *)(v45 + 24);
  v54 = v111;
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 16);
  v56 = v110;
  v57 = v106;
  v55(v110, v53, v106);
  v55(v109, (uint64_t)v56, v57);
  sub_1DA66EBCC();
  v109 = (char *)sub_1DA66EE0C();
  v42(v41, v52);
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v57);
  v58 = v42;
  v59 = v114;
  sub_1DA66DB28();
  v60 = v116;
  sub_1DA66DB10();
  v61 = *(void (**)(char *, _QWORD *))(v112 + 8);
  v62 = v52;
  v63 = v126;
  v61(v59, v126);
  v64 = v127;
  v65 = v128;
  (*(void (**)(os_unfair_lock_s *, char *, uint64_t))(v127 + 16))(v113, v60, v128);
  sub_1DA66EBCC();
  v113 = (os_unfair_lock_s *)sub_1DA66EE0C();
  v58(v41, v62);
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v60, v65);
  sub_1DA66DB28();
  v66 = v139;
  sub_1DA66DB1C();
  v67 = v62;
  v61(v59, v63);
  v69 = v144;
  v68 = v145;
  (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v129, v66, v145);
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v58(v41, v67);
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v66, v68);
  v147[3] = (os_unfair_lock_s *)sub_1DA66CED4();
  v147[4] = (os_unfair_lock_s *)MEMORY[0x1E0D7DD58];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)v147);
  sub_1DA66CEC8();
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE41E8);
  sub_1DA4813E4((uint64_t)v147, (uint64_t)&v146);
  v129 = (char *)v70;
  sub_1DA66EBCC();
  v71 = sub_1DA66EE0C();
  v58(v41, v67);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v147);
  v114 = (char *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3C00);
  v139 = (char *)v71;
  sub_1DA66EDC4();
  v124 = v58;
  if (v147[0])
  {
    v113 = v147[0];
  }
  else
  {
    v72 = sub_1DA63D164(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B480);
    v73 = swift_allocObject();
    *(_DWORD *)(v73 + 24) = 0;
    v113 = (os_unfair_lock_s *)v73;
    *(_QWORD *)(v73 + 16) = v72;
  }
  v116 = v41;
  v74 = sub_1DA66D5B8();
  v75 = *(_QWORD *)(v74 + 16);
  v76 = (uint64_t)v141;
  if (v75)
  {
    v146 = (os_unfair_lock_s *)MEMORY[0x1E0DEE9D8];
    sub_1DA50A19C(0, v75, 0);
    v128 = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
    v77 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
    v112 = v74;
    v78 = v74 + v77;
    v127 = *(_QWORD *)(v138 + 72);
    v126 = *(_QWORD **)(v138 + 16);
    v79 = v132;
    v80 = (uint64_t)v133;
    v81 = (uint64_t)v134;
    do
    {
      v145 = v75;
      v82 = v142;
      v83 = (void (*)(uint64_t, char *, uint64_t))v126;
      ((void (*)(char *, unint64_t, uint64_t))v126)(v79, v78, v142);
      v144 = v76 + *(int *)(v131 + 48);
      v83(v76, v79, v82);
      v83(v80, v79, v82);
      sub_1DA66BE60();
      sub_1DA4EB11C(v80, v81);
      sub_1DA66EDDC();
      sub_1DA4841D4((unint64_t *)&qword_1EDAE4160, &qword_1EDAE4170, MEMORY[0x1E0D7DC20]);
      v84 = v137;
      sub_1DA66C934();
      sub_1DA66EDDC();
      sub_1DA66FE44();
      sub_1DA66DA5C();
      swift_release();
      v85 = *(void (**)(uint64_t, uint64_t))(v138 + 8);
      v85(v80, v82);
      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v81, v84);
      v85((uint64_t)v79, v82);
      v86 = (uint64_t)v146;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA50A19C(0, *(_QWORD *)(v86 + 16) + 1, 1);
        v86 = (uint64_t)v146;
      }
      v88 = *(_QWORD *)(v86 + 16);
      v87 = *(_QWORD *)(v86 + 24);
      v76 = (uint64_t)v141;
      if (v88 >= v87 >> 1)
      {
        sub_1DA50A19C(v87 > 1, v88 + 1, 1);
        v86 = (uint64_t)v146;
      }
      *(_QWORD *)(v86 + 16) = v88 + 1;
      sub_1DA4A686C(v76, v86+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(_QWORD *)(v130 + 72) * v88, (uint64_t *)&unk_1F026E410);
      v78 += v127;
      v75 = v145 - 1;
    }
    while (v145 != 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v86 = MEMORY[0x1E0DEE9D8];
  }
  v89 = v123;
  v90 = (os_unfair_lock_s *)sub_1DA518090(v86);
  swift_bridgeObjectRelease();
  v147[0] = v90;
  sub_1DA66DA68();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E420);
  sub_1DA5DDB3C((unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0]);
  sub_1DA4841D4(&qword_1F026E428, &qword_1F026E420, MEMORY[0x1E0DEAF38]);
  v91 = sub_1DA66F778();
  sub_1DA5DDB3C((unint64_t *)&unk_1F026E380, MEMORY[0x1E0D7E5F0]);
  sub_1DA67045C();
  v92 = sub_1DA640608((uint64_t)v147[0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v93 = swift_bridgeObjectRetain();
  v94 = sub_1DA63F944(v93, v92);
  swift_bridgeObjectRelease();
  v95 = *(_QWORD *)(v94 + 16);
  swift_release();
  if (v95)
  {
    v147[0] = 0;
    v147[1] = (os_unfair_lock_s *)0xE000000000000000;
    sub_1DA670444();
    sub_1DA66F988();
    swift_bridgeObjectRetain();
    sub_1DA66F790();
    sub_1DA66F988();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA66F988();
    sub_1DA66FC64();
    sub_1DA66F988();
    swift_bridgeObjectRelease();
    result = sub_1DA670570();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DA63DAE0(v113, v91, v147);
    swift_bridgeObjectRelease();
    swift_release();
    v146 = v147[0];
    sub_1DA66BE60();
    v96 = v116;
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    v97 = v125;
    v124(v96, v125);
    swift_release();
    swift_release();
    sub_1DA66EDDC();
    v98 = -[os_unfair_lock_s importContext](v147[0], sel_importContext);
    swift_unknownObjectRelease();
    sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
    sub_1DA66FE5C();
    v99 = v118;
    v100 = (uint64_t)v117;
    v101 = v120;
    (*(void (**)(char *, _QWORD, uint64_t))(v118 + 104))(v117, *MEMORY[0x1E0D7EF98], v120);
    sub_1DA4EAF00(v100);
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v100, v101);
    v102 = v121;
    sub_1DA66D9D8();
    v103 = v122;
    (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v119, v102, v89);
    sub_1DA66EBCC();
    v104 = sub_1DA66EE0C();
    v124(v96, v97);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v89);
    swift_release();
    return v104;
  }
  return result;
}

uint64_t sub_1DA63F91C(uint64_t a1)
{
  return PodcastsFoundationBootstrap.buildForegroundDependencies(basedOn:)(a1);
}

uint64_t sub_1DA63F930()
{
  return PodcastsFoundationBootstrap.buildBackgroundDependencies()();
}

uint64_t sub_1DA63F944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  unint64_t v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E438);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66D5C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v57 = (char *)&v51 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v58 = a1;
  v59 = a1 + 64;
  v18 = a1;
  v19 = a1 + 64;
  v20 = v17 & v14;
  v21 = v15;
  v60 = v15;
  v61 = 0;
  v62 = v17 & v14;
  v56 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v52 = v6;
  v55 = a2;
  v53 = v20;
  v54 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v58 = v22;
    v59 = v27;
    v60 = v21;
    v61 = v26;
    v62 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1DA4F1D6C();
      sub_1DA47E2F0((uint64_t)v6, &qword_1F026E438);
      return v55;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v6, v7);
    v32 = v55;
    sub_1DA5DDB3C((unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0]);
    v33 = sub_1DA66F7F0();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v56[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v57, v7);
    v23 = v61;
    v20 = v62;
    v22 = v58;
    v19 = v59;
    v21 = v60;
    v6 = v52;
    v53 = v62;
    v54 = v61;
    if (v62)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v54 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v10, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_1DA5DDB3C((unint64_t *)&unk_1F026E440, MEMORY[0x1E0D7E5E8]);
    v40 = sub_1DA66F850();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v10, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v56[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v57, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v51 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v56, v45);
    sub_1DA63FEF0((unint64_t *)((char *)&v51 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v58);
    v47 = v46;
    swift_release();
    sub_1DA4F1D6C();
  }
  else
  {
    v49 = (void *)swift_slowAlloc();
    memcpy(v49, v56, v45);
    sub_1DA63FEF0((unint64_t *)v49, v44, v36, v35, &v58);
    v47 = v50;
    swift_release();
    sub_1DA4F1D6C();
    MEMORY[0x1DF0A0474](v49, -1, -1);
  }
  return v47;
}

void sub_1DA63FEF0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v48 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E438);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66D5C4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v56 = (char *)&v47 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v50 = a1;
  v51 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v54 = a3 + 56;
  v55 = a3;
  v52 = a5;
  while (2)
  {
    v49 = v22;
    do
    {
      while (1)
      {
        v25 = *a5;
        v24 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v53 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t, __n128))(v13 + 16))(v11, *(_QWORD *)(v25 + 48) + *(_QWORD *)(v13 + 72) * v30, v12, v17);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * v40);
        if (v42)
          goto LABEL_17;
        if (v26 + 2 >= v41)
          goto LABEL_34;
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 2));
        if (v42)
        {
          v40 = v26 + 2;
LABEL_17:
          v29 = (v42 - 1) & v42;
          v30 = __clz(__rbit64(v42)) + (v40 << 6);
          v26 = v40;
          goto LABEL_7;
        }
        if (v26 + 3 >= v41)
        {
          v29 = 0;
          v31 = 1;
          v26 += 2;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v40 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v24 + 8 * v40);
          if (v42)
            goto LABEL_17;
          v40 = v41 - 1;
          v45 = v26 + 5;
          while (v41 != v45)
          {
            v42 = *(_QWORD *)(v24 + 8 * v45++);
            if (v42)
            {
              v40 = v45 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          v29 = 0;
          v31 = 1;
          v26 = v40;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v25;
        a5[1] = v24;
        a5[2] = v53;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_1DA47E2F0((uint64_t)v11, &qword_1F026E438);
          v46 = v55;
          sub_1DA66BE60();
          sub_1DA640324(v50, v48, v49, v46);
          return;
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v56, v11, v12);
        v32 = v55;
        sub_1DA5DDB3C((unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0]);
        v33 = sub_1DA66F7F0();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(void (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        v23(v56, v12);
        v11 = v51;
        a5 = v52;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v15, *(_QWORD *)(v55 + 48) + v37 * v35, v12);
        sub_1DA5DDB3C((unint64_t *)&unk_1F026E440, MEMORY[0x1E0D7E5E8]);
        v39 = sub_1DA66F850();
        v23 = *(void (**)(char *, uint64_t))(v13 + 8);
        v23(v15, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      v23(v56, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v51;
      v44 = *(unint64_t *)((char *)v50 + v43);
      *(unint64_t *)((char *)v50 + v43) = v44 & ~(1 << v35);
      a5 = v52;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v49 - 1;
    if (__OFSUB__(v49, 1))
    {
LABEL_41:
      __break(1u);
      return;
    }
    if (v49 != 1)
      continue;
    break;
  }
}

uint64_t sub_1DA640324(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_1DA66D5C4();
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C958);
  result = sub_1DA670420();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_38;
      if (v20 >= v37)
      {
LABEL_35:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_35;
        v21 = v36[v15];
        if (!v21)
        {
          v22 = v20 + 2;
          if (v22 >= v37)
            goto LABEL_35;
          v21 = v36[v22];
          if (!v21)
          {
            while (1)
            {
              v15 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_39;
              if (v15 >= v37)
                goto LABEL_35;
              v21 = v36[v15];
              ++v22;
              if (v21)
                goto LABEL_22;
            }
          }
          v15 = v22;
        }
      }
LABEL_22:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_1DA5DDB3C((unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0]);
    result = sub_1DA66F7F0();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_35;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1DA640608(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v2 = sub_1DA66D5C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_1DA5DDB3C((unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0]);
  result = sub_1DA66FC7C();
  v15 = result;
  if (v9)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v13(v5, v11, v2);
      sub_1DA5D9A78((uint64_t)v8, v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v15;
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsFoundationBootstrap()
{
  return &type metadata for PodcastsFoundationBootstrap;
}

unint64_t sub_1DA640738(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B208);
  v3 = (_QWORD *)sub_1DA6705D0();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1DA55CB08(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1DA55CB08(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1DA640834(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CB8);
  v3 = (_QWORD *)sub_1DA6705D0();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1DA55CB14(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1DA55CB14(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1DA640934(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B200);
  v3 = (_QWORD *)sub_1DA6705D0();
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_1DA55CBBC(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1DA55CBBC(v4);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA640A40(unint64_t a1)
{
  return sub_1DA640AF8(a1, (unint64_t *)&qword_1EDADE760, 0x1E0CB37E8, (unint64_t *)&qword_1F026D720, (void (*)(id *, uint64_t))sub_1DA5DA120);
}

uint64_t sub_1DA640A64(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1DA66FC7C();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1DA5DA13C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1DA640AD4(unint64_t a1)
{
  return sub_1DA640AF8(a1, (unint64_t *)&qword_1EDAE4C00, 0x1E0C97B90, &qword_1F026E3B8, (void (*)(id *, uint64_t))sub_1DA5DA234);
}

uint64_t sub_1DA640AF8(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DA6705A0();
    swift_bridgeObjectRelease();
  }
  sub_1DA47D774(0, a2);
  sub_1DA640C74(a4, a2);
  result = sub_1DA66FC7C();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1DA6705A0();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x1DF09EE48](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA640C74(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1DA47D774(255, a2);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ConcurrencyActionImplmenetation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a1;
  v31 = a4;
  v32 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v26 = AssociatedTypeWitness;
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v25 - v8;
  v27 = (char *)&v25 - v8;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02691E8);
  v28 = sub_1DA66F658();
  v17 = sub_1DA66FB98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v29, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v30, AssociatedTypeWitness);
  v18 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v19 = (v11 + v18 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = 0;
  *((_QWORD *)v21 + 3) = 0;
  v22 = v31;
  *((_QWORD *)v21 + 4) = a3;
  *((_QWORD *)v21 + 5) = v22;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v21[v18], v13, a3);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v21[v19], v27, v26);
  *(_QWORD *)&v21[v20] = v32;
  v23 = v28;
  *(_QWORD *)&v21[(v20 + 15) & 0xFFFFFFFFFFFFFFF8] = v28;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA6411AC((uint64_t)v16, (uint64_t)&unk_1F026E488, (uint64_t)v21);
  sub_1DA4F1538((uint64_t)v16);
  swift_release();
  return v23;
}

uint64_t sub_1DA640EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  v8[2] = a7;
  v12 = sub_1DA66ED70();
  v8[3] = v12;
  v8[4] = *(_QWORD *)(v12 - 8);
  v13 = swift_task_alloc();
  v8[5] = v13;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v17 + 16) + *(_QWORD *)(v17 + 16));
  v14 = (_QWORD *)swift_task_alloc();
  v8[6] = v14;
  *v14 = v8;
  v14[1] = sub_1DA528118;
  return v16(v13, a5, a6, a8);
}

uint64_t sub_1DA640FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, AssociatedTypeWitness);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA6410A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = v1[4];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v1[2];
  v12 = v1[3];
  v13 = (uint64_t)v1 + v6;
  v14 = (uint64_t)v1 + v9;
  v15 = *(_QWORD *)((char *)v1 + v10);
  v16 = *(_QWORD *)((char *)v1 + ((v10 + 15) & 0xFFFFFFFFFFFFF8));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_1DA4AD77C;
  return sub_1DA640EE0(a1, v11, v12, v13, v14, v15, v16, v4);
}

uint64_t sub_1DA6411AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4A8C24(a1, (uint64_t)v8);
  v9 = sub_1DA66FB98();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DA4F1538((uint64_t)v8);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1DA66FB38();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1DA66FB8C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t dispatch thunk of ConcurrencyActionImplmenetation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 16) + *(_QWORD *)(a5 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1DA4AD77C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1DA6413C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t static PageRenderEvent.resourceFetchStarted(onScreen:)@<X0>(char a1@<W0>, _BYTE *a2@<X8>)
{
  return sub_1DA641468(a1, a2);
}

uint64_t static PageRenderEvent.resourceFetchCompleted(onScreen:)@<X0>(char a1@<W0>, _BYTE *a2@<X8>)
{
  return sub_1DA641468(a1, a2);
}

id static PageRenderEvent.resourceFetchFailed(_:onScreen:)@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = a2;
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t static PageRenderEvent.resourceFetchCancelled(onScreen:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1DA64158C(a1, 0, a2);
}

uint64_t static PageRenderEvent.primaryDataFetchStarted(withUI:)@<X0>(char a1@<W0>, _BYTE *a2@<X8>)
{
  return sub_1DA641468(a1, a2);
}

uint64_t sub_1DA641468@<X0>(char a1@<W0>, _BYTE *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static PageRenderEvent.primaryDataFetchCompleted(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DA66ED28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();
  return swift_storeEnumTagMultiPayload();
}

id static PageRenderEvent.primaryDataFetchFailed(_:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t static PageRenderEvent.primaryDataRendered.getter()
{
  return sub_1DA641614();
}

uint64_t static PageRenderEvent.resourceNotFound(onScreen:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1DA64158C(a1, 1, a2);
}

uint64_t sub_1DA64158C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _BYTE *v7;

  sub_1DA5C00F8();
  v6 = swift_allocError();
  *v7 = a2;
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 8) = a1;
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static PageRenderEvent.resourceRendered.getter()
{
  return sub_1DA641614();
}

uint64_t sub_1DA641614()
{
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static PageRenderEvent.reload.getter@<X0>(_BYTE *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for PageRenderEvent();
  return swift_storeEnumTagMultiPayload();
}

char *initializeBufferWithCopyOfBuffer for PageRenderEvent(char *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v7[(v6 + 16) & ~(unint64_t)v6];
    sub_1DA66BE60();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = type metadata accessor for PageRenderActivity();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        v11 = *(_QWORD *)a2;
        v12 = *(id *)a2;
        *(_QWORD *)a1 = v11;
        a1[8] = a2[8];
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v13 = *(void **)a2;
        v14 = v13;
        *(_QWORD *)a1 = v13;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v10 = sub_1DA66ED28();
        (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *assignWithCopy for PageRenderEvent(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  if (a1 != a2)
  {
    sub_1DA64193C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for PageRenderActivity();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          v9 = *(id *)a2;
          v10 = *(id *)a2;
          *(_QWORD *)a1 = v9;
          a1[8] = a2[8];
          swift_storeEnumTagMultiPayload();
          break;
        case 2:
          v11 = *(void **)a2;
          v12 = v11;
          *(_QWORD *)a1 = v11;
          swift_storeEnumTagMultiPayload();
          break;
        case 1:
          v8 = sub_1DA66ED28();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1DA64193C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PageRenderEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for PageRenderEvent(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for PageRenderActivity();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1DA66ED28();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for PageRenderEvent(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1DA64193C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for PageRenderActivity();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v7 = sub_1DA66ED28();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t ArtworkModel.preferredRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(_QWORD);
  double v25;
  id v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _BYTE v34[40];
  _BYTE v35[40];

  v2 = v1;
  v33 = a1;
  v3 = sub_1DA66D5C4();
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66D1F8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1DA66DEF4();
  v9 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v30 - v16;
  v18 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v30 - v22;
  sub_1DA484504(v2, (uint64_t)&v30 - v22, v24);
  v25 = *MEMORY[0x1E0D7F370];
  v26 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v26, sel_scale);

  v27 = sub_1DA66DD14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
  sub_1DA66DE94();
  sub_1DA66FD90();
  sub_1DA66D5D0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v31);
  v28 = MEMORY[0x1E0D7D7F0];
  sub_1DA484504((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  sub_1DA66C9F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0D7E1D0], v5);
  CGSize.fitting(_:aspectRule:)((uint64_t)v8, v25, v25);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1DA49CC94((uint64_t)v17, (uint64_t)v14, &qword_1EDAE53D8);
  sub_1DA66D5AC();
  sub_1DA49CC94((uint64_t)v35, (uint64_t)v34, &qword_1EDAE5310);
  sub_1DA66CE5C();
  sub_1DA47E2F0((uint64_t)v35, &qword_1EDAE5310);
  sub_1DA47E2F0((uint64_t)v17, &qword_1EDAE53D8);
  return sub_1DA47F880((uint64_t)v23, (uint64_t (*)(_QWORD))v28);
}

id sub_1DA641E78()
{
  id result;

  result = sub_1DA641E94();
  qword_1F026E4A0 = (uint64_t)result;
  return result;
}

id sub_1DA641E94()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v17;

  v0 = type metadata accessor for AssetCaches();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LibraryImageProvider();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - v7;
  if (qword_1EDAE3CE8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v3, (uint64_t)qword_1EDAE3CD0);
  sub_1DA484504(v9, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for LibraryImageProvider);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2018);
  v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultStore);
  sub_1DA47D774(0, &qword_1F026E500);
  v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sharedInstance);
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  if (qword_1EDAE0190 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE0178);
  sub_1DA484504(v13, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  v14 = (char *)objc_allocWithZone((Class)type metadata accessor for FeedManagerArtworkBridge());
  sub_1DA484504((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for LibraryImageProvider);
  v15 = sub_1DA643780((uint64_t)v5, (uint64_t)v10, v11, (uint64_t)v12, (uint64_t)v2, v14);

  sub_1DA47F880((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for LibraryImageProvider);
  return v15;
}

id FeedManagerArtworkBridge.__allocating_init(imageProvider:imageStore:imageDownloader:fileManager:caches:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v9 = *(_QWORD *)(a1 + 24);
  v20 = *(_QWORD *)(a1 + 32);
  v19 = __swift_mutable_project_boxed_opaque_existential_1(a1, v9);
  v11 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v12 = __swift_mutable_project_boxed_opaque_existential_1(a2, v11);
  v13 = *(_QWORD *)(a4 + 24);
  v14 = *(_QWORD *)(a4 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a4, v13);
  *((_QWORD *)&v18 + 1) = v10;
  *(_QWORD *)&v18 = v20;
  v16 = sub_1DA643B6C(v19, v12, a3, v15, a5, v22, v9, v11, v13, v18, v14);

  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v16;
}

id static FeedManagerArtworkBridge.shared.getter()
{
  if (qword_1F02687F8 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_1F026E4A0;
}

void static FeedManagerArtworkBridge.shared.setter(uint64_t a1)
{
  void *v2;

  if (qword_1F02687F8 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_1F026E4A0;
  qword_1F026E4A0 = a1;

}

uint64_t (*static FeedManagerArtworkBridge.shared.modify())()
{
  if (qword_1F02687F8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FeedManagerArtworkBridge.imageProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider, a1);
}

uint64_t FeedManagerArtworkBridge.caches.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA484504(v1 + OBJC_IVAR___PUIFeedManagerArtworkBridge_caches, a1, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
}

uint64_t FeedManagerArtworkBridge.imageStore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore, a1);
}

uint64_t FeedManagerArtworkBridge.fileManager.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + OBJC_IVAR___PUIFeedManagerArtworkBridge_fileManager, a1);
}

id FeedManagerArtworkBridge.imageDownloader.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageDownloader);
}

id FeedManagerArtworkBridge.init(imageProvider:imageStore:imageDownloader:fileManager:caches:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;

  v35 = a5;
  v8 = *(_QWORD *)(a1 + 24);
  v33 = *(_QWORD *)(a1 + 32);
  v34 = a3;
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v13 + 16))(v12, v10);
  v14 = *(_QWORD *)(a2 + 24);
  v32 = *(_QWORD *)(a2 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a2, v14);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v19 + 16))(v18, v16);
  v21 = *(_QWORD *)(a4 + 24);
  v20 = *(_QWORD *)(a4 + 32);
  v22 = __swift_mutable_project_boxed_opaque_existential_1(a4, v21);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v26 + 16))(v25, v23);
  v30 = v20;
  v27 = v34;
  v28 = sub_1DA643978((uint64_t)v12, (uint64_t)v18, v34, (uint64_t)v25, v35, v36, v8, v14, v21, v33, v32, v30);

  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v28;
}

uint64_t sub_1DA642620(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  char v46;
  uint8_t *v47;
  os_signpost_id_t v48;
  uint8_t *v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  __int128 v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  void (*v81)(char *, char *, uint64_t);
  NSObject *v82;
  os_log_type_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  char *v91;
  char *v92;
  NSObject *v93;
  os_log_type_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, uint64_t);
  os_log_type_t v102;
  void (*v103)(char *, uint64_t);
  _QWORD *v104;
  NSObject *v105;
  char *v106;
  os_signpost_type_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  const char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint8_t *v121;
  os_signpost_id_t v122;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t);
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  __int128 v148;
  void (*v149)(char *, uint64_t);
  __int128 v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;

  v159 = a1;
  v129 = sub_1DA66DDE0();
  v132 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v125 = (char *)&v124 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v127 = (char *)&v124 - v4;
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C0);
  v144 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v143 = (char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_1DA66DEF4();
  v146 = *(_QWORD *)(v153 - 8);
  MEMORY[0x1E0C80A78](v153);
  v142 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v141 = (char *)&v124 - v8;
  MEMORY[0x1E0C80A78](v9);
  v154 = (char *)&v124 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AFA0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DA66CEBC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v140 = (char *)&v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v147 = (char *)&v124 - v18;
  MEMORY[0x1E0C80A78](v19);
  v152 = (char *)&v124 - v20;
  MEMORY[0x1E0C80A78](v21);
  v157 = (char *)&v124 - v22;
  MEMORY[0x1E0C80A78](v23);
  *(_QWORD *)&v150 = (char *)&v124 - v24;
  MEMORY[0x1E0C80A78](v25);
  v149 = (void (*)(char *, uint64_t))((char *)&v124 - v26);
  MEMORY[0x1E0C80A78](v27);
  *(_QWORD *)&v148 = (char *)&v124 - v28;
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  v158 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v30 = (char *)&v124 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v151 = (uint64_t)&v124 - v32;
  v33 = sub_1DA66DD74();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v128 = (char *)&v124 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v130 = (char *)&v124 - v37;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v124 - v39;
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v124 - v42;
  v126 = v1;
  v44 = v1 + OBJC_IVAR___PUIFeedManagerArtworkBridge_signposter;
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v133 = v44;
  v45 = sub_1DA66DDB0();
  LODWORD(v156) = sub_1DA66FF58();
  v46 = sub_1DA670240();
  v137 = v33;
  if ((v46 & 1) != 0)
  {
    v138 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v138(v40, v43, v33);
    v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v47 = 0;
    v48 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v45, (os_signpost_type_t)v156, v48, "InvalidateShowArtwork", "", v47, 2u);
    v49 = v47;
    v33 = v137;
    MEMORY[0x1DF0A0474](v49, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v33);
    v50 = v138;
  }
  else
  {

    v50 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  }
  v138 = v50;
  v50(v40, v43, v33);
  sub_1DA66DE10();
  swift_allocObject();
  v131 = v40;
  v135 = sub_1DA66DE04();
  v134 = *(void (**)(char *, uint64_t))(v34 + 8);
  v134(v43, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E4B0);
  v51 = *(_QWORD *)(v158 + 72);
  v52 = (*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1DA678FE0;
  v136 = v53;
  v54 = v53 + v52;
  sub_1DA670210();
  v156 = v51;
  v158 = v54;
  sub_1DA670228();
  v55 = 0;
  v56 = 0;
  v159 = MEMORY[0x1E0DEE9D8];
  v155 = v15;
  v57 = v151;
  do
  {
    v58 = v55;
    sub_1DA49CC94(v158 + v56 * v156, v57, &qword_1EDAE4108);
    sub_1DA49CC94(v57, (uint64_t)v30, &qword_1EDAE4108);
    v59 = sub_1DA66CA0C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v30, 1, v59) == 1)
    {
      sub_1DA47E2F0((uint64_t)v30, &qword_1EDAE4108);
      v60 = 1;
    }
    else
    {
      v61 = v13;
      v62 = v14;
      v63 = (uint64_t)v149;
      ArtworkModel.preferredRequest.getter((uint64_t)v149);
      sub_1DA47F880((uint64_t)v30, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
      v64 = v150;
      sub_1DA66CE20();
      v65 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v66 = v63;
      v14 = v62;
      v13 = v61;
      v65(v66, v14);
      sub_1DA66CDE4();
      v67 = v64;
      v57 = v151;
      v65(v67, v14);
      v60 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v60, 1, v14);
    sub_1DA47E2F0(v57, &qword_1EDAE4108);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_1DA47E2F0((uint64_t)v13, &qword_1F026AFA0);
    }
    else
    {
      v68 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v69 = (char *)v148;
      v68((char *)v148, v13, v14);
      v68(v157, v69, v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v70 = v159;
      else
        v70 = sub_1DA540B70(0, *(_QWORD *)(v159 + 16) + 1, 1, v159);
      v72 = *(_QWORD *)(v70 + 16);
      v71 = *(_QWORD *)(v70 + 24);
      if (v72 >= v71 >> 1)
        v70 = sub_1DA540B70(v71 > 1, v72 + 1, 1, v70);
      *(_QWORD *)(v70 + 16) = v72 + 1;
      v73 = v155;
      v74 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
      v159 = v70;
      v68((char *)(v70 + v74 + *(_QWORD *)(v155 + 72) * v72), v157, v14);
      v15 = v73;
    }
    v55 = 1;
    v56 = 1;
  }
  while ((v58 & 1) == 0);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v75 = v159;
  v160 = v159;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E4B8);
  sub_1DA643CE0();
  if ((sub_1DA66FCDC() & 1) != 0)
  {
    v77 = *(_QWORD *)(v75 + 16);
    if (v77)
    {
      v156 = v126 + OBJC_IVAR___PUIFeedManagerArtworkBridge_caches;
      v78 = v75 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      v151 = *(_QWORD *)(v15 + 72);
      v157 = *(char **)(v15 + 16);
      *(_QWORD *)&v76 = 138412290;
      v150 = v76;
      *(_QWORD *)&v76 = 136315138;
      v148 = v76;
      v139 = MEMORY[0x1E0DEE9B8] + 8;
      v79 = v147;
      v80 = v152;
      do
      {
        v81 = (void (*)(char *, char *, uint64_t))v157;
        ((void (*)(char *, unint64_t, uint64_t))v157)(v80, v78, v14);
        sub_1DA66DE94();
        v81(v79, v80, v14);
        v82 = sub_1DA66DEDC();
        v83 = sub_1DA66FD90();
        if (os_log_type_enabled(v82, v83))
        {
          v84 = v79;
          v85 = swift_slowAlloc();
          v86 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v85 = v150;
          v87 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
          *(_QWORD *)(v85 + 4) = v87;
          *v86 = v87;
          v158 = *(_QWORD *)(v15 + 8);
          ((void (*)(char *, uint64_t))v158)(v84, v14);
          _os_log_impl(&dword_1DA478000, v82, v83, "Attempting to invalidate request: %@", (uint8_t *)v85, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
          swift_arrayDestroy();
          MEMORY[0x1DF0A0474](v86, -1, -1);
          MEMORY[0x1DF0A0474](v85, -1, -1);
        }
        else
        {
          v158 = *(_QWORD *)(v15 + 8);
          ((void (*)(char *, uint64_t))v158)(v79, v14);
        }
        v88 = v145;
        v89 = v143;

        v90 = *(void (**)(char *, uint64_t))(v146 + 8);
        v90(v154, v153);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
        sub_1DA66C97C();
        v91 = v152;
        sub_1DA66C940();
        (*(void (**)(char *, uint64_t))(v144 + 8))(v89, v88);
        sub_1DA66DE94();
        v92 = v140;
        ((void (*)(char *, char *, uint64_t))v157)(v140, v91, v14);
        v93 = sub_1DA66DEDC();
        v94 = sub_1DA66FD90();
        if (os_log_type_enabled(v93, v94))
        {
          v95 = v92;
          v96 = swift_slowAlloc();
          v97 = swift_slowAlloc();
          v149 = v90;
          v98 = (_QWORD *)v97;
          *(_DWORD *)v96 = v150;
          v99 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
          *(_QWORD *)(v96 + 4) = v99;
          *v98 = v99;
          v100 = v95;
          v101 = (void (*)(char *, uint64_t))v158;
          ((void (*)(char *, uint64_t))v158)(v100, v14);
          v102 = v94;
          v103 = v101;
          _os_log_impl(&dword_1DA478000, v93, v102, "Invalidated request: %@", (uint8_t *)v96, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
          swift_arrayDestroy();
          v104 = v98;
          v90 = v149;
          MEMORY[0x1DF0A0474](v104, -1, -1);
          MEMORY[0x1DF0A0474](v96, -1, -1);

        }
        else
        {

          v103 = (void (*)(char *, uint64_t))v158;
          ((void (*)(char *, uint64_t))v158)(v92, v14);
        }
        v79 = v147;
        v80 = v152;
        v90(v141, v153);
        v103(v80, v14);
        v78 += v151;
        --v77;
      }
      while (v77);
    }
    swift_bridgeObjectRelease();
    v115 = v132;
    v112 = v137;
    v116 = v131;
    v117 = v127;
    v118 = v130;
    v113 = v134;
    v105 = sub_1DA66DDB0();
    sub_1DA66DDF8();
    v119 = v118;
    v107 = sub_1DA66FF4C();
    if ((sub_1DA670240() & 1) == 0)
    {

      v116 = v119;
LABEL_41:
      v113(v116, v112);
      return swift_release();
    }
    sub_1DA66BE60();
    sub_1DA66DE1C();
    swift_release();
    v120 = v129;
    if ((*(unsigned int (**)(char *, uint64_t))(v115 + 88))(v117, v129) == *MEMORY[0x1E0DF2190])
    {
      v114 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v120);
      v114 = "";
    }
    v106 = v130;
    v138(v116, v130, v112);
LABEL_40:
    v121 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v121 = 0;
    v122 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v105, v107, v122, "InvalidateShowArtwork", v114, v121, 2u);
    MEMORY[0x1DF0A0474](v121, -1, -1);

    v113(v106, v112);
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  v105 = sub_1DA66DDB0();
  v106 = v128;
  sub_1DA66DDF8();
  v107 = sub_1DA66FF4C();
  if ((sub_1DA670240() & 1) != 0)
  {
    sub_1DA66BE60();
    v108 = v125;
    sub_1DA66DE1C();
    swift_release();
    v109 = v132;
    v110 = v129;
    v111 = (*(uint64_t (**)(char *, uint64_t))(v132 + 88))(v108, v129);
    v112 = v137;
    v113 = v134;
    if (v111 == *MEMORY[0x1E0DF2190])
    {
      v114 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v110);
      v114 = "";
    }
    v116 = v131;
    v138(v131, v106, v112);
    goto LABEL_40;
  }

  v134(v106, v137);
  return swift_release();
}

uint64_t sub_1DA6435D8(void *a1, uint64_t a2, int a3)
{
  return sub_1DA643D2C(a1, a3);
}

id FeedManagerArtworkBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FeedManagerArtworkBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FeedManagerArtworkBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedManagerArtworkBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1DA643780(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *boxed_opaque_existential_1;
  char *v17;
  id v18;
  objc_class *v19;
  id v20;
  uint64_t v22;
  objc_super v23;
  _QWORD v24[5];
  _QWORD v25[5];
  uint64_t v26[5];

  v12 = sub_1DA66DDD4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[3] = type metadata accessor for LibraryImageProvider();
  v26[4] = (uint64_t)&protocol witness table for LibraryImageProvider;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  sub_1DA4F7228(a1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for LibraryImageProvider);
  v25[3] = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2018);
  v25[4] = &protocol witness table for MTImageStore;
  v25[0] = a2;
  v24[3] = sub_1DA47D774(0, (unint64_t *)&unk_1EDAE4BD0);
  v24[4] = MEMORY[0x1E0D7EF78];
  v24[0] = a4;
  sub_1DA4813E4((uint64_t)v26, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider]);
  sub_1DA4813E4((uint64_t)v25, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore]);
  *(_QWORD *)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageDownloader] = a3;
  sub_1DA4813E4((uint64_t)v24, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_fileManager]);
  sub_1DA484504(a5, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_caches], (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  v17 = a6;
  v18 = a3;
  sub_1DA66DDA4();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[OBJC_IVAR___PUIFeedManagerArtworkBridge_signposter], v15, v12);

  v19 = (objc_class *)type metadata accessor for FeedManagerArtworkBridge();
  v23.receiver = v17;
  v23.super_class = v19;
  v20 = objc_msgSendSuper2(&v23, sel_init);
  sub_1DA47F880(a5, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  return v20;
}

id sub_1DA643978(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v21;
  uint64_t *v22;
  void *v23;
  uint64_t v24;
  char *v25;
  id v26;
  objc_class *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;
  uint64_t v37[5];
  uint64_t v38[5];
  uint64_t v39[6];

  v33 = a5;
  v31 = a4;
  v32 = a3;
  v17 = sub_1DA66DDD4();
  v34 = *(_QWORD *)(v17 - 8);
  v35 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[3] = a7;
  v39[4] = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_1, a1, a7);
  v38[3] = a8;
  v38[4] = a11;
  v21 = __swift_allocate_boxed_opaque_existential_1(v38);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(v21, a2, a8);
  v37[3] = a9;
  v37[4] = a12;
  v22 = __swift_allocate_boxed_opaque_existential_1(v37);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(v22, v31, a9);
  sub_1DA4813E4((uint64_t)v39, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider]);
  sub_1DA4813E4((uint64_t)v38, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore]);
  v23 = v32;
  *(_QWORD *)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageDownloader] = v32;
  sub_1DA4813E4((uint64_t)v37, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_fileManager]);
  v24 = v33;
  sub_1DA484504(v33, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_caches], (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  v25 = a6;
  v26 = v23;
  sub_1DA66DDA4();
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v25[OBJC_IVAR___PUIFeedManagerArtworkBridge_signposter], v19, v35);

  v27 = (objc_class *)type metadata accessor for FeedManagerArtworkBridge();
  v36.receiver = v25;
  v36.super_class = v27;
  v28 = objc_msgSendSuper2(&v36, sel_init);
  sub_1DA47F880(v24, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  return v28;
}

id sub_1DA643B6C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  void *v33;
  uint64_t v34;

  v33 = a3;
  v34 = a5;
  v29 = a2;
  v30 = a4;
  v28 = a1;
  v32 = a10;
  v31 = a11;
  v13 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (char *)objc_allocWithZone((Class)type metadata accessor for FeedManagerArtworkBridge());
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v28, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v29, a8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v30, a9);
  return sub_1DA643978((uint64_t)v25, (uint64_t)v20, v33, (uint64_t)v15, v34, v26, a7, a8, a9, v32, *((uint64_t *)&v32 + 1), v31);
}

unint64_t sub_1DA643CE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026E4C0;
  if (!qword_1F026E4C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026E4B8);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1F026E4C0);
  }
  return result;
}

uint64_t sub_1DA643D2C(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_signpost_type_t v29;
  char v30;
  void (*v31)(char *, char *, uint64_t);
  uint8_t *v32;
  os_signpost_id_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  NSObject *v47;
  char *v48;
  os_signpost_type_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_signpost_type_t v69;
  uint64_t v70;
  const char *v71;
  uint8_t *v72;
  os_signpost_id_t v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint8_t *v76;
  os_signpost_id_t v77;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  int v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;

  v97 = a1;
  v85 = sub_1DA66DDE0();
  v94 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v80 = (void (*)(char *, char *, uint64_t))((char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v89 = (char *)&v79 - v6;
  v7 = sub_1DA66CEBC();
  v83 = *(_QWORD *)(v7 - 8);
  v84 = v7;
  MEMORY[0x1E0C80A78](v7);
  v82 = (uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v9);
  v87 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v91 = (char *)&v79 - v12;
  v95 = sub_1DA66CA0C();
  v90 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v79 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v81 = (uint64_t)&v79 - v15;
  v16 = sub_1DA66DD74();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v92 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v93 = (char *)&v79 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v79 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v79 - v25;
  v27 = v2 + OBJC_IVAR___PUIFeedManagerArtworkBridge_signposter;
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v28 = sub_1DA66DDB0();
  v29 = sub_1DA66FF58();
  v30 = sub_1DA670240();
  v88 = a2;
  v96 = v27;
  if ((v30 & 1) != 0)
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v31(v23, v26, v16);
    v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v32 = 0;
    v33 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v28, v29, v33, "PrefetchShowArtworkInterval", "", v32, 2u);
    MEMORY[0x1DF0A0474](v32, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v16);
  }
  else
  {

    v31 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  }
  v34 = v2;
  v35 = v97;
  v31(v23, v26, v16);
  sub_1DA66DE10();
  swift_allocObject();
  v36 = sub_1DA66DE04();
  v37 = *(void (**)(char *, uint64_t))(v17 + 8);
  v37(v26, v16);
  v38 = objc_msgSend(v35, sel_uuid);
  if (v38)
  {
    v39 = v38;
    v80 = v31;
    v86 = v37;
    v92 = (char *)v36;
    v40 = sub_1DA66F8BC();
    v42 = v41;

    v44 = *(_QWORD *)(v34 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore + 24);
    v43 = *(_QWORD *)(v34 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v34 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore), v44);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v40, v42, v44, v43);
    swift_bridgeObjectRelease();
    v45 = (uint64_t)v91;
    sub_1DA670210();
    v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
    if (v46(v45, 1, v95) == 1)
    {
      sub_1DA47E2F0(v45, &qword_1EDAE4108);
    }
    else
    {
      v55 = v45;
      v56 = v81;
      sub_1DA4F7228(v55, v81, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
      v57 = *(_QWORD *)(v34 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider + 24);
      v58 = *(_QWORD *)(v34 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v34 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider), v57);
      v59 = v82;
      ArtworkModel.preferredRequest.getter(v82);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v59, v57, v58);
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v59, v84);
      sub_1DA47F880(v56, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    }
    v60 = v93;
    v61 = v94;
    v62 = v89;
    v63 = (uint64_t)v87;
    if ((v88 & 1) != 0)
    {
      sub_1DA670228();
      if (v46(v63, 1, v95) == 1)
      {
        sub_1DA47E2F0(v63, &qword_1EDAE4108);
      }
      else
      {
        v64 = v79;
        sub_1DA4F7228(v63, v79, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
        v65 = *(_QWORD *)(v34 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider + 24);
        v66 = *(_QWORD *)(v34 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider + 32);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v34 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider), v65);
        v67 = v82;
        ArtworkModel.preferredRequest.getter(v82);
        v60 = v93;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v67, v65, v66);
        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v67, v84);
        sub_1DA47F880(v64, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
      }
    }
    v68 = sub_1DA66DDB0();
    sub_1DA66DDF8();
    v69 = sub_1DA66FF4C();
    if ((sub_1DA670240() & 1) != 0)
    {
      sub_1DA66BE60();
      sub_1DA66DE1C();
      swift_release();
      v70 = v85;
      if ((*(unsigned int (**)(char *, uint64_t))(v61 + 88))(v62, v85) == *MEMORY[0x1E0DF2190])
      {
        v71 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v70);
        v71 = "";
      }
      v80(v23, v60, v16);
      v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v72 = 0;
      v73 = sub_1DA66DD5C();
      _os_signpost_emit_with_name_impl(&dword_1DA478000, v68, v69, v73, "PrefetchShowArtworkInterval", v71, v72, 2u);
      MEMORY[0x1DF0A0474](v72, -1, -1);

      v74 = v86;
      v86(v60, v16);
      v74(v23, v16);
    }
    else
    {

      v86(v60, v16);
    }
  }
  else
  {
    v47 = sub_1DA66DDB0();
    v48 = v92;
    sub_1DA66DDF8();
    v49 = sub_1DA66FF4C();
    if ((sub_1DA670240() & 1) != 0)
    {
      v50 = v31;
      v86 = v37;
      sub_1DA66BE60();
      v51 = (char *)v80;
      sub_1DA66DE1C();
      swift_release();
      v52 = v94;
      v53 = v85;
      if ((*(unsigned int (**)(char *, uint64_t))(v94 + 88))(v51, v85) == *MEMORY[0x1E0DF2190])
      {
        v54 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
        v54 = "";
      }
      v75 = v92;
      v50(v23, v92, v16);
      v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v76 = 0;
      v77 = sub_1DA66DD5C();
      _os_signpost_emit_with_name_impl(&dword_1DA478000, v47, v49, v77, "PrefetchShowArtworkInterval", v54, v76, 2u);
      MEMORY[0x1DF0A0474](v76, -1, -1);

      v37 = v86;
      v86(v75, v16);
    }
    else
    {

      v23 = v48;
    }
    v37(v23, v16);
  }
  return swift_release();
}

uint64_t type metadata accessor for FeedManagerArtworkBridge()
{
  uint64_t result;

  result = qword_1F026E4F0;
  if (!qword_1F026E4F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA644534()
{
  return type metadata accessor for FeedManagerArtworkBridge();
}

uint64_t sub_1DA64453C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for AssetCaches();
  if (v1 <= 0x3F)
  {
    result = sub_1DA66DDD4();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FeedManagerArtworkBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedManagerArtworkBridge.__allocating_init(imageProvider:imageStore:imageDownloader:fileManager:caches:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedManagerArtworkBridge.invalidateArtwork(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FeedManagerArtworkBridge.updateArtwork(for:useBackgroundFetch:fetchUber:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.podcastAdamID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.episodeAdamID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.episodeUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.feedURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.accountID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.position.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.subscribable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.completed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of PlaybackPositionTracker.shouldTrackPosition(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of PlaybackPositionTracker.updatePlaybackPosition(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t storeEnumTagSinglePayload for PlaybackPositionTrackerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DA6446D8 + 4 * byte_1DA685055[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DA64470C + 4 * byte_1DA685050[v4]))();
}

uint64_t sub_1DA64470C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA644714(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA64471CLL);
  return result;
}

uint64_t sub_1DA644728(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA644730);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DA644734(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA64473C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackPositionTrackerError()
{
  return &type metadata for PlaybackPositionTrackerError;
}

unint64_t sub_1DA64475C()
{
  unint64_t result;

  result = qword_1F026E508[0];
  if (!qword_1F026E508[0])
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA685110, &type metadata for PlaybackPositionTrackerError);
    atomic_store(result, qword_1F026E508);
  }
  return result;
}

uint64_t FetchMAPIRepresentableIntent.contentType.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t MAPIRepresentableError;

  v3 = *(_QWORD *)(a1 + 16);
  sub_1DA66CD6C();
  if (swift_dynamicCastMetatype())
  {
    v4 = (unsigned int *)MEMORY[0x1E0D7D830];
LABEL_7:
    v7 = *v4;
    v8 = sub_1DA66CA3C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a2, v7, v8);
  }
  sub_1DA66CD78();
  if (swift_dynamicCastMetatype())
  {
    v4 = (unsigned int *)MEMORY[0x1E0D7D840];
    goto LABEL_7;
  }
  sub_1DA66D6CC();
  if (swift_dynamicCastMetatype())
  {
    v4 = (unsigned int *)MEMORY[0x1E0D7D838];
    goto LABEL_7;
  }
  MAPIRepresentableError = type metadata accessor for FetchMAPIRepresentableIntent.FetchMAPIRepresentableError(0, v3, v5, v6);
  MEMORY[0x1DF0A039C](&unk_1DA6852D8, MAPIRepresentableError);
  swift_allocError();
  return swift_willThrow();
}

uint64_t type metadata accessor for FetchMAPIRepresentableIntent.FetchMAPIRepresentableError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchMAPIRepresentableIntent.FetchMAPIRepresentableError);
}

uint64_t FetchMAPIRepresentableIntent.init(entityIDs:typeIncludes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

unint64_t static FetchMAPIRepresentableIntent.kind.getter()
{
  sub_1DA670444();
  swift_bridgeObjectRelease();
  sub_1DA670828();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  return 0xD000000000000019;
}

uint64_t FetchMAPIRepresentableIntent.entityIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchMAPIRepresentableIntent.typeIncludes.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1DA644948@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = static FetchMAPIRepresentableIntent.kind.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DA644974()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1DA64499C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1DA6449D0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1DA644A2C(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for FetchMAPIRepresentableIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchMAPIRepresentableIntent);
}

uint64_t sub_1DA644A74(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA644AB4 + 4 * byte_1DA685180[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA644AD4 + 4 * byte_1DA685185[v4]))();
}

_BYTE *sub_1DA644AB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA644AD4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA644ADC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA644AE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA644AEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA644AF4(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1DA644B00()
{
  JUMPOUT(0x1DF0A039CLL);
}

_QWORD *ClickLocationFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD v56[2];
  __int128 v57;
  unint64_t v58;
  uint64_t v59;

  v52 = a1;
  v2 = sub_1DA66EC74();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1DA66F6B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDAE49B0 != -1)
    swift_once();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49E8);
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EDAE4990);
  v9 = type metadata accessor for ClickLocationTracker();
  result = MEMORY[0x1DF09DB10](&v57, v8, v9);
  v11 = v57;
  if ((_QWORD)v57)
  {
    if (qword_1EDAE49D8 != -1)
      swift_once();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49F8);
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EDAE49B8);
    MEMORY[0x1DF09DB10](&v57, v13, MEMORY[0x1E0DEA968]);
    v14 = *((_QWORD *)&v57 + 1);
    if (!*((_QWORD *)&v57 + 1))
      return (_QWORD *)swift_release();
    v15 = v57;
    v16 = ClickLocationTracker.locationStack(for:)(v57, *((uint64_t *)&v57 + 1));
    v17 = *(_QWORD *)(v16 + 16);
    v51 = v11;
    if (v17)
    {
      v49 = v16;
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(v52, v52[3]);
      v18 = sub_1DA66F0D0();
      v19 = sub_1DA66CB5C();
      if (*(_QWORD *)(v18 + 16) && (v21 = sub_1DA591C4C(v19, v20), (v22 & 1) != 0))
      {
        sub_1DA49ADD0(*(_QWORD *)(v18 + 56) + 32 * v21, (uint64_t)v56);
        sub_1DA49ACF0(v56, &v57);
        sub_1DA49ADD0((uint64_t)&v57, (uint64_t)v56);
        v23 = sub_1DA6452C8((uint64_t)v56);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v23)
        {
          v24 = v49;
          swift_bridgeObjectRetain();
          v25 = sub_1DA645454((uint64_t)v23, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          *(_QWORD *)&v57 = v25;
          sub_1DA66CB5C();
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v52[3]);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B48);
          sub_1DA645218();
LABEL_30:
          MetricsFieldsBuilder.addValue<A>(_:forField:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (_QWORD *)swift_release();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v50 = v1;
      v26 = v49;
      v27 = *(_QWORD *)(v49 + 16);
      if (v27)
      {
        v59 = MEMORY[0x1E0DEE9D8];
        sub_1DA50A1C8(0, v27, 0);
        v28 = (uint64_t *)(v26 + 88);
        do
        {
          v29 = *(v28 - 7);
          v30 = *(v28 - 6);
          v31 = *(v28 - 4);
          v53 = *(v28 - 1);
          v54 = v31;
          if (*v28)
            v32 = *v28;
          else
            v32 = MEMORY[0x1E0DEE9E0];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v33 = sub_1DA66CB44();
          v35 = v34;
          v58 = MEMORY[0x1E0DEA968];
          *(_QWORD *)&v57 = v29;
          *((_QWORD *)&v57 + 1) = v30;
          sub_1DA49ACF0(&v57, v56);
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v55 = v32;
          sub_1DA534964(v56, v33, v35, isUniquelyReferenced_nonNull_native);
          v37 = v55;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v38 = sub_1DA66CB80();
          v40 = v39;
          v41 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
          swift_bridgeObjectRetain();
          v42 = objc_msgSend(v41, sel_initWithInteger_, v53);
          v58 = sub_1DA52A3C8();
          *(_QWORD *)&v57 = v42;
          sub_1DA49ACF0(&v57, v56);
          v43 = swift_isUniquelyReferenced_nonNull_native();
          v55 = v37;
          sub_1DA534964(v56, v38, v40, v43);
          v44 = v55;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v45 = v59;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DA50A1C8(0, *(_QWORD *)(v45 + 16) + 1, 1);
            v45 = v59;
          }
          v47 = *(_QWORD *)(v45 + 16);
          v46 = *(_QWORD *)(v45 + 24);
          if (v47 >= v46 >> 1)
          {
            sub_1DA50A1C8(v46 > 1, v47 + 1, 1);
            v45 = v59;
          }
          *(_QWORD *)(v45 + 16) = v47 + 1;
          *(_QWORD *)(v45 + 8 * v47 + 32) = v44;
          v28 += 8;
          --v27;
        }
        while (v27);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v45 = MEMORY[0x1E0DEE9D8];
      }
      *(_QWORD *)&v57 = v45;
      sub_1DA66CB5C();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v52[3]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B48);
      sub_1DA645218();
      goto LABEL_30;
    }
    v50 = v1;
    swift_bridgeObjectRelease();
    if (qword_1EDAE2878 != -1)
      swift_once();
    v48 = __swift_project_value_buffer(v3, (uint64_t)qword_1EDAE2858);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v48, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
    sub_1DA66EC8C();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
    sub_1DA66EC68();
    sub_1DA66EC5C();
    v58 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v57 = v15;
    *((_QWORD *)&v57 + 1) = v14;
    sub_1DA66EC50();
    sub_1DA480E84((uint64_t)&v57);
    sub_1DA66EC5C();
    sub_1DA66EC80();
    sub_1DA66F544();
    swift_bridgeObjectRelease();
    swift_release();
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

_QWORD *sub_1DA645204(_QWORD *a1)
{
  return ClickLocationFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(a1);
}

unint64_t sub_1DA645218()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EDAE4B50;
  if (!qword_1EDAE4B50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE4B48);
    v2 = sub_1DA64527C();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7EF28], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EDAE4B50);
  }
  return result;
}

unint64_t sub_1DA64527C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE4AD8;
  if (!qword_1EDAE4AD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE4AD0);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7EF08], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE4AD8);
  }
  return result;
}

_QWORD *sub_1DA6452C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  _BYTE v9[32];

  sub_1DA49ADD0(a1, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B68);
  if (swift_dynamicCast())
  {
    v2 = *(_QWORD *)(v8 + 16);
    if (v2)
    {
      v3 = v8 + 32;
      swift_bridgeObjectRetain();
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        sub_1DA49ADD0(v3, (uint64_t)v9);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AD0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v4 = sub_1DA540C90(0, v4[2] + 1, 1, v4);
          v6 = v4[2];
          v5 = v4[3];
          if (v6 >= v5 >> 1)
            v4 = sub_1DA540C90((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
          v4[2] = v6 + 1;
          v4[v6 + 4] = v8;
        }
        v3 += 32;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    __swift_destroy_boxed_opaque_existential_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
  return v4;
}

uint64_t sub_1DA645454(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[2];
  __int128 v36;
  unint64_t v37;
  uint64_t v38;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v38 = MEMORY[0x1E0DEE9D8];
    sub_1DA50A1C8(0, v2, 0);
    v6 = 0;
    v3 = v38;
    v7 = a1 + 32;
    v28 = a2;
    v29 = a2 + 88;
    v27 = v2;
    v30 = a1 + 32;
    do
    {
      v31 = v6;
      v8 = *(_QWORD *)(v7 + 8 * v6);
      swift_bridgeObjectRetain();
      v9 = sub_1DA66CB44();
      if (*(_QWORD *)(v8 + 16))
      {
        v32 = v8;
        v11 = sub_1DA591C4C(v9, v10);
        if ((v12 & 1) != 0)
        {
          sub_1DA49ADD0(*(_QWORD *)(v8 + 56) + 32 * v11, (uint64_t)v35);
          sub_1DA49ACF0(v35, &v36);
          sub_1DA49ADD0((uint64_t)&v36, (uint64_t)v35);
          if ((swift_dynamicCast() & 1) != 0)
          {
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v36);
            swift_bridgeObjectRelease();
            v13 = *(_QWORD *)(a2 + 16);
            if (v13)
            {
              v14 = v29;
              while (1)
              {
                v15 = *(_QWORD *)(v14 - 8);
                v16 = *(_QWORD *)(v14 - 56) == v33 && *(_QWORD *)(v14 - 48) == v34;
                if (v16 || (sub_1DA6706D8() & 1) != 0)
                  break;
                v14 += 64;
                if (!--v13)
                {
                  swift_bridgeObjectRelease();
                  v2 = v27;
                  a2 = v28;
                  goto LABEL_22;
                }
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v20 = sub_1DA66CB80();
              v22 = v21;
              v23 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v24 = objc_msgSend(v23, sel_initWithInteger_, v15);
              v37 = sub_1DA52A3C8();
              *(_QWORD *)&v36 = v24;
              sub_1DA49ACF0(&v36, v35);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v33 = v32;
              sub_1DA534964(v35, v20, v22, isUniquelyReferenced_nonNull_native);
              v8 = v32;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v2 = v27;
              a2 = v28;
              v7 = v30;
            }
            else
            {
              swift_bridgeObjectRelease();
LABEL_22:
              v7 = v30;
            }
            goto LABEL_17;
          }
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v36);
        }
      }
      swift_bridgeObjectRelease();
LABEL_17:
      v17 = v31;
      v38 = v3;
      v19 = *(_QWORD *)(v3 + 16);
      v18 = *(_QWORD *)(v3 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1DA50A1C8(v18 > 1, v19 + 1, 1);
        v17 = v31;
        v3 = v38;
      }
      v6 = v17 + 1;
      *(_QWORD *)(v3 + 16) = v19 + 1;
      *(_QWORD *)(v3 + 8 * v19 + 32) = v8;
    }
    while (v6 != v2);
  }
  return v3;
}

ValueMetadata *type metadata accessor for ClickLocationFieldsProvider()
{
  return &type metadata for ClickLocationFieldsProvider;
}

uint64_t dispatch thunk of SettingsBridge.open(destination:)(char a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(a3 + 8))(a1 & 1);
}

void sub_1DA6458A4()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v1, sel_displayScale);
  v3 = v2;

  v4 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v4, sel_setBorderWidth_, ceil(v3 * 0.5) / v3);

  v5 = objc_msgSend(v0, sel_layer);
  v6 = objc_msgSend((id)objc_opt_self(), sel__textFieldBorderColor);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_CGColor);

    objc_msgSend(v5, sel_setBorderColor_, v8);
  }
  else
  {
    __break(1u);
  }
}

id sub_1DA645AE4()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;

  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v0, sel_convertRect_toView_, 0);
  return objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRect_, v1, v2, v3, v4);
}

id MacTextView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MacTextView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MacTextView()
{
  return objc_opt_self();
}

uint64_t method lookup function for MacTextView()
{
  return swift_lookUpClassMethod();
}

id UITraitCollection.suggestedTextBlendModeFilter.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  objc_msgSend(v0, sel_userInterfaceStyle);
  sub_1DA66F8BC();
  v1 = objc_allocWithZone(MEMORY[0x1E0CD2780]);
  v2 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithType_, v2);

  return v3;
}

uint64_t UpdateEpisodePlayStateIntent.init(episode:playState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = a2;
  v4 = (uint64_t)a3 + *(int *)(type metadata accessor for UpdateEpisodePlayStateIntent() + 20);
  return sub_1DA4F23FC(a1, v4);
}

uint64_t type metadata accessor for UpdateEpisodePlayStateIntent()
{
  uint64_t result;

  result = qword_1EDAE3F28;
  if (!qword_1EDAE3F28)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t static UpdateEpisodePlayStateIntent.kind.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t UpdateEpisodePlayStateIntent.playState.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UpdateEpisodePlayStateIntent.episode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for UpdateEpisodePlayStateIntent() + 20);
  return sub_1DA4F23B0(v3, a1);
}

void sub_1DA645D34(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000001DA691420;
}

uint64_t *initializeBufferWithCopyOfBuffer for UpdateEpisodePlayStateIntent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  id *v34;
  int v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  id *v40;
  int v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  void (*v61)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  char *__dst;
  int *v79;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    v23 = v22 + ((v4 + 16) & ~(unint64_t)v4);
    sub_1DA66BE60();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (uint64_t *)((char *)a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    v8 = *(uint64_t *)((char *)a2 + v5 + 8);
    *v6 = *(uint64_t *)((char *)a2 + v5);
    v6[1] = v8;
    v10 = *(void **)((char *)a2 + v5 + 16);
    v9 = *(uint64_t *)((char *)a2 + v5 + 24);
    v6[2] = v10;
    v6[3] = v9;
    v11 = v7[5];
    v6[4] = v7[4];
    v6[5] = v11;
    v12 = v7[7];
    v6[6] = v7[6];
    v6[7] = v12;
    v13 = v7[9];
    v6[8] = v7[8];
    v6[9] = v13;
    v76 = v7[11];
    v6[10] = v7[10];
    v6[11] = v76;
    v14 = v7[13];
    v6[12] = v7[12];
    v6[13] = v14;
    v15 = v7[15];
    v6[14] = v7[14];
    v6[15] = v15;
    v16 = v7[17];
    v6[16] = v7[16];
    v6[17] = v16;
    v17 = type metadata accessor for EpisodeEntity();
    v18 = *(int *)(v17 + 80);
    __dst = (char *)v6 + v18;
    v79 = (int *)v17;
    v75 = (char *)v7 + v18;
    v19 = sub_1DA66DB58();
    v74 = *(_QWORD *)(v19 - 8);
    v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    swift_bridgeObjectRetain();
    v20 = v10;
    swift_bridgeObjectRetain();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    if (v77(v75, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
      memcpy(__dst, v75, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(__dst, v75, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(__dst, 0, 1, v19);
    }
    v24 = v79[21];
    v25 = (_QWORD *)((char *)v6 + v24);
    v26 = (_QWORD *)((char *)v7 + v24);
    v27 = (int *)sub_1DA66CA0C();
    v28 = *((_QWORD *)v27 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = v26[1];
      *v25 = *v26;
      v25[1] = v30;
      v31 = *((unsigned __int8 *)v26 + 32);
      swift_bridgeObjectRetain();
      if (v31 == 255)
      {
        *((_OWORD *)v25 + 1) = *((_OWORD *)v26 + 1);
        *((_BYTE *)v25 + 32) = *((_BYTE *)v26 + 32);
      }
      else
      {
        v32 = v26[2];
        v33 = v26[3];
        sub_1DA481390(v32, v33, v31);
        v25[2] = v32;
        v25[3] = v33;
        *((_BYTE *)v25 + 32) = v31;
      }
      *(_OWORD *)(v25 + 5) = *(_OWORD *)(v26 + 5);
      v34 = (id *)(v26 + 7);
      v35 = *((unsigned __int8 *)v26 + 64);
      if (v35 == 255)
      {
        v25[7] = *v34;
        *((_BYTE *)v25 + 64) = *((_BYTE *)v26 + 64);
      }
      else
      {
        v36 = *v34;
        sub_1DA4E762C(*v34, *((_BYTE *)v26 + 64));
        v25[7] = v36;
        *((_BYTE *)v25 + 64) = v35;
      }
      v37 = (id *)(v26 + 9);
      v38 = *((unsigned __int8 *)v26 + 80);
      if (v38 == 255)
      {
        v25[9] = *v37;
        *((_BYTE *)v25 + 80) = *((_BYTE *)v26 + 80);
      }
      else
      {
        v39 = *v37;
        sub_1DA4E762C(*v37, *((_BYTE *)v26 + 80));
        v25[9] = v39;
        *((_BYTE *)v25 + 80) = v38;
      }
      v40 = (id *)(v26 + 11);
      v41 = *((unsigned __int8 *)v26 + 96);
      if (v41 == 255)
      {
        v25[11] = *v40;
        *((_BYTE *)v25 + 96) = *((_BYTE *)v26 + 96);
      }
      else
      {
        v42 = *v40;
        sub_1DA4E762C(*v40, *((_BYTE *)v26 + 96));
        v25[11] = v42;
        *((_BYTE *)v25 + 96) = v41;
      }
      v43 = (id *)(v26 + 13);
      v44 = *((unsigned __int8 *)v26 + 112);
      if (v44 == 255)
      {
        v25[13] = *v43;
        *((_BYTE *)v25 + 112) = *((_BYTE *)v26 + 112);
      }
      else
      {
        v45 = *v43;
        sub_1DA4E762C(*v43, *((_BYTE *)v26 + 112));
        v25[13] = v45;
        *((_BYTE *)v25 + 112) = v44;
      }
      v46 = (id *)(v26 + 15);
      v47 = *((unsigned __int8 *)v26 + 128);
      if (v47 == 255)
      {
        v25[15] = *v46;
        *((_BYTE *)v25 + 128) = *((_BYTE *)v26 + 128);
      }
      else
      {
        v48 = *v46;
        sub_1DA4E762C(*v46, *((_BYTE *)v26 + 128));
        v25[15] = v48;
        *((_BYTE *)v25 + 128) = v47;
      }
      *((_BYTE *)v25 + 129) = *((_BYTE *)v26 + 129);
      v49 = v27[11];
      v50 = (char *)v25 + v49;
      v51 = (char *)v26 + v49;
      v52 = sub_1DA66C928();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
      v53 = v27[12];
      v54 = (_QWORD *)((char *)v25 + v53);
      v55 = (_QWORD *)((char *)v26 + v53);
      v56 = v55[1];
      *v54 = *v55;
      v54[1] = v56;
      *((_BYTE *)v25 + v27[13]) = *((_BYTE *)v26 + v27[13]);
      *((_BYTE *)v25 + v27[14]) = *((_BYTE *)v26 + v27[14]);
      *((_BYTE *)v25 + v27[15]) = *((_BYTE *)v26 + v27[15]);
      v57 = v27[16];
      v58 = (_QWORD *)((char *)v25 + v57);
      v59 = (_QWORD *)((char *)v26 + v57);
      v60 = v59[1];
      *v58 = *v59;
      v58[1] = v60;
      v61 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v28 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61(v25, 0, 1, v27);
    }
    v62 = v79[22];
    v63 = (char *)v6 + v62;
    v64 = (char *)v7 + v62;
    v65 = *((_QWORD *)v64 + 1);
    if (v65 >> 60 == 15)
    {
      *(_OWORD *)v63 = *(_OWORD *)v64;
    }
    else
    {
      v66 = *(_QWORD *)v64;
      sub_1DA498750(*(_QWORD *)v64, *((_QWORD *)v64 + 1));
      *(_QWORD *)v63 = v66;
      *((_QWORD *)v63 + 1) = v65;
    }
    v67 = v79[23];
    v68 = (char *)v6 + v67;
    v69 = (char *)v7 + v67;
    v70 = sub_1DA66C358();
    v71 = *(_QWORD *)(v70 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
    return a1;
  }
  return (uint64_t *)v23;
}

uint64_t destroy for UpdateEpisodePlayStateIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = (int *)type metadata accessor for EpisodeEntity();
  v4 = v2 + v3[20];
  v5 = sub_1DA66DB58();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v2 + v3[21];
  v8 = sub_1DA66CA0C();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = *(unsigned __int8 *)(v7 + 32);
    if (v9 != 255)
      sub_1DA47F868(*(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), v9);
    v10 = *(unsigned __int8 *)(v7 + 64);
    if (v10 != 255)
      sub_1DA4E7898(*(id *)(v7 + 56), v10);
    v11 = *(unsigned __int8 *)(v7 + 80);
    if (v11 != 255)
      sub_1DA4E7898(*(id *)(v7 + 72), v11);
    v12 = *(unsigned __int8 *)(v7 + 96);
    if (v12 != 255)
      sub_1DA4E7898(*(id *)(v7 + 88), v12);
    v13 = *(unsigned __int8 *)(v7 + 112);
    if (v13 != 255)
      sub_1DA4E7898(*(id *)(v7 + 104), v13);
    v14 = *(unsigned __int8 *)(v7 + 128);
    if (v14 != 255)
      sub_1DA4E7898(*(id *)(v7 + 120), v14);
    v15 = v7 + *(int *)(v8 + 44);
    v16 = sub_1DA66C928();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = (uint64_t *)(v2 + v3[22]);
  v18 = v17[1];
  if (v18 >> 60 != 15)
    sub_1DA4986F8(*v17, v18);
  v19 = v2 + v3[23];
  v20 = sub_1DA66C358();
  v21 = *(_QWORD *)(v20 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  return result;
}

_QWORD *initializeWithCopy for UpdateEpisodePlayStateIntent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  id *v32;
  int v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  id *v44;
  int v45;
  id v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void (*v59)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  char *__dst;
  int *v75;

  *a1 = *a2;
  v3 = *(int *)(a3 + 20);
  v4 = (_QWORD *)((char *)a1 + v3);
  v5 = (_QWORD *)((char *)a2 + v3);
  v6 = *(_QWORD *)((char *)a2 + v3 + 8);
  *v4 = *(_QWORD *)((char *)a2 + v3);
  v4[1] = v6;
  v8 = *(void **)((char *)a2 + v3 + 16);
  v7 = *(_QWORD *)((char *)a2 + v3 + 24);
  v4[2] = v8;
  v4[3] = v7;
  v9 = v5[5];
  v4[4] = v5[4];
  v4[5] = v9;
  v10 = v5[7];
  v4[6] = v5[6];
  v4[7] = v10;
  v11 = v5[9];
  v4[8] = v5[8];
  v4[9] = v11;
  v12 = v5[11];
  v4[10] = v5[10];
  v4[11] = v12;
  v13 = v5[13];
  v4[12] = v5[12];
  v4[13] = v13;
  v14 = v5[15];
  v4[14] = v5[14];
  v4[15] = v14;
  v15 = v5[17];
  v4[16] = v5[16];
  v4[17] = v15;
  v16 = type metadata accessor for EpisodeEntity();
  v17 = *(int *)(v16 + 80);
  __dst = (char *)v4 + v17;
  v75 = (int *)v16;
  v18 = (char *)v5 + v17;
  v19 = sub_1DA66DB58();
  v72 = *(_QWORD *)(v19 - 8);
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
  swift_bridgeObjectRetain();
  v20 = v8;
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v73(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(__dst, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v19);
  }
  v22 = v75[21];
  v23 = (_QWORD *)((char *)v4 + v22);
  v24 = (_QWORD *)((char *)v5 + v22);
  v25 = (int *)sub_1DA66CA0C();
  v26 = *((_QWORD *)v25 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = v24[1];
    *v23 = *v24;
    v23[1] = v28;
    v29 = *((unsigned __int8 *)v24 + 32);
    swift_bridgeObjectRetain();
    if (v29 == 255)
    {
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((_BYTE *)v23 + 32) = *((_BYTE *)v24 + 32);
    }
    else
    {
      v30 = v24[2];
      v31 = v24[3];
      sub_1DA481390(v30, v31, v29);
      v23[2] = v30;
      v23[3] = v31;
      *((_BYTE *)v23 + 32) = v29;
    }
    *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
    v32 = (id *)(v24 + 7);
    v33 = *((unsigned __int8 *)v24 + 64);
    if (v33 == 255)
    {
      v23[7] = *v32;
      *((_BYTE *)v23 + 64) = *((_BYTE *)v24 + 64);
    }
    else
    {
      v34 = *v32;
      sub_1DA4E762C(*v32, *((_BYTE *)v24 + 64));
      v23[7] = v34;
      *((_BYTE *)v23 + 64) = v33;
    }
    v35 = (id *)(v24 + 9);
    v36 = *((unsigned __int8 *)v24 + 80);
    if (v36 == 255)
    {
      v23[9] = *v35;
      *((_BYTE *)v23 + 80) = *((_BYTE *)v24 + 80);
    }
    else
    {
      v37 = *v35;
      sub_1DA4E762C(*v35, *((_BYTE *)v24 + 80));
      v23[9] = v37;
      *((_BYTE *)v23 + 80) = v36;
    }
    v38 = (id *)(v24 + 11);
    v39 = *((unsigned __int8 *)v24 + 96);
    if (v39 == 255)
    {
      v23[11] = *v38;
      *((_BYTE *)v23 + 96) = *((_BYTE *)v24 + 96);
    }
    else
    {
      v40 = *v38;
      sub_1DA4E762C(*v38, *((_BYTE *)v24 + 96));
      v23[11] = v40;
      *((_BYTE *)v23 + 96) = v39;
    }
    v41 = (id *)(v24 + 13);
    v42 = *((unsigned __int8 *)v24 + 112);
    if (v42 == 255)
    {
      v23[13] = *v41;
      *((_BYTE *)v23 + 112) = *((_BYTE *)v24 + 112);
    }
    else
    {
      v43 = *v41;
      sub_1DA4E762C(*v41, *((_BYTE *)v24 + 112));
      v23[13] = v43;
      *((_BYTE *)v23 + 112) = v42;
    }
    v44 = (id *)(v24 + 15);
    v45 = *((unsigned __int8 *)v24 + 128);
    if (v45 == 255)
    {
      v23[15] = *v44;
      *((_BYTE *)v23 + 128) = *((_BYTE *)v24 + 128);
    }
    else
    {
      v46 = *v44;
      sub_1DA4E762C(*v44, *((_BYTE *)v24 + 128));
      v23[15] = v46;
      *((_BYTE *)v23 + 128) = v45;
    }
    *((_BYTE *)v23 + 129) = *((_BYTE *)v24 + 129);
    v47 = v25[11];
    v48 = (char *)v23 + v47;
    v49 = (char *)v24 + v47;
    v50 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
    v51 = v25[12];
    v52 = (_QWORD *)((char *)v23 + v51);
    v53 = (_QWORD *)((char *)v24 + v51);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    *((_BYTE *)v23 + v25[13]) = *((_BYTE *)v24 + v25[13]);
    *((_BYTE *)v23 + v25[14]) = *((_BYTE *)v24 + v25[14]);
    *((_BYTE *)v23 + v25[15]) = *((_BYTE *)v24 + v25[15]);
    v55 = v25[16];
    v56 = (_QWORD *)((char *)v23 + v55);
    v57 = (_QWORD *)((char *)v24 + v55);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    v59 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v26 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v23, 0, 1, v25);
  }
  v60 = v75[22];
  v61 = (char *)v4 + v60;
  v62 = (char *)v5 + v60;
  v63 = *((_QWORD *)v62 + 1);
  if (v63 >> 60 == 15)
  {
    *(_OWORD *)v61 = *(_OWORD *)v62;
  }
  else
  {
    v64 = *(_QWORD *)v62;
    sub_1DA498750(*(_QWORD *)v62, *((_QWORD *)v62 + 1));
    *(_QWORD *)v61 = v64;
    *((_QWORD *)v61 + 1) = v63;
  }
  v65 = v75[23];
  v66 = (char *)v4 + v65;
  v67 = (char *)v5 + v65;
  v68 = sub_1DA66C358();
  v69 = *(_QWORD *)(v68 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  return a1;
}

_QWORD *assignWithCopy for UpdateEpisodePlayStateIntent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  id v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, int *);
  int v26;
  int v27;
  _QWORD *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  __int128 *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  __int128 v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  id v53;
  id *v54;
  int v55;
  id v56;
  id v57;
  id *v58;
  int v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  void (*v72)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v73;
  uint64_t v74;
  char v75;
  __int128 v76;
  id *v77;
  id *v78;
  int v79;
  id v80;
  void *v81;
  char v82;
  id v83;
  char v84;
  id v85;
  id *v86;
  id *v87;
  int v88;
  id v89;
  void *v90;
  char v91;
  id v92;
  char v93;
  id v94;
  id *v95;
  id *v96;
  int v97;
  id v98;
  void *v99;
  char v100;
  id v101;
  char v102;
  id v103;
  id *v104;
  id *v105;
  int v106;
  id v107;
  void *v108;
  char v109;
  id v110;
  char v111;
  id v112;
  id *v113;
  id *v114;
  int v115;
  id v116;
  void *v117;
  char v118;
  id v119;
  char v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  char *v128;
  uint64_t v129;
  _QWORD *v130;
  char *v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t (*v145)(char *, uint64_t, uint64_t);
  int v146;
  int v147;
  uint64_t v148;
  _QWORD *v150;
  int *v151;

  v3 = a1;
  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  *v5 = *(_QWORD *)((char *)a2 + v4);
  v5[1] = *(_QWORD *)((char *)a2 + v4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (void *)v5[2];
  v8 = (void *)v6[2];
  v5[2] = v8;
  v9 = v8;

  v5[3] = v6[3];
  v5[4] = v6[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[5] = v6[5];
  v5[6] = v6[6];
  sub_1DA66BE60();
  swift_release();
  v5[7] = v6[7];
  sub_1DA66BE60();
  swift_release();
  v5[8] = v6[8];
  sub_1DA66BE60();
  swift_release();
  v5[9] = v6[9];
  sub_1DA66BE60();
  swift_release();
  v5[10] = v6[10];
  sub_1DA66BE60();
  swift_release();
  v5[11] = v6[11];
  sub_1DA66BE60();
  swift_release();
  v5[12] = v6[12];
  sub_1DA66BE60();
  swift_release();
  v5[13] = v6[13];
  sub_1DA66BE60();
  swift_release();
  v5[14] = v6[14];
  sub_1DA66BE60();
  swift_release();
  v5[15] = v6[15];
  sub_1DA66BE60();
  swift_release();
  v5[16] = v6[16];
  sub_1DA66BE60();
  swift_release();
  v5[17] = v6[17];
  sub_1DA66BE60();
  swift_release();
  v10 = (int *)type metadata accessor for EpisodeEntity();
  v11 = v10[20];
  v12 = (char *)v5 + v11;
  v13 = (char *)v6 + v11;
  v14 = sub_1DA66DB58();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  v20 = v10[21];
  v21 = (uint64_t)v5 + v20;
  v22 = (char *)v6 + v20;
  v23 = (int *)sub_1DA66CA0C();
  v24 = *((_QWORD *)v23 - 1);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25((uint64_t)v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      v151 = v10;
      v28 = v3;
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *(_QWORD *)(v21 + 8) = *((_QWORD *)v22 + 1);
      v29 = v22[32];
      swift_bridgeObjectRetain();
      if (v29 == 255)
      {
        v41 = *((_OWORD *)v22 + 1);
        *(_BYTE *)(v21 + 32) = v22[32];
        *(_OWORD *)(v21 + 16) = v41;
      }
      else
      {
        v30 = *((_QWORD *)v22 + 2);
        v31 = *((_QWORD *)v22 + 3);
        sub_1DA481390(v30, v31, v29);
        *(_QWORD *)(v21 + 16) = v30;
        *(_QWORD *)(v21 + 24) = v31;
        *(_BYTE *)(v21 + 32) = v29;
      }
      *(_QWORD *)(v21 + 40) = *((_QWORD *)v22 + 5);
      *(_QWORD *)(v21 + 48) = *((_QWORD *)v22 + 6);
      v42 = (id *)(v22 + 56);
      v43 = v22[64];
      if (v43 == 255)
      {
        v45 = *v42;
        *(_BYTE *)(v21 + 64) = v22[64];
        *(_QWORD *)(v21 + 56) = v45;
      }
      else
      {
        v44 = *v42;
        sub_1DA4E762C(*v42, v22[64]);
        *(_QWORD *)(v21 + 56) = v44;
        *(_BYTE *)(v21 + 64) = v43;
      }
      v3 = v28;
      v46 = (id *)(v22 + 72);
      v47 = v22[80];
      v10 = v151;
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v21 + 80) = v22[80];
        *(_QWORD *)(v21 + 72) = v49;
      }
      else
      {
        v48 = *v46;
        sub_1DA4E762C(*v46, v22[80]);
        *(_QWORD *)(v21 + 72) = v48;
        *(_BYTE *)(v21 + 80) = v47;
      }
      v50 = (id *)(v22 + 88);
      v51 = v22[96];
      if (v51 == 255)
      {
        v53 = *v50;
        *(_BYTE *)(v21 + 96) = v22[96];
        *(_QWORD *)(v21 + 88) = v53;
      }
      else
      {
        v52 = *v50;
        sub_1DA4E762C(*v50, v22[96]);
        *(_QWORD *)(v21 + 88) = v52;
        *(_BYTE *)(v21 + 96) = v51;
      }
      v54 = (id *)(v22 + 104);
      v55 = v22[112];
      if (v55 == 255)
      {
        v57 = *v54;
        *(_BYTE *)(v21 + 112) = v22[112];
        *(_QWORD *)(v21 + 104) = v57;
      }
      else
      {
        v56 = *v54;
        sub_1DA4E762C(*v54, v22[112]);
        *(_QWORD *)(v21 + 104) = v56;
        *(_BYTE *)(v21 + 112) = v55;
      }
      v58 = (id *)(v22 + 120);
      v59 = v22[128];
      if (v59 == 255)
      {
        v61 = *v58;
        *(_BYTE *)(v21 + 128) = v22[128];
        *(_QWORD *)(v21 + 120) = v61;
      }
      else
      {
        v60 = *v58;
        sub_1DA4E762C(*v58, v22[128]);
        *(_QWORD *)(v21 + 120) = v60;
        *(_BYTE *)(v21 + 128) = v59;
      }
      *(_BYTE *)(v21 + 129) = v22[129];
      v62 = v23[11];
      v63 = v21 + v62;
      v64 = &v22[v62];
      v65 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
      v66 = v23[12];
      v67 = (_QWORD *)(v21 + v66);
      v68 = &v22[v66];
      *v67 = *(_QWORD *)v68;
      v67[1] = *((_QWORD *)v68 + 1);
      *(_BYTE *)(v21 + v23[13]) = v22[v23[13]];
      *(_BYTE *)(v21 + v23[14]) = v22[v23[14]];
      *(_BYTE *)(v21 + v23[15]) = v22[v23[15]];
      v69 = v23[16];
      v70 = (_QWORD *)(v21 + v69);
      v71 = &v22[v69];
      *v70 = *(_QWORD *)v71;
      v70[1] = *((_QWORD *)v71 + 1);
      v72 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v24 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v72(v21, 0, 1, v23);
      goto LABEL_75;
    }
LABEL_13:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v21, v22, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_75;
  }
  if (v27)
  {
    sub_1DA4E8990(v21);
    goto LABEL_13;
  }
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = (__int128 *)(v21 + 16);
  v34 = (__int128 *)(v22 + 16);
  v35 = v22[32];
  v150 = v3;
  if (*(unsigned __int8 *)(v21 + 32) == 255)
  {
    if (v35 == 255)
    {
      v76 = *v34;
      *(_BYTE *)(v21 + 32) = v22[32];
      *v33 = v76;
    }
    else
    {
      v73 = *((_QWORD *)v22 + 2);
      v74 = *((_QWORD *)v22 + 3);
      sub_1DA481390(v73, v74, v35);
      *(_QWORD *)(v21 + 16) = v73;
      *(_QWORD *)(v21 + 24) = v74;
      *(_BYTE *)(v21 + 32) = v35;
    }
  }
  else if (v35 == 255)
  {
    sub_1DA4E8928(v21 + 16);
    v75 = v22[32];
    *v33 = *v34;
    *(_BYTE *)(v21 + 32) = v75;
  }
  else
  {
    v36 = *((_QWORD *)v22 + 2);
    v37 = *((_QWORD *)v22 + 3);
    sub_1DA481390(v36, v37, v35);
    v38 = *(_QWORD *)(v21 + 16);
    v39 = *(_QWORD *)(v21 + 24);
    *(_QWORD *)(v21 + 16) = v36;
    *(_QWORD *)(v21 + 24) = v37;
    v40 = *(_BYTE *)(v21 + 32);
    *(_BYTE *)(v21 + 32) = v35;
    sub_1DA47F868(v38, v39, v40);
  }
  *(_QWORD *)(v21 + 40) = *((_QWORD *)v22 + 5);
  *(_QWORD *)(v21 + 48) = *((_QWORD *)v22 + 6);
  v77 = (id *)(v21 + 56);
  v78 = (id *)(v22 + 56);
  v79 = v22[64];
  if (*(unsigned __int8 *)(v21 + 64) == 255)
  {
    v3 = v150;
    if (v79 == 255)
    {
      v85 = *v78;
      *(_BYTE *)(v21 + 64) = v22[64];
      *v77 = v85;
    }
    else
    {
      v83 = *v78;
      sub_1DA4E762C(*v78, v22[64]);
      *(_QWORD *)(v21 + 56) = v83;
      *(_BYTE *)(v21 + 64) = v79;
    }
  }
  else
  {
    v3 = v150;
    if (v79 == 255)
    {
      sub_1DA4E895C(v21 + 56);
      v84 = v22[64];
      *v77 = *v78;
      *(_BYTE *)(v21 + 64) = v84;
    }
    else
    {
      v80 = *v78;
      sub_1DA4E762C(*v78, v22[64]);
      v81 = *(void **)(v21 + 56);
      *(_QWORD *)(v21 + 56) = v80;
      v82 = *(_BYTE *)(v21 + 64);
      *(_BYTE *)(v21 + 64) = v79;
      sub_1DA4E7898(v81, v82);
    }
  }
  v86 = (id *)(v21 + 72);
  v87 = (id *)(v22 + 72);
  v88 = v22[80];
  if (*(unsigned __int8 *)(v21 + 80) == 255)
  {
    if (v88 == 255)
    {
      v94 = *v87;
      *(_BYTE *)(v21 + 80) = v22[80];
      *v86 = v94;
    }
    else
    {
      v92 = *v87;
      sub_1DA4E762C(*v87, v22[80]);
      *(_QWORD *)(v21 + 72) = v92;
      *(_BYTE *)(v21 + 80) = v88;
    }
  }
  else if (v88 == 255)
  {
    sub_1DA4E895C(v21 + 72);
    v93 = v22[80];
    *v86 = *v87;
    *(_BYTE *)(v21 + 80) = v93;
  }
  else
  {
    v89 = *v87;
    sub_1DA4E762C(*v87, v22[80]);
    v90 = *(void **)(v21 + 72);
    *(_QWORD *)(v21 + 72) = v89;
    v91 = *(_BYTE *)(v21 + 80);
    *(_BYTE *)(v21 + 80) = v88;
    sub_1DA4E7898(v90, v91);
  }
  v95 = (id *)(v21 + 88);
  v96 = (id *)(v22 + 88);
  v97 = v22[96];
  if (*(unsigned __int8 *)(v21 + 96) == 255)
  {
    if (v97 == 255)
    {
      v103 = *v96;
      *(_BYTE *)(v21 + 96) = v22[96];
      *v95 = v103;
    }
    else
    {
      v101 = *v96;
      sub_1DA4E762C(*v96, v22[96]);
      *(_QWORD *)(v21 + 88) = v101;
      *(_BYTE *)(v21 + 96) = v97;
    }
  }
  else if (v97 == 255)
  {
    sub_1DA4E895C(v21 + 88);
    v102 = v22[96];
    *v95 = *v96;
    *(_BYTE *)(v21 + 96) = v102;
  }
  else
  {
    v98 = *v96;
    sub_1DA4E762C(*v96, v22[96]);
    v99 = *(void **)(v21 + 88);
    *(_QWORD *)(v21 + 88) = v98;
    v100 = *(_BYTE *)(v21 + 96);
    *(_BYTE *)(v21 + 96) = v97;
    sub_1DA4E7898(v99, v100);
  }
  v104 = (id *)(v21 + 104);
  v105 = (id *)(v22 + 104);
  v106 = v22[112];
  if (*(unsigned __int8 *)(v21 + 112) == 255)
  {
    if (v106 == 255)
    {
      v112 = *v105;
      *(_BYTE *)(v21 + 112) = v22[112];
      *v104 = v112;
    }
    else
    {
      v110 = *v105;
      sub_1DA4E762C(*v105, v22[112]);
      *(_QWORD *)(v21 + 104) = v110;
      *(_BYTE *)(v21 + 112) = v106;
    }
  }
  else if (v106 == 255)
  {
    sub_1DA4E895C(v21 + 104);
    v111 = v22[112];
    *v104 = *v105;
    *(_BYTE *)(v21 + 112) = v111;
  }
  else
  {
    v107 = *v105;
    sub_1DA4E762C(*v105, v22[112]);
    v108 = *(void **)(v21 + 104);
    *(_QWORD *)(v21 + 104) = v107;
    v109 = *(_BYTE *)(v21 + 112);
    *(_BYTE *)(v21 + 112) = v106;
    sub_1DA4E7898(v108, v109);
  }
  v113 = (id *)(v21 + 120);
  v114 = (id *)(v22 + 120);
  v115 = v22[128];
  if (*(unsigned __int8 *)(v21 + 128) == 255)
  {
    if (v115 == 255)
    {
      v121 = *v114;
      *(_BYTE *)(v21 + 128) = v22[128];
      *v113 = v121;
    }
    else
    {
      v119 = *v114;
      sub_1DA4E762C(*v114, v22[128]);
      *(_QWORD *)(v21 + 120) = v119;
      *(_BYTE *)(v21 + 128) = v115;
    }
  }
  else if (v115 == 255)
  {
    sub_1DA4E895C(v21 + 120);
    v120 = v22[128];
    *v113 = *v114;
    *(_BYTE *)(v21 + 128) = v120;
  }
  else
  {
    v116 = *v114;
    sub_1DA4E762C(*v114, v22[128]);
    v117 = *(void **)(v21 + 120);
    *(_QWORD *)(v21 + 120) = v116;
    v118 = *(_BYTE *)(v21 + 128);
    *(_BYTE *)(v21 + 128) = v115;
    sub_1DA4E7898(v117, v118);
  }
  *(_BYTE *)(v21 + 129) = v22[129];
  v122 = v23[11];
  v123 = v21 + v122;
  v124 = &v22[v122];
  v125 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 24))(v123, v124, v125);
  v126 = v23[12];
  v127 = (_QWORD *)(v21 + v126);
  v128 = &v22[v126];
  *v127 = *(_QWORD *)v128;
  v127[1] = *((_QWORD *)v128 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + v23[13]) = v22[v23[13]];
  *(_BYTE *)(v21 + v23[14]) = v22[v23[14]];
  *(_BYTE *)(v21 + v23[15]) = v22[v23[15]];
  v129 = v23[16];
  v130 = (_QWORD *)(v21 + v129);
  v131 = &v22[v129];
  *v130 = *(_QWORD *)v131;
  v130[1] = *((_QWORD *)v131 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_75:
  v132 = v10[22];
  v133 = (_QWORD *)((char *)v5 + v132);
  v134 = (_QWORD *)((char *)v6 + v132);
  v135 = *(_QWORD *)((char *)v6 + v132 + 8);
  if (*(_QWORD *)((char *)v5 + v132 + 8) >> 60 == 15)
  {
    if (v135 >> 60 != 15)
    {
      v136 = *v134;
      sub_1DA498750(*v134, v135);
      *v133 = v136;
      v133[1] = v135;
      goto LABEL_82;
    }
    goto LABEL_80;
  }
  if (v135 >> 60 == 15)
  {
    sub_1DA4E89CC((uint64_t)v133);
LABEL_80:
    *(_OWORD *)v133 = *(_OWORD *)v134;
    goto LABEL_82;
  }
  v137 = *v134;
  sub_1DA498750(*v134, v135);
  v138 = *v133;
  v139 = v133[1];
  *v133 = v137;
  v133[1] = v135;
  sub_1DA4986F8(v138, v139);
LABEL_82:
  v140 = v10[23];
  v141 = (char *)v5 + v140;
  v142 = (char *)v6 + v140;
  v143 = sub_1DA66C358();
  v144 = *(_QWORD *)(v143 - 8);
  v145 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v144 + 48);
  v146 = v145(v141, 1, v143);
  v147 = v145(v142, 1, v143);
  if (!v146)
  {
    if (!v147)
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 24))(v141, v142, v143);
      return v3;
    }
    (*(void (**)(char *, uint64_t))(v144 + 8))(v141, v143);
    goto LABEL_87;
  }
  if (v147)
  {
LABEL_87:
    v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
    return v3;
  }
  (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v141, v142, v143);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
  return v3;
}

_QWORD *initializeWithTake for UpdateEpisodePlayStateIntent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_OWORD *)v5 = *(_OWORD *)((char *)a2 + v4);
  *((_QWORD *)v5 + 2) = *(_QWORD *)((char *)a2 + v4 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)((char *)a2 + v4 + 24);
  *((_QWORD *)v5 + 5) = *(_QWORD *)((char *)a2 + v4 + 40);
  v7 = *(_OWORD *)((char *)a2 + v4 + 64);
  *((_OWORD *)v5 + 3) = *(_OWORD *)((char *)a2 + v4 + 48);
  *((_OWORD *)v5 + 4) = v7;
  v8 = *(_OWORD *)((char *)a2 + v4 + 96);
  *((_OWORD *)v5 + 5) = *(_OWORD *)((char *)a2 + v4 + 80);
  *((_OWORD *)v5 + 6) = v8;
  v9 = *(_OWORD *)((char *)a2 + v4 + 128);
  *((_OWORD *)v5 + 7) = *(_OWORD *)((char *)a2 + v4 + 112);
  *((_OWORD *)v5 + 8) = v9;
  v10 = (int *)type metadata accessor for EpisodeEntity();
  v11 = v10[20];
  v12 = &v5[v11];
  v13 = &v6[v11];
  v14 = sub_1DA66DB58();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = v10[21];
  v18 = &v5[v17];
  v19 = &v6[v17];
  v20 = (int *)sub_1DA66CA0C();
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v23;
    v18[32] = v19[32];
    *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
    *((_QWORD *)v18 + 7) = *((_QWORD *)v19 + 7);
    v18[64] = v19[64];
    *(_OWORD *)(v18 + 113) = *(_OWORD *)(v19 + 113);
    *(_OWORD *)(v18 + 104) = *(_OWORD *)(v19 + 104);
    *(_OWORD *)(v18 + 88) = *(_OWORD *)(v19 + 88);
    *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
    v18[129] = v19[129];
    v24 = v20[11];
    v25 = &v18[v24];
    v26 = &v19[v24];
    v27 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    *(_OWORD *)&v18[v20[12]] = *(_OWORD *)&v19[v20[12]];
    v18[v20[13]] = v19[v20[13]];
    v18[v20[14]] = v19[v20[14]];
    v18[v20[15]] = v19[v20[15]];
    *(_OWORD *)&v18[v20[16]] = *(_OWORD *)&v19[v20[16]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  *(_OWORD *)&v5[v10[22]] = *(_OWORD *)&v6[v10[22]];
  v28 = v10[23];
  v29 = &v5[v28];
  v30 = &v6[v28];
  v31 = sub_1DA66C358();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  return a1;
}

_QWORD *assignWithTake for UpdateEpisodePlayStateIntent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, int *);
  int v27;
  int v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v51;
  _OWORD *v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  int v58;
  int v59;
  void *v60;
  _QWORD *v61;
  int v62;
  int v63;
  void *v64;
  _QWORD *v65;
  int v66;
  int v67;
  void *v68;
  _QWORD *v69;
  int v70;
  int v71;
  void *v72;
  _QWORD *v73;
  int v74;
  int v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = *(_QWORD *)((char *)a2 + v4 + 8);
  *v5 = *(_QWORD *)((char *)a2 + v4);
  v5[1] = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)v5[2];
  v5[2] = v6[2];

  v9 = v6[4];
  v5[3] = v6[3];
  v5[4] = v9;
  swift_bridgeObjectRelease();
  v10 = v6[6];
  v5[5] = v6[5];
  v5[6] = v10;
  swift_release();
  v5[7] = v6[7];
  swift_release();
  v5[8] = v6[8];
  swift_release();
  v5[9] = v6[9];
  swift_release();
  v5[10] = v6[10];
  swift_release();
  v5[11] = v6[11];
  swift_release();
  v5[12] = v6[12];
  swift_release();
  v5[13] = v6[13];
  swift_release();
  v5[14] = v6[14];
  swift_release();
  v5[15] = v6[15];
  swift_release();
  v5[16] = v6[16];
  swift_release();
  v5[17] = v6[17];
  swift_release();
  v11 = (int *)type metadata accessor for EpisodeEntity();
  v12 = v11[20];
  v13 = (char *)v5 + v12;
  v14 = (char *)v6 + v12;
  v15 = sub_1DA66DB58();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  v21 = v11[21];
  v22 = (uint64_t)v5 + v21;
  v23 = (char *)v6 + v21;
  v24 = (int *)sub_1DA66CA0C();
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26((uint64_t)v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      v29 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *(_OWORD *)(v22 + 16) = v29;
      *(_BYTE *)(v22 + 32) = v23[32];
      *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
      *(_QWORD *)(v22 + 56) = *((_QWORD *)v23 + 7);
      *(_BYTE *)(v22 + 64) = v23[64];
      *(_OWORD *)(v22 + 113) = *(_OWORD *)(v23 + 113);
      *(_OWORD *)(v22 + 104) = *(_OWORD *)(v23 + 104);
      *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
      *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
      *(_BYTE *)(v22 + 129) = v23[129];
      v30 = v24[11];
      v31 = v22 + v30;
      v32 = &v23[v30];
      v33 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      *(_OWORD *)(v22 + v24[12]) = *(_OWORD *)&v23[v24[12]];
      *(_BYTE *)(v22 + v24[13]) = v23[v24[13]];
      *(_BYTE *)(v22 + v24[14]) = v23[v24[14]];
      *(_BYTE *)(v22 + v24[15]) = v23[v24[15]];
      *(_OWORD *)(v22 + v24[16]) = *(_OWORD *)&v23[v24[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    sub_1DA4E8990(v22);
LABEL_12:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v22, v23, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  v51 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v51;
  swift_bridgeObjectRelease();
  v52 = v23 + 16;
  v53 = *(unsigned __int8 *)(v22 + 32);
  if (v53 != 255)
  {
    v54 = v23[32];
    if (v54 != 255)
    {
      v55 = *(_QWORD *)(v22 + 16);
      v56 = *(_QWORD *)(v22 + 24);
      *(_OWORD *)(v22 + 16) = *v52;
      *(_BYTE *)(v22 + 32) = v54;
      sub_1DA47F868(v55, v56, v53);
      goto LABEL_32;
    }
    sub_1DA4E8928(v22 + 16);
  }
  *(_OWORD *)(v22 + 16) = *v52;
  *(_BYTE *)(v22 + 32) = v23[32];
LABEL_32:
  *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
  v57 = v23 + 56;
  v58 = *(unsigned __int8 *)(v22 + 64);
  if (v58 != 255)
  {
    v59 = v23[64];
    if (v59 != 255)
    {
      v60 = *(void **)(v22 + 56);
      *(_QWORD *)(v22 + 56) = *v57;
      *(_BYTE *)(v22 + 64) = v59;
      sub_1DA4E7898(v60, v58);
      goto LABEL_37;
    }
    sub_1DA4E895C(v22 + 56);
  }
  *(_QWORD *)(v22 + 56) = *v57;
  *(_BYTE *)(v22 + 64) = v23[64];
LABEL_37:
  v61 = v23 + 72;
  v62 = *(unsigned __int8 *)(v22 + 80);
  if (v62 != 255)
  {
    v63 = v23[80];
    if (v63 != 255)
    {
      v64 = *(void **)(v22 + 72);
      *(_QWORD *)(v22 + 72) = *v61;
      *(_BYTE *)(v22 + 80) = v63;
      sub_1DA4E7898(v64, v62);
      goto LABEL_42;
    }
    sub_1DA4E895C(v22 + 72);
  }
  *(_QWORD *)(v22 + 72) = *v61;
  *(_BYTE *)(v22 + 80) = v23[80];
LABEL_42:
  v65 = v23 + 88;
  v66 = *(unsigned __int8 *)(v22 + 96);
  if (v66 != 255)
  {
    v67 = v23[96];
    if (v67 != 255)
    {
      v68 = *(void **)(v22 + 88);
      *(_QWORD *)(v22 + 88) = *v65;
      *(_BYTE *)(v22 + 96) = v67;
      sub_1DA4E7898(v68, v66);
      goto LABEL_47;
    }
    sub_1DA4E895C(v22 + 88);
  }
  *(_QWORD *)(v22 + 88) = *v65;
  *(_BYTE *)(v22 + 96) = v23[96];
LABEL_47:
  v69 = v23 + 104;
  v70 = *(unsigned __int8 *)(v22 + 112);
  if (v70 != 255)
  {
    v71 = v23[112];
    if (v71 != 255)
    {
      v72 = *(void **)(v22 + 104);
      *(_QWORD *)(v22 + 104) = *v69;
      *(_BYTE *)(v22 + 112) = v71;
      sub_1DA4E7898(v72, v70);
      goto LABEL_52;
    }
    sub_1DA4E895C(v22 + 104);
  }
  *(_QWORD *)(v22 + 104) = *v69;
  *(_BYTE *)(v22 + 112) = v23[112];
LABEL_52:
  v73 = v23 + 120;
  v74 = *(unsigned __int8 *)(v22 + 128);
  if (v74 == 255)
  {
LABEL_56:
    *(_QWORD *)(v22 + 120) = *v73;
    *(_BYTE *)(v22 + 128) = v23[128];
    goto LABEL_57;
  }
  v75 = v23[128];
  if (v75 == 255)
  {
    sub_1DA4E895C(v22 + 120);
    goto LABEL_56;
  }
  v76 = *(void **)(v22 + 120);
  *(_QWORD *)(v22 + 120) = *v73;
  *(_BYTE *)(v22 + 128) = v75;
  sub_1DA4E7898(v76, v74);
LABEL_57:
  *(_BYTE *)(v22 + 129) = v23[129];
  v77 = v24[11];
  v78 = v22 + v77;
  v79 = &v23[v77];
  v80 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 40))(v78, v79, v80);
  v81 = v24[12];
  v82 = (_QWORD *)(v22 + v81);
  v83 = &v23[v81];
  v85 = *(_QWORD *)v83;
  v84 = *((_QWORD *)v83 + 1);
  *v82 = v85;
  v82[1] = v84;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + v24[13]) = v23[v24[13]];
  *(_BYTE *)(v22 + v24[14]) = v23[v24[14]];
  *(_BYTE *)(v22 + v24[15]) = v23[v24[15]];
  v86 = v24[16];
  v87 = (_QWORD *)(v22 + v86);
  v88 = &v23[v86];
  v90 = *(_QWORD *)v88;
  v89 = *((_QWORD *)v88 + 1);
  *v87 = v90;
  v87[1] = v89;
  swift_bridgeObjectRelease();
LABEL_13:
  v35 = v11[22];
  v36 = (uint64_t)v5 + v35;
  v37 = (char *)v6 + v35;
  v38 = *(_QWORD *)((char *)v5 + v35 + 8);
  if (v38 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)v36 = *(_OWORD *)v37;
    goto LABEL_18;
  }
  v39 = *((_QWORD *)v37 + 1);
  if (v39 >> 60 == 15)
  {
    sub_1DA4E89CC(v36);
    goto LABEL_16;
  }
  v40 = *(_QWORD *)v36;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_QWORD *)(v36 + 8) = v39;
  sub_1DA4986F8(v40, v38);
LABEL_18:
  v41 = v11[23];
  v42 = (char *)v5 + v41;
  v43 = (char *)v6 + v41;
  v44 = sub_1DA66C358();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v47 = v46(v42, 1, v44);
  v48 = v46(v43, 1, v44);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v42, v43, v44);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
    goto LABEL_23;
  }
  if (v48)
  {
LABEL_23:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateEpisodePlayStateIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA647F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for EpisodeEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for UpdateEpisodePlayStateIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA647FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for EpisodeEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1DA64802C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for EpisodeEntity();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ThinClientEpisodeStateNetworking.init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
  sub_1DA66EDDC();
  return swift_release();
}

uint64_t ThinClientEpisodeStateNetworking.init(mediaRequestController:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA4841BC(a1, a2);
}

uint64_t ThinClientEpisodeStateNetworking.fetchNewEpisodeStates(for:completion:)()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_1DA648180();
  swift_bridgeObjectRetain();
  sub_1DA66DBA0();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DA648180()
{
  unint64_t result;

  result = qword_1F026E5C8;
  if (!qword_1F026E5C8)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67D7BC, &type metadata for EpisodeStateMediaAPIRequest);
    atomic_store(result, (unint64_t *)&qword_1F026E5C8);
  }
  return result;
}

uint64_t sub_1DA6481C4()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_1DA648180();
  swift_bridgeObjectRetain();
  sub_1DA66DBA0();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for ThinClientEpisodeStateNetworking()
{
  return &type metadata for ThinClientEpisodeStateNetworking;
}

uint64_t sub_1DA64826C()
{
  return sub_1DA6707BC();
}

void sub_1DA64829C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1DA6482D8()
{
  sub_1DA66F94C();
  return swift_bridgeObjectRelease();
}

void sub_1DA6483AC()
{
  JUMPOUT(0x1DA648394);
}

uint64_t TipType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DA6483F4 + 4 * byte_1DA6854E2[*v0]))(0x776F6C6C6F66, 0xE600000000000000);
}

uint64_t sub_1DA6483F4()
{
  return 0x657469726F766166;
}

unint64_t sub_1DA64840C()
{
  return 0xD000000000000014;
}

uint64_t sub_1DA6484B4()
{
  return 0x656E696665646E75;
}

uint64_t TipType.adHocImpression.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DA6484EC + 4 * byte_1DA6854EC[*v0]))();
}

void sub_1DA6484EC(uint64_t a1@<X8>)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 48) = 2;
}

PodcastsUI::TipType_optional __swiftcall TipType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsUI::TipType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DA670600();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1DA6485B8(char *a1)
{
  sub_1DA6597AC(*a1);
}

unint64_t sub_1DA6485C8()
{
  unint64_t result;

  result = qword_1F026E5D0;
  if (!qword_1F026E5D0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for TipType, &type metadata for TipType);
    atomic_store(result, (unint64_t *)&qword_1F026E5D0);
  }
  return result;
}

uint64_t sub_1DA64860C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1DA670798();
  sub_1DA64829C((uint64_t)v3, v1);
  return sub_1DA6707C8();
}

void sub_1DA648650(uint64_t a1)
{
  char *v1;

  sub_1DA64829C(a1, *v1);
}

uint64_t sub_1DA648658()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1DA670798();
  sub_1DA64829C((uint64_t)v3, v1);
  return sub_1DA6707C8();
}

PodcastsUI::TipType_optional sub_1DA648698(Swift::String *a1)
{
  return TipType.init(rawValue:)(*a1);
}

uint64_t sub_1DA6486A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TipType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TipType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TipType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1DA6487A4 + 4 * byte_1DA6854FB[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1DA6487D8 + 4 * byte_1DA6854F6[v4]))();
}

uint64_t sub_1DA6487D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA6487E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA6487E8);
  return result;
}

uint64_t sub_1DA6487F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA6487FCLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1DA648800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA648808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TipType()
{
  return &type metadata for TipType;
}

uint64_t UpdateEpisodeDownloadBehaviorAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t UpdateEpisodeDownloadBehaviorAction.contentIDs.getter()
{
  type metadata accessor for UpdateEpisodeDownloadBehaviorAction();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UpdateEpisodeDownloadBehaviorAction()
{
  uint64_t result;

  result = qword_1F026E660;
  if (!qword_1F026E660)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t UpdateEpisodeDownloadBehaviorAction.newBehavior.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for UpdateEpisodeDownloadBehaviorAction() + 24));
}

uint64_t UpdateEpisodeDownloadBehaviorAction.intent.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t updated;
  uint64_t v4;

  updated = type metadata accessor for UpdateEpisodeDownloadBehaviorAction();
  v4 = *(_QWORD *)(v1 + *(int *)(updated + 24));
  *a1 = *(_QWORD *)(v1 + *(int *)(updated + 20));
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t UpdateEpisodeDownloadBehaviorAction.init(actionMetrics:contentIDs:newBehavior:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;

  v8 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for UpdateEpisodeDownloadBehaviorAction();
  *(_QWORD *)(a4 + *(int *)(result + 20)) = a2;
  *(_QWORD *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t sub_1DA648974()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA648984@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + *(int *)(a1 + 24));
  *a2 = *(_QWORD *)(v2 + *(int *)(a1 + 20));
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1DA648998(uint64_t a1)
{
  unint64_t result;

  result = sub_1DA6489BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DA6489BC()
{
  unint64_t result;
  uint64_t updated;

  result = qword_1F026E600;
  if (!qword_1F026E600)
  {
    updated = type metadata accessor for UpdateEpisodeDownloadBehaviorAction();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UpdateEpisodeDownloadBehaviorAction, updated);
    atomic_store(result, (unint64_t *)&qword_1F026E600);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UpdateEpisodeDownloadBehaviorAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = sub_1DA66ED64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for UpdateEpisodeDownloadBehaviorAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UpdateEpisodeDownloadBehaviorAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for UpdateEpisodeDownloadBehaviorAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for UpdateEpisodeDownloadBehaviorAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateEpisodeDownloadBehaviorAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA648C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DA66ED64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateEpisodeDownloadBehaviorAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA648CE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DA66ED64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1DA648D58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66ED64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of SidebarSearchFieldKeyDelegate.handleDownArrow()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SidebarSearchFieldKeyDelegate.handleUpArrow()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SidebarSearchFieldKeyDelegate.handleEsc()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void sub_1DA648DF8()
{
  qword_1F026E6A0 = 0x4030000000000000;
}

double ContextActionPreviewPaddingInset.getter()
{
  if (qword_1F0268800 != -1)
    swift_once();
  return *(double *)&qword_1F026E6A0;
}

uint64_t ContextMenuPreviewBackgroundColor.hash(into:)()
{
  return sub_1DA6707A4();
}

BOOL static ContextMenuPreviewBackgroundColor.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ContextMenuPreviewBackgroundColor.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

void sub_1DA648ED4(uint64_t a1@<X8>)
{
  ContextMenuPreviewView.previewMargins.getter(a1);
}

void ContextMenuPreviewView.previewMargins.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
}

void sub_1DA648EFC(_BYTE *a1@<X8>)
{
  ContextMenuPreviewView.previewBackgroundColor.getter(a1);
}

void ContextMenuPreviewView.previewBackgroundColor.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

BOOL _s10PodcastsUI25ContextMenuPreviewMarginsO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  float64x2_t v2;
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  uint64_t v6;
  int8x16_t v7;
  int8x8_t v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;
  char v14;

  v3 = *(float64x2_t *)a1;
  v2 = *(float64x2_t *)(a1 + 16);
  v5 = *(float64x2_t *)a2;
  v4 = *(float64x2_t *)(a2 + 16);
  if (*(_BYTE *)(a1 + 32) == 1)
  {
    v6 = vorrq_s8((int8x16_t)vdupq_lane_s64(*(uint64_t *)&v2, 0), *(int8x16_t *)&v3).i64[1] | *(_QWORD *)&v3.f64[0] | *(_QWORD *)&v2.f64[1];
    v7 = vorrq_s8((int8x16_t)v5, (int8x16_t)v4);
    v8 = (int8x8_t)vextq_s8(v7, v7, 8uLL).u64[0];
    v9 = vorr_s8(*(int8x8_t *)v7.i8, v8) == 0;
    if (!*(_BYTE *)(a2 + 32))
      v9 = 0;
    v10 = vorr_s8(*(int8x8_t *)v7.i8, v8) != 0;
    v11 = (*(_BYTE *)(a2 + 32) & 1) != 0 && v10;
    if (!v6)
      return v9;
    return v11;
  }
  else
  {
    v13 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v3, v5), (int32x4_t)vceqq_f64(v2, v4))), 0xFuLL)));
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
      v14 = 0;
    else
      v14 = v13;
    return v14 & 1;
  }
}

unint64_t sub_1DA648FC8()
{
  unint64_t result;

  result = qword_1F026E6A8;
  if (!qword_1F026E6A8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ContextMenuPreviewBackgroundColor, &type metadata for ContextMenuPreviewBackgroundColor);
    atomic_store(result, (unint64_t *)&qword_1F026E6A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContextMenuPreviewMargins(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ContextMenuPreviewMargins(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

uint64_t sub_1DA649060(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1DA64907C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    *(_BYTE *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextMenuPreviewMargins()
{
  return &type metadata for ContextMenuPreviewMargins;
}

uint64_t storeEnumTagSinglePayload for ContextMenuPreviewBackgroundColor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA6490FC + 4 * byte_1DA6856F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA649130 + 4 * asc_1DA6856F0[v4]))();
}

uint64_t sub_1DA649130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA649138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA649140);
  return result;
}

uint64_t sub_1DA64914C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA649154);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA649158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA649160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextMenuPreviewBackgroundColor()
{
  return &type metadata for ContextMenuPreviewBackgroundColor;
}

uint64_t dispatch thunk of ContextMenuPreviewView.setInContextMenu(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ContextMenuPreviewView.previewMargins.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContextMenuPreviewView.previewBackgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

BOOL UIScrollView.isScrolledToTop.getter()
{
  void *v0;
  double v1;
  double v2;
  double v3;

  objc_msgSend(v0, sel_contentOffset);
  v2 = v1;
  objc_msgSend(v0, sel_adjustedContentInset);
  return v2 + v3 <= 0.001;
}

BOOL static UIEdgeInsets.Edge.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t UIEdgeInsets.Edge.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t UIEdgeInsets.Edge.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t UIEdgeInsets.updating(edge:by:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1DA649280 + 4 * byte_1DA685824[*a1]))();
}

double sub_1DA649280(double a1, double a2)
{
  return a1 + a2;
}

uint64_t UIEdgeInsets.replacing(edge:with:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1DA6492CC + 4 * byte_1DA685828[*a1]))();
}

double sub_1DA6492CC(double a1, double a2)
{
  return a2;
}

unint64_t sub_1DA6492F8()
{
  unint64_t result;

  result = qword_1F026E6B0;
  if (!qword_1F026E6B0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UIEdgeInsets.Edge, &type metadata for UIEdgeInsets.Edge);
    atomic_store(result, (unint64_t *)&qword_1F026E6B0);
  }
  return result;
}

uint64_t _s4EdgeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DA649388 + 4 * byte_1DA685831[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DA6493BC + 4 * byte_1DA68582C[v4]))();
}

uint64_t sub_1DA6493BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA6493C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA6493CCLL);
  return result;
}

uint64_t sub_1DA6493D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA6493E0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DA6493E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA6493EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIEdgeInsets.Edge()
{
  return &type metadata for UIEdgeInsets.Edge;
}

uint64_t FindOrCreateLocalEpisodeContentIDsIntent.init(identifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t static FindOrCreateLocalEpisodeContentIDsIntent.kind.getter()
{
  return 0xD000000000000013;
}

uint64_t FindOrCreateLocalEpisodeContentIDsIntent.identifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1DA649434(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001DA691440;
}

ValueMetadata *type metadata accessor for FindOrCreateLocalEpisodeContentIDsIntent()
{
  return &type metadata for FindOrCreateLocalEpisodeContentIDsIntent;
}

id NSLayoutAnchor.constraint(equalTo:constant:priority:)(uint64_t a1, double a2, float a3)
{
  void *v3;
  id v5;
  double v6;

  v5 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, a1);
  *(float *)&v6 = a3;
  objc_msgSend(v5, sel_setPriority_, v6);
  return v5;
}

id sub_1DA6494BC(void *a1, double a2, float a3, uint64_t a4, void *a5)
{
  id v8;
  id v9;
  id v10;

  v8 = a5;
  v9 = a1;
  v10 = NSLayoutAnchor.constraint(equalTo:constant:priority:)((uint64_t)v8, a2, a3);

  return v10;
}

void ClickLocationTracker.addElement(_:)(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  os_unfair_lock_s *v4;
  uint64_t *v5;
  os_unfair_lock_s *v6;
  _OWORD v7[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = *(os_unfair_lock_s **)(v1 + 16);
  v5 = (uint64_t *)&v4[4];
  v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1DA649A5C(v5, (uint64_t)v7);
  os_unfair_lock_unlock(v6);
}

double ClickLocationTracker.parent(of:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v7 = *(os_unfair_lock_s **)(v3 + 16);
  v8 = (uint64_t)&v7[4];
  v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  v19 = v8;
  sub_1DA64984C(v8, a1, a2, (uint64_t)&v20);
  os_unfair_lock_unlock(v9);
  v11 = v20;
  v12 = v21;
  v14 = v22;
  v13 = v23;
  v16 = v24;
  v15 = v25;
  v18 = v26;
  v17 = v27;
  if (v21)
  {
    if (v25)
    {
      swift_bridgeObjectRetain();
      sub_1DA5918FC(v11, v12);
      os_unfair_lock_lock(v9);
      sub_1DA64984C(v19, v16, v15, a3);
      os_unfair_lock_unlock(v9);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DA5918FC(v20, v21);
      result = 0.0;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)(a3 + 48) = 0u;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
  }
  else
  {
    *(_QWORD *)a3 = v20;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = v14;
    *(_QWORD *)(a3 + 24) = v13;
    *(_QWORD *)(a3 + 32) = v16;
    *(_QWORD *)(a3 + 40) = v15;
    *(_QWORD *)(a3 + 48) = v18;
    *(_QWORD *)(a3 + 56) = v17;
  }
  return result;
}

void ClickLocationTracker.element(for:)(uint64_t a1, uint64_t a2)
{
  sub_1DA649B24(a1, a2, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t))sub_1DA64984C);
}

uint64_t ClickLocationTracker.__allocating_init()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject();
  v1 = sub_1DA63CFEC(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C88);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v0 + 16) = v2;
  return v0;
}

uint64_t ClickLocationTracker.locationStack(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2880);
  sub_1DA66CBF8();
  v4 = sub_1DA64A2D4(a1, a2, v6);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t ClickLocationTracker.init()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = sub_1DA63CFEC(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C88);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v0 + 16) = v2;
  return v0;
}

uint64_t ClickLocationTracker.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ClickLocationTracker.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DA64984C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1DA499108(a2, a3);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v5 + 56) + (v8 << 6);
      v11 = *(_QWORD *)(v10 + 8);
      v12 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 56);
      *(_QWORD *)a4 = *(_QWORD *)v10;
      *(_QWORD *)(a4 + 8) = v11;
      *(_QWORD *)(a4 + 16) = v12;
      *(_OWORD *)(a4 + 24) = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(a4 + 40) = *(_OWORD *)(v10 + 40);
      *(_QWORD *)(a4 + 56) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
  }
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

Swift::Bool __swiftcall ClickLocationTracker.containsElement(for:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  os_unfair_lock_s *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v8;
  uint64_t v9;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = *(os_unfair_lock_s **)(v1 + 16);
  v5 = (uint64_t)&v4[4];
  v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1DA64984C(v5, countAndFlagsBits, (uint64_t)object, (uint64_t)&v8);
  os_unfair_lock_unlock(v6);
  LOBYTE(object) = v9 != 0;
  sub_1DA5918FC(v8, v9);
  return (char)object;
}

BOOL ClickLocationTracker.containsElement(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  _BOOL8 v9;
  uint64_t v11;
  uint64_t v12;

  v3 = a1[3];
  if (v3)
  {
    v4 = a1[2];
    v5 = v3;
  }
  else
  {
    v4 = *a1;
    v5 = a1[1];
    swift_bridgeObjectRetain();
  }
  v6 = *(os_unfair_lock_s **)(v1 + 16);
  v7 = (uint64_t)&v6[4];
  v8 = v6 + 6;
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v8);
  sub_1DA64984C(v7, v4, v5, (uint64_t)&v11);
  os_unfair_lock_unlock(v8);
  v9 = v12 != 0;
  sub_1DA5918FC(v11, v12);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1DA649A5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  if (*(_QWORD *)(a2 + 24))
  {
    v4 = *(_QWORD *)(a2 + 16);
    v5 = *(_QWORD *)(a2 + 24);
  }
  else
  {
    v4 = *(_QWORD *)a2;
    v5 = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
  }
  sub_1DA64A464(a2);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *a1;
  *a1 = 0x8000000000000000;
  sub_1DA5387D8((__int128 *)a2, v4, v5, isUniquelyReferenced_nonNull_native);
  *a1 = v8;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void ClickLocationTracker.removeElement(for:)(uint64_t a1, uint64_t a2)
{
  sub_1DA649B24(a1, a2, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t))sub_1DA649B94);
}

void sub_1DA649B24(uint64_t a1, uint64_t a2, void (*a3)(os_unfair_lock_s *, uint64_t, uint64_t))
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;

  v7 = *(os_unfair_lock_s **)(v3 + 16);
  v8 = v7 + 4;
  v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  a3(v8, a1, a2);
  os_unfair_lock_unlock(v9);
}

uint64_t sub_1DA649B94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  char v9;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  swift_bridgeObjectRetain();
  v8 = sub_1DA499108(a2, a3);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *a1;
    v16 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1DA57CF34();
      v12 = v16;
    }
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 56) + (v8 << 6);
    v14 = *(_QWORD *)(v13 + 8);
    *(_QWORD *)a4 = *(_QWORD *)v13;
    *(_QWORD *)(a4 + 8) = v14;
    v15 = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(a4 + 16) = *(_OWORD *)(v13 + 16);
    *(_OWORD *)(a4 + 32) = v15;
    *(_OWORD *)(a4 + 48) = *(_OWORD *)(v13 + 48);
    sub_1DA5A8B50(v8, v12);
    *a1 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t ClickLocationTracker.removeElement(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  os_unfair_lock_s *v10;

  v5 = a1[3];
  if (v5)
  {
    v6 = a1[2];
    v7 = v5;
  }
  else
  {
    v6 = *a1;
    v7 = a1[1];
    swift_bridgeObjectRetain();
  }
  v8 = *(_QWORD *)(v2 + 16);
  v9 = (uint64_t *)(v8 + 16);
  v10 = (os_unfair_lock_s *)(v8 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v10);
  sub_1DA649B94(v9, v6, v7, a2);
  os_unfair_lock_unlock(v10);
  return swift_bridgeObjectRelease();
}

uint64_t ClickLocationTracker.removeElements(where:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t *v6;
  os_unfair_lock_s *v7;
  uint64_t v9;

  v5 = *(os_unfair_lock_s **)(v2 + 16);
  v6 = (uint64_t *)&v5[4];
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_1DA649D90(v6, a1, a2, &v9);
  os_unfair_lock_unlock(v7);
  return v9;
}

uint64_t sub_1DA649D90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a1;
  v8 = *a1;
  swift_bridgeObjectRetain();
  result = sub_1DA649F98(a2, a3, v8);
  v10 = result;
  v11 = *(_QWORD *)(result + 16);
  if (v11)
  {
    v21 = a4;
    swift_bridgeObjectRetain();
    v20 = v10;
    v12 = v10 + 56;
    v22 = v6;
    do
    {
      v23 = v11;
      v13 = *(_QWORD *)(v12 - 24);
      v14 = *(_QWORD *)(v12 - 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = sub_1DA499108(v13, v14);
      v17 = v16;
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v19 = *v6;
        v24 = *v6;
        *v6 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1DA57CF34();
          v19 = v24;
        }
        swift_bridgeObjectRelease();
        sub_1DA5A8B50(v15, v19);
        *v6 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      v12 += 64;
      v6 = v22;
      v11 = v23 - 1;
    }
    while (v23 != 1);
    v10 = v20;
    result = swift_bridgeObjectRelease();
    a4 = v21;
  }
  *a4 = v10;
  return result;
}

uint64_t sub_1DA649F98(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  int64_t v30;
  uint64_t (*v31)(_QWORD *);
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD v36[8];
  uint64_t v37;

  v31 = (uint64_t (*)(_QWORD *))result;
  v4 = 0;
  v7 = *(_QWORD *)(a3 + 64);
  v5 = a3 + 64;
  v6 = v7;
  v8 = 1 << *(_BYTE *)(v5 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v6;
  v29 = v5;
  v30 = (unint64_t)(v8 + 63) >> 6;
  v11 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v10)
    {
      v35 = (v10 - 1) & v10;
      v12 = __clz(__rbit64(v10)) | (v4 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v4++, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v4 >= v30)
      goto LABEL_33;
    v14 = *(_QWORD *)(v29 + 8 * v4);
    if (!v14)
      break;
LABEL_20:
    v35 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_21:
    v16 = (uint64_t *)(*(_QWORD *)(a3 + 56) + (v12 << 6));
    v17 = v16[1];
    v18 = v16[2];
    v19 = v16[3];
    v20 = v16[4];
    v21 = v16[5];
    v23 = v16[6];
    v22 = v16[7];
    v33 = *v16;
    v36[0] = *v16;
    v36[1] = v17;
    v36[2] = v18;
    v36[3] = v19;
    v36[4] = v20;
    v36[5] = v21;
    v36[6] = v23;
    v36[7] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = v31(v36);
    if (v3)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11;
    }
    v34 = v4;
    if ((v24 & 1) != 0)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      v37 = v11;
      if ((result & 1) == 0)
      {
        result = sub_1DA50A1E4(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v37;
      }
      v26 = *(_QWORD *)(v11 + 16);
      v25 = *(_QWORD *)(v11 + 24);
      v27 = v26 + 1;
      if (v26 >= v25 >> 1)
      {
        result = sub_1DA50A1E4(v25 > 1, v26 + 1, 1);
        v27 = v26 + 1;
        v11 = v37;
      }
      *(_QWORD *)(v11 + 16) = v27;
      v28 = (_QWORD *)(v11 + (v26 << 6));
      v28[4] = v33;
      v28[5] = v17;
      v28[6] = v18;
      v28[7] = v19;
      v28[8] = v20;
      v28[9] = v21;
      v28[10] = v23;
      v28[11] = v22;
      v3 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v3 = 0;
    }
    v4 = v34;
    v10 = v35;
  }
  v15 = v4 + 1;
  if (v4 + 1 >= v30)
    goto LABEL_33;
  v14 = *(_QWORD *)(v29 + 8 * v15);
  if (v14)
    goto LABEL_19;
  v15 = v4 + 2;
  if (v4 + 2 >= v30)
    goto LABEL_33;
  v14 = *(_QWORD *)(v29 + 8 * v15);
  if (v14)
    goto LABEL_19;
  v15 = v4 + 3;
  if (v4 + 3 >= v30)
    goto LABEL_33;
  v14 = *(_QWORD *)(v29 + 8 * v15);
  if (v14)
    goto LABEL_19;
  v15 = v4 + 4;
  if (v4 + 4 >= v30)
  {
LABEL_33:
    swift_release();
    return v11;
  }
  v14 = *(_QWORD *)(v29 + 8 * v15);
  if (v14)
  {
LABEL_19:
    v4 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v30)
      goto LABEL_33;
    v14 = *(_QWORD *)(v29 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_36:
  __break(1u);
  return result;
}

Swift::Void __swiftcall ClickLocationTracker.removeAllElements()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
}

uint64_t sub_1DA64A2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  if (!*(_QWORD *)(a3 + 16))
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v6 = sub_1DA499108(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v8 = (uint64_t *)(*(_QWORD *)(a3 + 56) + (v6 << 6));
  v10 = *v8;
  v9 = v8[1];
  v12 = v8[2];
  v11 = v8[3];
  v14 = v8[4];
  v13 = v8[5];
  v15 = v8[7];
  v20 = v8[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4D20);
  v16 = swift_allocObject();
  v17 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v16 + 32) = v10;
  *(_QWORD *)(v16 + 40) = v9;
  *(_QWORD *)(v16 + 48) = v12;
  *(_QWORD *)(v16 + 56) = v11;
  *(_QWORD *)(v16 + 64) = v14;
  if (v13)
  {
    *(_QWORD *)(v16 + 72) = v13;
    *(_QWORD *)(v16 + 80) = v20;
    *(_QWORD *)(v16 + 88) = v15;
    swift_bridgeObjectRetain();
    v18 = sub_1DA64A2D4(v14, v13, a3);
    swift_bridgeObjectRelease();
    sub_1DA65F834(v18);
  }
  else
  {
    *(_QWORD *)(v16 + 72) = 0;
    *(_QWORD *)(v16 + 80) = v20;
    *(_QWORD *)(v16 + 88) = v15;
  }
  return v17;
}

uint64_t type metadata accessor for ClickLocationTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for ClickLocationTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClickLocationTracker.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1DA64A464(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

id LanguageAwareString.__allocating_init(_:baseParagraphStyle:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1DA64D2F4(a1, a2);

  return v6;
}

void sub_1DA64A56C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString);
  *(_QWORD *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString) = a1;

}

void (*sub_1DA64A580(id *a1))(uint64_t *a1, uint64_t a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1DA48D19C();
  return sub_1DA64A5B4;
}

void sub_1DA64A5B4(uint64_t *a1, uint64_t a2)
{
  sub_1DA64AC6C(a1, a2, &OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString);
}

id sub_1DA64A63C()
{
  return sub_1DA64A71C(&OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase, MEMORY[0x1E0CB2470]);
}

void sub_1DA64A684(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase);
  *(_QWORD *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase) = a1;

}

void (*sub_1DA64A698(id *a1))(uint64_t *a1, uint64_t a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1DA64A63C();
  return sub_1DA64A6CC;
}

void sub_1DA64A6CC(uint64_t *a1, uint64_t a2)
{
  sub_1DA64AC6C(a1, a2, &OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase);
}

id sub_1DA64A708()
{
  return sub_1DA64A71C(&OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase, MEMORY[0x1E0CB2478]);
}

id sub_1DA64A71C(uint64_t *a1, uint64_t (*a2)(_QWORD, unint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  id v14;
  void *v15;
  id v16;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v7 = v2;
    v8 = sub_1DA498918();
    v9 = a2(MEMORY[0x1E0DEA968], v8);
    v11 = v10;
    swift_beginAccess();
    v12 = byte_1F026E6C0;
    v13 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
    v14 = sub_1DA47CFE4(v9, v11, 0, v12);
    v15 = *(void **)(v7 + v3);
    *(_QWORD *)(v7 + v3) = v14;
    v5 = v14;

    v4 = 0;
  }
  v16 = v4;
  return v5;
}

void sub_1DA64A834(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase);
  *(_QWORD *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase) = a1;

}

void (*sub_1DA64A848(id *a1))(uint64_t *a1, uint64_t a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1DA64A708();
  return sub_1DA64A87C;
}

void sub_1DA64A87C(uint64_t *a1, uint64_t a2)
{
  sub_1DA64AC6C(a1, a2, &OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase);
}

id sub_1DA64A8B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace;
  v2 = *(void **)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace);
  }
  else
  {
    v4 = v0;
    sub_1DA498918();
    v5 = sub_1DA670300();
    v7 = v6;
    swift_beginAccess();
    v8 = byte_1F026E6C0;
    v9 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
    v10 = sub_1DA47CFE4(v5, v7, 0, v8);
    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v10;
    v3 = v10;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

void sub_1DA64AA14(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace);
  *(_QWORD *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace) = a1;

}

void (*sub_1DA64AA28(id *a1))(uint64_t *a1, uint64_t a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1DA64A8B8();
  return sub_1DA64AA5C;
}

void sub_1DA64AA5C(uint64_t *a1, uint64_t a2)
{
  sub_1DA64AC6C(a1, a2, &OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace);
}

id sub_1DA64AA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  _QWORD v19[4];

  v1 = v0;
  v2 = sub_1DA66C0D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed;
  v7 = *(void **)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed);
  if (v7)
  {
    v8 = *(id *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + OBJC_IVAR___AMPLanguageAwareString_string + 8);
    v19[1] = *(_QWORD *)(v0 + OBJC_IVAR___AMPLanguageAwareString_string);
    v19[2] = v9;
    swift_bridgeObjectRetain();
    sub_1DA66C0AC();
    sub_1DA498918();
    v10 = sub_1DA6702F4();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v13 = byte_1F026E6C0;
    v14 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
    v15 = sub_1DA47CFE4(v10, v12, 0, v13);
    v16 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v15;
    v8 = v15;

    v7 = 0;
  }
  v17 = v7;
  return v8;
}

void sub_1DA64AC18(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed);
  *(_QWORD *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed) = a1;

}

void (*sub_1DA64AC2C(id *a1))(uint64_t *a1, uint64_t a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1DA64AA98();
  return sub_1DA64AC60;
}

void sub_1DA64AC60(uint64_t *a1, uint64_t a2)
{
  sub_1DA64AC6C(a1, a2, &OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed);
}

void sub_1DA64AC6C(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(void **)(v3 + *a3);
  *(_QWORD *)(v3 + *a3) = v4;

}

uint64_t LanguageAwareString.numbers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA64AD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange;
  if (*(_BYTE *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange + 16) != 1)
    return *(_QWORD *)v1;
  v2 = sub_1DA64AF00();
  result = 0;
  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = 0;
  return result;
}

uint64_t sub_1DA64AD84(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange;
  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = a2;
  *(_BYTE *)(v3 + 16) = 0;
  return result;
}

__n128 (*sub_1DA64AD9C(uint64_t *a1))(__n128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1DA64AD20();
  a1[1] = v3;
  return sub_1DA64ADD0;
}

__n128 sub_1DA64ADD0(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  v1 = a1[1].n128_u64[0] + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange;
  result = *a1;
  *(__n128 *)v1 = *a1;
  *(_BYTE *)(v1 + 16) = 0;
  return result;
}

BOOL sub_1DA64AE14()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  _BOOL8 result;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty);
  if (v1 != 2)
    return v1 & 1;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___AMPLanguageAwareString_string + 8);
  if ((v2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(v2) & 0xF;
  else
    v3 = *(_QWORD *)(v0 + OBJC_IVAR___AMPLanguageAwareString_string) & 0xFFFFFFFFFFFFLL;
  result = v3 == 0;
  *(_BYTE *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty) = result;
  return result;
}

uint64_t sub_1DA64AE70(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty) = result;
  return result;
}

uint64_t (*sub_1DA64AE80(uint64_t a1))(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_1DA64AE14();
  return sub_1DA64AEB8;
}

uint64_t sub_1DA64AEB8(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty) = *(_BYTE *)(result + 8);
  return result;
}

uint64_t sub_1DA64AF00()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;

  v1 = (_BYTE *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count);
  if (*(_BYTE *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count + 8) != 1)
    return *(_QWORD *)v1;
  swift_bridgeObjectRetain();
  v2 = sub_1DA66F9DC();
  swift_bridgeObjectRelease();
  *(_QWORD *)v1 = v2;
  v1[8] = 0;
  return v2;
}

uint64_t sub_1DA64AF94(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count;
  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = 0;
  return result;
}

_QWORD *(*sub_1DA64AFAC(uint64_t *a1))(_QWORD *result)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1DA64AF00();
  return sub_1DA64AFE0;
}

_QWORD *sub_1DA64AFE0(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1] + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count;
  *(_QWORD *)v1 = *result;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_1DA64B02C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;

  v1 = (_BYTE *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count);
  if (*(_BYTE *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count + 8) != 1)
    return *(_QWORD *)v1;
  result = sub_1DA66F958();
  *(_QWORD *)v1 = result;
  v1[8] = 0;
  return result;
}

uint64_t sub_1DA64B098(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count;
  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = 0;
  return result;
}

_QWORD *(*sub_1DA64B0B0(uint64_t *a1))(_QWORD *result)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1DA64B02C();
  return sub_1DA64B0E4;
}

_QWORD *sub_1DA64B0E4(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1] + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count;
  *(_QWORD *)v1 = *result;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

uint64_t static LanguageAwareString.alwaysGenerateAttributedString.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1F026E6C0 = a1;
  return result;
}

uint64_t (*static LanguageAwareString.alwaysGenerateAttributedString.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static LanguageAwareString.delegate.getter()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t static LanguageAwareString.delegate.setter(uint64_t a1)
{
  swift_beginAccess();
  qword_1EDADE968 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*static LanguageAwareString.delegate.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1DA64B37C()
{
  char v0;
  id v1;
  id result;

  swift_beginAccess();
  v0 = byte_1F026E6C0;
  v1 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
  result = sub_1DA47CFE4(0, 0xE000000000000000, 0, v0);
  qword_1F026E6D0 = (uint64_t)result;
  return result;
}

id static LanguageAwareString.empty.getter()
{
  if (qword_1F0268810 != -1)
    swift_once();
  return (id)qword_1F026E6D0;
}

id LanguageAwareString.init(_:baseParagraphStyle:)(void *a1, void *a2)
{
  id v4;

  v4 = sub_1DA64D2F4(a1, a2);

  return v4;
}

id LanguageAwareString.__allocating_init(_:attributes:baseParagraphStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  objc_class *v4;
  id v9;
  id v10;

  v9 = objc_allocWithZone(v4);
  v10 = sub_1DA64D644(a1, a2, a3, a4);

  return v10;
}

id LanguageAwareString.init(_:attributes:baseParagraphStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  v5 = sub_1DA64D644(a1, a2, a3, a4);

  return v5;
}

uint64_t LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t ObjectType;
  uint64_t v9;

  if (a2)
  {
    ObjectType = swift_getObjectType();
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, void *, _QWORD))(ObjectType + 464))(a1, a2, a3, a4 & 1);
    swift_deallocPartialClassInstance();
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v9;
}

id LanguageAwareString.__allocating_init(_:attributes:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1DA64DCF8((uint64_t)a1, a2);

  return v6;
}

id LanguageAwareString.init(_:attributes:)(void *a1, uint64_t a2)
{
  id v3;

  v3 = sub_1DA64DCF8((uint64_t)a1, a2);

  return v3;
}

id LanguageAwareString.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return LanguageAwareString.init(from:)(a1);
}

id LanguageAwareString.init(from:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  id v46;
  id v47;
  char *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  void *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v89;
  objc_super v90;
  _QWORD v91[3];
  uint64_t v92;
  uint64_t v93;
  void *v94;

  v3 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  v4 = OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  v5 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  v6 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  v84 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  v86 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  v7 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  v8 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v89 = v1;
  sub_1DA6707E0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v91, v92);
    v14 = sub_1DA6706E4();
    v16 = v15;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v91);
    swift_beginAccess();
    v17 = (void *)qword_1EDADE968;
    if (qword_1EDADE968)
    {
      swift_unknownObjectRetain();
      v18 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
      v19 = objc_msgSend(v17, sel_preprocessForLanguageAwarenessString_, v18);

      v87 = sub_1DA66F8BC();
      v21 = v20;
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      v16 = v21;
    }
    else
    {
      v87 = v14;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    if (byte_1F026E6C0 == 1)
    {
      v22 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
      swift_bridgeObjectRetain();
      v23 = v87;
      v24 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
      v25 = objc_msgSend(v22, sel_initWithString_, v24);

      v26 = 0;
    }
    else
    {
      v23 = v87;
      v26 = (void *)sub_1DA66F88C();
      v25 = 0;
    }
    v27 = v25;
    sub_1DA47FA40(v25, v26, 0, (uint64_t)v91);
    v28 = v91[0];
    v85 = (_QWORD *)v91[1];
    v29 = v91[2];
    v82 = v92;
    v30 = v93;

    v81 = v28;
    v83 = v26;
    if (v25)
    {
      if (v30)
      {
        v31 = *(_QWORD *)(v30 + 16);
        if (v31)
        {
          v74 = v25;
          v75 = v27;
          v78 = v29;
          v32 = v27;
          swift_bridgeObjectRetain();
          v33 = 0;
          do
          {
            v34 = *(_QWORD *)(v30 + 8 * v33++ + 32);
            v35 = (void *)sub_1DA66F88C();
            objc_msgSend(v32, sel_replaceCharactersInRange_withString_, v34, 1, v35);

          }
          while (v31 != v33);
          swift_bridgeObjectRelease_n();

          v27 = v75;
          v29 = v78;
LABEL_23:
          v23 = v87;
          v45 = v82;
          if (!v74)
          {
            if ((v82 & 1) != 0)
            {
LABEL_25:
              v80 = v29;
              v46 = v27;
              v47 = sub_1DA48D220(0, v85);
              v48 = v89;
              *(_QWORD *)&v89[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v47;
              v49 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
              v50 = v47;
              v51 = objc_msgSend(v49, sel_initWithAttributedString_, v50);
              if (qword_1F0268540 != -1)
                swift_once();
              v52 = qword_1F026ACC8;
              v53 = objc_retainAutorelease(v51);
              objc_msgSend(v53, sel_performSelector_, v52);
              v54 = objc_msgSend(v53, sel_string);
              v55 = sub_1DA66F8BC();
              v57 = v56;

              swift_bridgeObjectRelease();
              v58 = &v89[OBJC_IVAR___AMPLanguageAwareString_string];
              *(_QWORD *)&v89[OBJC_IVAR___AMPLanguageAwareString_string] = v55;
              v16 = v57;
              v27 = v46;
LABEL_37:
              v29 = v80;
              v28 = v81;
LABEL_44:
              *((_QWORD *)v58 + 1) = v16;
              *(_QWORD *)&v48[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = v85;
              *(_QWORD *)&v48[OBJC_IVAR___AMPLanguageAwareString_numbers] = v28;
              *(_QWORD *)&v48[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v29;

              v90.receiver = v48;
              v90.super_class = (Class)type metadata accessor for LanguageAwareString();
              v12 = objc_msgSendSuper2(&v90, sel_init);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
              return v12;
            }
            goto LABEL_42;
          }
LABEL_30:
          objc_msgSend(v27, sel_copy, v74);
          sub_1DA670360();
          swift_unknownObjectRelease();
          sub_1DA47D774(0, (unint64_t *)&unk_1EDAE5110);
          if (swift_dynamicCast())
            v59 = v94;
          else
            v59 = 0;
          *(_QWORD *)&v89[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v59;
          if (v45)
          {
            v77 = v27;
            v80 = v29;
            v60 = qword_1F0268540;
            v61 = v27;
            v62 = v59;
            if (v60 != -1)
              swift_once();
            v63 = qword_1F026ACC8;
            v64 = objc_retainAutorelease(v61);
            objc_msgSend(v64, sel_performSelector_, v63);
            v65 = objc_msgSend(v64, sel_string);
            v66 = sub_1DA66F8BC();
            v68 = v67;
            swift_bridgeObjectRelease();

            v48 = v89;
            v58 = &v89[OBJC_IVAR___AMPLanguageAwareString_string];
            *(_QWORD *)&v89[OBJC_IVAR___AMPLanguageAwareString_string] = v66;
            v16 = v68;
            v27 = v77;
            goto LABEL_37;
          }
          if (v59)
          {
            v69 = v59;
            v70 = objc_msgSend(v69, sel_string);
            v71 = sub_1DA66F8BC();
            v73 = v72;

            swift_bridgeObjectRelease();
            v16 = v73;
            v23 = v71;
          }
          v48 = v89;
LABEL_43:

          v58 = &v48[OBJC_IVAR___AMPLanguageAwareString_string];
          *(_QWORD *)&v48[OBJC_IVAR___AMPLanguageAwareString_string] = v23;
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();
      }
      v45 = v82;
      goto LABEL_30;
    }
    if (!v30)
    {
      if ((v82 & 1) != 0)
        goto LABEL_25;
LABEL_42:
      v48 = v89;
      *(_QWORD *)&v89[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = 0;
      goto LABEL_43;
    }
    v74 = 0;
    v36 = (void *)sub_1DA66F88C();
    objc_msgSend(v36, sel_mutableCopy);

    sub_1DA670360();
    swift_unknownObjectRelease();
    sub_1DA47D774(0, (unint64_t *)&unk_1F026E770);
    swift_dynamicCast();
    v37 = v94;
    v38 = *(_QWORD *)(v30 + 16);
    if (v38)
    {
      v76 = v27;
      v79 = v29;
      swift_bridgeObjectRetain();
      v39 = 0;
      do
      {
        v40 = *(_QWORD *)(v30 + 8 * v39++ + 32);
        v41 = (void *)sub_1DA66F88C();
        objc_msgSend(v37, sel_replaceCharactersInRange_withString_, v40, 1, v41);

      }
      while (v38 != v39);
      swift_bridgeObjectRelease();
      v27 = v76;
      v29 = v79;
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_copy);
    sub_1DA670360();
    swift_unknownObjectRelease();
    sub_1DA47D774(0, &qword_1EDAE2130);
    swift_dynamicCast();
    v42 = v94;
    v87 = sub_1DA66F8BC();
    v44 = v43;
    swift_bridgeObjectRelease();

    v16 = v44;
    goto LABEL_23;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

  v11 = *(void **)&v1[v86];
  v12 = v89;

  type metadata accessor for LanguageAwareString();
  swift_deallocPartialClassInstance();
  return v12;
}

uint64_t sub_1DA64C158(uint64_t a1)
{
  id v2;
  id v3;
  char v4;
  char v5;

  v2 = sub_1DA48D19C();
  v3 = NSAttributedString.baseWritingDirection(forCharacterAt:)(a1);
  v5 = v4;

  if ((v5 & 1) != 0)
    return -1;
  else
    return (uint64_t)v3;
}

uint64_t sub_1DA64C218()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t result;

  v1 = (_BYTE *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection);
  if (*(_BYTE *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection + 8) != 1)
    return *(_QWORD *)v1;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections);
  if (*(_BYTE *)(v2 + OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts) == 1)
    result = *(unsigned __int8 *)(v2 + OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough);
  else
    result = -1;
  *(_QWORD *)v1 = result;
  v1[8] = 0;
  return result;
}

uint64_t sub_1DA64C298(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection;
  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = 0;
  return result;
}

_QWORD *(*sub_1DA64C2B0(uint64_t *a1))(_QWORD *result)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1DA64C218();
  return sub_1DA64C2E4;
}

_QWORD *sub_1DA64C2E4(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1] + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection;
  *(_QWORD *)v1 = *result;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

void sub_1DA64C300(uint64_t a1, id a2, id a3, char a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;

  v6 = *(_QWORD *)(v5 + OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections);
  if (*(_BYTE *)(v6 + OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts) == 1)
  {
    v12 = *(_QWORD *)(v6 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight);
    v13 = *(_QWORD *)(v6 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
    if (v12)
    {
      if (!v13)
        return;
    }
    else if (v13)
    {
      return;
    }
    if ((a4 & 1) == 0 || (v14 = *(void **)(v5 + OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage)) == 0)
    {
      v35 = sub_1DA48D19C();
      v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1320]), sel_initWithAttributedString_, v35);

      v37 = objc_allocWithZone(MEMORY[0x1E0DC1280]);
      v15 = v36;
      v18 = objc_msgSend(v37, sel_init);
      objc_msgSend(v15, sel_addLayoutManager_, v18);
      v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12C0]), sel_initWithSize_, a5, 1.79769313e308);
      objc_msgSend(v24, sel_setLineFragmentPadding_, 0.0);
      objc_msgSend(v24, sel_setMaximumNumberOfLines_, a2);
      objc_msgSend(v24, sel_setLineBreakMode_, a3);
      objc_msgSend(v18, sel_addTextContainer_, v24);

      if ((a4 & 1) != 0)
      {
        v34 = *(void **)(v5 + OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage);
        *(_QWORD *)(v5 + OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage) = v15;
      }
      else
      {

        v34 = *(void **)(v5 + OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage);
        *(_QWORD *)(v5 + OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage) = 0;
      }
      goto LABEL_35;
    }
    v15 = v14;
    v16 = objc_msgSend(v15, sel_layoutManagers);
    sub_1DA47D774(0, &qword_1F026E780);
    v17 = sub_1DA66FA9C();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = (id)sub_1DA6705A0();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_11:
        if ((v17 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_41;
          }
          v19 = *(id *)(v17 + 32);
LABEL_14:
          v20 = v19;
          swift_bridgeObjectRelease();
          v18 = v20;
          v21 = objc_msgSend(v18, sel_textContainers);
          sub_1DA47D774(0, &qword_1F026E788);
          v17 = sub_1DA66FA9C();

          if (!(v17 >> 62))
          {
            if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_16;
            goto LABEL_42;
          }
LABEL_41:
          swift_bridgeObjectRetain();
          v40 = sub_1DA6705A0();
          swift_bridgeObjectRelease();
          if (v40)
          {
LABEL_16:
            if ((v17 & 0xC000000000000001) == 0)
            {
              if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                return;
              }
              v22 = *(id *)(v17 + 32);
LABEL_19:
              v23 = v22;
              swift_bridgeObjectRelease();
              v24 = v23;
              objc_msgSend(v24, sel_size);
              v26 = v25;
              v28 = v27;
              objc_msgSend(v24, sel_lineFragmentPadding);
              v30 = v29;
              v31 = objc_msgSend(v24, sel_maximumNumberOfLines);
              v32 = objc_msgSend(v24, sel_lineBreakMode);
              v33 = v32;
              if (v26 == a5 && v28 == 1.79769313e308)
              {
                if (v30 == 0.0)
                {
                  if (v31 == a2)
                  {
                    if (v32 == a3)
                    {

                      v34 = v24;
LABEL_35:

                      objc_msgSend(v15, sel_writingDirectionOfLine_usingLayoutManager_textContainer_, a1, v18, v24);
                      return;
                    }
                    goto LABEL_33;
                  }
LABEL_31:
                  objc_msgSend(v24, sel_setMaximumNumberOfLines_, a2);
LABEL_32:
                  if (v33 == a3)
                  {
LABEL_34:

                    v38 = objc_msgSend(v15, sel_fullRange);
                    objc_msgSend(v18, sel_invalidateLayoutForCharacterRange_actualCharacterRange_, v38, v39, 0);

                    v34 = v15;
                    goto LABEL_35;
                  }
LABEL_33:
                  objc_msgSend(v24, sel_setLineBreakMode_, a3);
                  goto LABEL_34;
                }
              }
              else
              {
                objc_msgSend(v24, sel_setSize_, a5, 1.79769313e308);
                if (v30 == 0.0)
                  goto LABEL_30;
              }
              objc_msgSend(v24, sel_setLineFragmentPadding_, 0.0);
LABEL_30:
              if (v31 == a2)
                goto LABEL_32;
              goto LABEL_31;
            }
LABEL_43:
            v22 = (id)MEMORY[0x1DF09EE48](0, v17);
            goto LABEL_19;
          }
LABEL_42:
          swift_bridgeObjectRelease();
          __break(1u);
          goto LABEL_43;
        }
LABEL_39:
        v19 = (id)MEMORY[0x1DF09EE48](0, v17);
        goto LABEL_14;
      }
    }
    else
    {
      v18 = *(id *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v18)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_39;
  }
}

id sub_1DA64C884()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections);
}

id LanguageAwareString.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void LanguageAwareString.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LanguageAwareString.__deallocating_deinit()
{
  return sub_1DA64D018(type metadata accessor for LanguageAwareString);
}

uint64_t sub_1DA64C928@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 488))();
  if (!v2)
    *a1 = result;
  return result;
}

id sub_1DA64C99C()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___AMPLanguageAwareTextStorage_textStorage);
  swift_beginAccess();
  return *v1;
}

void sub_1DA64CA3C(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___AMPLanguageAwareTextStorage_textStorage);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id LanguageAwareTextStorage.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return LanguageAwareTextStorage.init(_:)(a1);
}

id LanguageAwareTextStorage.init(_:)(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareTextStorage_textStorage] = a1;
  v3 = v1;
  v4 = a1;
  v5 = objc_msgSend(v4, sel_delegate);
  *(_QWORD *)&v3[OBJC_IVAR___AMPLanguageAwareTextStorage_originalTextStorageDelegate] = v5;
  objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
  v6 = v4;
  v7 = sub_1DA64DA14(v6);

  *(_QWORD *)&v3[OBJC_IVAR___AMPLanguageAwareTextStorage_languageAwareString] = v7;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for LanguageAwareTextStorage();
  v8 = objc_msgSendSuper2(&v10, sel_init);
  objc_msgSend(v6, sel_setDelegate_, v8);

  return v8;
}

id sub_1DA64CBCC(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  id v11;

  v6 = *(void **)(v5 + OBJC_IVAR___AMPLanguageAwareTextStorage_originalTextStorageDelegate);
  if (v6)
  {
    v11 = result;
    result = objc_msgSend(v6, sel_respondsToSelector_, sel_textStorage_willProcessEditing_range_changeInLength_);
    if ((result & 1) != 0)
      return objc_msgSend(v6, sel_textStorage_willProcessEditing_range_changeInLength_, v11, a2, a3, a4, a5);
  }
  return result;
}

void sub_1DA64CD14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;

  v6 = v5;
  v10 = a2;
  if ((a2 & 2) != 0)
  {
    v12 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
    v13 = a1;
    v14 = sub_1DA64DA14(v13);

    v15 = *(void **)(v6 + OBJC_IVAR___AMPLanguageAwareTextStorage_languageAwareString);
    *(_QWORD *)(v6 + OBJC_IVAR___AMPLanguageAwareTextStorage_languageAwareString) = v14;

    v10 |= 1uLL;
  }
  v16 = *(void **)(v6 + OBJC_IVAR___AMPLanguageAwareTextStorage_originalTextStorageDelegate);
  if (v16)
  {
    if ((objc_msgSend(v16, sel_respondsToSelector_, sel_textStorage_didProcessEditing_range_changeInLength_) & 1) != 0)objc_msgSend(v16, sel_textStorage_didProcessEditing_range_changeInLength_, a1, v10, a3, a4, a5);
  }
}

id sub_1DA64CE74()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR___AMPLanguageAwareTextStorage_languageAwareString)
                           + OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections));
}

uint64_t sub_1DA64CEAC(uint64_t a1, void *a2, void *a3, char a4, double a5)
{
  uint64_t v5;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v11 = *(id *)(v5 + OBJC_IVAR___AMPLanguageAwareTextStorage_languageAwareString);
  sub_1DA64C300(a1, a2, a3, a4, a5);
  v13 = v12;

  return v13;
}

void LanguageAwareTextStorage.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LanguageAwareTextStorage.__deallocating_deinit()
{
  return sub_1DA64D018(type metadata accessor for LanguageAwareTextStorage);
}

id sub_1DA64D018(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1DA64D090()
{
  uint64_t result;

  result = sub_1DA47CDC0(1);
  qword_1EDAE4FC8 = result;
  return result;
}

uint64_t sub_1DA64D0B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1DA66F9E8();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1DF09E38C](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unint64_t sub_1DA64D128(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1DA64D0B0(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_1DA64D194(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v7 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL))
          goto LABEL_14;
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_1DA6704A4();
        v5 = v12;
        if (v12 == v10)
          goto LABEL_14;
      }
      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          v7 = v5 - 1;
          v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      v7 = v5;
      return v7 << 16;
    }
    v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v9 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v9)
      return sub_1DA67042C();
  }
  return result;
}

id sub_1DA64D2F4(void *a1, void *a2)
{
  _BYTE *v2;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  void *v9;
  _BYTE *v10;
  id v11;
  _BYTE *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  objc_super v40;
  _QWORD v41[3];
  unsigned __int8 v42;
  uint64_t v43;

  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  v5 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  v6 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v7 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  swift_beginAccess();
  v9 = (void *)qword_1EDADE968;
  if (qword_1EDADE968
    && (objc_msgSend((id)qword_1EDADE968, sel_respondsToSelector_, sel_preprocessForLanguageAwarenessAttributedString_) & 1) != 0)
  {
    v10 = v2;
    v11 = objc_msgSend(v9, sel_preprocessForLanguageAwarenessAttributedString_, a1);
  }
  else
  {
    v12 = v2;
    v11 = a1;
  }
  v13 = v11;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v11);
  v15 = v14;
  sub_1DA47FA40(v14, 0, a2, (uint64_t)v41);
  v16 = v41[0];
  v39 = v41[1];
  v17 = v41[2];
  v18 = v42;
  v19 = v43;

  if (v19)
  {
    v38 = v13;
    v20 = v16;
    v21 = *(_QWORD *)(v19 + 16);
    if (v21)
    {
      v37 = v17;
      swift_bridgeObjectRetain();
      v22 = 0;
      do
      {
        v23 = *(_QWORD *)(v19 + 8 * v22++ + 32);
        v24 = (void *)sub_1DA66F88C();
        objc_msgSend(v15, sel_replaceCharactersInRange_withString_, v23, 1, v24);

      }
      while (v21 != v22);
      swift_bridgeObjectRelease();
      v17 = v37;
    }
    swift_bridgeObjectRelease();
    v16 = v20;
    v13 = v38;
  }
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3498]), sel_initWithAttributedString_, v15);
  v26 = v25;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v25;
  if (v18)
  {
    v27 = qword_1F0268540;
    v28 = v25;
    if (v27 != -1)
      swift_once();
    v29 = qword_1F026ACC8;
    v30 = objc_retainAutorelease(v15);
    objc_msgSend(v30, sel_performSelector_, v29);
  }
  else
  {
    v30 = v25;
  }
  v31 = objc_msgSend(v30, sel_string);
  v32 = sub_1DA66F8BC();
  v34 = v33;

  v35 = (uint64_t *)&v2[OBJC_IVAR___AMPLanguageAwareString_string];
  *v35 = v32;
  v35[1] = v34;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = v39;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString_numbers] = v16;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v17;

  v40.receiver = v2;
  v40.super_class = (Class)type metadata accessor for LanguageAwareString();
  return objc_msgSendSuper2(&v40, sel_init);
}

id sub_1DA64D644(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _BYTE *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  void *v11;
  _BYTE *v12;
  void *v13;
  id v14;
  _BYTE *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;
  _QWORD v45[3];
  unsigned __int8 v46;
  uint64_t v47;

  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  v7 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  v8 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  swift_beginAccess();
  v11 = (void *)qword_1EDADE968;
  if (qword_1EDADE968)
  {
    v12 = v4;
    swift_unknownObjectRetain();
    v13 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v11, sel_preprocessForLanguageAwarenessString_, v13);

    sub_1DA66F8BC();
    swift_unknownObjectRelease();
  }
  else
  {
    v15 = v4;
  }
  v16 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  if (a3)
  {
    type metadata accessor for Key(0);
    sub_1DA5853EC();
    v17 = (void *)sub_1DA66F748();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithString_attributes_, v16, v17);

  v19 = v18;
  sub_1DA47FA40(v18, 0, a4, (uint64_t)v45);
  v20 = v45[0];
  v21 = v45[1];
  v22 = v45[2];
  v23 = v46;
  v24 = v47;

  if (v24)
  {
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v42 = v21;
      v43 = v20;
      v26 = v22;
      swift_bridgeObjectRetain();
      v27 = 0;
      do
      {
        v28 = *(_QWORD *)(v24 + 8 * v27++ + 32);
        v29 = (void *)sub_1DA66F88C();
        objc_msgSend(v19, sel_replaceCharactersInRange_withString_, v28, 1, v29);

      }
      while (v25 != v27);
      swift_bridgeObjectRelease();
      v22 = v26;
      v21 = v42;
    }
    swift_bridgeObjectRelease();
  }
  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3498]), sel_initWithAttributedString_, v19);
  v31 = v30;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v30;
  if (v23)
  {
    v32 = qword_1F0268540;
    v33 = v30;
    if (v32 != -1)
      swift_once();
    v34 = qword_1F026ACC8;
    v35 = objc_retainAutorelease(v19);
    objc_msgSend(v35, sel_performSelector_, v34);
  }
  else
  {
    v35 = v30;
  }
  v36 = objc_msgSend(v35, sel_string, v42, v43);
  v37 = sub_1DA66F8BC();
  v39 = v38;

  v40 = (uint64_t *)&v4[OBJC_IVAR___AMPLanguageAwareString_string];
  *v40 = v37;
  v40[1] = v39;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = v21;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_numbers] = v20;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v22;

  v44.receiver = v4;
  v44.super_class = (Class)type metadata accessor for LanguageAwareString();
  return objc_msgSendSuper2(&v44, sel_init);
}

id sub_1DA64DA14(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  void *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;
  _QWORD v33[2];
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;

  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  v3 = OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  v4 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  v5 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v6 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v7 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = v1;
  sub_1DA47FA40(a1, 0, 0, (uint64_t)v33);
  v9 = v33[0];
  v31 = v33[1];
  v10 = v34;
  v11 = v35;
  v12 = v36;
  if (v36)
  {
    v30 = v33[0];
    v13 = *(_QWORD *)(v36 + 16);
    if (v13)
    {
      v29 = v34;
      swift_bridgeObjectRetain();
      v14 = 0;
      do
      {
        v15 = *(_QWORD *)(v12 + 8 * v14++ + 32);
        v16 = (void *)sub_1DA66F88C();
        objc_msgSend(a1, sel_replaceCharactersInRange_withString_, v15, 1, v16);

      }
      while (v13 != v14);
      swift_bridgeObjectRelease();
      v10 = v29;
    }
    swift_bridgeObjectRelease();
    v9 = v30;
  }
  *(_QWORD *)&v8[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = a1;
  if (v11)
  {
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, a1);
    if (qword_1F0268540 != -1)
      swift_once();
    v18 = qword_1F026ACC8;
    v19 = objc_retainAutorelease(v17);
    objc_msgSend(v19, sel_performSelector_, v18);
    v20 = objc_msgSend(v19, sel_string);
    v21 = sub_1DA66F8BC();
    v23 = v22;

  }
  else
  {
    v20 = objc_msgSend(a1, sel_string);
    v21 = sub_1DA66F8BC();
    v23 = v24;
  }

  v25 = (uint64_t *)&v8[OBJC_IVAR___AMPLanguageAwareString_string];
  *v25 = v21;
  v25[1] = v23;
  v26 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = a1;
  v27 = a1;

  *(_QWORD *)&v8[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = v31;
  *(_QWORD *)&v8[OBJC_IVAR___AMPLanguageAwareString_numbers] = v9;
  *(_QWORD *)&v8[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v10;

  v32.receiver = v8;
  v32.super_class = (Class)type metadata accessor for LanguageAwareString();
  return objc_msgSendSuper2(&v32, sel_init);
}

id sub_1DA64DCF8(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void *v23;
  id v24;
  objc_super v26;

  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  v5 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  v6 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v7 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = v2;
  v10 = sub_1DA48D19C();
  v11 = v10;
  if (a2)
  {
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v10);
    type metadata accessor for Key(0);
    sub_1DA5853EC();
    v13 = (void *)sub_1DA66F748();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v11, sel_fullRange);
    objc_msgSend(v12, sel_addAttributes_range_, v13, v14, v15);

    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3498]), sel_initWithAttributedString_, v12);
  }
  else
  {
    v16 = v10;
  }
  *(_QWORD *)&v9[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v16;
  v17 = v16;
  v18 = objc_msgSend(v17, sel_string);
  v19 = sub_1DA66F8BC();
  v21 = v20;

  v22 = (uint64_t *)&v9[OBJC_IVAR___AMPLanguageAwareString_string];
  *v22 = v19;
  v22[1] = v21;
  *(_QWORD *)&v9[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = *(_QWORD *)(a1
                                                                            + OBJC_IVAR___AMPLanguageAwareString_paragraphs);
  *(_QWORD *)&v9[OBJC_IVAR___AMPLanguageAwareString_numbers] = *(_QWORD *)(a1
                                                                         + OBJC_IVAR___AMPLanguageAwareString_numbers);
  v23 = *(void **)(a1 + OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections);
  *(_QWORD *)&v9[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v23;

  v26.receiver = v9;
  v26.super_class = (Class)type metadata accessor for LanguageAwareString();
  return objc_msgSendSuper2(&v26, sel_init);
}

uint64_t type metadata accessor for LanguageAwareTextStorage()
{
  return objc_opt_self();
}

id sub_1DA64DF80@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1DA48D19C();
  *a1 = result;
  return result;
}

void sub_1DA64DFA8(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString);
}

id sub_1DA64DFB4@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1DA64A63C();
  *a1 = result;
  return result;
}

void sub_1DA64DFDC(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase);
}

id sub_1DA64DFE8@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1DA64A708();
  *a1 = result;
  return result;
}

void sub_1DA64E010(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase);
}

id sub_1DA64E01C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1DA64A8B8();
  *a1 = result;
  return result;
}

void sub_1DA64E044(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace);
}

id sub_1DA64E050@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1DA64AA98();
  *a1 = result;
  return result;
}

void sub_1DA64E078(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed);
}

void keypath_setTm(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  id v6;
  id v7;

  v5 = *a1;
  v7 = *(id *)(*a2 + *a5);
  *(_QWORD *)(*a2 + *a5) = *a1;
  v6 = v5;

}

uint64_t sub_1DA64E0BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DA64AD20();
  *a1 = result;
  a1[1] = v3;
  return result;
}

__n128 sub_1DA64E0E4(__n128 *a1, _QWORD *a2)
{
  uint64_t v2;
  __n128 result;

  v2 = *a2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange;
  result = *a1;
  *(__n128 *)v2 = *a1;
  *(_BYTE *)(v2 + 16) = 0;
  return result;
}

BOOL sub_1DA64E104@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1DA64AE14();
  *a1 = result;
  return result;
}

_BYTE *sub_1DA64E130(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty) = *result;
  return result;
}

uint64_t sub_1DA64E148@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA64AF00();
  *a1 = result;
  return result;
}

_QWORD *sub_1DA64E170(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count;
  *(_QWORD *)v2 = *result;
  *(_BYTE *)(v2 + 8) = 0;
  return result;
}

uint64_t sub_1DA64E190@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA64B02C();
  *a1 = result;
  return result;
}

_QWORD *sub_1DA64E1B8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count;
  *(_QWORD *)v2 = *result;
  *(_BYTE *)(v2 + 8) = 0;
  return result;
}

uint64_t sub_1DA64E1D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA64C218();
  *a1 = result;
  return result;
}

_QWORD *sub_1DA64E200(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection;
  *(_QWORD *)v2 = *result;
  *(_BYTE *)(v2 + 8) = 0;
  return result;
}

id sub_1DA64E220@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___AMPLanguageAwareTextStorage_textStorage);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for LanguageAwareString()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LanguageAwareString.attributedString.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of LanguageAwareString.attributedString.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedLowercase.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedLowercase.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedLowercase.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedUppercase.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedUppercase.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedUppercase.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of LanguageAwareString.newlinesCollapsedToSpace.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of LanguageAwareString.newlinesCollapsedToSpace.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of LanguageAwareString.newlinesCollapsedToSpace.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of LanguageAwareString.trimmed.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of LanguageAwareString.trimmed.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of LanguageAwareString.trimmed.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of LanguageAwareString.fullRange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of LanguageAwareString.fullRange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of LanguageAwareString.fullRange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of LanguageAwareString.isEmpty.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of LanguageAwareString.isEmpty.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of LanguageAwareString.isEmpty.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of LanguageAwareString.utf16Count.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of LanguageAwareString.utf16Count.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of LanguageAwareString.utf16Count.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of LanguageAwareString.utf32Count.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of LanguageAwareString.utf32Count.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of LanguageAwareString.utf32Count.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of LanguageAwareString.__allocating_init(_:baseParagraphStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t dispatch thunk of LanguageAwareString.__allocating_init(_:attributes:baseParagraphStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 456))();
}

uint64_t dispatch thunk of LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 464))();
}

uint64_t dispatch thunk of LanguageAwareString.__allocating_init(_:attributes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t dispatch thunk of LanguageAwareString.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 488))();
}

uint64_t dispatch thunk of LanguageAwareString.baseWritingDirection(forCharacterAt:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of LanguageAwareString.thresholdBaseWritingDirection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of LanguageAwareString.thresholdBaseWritingDirection.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of LanguageAwareString.thresholdBaseWritingDirection.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of LanguageAwareString.writingDirectionOfLine(_:maximumLinesShown:withWidth:lineBreakMode:cacheLayoutInfo:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of LanguageAwareString.writingDirectionsQuantities()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x230))();
}

uint64_t method lookup function for LanguageAwareTextStorage()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.textStorage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.textStorage(_:willProcessEditing:range:changeInLength:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.textStorage(_:didProcessEditing:range:changeInLength:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.writingDirectionsQuantities()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.writingDirectionOfLine(_:maximumLinesShown:withWidth:lineBreakMode:cacheLayoutInfo:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DirectionalRange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DirectionalRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

unint64_t ContentMode.init(contentMode:)(unint64_t result)
{
  if (result >= 0xD)
    return 13;
  return result;
}

uint64_t ContentMode.viewContentMode.getter(uint64_t result)
{
  return result;
}

id sub_1DA64E7AC@<X0>(_QWORD *a1@<X8>)
{
  objc_class *v2;
  id result;
  uint64_t v4;

  v2 = (objc_class *)sub_1DA66D7BC();
  result = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v4 = MEMORY[0x1E0D7E800];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1DA64E7F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1DA66D408();
  result = sub_1DA66D3FC();
  *a1 = result;
  return result;
}

id sub_1DA64E824@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA638998((SEL *)&selRef_defaultCenter, a1);
}

uint64_t sub_1DA64E838@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  result = sub_1DA47D774(0, (unint64_t *)&unk_1EDAE4BD0);
  v4 = MEMORY[0x1E0D7EF78];
  a1[3] = result;
  a1[4] = v4;
  *a1 = v2;
  return result;
}

id sub_1DA64E8A8@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7F280]), sel_init);
  *a1 = result;
  return result;
}

id sub_1DA64E8E0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA638998((SEL *)&selRef_defaultMediaLibrary, a1);
}

uint64_t sub_1DA64E8F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1DA66CED4();
  v3 = MEMORY[0x1E0D7DD58];
  a1[3] = v2;
  a1[4] = v3;
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DA66CEC8();
}

uint64_t sub_1DA64E934@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EDAE0190 != -1)
    swift_once();
  v2 = type metadata accessor for AssetCaches();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDAE0178);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA64E9B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EDAE0190 != -1)
    swift_once();
  v2 = type metadata accessor for AssetCaches();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDAE0178) + *(int *)(v2 + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA64EA34()
{
  return sub_1DA64EA4C((void (*)(uint64_t))MEMORY[0x1E0D7EB60]);
}

uint64_t sub_1DA64EA40()
{
  return sub_1DA64EA4C((void (*)(uint64_t))MEMORY[0x1E0D7EB68]);
}

uint64_t sub_1DA64EA4C(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1DA66DB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66DB28();
  a1(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1DA64EADC@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_1EDAE0888 != -1)
    swift_once();
  v2 = (void *)qword_1EDAE0880;
  *a1 = qword_1EDAE0880;
  return v2;
}

unint64_t sub_1DA64EB2C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  unint64_t v5;
  uint64_t v7;
  void *v8;

  sub_1DA66EE30();
  sub_1DA66EE24();
  type metadata accessor for AssetDownloaders();
  sub_1DA66EDDC();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E370);
  v0 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026E378) - 8);
  v1 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DA678FA0;
  v2 = *MEMORY[0x1E0D7E5A8];
  v3 = sub_1DA66D5C4();
  v4 = *(void (**)(void))(*(_QWORD *)(v3 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v4)(v7 + v1, v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4200);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE41F0, &qword_1EDAE4200, MEMORY[0x1E0D7E440]);
  sub_1DA66C934();
  v4();
  sub_1DA66C934();
  v4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27D0);
  sub_1DA4841D4(&qword_1EDAE4270, (uint64_t *)&unk_1EDAE27D0, MEMORY[0x1E0D7E858]);
  sub_1DA66C934();
  v4();
  sub_1DA66C934();
  v5 = sub_1DA63BF94(v7);

  return v5;
}

id sub_1DA64ED80@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  *a1 = result;
  return result;
}

uint64_t sub_1DA64EDC0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA64EEA0((void (*)(_QWORD))MEMORY[0x1E0D7E910], MEMORY[0x1E0D7E908], a1);
}

uint64_t sub_1DA64EDD4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA64EEA0((void (*)(_QWORD))MEMORY[0x1E0D7DB18], MEMORY[0x1E0D7DB10], a1);
}

uint64_t sub_1DA64EDE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1DA66D3CC();
  sub_1DA66EE30();
  sub_1DA66EE24();
  sub_1DA66CC88();
  sub_1DA66EDDC();
  sub_1DA66D408();
  sub_1DA66EDDC();
  v2 = sub_1DA66D3C0();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1DA64EE8C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA64EEA0((void (*)(_QWORD))MEMORY[0x1E0D7E960], MEMORY[0x1E0D7E958], a1);
}

uint64_t sub_1DA64EEA0@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  id v5;
  uint64_t v6;
  uint64_t result;
  id v8;

  a1(0);
  sub_1DA66EE30();
  sub_1DA66EE24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66EDDC();
  v5 = objc_msgSend(v8, sel_privateQueueContext);
  v6 = a2();
  swift_unknownObjectRelease();

  result = swift_release();
  *a3 = v6;
  return result;
}

uint64_t sub_1DA64EF68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1DA66D810();
  sub_1DA66EE30();
  sub_1DA66EE24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66EDDC();
  sub_1DA66DB94();
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_1DA66DB88();
  sub_1DA66BE60();
  v2 = sub_1DA66D804();
  swift_release();
  swift_unknownObjectRelease();
  result = swift_release();
  *a1 = v2;
  return result;
}

id sub_1DA64F038@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7F240]), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_1DA64F070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;

  v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  MEMORY[0x1E0C80A78](v46);
  v45 = (char *)&v29 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v43 = *(_QWORD *)(v1 - 8);
  v44 = v1;
  MEMORY[0x1E0C80A78](v1);
  v42 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v41 = (uint64_t)&v29 - v4;
  v47 = sub_1DA66D5C4();
  v5 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v40 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v29 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E410);
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66D5B8();
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v51 = MEMORY[0x1E0DEE9D8];
    sub_1DA50A19C(0, v13, 0);
    v34 = sub_1DA66EE30();
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE41E8);
    v32 = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
    v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v29 = v12;
    v15 = v12 + v14;
    v31 = *(_QWORD *)(v5 + 72);
    v30 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v35 = v11;
    v36 = v5;
    v16 = v47;
    v17 = (uint64_t)v40;
    v18 = v44;
    do
    {
      v49 = v13;
      v19 = v39;
      v20 = v30;
      v30(v39, (char *)v15, v16);
      v48 = &v11[*(int *)(v38 + 48)];
      v20(v11, v19, v16);
      sub_1DA66EE24();
      v20((char *)v17, v19, v16);
      v21 = v41;
      sub_1DA4EB11C(v17, v41);
      sub_1DA66EDDC();
      sub_1DA4841D4((unint64_t *)&qword_1EDAE4160, &qword_1EDAE4170, MEMORY[0x1E0D7DC20]);
      sub_1DA66C934();
      sub_1DA66EDDC();
      sub_1DA66FE44();
      v22 = v36;
      sub_1DA66DA5C();
      swift_release();
      v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v23(v17, v16);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v21, v18);
      v23((uint64_t)v19, v16);
      v24 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA50A19C(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v24 = v51;
      }
      v26 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)(v24 + 24);
      v11 = v35;
      if (v26 >= v25 >> 1)
      {
        sub_1DA50A19C(v25 > 1, v26 + 1, 1);
        v24 = v51;
      }
      *(_QWORD *)(v24 + 16) = v26 + 1;
      sub_1DA650238((uint64_t)v11, v24+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v26);
      v15 += v31;
      v13 = v49 - 1;
    }
    while (v49 != 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v27 = sub_1DA518090(v24);
  swift_bridgeObjectRelease();
  v50 = v27;
  sub_1DA66DA68();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E420);
  sub_1DA650280();
  sub_1DA4841D4(&qword_1F026E428, &qword_1F026E420, MEMORY[0x1E0DEAF38]);
  return sub_1DA66F778();
}

uint64_t sub_1DA64F504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v6[2];

  v0 = sub_1DA66FDF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66EE30();
  sub_1DA66EE24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66EDDC();
  v4 = objc_msgSend(v6[1], sel_importContext);
  swift_unknownObjectRelease();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  sub_1DA66FE5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0D7EF98], v0);
  sub_1DA4EAF00((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DA66D9D8();
  return swift_release();
}

char *_s18PodcastsFoundation12DependenciesO0A2UIE03allC09JetEngine15BaseObjectGraphCyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _OWORD *v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  _QWORD v73[2];
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;

  v84 = sub_1DA66EBD8();
  v96 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v80 = (char *)v73 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v83 = (char *)v73 - v2;
  MEMORY[0x1E0C80A78](v3);
  v79 = (char *)v73 - v4;
  MEMORY[0x1E0C80A78](v5);
  v78 = (char *)v73 - v6;
  MEMORY[0x1E0C80A78](v7);
  v77 = (char *)v73 - v8;
  MEMORY[0x1E0C80A78](v9);
  v76 = (char *)v73 - v10;
  MEMORY[0x1E0C80A78](v11);
  v82 = (char *)v73 - v12;
  MEMORY[0x1E0C80A78](v13);
  v81 = (char *)v73 - v14;
  MEMORY[0x1E0C80A78](v15);
  v75 = (char *)v73 - v16;
  MEMORY[0x1E0C80A78](v17);
  v95 = (char *)v73 - v18;
  MEMORY[0x1E0C80A78](v19);
  v100 = (char *)v73 - v20;
  MEMORY[0x1E0C80A78](v21);
  v99 = (char *)v73 - v22;
  MEMORY[0x1E0C80A78](v23);
  v98 = (char *)v73 - v24;
  MEMORY[0x1E0C80A78](v25);
  v97 = (char *)v73 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v73 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v73 - v31;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)v73 - v34;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v73 - v37;
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)v73 - v40;
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)v73 - v43;
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)v73 - v46;
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)v73 - v49;
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)v73 - v52;
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)v73 - v55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
  v85 = v56;
  sub_1DA66EBC0();
  sub_1DA66D408();
  v86 = v53;
  sub_1DA66EBC0();
  sub_1DA47D774(0, &qword_1EDAE2890);
  v87 = v50;
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4120);
  v88 = v47;
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C20);
  v89 = v44;
  sub_1DA66EBC0();
  sub_1DA47D774(0, &qword_1EDAE4BE0);
  v90 = v41;
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3C18);
  v91 = v38;
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3C10);
  v92 = v35;
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE41E8);
  v93 = v32;
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  v94 = v29;
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4100);
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40D8);
  sub_1DA66EBC0();
  type metadata accessor for AssetDownloaders();
  sub_1DA66EBC0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3BF0);
  sub_1DA66EBC0();
  v57 = &unk_1DA678000;
  if (objc_msgSend((id)objc_opt_self(), sel_supportsLocalLibrary))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
    v58 = v75;
    sub_1DA66EBC0();
    sub_1DA66D8D0();
    sub_1DA66EBC0();
    sub_1DA66CC88();
    sub_1DA66EBC0();
    sub_1DA66D3CC();
    sub_1DA66EBC0();
    sub_1DA66D924();
    sub_1DA66EBC0();
    sub_1DA66D810();
    sub_1DA66EBC0();
    sub_1DA47D774(0, (unint64_t *)&unk_1EDAE0040);
    sub_1DA66EBC0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3C00);
    sub_1DA66EBC0();
    sub_1DA66D9E4();
    sub_1DA66EBC0();
    v73[1] = sub_1DA66EE30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D48);
    v59 = v96;
    v60 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
    v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_1DA678510;
    v62 = v58;
    v63 = v84;
    (*(void (**)(unint64_t, char *, uint64_t))(v59 + 16))(v61 + v60, v62, v84);
    sub_1DA66EE00();
    sub_1DA66EE0C();
    sub_1DA66EE0C();
    sub_1DA66EE0C();
    sub_1DA66EE0C();
    sub_1DA66EE0C();
    sub_1DA66EE0C();
    sub_1DA66EE0C();
    v64 = v80;
    v74 = sub_1DA66EE0C();
    swift_release();
    v57 = (_OWORD *)&unk_1DA678000;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v65 = *(void (**)(char *, uint64_t))(v96 + 8);
    v65(v64, v63);
    v65(v83, v63);
    v65(v79, v63);
    v65(v78, v63);
    v65(v77, v63);
    v65(v76, v63);
    v65(v82, v63);
    v65(v81, v63);
    v65(v75, v63);
  }
  else
  {
    sub_1DA66EE30();
    v74 = sub_1DA66EE00();
  }
  sub_1DA66EE30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D48);
  v66 = v96;
  v67 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = v57[81];
  v69 = v84;
  (*(void (**)(unint64_t, char *, uint64_t))(v66 + 16))(v68 + v67, v85, v84);
  v82 = (char *)sub_1DA66EE00();
  v81 = (char *)sub_1DA66EE0C();
  v80 = (char *)sub_1DA66EE0C();
  v79 = (char *)sub_1DA66EE0C();
  v78 = (char *)sub_1DA66EE0C();
  v77 = (char *)sub_1DA66EE0C();
  v76 = (char *)sub_1DA66EE0C();
  v75 = (char *)sub_1DA66EE0C();
  sub_1DA66EE0C();
  sub_1DA66EE0C();
  sub_1DA66EE0C();
  sub_1DA66EE0C();
  sub_1DA66EE0C();
  sub_1DA66EE0C();
  v70 = v95;
  sub_1DA66EE0C();
  v83 = (char *)sub_1DA66EE18();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v71 = *(void (**)(char *, uint64_t))(v96 + 8);
  v71(v70, v69);
  v71(v100, v69);
  v71(v99, v69);
  v71(v98, v69);
  v71(v97, v69);
  v71(v94, v69);
  v71(v93, v69);
  v71(v92, v69);
  v71(v91, v69);
  v71(v90, v69);
  v71(v89, v69);
  v71(v88, v69);
  v71(v87, v69);
  v71(v86, v69);
  v71(v85, v69);
  return v83;
}

uint64_t sub_1DA650238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DA650280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026E390;
  if (!qword_1F026E390)
  {
    v1 = sub_1DA66D5C4();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7E5E0], v1);
    atomic_store(result, (unint64_t *)&qword_1F026E390);
  }
  return result;
}

UIImage_optional __swiftcall ArtworkContent.image()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  Swift::Bool v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  objc_class *v22;
  uint64_t v23;
  UIImage_optional result;

  v1 = v0;
  v2 = sub_1DA66C358();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66CDA8();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA5E9AC0(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_1DA66C328();
    v10 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v9, sel_contentsAtPath_, v10);

    if (v11)
    {
      v12 = sub_1DA66C394();
      v14 = v13;

      v15 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
      v16 = (void *)sub_1DA66C37C();
      v11 = objc_msgSend(v15, sel_initWithData_, v16);
      sub_1DA4986F8(v12, v14);

    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v18 = *v8;
    v19 = v8[1];
    v20 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
    v21 = (void *)sub_1DA66C37C();
    v11 = objc_msgSend(v20, sel_initWithData_, v21);
    sub_1DA4986F8(v18, v19);

  }
  v22 = (objc_class *)v11;
  result.value.super.isa = v22;
  result.is_nil = v17;
  return result;
}

char *sub_1DA6504CC(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v6 + 16) & ~(unint64_t)v6];
    sub_1DA66BE60();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = sub_1DA66ED28();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = *a2;
      v9 = v8;
      *(_QWORD *)a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

void sub_1DA6505AC(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v3 = sub_1DA66ED28();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (EnumCaseMultiPayload == 1)
  {

  }
}

_QWORD *sub_1DA650610(_QWORD *a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v9 = sub_1DA66ED28();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = *a2;
    v8 = v7;
    *a1 = v7;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void **sub_1DA6506C8(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1DA650790((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = sub_1DA66ED28();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = *a2;
      v8 = v7;
      *a1 = v7;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DA650790(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1DA6507CC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_1DA66ED28();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1DA650858(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1DA650790((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_1DA66ED28();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

id *sub_1DA6508F4(id *a1, id *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  id v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = (char *)*a2;
    *a1 = *a2;
    a1 = (id *)&v11[(v5 + 16) & ~(unint64_t)v5];
    sub_1DA66BE60();
  }
  else
  {
    v7 = type metadata accessor for PageRenderState.PrimaryDataState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = sub_1DA66ED28();
      (*(void (**)(id *, id *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = *a2;
      v10 = *a2;
      *a1 = v9;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v13 = *(int *)(a3 + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  }
  return a1;
}

id *sub_1DA650A08(id *a1, id *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  if (a1 != a2)
  {
    sub_1DA650790((uint64_t)a1);
    v6 = type metadata accessor for PageRenderState.PrimaryDataState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_1DA66ED28();
      (*(void (**)(id *, id *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = *a2;
      v9 = *a2;
      *a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v11 = *(int *)(a3 + 20);
  v12 = (id *)((char *)a1 + v11);
  v13 = (id *)((char *)a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  return a1;
}

char *sub_1DA650B08(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  v6 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_1DA66ED28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
  return a1;
}

char *sub_1DA650BBC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  if (a1 != a2)
  {
    sub_1DA650790((uint64_t)a1);
    v6 = type metadata accessor for PageRenderState.PrimaryDataState(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_1DA66ED28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
  return a1;
}

uint64_t sub_1DA650C80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA650C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DA650CC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA650CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DA650D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1DA66F6A0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66F6B8();
  __swift_allocate_value_buffer(v4, qword_1EDAE0720);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EDAE0720);
  if (qword_1EDADFFC8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDADEDC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_1DA66F6AC();
}

uint64_t sub_1DA650E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;

  v6 = sub_1DA66EC74();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1DA66F6B8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDAE0740 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v7, (uint64_t)qword_1EDAE0720);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
  sub_1DA66EC8C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
  sub_1DA66EC68();
  sub_1DA66EC5C();
  v12 = MEMORY[0x1E0DEBB98];
  v15 = MEMORY[0x1E0DEBB98];
  v14[0] = a1;
  sub_1DA66EC44();
  sub_1DA480E84((uint64_t)v14);
  sub_1DA66EC5C();
  v15 = v12;
  v14[0] = a2;
  sub_1DA66EC44();
  sub_1DA480E84((uint64_t)v14);
  sub_1DA66EC5C();
  v15 = v12;
  v14[0] = a3;
  sub_1DA66EC44();
  sub_1DA480E84((uint64_t)v14);
  sub_1DA66EC5C();
  sub_1DA66EC80();
  sub_1DA66F544();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1DA65106C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *v0;
  if (*v0)
  {
    v2 = v1 - 1;
    *v0 = v1 - 1;
    v3 = v0[1];
    v4 = v3 + 1;
    if (v3 != -1)
    {
      v0[1] = v4;
      return sub_1DA650E14(v2, v4, v0[2]);
    }
    __break(1u);
    goto LABEL_7;
  }
  if (qword_1EDAE0740 != -1)
LABEL_7:
    swift_once();
  v6 = sub_1DA66F6B8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EDAE0720);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
  sub_1DA66EC8C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
  sub_1DA66EC38();
  sub_1DA66F550();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA65118C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *v0;
  if (*v0)
  {
    v2 = v1 - 1;
    *v0 = v1 - 1;
    v3 = v0[2];
    v4 = v3 + 1;
    if (v3 != -1)
    {
      v0[2] = v4;
      return sub_1DA650E14(v2, v0[1], v4);
    }
    __break(1u);
    goto LABEL_7;
  }
  if (qword_1EDAE0740 != -1)
LABEL_7:
    swift_once();
  v6 = sub_1DA66F6B8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EDAE0720);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
  sub_1DA66EC8C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
  sub_1DA66EC38();
  sub_1DA66F550();
  return swift_bridgeObjectRelease();
}

void sub_1DA6512AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = a2;
  v11 = sub_1DA66ED28();
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v3);
  v12 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for PageRenderActivity();
  MEMORY[0x1E0C80A78](v7);
  sub_1DA484504(a1, (uint64_t)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v10 = (char *)&loc_1DA651418 + dword_1DA651804[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DA651428()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char v3;
  _BYTE *v4;
  int EnumCaseMultiPayload;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *v1;
  v4 = *(_BYTE **)(v2 - 96);
  sub_1DA484504((uint64_t)v4, v0, type metadata accessor for PageRenderState.PrimaryDataState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1DA650790(v0);
  if (EnumCaseMultiPayload == 3)
  {
    sub_1DA650790((uint64_t)v4);
    *v4 = v3;
    swift_storeEnumTagMultiPayload();
    v6 = *(_BYTE **)(v2 - 88);
    *v6 = v3;
    v7 = *MEMORY[0x1E0D40BD0];
    v8 = sub_1DA66F388();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
    v9 = _s8ActivityOMa();
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 0, 1, v9);
  }
  else
  {
    v11 = _s8ActivityOMa();
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(*(_QWORD *)(v2 - 88), 1, 1, v11);
  }
}

void sub_1DA651824(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1DA6512AC(a1, a2);
}

ValueMetadata *type metadata accessor for PageRenderState.ResourceCounter()
{
  return &type metadata for PageRenderState.ResourceCounter;
}

uint64_t LibraryStorageTipSuggestedLimitIntent.init(globalLimit:supportedLimits:storageUsed:storageAvailable:previousIgnoredStorage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  int *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);

  *(_QWORD *)a6 = a1;
  *((_QWORD *)a6 + 1) = a2;
  v10 = (int *)type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  v11 = &a6[v10[6]];
  v12 = sub_1DA66CBE0();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v11, a3, v12);
  v13(&a6[v10[7]], a4, v12);
  return sub_1DA651938(a5, (uint64_t)&a6[v10[8]]);
}

uint64_t type metadata accessor for LibraryStorageTipSuggestedLimitIntent()
{
  uint64_t result;

  result = qword_1EDAE3FD0;
  if (!qword_1EDAE3FD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA651938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA651980(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;

  v5 = (void *)((unint64_t)a1 >> 62);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRetain();
    v23 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
    if (v6 == v23)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  v7 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_35;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v24 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_41:
    result = MEMORY[0x1DF09EE48](0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v5 = (void *)result;
  v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_43:
    v13 = (id)MEMORY[0x1DF09EE48](0, a2);
LABEL_21:
    v14 = v13;
    sub_1DA6538B0();
    v15 = sub_1DA6701A4();

    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v21 = i - 4;
        if (v24)
        {
          v22 = (id)MEMORY[0x1DF09EE48](i - 4, a1);
          if (v2)
            goto LABEL_23;
        }
        else
        {
          if (v21 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          v22 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_23:
            v18 = (id)MEMORY[0x1DF09EE48](i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v21 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_39;
        v18 = *(id *)(a2 + 8 * i);
LABEL_24:
        v19 = v18;
        v20 = sub_1DA6701A4();

        if ((v20 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

BOOL sub_1DA651BF8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = a1 + 5;
  v6 = a2 + 5;
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

unint64_t static LibraryStorageTipSuggestedLimitIntent.kind.getter()
{
  return 0xD000000000000025;
}

uint64_t LibraryStorageTipSuggestedLimitIntent.globalLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t LibraryStorageTipSuggestedLimitIntent.supportedLimits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibraryStorageTipSuggestedLimitIntent.storageUsed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LibraryStorageTipSuggestedLimitIntent() + 24);
  v4 = sub_1DA66CBE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LibraryStorageTipSuggestedLimitIntent.storageAvailable.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LibraryStorageTipSuggestedLimitIntent() + 28);
  v4 = sub_1DA66CBE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LibraryStorageTipSuggestedLimitIntent.previousIgnoredStorage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LibraryStorageTipSuggestedLimitIntent() + 32);
  return sub_1DA651D58(v3, a1);
}

uint64_t sub_1DA651D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA651DA4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DA651DE0 + 4 * byte_1DA685B10[a1]))(0x694C6C61626F6C67, 0xEB0000000074696DLL);
}

uint64_t sub_1DA651DE0()
{
  return 0x6574726F70707573;
}

uint64_t sub_1DA651E04()
{
  return 0x55656761726F7473;
}

unint64_t sub_1DA651E24()
{
  return 0xD000000000000010;
}

unint64_t sub_1DA651E40()
{
  return 0xD000000000000016;
}

uint64_t sub_1DA651E60()
{
  unsigned __int8 *v0;

  return sub_1DA651DA4(*v0);
}

uint64_t sub_1DA651E68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DA65364C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DA651E8C()
{
  sub_1DA6529C8();
  return sub_1DA670810();
}

uint64_t sub_1DA651EB4()
{
  sub_1DA6529C8();
  return sub_1DA67081C();
}

uint64_t LibraryStorageTipSuggestedLimitIntent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA6529C8();
  sub_1DA670804();
  v12 = *v3;
  v11 = 0;
  type metadata accessor for MTPodcastEpisodeLimit(0);
  sub_1DA47E32C(&qword_1EDAE2898, (uint64_t (*)(uint64_t))type metadata accessor for MTPodcastEpisodeLimit, MEMORY[0x1E0D7F0C8]);
  sub_1DA670660();
  if (!v2)
  {
    v12 = v3[1];
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B58);
    sub_1DA652A0C(&qword_1EDAE4B60, &qword_1EDAE2898, MEMORY[0x1E0D7F0C8], MEMORY[0x1E0DEAF10]);
    sub_1DA670660();
    type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
    LOBYTE(v12) = 2;
    sub_1DA66CBE0();
    sub_1DA47E32C(&qword_1EDAE4128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DA28], MEMORY[0x1E0D7DA38]);
    sub_1DA670660();
    LOBYTE(v12) = 3;
    sub_1DA670660();
    LOBYTE(v12) = 4;
    sub_1DA67063C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t LibraryStorageTipSuggestedLimitIntent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  _QWORD v30[2];
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  char v40;
  uint64_t v41;

  v32 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1DA66CBE0();
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v30 - v8;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E7F0);
  v10 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1DA6529C8();
  v37 = v12;
  v17 = v39;
  sub_1DA6707EC();
  if (v17)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  v39 = v9;
  v31 = v6;
  v18 = v10;
  v19 = v36;
  v20 = v34;
  type metadata accessor for MTPodcastEpisodeLimit(0);
  v40 = 0;
  sub_1DA47E32C(&qword_1EDAE28A0, (uint64_t (*)(uint64_t))type metadata accessor for MTPodcastEpisodeLimit, MEMORY[0x1E0D7F0D0]);
  v21 = v35;
  sub_1DA670630();
  *(_QWORD *)v15 = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B58);
  v40 = 1;
  sub_1DA652A0C(&qword_1F026E7F8, &qword_1EDAE28A0, MEMORY[0x1E0D7F0D0], MEMORY[0x1E0DEAF40]);
  sub_1DA670630();
  *((_QWORD *)v15 + 1) = v41;
  LOBYTE(v41) = 2;
  v22 = sub_1DA47E32C(&qword_1F026AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DA28], MEMORY[0x1E0D7DA48]);
  v23 = v39;
  v30[1] = v22;
  sub_1DA670630();
  v24 = v23;
  v25 = v13;
  v26 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v26(&v15[*(int *)(v13 + 24)], v24, v20);
  LOBYTE(v41) = 3;
  v27 = v31;
  v39 = 0;
  sub_1DA670630();
  v26(&v15[*(int *)(v25 + 28)], v27, v20);
  LOBYTE(v41) = 4;
  v28 = (uint64_t)v33;
  sub_1DA67060C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v37, v21);
  sub_1DA651938(v28, (uint64_t)&v15[*(int *)(v25 + 32)]);
  sub_1DA652A90((uint64_t)v15, v32);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  return sub_1DA652AD4((uint64_t)v15);
}

uint64_t sub_1DA6525D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryStorageTipSuggestedLimitIntent.init(from:)(a1, a2);
}

uint64_t sub_1DA6525E4(_QWORD *a1)
{
  return LibraryStorageTipSuggestedLimitIntent.encode(to:)(a1);
}

void sub_1DA6525FC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000025;
  a1[1] = 0x80000001DA685B00;
}

uint64_t sub_1DA65261C()
{
  sub_1DA47E32C(&qword_1EDAE3FC8, (uint64_t (*)(uint64_t))type metadata accessor for LibraryStorageTipSuggestedLimitIntent, (uint64_t)&protocol conformance descriptor for LibraryStorageTipSuggestedLimitIntent);
  return sub_1DA66F2F8();
}

BOOL _s10PodcastsUI37LibraryStorageTipSuggestedLimitIntentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v4 = sub_1DA66CBE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E818);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v28 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v28 - v18;
  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  if (!sub_1DA651BF8(*(_QWORD **)(a1 + 8), *(_QWORD **)(a2 + 8)))
    return 0;
  v29 = v10;
  v20 = type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  if ((sub_1DA66CBB0() & 1) == 0 || (sub_1DA66CBB0() & 1) == 0)
    return 0;
  sub_1DA651D58(a1 + *(int *)(v20 + 32), (uint64_t)v19);
  sub_1DA651D58(a2 + *(int *)(v20 + 32), (uint64_t)v16);
  v21 = *(int *)(v8 + 48);
  v22 = (uint64_t)v29;
  v23 = (uint64_t)&v29[v21];
  sub_1DA651D58((uint64_t)v19, (uint64_t)v29);
  sub_1DA651D58((uint64_t)v16, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24(v22, 1, v4) == 1)
  {
    sub_1DA47E2F0((uint64_t)v16, &qword_1EDAE4130);
    sub_1DA47E2F0((uint64_t)v19, &qword_1EDAE4130);
    if (v24(v23, 1, v4) == 1)
    {
      sub_1DA47E2F0(v22, &qword_1EDAE4130);
      return 1;
    }
    goto LABEL_10;
  }
  sub_1DA651D58(v22, (uint64_t)v13);
  if (v24(v23, 1, v4) == 1)
  {
    sub_1DA47E2F0((uint64_t)v16, &qword_1EDAE4130);
    sub_1DA47E2F0((uint64_t)v19, &qword_1EDAE4130);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_10:
    sub_1DA47E2F0(v22, &qword_1F026E818);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v23, v4);
  sub_1DA47E32C(&qword_1F026E820, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DA28], MEMORY[0x1E0D7DA40]);
  v25 = sub_1DA66F850();
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v7, v4);
  sub_1DA47E2F0((uint64_t)v16, &qword_1EDAE4130);
  sub_1DA47E2F0((uint64_t)v19, &qword_1EDAE4130);
  v26(v13, v4);
  sub_1DA47E2F0(v22, &qword_1EDAE4130);
  return (v25 & 1) != 0;
}

unint64_t sub_1DA6529C8()
{
  unint64_t result;

  result = qword_1EDAE3FA0;
  if (!qword_1EDAE3FA0)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA685D70, &type metadata for LibraryStorageTipSuggestedLimitIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDAE3FA0);
  }
  return result;
}

uint64_t sub_1DA652A0C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE4B58);
    v10 = sub_1DA47E32C(a2, (uint64_t (*)(uint64_t))type metadata accessor for MTPodcastEpisodeLimit, a3);
    result = MEMORY[0x1DF0A039C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA652A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA652AD4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA652B10()
{
  return sub_1DA47E32C(&qword_1F026E800, (uint64_t (*)(uint64_t))type metadata accessor for LibraryStorageTipSuggestedLimitIntent, (uint64_t)&protocol conformance descriptor for LibraryStorageTipSuggestedLimitIntent);
}

uint64_t sub_1DA652B3C()
{
  return sub_1DA47E32C((unint64_t *)&qword_1EDAE3FC0, (uint64_t (*)(uint64_t))type metadata accessor for LibraryStorageTipSuggestedLimitIntent, (uint64_t)&protocol conformance descriptor for LibraryStorageTipSuggestedLimitIntent);
}

unint64_t sub_1DA652B6C()
{
  unint64_t result;

  result = qword_1F026E808;
  if (!qword_1F026E808)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for EpisodeLimitSuggestion, &type metadata for EpisodeLimitSuggestion);
    atomic_store(result, (unint64_t *)&qword_1F026E808);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for LibraryStorageTipSuggestedLimitIntent(uint64_t *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DA66CBE0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v13(&v4[a3[7]], (char *)a2 + a3[7], v11);
    v14 = a3[8];
    v15 = &v4[v14];
    v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t destroy for LibraryStorageTipSuggestedLimitIntent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_1DA66CBE0();
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  v9(a1 + a2[7], v5);
  v7 = a1 + a2[8];
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  return result;
}

char *initializeWithCopy for LibraryStorageTipSuggestedLimitIntent(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[6];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1DA66CBE0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  v13 = a3[8];
  v14 = &a1[v13];
  v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  return a1;
}

char *assignWithCopy for LibraryStorageTipSuggestedLimitIntent(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1DA66CBE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  v12 = a3[8];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v15(&a1[v12], 1, v9);
  v16 = v15(v14, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  return a1;
}

char *initializeWithTake for LibraryStorageTipSuggestedLimitIntent(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1DA66CBE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  v12 = a3[8];
  v13 = &a1[v12];
  v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for LibraryStorageTipSuggestedLimitIntent(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1DA66CBE0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  v13 = a3[8];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v16(&a1[v13], 1, v10);
  v17 = v16(v15, 1, v10);
  if (!(_DWORD)v8)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryStorageTipSuggestedLimitIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA653264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DA66CBE0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryStorageTipSuggestedLimitIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA653314(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1DA66CBE0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1DA6533B4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DA66CBE0();
  if (v0 <= 0x3F)
  {
    sub_1DA653454();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1DA653454()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE4138)
  {
    sub_1DA66CBE0();
    v0 = sub_1DA670294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE4138);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryStorageTipSuggestedLimitIntent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DA6534F4 + 4 * byte_1DA685B1A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DA653528 + 4 * byte_1DA685B15[v4]))();
}

uint64_t sub_1DA653528(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA653530(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA653538);
  return result;
}

uint64_t sub_1DA653544(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA65354CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DA653550(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA653558(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryStorageTipSuggestedLimitIntent.CodingKeys()
{
  return &type metadata for LibraryStorageTipSuggestedLimitIntent.CodingKeys;
}

unint64_t sub_1DA653578()
{
  unint64_t result;

  result = qword_1F026E810;
  if (!qword_1F026E810)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA685D48, &type metadata for LibraryStorageTipSuggestedLimitIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026E810);
  }
  return result;
}

unint64_t sub_1DA6535C0()
{
  unint64_t result;

  result = qword_1EDAE3FB0;
  if (!qword_1EDAE3FB0)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA685CB8, &type metadata for LibraryStorageTipSuggestedLimitIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDAE3FB0);
  }
  return result;
}

unint64_t sub_1DA653608()
{
  unint64_t result;

  result = qword_1EDAE3FA8;
  if (!qword_1EDAE3FA8)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA685CE0, &type metadata for LibraryStorageTipSuggestedLimitIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDAE3FA8);
  }
  return result;
}

uint64_t sub_1DA65364C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x694C6C61626F6C67 && a2 == 0xEB0000000074696DLL;
  if (v2 || (sub_1DA6706D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574726F70707573 && a2 == 0xEF7374696D694C64 || (sub_1DA6706D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x55656761726F7473 && a2 == 0xEB00000000646573 || (sub_1DA6706D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DA691BB0 || (sub_1DA6706D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DA691BD0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DA6706D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_1DA6538B0()
{
  unint64_t result;

  result = qword_1EDAE25C8;
  if (!qword_1EDAE25C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDAE25C8);
  }
  return result;
}

unint64_t static FetchChannelForPodcastIntent.kind.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t FetchChannelForPodcastIntent.podcastAdamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FetchChannelForPodcastIntent.init(podcastAdamID:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_1DA653918(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x80000001DA685DA0;
}

ValueMetadata *type metadata accessor for FetchChannelForPodcastIntent()
{
  return &type metadata for FetchChannelForPodcastIntent;
}

ValueMetadata *type metadata accessor for NowPlayingArtwork()
{
  return &type metadata for NowPlayingArtwork;
}

void sub_1DA653958(uint64_t a1, void *a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  void (*v19)(double, double, double, double, double, double, double, double);
  id v20;

  v19 = *(void (**)(double, double, double, double, double, double, double, double))(a1 + 32);
  sub_1DA66BE60();
  v20 = a2;
  v19(a3, a4, a5, a6, a7, a8, a9, a10);
  swift_release();

}

void NSTextStorage.writingDirectionOfLine(_:layoutManager:textContainer:)(uint64_t a1, void *a2, _QWORD *a3)
{
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  void *v8;
  id v9;
  _QWORD *v10;
  id v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD aBlock[5];
  _QWORD *v37;

  v4 = (uint64_t)v3;
  v5 = a3;
  v6 = a2;
  if (!a2)
  {
    v11 = objc_msgSend(v3, sel_layoutManagers);
    sub_1DA47D774(0, &qword_1F026E780);
    v12 = sub_1DA66FA9C();

    if (v12 >> 62)
      goto LABEL_24;
    if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_25;
    goto LABEL_6;
  }
  v8 = a2;
  if (!a3)
    goto LABEL_10;
LABEL_3:
  v9 = v6;
  v10 = v5;
  while (1)
  {
    v18 = v5;
    v34 = v10;
    objc_msgSend(v8, sel_ensureLayoutForTextContainer_, v10);
    v19 = objc_msgSend((id)v4, sel_fullRange);
    v35 = objc_msgSend(v8, sel_glyphRangeForCharacterRange_actualCharacterRange_, v19, v20, 0);
    v22 = v21;
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = 0;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = sub_1DA66C034();
    v24 = (_QWORD *)(v23 + 16);
    *(_QWORD *)(v23 + 24) = 0;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    *(_BYTE *)(v4 + 32) = 1;
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v5;
    v25[3] = a1;
    v25[4] = v23;
    v25[5] = v8;
    v25[6] = v4;
    aBlock[4] = sub_1DA654048;
    v37 = v25;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA653958;
    aBlock[3] = &block_descriptor_30;
    v26 = _Block_copy(aBlock);
    v6 = v37;
    sub_1DA66BE60();
    sub_1DA66BE60();
    v27 = v8;
    sub_1DA66BE60();
    swift_release();
    objc_msgSend(v27, sel_enumerateLineFragmentsForGlyphRange_usingBlock_, v35, v22, v26);
    _Block_release(v26);
    if (a1 == -1)
    {
      swift_beginAccess();
      if ((*(_BYTE *)(v4 + 32) & 1) == 0)
      {
        v28 = objc_msgSend(v27, sel_characterRangeForGlyphRange_actualGlyphRange_, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), 0);
        v30 = v29;
        swift_beginAccess();
        *(_QWORD *)(v23 + 16) = v28;
        *(_QWORD *)(v23 + 24) = v30;
      }
    }
    v12 = sub_1DA66C034();
    swift_beginAccess();
    if (v12 == *v24)
    {
      swift_release();
      swift_release();
      swift_release();

      return;
    }
    v31 = *(_QWORD *)(v23 + 24) + *v24;
    if (!__OFSUB__(v31, 1))
    {
      NSAttributedString.strongBaseWritingDirectionOfParagraph(atOrBefore:)(v31 - 1);
      swift_release();
      swift_release();
      swift_release();

      return;
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    v32 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
    if (!v32)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_26;
    }
LABEL_6:
    if ((v12 & 0xC000000000000001) == 0)
      break;
LABEL_26:
    v13 = (id)MEMORY[0x1DF09EE48](0, v12);
LABEL_9:
    v8 = v13;
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
LABEL_10:
    v14 = v6;
    v15 = objc_msgSend(v8, sel_textContainers);
    sub_1DA47D774(0, &qword_1F026E788);
    v16 = sub_1DA66FA9C();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      v33 = sub_1DA6705A0();
      swift_bridgeObjectRelease();
      if (!v33)
      {
LABEL_28:
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_29:
        v17 = (_QWORD *)MEMORY[0x1DF09EE48](0, v16);
        goto LABEL_15;
      }
    }
    else if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_28;
    }
    if ((v16 & 0xC000000000000001) != 0)
      goto LABEL_29;
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_31;
    v17 = *(id *)(v16 + 32);
LABEL_15:
    v10 = v17;
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v12 + 32);
    goto LABEL_9;
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

uint64_t sub_1DA653EB4()
{
  return swift_deallocObject();
}

uint64_t sub_1DA653EC4()
{
  return swift_deallocObject();
}

uint64_t sub_1DA653ED4()
{
  return swift_deallocObject();
}

void sub_1DA653EE4(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, uint64_t a9, uint64_t a10, uint64_t a11, _BYTE *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  CGRect v28;

  v28.size.height = a8;
  v28.size.width = a7;
  v28.origin.y = a6;
  v28.origin.x = a5;
  if (CGRectGetHeight(v28) != 0.0)
  {
    v24 = (_QWORD *)(a13 + 16);
    swift_beginAccess();
    if (*v24 == a14)
    {
      v25 = objc_msgSend(a16, sel_characterRangeForGlyphRange_actualGlyphRange_, a10, a11, 0);
      v27 = v26;
      swift_beginAccess();
      *(_QWORD *)(a15 + 16) = v25;
      *(_QWORD *)(a15 + 24) = v27;
      *a12 = 1;
    }
    else
    {
      swift_beginAccess();
      if (__OFADD__(*v24, 1))
      {
        __break(1u);
      }
      else
      {
        ++*v24;
        swift_beginAccess();
        *(_QWORD *)(a17 + 16) = a10;
        *(_QWORD *)(a17 + 24) = a11;
        *(_BYTE *)(a17 + 32) = 0;
      }
    }
  }
}

uint64_t sub_1DA65400C()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1DA654048(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, double a5, double a6, double a7, double a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12)
{
  uint64_t v12;

  sub_1DA653EE4(a5, a6, a7, a8, a9, a10, a11, a12, a1, a2, a3, a4, *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(void **)(v12 + 40), *(_QWORD *)(v12 + 48));
}

uint64_t sub_1DA654074(void *a1, uint64_t a2, uint64_t a3, void *a4, _QWORD *a5)
{
  id v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v9 = a4;
  v10 = a5;
  v11 = a1;
  NSTextStorage.writingDirectionOfLine(_:layoutManager:textContainer:)(a3, a4, a5);
  v13 = v12;

  return v13;
}

uint64_t StorageAnalyticsResponder.init(asPartOf:)()
{
  sub_1DA66D660();
  sub_1DA66EDDC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C20);
  sub_1DA66EDDC();
  sub_1DA66DA08();
  return swift_release();
}

uint64_t sub_1DA654164(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = sub_1DA66CEBC();
  v3 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v14 = v1;
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1DA509F18(0, v6, 0);
    v7 = v16;
    v8 = *(_QWORD *)(sub_1DA66CA0C() - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    do
    {
      ArtworkModel.preferredRequest.getter((uint64_t)v5);
      v16 = v7;
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1DA509F18(v11 > 1, v12 + 1, 1);
        v7 = v16;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v12, v5, v15);
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t ArtworkModel.init(composite:width:height:backgroundColor:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(_QWORD, _QWORD, _QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(_QWORD, _QWORD, _QWORD);
  uint64_t v33;
  char *v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[25];

  v38 = a4;
  v7 = sub_1DA66C928();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - v17;
  v19 = sub_1DA654164(a1);
  swift_bridgeObjectRelease();
  sub_1DA66C07C();
  swift_allocObject();
  sub_1DA66C070();
  *(_QWORD *)&v39 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E4B8);
  sub_1DA654740();
  v20 = sub_1DA66C064();
  v22 = v21;
  v36 = v9;
  v37 = v20;
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DA66C9D0();
  sub_1DA66C334();
  swift_bridgeObjectRelease();
  v23 = sub_1DA66C358();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v24 + 48);
  if (v25(v15, 1, v23) == 1)
  {
    sub_1DA47E2F0((uint64_t)v15, &qword_1EDAE5020);
    v26 = 1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A828);
    v32 = v25;
    sub_1DA66C10C();
    v33 = v24;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
    sub_1DA66C9DC();
    v34 = v18;
    sub_1DA66C388();
    v35 = a2;
    v24 = v33;
    sub_1DA66C0F4();
    v18 = v34;
    swift_bridgeObjectRelease();
    a2 = v35;
    swift_bridgeObjectRelease();
    sub_1DA66C340();
    v25 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v23);
    v26 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v18, v26, 1, v23);
  sub_1DA49CC94((uint64_t)v18, (uint64_t)v12, &qword_1EDAE5020);
  if (v25(v12, 1, v23) == 1)
  {
    sub_1DA4986F8(v37, v22);
    sub_1DA6547EC(a2, a3);
    sub_1DA47E2F0((uint64_t)v12, &qword_1EDAE5020);
    sub_1DA47E2F0((uint64_t)v18, &qword_1EDAE5020);
    v27 = sub_1DA66CA0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v38, 1, 1, v27);
  }
  else
  {
    sub_1DA66C298();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v23);
    v39 = xmmword_1DA67D4C0;
    v40 = 0u;
    memset(v41, 0, sizeof(v41));
    sub_1DA66C904();
    sub_1DA66CC1C();
    v29 = v38;
    sub_1DA66CA00();
    sub_1DA4986F8(v37, v22);
    sub_1DA6547EC(a2, a3);
    sub_1DA47E2F0((uint64_t)v18, &qword_1EDAE5020);
    v30 = sub_1DA66CA0C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
  }
}

unint64_t sub_1DA654740()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1F026E828;
  if (!qword_1F026E828)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026E4B8);
    v2 = sub_1DA6547A4();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1F026E828);
  }
  return result;
}

unint64_t sub_1DA6547A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE4180;
  if (!qword_1EDAE4180)
  {
    v1 = sub_1DA66CEBC();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7DD38], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE4180);
  }
  return result;
}

void sub_1DA6547EC(id a1, char a2)
{
  if (a2 != -1)
    sub_1DA4E7898(a1, a2);
}

uint64_t ArtworkModel.init(serverArtwork:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12[8];

  v2 = sub_1DA66C928();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA66CD30();
  if (!v3)
    goto LABEL_7;
  sub_1DA66CD3C();
  if ((v4 & 1) != 0 || (sub_1DA66CD48(), (v5 & 1) != 0))
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_release();
    v8 = sub_1DA66CA0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  v6 = sub_1DA66CD54();
  if (v7)
  {
    v12[0] = v6;
    v12[1] = v7;
    sub_1DA6550AC(v12, (uint64_t)&v11);
    swift_bridgeObjectRelease();
  }
  sub_1DA66BE60();
  sub_1DA66D204();
  sub_1DA66C904();
  sub_1DA66CC1C();
  sub_1DA66CA00();
  swift_release();
  v10 = sub_1DA66CA0C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
}

uint64_t ArtworkModel.config(_:mode:format:crop:retainAspectRatio:)(uint64_t a1, int a2, uint64_t a3, int a4, double a5, double a6)
{
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  double v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;

  v41 = a4;
  v42 = a2;
  v39 = a3;
  v37 = a1;
  v38 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66DD14();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v40 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v36 - v19;
  v21 = sub_1DA66D1F8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66C9F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E0D7E1D0], v21);
  v25 = CGSize.fitting(_:mode:aspectRule:)(v37, (uint64_t)v24, a5, a6);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  v28 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v28, sel_scale);
  v30 = v29;

  sub_1DA5FE724((uint64_t)v6, (uint64_t)v20);
  if (v38 == 4)
    v42 = v20[*(int *)(v15 + 52)];
  sub_1DA4E8990((uint64_t)v20);
  v32 = *v6;
  v31 = v6[1];
  sub_1DA49CC94(v39, (uint64_t)v11, &qword_1EDAE53D8);
  sub_1DA5FE724((uint64_t)v6, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    swift_bridgeObjectRetain();
    v33 = v40;
    sub_1DA66C91C();
    sub_1DA4E8990((uint64_t)v17);
    sub_1DA47E2F0((uint64_t)v11, &qword_1EDAE53D8);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1DA4E8990((uint64_t)v17);
    v33 = v40;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v40, v11, v12);
  }
  type metadata accessor for ArtworkLoaderConfig();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v32;
  *(_QWORD *)(v34 + 24) = v31;
  *(double *)(v34 + 32) = floor(v25);
  *(double *)(v34 + 40) = floor(v27);
  *(_BYTE *)(v34 + 48) = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v34 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop, v33, v12);
  *(_QWORD *)(v34 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) = v30;
  *(_BYTE *)(v34 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) = v41 & 1;
  return v34;
}

void ArtworkModel.joeColors(where:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v7;
  id v8;
  char v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  unint64_t v13;
  uint64_t (*v14)(id);
  uint64_t v15;
  _BYTE v16[32];
  id v17;
  char v18[8];
  id v19;
  char v20;
  id v21;
  char v22;
  id v23;
  char v24;
  unint64_t v25;

  v4 = v2;
  v7 = *(unsigned __int8 *)(v4 + 64);
  if (v7 == 255)
  {
    v14 = (uint64_t (*)(id))a1;
    v15 = a2;
  }
  else
  {
    v8 = Color.color.getter(*(_QWORD *)(v4 + 56), v7);
    v9 = a1();
    if (v3)
    {

      return;
    }
    if ((v9 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1DA67B2A0;
      *(_QWORD *)(v10 + 32) = v8;
      v25 = v10;
      sub_1DA66FAB4();
      return;
    }
    v14 = (uint64_t (*)(id))a1;
    v15 = a2;

  }
  v17 = *(id *)(v4 + 72);
  v18[0] = *(_BYTE *)(v4 + 80);
  v19 = *(id *)(v4 + 88);
  v20 = *(_BYTE *)(v4 + 96);
  v21 = *(id *)(v4 + 104);
  v22 = *(_BYTE *)(v4 + 112);
  v23 = *(id *)(v4 + 120);
  v24 = *(_BYTE *)(v4 + 128);
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1DA655358(v17, v18[0]);
  sub_1DA655358(v19, v20);
  sub_1DA655358(v21, v22);
  sub_1DA655358(v23, v24);
  for (i = 0; i != 64; i += 16)
  {
    v12 = *(void **)&v16[i + 32];
    if (v18[i] > 1u)
    {
      if (v18[i] != 255)
        __asm { BR              X8 }
    }
    else
    {
      if (v18[i])
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithCGColor_, v12);
      }
      else
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, (double)v12 / 255.0, (double)BYTE1(v12) / 255.0, (double)BYTE2(v12) / 255.0, (double)BYTE3(v12) / 255.0);
        sub_1DA6547EC(v12, 0);
      }
      MEMORY[0x1DF09E464]();
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DA66FAC0();
      sub_1DA66FB14();
      sub_1DA66FAB4();
    }
  }
  v13 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E830);
  swift_arrayDestroy();
  sub_1DA65536C(v13, v14, v15);
}

uint64_t sub_1DA6550AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  char v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = sub_1DA66DEF4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = a1[1];
  swift_bridgeObjectRetain();
  result = sub_1DA66DC84();
  if (v2)
  {
    sub_1DA66DE94();
    swift_bridgeObjectRetain();
    v13 = v2;
    swift_bridgeObjectRetain();
    v14 = v2;
    v15 = sub_1DA66DEDC();
    v16 = sub_1DA66FDA8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v26 = a2;
      v18 = v17;
      v24 = swift_slowAlloc();
      v28 = v24;
      *(_DWORD *)v18 = 136315394;
      v25 = v5;
      swift_bridgeObjectRetain();
      v27 = sub_1DA49AD00(v9, v10, &v28);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      v27 = (uint64_t)v2;
      v19 = v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
      v20 = sub_1DA66F904();
      v27 = sub_1DA49AD00(v20, v21, &v28);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DA478000, v15, v16, "Encountered an error decoding color descriptor (%s): %s", (uint8_t *)v18, 0x16u);
      v22 = v24;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v22, -1, -1);
      v23 = v18;
      a2 = v26;
      MEMORY[0x1DF0A0474](v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v25);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    result = 0;
    v12 = -1;
  }
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v12;
  return result;
}

id sub_1DA655358(id result, char a2)
{
  if (a2 != -1)
    return sub_1DA4E762C(result, a2);
  return result;
}

uint64_t sub_1DA65536C(unint64_t a1, uint64_t (*a2)(id), uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v6 = a1;
  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v6 & 0xFFFFFFFFFFFFFF8;
      v17 = v6 & 0xC000000000000001;
      v15 = v6;
      while (v17)
      {
        v9 = (id)MEMORY[0x1DF09EE48](v8, v6);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v12 = a3;
        v13 = a2(v9);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_1DA6704BC();
          sub_1DA6704EC();
          v6 = v15;
          sub_1DA6704F8();
          sub_1DA6704C8();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v18;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_1DA6705A0();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

void QueueModelSection.init(tracklistSection:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  id v16;
  char v17;
  id v18;

  v4 = sub_1DA66F8BC();
  v6 = v5;
  if (v4 == sub_1DA66F8BC() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v9 = sub_1DA6706D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_14:

    v17 = 0;
    goto LABEL_15;
  }
  v10 = sub_1DA66F8BC();
  v12 = v11;
  if (v10 == sub_1DA66F8BC() && v12 == v13)
  {
    v18 = a1;

    swift_bridgeObjectRelease_n();
    v17 = 1;
  }
  else
  {
    v15 = sub_1DA6706D8();
    v16 = a1;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      v17 = 1;
    else
      v17 = 2;
  }
LABEL_15:
  *a2 = v17;
}

PodcastsUI::QueueModelSection_optional __swiftcall QueueModelSection.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  PodcastsUI::QueueModelSection_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DA670600();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t QueueModelSection.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7565755174666F73;
  else
    return 0x7565755164726168;
}

uint64_t sub_1DA6556EC(char *a1, char *a2)
{
  return sub_1DA659B2C(*a1, *a2);
}

uint64_t sub_1DA6556F8()
{
  sub_1DA670798();
  sub_1DA66F94C();
  swift_bridgeObjectRelease();
  return sub_1DA6707C8();
}

uint64_t sub_1DA655774()
{
  sub_1DA66F94C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6557C4()
{
  sub_1DA670798();
  sub_1DA66F94C();
  swift_bridgeObjectRelease();
  return sub_1DA6707C8();
}

PodcastsUI::QueueModelSection_optional sub_1DA65583C(Swift::String *a1)
{
  return QueueModelSection.init(rawValue:)(*a1);
}

void sub_1DA655848(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x7565755164726168;
  if (*v1)
    v2 = 0x7565755174666F73;
  *a1 = v2;
  a1[1] = 0xE900000000000065;
}

unint64_t sub_1DA655888()
{
  unint64_t result;

  result = qword_1F026E838;
  if (!qword_1F026E838)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for QueueModelSection, &type metadata for QueueModelSection);
    atomic_store(result, (unint64_t *)&qword_1F026E838);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for QueueModelSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA655918 + 4 * byte_1DA685E75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA65594C + 4 * asc_1DA685E70[v4]))();
}

uint64_t sub_1DA65594C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA655954(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA65595CLL);
  return result;
}

uint64_t sub_1DA655968(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA655970);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA655974(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA65597C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QueueModelSection()
{
  return &type metadata for QueueModelSection;
}

void CGSize.fitting(_:aspectRule:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  int v11;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13[4];

  v6 = sub_1DA66D1F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 != 0.0 || a3 != 0.0)
  {
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v10(v9, a1, v6);
    v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
    if (v11 != *MEMORY[0x1E0D7E1C8] && v11 != *MEMORY[0x1E0D7E1D0])
    {
      v13[3] = v6;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
      v10((char *)boxed_opaque_existential_1, a1, v6);
      unrecognizedEnumValueEncountered(_:)((uint64_t)v13);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

double CGSize.fitting(_:mode:aspectRule:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  double v13;
  unsigned int *v15;
  double v16;
  uint64_t v17;
  _QWORD v18[4];

  v8 = sub_1DA66D1F8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 3) >= 0xA)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        v15 = (unsigned int *)MEMORY[0x1E0D7E1D0];
      }
      else
      {
        if (a1 != 2)
        {
          type metadata accessor for ContentMode(0);
          v18[3] = v17;
          v18[0] = a1;
          unrecognizedEnumValueEncountered(_:)((uint64_t)v18);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
          return a3;
        }
        v15 = (unsigned int *)MEMORY[0x1E0D7E1C8];
      }
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, *v15, v8, v10);
      CGSize.fitting(_:aspectRule:)((uint64_t)v12, a3, a4);
      a3 = v16;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
  }
  else
  {
    CGSize.fitting(_:aspectRule:)(a2, a3, a4);
    return v13;
  }
  return a3;
}

double CGSize.integral.getter(double a1)
{
  return floor(a1);
}

double static CGSize.* infix(_:_:)(double a1, double a2, double a3)
{
  return a1 * a3;
}

float64x2_t static CGSize.*= infix(_:_:)(float64x2_t *a1, double a2)
{
  float64x2_t result;

  result = vmulq_n_f64(*a1, a2);
  *a1 = result;
  return result;
}

unint64_t sub_1DA655C9C(uint64_t a1)
{
  unint64_t result;

  result = sub_1DA655CC0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DA655CC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDADE8E8;
  if (!qword_1EDADE8E8)
  {
    type metadata accessor for CGSize(255);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0C9BA00], v1);
    atomic_store(result, (unint64_t *)&qword_1EDADE8E8);
  }
  return result;
}

uint64_t FetchPodcastForEpisodeIntentImplementation.perform(_:objectGraph:)(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2[10] = a2;
  v4 = sub_1DA66D24C();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026DEF0);
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1C0);
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFD0);
  v2[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1D0);
  v2[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFE0);
  v2[21] = swift_task_alloc();
  v6 = sub_1DA66CA30();
  v2[22] = v6;
  v2[23] = *(_QWORD *)(v6 - 8);
  v2[24] = swift_task_alloc();
  v7 = sub_1DA66CA90();
  v2[25] = v7;
  v2[26] = *(_QWORD *)(v7 - 8);
  v8 = swift_task_alloc();
  v9 = *a1;
  v2[27] = v8;
  v2[28] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
  v10 = (_QWORD *)swift_task_alloc();
  v2[29] = v10;
  *v10 = v2;
  v10[1] = sub_1DA655EE8;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA655EE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 240) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E850);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 248) = v4;
  *v4 = v2;
  v4[1] = sub_1DA655FA8;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA655FA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA65600C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t (*v29)(void);
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 144);
  v34 = *(_QWORD *)(v0 + 136);
  v35 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 264) = v35;
  (*(void (**)(void))(v2 + 104))();
  v7 = *MEMORY[0x1E0D7D838];
  v8 = sub_1DA66CA3C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104);
  v10(v3, v7, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v3, 0, 1, v8);
  v11 = sub_1DA66CA9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  v12 = sub_1DA66CA54();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1D8);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1E0);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DA678510;
  v17 = v16 + v15;
  v18 = *(int *)(v13 + 48);
  v10(v17, *MEMORY[0x1E0D7D840], v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1E8);
  v19 = sub_1DA66CA60();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DA678510;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v20 + 104))(v22 + v21, *MEMORY[0x1E0D7D8B0], v19);
  *(_QWORD *)(v17 + v18) = v22;
  sub_1DA63CC0C(v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v0 + 64) = v1;
  sub_1DA4F726C();
  *(_QWORD *)(v23 + 32) = sub_1DA670354();
  *(_QWORD *)(v23 + 40) = v24;
  v25 = sub_1DA66CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
  v26 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v34, 1, 1, v26);
  v27 = MEMORY[0x1E0DEE9D8];
  v28 = MEMORY[0x1E0D7D878];
  sub_1DA63C918(MEMORY[0x1E0DEE9D8], &qword_1F026E8E8, (uint64_t *)&unk_1F026E8F0, (uint64_t (*)(char *))sub_1DA656F3C, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D878]);
  sub_1DA63C918(v27, &qword_1F026E8E8, (uint64_t *)&unk_1F026E8F0, (uint64_t (*)(char *))sub_1DA656F3C, (uint64_t (*)(_QWORD))v28);
  sub_1DA656BD0(v27);
  v29 = MEMORY[0x1E0D7D848];
  sub_1DA63C918(v27, &qword_1F026B1E0, &qword_1F026E3A0, (uint64_t (*)(char *))sub_1DA55CEB4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D848]);
  sub_1DA63C918(v27, &qword_1F026E8A0, &qword_1F026E8A8, (uint64_t (*)(char *))sub_1DA656EA4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D910]);
  sub_1DA63C918(v27, &qword_1F026E880, &qword_1F026E888, (uint64_t (*)(char *))sub_1DA55CEB4, (uint64_t (*)(_QWORD))v29);
  sub_1DA66CA84();
  v30 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 272) = v30;
  *(_QWORD *)(v0 + 288) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v30);
  *(_QWORD *)(v0 + 296) = sub_1DA66D6CC();
  sub_1DA66D234();
  v31 = swift_allocObject();
  *(_QWORD *)(v0 + 304) = v31;
  *(_QWORD *)(v31 + 16) = v35;
  swift_unknownObjectRetain();
  v32 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E860);
  *v32 = v0;
  v32[1] = sub_1DA6564B0;
  return sub_1DA66D240();
}

uint64_t sub_1DA6564B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_1DA65652C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[40] = v0[9];
  v1 = (_QWORD *)swift_task_alloc();
  v0[41] = v1;
  *v1 = v0;
  v1[1] = sub_1DA656598;
  return sub_1DA66DBAC();
}

uint64_t sub_1DA656598()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 336) = v0;
  swift_task_dealloc();

  return swift_task_switch();
}

void sub_1DA656604()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = sub_1DA66D1C8();
  if (v1 >> 62)
  {
    v21 = v0 + 16;
    if (!sub_1DA6705A0())
      goto LABEL_19;
  }
  else
  {
    v21 = v0 + 16;
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_19:
      swift_bridgeObjectRelease();
LABEL_20:
      v16 = *(_QWORD *)(v0 + 208);
      v15 = *(_QWORD *)(v0 + 216);
      v17 = *(_QWORD *)(v0 + 200);
      v18 = *(_QWORD *)(v0 + 120);
      v19 = *(_QWORD *)(v0 + 128);
      v20 = *(_QWORD *)(v0 + 112);
      sub_1DA656E08();
      swift_allocError();
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      __swift_destroy_boxed_opaque_existential_0(v21);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
      return;
    }
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1DF09EE48](0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      v14 = sub_1DA6705A0();
      swift_bridgeObjectRelease();
      if (v14)
        goto LABEL_10;
      goto LABEL_19;
    }
    v2 = *(id *)(v1 + 32);
  }
  v3 = v2;
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1DA66D6A8();

  if (!v4)
    goto LABEL_20;
  v5 = (void *)sub_1DA66DA8C();

  if (!v5)
    goto LABEL_20;
  v1 = sub_1DA66DAD4();

  if (v1 >> 62)
    goto LABEL_18;
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_19;
LABEL_10:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1DF09EE48](0, v1);
    goto LABEL_13;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v1 + 32);
LABEL_13:
    v7 = v6;
    v9 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    __swift_destroy_boxed_opaque_existential_0(v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(id))(v0 + 8))(v7);
    return;
  }
  __break(1u);
}

uint64_t sub_1DA656928()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA6569D0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA656A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA656B54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1DA527068;
  return FetchPodcastForEpisodeIntentImplementation.perform(_:objectGraph:)(a2, a3);
}

unint64_t sub_1DA656BAC(uint64_t a1)
{
  return sub_1DA63C918(a1, &qword_1F026E8E8, (uint64_t *)&unk_1F026E8F0, (uint64_t (*)(char *))sub_1DA656F3C, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D878]);
}

unint64_t sub_1DA656BD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E8C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E8D0);
  v6 = sub_1DA6705D0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v12, (uint64_t)v5, &qword_1F026E8C8);
    result = sub_1DA656F3C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1DA66CA54();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA656D64(uint64_t a1)
{
  return sub_1DA63C918(a1, &qword_1F026E8A0, &qword_1F026E8A8, (uint64_t (*)(char *))sub_1DA656EA4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D910]);
}

unint64_t sub_1DA656D88(uint64_t a1)
{
  return sub_1DA63C918(a1, &qword_1F026E880, &qword_1F026E888, (uint64_t (*)(char *))sub_1DA55CEB4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D848]);
}

uint64_t sub_1DA656DAC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_1DA656DD0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + 16), sel_primaryUser);
  *a1 = result;
  return result;
}

unint64_t sub_1DA656E08()
{
  unint64_t result;

  result = qword_1F026E868[0];
  if (!qword_1F026E868[0])
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for MAPIIntentFetchError, &type metadata for MAPIIntentFetchError);
    atomic_store(result, qword_1F026E868);
  }
  return result;
}

unint64_t sub_1DA656E50()
{
  unint64_t result;

  result = qword_1EDADFA90;
  if (!qword_1EDADFA90)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FetchPodcastForEpisodeIntent, &type metadata for FetchPodcastForEpisodeIntent);
    atomic_store(result, (unint64_t *)&qword_1EDADFA90);
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPodcastForEpisodeIntentImplementation()
{
  return &type metadata for FetchPodcastForEpisodeIntentImplementation;
}

unint64_t sub_1DA656EA4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DA66CA78();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D7D910];
  sub_1DA47E32C(&qword_1F026E8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7D910], MEMORY[0x1E0D7D920]);
  v3 = sub_1DA66F7F0();
  return sub_1DA55D0C4(a1, v3, v2, (unint64_t *)&unk_1F026E8B8, MEMORY[0x1E0D7D928]);
}

unint64_t sub_1DA656F3C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DA66CA54();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D7D878];
  sub_1DA47E32C(&qword_1F026E8D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7D878], MEMORY[0x1E0D7D888]);
  v3 = sub_1DA66F7F0();
  return sub_1DA55D0C4(a1, v3, v2, &qword_1F026E8E0, MEMORY[0x1E0D7D890]);
}

uint64_t sub_1DA656FD4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 1)
  {
    if ((v3 & 1) != 0)
      return 0;
    return v2 & (v3 ^ 1u);
  }
  if ((v3 & 1) != 0)
    return v2 & (v3 ^ 1u);
  return *(_QWORD *)a1 < *(_QWORD *)a2;
}

uint64_t sub_1DA657014(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (v3 == 1)
  {
    if ((v2 & 1) != 0)
      return 1;
    return v3 & (v2 ^ 1) ^ 1u;
  }
  if ((v2 & 1) != 0)
    return v3 & (v2 ^ 1) ^ 1u;
  return *(_QWORD *)a2 >= *(_QWORD *)a1;
}

uint64_t sub_1DA65705C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 1)
  {
    if ((v3 & 1) != 0)
      return 1;
    return v2 & (v3 ^ 1) ^ 1u;
  }
  if ((v3 & 1) != 0)
    return v2 & (v3 ^ 1) ^ 1u;
  return *(_QWORD *)a1 >= *(_QWORD *)a2;
}

uint64_t sub_1DA6570A4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (v3 == 1)
  {
    if ((v2 & 1) != 0)
      return 0;
    return v3 & (v2 ^ 1u);
  }
  if ((v2 & 1) != 0)
    return v3 & (v2 ^ 1u);
  return *(_QWORD *)a2 < *(_QWORD *)a1;
}

uint64_t sub_1DA6570E4()
{
  uint64_t v0;

  return sub_1DA4ABE48(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

BOOL sub_1DA6570F0(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 8) == 1)
    return (*(_BYTE *)(a2 + 8) & 1) != 0;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return *(_QWORD *)a1 == *(_QWORD *)a2;
}

id ExtendedLaunchController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_1DA65714C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA657170()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

id ExtendedLaunchController.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  objc_super v4;

  v1 = OBJC_IVAR____TtC10PodcastsUI24ExtendedLaunchController_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2178);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 28) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 0;
  *(_QWORD *)&v0[v1] = v2;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ExtendedLaunchController();
  return objc_msgSendSuper2(&v4, sel_init);
}

id ExtendedLaunchController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExtendedLaunchController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DA657244()
{
  uint64_t v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)&loc_1DA65726C
                                                                     + *((int *)qword_1DA6572B8
                                                                       + *(unsigned __int8 *)(v0 + 16))))(0xD000000000000026, 0x80000001DA691C90);
}

unint64_t sub_1DA65727C()
{
  return 0xD000000000000023;
}

uint64_t sub_1DA657298@<X0>(uint64_t a1@<X8>)
{
  return a1 + 33;
}

uint64_t ExtendedLaunchStatus.ExtendedLaunchError.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ExtendedLaunchStatus.ExtendedLaunchError.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

BOOL static ExtendedLaunchStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ExtendedLaunchStatus.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t ExtendedLaunchStatus.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t sub_1DA657368()
{
  unint64_t result;

  result = qword_1F026E908;
  if (!qword_1F026E908)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ExtendedLaunchStatus, &type metadata for ExtendedLaunchStatus);
    atomic_store(result, (unint64_t *)&qword_1F026E908);
  }
  return result;
}

uint64_t method lookup function for ExtendedLaunchController()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for ExtendedLaunchStatus.ExtendedLaunchError()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExtendedLaunchStatus.ExtendedLaunchError.localizedDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

unint64_t sub_1DA6573D4()
{
  unint64_t result;

  result = qword_1F026E910;
  if (!qword_1F026E910)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA686178, &type metadata for ExtendedLaunchController.HandleId);
    atomic_store(result, (unint64_t *)&qword_1F026E910);
  }
  return result;
}

uint64_t sub_1DA657418(uint64_t a1, uint64_t a2)
{
  return sub_1DA657460(a1, a2, (void (*)(void))sub_1DA65B158, MEMORY[0x1E0D7D7A0]);
}

uint64_t sub_1DA65743C(uint64_t a1, uint64_t a2)
{
  return sub_1DA657460(a1, a2, (void (*)(void))sub_1DA65B114, MEMORY[0x1E0D7E148]);
}

uint64_t sub_1DA657460(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  id v39;
  unsigned __int8 v40;

  v38 = sub_1DA670480();
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  v13 = sub_1DA66ECC8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, a2, v13, v15);
  MEMORY[0x1DF09E188](v17);
  a3();
  v35 = a4;
  sub_1DA66EBF0();
  if (v4)
  {
    v34 = a2;
    swift_bridgeObjectRelease();
    v39 = v4;
    v18 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v19 = v38;
    if (swift_dynamicCast())
    {

      v20 = v36;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v37, v12, v19);
      v21 = sub_1DA66F6DC();
      sub_1DA47E32C((unint64_t *)&qword_1EDAE1F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D41500], MEMORY[0x1E0D41508]);
      swift_allocError();
      v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2230);
      v24 = swift_allocObject();
      v33 = a1;
      v25 = v24;
      *(_OWORD *)(v24 + 16) = xmmword_1DA678510;
      *(_QWORD *)(v24 + 32) = swift_allocError();
      v26 = v37;
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v27, v37, v19);
      *v23 = v35;
      v23[1] = v25;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0D414F0], v21);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v34, v13);
      v28 = sub_1DA66EC20();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v33, v28);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v34, v13);
      v30 = sub_1DA66EC20();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(a1, v30);
    }

  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = v40;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
    v29 = sub_1DA66EC20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(a1, v29);
  }
  return v19;
}

id sub_1DA65777C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;

  v5 = sub_1DA670480();
  v35 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  v10 = sub_1DA66ECC8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a2, v10, v12);
  MEMORY[0x1DF09E188](v14);
  sub_1DA65B0D0();
  v15 = (id)MEMORY[0x1E0D7ED00];
  sub_1DA66EBF0();
  if (v2)
  {
    v29 = v11;
    v30 = v10;
    v31 = a2;
    v32 = a1;
    swift_bridgeObjectRelease();
    v34 = v2;
    v16 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    if (swift_dynamicCast())
    {

      v17 = v35;
      v18 = v33;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v33, v9, v5);
      v19 = sub_1DA66F6DC();
      sub_1DA47E32C((unint64_t *)&qword_1EDAE1F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D41500], MEMORY[0x1E0D41508]);
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2230);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1DA678510;
      *(_QWORD *)(v22 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v23, v18, v5);
      *v21 = v15;
      v21[1] = v22;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0D414F0], v19);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
      v24 = sub_1DA66EC20();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v32, v24);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
      v26 = sub_1DA66EC20();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v32, v26);
    }

  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = v34;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    v25 = sub_1DA66EC20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a1, v25);
  }
  return v15;
}

uint64_t sub_1DA657A98(uint64_t a1, uint64_t a2)
{
  return sub_1DA657AE0(a1, a2, (void (*)(void))sub_1DA65B08C, MEMORY[0x1E0D7DAE0]);
}

uint64_t sub_1DA657ABC(uint64_t a1, uint64_t a2)
{
  return sub_1DA657AE0(a1, a2, (void (*)(void))sub_1DA65B048, MEMORY[0x1E0D7EDC8]);
}

uint64_t sub_1DA657AE0(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  id v39;
  unsigned __int8 v40;

  v38 = sub_1DA670480();
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  v13 = sub_1DA66ECC8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, a2, v13, v15);
  MEMORY[0x1DF09E188](v17);
  a3();
  v35 = a4;
  sub_1DA66EBF0();
  if (v4)
  {
    v34 = a2;
    swift_bridgeObjectRelease();
    v39 = v4;
    v18 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v19 = v38;
    if (swift_dynamicCast())
    {

      v20 = v36;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v37, v12, v19);
      v21 = sub_1DA66F6DC();
      sub_1DA47E32C((unint64_t *)&qword_1EDAE1F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D41500], MEMORY[0x1E0D41508]);
      swift_allocError();
      v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2230);
      v24 = swift_allocObject();
      v33 = a1;
      v25 = v24;
      *(_OWORD *)(v24 + 16) = xmmword_1DA678510;
      *(_QWORD *)(v24 + 32) = swift_allocError();
      v26 = v37;
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v27, v37, v19);
      *v23 = v35;
      v23[1] = v25;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0D414F0], v21);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v34, v13);
      v28 = sub_1DA66EC20();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v33, v28);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v34, v13);
      v30 = sub_1DA66EC20();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(a1, v30);
    }

  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = v40;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
    v29 = sub_1DA66EC20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(a1, v29);
  }
  return v19;
}

uint64_t sub_1DA657DFC(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;

  v5 = sub_1DA670480();
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - v8;
  v10 = sub_1DA66ECC8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DA66DC3C();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D7EC98];
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  MEMORY[0x1DF09E188](v13);
  sub_1DA47E32C(&qword_1F026E948, v15, MEMORY[0x1E0D7ECA8]);
  sub_1DA66EBF0();
  if (v2)
  {
    v30 = v11;
    v31 = v10;
    v32 = a2;
    v33 = a1;
    swift_bridgeObjectRelease();
    v37 = v2;
    v16 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v17 = v36;
    if (swift_dynamicCast())
    {

      v19 = v34;
      v18 = v35;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v9, v17);
      v20 = sub_1DA66F6DC();
      sub_1DA47E32C((unint64_t *)&qword_1EDAE1F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D41500], MEMORY[0x1E0D41508]);
      swift_allocError();
      v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2230);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1DA678510;
      *(_QWORD *)(v23 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v24, v19, v17);
      *v22 = v14;
      v22[1] = v23;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0D414F0], v20);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
      v25 = sub_1DA66EC20();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v33, v25);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
      v27 = sub_1DA66EC20();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v33, v27);
    }

  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = (uint64_t)v37;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    v26 = sub_1DA66EC20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(a1, v26);
  }
  return v14;
}

uint64_t sub_1DA658130(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  unsigned int v35;

  v5 = sub_1DA670480();
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - v8;
  v10 = sub_1DA66ECC8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a2, v10, v12);
  MEMORY[0x1DF09E188](v14);
  sub_1DA65B004();
  v15 = MEMORY[0x1E0D7EDA8];
  sub_1DA66EBF0();
  if (v2)
  {
    v30 = a2;
    v31 = a1;
    swift_bridgeObjectRelease();
    v34 = v2;
    v16 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    if (swift_dynamicCast())
    {

      v17 = v33;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v32, v9, v5);
      v18 = sub_1DA66F6DC();
      sub_1DA47E32C((unint64_t *)&qword_1EDAE1F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D41500], MEMORY[0x1E0D41508]);
      swift_allocError();
      v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2230);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1DA678510;
      *(_QWORD *)(v21 + 32) = swift_allocError();
      v22 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
      v23 = v32;
      v22(v24, v32, v5);
      *v20 = v15;
      v20[1] = v21;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0D414F0], v18);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v30, v10);
      v25 = sub_1DA66EC20();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v31, v25);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v30, v10);
      v27 = sub_1DA66EC20();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v31, v27);
    }

  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = v35;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    v26 = sub_1DA66EC20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(a1, v26);
  }
  return v5;
}

