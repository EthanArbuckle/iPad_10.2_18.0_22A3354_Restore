void LazyDate.value.getter(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v3;
  os_unfair_lock_s *v4;

  v3 = (uint64_t *)(a1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a1 + 16));
  v4 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(_QWORD *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_1DA47C730(v3, a2);
  os_unfair_lock_unlock(v4);
}

uint64_t LazyDate.init(initialState:)(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A8);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + ((*(unsigned int *)(*(_QWORD *)v2 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1DA47C94C(a1, v2 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v2 + 16));
  sub_1DA47C68C(a1);
  return v2;
}

uint64_t sub_1DA47C68C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LazyDate.State();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for LazyDate.State(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = sub_1DA66C430();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (result <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA47C730@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  _QWORD v21[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DA66C430();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v12);
  v14 = (_QWORD *)((char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA47C94C((uint64_t)a1, (uint64_t)v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DA47C68C((uint64_t)v14);
      v16 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(a2, v14, v8);
      v16 = 0;
    }
  }
  else
  {
    v21[1] = v2;
    sub_1DA47C68C((uint64_t)a1);
    v18 = *v14;
    v17 = v14[1];
    sub_1DA5D83CC(v18, v17, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1DA47E2F0((uint64_t)v7, &qword_1EDADE6C8);
      *a1 = v18;
      a1[1] = v17;
      v16 = 1;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      swift_bridgeObjectRelease();
      v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v19(v11, v7, v8);
      (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(a1, v11, v8);
      swift_storeEnumTagMultiPayload();
      v19(a2, v11, v8);
      v16 = 0;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v16, 1, v8);
}

uint64_t sub_1DA47C94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LazyDate.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for LazyDate.State()
{
  uint64_t result;

  result = qword_1EDADFBF8;
  if (!qword_1EDADFBF8)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *initializeWithCopy for LazyDate.State(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v5 = sub_1DA66C430();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t InvalidateImageStoreValueProcessingStep.publisher.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  char *v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25[40];

  v24 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)&v18 - v10;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = sub_1DA66DF30();
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v19 = (char *)&v18 - v13;
  v21 = v2;
  sub_1DA66D4B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v14 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v7;
  *(_QWORD *)(v15 + 24) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v14, (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v16 = v19;
  sub_1DA66E134();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, AssociatedTypeWitness);
  MEMORY[0x1DF0A039C](&protocol conformance descriptor for InvalidateImageStoreValueProcessingStep<A>, a1);
  sub_1DA66D4D4();
  MEMORY[0x1DF0A039C](MEMORY[0x1E0C957C0], v12);
  sub_1DA66CC64();
  sub_1DA66E0F8();
  sub_1DA47CD80((uint64_t)v25);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v16, v12);
}

uint64_t sub_1DA47CD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_1DA47CD80(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5310);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA47CDC0(uint64_t a1)
{
  id v2;
  uint64_t v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v2, sel_setAlignment_, 4);
  objc_msgSend(v2, sel_setBaseWritingDirection_, a1);
  objc_msgSend(v2, sel_setLineBreakMode_, 0);
  objc_msgSend(v2, sel_copy);
  sub_1DA670360();

  swift_unknownObjectRelease();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE5100);
  swift_dynamicCast();
  return v4;
}

uint64_t LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:)(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  objc_class *v4;
  objc_class *v5;
  id v10;
  uint64_t ObjectType;
  uint64_t v12;

  v5 = v4;
  v10 = objc_allocWithZone(v5);
  if (a2)
  {
    ObjectType = swift_getObjectType();
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, void *, _QWORD))(ObjectType + 464))(a1, a2, a3, a4 & 1);
    swift_deallocPartialClassInstance();
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v12;
}

id LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:)(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  objc_class *v4;
  id v9;
  id v10;

  v9 = objc_allocWithZone(v4);
  v10 = sub_1DA47CFE4(a1, a2, a3, a4);

  return v10;
}

id LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v5;

  v5 = sub_1DA47CFE4(a1, a2, a3, a4);

  return v5;
}

id sub_1DA47CFE4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  _BYTE *v4;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  void *v13;
  _BYTE *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  _QWORD *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  void *v78;
  objc_super v79;
  id v80;
  _QWORD v81[3];
  unsigned __int8 v82;
  uint64_t v83;

  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  v9 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  v10 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  swift_beginAccess();
  v13 = (void *)qword_1EDADE968;
  if (qword_1EDADE968)
  {
    v14 = v4;
    swift_unknownObjectRetain();
    v15 = (void *)sub_1DA66F88C();
    v16 = objc_msgSend(v13, sel_preprocessForLanguageAwarenessString_, v15);

    v17 = sub_1DA66F8BC();
    v19 = v18;
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    a2 = v19;
    v75 = v17;
    if ((a4 & 1) != 0)
      goto LABEL_7;
  }
  else
  {
    v20 = v4;
    v75 = a1;
    if ((a4 & 1) != 0)
      goto LABEL_7;
  }
  if (!a3)
  {
    v21 = (void *)sub_1DA66F88C();
    v22 = 0;
    goto LABEL_8;
  }
LABEL_7:
  v23 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  swift_bridgeObjectRetain();
  v24 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v23, sel_initWithString_, v24);

  v21 = 0;
LABEL_8:
  v25 = v22;
  v78 = v21;
  sub_1DA47FA40(v22, v21, a3, (uint64_t)v81);
  v26 = v81[0];
  v27 = (_QWORD *)v81[1];
  v28 = v81[2];
  v77 = v82;
  v29 = v83;

  v76 = v26;
  if (!v22)
  {
    if (!v29)
    {
      if ((v77 & 1) != 0)
        goto LABEL_22;
LABEL_37:
      *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = 0;
      goto LABEL_38;
    }
    v72 = v28;
    v73 = v27;
    v35 = (void *)sub_1DA66F88C();
    objc_msgSend(v35, sel_mutableCopy);

    sub_1DA670360();
    swift_unknownObjectRelease();
    sub_1DA47D774(0, (unint64_t *)&unk_1F026E770);
    swift_dynamicCast();
    v36 = *(_QWORD *)(v29 + 16);
    if (v36)
    {
      v71 = v25;
      swift_bridgeObjectRetain();
      v37 = 0;
      do
      {
        v38 = *(_QWORD *)(v29 + 8 * v37++ + 32);
        v39 = (void *)sub_1DA66F88C();
        objc_msgSend(v80, sel_replaceCharactersInRange_withString_, v38, 1, v39);

      }
      while (v36 != v37);
      swift_bridgeObjectRelease();
      v25 = v71;
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v80, sel_copy);
    sub_1DA670360();
    swift_unknownObjectRelease();
    sub_1DA47D774(0, &qword_1EDAE2130);
    swift_dynamicCast();
    v75 = sub_1DA66F8BC();
    v41 = v40;
    swift_bridgeObjectRelease();

    a2 = v41;
    goto LABEL_20;
  }
  if (!v29)
  {
LABEL_26:
    v42 = v77;
    goto LABEL_27;
  }
  v72 = v28;
  v30 = *(_QWORD *)(v29 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease();
    v28 = v72;
    goto LABEL_26;
  }
  v73 = v27;
  v71 = v25;
  v31 = v25;
  swift_bridgeObjectRetain();
  v32 = 0;
  do
  {
    v33 = *(_QWORD *)(v29 + 8 * v32++ + 32);
    v34 = (void *)sub_1DA66F88C();
    objc_msgSend(v31, sel_replaceCharactersInRange_withString_, v33, 1, v34);

  }
  while (v30 != v32);
  swift_bridgeObjectRelease_n();

  v25 = v71;
LABEL_20:
  v26 = v76;
  v28 = v72;
  v27 = v73;
  v42 = v77;
  if (!v22)
  {
    if ((v77 & 1) != 0)
    {
LABEL_22:
      v43 = v27;
      v44 = sub_1DA48D220(0, v27);
      *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v44;
      v45 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
      v46 = v44;
      v47 = objc_msgSend(v45, sel_initWithAttributedString_, v46);
      if (qword_1F0268540 != -1)
        swift_once();
      v48 = qword_1F026ACC8;
      v49 = objc_retainAutorelease(v47);
      objc_msgSend(v49, sel_performSelector_, v48);
      v50 = objc_msgSend(v49, sel_string);
      v51 = sub_1DA66F8BC();
      v53 = v52;

      swift_bridgeObjectRelease();
      v54 = &v4[OBJC_IVAR___AMPLanguageAwareString_string];
      *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_string] = v51;
      a2 = v53;
      v26 = v76;
      v27 = v43;
      goto LABEL_40;
    }
    goto LABEL_37;
  }
LABEL_27:
  objc_msgSend(v25, sel_copy, v71);
  sub_1DA670360();
  swift_unknownObjectRelease();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE5110);
  if (swift_dynamicCast())
    v55 = v80;
  else
    v55 = 0;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v55;
  if (!v42)
  {
    if (v55)
    {
      v65 = v55;
      v66 = objc_msgSend(v65, sel_string);
      v67 = sub_1DA66F8BC();
      v69 = v68;

      swift_bridgeObjectRelease();
      a2 = v69;
LABEL_39:

      v54 = &v4[OBJC_IVAR___AMPLanguageAwareString_string];
      *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_string] = v67;
      goto LABEL_40;
    }
LABEL_38:
    v67 = v75;
    goto LABEL_39;
  }
  v74 = v27;
  v56 = qword_1F0268540;
  v57 = v25;
  v58 = v55;
  if (v56 != -1)
    swift_once();
  v59 = qword_1F026ACC8;
  v60 = objc_retainAutorelease(v57);
  objc_msgSend(v60, sel_performSelector_, v59);
  v61 = objc_msgSend(v60, sel_string);
  v62 = sub_1DA66F8BC();
  v64 = v63;
  swift_bridgeObjectRelease();

  v54 = &v4[OBJC_IVAR___AMPLanguageAwareString_string];
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_string] = v62;
  a2 = v64;
  v26 = v76;
  v27 = v74;
LABEL_40:
  *((_QWORD *)v54 + 1) = a2;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = v27;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_numbers] = v26;
  *(_QWORD *)&v4[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v28;

  v79.receiver = v4;
  v79.super_class = (Class)type metadata accessor for LanguageAwareString();
  return objc_msgSendSuper2(&v79, sel_init);
}

uint64_t type metadata accessor for LanguageAwareString()
{
  return objc_opt_self();
}

uint64_t sub_1DA47D774(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1DA47D7B0@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v2;
  sub_1DA47DCCC(v4, a2);
  v6 = a2 + *(int *)(type metadata accessor for PUITextStyle() + 20);
  sub_1DA47E2F0(v6, &qword_1EDAE1E60);
  v7 = *a1;
  v8 = sub_1DA66E6BC();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
}

uint64_t sub_1DA47D840@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v4 = sub_1DA66E6EC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, *a1, v4, v6);
  v9 = type metadata accessor for PUITextStyle();
  v10 = a2 + *(int *)(v9 + 20);
  v11 = sub_1DA66E6BC();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v13 = a2 + *(int *)(v9 + 24);
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
  sub_1DA47E2F0(v10, &qword_1EDAE1E60);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v12)(v10, 1, 1, v11);
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  return result;
}

id PUITextStyle.uiFont.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v24;

  v1 = type metadata accessor for PUITextStyle();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA47E2A8(v0 + *(int *)(v1 + 20), (uint64_t)v6);
  v7 = sub_1DA66E6BC();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    v9 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v6, v7);
    if (v9 != *MEMORY[0x1E0CDD6E8])
    {
      if (v9 == *MEMORY[0x1E0CDD6D8])
      {
        v10 = 0x8000;
        goto LABEL_9;
      }
      if (v9 == *MEMORY[0x1E0CDD6D0])
      {
        v10 = 0x10000;
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  v10 = 0;
LABEL_9:
  v11 = *(_BYTE *)(v0 + *(int *)(v1 + 24) + 8);
  sub_1DA66E674();
  if ((v11 & 1) != 0)
  {
    sub_1DA47DCCC(v0, (uint64_t)v3);
  }
  else
  {
    v12 = sub_1DA66E668();
    sub_1DA47DCCC(v0, (uint64_t)v3);
    if ((v12 & 1) != 0)
    {
      sub_1DA47DC40((uint64_t)v3);
      goto LABEL_16;
    }
  }
  v13 = v3[*(int *)(v1 + 24) + 8];
  sub_1DA66E698();
  if ((v13 & 1) != 0)
  {
    sub_1DA47DC40((uint64_t)v3);
    goto LABEL_18;
  }
  v14 = sub_1DA66E668();
  sub_1DA47DC40((uint64_t)v3);
  if ((v14 & 1) != 0)
  {
LABEL_16:
    v15 = v10 | 2;
    if ((_DWORD)v15)
      goto LABEL_19;
LABEL_17:
    v16 = (void *)objc_opt_self();
    v17 = sub_1DA47DD4C();
    v18 = objc_msgSend(v16, sel_preferredFontForTextStyle_, v17);
LABEL_22:
    v22 = v18;
    goto LABEL_23;
  }
LABEL_18:
  v15 = v10;
  if (!v10)
    goto LABEL_17;
LABEL_19:
  v17 = sub_1DA47DD4C();
  v19 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_, v17);
  v20 = objc_msgSend(v19, sel_fontDescriptorWithSymbolicTraits_, v15);

  v21 = (void *)objc_opt_self();
  if (!v20)
  {
    v18 = objc_msgSend(v21, sel_preferredFontForTextStyle_, v17);
    goto LABEL_22;
  }
  v22 = objc_msgSend(v21, sel_fontWithDescriptor_size_, v20, 0.0);

  v17 = v20;
LABEL_23:

  return v22;
}

uint64_t sub_1DA47DC40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PUITextStyle();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PUITextStyle.emph.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  sub_1DA47DCCC(v1, a1);
  sub_1DA66E698();
  v4 = v3;
  result = type metadata accessor for PUITextStyle();
  v6 = a1 + *(int *)(result + 24);
  *(_QWORD *)v6 = v4;
  *(_BYTE *)(v6 + 8) = 0;
  return result;
}

uint64_t sub_1DA47DCCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PUITextStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PUITextStyle()
{
  uint64_t result;

  result = qword_1EDADEE00;
  if (!qword_1EDADEE00)
    return swift_getSingletonMetadata();
  return result;
}

id sub_1DA47DD4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  int v7;
  id *v8;
  void (*v10)(char *, uint64_t);
  id v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_1DA66E6EC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E0CDD788])
  {
    v8 = (id *)MEMORY[0x1E0DC4AE8];
    return *v8;
  }
  if (v7 == *MEMORY[0x1E0CDD7A8])
  {
    v8 = (id *)MEMORY[0x1E0DC4B50];
    return *v8;
  }
  if (v7 == *MEMORY[0x1E0CDD7B0])
  {
    v8 = (id *)MEMORY[0x1E0DC4B58];
    return *v8;
  }
  if (v7 == *MEMORY[0x1E0CDD7B8])
  {
    v8 = (id *)MEMORY[0x1E0DC4B60];
    return *v8;
  }
  if (v7 == *MEMORY[0x1E0CDD7E8])
  {
    v8 = (id *)MEMORY[0x1E0DC4AD0];
    return *v8;
  }
  if (v7 == *MEMORY[0x1E0CDD790])
  {
    v8 = (id *)MEMORY[0x1E0DC4B10];
    return *v8;
  }
  if (v7 == *MEMORY[0x1E0CDD7A0])
  {
    v8 = (id *)MEMORY[0x1E0DC4A88];
    return *v8;
  }
  if (v7 == *MEMORY[0x1E0CDD7C0])
  {
    v8 = (id *)MEMORY[0x1E0DC4A90];
    return *v8;
  }
  if (v7 == *MEMORY[0x1E0CDD7E0])
  {
    v8 = (id *)MEMORY[0x1E0DC4AB8];
    return *v8;
  }
  if (v7 == *MEMORY[0x1E0CDD7C8])
  {
    v8 = (id *)MEMORY[0x1E0DC4A98];
    return *v8;
  }
  if (v7 == *MEMORY[0x1E0CDD7D0])
  {
    v8 = (id *)MEMORY[0x1E0DC4AA0];
    return *v8;
  }
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11 = (id)*MEMORY[0x1E0DC4A88];
  v10(v6, v2);
  return v11;
}

uint64_t _s10PodcastsUI12PUITextStyleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_1DA66E6BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4DA0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v30 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v30 - v18;
  if ((MEMORY[0x1DF09D0C0](a1, a2) & 1) == 0)
    return 0;
  v20 = type metadata accessor for PUITextStyle();
  v21 = a1;
  v22 = v20;
  v23 = *(int *)(v20 + 20);
  v31 = v21;
  sub_1DA47E2A8(v21 + v23, (uint64_t)v19);
  v32 = v22;
  v33 = a2;
  sub_1DA47E2A8(a2 + *(int *)(v22 + 20), (uint64_t)v17);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1DA47E2A8((uint64_t)v19, (uint64_t)v10);
  sub_1DA47E2A8((uint64_t)v17, v24);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1, v4) != 1)
  {
    sub_1DA47E2A8((uint64_t)v10, (uint64_t)v14);
    if (v25(v24, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v24, v4);
      sub_1DA47E32C(&qword_1EDAE48A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDD6F8], MEMORY[0x1E0CDD710]);
      v27 = sub_1DA66F850();
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v7, v4);
      sub_1DA47E2F0((uint64_t)v17, &qword_1EDAE1E60);
      sub_1DA47E2F0((uint64_t)v19, &qword_1EDAE1E60);
      v28(v14, v4);
      sub_1DA47E2F0((uint64_t)v10, &qword_1EDAE1E60);
      if ((v27 & 1) == 0)
        return 0;
      goto LABEL_11;
    }
    sub_1DA47E2F0((uint64_t)v17, &qword_1EDAE1E60);
    sub_1DA47E2F0((uint64_t)v19, &qword_1EDAE1E60);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_7:
    sub_1DA47E2F0((uint64_t)v10, &qword_1EDAE4DA0);
    return 0;
  }
  sub_1DA47E2F0((uint64_t)v17, &qword_1EDAE1E60);
  sub_1DA47E2F0((uint64_t)v19, &qword_1EDAE1E60);
  if (v25(v24, 1, v4) != 1)
    goto LABEL_7;
  sub_1DA47E2F0((uint64_t)v10, &qword_1EDAE1E60);
LABEL_11:
  v29 = *(int *)(v32 + 24);
  if ((*(_BYTE *)(v31 + v29 + 8) & 1) != 0)
  {
    if ((*(_BYTE *)(v33 + v29 + 8) & 1) != 0)
      return 1;
  }
  else if ((*(_BYTE *)(v33 + v29 + 8) & 1) == 0 && (sub_1DA66E668() & 1) != 0)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1DA47E2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA47E2F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DA47E32C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1DF0A039C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DA47E36C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1DA47E374(v1, a1);
}

void sub_1DA47E374(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  id v5;
  void *v6;

  swift_beginAccess();
  v4 = *(void **)(a1 + 16);
  v5 = objc_msgSend(v4, sel_superview);
  swift_beginAccess();
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;

  *a2 = v4;
}

uint64_t UITraitCollection.interfaceIdiomIsMac.getter()
{
  return byte_1F026A3E0;
}

uint64_t _s10PodcastsUI17NowPlayingArtworkO4DataO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void **v20;
  int EnumCaseMultiPayload;
  char v22;
  uint64_t (*v23)(void);
  void *v24;
  void *v25;
  uint64_t v27;

  v4 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NowPlayingArtwork.Data();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (void **)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v27 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (void **)((char *)&v27 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0A60);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (void **)&v19[*(int *)(v17 + 48)];
  sub_1DA525A18(a1, (uint64_t)v19);
  sub_1DA525A18(a2, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1DA525A18((uint64_t)v19, (uint64_t)v15);
    v24 = *v15;
    if (!swift_getEnumCaseMultiPayload())
    {
LABEL_8:
      v25 = *v20;
      sub_1DA47EA70();
      v22 = sub_1DA6701A4();

      goto LABEL_9;
    }
LABEL_6:

LABEL_11:
    sub_1DA66B2CC((uint64_t)v19);
    v22 = 0;
    return v22 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1DA525A18((uint64_t)v19, (uint64_t)v10);
    v24 = *v10;
    if (swift_getEnumCaseMultiPayload() == 2)
      goto LABEL_8;
    goto LABEL_6;
  }
  sub_1DA525A18((uint64_t)v19, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DA47F880((uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    goto LABEL_11;
  }
  sub_1DA51C1BC((uint64_t)v20, (uint64_t)v6);
  v22 = MEMORY[0x1DF09B3C8](v13, v6);
  v23 = MEMORY[0x1E0D7D7F0];
  sub_1DA47F880((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  sub_1DA47F880((uint64_t)v13, (uint64_t (*)(_QWORD))v23);
LABEL_9:
  sub_1DA47F880((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
  return v22 & 1;
}

uint64_t _s4DataOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id *v10;
  int v11;
  id v12;
  id *v13;
  int v14;
  id v15;
  id *v16;
  int v17;
  id v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(unsigned __int8 *)(a2 + 32);
    swift_bridgeObjectRetain();
    if (v5 == 255)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    }
    else
    {
      v6 = *(_QWORD *)(a2 + 16);
      v7 = *(_QWORD *)(a2 + 24);
      sub_1DA481390(v6, v7, v5);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v7;
      *(_BYTE *)(a1 + 32) = v5;
    }
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v10 = (id *)(a2 + 56);
    v11 = *(unsigned __int8 *)(a2 + 64);
    if (v11 == 255)
    {
      *(_QWORD *)(a1 + 56) = *v10;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    }
    else
    {
      v12 = *v10;
      sub_1DA4E762C(*v10, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v12;
      *(_BYTE *)(a1 + 64) = v11;
    }
    v13 = (id *)(a2 + 72);
    v14 = *(unsigned __int8 *)(a2 + 80);
    if (v14 == 255)
    {
      *(_QWORD *)(a1 + 72) = *v13;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    }
    else
    {
      v15 = *v13;
      sub_1DA4E762C(*v13, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v15;
      *(_BYTE *)(a1 + 80) = v14;
    }
    v16 = (id *)(a2 + 88);
    v17 = *(unsigned __int8 *)(a2 + 96);
    if (v17 == 255)
    {
      *(_QWORD *)(a1 + 88) = *v16;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    }
    else
    {
      v18 = *v16;
      sub_1DA4E762C(*v16, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v18;
      *(_BYTE *)(a1 + 96) = v17;
    }
    v19 = (id *)(a2 + 104);
    v20 = *(unsigned __int8 *)(a2 + 112);
    if (v20 == 255)
    {
      *(_QWORD *)(a1 + 104) = *v19;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    }
    else
    {
      v21 = *v19;
      sub_1DA4E762C(*v19, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v21;
      *(_BYTE *)(a1 + 112) = v20;
    }
    v22 = (id *)(a2 + 120);
    v23 = *(unsigned __int8 *)(a2 + 128);
    if (v23 == 255)
    {
      *(_QWORD *)(a1 + 120) = *v22;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    }
    else
    {
      v24 = *v22;
      sub_1DA4E762C(*v22, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v24;
      *(_BYTE *)(a1 + 128) = v23;
    }
    *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
    v25 = (int *)sub_1DA66CA0C();
    v26 = v25[11];
    v27 = a1 + v26;
    v28 = a2 + v26;
    v29 = sub_1DA66C928();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    v30 = v25[12];
    v31 = (_QWORD *)(a1 + v30);
    v32 = (_QWORD *)(a2 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    *(_BYTE *)(a1 + v25[13]) = *(_BYTE *)(a2 + v25[13]);
    *(_BYTE *)(a1 + v25[14]) = *(_BYTE *)(a2 + v25[14]);
    *(_BYTE *)(a1 + v25[15]) = *(_BYTE *)(a2 + v25[15]);
    v34 = v25[16];
    v35 = (_QWORD *)(a1 + v34);
    v36 = (_QWORD *)(a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v9 = v8;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void _s4DataOwxx(uint64_t a1)
{
  int EnumCaseMultiPayload;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
LABEL_4:

    return;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
      return;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 != 255)
    sub_1DA47F868(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v3);
  v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 != 255)
    sub_1DA4E7898(*(id *)(a1 + 56), v4);
  v5 = *(unsigned __int8 *)(a1 + 80);
  if (v5 != 255)
    sub_1DA4E7898(*(id *)(a1 + 72), v5);
  v6 = *(unsigned __int8 *)(a1 + 96);
  if (v6 != 255)
    sub_1DA4E7898(*(id *)(a1 + 88), v6);
  v7 = *(unsigned __int8 *)(a1 + 112);
  if (v7 != 255)
    sub_1DA4E7898(*(id *)(a1 + 104), v7);
  v8 = *(unsigned __int8 *)(a1 + 128);
  if (v8 != 255)
    sub_1DA4E7898(*(id *)(a1 + 120), v8);
  v9 = a1 + *(int *)(sub_1DA66CA0C() + 44);
  v10 = sub_1DA66C928();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

unint64_t sub_1DA47EA70()
{
  unint64_t result;

  result = qword_1EDADEE18;
  if (!qword_1EDADEE18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDADEE18);
  }
  return result;
}

uint64_t sub_1DA47EAAC()
{
  sub_1DA670798();
  sub_1DA66CEBC();
  sub_1DA47E32C(&qword_1EDAE4188, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD40]);
  sub_1DA66F7FC();
  return sub_1DA6707C8();
}

ValueMetadata *type metadata accessor for PageRenderContentTypes()
{
  return &type metadata for PageRenderContentTypes;
}

uint64_t getEnumTagSinglePayload for PreparedArtworkRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA47EB40()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t static LanguageAwareString.alwaysGenerateAttributedString.getter()
{
  swift_beginAccess();
  return byte_1F026E6C0;
}

uint64_t UIColor.hsbaComponents.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  _BYTE v4[40];

  sub_1DA47EBD4(v1, (uint64_t)v4);
  return sub_1DA4A686C((uint64_t)v4, a1, &qword_1EDAE1950);
}

void sub_1DA47EBD4(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v11 = 0xBFF0000000000000;
  v12[0] = 0xBFF0000000000000;
  v9 = 0xBFF0000000000000;
  v10 = 0xBFF0000000000000;
  v4 = objc_msgSend(a1, sel_getHue_saturation_brightness_alpha_, v12, &v11, &v10, &v9);

  if (v4)
  {
    v6 = v11;
    v5 = v12[0];
    v8 = v9;
    v7 = v10;
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v8;
  *(_BYTE *)(a2 + 32) = v4 ^ 1;
}

uint64_t sub_1DA47EC90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1DA47ECD8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE25D0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1DA47EDFC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA47EDFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

char *sub_1DA47EEF0(uint64_t a1, int64_t a2, _OWORD *a3)
{
  uint64_t v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  _OWORD *v14;
  char *result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1DA47ECD8(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  v14 = &v5[6 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v9)
    goto LABEL_20;
  v16 = v5[2];
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_26;
  if ((v18 & 0x8000000000000000) == 0)
  {
    result = (char *)(v14 + 3);
    v19 = (char *)&v5[6 * a2 + 4];
    if (v14 + 3 != (_OWORD *)v19 || result >= &v19[48 * v18])
      result = (char *)memmove(result, v19, 48 * v18);
    v20 = v5[2];
    v17 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v17)
    {
      v5[2] = v21;
LABEL_20:
      v22 = a3[1];
      *v14 = *a3;
      v14[1] = v22;
      v14[2] = a3[2];
      *(_QWORD *)v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA47F084(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1DA626258(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1DA47F0F0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DA47F0F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t *v33;
  double v34;
  uint64_t v35;
  uint64_t *v36;
  double v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t i;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  double *__dst;

  v3 = a1[1];
  result = sub_1DA670678();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v92 = *a1;
      v93 = *a1 + 40;
      v94 = -1;
      for (i = 1; i != v3; ++i)
      {
        v96 = *(double *)(v92 + 48 * i + 40);
        v97 = v94;
        v98 = v93;
        do
        {
          if (v96 >= *(double *)v98)
            break;
          if (!v92)
            goto LABEL_141;
          v99 = v98 + 8;
          v100 = *(_QWORD *)(v98 + 8);
          v101 = *(_OWORD *)(v98 + 16);
          v102 = *(_OWORD *)(v98 + 32);
          v103 = *(_OWORD *)(v98 - 24);
          *(_OWORD *)(v98 + 8) = *(_OWORD *)(v98 - 40);
          *(_OWORD *)(v98 + 24) = v103;
          v104 = *(_OWORD *)(v98 - 8);
          *(_QWORD *)(v98 - 40) = v100;
          *(_OWORD *)(v98 - 32) = v101;
          *(_OWORD *)(v98 - 16) = v102;
          *(double *)v98 = v96;
          v98 -= 48;
          *(_OWORD *)(v99 + 32) = v104;
        }
        while (!__CFADD__(v97++, 1));
        v93 += 48;
        --v94;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v114 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v106 = v12;
      v116 = v9;
      if (v13 >= 2)
      {
        v107 = *v114;
        do
        {
          v108 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v107)
            goto LABEL_145;
          v109 = v106;
          v110 = *(_QWORD *)&v106[16 * v108 + 32];
          v111 = *(_QWORD *)&v106[16 * v13 + 24];
          sub_1DA5E6EDC((double *)(v107 + 48 * v110), (double *)(v107 + 48 * *(_QWORD *)&v106[16 * v13 + 16]), v107 + 48 * v111, __dst);
          if (v1)
            break;
          if (v111 < v110)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v109 = sub_1DA5E752C((uint64_t)v109);
          if (v108 >= *((_QWORD *)v109 + 2))
            goto LABEL_134;
          v112 = &v109[16 * v108 + 32];
          *(_QWORD *)v112 = v110;
          *((_QWORD *)v112 + 1) = v111;
          v113 = *((_QWORD *)v109 + 2);
          if (v13 > v113)
            goto LABEL_135;
          memmove(&v109[16 * v13 + 16], &v109[16 * v13 + 32], 16 * (v113 - v13));
          v106 = v109;
          *((_QWORD *)v109 + 2) = v113 - 1;
          v13 = v113 - 1;
        }
        while (v113 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v116 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v116 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1DA66FB08();
    *(_QWORD *)(v8 + 16) = v7;
    v116 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v115 = *a1 + 136;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v117 = v6;
  v118 = v3;
  v119 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 48 * v10 + 40);
      v16 = *(double *)(v11 + 48 * v14 + 40);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v115 + 48 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 6;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 48 * v10;
          v21 = 48 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = (_OWORD *)(v11 + v21);
              v25 = *(_QWORD *)(v11 + v21);
              v26 = v11 + v20;
              v27 = *(_QWORD *)(v11 + v21 + 40);
              v28 = *(_OWORD *)(v11 + v21 + 8);
              v29 = *(_OWORD *)(v11 + v21 + 24);
              v31 = *(_OWORD *)(v11 + v20 - 32);
              v30 = *(_OWORD *)(v11 + v20 - 16);
              *v24 = *(_OWORD *)(v11 + v20 - 48);
              v24[1] = v31;
              v24[2] = v30;
              *(_QWORD *)(v26 - 48) = v25;
              *(_OWORD *)(v26 - 40) = v28;
              *(_OWORD *)(v26 - 24) = v29;
              *(_QWORD *)(v26 - 8) = v27;
            }
            ++v23;
            v20 -= 48;
            v21 += 48;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v32 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v32 >= v3)
      v32 = v3;
    if (v32 < v14)
      break;
    if (v10 != v32)
    {
      v33 = (uint64_t *)(v11 + 48 * v10);
      do
      {
        v34 = *(double *)(v11 + 48 * v10 + 40);
        v35 = v14;
        v36 = v33;
        do
        {
          if (v34 >= *((double *)v36 - 1))
            break;
          if (!v11)
            goto LABEL_142;
          v37 = *(double *)v36;
          v38 = *(_OWORD *)(v36 + 1);
          v39 = *(_OWORD *)(v36 + 3);
          v40 = *((_OWORD *)v36 - 2);
          *(_OWORD *)v36 = *((_OWORD *)v36 - 3);
          *((_OWORD *)v36 + 1) = v40;
          *((_OWORD *)v36 + 2) = *((_OWORD *)v36 - 1);
          *(_OWORD *)(v36 - 5) = v38;
          *(_OWORD *)(v36 - 3) = v39;
          *((double *)v36 - 1) = v34;
          *((double *)v36 - 6) = v37;
          v36 -= 6;
          ++v35;
        }
        while (v10 != v35);
        ++v10;
        v33 += 6;
      }
      while (v10 != v32);
      v10 = v32;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1DA5E7198(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v42 = *((_QWORD *)v12 + 2);
    v41 = *((_QWORD *)v12 + 3);
    v13 = v42 + 1;
    v11 = v119;
    if (v42 >= v41 >> 1)
    {
      v91 = sub_1DA5E7198((char *)(v41 > 1), v42 + 1, 1, v12);
      v11 = v119;
      v12 = v91;
    }
    *((_QWORD *)v12 + 2) = v13;
    v43 = v12 + 32;
    v44 = &v12[16 * v42 + 32];
    *(_QWORD *)v44 = v14;
    *((_QWORD *)v44 + 1) = v10;
    if (v42)
    {
      while (1)
      {
        v45 = v13 - 1;
        if (v13 >= 4)
        {
          v50 = &v43[16 * v13];
          v51 = *((_QWORD *)v50 - 8);
          v52 = *((_QWORD *)v50 - 7);
          v56 = __OFSUB__(v52, v51);
          v53 = v52 - v51;
          if (v56)
            goto LABEL_120;
          v55 = *((_QWORD *)v50 - 6);
          v54 = *((_QWORD *)v50 - 5);
          v56 = __OFSUB__(v54, v55);
          v48 = v54 - v55;
          v49 = v56;
          if (v56)
            goto LABEL_121;
          v57 = v13 - 2;
          v58 = &v43[16 * v13 - 32];
          v60 = *(_QWORD *)v58;
          v59 = *((_QWORD *)v58 + 1);
          v56 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          if (v56)
            goto LABEL_123;
          v56 = __OFADD__(v48, v61);
          v62 = v48 + v61;
          if (v56)
            goto LABEL_126;
          if (v62 >= v53)
          {
            v80 = &v43[16 * v45];
            v82 = *(_QWORD *)v80;
            v81 = *((_QWORD *)v80 + 1);
            v56 = __OFSUB__(v81, v82);
            v83 = v81 - v82;
            if (v56)
              goto LABEL_130;
            v73 = v48 < v83;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v74 = *((_QWORD *)v12 + 4);
            v75 = *((_QWORD *)v12 + 5);
            v56 = __OFSUB__(v75, v74);
            v67 = v75 - v74;
            v68 = v56;
            goto LABEL_77;
          }
          v47 = *((_QWORD *)v12 + 4);
          v46 = *((_QWORD *)v12 + 5);
          v56 = __OFSUB__(v46, v47);
          v48 = v46 - v47;
          v49 = v56;
        }
        if ((v49 & 1) != 0)
          goto LABEL_122;
        v57 = v13 - 2;
        v63 = &v43[16 * v13 - 32];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v66 = __OFSUB__(v64, v65);
        v67 = v64 - v65;
        v68 = v66;
        if (v66)
          goto LABEL_125;
        v69 = &v43[16 * v45];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v56 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v56)
          goto LABEL_128;
        if (__OFADD__(v67, v72))
          goto LABEL_129;
        if (v67 + v72 >= v48)
        {
          v73 = v48 < v72;
LABEL_83:
          if (v73)
            v45 = v57;
          goto LABEL_85;
        }
LABEL_77:
        if ((v68 & 1) != 0)
          goto LABEL_124;
        v76 = &v43[16 * v45];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v56 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v56)
          goto LABEL_127;
        if (v79 < v67)
          goto LABEL_15;
LABEL_85:
        v84 = v45 - 1;
        if (v45 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v85 = v12;
        v86 = &v43[16 * v84];
        v87 = *(_QWORD *)v86;
        v88 = &v43[16 * v45];
        v89 = *((_QWORD *)v88 + 1);
        sub_1DA5E6EDC((double *)(v11 + 48 * *(_QWORD *)v86), (double *)(v11 + 48 * *(_QWORD *)v88), v11 + 48 * v89, __dst);
        if (v1)
          goto LABEL_93;
        if (v89 < v87)
          goto LABEL_117;
        if (v45 > *((_QWORD *)v85 + 2))
          goto LABEL_118;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v43[16 * v84 + 8] = v89;
        v90 = *((_QWORD *)v85 + 2);
        if (v45 >= v90)
          goto LABEL_119;
        v12 = v85;
        v13 = v90 - 1;
        memmove(&v43[16 * v45], v88 + 16, 16 * (v90 - 1 - v45));
        *((_QWORD *)v85 + 2) = v90 - 1;
        v11 = v119;
        if (v90 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v117;
    v3 = v118;
    if (v10 >= v118)
    {
      v9 = v116;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1DA670564();
  __break(1u);
  return result;
}

uint64_t PrepareUIImageProcessingStep.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA481308(v1, a1);
}

uint64_t destroy for PreparedArtworkRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA66CEBC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1DA47F868(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1DA47F880(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DA47F8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  return __swift_destroy_boxed_opaque_existential_0((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1DA47F8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1DA66CEBC();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v5 + 64)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA47F978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1DA66CEBC();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v5 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1DA47F9DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_1DA481390(a1, a2, a3);
  return a1;
}

uint64_t sub_1DA47F9F0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_1DA47F868(a1, a2, a3);
  return a1;
}

uint64_t type metadata accessor for AssetCaches()
{
  uint64_t result;

  result = qword_1EDADEDF0;
  if (!qword_1EDADEDF0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DA47FA40(id a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v7;
  void *v8;
  uint64_t v9;
  int64_t v10;
  const __CFString *v11;
  uint64_t CharactersPtr;
  const char *CStringPtr;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  UniChar *v23;
  int64_t v24;
  UniChar v25;
  uint64_t v26;
  BOOL v27;
  int v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  UniChar *v34;
  uint64_t v35;
  UniChar v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  int64_t v47;
  int64_t v48;
  _BOOL4 v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  BOOL v57;
  int v58;
  int64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  BOOL v66;
  id v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  id v75;
  id v76;
  char v77;
  char v78;
  char v79;
  _QWORD *v80;
  _QWORD *v81;
  _QWORD *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  __CFString *v93;
  char v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  _QWORD *v98;
  int64_t v99;
  uint64_t v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  _QWORD *v107;
  uint64_t v108;
  int v109;
  id v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  UniChar buffer[8];
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  CFStringRef theString;
  UniChar *v134;
  const char *v135;
  uint64_t v136;
  int64_t v137;
  int64_t v138;
  int64_t v139;
  uint64_t v140;
  CFRange v141;
  CFRange v142;

  v140 = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    v7 = objc_msgSend(a1, sel_mutableString);
  }
  else
  {
    if (!a2)
    {
      if (qword_1F0268778 != -1)
        goto LABEL_255;
      goto LABEL_236;
    }
    v7 = a2;
  }
  v8 = v7;
  v9 = (uint64_t)objc_msgSend(v7, sel_length);
  if (v9 < 1)
  {
    if (qword_1F0268778 != -1)
      swift_once();
    v14 = (char *)(id)qword_1EDADE788;

    goto LABEL_237;
  }
  v10 = v9;
  v87 = a1;
  v11 = v8;
  CharactersPtr = (uint64_t)CFStringGetCharactersPtr(v11);
  v86 = a3;
  if (CharactersPtr)
    CStringPtr = 0;
  else
    CStringPtr = CFStringGetCStringPtr(v11, 0x600u);
  v131 = 0u;
  v132 = 0u;
  v129 = 0u;
  v130 = 0u;
  v127 = 0u;
  v128 = 0u;
  v125 = 0u;
  v126 = 0u;
  v123 = 0u;
  v124 = 0u;
  v121 = 0u;
  v122 = 0u;
  v119 = 0u;
  v120 = 0u;
  *(_OWORD *)buffer = 0u;
  v118 = 0u;
  v93 = (__CFString *)v11;
  theString = v11;
  v134 = (UniChar *)CharactersPtr;
  v135 = CStringPtr;
  v136 = 0;
  v139 = 0;
  v137 = v10;
  v138 = 0;
  v15 = sub_1DA66C034();
  v100 = sub_1DA66C034();
  v107 = 0;
  v108 = 0;
  v17 = 0;
  v95 = 0;
  v96 = 0;
  v97 = 0;
  v113 = 0;
  v103 = 0;
  v94 = 0;
  v85 = *MEMORY[0x1E0DC1258];
  v84 = *MEMORY[0x1E0DC1178];
  v102 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v114 = v15;
  v115 = v15;
  v112 = v15;
  v98 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_13:
  v18 = 0;
  v91 = 0;
  v92 = 0;
  v19 = 0;
  v20 = 0;
  v89 = v17;
LABEL_14:
  v88 = v19;
  v21 = v17;
LABEL_15:
  v99 = v21;
  v101 = v18;
  v109 = 0;
  v22 = 0;
  LOBYTE(v21) = -1;
  v104 = -1;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v17 < 0 || (v21 = v137, v137 <= v17))
        {
          CharactersPtr = 0;
LABEL_23:
          v26 = 1;
          v27 = __OFADD__(v17++, 1);
          if (v27)
            goto LABEL_242;
          goto LABEL_24;
        }
        v23 = v134;
        if (v134)
        {
          v24 = v136 + v17;
LABEL_21:
          v25 = v23[v24];
          goto LABEL_33;
        }
        if (!v135)
        {
          if (v139 <= v17 || (v47 = v138, v138 > v17))
          {
            v48 = v17 - 4;
            if ((unint64_t)v17 < 4)
              v48 = 0;
            if (v48 + 128 < v137)
              v21 = v48 + 128;
            v138 = v48;
            v139 = v21;
            v141.location = v136 + v48;
            v141.length = v21 - v48;
            CFStringGetCharacters(theString, v141, buffer);
            v47 = v138;
          }
          v24 = v17 - v47;
          v23 = buffer;
          goto LABEL_21;
        }
        v25 = v135[v136 + v17];
LABEL_33:
        if ((unsigned __int16)((unsigned __int16)(v25 + 9216) >> 10) <= 0x3Eu)
        {
          LODWORD(v21) = v25 >> 11;
          if ((_DWORD)v21 == 27)
            goto LABEL_90;
          CharactersPtr = v25;
          goto LABEL_23;
        }
        v21 = v137;
        if (__OFSUB__(v137, 1))
          goto LABEL_244;
        if (v17 >= v137 - 1 || (CharactersPtr = v17 + 1, v137 <= v17 + 1))
        {
LABEL_90:
          v28 = 0;
          ++v17;
          LODWORD(v21) = 1;
          v29 = 1;
          v30 = 1;
          v26 = 1;
          goto LABEL_91;
        }
        v34 = v134;
        if (v134)
        {
          v35 = v136 + CharactersPtr;
        }
        else
        {
          if (v135)
          {
            v36 = v135[v136 + CharactersPtr];
            goto LABEL_89;
          }
          if (v139 <= CharactersPtr || (v59 = v138, v138 > CharactersPtr))
          {
            v60 = v17 - 3;
            if ((unint64_t)v17 < 3)
              v60 = 0;
            if (v60 + 128 < v137)
              v21 = v60 + 128;
            v138 = v60;
            v139 = v21;
            v142.location = v136 + v60;
            v142.length = v21 - v60;
            CFStringGetCharacters(theString, v142, buffer);
            v59 = v138;
          }
          v35 = CharactersPtr - v59;
          v34 = buffer;
        }
        v36 = v34[v35];
LABEL_89:
        if ((unsigned __int16)((unsigned __int16)(v36 + 0x2000) >> 10) < 0x3Fu)
          goto LABEL_90;
        LODWORD(v21) = ((unsigned __int16)(v25 + 10240) << 10) + (unsigned __int16)(v36 + 9216);
        CharactersPtr = (v21 + 0x10000);
        v26 = 2;
        v27 = __OFADD__(v17, 2);
        v17 += 2;
        if (v27)
        {
LABEL_242:
          __break(1u);
LABEL_243:
          __break(1u);
LABEL_244:
          __break(1u);
LABEL_245:
          __break(1u);
LABEL_246:
          __break(1u);
          goto LABEL_247;
        }
LABEL_24:
        if (CharactersPtr >> 1 == 4103)
        {
LABEL_25:
          v28 = 0;
LABEL_26:
          LODWORD(v21) = 1;
LABEL_27:
          v29 = 1;
          v30 = 1;
        }
        else
        {
          v31 = AMPGetBidiClass(CharactersPtr, v16);
          v28 = 0;
          LODWORD(v21) = 1;
          v29 = 1;
          v30 = 1;
          switch(v31)
          {
            case 8:
              v32 = v113 + 1;
              if (v113 == -1)
                goto LABEL_245;
              v33 = v32 == 1;
              goto LABEL_59;
            case 9:
              v32 = v113;
              if (v113)
              {
                v32 = v113 - 1;
                v33 = v113 == 1;
LABEL_59:
                v28 = v33;
              }
              else
              {
                v28 = 0;
              }
              CharactersPtr = 1;
              v27 = __OFADD__(v22, v26);
              v22 += v26;
              if (v27)
                goto LABEL_243;
LABEL_66:
              if (v32)
                v45 = 1;
              else
                v45 = v28;
              if (v45 == 1)
              {
                v113 = v32;
                v28 = 0;
                LODWORD(v21) = 0;
                v109 |= v104 != -1;
              }
              else
              {
                v113 = 0;
                v28 = 0;
                LODWORD(v21) = 0;
                v29 = 1;
                v30 = 1;
                switch(v31)
                {
                  case 0:
                  case 7:
                  case 13:
                  case 14:
                    goto LABEL_91;
                  case 1:
                    if (v104 != -1)
                    {
                      v113 = 0;
                      v28 = 0;
                      LODWORD(v21) = 0;
                      v57 = v104 == 0;
                      goto LABEL_143;
                    }
                    v113 = 0;
                    v104 = 0;
                    v28 = 0;
                    LODWORD(v21) = 0;
                    v29 = 1;
                    goto LABEL_91;
                  case 2:
                    if (v104 == -1)
                    {
                      v113 = 0;
                      v28 = 0;
                      LODWORD(v21) = 0;
                      v104 = 1;
                      v29 = 1;
                      goto LABEL_91;
                    }
                    v113 = 0;
                    v28 = 0;
                    LODWORD(v21) = 0;
                    v57 = v104 == 1;
LABEL_143:
                    v58 = !v57;
                    v109 |= v58;
                    goto LABEL_27;
                  case 3:
                    if (sub_1DA66C034() != v114)
                      goto LABEL_131;
                    if (sub_1DA66C034() == v115)
                    {
                      v114 = v17 - v26;
                      if (__OFSUB__(v17, v26))
                        goto LABEL_262;
LABEL_131:
                      v30 = CharactersPtr;
                    }
                    else
                    {
                      v30 = 1;
                      v103 = v108;
                      v114 = v115;
                    }
                    v61 = v103 + v26;
                    if (__OFADD__(v103, v26))
                      goto LABEL_251;
                    v103 += v26;
                    v62 = v61 + v114;
                    v100 = v62 - 1;
                    if (__OFSUB__(v62, 1))
                      goto LABEL_252;
                    v113 = 0;
                    v28 = 0;
                    LODWORD(v21) = 0;
                    v29 = CharactersPtr;
                    goto LABEL_91;
                  case 4:
                    if (sub_1DA66C034() == v114)
                    {
                      v113 = 0;
                      v28 = 0;
                      LODWORD(v21) = 0;
                      v30 = 1;
                      v29 = CharactersPtr;
                      goto LABEL_91;
                    }
                    v27 = __OFADD__(v103, v26);
                    v103 += v26;
                    if (v27)
                      goto LABEL_258;
                    goto LABEL_72;
                  case 5:
                    if (sub_1DA66C034() == v114)
                    {
                      if (sub_1DA66C034() == v115)
                      {
                        if (__OFSUB__(v17, v26))
                          goto LABEL_260;
                        v115 = v17 - v26;
                        v27 = __OFADD__(v108, v26);
                        v108 += v26;
                        if (v27)
                          goto LABEL_265;
                      }
                      else
                      {
                        v27 = __OFADD__(v108, v26);
                        v108 += v26;
                        if (v27)
                          goto LABEL_264;
                      }
                    }
                    else
                    {
                      v27 = __OFADD__(v103, v26);
                      v103 += v26;
                      if (v27)
                        goto LABEL_257;
                    }
LABEL_72:
                    v113 = 0;
                    v28 = 0;
                    LODWORD(v21) = 0;
                    break;
                  case 6:
                    if (sub_1DA66C034() == v114)
                    {
                      if (sub_1DA66C034() == v115)
                      {
                        v115 = v17 - v26;
                        if (__OFSUB__(v17, v26))
                          goto LABEL_261;
                      }
                      else
                      {
                        v27 = __OFADD__(v108, v26);
                        v108 += v26;
                        if (v27)
                          goto LABEL_263;
                      }
                    }
                    else
                    {
                      v27 = __OFADD__(v103, v26);
                      v103 += v26;
                      if (v27)
                        goto LABEL_259;
                    }
                    goto LABEL_72;
                  case 8:
                  case 9:
                    goto LABEL_72;
                  default:
                    goto LABEL_270;
                }
              }
              v29 = CharactersPtr;
              v30 = CharactersPtr;
              break;
            case 10:
              goto LABEL_48;
            case 11:
              break;
            case 12:
              if (CharactersPtr > 0x7F)
              {
                v63 = (CharactersPtr & 0x3F) << 8;
                if (CharactersPtr >= 0x800)
                {
                  v64 = (v63 | (CharactersPtr >> 6) & 0x3F) << 8;
                  v65 = (((v64 | (CharactersPtr >> 12) & 0x3F) << 8) | (CharactersPtr >> 18))
                      - 2122219023;
                  v37 = (v64 | (CharactersPtr >> 12)) + 8487393;
                  if (WORD1(CharactersPtr))
                    v37 = v65;
                }
                else
                {
                  v37 = (v63 | (CharactersPtr >> 6)) + 33217;
                }
              }
              else
              {
                v37 = CharactersPtr + 1;
              }
              v116 = (v37 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v37) >> 3))));
              v38 = MEMORY[0x1DF09E320](&v116);
              v40 = sub_1DA4809F0(v38, v39);
              if ((v40 & 0x100000000) != 0)
                goto LABEL_269;
              v41 = v40;
              swift_bridgeObjectRelease();
              if ((v41 - 14) <= 0xFFFFFFFB && (v41 - 8232) >= 2 && v41 != 133)
                goto LABEL_25;
LABEL_48:
              LOBYTE(v21) = 40;
              if ((_DWORD)CharactersPtr == 8232)
              {
                if (__OFSUB__(v17, v26))
                  goto LABEL_246;
                v42 = v107;
                if (!v107)
                  v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v42 = sub_1DA5408D0(0, v42[2] + 1, 1, v42);
                v44 = v42[2];
                v43 = v42[3];
                v107 = v42;
                CharactersPtr = v44 + 1;
                if (v44 >= v43 >> 1)
                  v107 = sub_1DA5408D0((_QWORD *)(v43 > 1), v44 + 1, 1, v107);
                v107[2] = CharactersPtr;
                v107[v44 + 4] = v17 - v26;
                v28 = 1;
              }
              else
              {
                v28 = 1;
                if (v10 > v17 && (_DWORD)CharactersPtr == 13)
                {
                  CharactersPtr = (uint64_t)buffer;
                  AMPCFStringInlineBuffer.character(at:)(v17);
                  if ((v46 & 0x1FFFFFFFFLL) == 0xA)
                  {
                    ++v26;
                    ++v17;
                  }
                }
              }
              goto LABEL_26;
            default:
              CharactersPtr = 0;
              v32 = v113;
              v27 = __OFADD__(v22, v26);
              v22 += v26;
              if (!v27)
                goto LABEL_66;
              goto LABEL_243;
          }
        }
LABEL_91:
        v27 = __OFADD__(v20, v26);
        v20 += v26;
        if (v27)
        {
          __break(1u);
LABEL_239:
          v102 = (_QWORD *)CharactersPtr;
          goto LABEL_240;
        }
        v49 = v17 == v10;
        if (v17 == v10)
        {
          v30 = 1;
          v50 = 1;
        }
        else
        {
          v50 = v21;
        }
        CharactersPtr = v17 == v10 ? 1 : v29;
        if (v30 != 1)
          break;
        v51 = sub_1DA66C034();
        LOBYTE(v21) = v115;
        if (v51 == v115)
        {
          if (v17 == v10)
            v28 = 1;
          if ((CharactersPtr & 1) == 0)
            goto LABEL_111;
          goto LABEL_110;
        }
        if ((CharactersPtr & 1) != 0)
        {
          v108 = 0;
          if (v17 == v10)
            v28 = 1;
          v115 = v112;
          goto LABEL_110;
        }
        v108 = 0;
        LOBYTE(v21) = v112;
        v115 = v112;
        if ((v50 & 1) != 0)
        {
          v49 = 0;
          v115 = v112;
          goto LABEL_188;
        }
      }
      v49 = 0;
      v50 = v21;
      if ((v29 & 1) == 0)
        goto LABEL_111;
LABEL_110:
      v52 = sub_1DA66C034();
      LOBYTE(v21) = v114;
      if (v52 != v114)
        break;
LABEL_111:
      if (v50)
        goto LABEL_188;
      if (v49)
        goto LABEL_240;
    }
    if (__OFSUB__(v114 + v103, 1))
      break;
    if (v100 < v114 + v103 - 1)
    {
      v53 = v100 - v114;
      if (__OFSUB__(v100, v114))
        goto LABEL_253;
      v103 = v53 + 1;
      if (__OFADD__(v53, 1))
        goto LABEL_254;
    }
    v90 = a4;
    CharactersPtr = (uint64_t)v102;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      CharactersPtr = (uint64_t)sub_1DA481018(0, v102[2] + 1, 1, v102);
    v55 = *(_QWORD *)(CharactersPtr + 16);
    v54 = *(_QWORD *)(CharactersPtr + 24);
    if (v55 >= v54 >> 1)
      CharactersPtr = (uint64_t)sub_1DA481018((_QWORD *)(v54 > 1), v55 + 1, 1, (_QWORD *)CharactersPtr);
    *(_QWORD *)(CharactersPtr + 16) = v55 + 1;
    v56 = CharactersPtr + 16 * v55;
    *(_QWORD *)(v56 + 32) = v114;
    *(_QWORD *)(v56 + 40) = v103;
    swift_bridgeObjectRelease();
    v100 = sub_1DA66C034();
    if ((v50 & 1) != 0)
    {
      v102 = (_QWORD *)CharactersPtr;
      v103 = 0;
      v114 = v112;
      a4 = v90;
LABEL_188:
      CharactersPtr = v104;
      v18 = v101;
      if (v104 == 1)
      {
        v66 = __CFADD__(v91++, 1);
        if (!v66)
          goto LABEL_194;
        goto LABEL_249;
      }
      if (!v104)
      {
        v66 = __CFADD__(v92++, 1);
        if (v66)
          goto LABEL_250;
LABEL_194:
        if (v22 >= 1)
          goto LABEL_198;
LABEL_199:
        if (v28)
          goto LABEL_209;
        v21 = v17;
        if (v49)
          goto LABEL_240;
        goto LABEL_15;
      }
      if (v22 < 1)
        goto LABEL_199;
      v18 = v101 + 1;
      if (v101 == (char *)-1)
      {
        __break(1u);
LABEL_257:
        __break(1u);
LABEL_258:
        __break(1u);
LABEL_259:
        __break(1u);
LABEL_260:
        __break(1u);
LABEL_261:
        __break(1u);
LABEL_262:
        __break(1u);
LABEL_263:
        __break(1u);
LABEL_264:
        __break(1u);
LABEL_265:
        __break(1u);
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
      }
LABEL_198:
      if ((v109 & 1) == 0)
        goto LABEL_199;
      if (v87)
      {
        v67 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
        v110 = v87;
        v105 = objc_msgSend(v67, sel_initWithInteger_, v104);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
        v68 = swift_allocObject();
        *(_OWORD *)(v68 + 16) = xmmword_1DA67B2A0;
        *(_QWORD *)(v68 + 32) = v105;
        v116 = v68;
        sub_1DA66FAB4();
        sub_1DA47D774(0, (unint64_t *)&qword_1EDADE760);
        v106 = v105;
        v69 = (void *)sub_1DA66FA90();
        swift_bridgeObjectRelease();
        CharactersPtr = (uint64_t)v110;
        objc_msgSend(v110, sel_addAttribute_value_range_, v85, v69, v99, v22);

      }
      if ((v28 & 1) == 0)
      {
        v19 = 1;
        LOBYTE(v21) = 1;
        v94 = 1;
        if (v49)
        {
LABEL_247:
          v94 = v21;
          goto LABEL_240;
        }
        goto LABEL_14;
      }
      v88 = 1;
      v94 = 1;
LABEL_209:
      if (__CFADD__(v96, v92))
        goto LABEL_266;
      if (__CFADD__(v97, v91))
        goto LABEL_267;
      v66 = __CFADD__(v95, v18);
      v95 = &v18[(_QWORD)v95];
      if (v66)
        goto LABEL_268;
      v96 += v92;
      CharactersPtr = (uint64_t)objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
      v111 = WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v18, v92, v91);
      if ((v111[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough] & 1) != 0)
        v70 = 1;
      else
        v70 = v111[OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts] - 1;
      v97 += v91;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v98 = sub_1DA480F0C(0, v98[2] + 1, 1, v98);
      v72 = v98[2];
      v71 = v98[3];
      if (v72 >= v71 >> 1)
        v98 = sub_1DA480F0C((_QWORD *)(v71 > 1), v72 + 1, 1, v98);
      v98[2] = v72 + 1;
      v73 = &v98[4 * v72];
      v73[4] = v89;
      v73[5] = v20;
      v73[6] = v70;
      *((_BYTE *)v73 + 56) = v88 & 1;
      if (v87)
      {
        if (v70 == -1)
        {
          v74 = &qword_1EDAE50F0;
          if (qword_1EDAE5210 != -1)
          {
            swift_once();
            v74 = &qword_1EDAE50F0;
          }
        }
        else if (v70 == 1)
        {
          v74 = &qword_1EDAE4FC8;
          if (qword_1EDAE4FD8 != -1)
          {
            swift_once();
            v74 = &qword_1EDAE4FC8;
          }
        }
        else
        {
          if (v70)
          {
            while (1)
            {
LABEL_270:
              sub_1DA670570();
              __break(1u);
            }
          }
          v74 = &qword_1EDAE50E8;
          if (qword_1EDAE5208 != -1)
          {
            swift_once();
            v74 = &qword_1EDAE50E8;
          }
        }
        v75 = (id)*v74;
        CharactersPtr = v89;
        v76 = sub_1DA480CC4(v87, v89, v20, (id)v70, v86, v75);
        v78 = v77;

        if ((v78 & 1) != 0)
        {
          objc_msgSend(v87, sel_addAttribute_value_range_, v84, v76, v89, v20);

          goto LABEL_231;
        }

        if (v49)
        {
LABEL_240:
          v83 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
          v14 = WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v95, v96, v97);

          v80 = v107;
          v81 = v102;
          v82 = v98;
          v79 = v94;
          goto LABEL_241;
        }
      }
      else
      {
LABEL_231:

        if (v49)
          goto LABEL_240;
      }
      goto LABEL_13;
    }
    v102 = (_QWORD *)CharactersPtr;
    v103 = 0;
    LOBYTE(v21) = v112;
    v114 = v112;
    a4 = v90;
    if (v49)
      goto LABEL_239;
  }
  __break(1u);
LABEL_249:
  __break(1u);
LABEL_250:
  __break(1u);
LABEL_251:
  __break(1u);
LABEL_252:
  __break(1u);
LABEL_253:
  __break(1u);
LABEL_254:
  __break(1u);
LABEL_255:
  swift_once();
LABEL_236:
  v14 = (char *)(id)qword_1EDADE788;
LABEL_237:
  v79 = 0;
  v80 = 0;
  v81 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v82 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_241:
  *(_QWORD *)a4 = v81;
  *(_QWORD *)(a4 + 8) = v82;
  *(_QWORD *)(a4 + 16) = v14;
  *(_BYTE *)(a4 + 24) = v79 & 1;
  *(_QWORD *)(a4 + 32) = v80;
}

unint64_t sub_1DA4809F0(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1DA480ACC(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_1DA670438();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
        sub_1DA6704A4();
      v5 = sub_1DA6704B0();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1DA480ACC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1DA64D128(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1DA64D194(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

uint64_t type metadata accessor for WritingDirectionsCounts()
{
  return objc_opt_self();
}

char *WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(char *result, uint64_t a2, unint64_t a3)
{
  _BYTE *v3;
  char *v4;
  BOOL v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  objc_super v10;

  *(_QWORD *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_natural] = result;
  *(_QWORD *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft] = a3;
  v4 = &result[a2];
  if (__CFADD__(result, a2))
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = __CFADD__(v4, a3);
  v6 = &v4[a3];
  if (v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(_QWORD *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_total] = v6;
  v7 = result != 0;
  if (!a3)
  {
    if (a2)
      ++v7;
    *(_QWORD *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_significantValues] = v7;
    v3[OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts] = a2 != 0;
    v3[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough] = 0;
    v3[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLMinimal] = 0;
    goto LABEL_12;
  }
  if (a2)
    v8 = 2;
  else
    v8 = 1;
  *(_QWORD *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_significantValues] = v8 + v7;
  v3[OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts] = 1;
  if (!__CFADD__(a3, a2))
  {
    v9 = (float)a3 / (float)(a3 + a2);
    v3[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough] = v9 >= 0.4;
    v3[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLMinimal] = v9 >= 0.15;
LABEL_12:
    v10.receiver = v3;
    v10.super_class = (Class)type metadata accessor for WritingDirectionsCounts();
    return (char *)objc_msgSendSuper2(&v10, sel_init);
  }
LABEL_15:
  __break(1u);
  return result;
}

id sub_1DA480CC4(void *a1, uint64_t a2, uint64_t a3, id a4, id a5, void *a6)
{
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v16;
  void *v17;
  _QWORD v18[2];
  _OWORD v19[2];
  _BYTE v20[24];
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  if (a5)
    return objc_msgSend(a5, sel_paragraphStyleWithBaseWritingDirection_, a4);
  v18[0] = 0;
  v18[1] = 0;
  if (objc_msgSend(a1, sel_attribute_atIndex_effectiveRange_, *MEMORY[0x1E0DC1178], a2, v18))
  {
    sub_1DA670360();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_1DA480EC4((uint64_t)v19, (uint64_t)v20);
  if (!v21)
  {
    sub_1DA480E84((uint64_t)v20);
    return a6;
  }
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE5100);
  if ((swift_dynamicCast() & 1) == 0)
    return a6;
  v11 = v17;
  v12 = sub_1DA6701BC();
  if ((v14 & 1) != 0 || v12 != a2 || v13 != a3 || objc_msgSend(v17, sel_baseWritingDirection) != a4)
  {
    v16 = objc_msgSend(v17, sel_paragraphStyleWithBaseWritingDirection_, a4);

    return v16;
  }
  return v11;
}

uint64_t sub_1DA480E84(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5130);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA480EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1DA480F0C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE21E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA481220(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DA481018(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5128);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA481124(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1DA481124(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1DA6705DC();
  __break(1u);
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1EDAE5120);
}

char *sub_1DA481220(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA481308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreparedArtworkRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for PreparedArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66CEBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DA481390(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t type metadata accessor for PreparedArtworkRequest()
{
  uint64_t result;

  result = qword_1EDAE52D8;
  if (!qword_1EDAE52D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA4813E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t AMPGetBidiClass(uint64_t a1, uint64_t a2)
{
  unsigned int v3;

  if ((_DWORD)a1 == 65532)
    return 12;
  v3 = MEMORY[0x1DF0A05D0](a1, a2);
  if (v3 > 0x16)
    return 0;
  else
    return qword_1DA6771A0[v3];
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1DF0A0384]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1DF0A02F4](a1, v6, a5);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1DF0A0390](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for PrepareUIImageProcessingStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PrepareUIImageProcessingStep);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t type metadata accessor for LibraryImageProvider()
{
  uint64_t result;

  result = qword_1EDAE12C8;
  if (!qword_1EDAE12C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t EffectsArtworkProcessingStep.publisher.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  unint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t result;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD v60[2];
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[5];

  v67 = a2;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE45C0);
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v61 = (char *)v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4148);
  v65 = *(_QWORD *)(v66 - 8);
  v4 = MEMORY[0x1E0C80A78](v66);
  v64 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v4);
  v80 = v6;
  v81 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1DA66CEBC();
  v86 = *(_QWORD *)(v76 - 8);
  v7 = MEMORY[0x1E0C80A78](v76);
  v74 = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v8;
  MEMORY[0x1E0C80A78](v7);
  v73 = (char *)v60 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFDF8);
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  MEMORY[0x1E0C80A78](v10);
  v70 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = sub_1DA483644();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v78 = v15;
  v85 = AssociatedConformanceWitness;
  v17 = sub_1DA66DF24();
  v69 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v60 - v19;
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v18);
  v23 = (char *)v60 - v22;
  v24 = *(int *)(a1 + 40);
  v83 = a1;
  v25 = v13;
  v26 = *(_QWORD *)(*(_QWORD *)(v84 + v24) + 16);
  v79 = v12;
  sub_1DA66D4B0();
  if (v26)
  {
    v77 = v25;
    sub_1DA66E128();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, AssociatedTypeWitness);
    MEMORY[0x1DF0A039C](MEMORY[0x1E0C95708], v17);
    v27 = sub_1DA66E11C();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v20, v17);
    v28 = v84;
    v29 = *(_QWORD *)(v84 + v24);
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      v31 = v86;
      v69 = *(_QWORD *)(v86 + 16);
      v60[1] = v29;
      swift_bridgeObjectRetain();
      v32 = v83;
      v33 = v80;
      v34 = v81;
      do
      {
        v85 = v30;
        v87[0] = v27;
        v35 = v73;
        v36 = v32;
        v37 = v76;
        ((void (*)(char *, uint64_t, uint64_t))v69)(v73, v28, v76);
        v38 = v82;
        v68 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
        v68(v34, v28, v36);
        v39 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v40 = v74;
        v39(v74, v35, v37);
        v41 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        v42 = (v33 + *(unsigned __int8 *)(v86 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
        v43 = swift_allocObject();
        v44 = v77;
        *(_QWORD *)(v43 + 16) = v79;
        *(_QWORD *)(v43 + 24) = v44;
        (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v43 + v41, v34, v36);
        v39((char *)(v43 + v42), v40, v37);
        sub_1DA66BE60();
        sub_1DA66DF78();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE5330);
        sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
        sub_1DA4841D4(&qword_1EDAE5328, (uint64_t *)&unk_1EDAE5330, MEMORY[0x1E0C96108]);
        v45 = v70;
        v32 = v83;
        v28 = v84;
        v31 = v86;
        v33 = v80;
        v34 = v81;
        sub_1DA66E230();
        swift_release();
        swift_release();
        sub_1DA4841D4(&qword_1EDADFDF0, &qword_1EDADFDF8, MEMORY[0x1E0C95B78]);
        v46 = v72;
        v47 = sub_1DA66E11C();
        v48 = v85;
        v27 = v47;
        swift_release();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v45, v46);
        v30 = v48 - 1;
      }
      while (v30);
      swift_bridgeObjectRelease();
      v49 = v82;
      v50 = v68;
    }
    else
    {
      v49 = v82;
      v32 = v83;
      v50 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
      v34 = v81;
    }
    v87[0] = v27;
    v50(v34, v28, v32);
    v53 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    v54 = swift_allocObject();
    v55 = v77;
    *(_QWORD *)(v54 + 16) = v79;
    *(_QWORD *)(v54 + 24) = v55;
    (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v54 + v53, v34, v32);
    sub_1DA66BE60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
    sub_1DA66CDA8();
    sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
    v56 = v61;
    sub_1DA66E200();
    swift_release();
    swift_release();
    MEMORY[0x1DF0A039C](&protocol conformance descriptor for EffectsArtworkProcessingStep<A>, v32);
    sub_1DA66D4D4();
    sub_1DA4841D4(&qword_1EDAE45B8, &qword_1EDAE45C0, MEMORY[0x1E0C95B48]);
    v57 = v63;
    sub_1DA66CC64();
    v58 = v64;
    sub_1DA66E0F8();
    sub_1DA47E2F0((uint64_t)v87, &qword_1EDAE5310);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v56, v57);
    sub_1DA4841D4(&qword_1EDAE4140, &qword_1EDAE4148, MEMORY[0x1E0D7DB08]);
    v59 = v66;
    v51 = sub_1DA66E11C();
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v58, v59);
  }
  else
  {
    v51 = sub_1DA66E11C();
    result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, AssociatedTypeWitness);
  }
  *v67 = v51;
  return result;
}

uint64_t sub_1DA483380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t PrepareUIImageProcessingStep.publisher.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = *(_QWORD *)(v6 + 16);
  v7 = *(_QWORD *)(v6 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15[0] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)v15 - v10;
  sub_1DA66D4B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v8;
  *(_QWORD *)(v13 + 24) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1DA483644();
  swift_getAssociatedConformanceWitness();
  sub_1DA66E200();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v15[0] + 8))(v11, AssociatedTypeWitness);
}

uint64_t sub_1DA4835C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

unint64_t sub_1DA483644()
{
  unint64_t result;

  result = qword_1EDAE5388;
  if (!qword_1EDAE5388)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDAE5388);
  }
  return result;
}

uint64_t ResizeArtworkProcessingStep.publisher.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  void (*v27)(char *, uint64_t);
  CGFloat v28;
  CGFloat v29;
  _BOOL4 v30;
  void (*v31)(char *, uint64_t, uint64_t);
  double v32;
  double v33;
  double v34;
  double v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t AssociatedConformanceWitness;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79[2];
  __int128 v80[3];
  CGSize v81;
  CGSize v82;

  v3 = v2;
  v75 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v78 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v62 = sub_1DA66CDA8();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = sub_1DA66DF48();
  v67 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v64 = (char *)&v58 - v8;
  v9 = MEMORY[0x1DF0A039C](MEMORY[0x1E0C95B48], v7);
  v68 = v7;
  v61 = v9;
  v66 = sub_1DA66CC70();
  v65 = *(_QWORD *)(v66 - 8);
  v10 = MEMORY[0x1E0C80A78](v66);
  v63 = (char *)&v58 - v11;
  v74 = AssociatedTypeWitness;
  v72 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v71 = (char *)&v58 - v13;
  v14 = *(_QWORD *)(a1 - 8);
  v15 = MEMORY[0x1E0C80A78](v12);
  v60 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v58 - v17;
  v19 = sub_1DA66CEBC();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = v2 + *(int *)(a1 + 36);
  v77 = v5;
  sub_1DA66D4A4();
  sub_1DA66CDC0();
  v24 = v23;
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  v27(v22, v19);
  sub_1DA66CDC0();
  v82.width = v28;
  v82.height = v29;
  v81.width = v24;
  v81.height = v26;
  v30 = CGSizeEqualToSize(v81, v82);
  v76 = v14;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v69 = v3;
  v31(v18, v3, a1);
  if (!v30)
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(v18, a1);
    goto LABEL_5;
  }
  sub_1DA66D4A4();
  sub_1DA66CDD8();
  v33 = v32;
  v27(v22, v19);
  sub_1DA66CDD8();
  v35 = v34;
  (*(void (**)(char *, uint64_t))(v76 + 8))(v18, a1);
  if (v33 != v35)
  {
LABEL_5:
    v40 = v71;
    sub_1DA66D4B0();
    v41 = v69;
    sub_1DA4813E4(v69 + *(int *)(a1 + 48), (uint64_t)v80);
    v42 = (uint64_t *)(v41 + *(int *)(a1 + 40));
    v43 = *v42;
    v44 = v42[1];
    v45 = *(_QWORD *)(v41 + *(int *)(a1 + 44));
    v46 = v60;
    v31(v60, v41, a1);
    sub_1DA4841BC(v80, (uint64_t)v79);
    v47 = v76;
    v48 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    v49 = (v59 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    v50 = (v49 + 47) & 0xFFFFFFFFFFFFFFF8;
    v51 = swift_allocObject();
    v52 = v78;
    *(_QWORD *)(v51 + 16) = v77;
    *(_QWORD *)(v51 + 24) = v52;
    (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v51 + v48, v46, a1);
    sub_1DA4841BC(v79, v51 + v49);
    v53 = (_QWORD *)(v51 + v50);
    *v53 = v43;
    v53[1] = v44;
    *(_QWORD *)(v51 + ((v50 + 23) & 0xFFFFFFFFFFFFFFF8)) = v45;
    v54 = v64;
    v55 = v74;
    sub_1DA66E200();
    swift_release();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v55);
    MEMORY[0x1DF0A039C](&protocol conformance descriptor for ResizeArtworkProcessingStep<A>, a1);
    sub_1DA66D4D4();
    v56 = v68;
    sub_1DA484500();
    v36 = v63;
    sub_1DA66E0F8();
    sub_1DA47E2F0((uint64_t)v80, &qword_1EDAE5310);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v54, v56);
    v37 = v66;
    MEMORY[0x1DF0A039C](MEMORY[0x1E0D7DB08], v66);
    v38 = sub_1DA66E11C();
    v39 = v65;
    goto LABEL_6;
  }
  v36 = v71;
  sub_1DA66D4B0();
  v37 = v74;
  v38 = sub_1DA66E11C();
  v39 = v72;
LABEL_6:
  result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v36, v37);
  *v75 = v38;
  return result;
}

uint64_t sub_1DA483C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = sub_1DA66CEBC();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v8);
  return __swift_destroy_boxed_opaque_existential_0((((((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                                   + 15) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1DA483CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_OWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 24) = v21;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  (**(void (***)(void))(v21 - 8))();
  return a1;
}

unint64_t sub_1DA483D94()
{
  unint64_t result;

  result = qword_1EDAE1468;
  if (!qword_1EDAE1468)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ImageStoreArtworkSource, &type metadata for ImageStoreArtworkSource);
    atomic_store(result, (unint64_t *)&qword_1EDAE1468);
  }
  return result;
}

CGSize __swiftcall UniformBucketingStrategy.bucketedSize(for:)(CGSize a1)
{
  uint64_t *v1;
  double height;
  double width;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  double v21;
  double v22;
  CGSize result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];

  height = a1.height;
  width = a1.width;
  v4 = sub_1DA66DEF4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v26[0] = *v1;
  v26[1] = v8;
  v9 = sub_1DA484128(width);
  v11 = v10;
  sub_1DA66DE94();
  v12 = sub_1DA66DEDC();
  v13 = sub_1DA66FD9C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v26[0] = v15;
    *(_DWORD *)v14 = 136315394;
    v16 = MEMORY[0x1DF09EAB8](width, height);
    v25 = sub_1DA49AD00(v16, v17, v26);
    sub_1DA6702C4();
    v18 = swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    v19 = MEMORY[0x1DF09EAB8](v18, v9, v11);
    v25 = sub_1DA49AD00(v19, v20, v26);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA478000, v12, v13, "Performed uniform size bucketing: %s -> %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v15, -1, -1);
    MEMORY[0x1DF0A0474](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v21 = v9;
  v22 = v11;
  result.height = v22;
  result.width = v21;
  return result;
}

double sub_1DA484128(double result)
{
  _QWORD *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  double v6;

  v2 = *(double *)v1;
  v3 = v1[1];
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (double *)(v3 + 32);
    while (1)
    {
      v6 = ceil(v2 * *v5);
      if (v6 >= result)
        break;
      ++v5;
      if (!--v4)
        goto LABEL_5;
    }
    if (v6 > 0.0)
      return v6;
  }
  else
  {
LABEL_5:
    if (v2 > 0.0)
    {
      if (result <= 0.0)
        return *(double *)v1;
      else
        return *(double *)v1;
    }
  }
  return result;
}

uint64_t sub_1DA4841BC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1DA4841D4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1DF0A039C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DA484214()
{
  unint64_t result;

  result = qword_1EDAE1F90;
  if (!qword_1EDAE1F90)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDAE1F90);
  }
  return result;
}

unint64_t sub_1DA484258()
{
  unint64_t result;

  result = qword_1EDAE1F88;
  if (!qword_1EDAE1F88)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEFF48], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDAE1F88);
  }
  return result;
}

uint64_t type metadata accessor for InvalidateImageStoreValueProcessingStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InvalidateImageStoreValueProcessingStep);
}

uint64_t type metadata accessor for EffectsArtworkProcessingStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EffectsArtworkProcessingStep);
}

uint64_t type metadata accessor for ResizeArtworkProcessingStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResizeArtworkProcessingStep);
}

uint64_t destroy for AssetCaches(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

id MapImageNameNumberAware(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = a1;
  if (MapImageNameNumberAware_onceToken != -1)
    dispatch_once(&MapImageNameNumberAware_onceToken, &__block_literal_global_5);
  if (objc_msgSend((id)MapImageNameNumberAware_sDigitAwareSet, "containsObject:", v1))
  {
    objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "languageCode");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ar")) & 1) != 0
      || objc_msgSend(v3, "isEqualToString:", CFSTR("hi")))
    {
      objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "numberingSystem");
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend(v5, "isEqualToString:", CFSTR("latn")))
      {
        objc_msgSend(v1, "stringByAppendingFormat:", CFSTR(".westernarabic"));
        v6 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v6 = 0;
      }

    }
    else
    {
      v6 = 0;
    }

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

uint64_t sub_1DA484504(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA484548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AssetCaches();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for AssetCaches(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DA484734(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA484824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1DA4841D4(a5, a4, MEMORY[0x1E0DEAF38]);
  return sub_1DA66FA30();
}

uint64_t sub_1DA48489C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v39 = a3;
  v40 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - v9;
  v37 = type metadata accessor for PageRenderActivity();
  MEMORY[0x1E0C80A78](v37);
  v35 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1E0C80A78](v38);
  v36 = (uint64_t)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v35 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v35 - v20;
  swift_getAssociatedConformanceWitness();
  v22 = sub_1DA66DF6C();
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v35 - v24;
  (*(void (**)(char *, uint64_t, __n128))(v26 + 16))((char *)&v35 - v24, a1, v23);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v25, 1, AssociatedTypeWitness);
  if ((_DWORD)result == 1)
  {
    if (v40)
    {
      *v21 = v39 & 1;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1DA5C013C((uint64_t)v21, (uint64_t)v18);
      if (!swift_getEnumCaseMultiPayload())
      {
        v28 = v35;
        sub_1DA5C0180((uint64_t)v18, v35);
        PageRenderController.notify(_:)(v28);
        sub_1DA47F880(v28, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderActivity);
      }
      return sub_1DA47F880((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
    }
  }
  else
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v29(v10, v25, AssociatedTypeWitness);
    if (v40)
    {
      (*(void (**)(char *))(v5 + 16))(v7);
      v30 = sub_1DA670690();
      if (v30)
      {
        v31 = v30;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
      }
      else
      {
        v31 = swift_allocError();
        v29(v32, v7, AssociatedTypeWitness);
      }
      *(_QWORD *)v15 = v31;
      v15[8] = v39 & 1;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      v33 = v36;
      sub_1DA5C013C((uint64_t)v15, v36);
      if (!swift_getEnumCaseMultiPayload())
      {
        v34 = v35;
        sub_1DA5C0180(v33, v35);
        PageRenderController.notify(_:)(v34);
        sub_1DA47F880(v34, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderActivity);
      }
      sub_1DA47F880((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, AssociatedTypeWitness);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, AssociatedTypeWitness);
    }
  }
  return result;
}

void sub_1DA484C74(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;

  v4 = type metadata accessor for PageRenderActivity();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v15 - v11;
  if (a1)
  {
    sub_1DA5C00F8();
    v13 = swift_allocError();
    *v14 = 0;
    *(_QWORD *)v12 = v13;
    v12[8] = a2 & 1;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1DA5C013C((uint64_t)v12, (uint64_t)v9);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1DA5C0180((uint64_t)v9, (uint64_t)v6);
      PageRenderController.notify(_:)((uint64_t)v6);
      sub_1DA47F880((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderActivity);
    }
    sub_1DA47F880((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  }
}

void sub_1DA484DDC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v5 = type metadata accessor for PageRenderActivity();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v14 - v12;
  if (a2)
  {
    *v13 = a3 & 1;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1DA5C013C((uint64_t)v13, (uint64_t)v10);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1DA5C0180((uint64_t)v10, (uint64_t)v7);
      PageRenderController.notify(_:)((uint64_t)v7);
      sub_1DA47F880((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderActivity);
    }
    sub_1DA47F880((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  }
}

uint64_t type metadata accessor for PageRenderEvent()
{
  uint64_t result;

  result = qword_1EDAE05D0;
  if (!qword_1EDAE05D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for PageRenderActivity()
{
  uint64_t result;

  result = qword_1EDAE0A78;
  if (!qword_1EDAE0A78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AssetCaches(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1DA485088()
{
  return UIImage.inMemorySize.getter();
}

uint64_t UIImage.inMemorySize.getter()
{
  void *v0;
  double v1;
  double v2;
  CGImage *v3;
  CGImage *v4;
  size_t BytesPerRow;
  unint64_t v6;
  double v7;
  double v8;
  uint64_t result;

  objc_msgSend(v0, sel_size);
  v2 = v1;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v1 <= -1.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v1 >= 1.84467441e19)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v3 = (CGImage *)objc_msgSend(v0, sel_CGImage);
  if (!v3)
  {
    objc_msgSend(v0, sel_size);
    v8 = v7 * 16.0 + 1.0;
    if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    if (v8 <= -1.0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    if (v8 >= 1.84467441e19)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    v6 = (unint64_t)v8;
    goto LABEL_11;
  }
  v4 = v3;
  BytesPerRow = CGImageGetBytesPerRow(v3);
  if ((BytesPerRow & 0x8000000000000000) == 0)
  {
    v6 = BytesPerRow;

LABEL_11:
    if (is_mul_ok((unint64_t)v2, v6))
      return (unint64_t)v2 * v6;
    goto LABEL_16;
  }
LABEL_20:
  result = sub_1DA670564();
  __break(1u);
  return result;
}

uint64_t _s10PodcastsUI9SizeClassO5widthAC12CoreGraphics7CGFloatV_tcfC_0(double a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t result;

  if (qword_1EDAE1988 != -1)
    result = swift_once();
  v2 = *((_QWORD *)off_1EDAE1978 + 2);
  if (v2)
  {
    v3 = (char *)off_1EDAE1978 + 32;
    v4 = *((_QWORD *)off_1EDAE1978 + 2);
    while (1)
    {
      v6 = *v3++;
      v5 = v6;
      if (dbl_1DA682448[v6] > a1)
        break;
      if (!--v4)
        return *((unsigned __int8 *)off_1EDAE1978 + v2 + 31);
    }
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t LanguageAwareString.string.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AMPLanguageAwareString_string);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1DA4853A8(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t type metadata accessor for UIStoreResponseDelegate()
{
  return objc_opt_self();
}

uint64_t BaseObjectGraph.satisfying<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, __n128);
  uint64_t v17;

  v8 = *(_QWORD *)(a4 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v4;
  v14 = v13;
  v15(v12, v9);
  if (!v5)
  {
    v14 = BaseObjectGraph.satisfying<A>(_:with:)(a1, (uint64_t)v11, a4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a4);
  }
  return v14;
}

uint64_t BaseObjectGraph.satisfying<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DA66EBD8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, a2, a3, v10);
  sub_1DA66EBCC();
  v13 = sub_1DA66EE0C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return v13;
}

uint64_t *PageSize.columnInfo(grid:horizontal:)(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  PodcastsUI::SizeClass v7;
  id v8;
  double v9;
  double v10;
  __int128 v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *v2;
  v13 = *((_OWORD *)v2 + 1);
  v5 = v2[4];
  v6 = v2[5];
  v7 = *((_BYTE *)v2 + 8);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v8, sel_scaledValueForValue_, 100.0);
  v10 = v9;

  Grid.grid23Columns(for:horizontal:)(v7, a2);
  v11 = v15;
  *(_QWORD *)&v15 = v4;
  BYTE8(v15) = v7;
  v16 = v13;
  v17 = v5;
  v18 = v6;
  v14 = v11;
  return sub_1DA48570C((uint64_t *)&v14, a2, (v10 / 100.0 + -1.0) * 0.7 + 1.0);
}

uint64_t *sub_1DA48570C(uint64_t *result, char a2, double a3)
{
  double *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  float v11;
  double v12;

  v5 = v3[2];
  v4 = v3[3];
  v6 = *v3 - (v5 + v5);
  v7 = *v3 - v5 - v4 - v3[4];
  if ((a2 & 1) == 0)
    v7 = *v3 - (v5 + v5);
  v8 = ((double)result[1] + -1.0) * v4 + (v7 * a3 - ((double)*result + -1.0) * v4) / (double)*result * (double)result[1];
  if (v6 >= v8)
    v9 = v8;
  else
    v9 = *v3 - (v5 + v5);
  v10 = (v4 + v6) / (v4 + v9);
  if (v10 <= 1.0)
    v10 = 1.0;
  if ((a2 & 1) != 0)
  {
    v11 = floor(v10);
    return (uint64_t *)lrintf(v11);
  }
  v12 = round(v10);
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v12 < 9.22337204e18)
    return (uint64_t *)(uint64_t)v12;
LABEL_16:
  __break(1u);
  return result;
}

PodcastsUI::ColumnSpan __swiftcall Grid.grid23Columns(for:horizontal:)(PodcastsUI::SizeClass a1, Swift::Bool horizontal)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  PodcastsUI::ColumnSpan result;

  v4 = *v3;
  if (*((_BYTE *)v3 + 8) == 1)
  {
    *(_QWORD *)&a1 = ((uint64_t (*)(_QWORD, Swift::Bool))((char *)&loc_1DA485844 + 4 * byte_1DA686F68[v4]))(a1, horizontal);
  }
  else
  {
    *v2 = v4;
    v2[1] = 1;
  }
  LOBYTE(result.span) = horizontal;
  LOBYTE(result.columns) = a1;
  return result;
}

void sub_1DA4858E4(_QWORD *a1@<X8>)
{
  *a1 = 2;
  a1[1] = 1;
}

void sub_1DA4858F4(_QWORD *a1@<X8>)
{
  *a1 = 3;
  a1[1] = 1;
}

void sub_1DA485904(_QWORD *a1@<X8>)
{
  *a1 = 4;
  a1[1] = 1;
}

void sub_1DA485914()
{
  JUMPOUT(0x1DA485974);
}

void sub_1DA485984(_QWORD *a1@<X8>)
{
  *a1 = 5;
  a1[1] = 1;
}

uint64_t getEnumTagSinglePayload for PageRenderActivity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

BOOL static UITraitCollection.supportsPointerDevice.getter()
{
  id v0;
  void *v1;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v1 = v0;
  if (byte_1F026A3E0 == 1)
  {

    return 1;
  }
  else
  {
    v3 = objc_msgSend(v0, sel_userInterfaceIdiom);

    return v3 == (id)1;
  }
}

uint64_t sub_1DA485A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  sub_1DA5ED40C(a1, a5);
  v10 = a5 + *(int *)(type metadata accessor for PrepareUIImageProcessingStep(0, a3, a4, v9) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v10, a2, a3);
}

uint64_t storeEnumTagSinglePayload for PreparedArtworkRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA485A8C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[5];

  v5 = *a3;
  v6 = (_QWORD *)swift_allocObject();
  v7 = *(_QWORD *)(v5 + *MEMORY[0x1E0D41370]);
  v6[2] = v7;
  v6[3] = a1;
  v6[4] = a2;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  v9 = sub_1DA486298();
  swift_retain_n();
  v10 = sub_1DA66FEC8();
  v12[3] = v9;
  v12[4] = MEMORY[0x1E0D416D8];
  v12[0] = v10;
  sub_1DA66F61C();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
}

uint64_t sub_1DA485B88(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD v7[5];

  v4 = sub_1DA486298();
  v5 = sub_1DA66FEC8();
  v7[3] = v4;
  v7[4] = MEMORY[0x1E0D416D8];
  v7[0] = v5;
  Promise.then(getResult:on:)(a1, a2);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t Promise.then(getResult:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = *v2;
  v6 = (_QWORD *)swift_allocObject();
  v7 = *(_QWORD *)(v5 + *MEMORY[0x1E0D41370]);
  v6[2] = v7;
  v6[3] = a1;
  v6[4] = a2;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  swift_retain_n();
  sub_1DA66F61C();
  swift_release();
  return swift_release();
}

uint64_t sub_1DA485CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = a6;
  v9 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66FF4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DA678510;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a7);
  v13 = sub_1DA66F904();
  v15 = v14;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1DA486218();
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  sub_1DA66DD44();
  return swift_bridgeObjectRelease();
}

uint64_t Promise.init(signpost:log:metadata:logResult:)(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = sub_1DA66F658();
  sub_1DA66BE60();
  _s9JetEngine7PromiseC10PodcastsUIE6attach8signpost3log8metadata0H6Resultys12StaticStringV_So06OS_os_H0CSSSgSbtF_0(a1, a2, a3, a4, a5, a6);
  swift_release();

  swift_bridgeObjectRelease();
  return v12;
}

uint64_t _s9JetEngine7PromiseC10PodcastsUIE6attach8signpost3log8metadata0H6Resultys12StaticStringV_So06OS_os_H0CSSSgSbtF_0(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[5];

  v44 = a5;
  LODWORD(v45) = a3;
  v11 = *v6;
  v12 = sub_1DA66DD74();
  v13 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  v53 = v13;
  MEMORY[0x1E0C80A78](v12);
  v48 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v46 = (char *)&v44 - v16;
  v47 = v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v44 - v19;
  v21 = a4;
  sub_1DA66DD50();
  v54[0] = *(_QWORD *)(v11 + *MEMORY[0x1E0D41370]);
  v51 = v54[0];
  swift_getMetatypeMetadata();
  v22 = sub_1DA66F904();
  v24 = v23;
  v49 = a1;
  if (a6)
  {
    swift_bridgeObjectRetain();
    sub_1DA66FF58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1DA678FE0;
    v26 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    v27 = sub_1DA486218();
    *(_QWORD *)(v25 + 32) = v22;
    *(_QWORD *)(v25 + 40) = v24;
    *(_QWORD *)(v25 + 96) = v26;
    *(_QWORD *)(v25 + 104) = v27;
    v28 = v44;
    *(_QWORD *)(v25 + 64) = v27;
    *(_QWORD *)(v25 + 72) = v28;
    *(_QWORD *)(v25 + 80) = a6;
  }
  else
  {
    sub_1DA66FF58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1DA678510;
    *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v29 + 64) = sub_1DA486218();
    *(_QWORD *)(v29 + 32) = v22;
    *(_QWORD *)(v29 + 40) = v24;
  }
  v30 = a2;
  v31 = (char)v45;
  sub_1DA66DD44();
  swift_bridgeObjectRelease();
  v32 = v53;
  v45 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v33 = v46;
  v50 = v20;
  v45(v46, v20, v52);
  v34 = *(unsigned __int8 *)(v32 + 80);
  v44 = v34 | 7;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v51;
  *(_QWORD *)(v35 + 24) = v21;
  v36 = v21;
  v37 = v49;
  *(_QWORD *)(v35 + 32) = v49;
  *(_QWORD *)(v35 + 40) = v30;
  *(_BYTE *)(v35 + 48) = v31;
  v38 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 32);
  v39 = v52;
  v38(v35 + ((v34 + 49) & ~v34), v33, v52);
  v40 = v48;
  v45(v48, v50, v39);
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v36;
  *(_QWORD *)(v41 + 24) = v37;
  *(_QWORD *)(v41 + 32) = v30;
  *(_BYTE *)(v41 + 40) = v31;
  v38(v41 + ((v34 + 41) & ~v34), v40, v39);
  v42 = v36;
  sub_1DA48625C(v54);
  sub_1DA66F61C();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v54);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v50, v39);
}

unint64_t sub_1DA486218()
{
  unint64_t result;

  result = qword_1EDADE6D8;
  if (!qword_1EDADE6D8)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDADE6D8);
  }
  return result;
}

uint64_t sub_1DA48625C@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1DA486298();
  result = sub_1DA66FEC8();
  v4 = MEMORY[0x1E0D416D8];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

unint64_t sub_1DA486298()
{
  unint64_t result;

  result = qword_1EDAE5050;
  if (!qword_1EDAE5050)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDAE5050);
  }
  return result;
}

ValueMetadata *type metadata accessor for Grid()
{
  return &type metadata for Grid;
}

uint64_t sub_1DA4862E8()
{
  sub_1DA670798();
  Glyph.Settings.hash(into:)();
  return sub_1DA6707C8();
}

void Glyph.Settings.hash(into:)()
{
  uint64_t v0;
  void *v1;
  int v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 32);
  v3 = *(void **)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_1DA66F94C();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1DA6707B0();
    v4 = v1;
    sub_1DA6701B0();

    if (v2)
    {
LABEL_3:
      sub_1DA6707B0();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1DA6707B0();
    if (v2)
      goto LABEL_3;
  }
  sub_1DA6707B0();
  sub_1DA6707BC();
LABEL_6:
  sub_1DA6707A4();
  sub_1DA6707A4();
  sub_1DA6707B0();
  sub_1DA6707B0();
  sub_1DA6707B0();
  sub_1DA6707B0();
  if (v3)
  {
    v5 = v3;
    sub_1DA6701B0();

  }
}

double PageSize.margins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t type metadata accessor for NowPlayingArtwork.Data()
{
  uint64_t result;

  result = qword_1EDAE09B8;
  if (!qword_1EDAE09B8)
    return swift_getSingletonMetadata();
  return result;
}

id Glyph.image.getter()
{
  return sub_1DA486550();
}

id sub_1DA486550()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 96);
  if (v1)
  {
    v2 = *(id *)(v0 + 96);
  }
  else
  {
    v3 = (void *)sub_1DA5B2444(v0);
    v4 = *(void **)(v0 + 96);
    *(_QWORD *)(v0 + 96) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_1DA4865A8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  double v6;
  char v7;
  uint64_t v8;
  int v9;
  void *v10;
  id v11;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(id *)(v0 + 64);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 48);
    if (v3)
    {
      v5 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v3, v4);
    }
    else
    {
      v6 = *(double *)(v0 + 24);
      v7 = *(_BYTE *)(v0 + 32);
      v8 = *(_QWORD *)(v0 + 40);
      v9 = *(unsigned __int8 *)(v0 + 57);
      v10 = (void *)objc_opt_self();
      if ((v7 & 1) != 0)
      {
        if (v9)
          v5 = objc_msgSend(v10, sel_configurationPreferringMulticolor);
        else
          v5 = objc_msgSend(v10, sel_unspecifiedConfiguration);
      }
      else
      {
        v5 = objc_msgSend(v10, sel_configurationWithPointSize_weight_scale_, v8, v4, v6);
      }
    }
    v2 = v5;
  }
  v11 = v1;
  return v2;
}

uint64_t ImpressionMetrics.withParentID(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v7 = sub_1DA66EFB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - v12;
  if (!a2)
    goto LABEL_6;
  v14 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v14 = a1 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    v15 = sub_1DA66EFEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a3, v3, v15);
    sub_1DA66EFC8();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
    swift_bridgeObjectRetain();
    sub_1DA66EF98();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return sub_1DA66EFD4();
  }
  else
  {
LABEL_6:
    v17 = sub_1DA66EFEC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a3, v3, v17);
  }
}

ValueMetadata *type metadata accessor for PageSize()
{
  return &type metadata for PageSize;
}

uint64_t type metadata accessor for PlaybackController()
{
  uint64_t result;

  result = qword_1EDAE0CF8;
  if (!qword_1EDAE0CF8)
    return swift_getSingletonMetadata();
  return result;
}

id static UIFont.subhead.getter()
{
  return sub_1DA4853A8(&qword_1EDADE928, (id *)&qword_1EDADE750);
}

id static UIFont.callout.getter()
{
  return sub_1DA4853A8(&qword_1EDAE5268, (id *)&qword_1EDAE5260);
}

uint64_t storeEnumTagSinglePayload for ImageBlur(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ImageBlur()
{
  return &type metadata for ImageBlur;
}

uint64_t type metadata accessor for PageRenderController()
{
  uint64_t result;

  result = qword_1EDAE1380;
  if (!qword_1EDAE1380)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for LibraryImageProvider(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = type metadata accessor for AssetCaches();
    v9 = *(int *)(v8 + 20);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = *(int *)(v8 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[5];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[6];
    v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)((char *)v4 + v21 + 24) = v22;
    (**(void (***)(void))(v22 - 8))();
    v23 = a3[7];
    v24 = a3[8];
    v25 = *(void **)((char *)a2 + v23);
    *(uint64_t *)((char *)v4 + v23) = (uint64_t)v25;
    v26 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)v4 + v24) = (uint64_t)v26;
    v27 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v27) = *(uint64_t *)((char *)a2 + v27);
    v28 = v25;
    v29 = v26;
    sub_1DA66BE60();
  }
  sub_1DA66BE60();
  return v4;
}

uint64_t sub_1DA486A9C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  void (*v22)(uint64_t, uint64_t);
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DA67B2A0;
  if (qword_1EDAE52F8 != -1)
    swift_once();
  v2 = (void *)qword_1EDAE5390;
  *(_QWORD *)(v1 + 32) = qword_1EDAE5390;
  sub_1DA66FAB4();
  v3 = v2;
  sub_1DA66F478();
  sub_1DA4813E4((uint64_t)(v0 + 2), (uint64_t)(v0 + 22));
  if (qword_1EDAE1970 != -1)
    swift_once();
  v4 = (void *)v0[58];
  v5 = v0[39];
  v6 = v0[40];
  v7 = v0[38];
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EDAEAAF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v8, v7);
  v9 = sub_1DA66F280();
  v10 = MEMORY[0x1E0D407B8];
  v0[20] = v9;
  v0[21] = v10;
  __swift_allocate_boxed_opaque_existential_1(v0 + 17);
  sub_1DA66F274();
  if (v4)
  {
    __swift_deallocate_boxed_opaque_existential_1((uint64_t)(v0 + 17));
    v11 = v0[12];
    v12 = v0[13];
    v13 = v0[14];
    v0[20] = (uint64_t)&type metadata for JSPackageManifest;
    v0[21] = sub_1DA528974();
    v0[17] = v11;
    v0[18] = v12;
    v0[19] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

  }
  v14 = v0[47];
  v16 = v0[45];
  v15 = v0[46];
  v17 = v0[43];
  v25 = v0[42];
  v26 = v0[41];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[49] + 16))(v0[50], v0[51], v0[48]);
  v18 = sub_1DA66EF44();
  v19 = MEMORY[0x1E0D40110];
  v0[30] = v18;
  v0[31] = v19;
  __swift_allocate_boxed_opaque_existential_1(v0 + 27);
  sub_1DA66EF38();
  sub_1DA66EE24();
  sub_1DA66F238();
  v20 = MEMORY[0x1E0D40E50];
  v0[35] = v16;
  v0[36] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(boxed_opaque_existential_1, v14, v16);
  sub_1DA66F244();
  v22 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v0[59] = (uint64_t)v22;
  v22(v17, v26);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 32));
  v0[60] = sub_1DA66F268();
  v23 = (_QWORD *)swift_task_alloc();
  v0[61] = (uint64_t)v23;
  *v23 = v0;
  v23[1] = sub_1DA4B2914;
  return sub_1DA66F25C();
}

uint64_t sub_1DA486D4C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;

  v1 = *(void **)(v0 + 304);
  v2 = *(void **)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 224);
  v28 = *(_QWORD *)(v0 + 232);
  v29 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 152);
  v31 = *(_QWORD *)(v0 + 160);
  v34 = *(_QWORD *)(v0 + 192);
  v36 = *(_QWORD *)(v0 + 144);
  v37 = *(_QWORD *)(v0 + 136);
  v38 = *(_QWORD *)(v0 + 128);
  v39 = *(void **)(v0 + 72);
  v9 = (void *)sub_1DA66F88C();
  objc_msgSend(v1, sel_setTreatmentNamespace_, v9);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v28, v26);
  sub_1DA66F070();
  *(_QWORD *)(v0 + 16) = v2;
  v10 = MEMORY[0x1E0D416D0];
  *(_QWORD *)(v0 + 40) = v29;
  *(_QWORD *)(v0 + 48) = v10;
  v11 = v2;
  sub_1DA66F040();
  v12 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v12(v7, v8);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  sub_1DA66F04C();
  v12(v6, v8);
  sub_1DA66F034();
  v12(v5, v8);
  sub_1DA66F5C8();
  sub_1DA66F5BC();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
  sub_1DA66F064();
  v13 = v8;
  v14 = v39;
  v12(v34, v13);
  if (objc_msgSend(v39, sel_protocolHandler))
  {
    objc_opt_self();
    v15 = (void *)swift_dynamicCastObjCClass();
    if (v15)
    {
      v17 = *(_QWORD *)(v0 + 192);
      v16 = *(_QWORD *)(v0 + 200);
      v18 = *(_QWORD *)(v0 + 152);
      v19 = *(_QWORD *)(v0 + 160);
      v20 = objc_msgSend(v15, sel_tokenService);
      sub_1DA66F058();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v12(v16, v18);
      v21 = v18;
      v14 = v39;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v16, v17, v21);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v27 = *(void **)(v0 + 304);
  v35 = *(_QWORD *)(v0 + 232);
  v30 = *(void **)(v0 + 264);
  v32 = *(_QWORD *)(v0 + 216);
  v22 = *(_QWORD *)(v0 + 200);
  v33 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 16))(*(_QWORD *)(v0 + 192), v22, v23);
  sub_1DA66F094();
  v24 = v14;
  sub_1DA66F0AC();
  sub_1DA66F508();

  v12(v22, v23);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v33);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4870DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void (*v12)(uint64_t *, uint64_t, uint64_t);
  objc_class *v13;
  id v14;
  uint64_t v15;
  objc_class *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t *v20;
  objc_class *v21;
  char *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  char *v37;
  char *v38;
  id v39;
  uint64_t v40;
  objc_class *v41;
  char *v42;
  id v43;
  id v44;
  unint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  void (*v48)(uint64_t *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  objc_super *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;

  if (qword_1EDADFFC0 != -1)
    swift_once();
  v51 = *(void **)(v0 + 1040);
  v1 = *(_QWORD *)(v0 + 1016);
  v55 = *(uint64_t **)(v0 + 1008);
  v2 = *(_QWORD *)(v0 + 1000);
  v50 = v2;
  v57 = *(_QWORD *)(v0 + 992);
  v3 = *(_QWORD *)(v0 + 984);
  v56 = *(_QWORD *)(v0 + 976);
  v4 = *(_QWORD *)(v0 + 968);
  v53 = v4;
  v54 = *(_QWORD *)(v0 + 960);
  v5 = sub_1DA66F6B8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EDADFFA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
  sub_1DA66EC8C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
  sub_1DA66EC38();
  sub_1DA66F544();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE00F8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678B30;
  *(_QWORD *)(inited + 32) = 6775138;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  v7 = MEMORY[0x1E0D40F58];
  *(_QWORD *)(inited + 72) = v57;
  *(_QWORD *)(inited + 80) = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
  v48 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 16);
  v49 = v1;
  v9 = v1;
  v48(boxed_opaque_existential_1, v1, v57);
  strcpy((char *)(inited + 88), "anonymousNet");
  *(_BYTE *)(inited + 101) = 0;
  *(_WORD *)(inited + 102) = -5120;
  v10 = MEMORY[0x1E0D40F78];
  *(_QWORD *)(inited + 128) = v54;
  *(_QWORD *)(inited + 136) = v10;
  v11 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 104));
  v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  v12(v11, v3, v54);
  *(_QWORD *)(inited + 144) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 152) = 0xE800000000000000;
  v13 = (objc_class *)type metadata accessor for JSDurationObject();
  v14 = objc_msgSend(objc_allocWithZone(v13), sel_init);
  *(_QWORD *)(inited + 184) = v13;
  v15 = sub_1DA47E32C(&qword_1EDADF950, (uint64_t (*)(uint64_t))type metadata accessor for JSDurationObject, (uint64_t)&unk_1DA67C0A4);
  *(_QWORD *)(inited + 160) = v14;
  *(_QWORD *)(inited + 192) = v15;
  *(_QWORD *)(inited + 200) = 0x657A696C61636F6CLL;
  *(_QWORD *)(inited + 208) = 0xE900000000000072;
  sub_1DA4813E4(v0 + 792, v0 + 832);
  v16 = (objc_class *)type metadata accessor for JSLocalizerObject();
  v17 = objc_allocWithZone(v16);
  sub_1DA4813E4(v0 + 832, (uint64_t)v17 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer);
  *(_QWORD *)(v0 + 904) = v17;
  *(_QWORD *)(v0 + 912) = v16;
  v18 = objc_msgSendSuper2((objc_super *)(v0 + 904), (SEL)&selRef_secondaryLabelColor);
  __swift_destroy_boxed_opaque_existential_0(v0 + 832);
  *(_QWORD *)(inited + 240) = v16;
  v19 = sub_1DA47E32C((unint64_t *)&unk_1EDADF958, (uint64_t (*)(uint64_t))type metadata accessor for JSLocalizerObject, (uint64_t)&unk_1DA67C104);
  *(_QWORD *)(inited + 216) = v18;
  *(_QWORD *)(inited + 248) = v19;
  *(_QWORD *)(inited + 256) = 7628142;
  *(_QWORD *)(inited + 264) = 0xE300000000000000;
  *(_QWORD *)(inited + 296) = v54;
  *(_QWORD *)(inited + 304) = MEMORY[0x1E0D40F78];
  v20 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 272));
  v12(v20, v56, v54);
  *(_QWORD *)(inited + 312) = 0x746E65696C635FLL;
  *(_QWORD *)(inited + 320) = 0xE700000000000000;
  v21 = (objc_class *)_s14JSClientObjectCMa();
  v22 = (char *)objc_allocWithZone(v21);
  *(_QWORD *)&v22[OBJC_IVAR____TtCO10PodcastsUI6Legacy14JSClientObject_accountStore] = v51;
  *(_QWORD *)(v0 + 888) = v22;
  *(_QWORD *)(v0 + 896) = v21;
  v23 = v51;
  v24 = objc_msgSendSuper2((objc_super *)(v0 + 888), (SEL)&selRef_secondaryLabelColor);
  *(_QWORD *)(inited + 352) = v21;
  v25 = sub_1DA47E32C(&qword_1EDADFBE0, (uint64_t (*)(uint64_t))_s14JSClientObjectCMa, (uint64_t)&unk_1DA686F30);
  *(_QWORD *)(inited + 328) = v24;
  *(_QWORD *)(inited + 360) = v25;
  *(_QWORD *)(inited + 368) = 0x7A696C61636F6C5FLL;
  *(_QWORD *)(inited + 376) = 0xEA00000000007265;
  v48(v55, v9, v57);
  v26 = sub_1DA4A95EC();
  v28 = v27;
  v29 = (objc_class *)_s17JSLocalizerObjectCMa();
  v30 = objc_allocWithZone(v29);
  v31 = sub_1DA4948D4(v26, v28);
  v52 = *(objc_super **)(v50 + 8);
  ((void (*)(uint64_t *, uint64_t))v52)(v55, v57);
  *(_QWORD *)(inited + 408) = v29;
  v32 = sub_1DA47E32C(&qword_1EDADFBE8, (uint64_t (*)(uint64_t))_s17JSLocalizerObjectCMa, (uint64_t)&unk_1DA681C40);
  *(_QWORD *)(inited + 384) = v31;
  *(_QWORD *)(inited + 416) = v32;
  *(_QWORD *)(inited + 424) = 0x747265706F72705FLL;
  *(_QWORD *)(inited + 432) = 0xEB00000000736569;
  sub_1DA4AA1D8(v0 + 672, v0 + 552);
  v33 = *(_QWORD *)(v0 + 632);
  v34 = *(_QWORD *)(v0 + 640);
  v35 = *(_QWORD *)(v0 + 648);
  v36 = (objc_class *)_s18JSPropertiesObjectCMa();
  v37 = (char *)objc_allocWithZone(v36);
  v38 = &v37[OBJC_IVAR____TtCO10PodcastsUI6Legacy18JSPropertiesObject_manifest];
  *(_QWORD *)v38 = v33;
  *((_QWORD *)v38 + 1) = v34;
  *((_QWORD *)v38 + 2) = v35;
  *(_QWORD *)(v0 + 920) = v37;
  *(_QWORD *)(v0 + 928) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39 = objc_msgSendSuper2((objc_super *)(v0 + 920), (SEL)&selRef_secondaryLabelColor);
  sub_1DA487760(v0 + 552);
  *(_QWORD *)(inited + 464) = v36;
  v40 = sub_1DA47E32C(&qword_1EDADFBF0, (uint64_t (*)(uint64_t))_s18JSPropertiesObjectCMa, (uint64_t)&unk_1DA678B54);
  *(_QWORD *)(inited + 440) = v39;
  *(_QWORD *)(inited + 472) = v40;
  *(_QWORD *)(inited + 480) = 0x726573755FLL;
  *(_QWORD *)(inited + 488) = 0xE500000000000000;
  v41 = (objc_class *)_s12JSUserObjectCMa();
  v42 = (char *)objc_allocWithZone(v41);
  *(_QWORD *)&v42[OBJC_IVAR____TtCO10PodcastsUI6Legacy12JSUserObject_accountStore] = v23;
  *(_QWORD *)(v0 + 872) = v42;
  *(_QWORD *)(v0 + 880) = v41;
  v43 = v23;
  v44 = objc_msgSendSuper2((objc_super *)(v0 + 872), (SEL)&selRef_secondaryLabelColor);
  *(_QWORD *)(inited + 520) = v41;
  *(_QWORD *)(inited + 528) = sub_1DA47E32C(&qword_1EDADFBD8, (uint64_t (*)(uint64_t))_s12JSUserObjectCMa, (uint64_t)&unk_1DA67DA30);
  *(_QWORD *)(inited + 496) = v44;
  v45 = sub_1DA4951FC(inited);

  v46 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v46(v56, v54);
  v46(v3, v54);
  __swift_destroy_boxed_opaque_existential_0(v0 + 792);
  sub_1DA487760(v0 + 672);
  ((void (*)(uint64_t, uint64_t))v52)(v49, v57);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v45);
}

uint64_t sub_1DA487760(uint64_t a1)
{
  destroy for JSPackage(a1);
  return a1;
}

uint64_t destroy for JSPackage(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DA4877D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1DA66EB90();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for JSPackageError();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA487BCC(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1DA4878AC + 4 * byte_1DA682FE8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DA4878AC()
{
  void **v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *v0;
  *(_QWORD *)(v1 - 104) = 0;
  *(_QWORD *)(v1 - 96) = 0xE000000000000000;
  sub_1DA670444();
  v3 = *(_QWORD *)(v1 - 96);
  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v1 - 104);
  *(_QWORD *)(v1 - 96) = v3;
  sub_1DA66F988();
  *(_QWORD *)(v1 - 120) = v2;
  type metadata accessor for AMSBagKey(0);
  sub_1DA670528();
  sub_1DA66F988();

  return *(_QWORD *)(v1 - 104);
}

uint64_t type metadata accessor for JSPackageError()
{
  uint64_t result;

  result = qword_1EDAE0430;
  if (!qword_1EDAE0430)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA487BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSPackageError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA487C10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  void (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t *v29;
  id v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[5];

  v4 = type metadata accessor for JSPackageFetcher();
  v41 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v41 + 64);
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1DA66EC74();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1DA66F6B8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnInternalOS))
  {
    v39 = v1;
    result = sub_1DA4AF9F0(a1);
    if (v2)
    {
      v40 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
      v42 = a1;
      if (qword_1EDAE08D0 != -1)
        swift_once();
      v12 = __swift_project_value_buffer(v7, (uint64_t)qword_1EDAE08B0);
      v13 = *(void (**)(_QWORD))(v8 + 16);
      v36 = v12;
      v37 = v13;
      v13(v10);
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
      v15 = *(_QWORD *)(sub_1DA66EC8C() - 8);
      v16 = *(_QWORD *)(v15 + 72);
      v17 = *(unsigned __int8 *)(v15 + 80);
      v18 = (v17 + 32) & ~v17;
      v35 = v14;
      v33 = v18 + v16;
      v32 = v17 | 7;
      v19 = swift_allocObject();
      v31 = xmmword_1DA678510;
      *(_OWORD *)(v19 + 16) = xmmword_1DA678510;
      v34 = v18;
      v38 = v19 + v18;
      sub_1DA66EC68();
      sub_1DA66EC5C();
      swift_getErrorValue();
      v20 = v43;
      v21 = v44;
      v45[3] = v44;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(boxed_opaque_existential_1, v20, v21);
      sub_1DA66EC44();
      sub_1DA47E2F0((uint64_t)v45, &qword_1EDAE5130);
      sub_1DA66EC5C();
      sub_1DA66EC80();
      sub_1DA66F550();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return sub_1DA4AF5A8(v42);
    }
  }
  else
  {
    v40 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    v42 = a1;
    v23 = (void *)*MEMORY[0x1E0D7F2C0];
    sub_1DA66F490();
    v24 = v40;
    sub_1DA4AEDDC(v1, v40);
    v25 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v26 = swift_allocObject();
    sub_1DA4AEE20(v24, v26 + v25);
    v27 = sub_1DA66EAAC();
    v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3F1C0];
    v29 = v42;
    v42[3] = v27;
    v29[4] = sub_1DA47E32C(&qword_1EDAE1E78, v28, MEMORY[0x1E0D3F1B8]);
    __swift_allocate_boxed_opaque_existential_1(v29);
    v30 = v23;
    return sub_1DA66EAB8();
  }
  return result;
}

char *sub_1DA4880C8(char *a1, char *a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = v6;
      goto LABEL_7;
    case 1u:
    case 2u:
    case 5u:
      v9 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v9;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
    case 4u:
      v8 = sub_1DA66EB90();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_7;
    case 6u:
      v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(void *, const void *))(v10 - 8))(a1, a2);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_1DA488240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA488254(a1, a2);
}

uint64_t sub_1DA488254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v45;
  uint64_t v46;
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v49 = a2;
  v65 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v2);
  v48 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1DA66C358();
  v54 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v47[0] = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66EC74();
  MEMORY[0x1E0C80A78](v5);
  v47[1] = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1DA66F6B8();
  v53 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDAE08A8 == -1)
    goto LABEL_2;
LABEL_45:
  swift_once();
LABEL_2:
  v8 = *((_QWORD *)off_1EDAE08A0 + 8);
  v55 = (char *)off_1EDAE08A0 + 64;
  v9 = 1 << *((_BYTE *)off_1EDAE08A0 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v56 = (unint64_t)(v9 + 63) >> 6;
  v57 = off_1EDAE08A0;
  swift_bridgeObjectRetain();
  v12 = 0;
  if (v11)
  {
LABEL_5:
    v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v14 = v13 | (v12 << 6);
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v15 >= v56)
      goto LABEL_27;
    v16 = *(_QWORD *)&v55[8 * v15];
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v56)
        goto LABEL_27;
      v16 = *(_QWORD *)&v55[8 * v12];
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v56)
          goto LABEL_27;
        v16 = *(_QWORD *)&v55[8 * v12];
        if (!v16)
        {
          v17 = v15 + 3;
          if (v17 >= v56)
          {
LABEL_27:
            swift_release();
            if (qword_1EDAE08D0 != -1)
              swift_once();
            __swift_project_value_buffer(v50, (uint64_t)qword_1EDAE08B0);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
            sub_1DA66EC8C();
            *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
            sub_1DA66EC38();
            sub_1DA66F544();
            swift_bridgeObjectRelease();
            if (sub_1DA66C28C() == 0x6B63617074656ALL && v38 == 0xE700000000000000)
            {
              swift_bridgeObjectRelease();
              v39 = v51;
              v40 = v54;
            }
            else
            {
              v43 = sub_1DA6706D8();
              swift_bridgeObjectRelease();
              v39 = v51;
              v40 = v54;
              if ((v43 & 1) == 0)
                return sub_1DA66C2E0();
            }
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v49, v65, v39);
          }
          v16 = *(_QWORD *)&v55[8 * v17];
          if (!v16)
          {
            while (1)
            {
              v12 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_44;
              if (v12 >= v56)
                goto LABEL_27;
              v16 = *(_QWORD *)&v55[8 * v12];
              ++v17;
              if (v16)
                goto LABEL_19;
            }
          }
          v12 = v17;
        }
      }
    }
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_20:
    v18 = 16 * v14;
    v19 = (uint64_t *)(v57[6] + v18);
    v20 = *v19;
    v21 = v19[1];
    v22 = (uint64_t *)(v57[7] + v18);
    v23 = *v22;
    v24 = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = sub_1DA66C298();
    v61 = v25;
    v63 = v20;
    v64 = v21;
    sub_1DA498918();
    v26 = sub_1DA67033C();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_5;
  }
  if (qword_1EDAE08D0 != -1)
    swift_once();
  v27 = v50;
  v28 = __swift_project_value_buffer(v50, (uint64_t)qword_1EDAE08B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v28, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
  v29 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DA66EC8C() - 8) + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1DA678510;
  v56 = v31 + v30;
  sub_1DA66EC68();
  sub_1DA66EC5C();
  v32 = MEMORY[0x1E0DEA968];
  v62 = MEMORY[0x1E0DEA968];
  v60 = v20;
  v61 = v21;
  swift_bridgeObjectRetain();
  sub_1DA66EC44();
  sub_1DA47E2F0((uint64_t)&v60, &qword_1EDAE5130);
  sub_1DA66EC5C();
  v62 = v32;
  v60 = v23;
  v61 = v24;
  swift_bridgeObjectRetain();
  sub_1DA66EC44();
  sub_1DA47E2F0((uint64_t)&v60, &qword_1EDAE5130);
  sub_1DA66EC5C();
  sub_1DA66EC80();
  v33 = v52;
  sub_1DA66F538();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v27);
  v60 = sub_1DA66C298();
  v61 = v34;
  v63 = v20;
  v64 = v21;
  v58 = v23;
  v59 = v24;
  sub_1DA670300();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = (uint64_t)v48;
  sub_1DA66C334();
  swift_bridgeObjectRelease();
  v36 = v54;
  v37 = v51;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v35, 1, v51) == 1)
  {
    sub_1DA47E2F0(v35, &qword_1EDAE5020);
    type metadata accessor for JSPackageError();
    sub_1DA47E32C((unint64_t *)&qword_1EDAE0428, (uint64_t (*)(uint64_t))type metadata accessor for JSPackageError, (uint64_t)&unk_1DA6830A0);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return swift_release();
  }
  v41 = v47[0];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v36 + 32))(v47[0], v35, v37);
  if (sub_1DA66C28C() == 0x6B63617074656ALL && v42 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  v45 = sub_1DA6706D8();
  swift_bridgeObjectRelease();
  if ((v45 & 1) != 0)
  {
LABEL_38:
    v46 = v54;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v49, v41, v37);
  }
  else
  {
    sub_1DA66C2E0();
    v46 = v54;
  }
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v41, v37);
  return swift_release();
}

uint64_t sub_1DA488A9C(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

double UITraitCollection.safeDisplayScale.getter()
{
  void *v0;
  double v1;

  objc_msgSend(v0, sel_displayScale);
  return CGFloat.safeDisplayScale.getter(v1);
}

double CGFloat.safeDisplayScale.getter(double result)
{
  double v1;
  double v2;
  uint64_t v3;
  id v4;
  double v5;
  double v6;

  if (result < 0.0)
    goto LABEL_7;
  v1 = fabs(result);
  v2 = 0.0;
  if (v1 <= 0.0)
    v2 = v1;
  v3 = (*(_QWORD *)&v2 >> 52) & 0x7FFLL;
  if (!v3)
  {
    if (v1 >= COERCE_DOUBLE(1))
      return result;
    goto LABEL_7;
  }
  if (v3 != 2047 && v1 < COERCE_DOUBLE(*(_QWORD *)&v2 & 0x7FF0000000000000) * 2.22044605e-16)
  {
LABEL_7:
    v4 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v4, sel_scale);
    v6 = v5;

    return v6;
  }
  return result;
}

double PageSize.gutters.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t sub_1DA488BD0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

uint64_t sub_1DA488BF0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = *(unsigned __int8 *)(v0 + 328);
  *(_BYTE *)(v0 + 330) = v1;
  if (v1 == 2)
  {
    v2 = *(_QWORD *)(v0 + 136);
    v3 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 329));
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 312) = v6;
    *v6 = v0;
    v6[1] = sub_1DA57331C;
    return sub_1DA66FB50();
  }
}

uint64_t sub_1DA488D48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 320) = v0;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 96) + 8))(*(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 88));
  }
  else
  {
    *(_BYTE *)(v2 + 329) = 1;
  }
  return swift_task_switch();
}

ValueMetadata *type metadata accessor for InteractionContext.Origin()
{
  return &type metadata for InteractionContext.Origin;
}

__n128 sub_1DA488DD4@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __int128 v5;
  __n128 result;

  type metadata accessor for GlyphInternal();
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19F8);
  swift_allocObject();
  sub_1DA488E60(a1);
  *(_QWORD *)(v4 + 88) = sub_1DA66DC54();
  *(_QWORD *)(v4 + 96) = 0;
  v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 80) = *(_QWORD *)(a1 + 64);
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(__n128 *)(v4 + 32) = result;
  *a2 = v4;
  return result;
}

uint64_t sub_1DA488E60(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 16);
  v3 = *(id *)(a1 + 64);
  swift_bridgeObjectRetain();
  v4 = v2;
  return a1;
}

uint64_t type metadata accessor for GlyphInternal()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for Glyph.Settings(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v6 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  v7 = v5;
  v8 = v6;
  return a1;
}

ValueMetadata *type metadata accessor for ImageStoreArtworkSource()
{
  return &type metadata for ImageStoreArtworkSource;
}

_BYTE *sub_1DA488F3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtwork.Placement()
{
  return &type metadata for NowPlayingArtwork.Placement;
}

uint64_t ImpressionMetrics.ID.withParent(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = v3;
  if (!a2)
    goto LABEL_6;
  v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v6 = a1 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v7 = sub_1DA66EFB0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v4, v7);
    swift_bridgeObjectRetain();
    return sub_1DA66EF98();
  }
  else
  {
LABEL_6:
    v9 = sub_1DA66EFB0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a3, v4, v9);
  }
}

void sub_1DA488FFC(uint64_t a1)
{
  uint64_t v1;

  sub_1DA484DDC(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t Publisher.emitPageRenderResourceEvents(using:onScreen:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_BYTE *)(v8 + 24) = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  *(_QWORD *)(v9 + 32) = a1;
  *(_BYTE *)(v9 + 40) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_BYTE *)(v10 + 24) = a2;
  swift_retain_n();
  sub_1DA66E134();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t getEnumTagSinglePayload for AssetCaches()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PageRenderActivity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1DA489134()
{
  uint64_t v0;

  sub_1DA66F8BC();
  sub_1DA670798();
  sub_1DA66F94C();
  v0 = sub_1DA6707C8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t destroy for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering()
{
  return swift_bridgeObjectRelease();
}

void sub_1DA4891B4(id *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  id v3;
  id v4;
  id v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  id v8;

  v3 = *a1;
  if (*a1 && objc_msgSend(*a1, sel_state) == (id)2)
  {
    v4 = v3;
    v5 = objc_msgSend(v4, sel_playerPath);
    v6 = objc_msgSend(v5, sel_isInProcess);

    if ((v6 & 1) != 0)
    {
      v7 = 1;
    }
    else
    {
      v8 = objc_msgSend(v4, sel_playerPath);
      v7 = objc_msgSend(v8, sel_isNativePodcastsPath);

      v4 = v8;
    }

  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
}

uint64_t storeEnumTagSinglePayload for AssetCaches()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t static AssetCaches.shared.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDAE0190 != -1)
    swift_once();
  v2 = type metadata accessor for AssetCaches();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDAE0178);
  return sub_1DA484548(v3, a1);
}

void sub_1DA4892E8(id *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  id v4;
  id v5;
  unsigned __int8 v6;
  id v7;
  unsigned int v8;
  id v9;
  id v10;
  uint64_t v11;
  int v12;
  int v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;

  v3 = 0uLL;
  if (*a1)
  {
    v4 = *a1;
    v5 = objc_msgSend(v4, sel_playerPath);
    v6 = objc_msgSend(v5, sel_isInProcess);

    if (((v6 & 1) != 0
       || (v7 = objc_msgSend(v4, sel_playerPath),
           v8 = objc_msgSend(v7, sel_isNativePodcastsPath),
           v7,
           v8))
      && (v9 = objc_msgSend(v4, sel_tracklist),
          v10 = objc_msgSend(v9, sel_playingItem),
          v9,
          v10))
    {
      objc_msgSend(v10, sel_duration);
      v21 = v24;
      v22 = v23;
      v20 = v25;
      v11 = v26;
      v12 = v27;
      v13 = v28;

      v15 = v20;
      v14 = v21;
      v3 = v22;
      v16 = 256;
      if (!v12)
        v16 = 0;
      v17 = v16 | v11;
      v18 = 0x10000;
      if (!v13)
        v18 = 0;
      v19 = v17 | v18;
    }
    else
    {

      v19 = 2;
      v14 = 0uLL;
      v15 = 0uLL;
      v3 = 0uLL;
    }
  }
  else
  {
    v19 = 2;
    v14 = 0uLL;
    v15 = 0uLL;
  }
  *(_OWORD *)a2 = v3;
  *(_OWORD *)(a2 + 16) = v14;
  *(_OWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 48) = v19;
}

uint64_t sub_1DA489464@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  if (*a1)
    result = MPCPlayerResponse.currentItem.getter();
  else
    result = 0;
  *a2 = result;
  return result;
}

uint64_t MPCPlayerResponse.isSystemPodcastsResponse.getter()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, sel_playerPath);
  v2 = objc_msgSend(v1, sel_isInProcess);

  if ((v2 & 1) != 0)
    return 1;
  v4 = objc_msgSend(v0, sel_playerPath);
  v3 = objc_msgSend(v4, sel_isNativePodcastsPath);

  return (uint64_t)v3;
}

uint64_t type metadata accessor for LazyJSStack()
{
  uint64_t result;

  result = qword_1EDADF800;
  if (!qword_1EDADF800)
    return swift_getSingletonMetadata();
  return result;
}

double static CGFloat.epsilon.getter()
{
  if (qword_1EDAE51A0 != -1)
    swift_once();
  return *(double *)&qword_1EDAE5028;
}

double SizeClass.margins(width:)(char a1)
{
  return dbl_1DA6823C8[a1];
}

void destroy for Glyph.Settings(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

void destroy for JoeColorClampBrightnessAlgorithm.Candidate(id *a1)
{

}

void static ViewControllerContainment.add(_:to:frame:)(void *a1, void *a2, uint64_t a3)
{
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  _QWORD v16[4];
  char v17;

  if (a1)
  {
    v15 = a1;
    if (!objc_msgSend(a2, sel_isViewLoaded))
    {

      return;
    }
    objc_msgSend(a2, sel_addChildViewController_, v15);
    sub_1DA48976C(a3, (uint64_t)v16);
    if ((v17 & 1) == 0)
    {
      v5 = *(double *)v16;
      v6 = *(double *)&v16[1];
      v7 = *(double *)&v16[2];
      v8 = *(double *)&v16[3];
      v9 = objc_msgSend(v15, sel_view);
      if (!v9)
        goto LABEL_13;
      v10 = v9;
      objc_msgSend(v9, sel_setFrame_, v5, v6, v7, v8);

    }
    v11 = objc_msgSend(a2, sel_view);
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v15, sel_view);
      if (v13)
      {
        v14 = v13;
        objc_msgSend(v12, sel_addSubview_, v13);

        objc_msgSend(v15, sel_didMoveToParentViewController_, a2);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
}

uint64_t sub_1DA48976C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t LibraryImageProvider.init(asPartOf:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[6];

  v16 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AssetCaches();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27D0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AssetDownloaders();
  sub_1DA66EE30();
  sub_1DA66F580();
  v11 = (void *)v17[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v17[0] + OBJC_IVAR___PUIAssetDownloaders_libraryArtworkSource, v7);

  sub_1DA66F580();
  sub_1DA4841D4(&qword_1EDAE4270, (uint64_t *)&unk_1EDAE27D0, MEMORY[0x1E0D7E858]);
  sub_1DA66C934();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2018);
  sub_1DA66F580();
  v12 = (void *)v17[5];
  __swift_instantiateConcreteTypeFromMangledName(qword_1EDAE02C8);
  sub_1DA66F580();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v13 = (void *)sub_1DA66FE44();
  LibraryImageProvider.init(caches:taskImageSource:imageStore:resizer:workQueue:)((uint64_t)v6, (uint64_t)v3, v12, (uint64_t)v17, v13, v16);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_1DA4899EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADF9A0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E3D8);
  v6 = sub_1DA6705D0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v12, (uint64_t)v5, &qword_1EDADF9A0);
    result = sub_1DA55CCFC((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for PreparedArtworkRequest();
    result = sub_1DA5ED40C((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AssetDownloaders()
{
  uint64_t result;

  result = qword_1EDAE0890;
  if (!qword_1EDAE0890)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t getEnumTagSinglePayload for PlaybackController.PreferredJumpInterval(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

ValueMetadata *type metadata accessor for PlaybackController.PreferredJumpInterval()
{
  return &type metadata for PlaybackController.PreferredJumpInterval;
}

char *sub_1DA489BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  char *v33;
  uint64_t *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  objc_class *v39;
  void *v40;
  void *v41;
  id v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  id v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void *v79;
  id v80;
  uint64_t v81;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  objc_super v115;
  uint64_t v116;
  id v117;
  uint64_t v118;

  v5 = v4;
  v97 = a3;
  v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1D30);
  v103 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v99 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1B08);
  v104 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v100 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A18);
  v12 = *(_QWORD *)(v11 - 8);
  v108 = v11;
  v109 = v12;
  MEMORY[0x1E0C80A78](v11);
  v105 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B38);
  v15 = *(_QWORD *)(v14 - 8);
  v110 = v14;
  v111 = v15;
  MEMORY[0x1E0C80A78](v14);
  v106 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A50);
  v18 = *(_QWORD *)(v17 - 8);
  v112 = v17;
  v113 = v18;
  MEMORY[0x1E0C80A78](v17);
  v107 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_1DA66FEB0();
  v96 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v91 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1DA66FF70();
  v84 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v114 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1A40);
  v88 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v85 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B48);
  v92 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v86 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1B70);
  v94 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v89 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_routingController;
  v27 = objc_allocWithZone(MEMORY[0x1E0CC22E8]);
  v28 = v5;
  v29 = objc_msgSend(v27, sel_init);
  v30 = objc_allocWithZone(MEMORY[0x1E0CC2318]);
  v31 = (void *)sub_1DA66F88C();
  v32 = objc_msgSend(v30, sel_initWithDataSource_name_, v29, v31);

  *(_QWORD *)&v5[v26] = v32;
  *(_QWORD *)&v28[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_subscriptions] = MEMORY[0x1E0DEE9D8];
  v33 = &v28[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_playerID];
  *(_QWORD *)v33 = a1;
  *((_QWORD *)v33 + 1) = a2;
  v34 = (uint64_t *)&v28[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_bundleID];
  *v34 = v97;
  v34[1] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35 = (void *)sub_1DA66F88C();
  v36 = (void *)sub_1DA66F88C();
  v37 = objc_msgSend((id)objc_opt_self(), sel_pathWithRoute_bundleID_playerID_, 0, v35, v36);

  v38 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v116 = (uint64_t)v38;
  v117 = v38;
  sub_1DA66E08C();
  swift_endAccess();

  v39 = (objc_class *)_s21PlayerPathCoordinatorCMa();
  v115.receiver = v28;
  v115.super_class = v39;
  v95 = (char *)objc_msgSendSuper2(&v115, sel_init);
  v97 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_routingController;
  v40 = *(void **)&v95[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_routingController];
  v83 = v95;
  objc_msgSend(v40, sel_setDiscoveryMode_, 2);
  v41 = (void *)objc_opt_self();
  v42 = objc_msgSend(v41, sel_defaultCenter);
  v43 = v114;
  sub_1DA66FF7C();

  sub_1DA47E32C((unint64_t *)&qword_1EDADEBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  v44 = sub_1DA66E0EC();
  v45 = *(void (**)(char *, uint64_t))(v84 + 8);
  v46 = v43;
  v47 = v21;
  v45(v46, v21);
  v118 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE21E0);
  v48 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0138) - 8) + 80);
  v49 = (v48 + 32) & ~v48;
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1DA678510;
  v51 = v50 + v49;
  v52 = sub_1DA66C0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 1, 1, v52);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C20);
  sub_1DA4841D4(&qword_1EDAE1C18, (uint64_t *)&unk_1EDAE1C20, MEMORY[0x1E0C95D90]);
  v53 = v85;
  sub_1DA66E23C();
  swift_release();
  swift_bridgeObjectRelease();
  v54 = objc_msgSend(v41, sel_defaultCenter);
  v55 = v114;
  sub_1DA66FF7C();

  v56 = v55;
  v57 = sub_1DA66E0EC();
  v45(v56, v47);
  v118 = v57;
  sub_1DA4841D4(&qword_1EDAE1A38, &qword_1EDAE1A40, MEMORY[0x1E0C95788]);
  v58 = v86;
  v59 = v87;
  sub_1DA66E1D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v53, v59);
  v60 = v91;
  sub_1DA66FE98();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v61 = (void *)sub_1DA66FEC8();
  v118 = (uint64_t)v61;
  sub_1DA4841D4(&qword_1EDAE1B40, &qword_1EDAE1B48, MEMORY[0x1E0C95A60]);
  sub_1DA4A89F0();
  v62 = v89;
  v63 = v90;
  sub_1DA66E260();

  (*(void (**)(char *, uint64_t))(v96 + 8))(v60, v98);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v58, v63);
  v64 = swift_allocObject();
  v65 = v83;
  *(_QWORD *)(v64 + 16) = v83;
  sub_1DA4841D4(&qword_1EDAE1B68, (uint64_t *)&unk_1EDAE1B70, MEMORY[0x1E0C95C28]);
  v66 = v65;
  v67 = v93;
  sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v62, v67);
  swift_beginAccess();
  v114 = (char *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1FD0);
  sub_1DA4841D4(&qword_1EDAE1FE0, (uint64_t *)&unk_1EDAE1FD0, MEMORY[0x1E0DEAF58]);
  sub_1DA66DF90();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1DA8);
  v68 = v99;
  sub_1DA66E098();
  swift_endAccess();
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1D20, (uint64_t *)&unk_1EDAE1D30, MEMORY[0x1E0C96190]);
  v69 = v100;
  v70 = v101;
  sub_1DA66E17C();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v68, v70);
  v71 = MEMORY[0x1E0C95950];
  sub_1DA4841D4(&qword_1EDAE1B00, (uint64_t *)&unk_1EDAE1B08, MEMORY[0x1E0C95950]);
  v72 = v102;
  v73 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v69, v72);
  v118 = v73;
  v116 = sub_1DA49170C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1C50);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C40, &qword_1EDAE1C50, MEMORY[0x1E0C95D90]);
  v74 = v105;
  sub_1DA66E158();
  swift_release();
  swift_release();
  sub_1DA4841D4(&qword_1EDAE1A10, (uint64_t *)&unk_1EDAE1A18, MEMORY[0x1E0C95698]);
  v75 = v106;
  v76 = v108;
  sub_1DA66E17C();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v74, v76);
  sub_1DA4841D4(&qword_1EDAE1B30, &qword_1EDAE1B38, v71);
  v77 = v107;
  v78 = v110;
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v75, v78);
  v79 = *(void **)&v95[v97];
  *(_QWORD *)(swift_allocObject() + 16) = v79;
  sub_1DA4841D4(&qword_1EDAE1A48, (uint64_t *)&unk_1EDAE1A50, MEMORY[0x1E0C958E0]);
  v80 = v79;
  v81 = v112;
  sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v77, v81);
  swift_beginAccess();
  sub_1DA66DF90();
  swift_endAccess();
  swift_release();

  return v66;
}

void destroy for LegacyNowPlayingArtworkDataProvider(id *a1)
{

}

_QWORD *initializeBufferWithCopyOfBuffer for LegacyNowPlayingArtworkDataProvider(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

char *sub_1DA48A84C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    sub_1DA66BE60();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(char **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
      case 5u:
        v12 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v12;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
        v11 = sub_1DA66EB90();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v13 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v13;
        (**(void (***)(void *, const void *))(v13 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_1DA48AA04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  _QWORD *v20;
  NSObject *v21;
  void *v22;
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v2 = sub_1DA66DEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if (v7)
    {
      v8 = *(void **)a1;
      v22 = *(void **)(a1 + 8);
      sub_1DA6040A8(v8, v6);
      sub_1DA6040A8(v7, v22);
      if ((sub_1DA6030B4() & 1) == 0)
      {
        sub_1DA563D70(v7, v22, 1);

        return;
      }
      sub_1DA66DE70();
      v9 = v7;
      v10 = sub_1DA66DEDC();
      v11 = sub_1DA66FDC0();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        v20 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v12 = 138412290;
        v21 = v9;
        v13 = -[NSObject playerPath](v9, sel_playerPath);
        v14 = v13;
        if (v13)
          v23 = v13;
        else
          v23 = 0;
        sub_1DA6702C4();
        v17 = v20;
        *v20 = v14;
        v9 = v21;

        _os_log_impl(&dword_1DA478000, v10, v11, "Received timeout for player path %@", v12, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v17, -1, -1);
        MEMORY[0x1DF0A0474](v12, -1, -1);
      }
      else
      {

        v10 = v9;
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        v18 = -[NSObject playerPath](v9, sel_playerPath);
        if (!v18)
        {
          __break(1u);
          return;
        }
        v19 = v18;
        sub_1DA6034D8(v18);
        sub_1DA563D70(v7, v22, 1);
        swift_release();

      }
      else
      {
        sub_1DA563D70(v7, v22, 1);
      }

    }
  }
  else if (v7)
  {
    v22 = *(void **)(a1 + 8);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v15 = objc_msgSend(v7, sel_playerPath);
      swift_beginAccess();
      v16 = sub_1DA48ADBC((unint64_t)v15);
      swift_endAccess();
      if (v16)
      {
        swift_getObjectType();
        sub_1DA66FF34();
        swift_unknownObjectRelease();
      }
      sub_1DA563D70(v7, v22, 0);
      sub_1DA563D70(v7, v22, 0);
      swift_release();

    }
  }
}

uint64_t sub_1DA48ADBC(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_1DA48AF08(a1);
    v13 = v12;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1DA57CAAC();
        v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = (id)a1;
  v7 = sub_1DA67054C();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  v8 = sub_1DA6703A8();
  v9 = sub_1DA603E68(v5, v8);
  sub_1DA66BE60();
  a1 = sub_1DA48AF08((uint64_t)v6);
  v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v15 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * a1);
  sub_1DA5A86D4(a1, v9);
  *v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1DA48AF08(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA670198();
  return sub_1DA55D608(a1, v2, (unint64_t *)&unk_1F026A758);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1DA48AF68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1DA66DDD4();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t static OSSignposter.bootstrap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA48AF68(&qword_1EDADFCB0, (uint64_t)qword_1EDADFC90, a1);
}

void sub_1DA48AFEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE19F0)
  {
    type metadata accessor for ArtworkBackgroundSessionDescriptor();
    sub_1DA6610EC();
    v0 = sub_1DA66D750();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE19F0);
  }
}

id AssetDownloaders.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  char *v18;
  id v19;
  void (*v20)(uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  id v43;
  objc_class *v44;
  id v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  objc_super v59;
  uint64_t v60;
  unint64_t v61;

  v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27D0);
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v55 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4200);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v48 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ArtworkBackgroundSessionDescriptor();
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19E8);
  v58 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v57 = (char *)&v47 - v9;
  v10 = sub_1DA66C358();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v47 - v15;
  v17 = (void *)objc_opt_self();
  v18 = v0;
  v19 = objc_msgSend(v17, sel_libraryDirectory);
  sub_1DA66C304();

  sub_1DA66C2D4();
  v20 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v52 = v10;
  v51 = v20;
  v20((uint64_t)v13, v10);
  sub_1DA4A8BC0();
  v21 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultStore);
  if (qword_1EDAE0190 != -1)
    swift_once();
  v22 = type metadata accessor for AssetCaches();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EDAE0178);
  sub_1DA484548(v23, (uint64_t)v5 + *(int *)(v3 + 20));
  *v5 = v21;
  sub_1DA66C2D4();
  sub_1DA6610EC();
  v24 = v57;
  sub_1DA66D72C();
  v25 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v26 = v53;
  v25(&v18[OBJC_IVAR___PUIAssetDownloaders_backgroundArtworkDownloader], v24, v53);
  v25(v7, v24, v26);
  sub_1DA66CEBC();
  sub_1DA661134();
  v27 = v48;
  sub_1DA66D438();
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v18[OBJC_IVAR___PUIAssetDownloaders_backgroundArtworkSource], v27, v50);
  v28 = objc_msgSend((id)objc_opt_self(), sel_ephemeralSessionConfiguration);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2228);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  v60 = 0x6567412D72657355;
  v61 = 0xEA0000000000746ELL;
  v30 = MEMORY[0x1E0DEA968];
  sub_1DA6703F0();
  v31 = objc_opt_self();
  v50 = (uint64_t)v16;
  v32 = (void *)v31;
  v33 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  v34 = objc_msgSend(v32, sel_userAgentForProcessInfo_, v33);

  v35 = sub_1DA66F8BC();
  v37 = v36;

  *(_QWORD *)(inited + 96) = v30;
  *(_QWORD *)(inited + 72) = v35;
  *(_QWORD *)(inited + 80) = v37;
  sub_1DA4950BC(inited);
  v38 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setHTTPAdditionalHeaders_, v38);

  objc_msgSend(v28, sel_setHTTPMaximumConnectionsPerHost_, 15);
  v39 = v28;
  v40 = v55;
  sub_1DA66D7F8();
  v41 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  v42 = v56;
  v41(&v18[OBJC_IVAR___PUIAssetDownloaders_libraryArtworkSource], v40, v56);
  v43 = v39;
  sub_1DA66D7F8();
  v41(&v18[OBJC_IVAR___PUIAssetDownloaders_storeArtworkSource], v40, v42);

  v44 = (objc_class *)type metadata accessor for AssetDownloaders();
  v59.receiver = v18;
  v59.super_class = v44;
  v45 = objc_msgSendSuper2(&v59, sel_init);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v26);
  v51(v50, v52);
  return v45;
}

ValueMetadata *type metadata accessor for Glyph()
{
  return &type metadata for Glyph;
}

void static ViewControllerContainment.remove(_:)(void *a1)
{
  id v1;
  void *v2;
  id v3;

  if (a1)
  {
    v3 = a1;
    objc_msgSend(v3, sel_willMoveToParentViewController_, 0);
    v1 = objc_msgSend(v3, sel_view);
    if (v1)
    {
      v2 = v1;
      objc_msgSend(v1, sel_removeFromSuperview);

      objc_msgSend(v3, sel_removeFromParentViewController);
    }
    else
    {
      __break(1u);
    }
  }
}

ValueMetadata *_s21PlayerPathCoordinatorC14PlayerPathPairVMa()
{
  return &_s21PlayerPathCoordinatorC14PlayerPathPairVN;
}

uint64_t UIButton.pui_shouldBeHidden.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  id v8;

  v1 = objc_msgSend(v0, sel_titleForState_, 0);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1DA66F8BC();
    v5 = v4;

    swift_bridgeObjectRelease();
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v3 & 0xFFFFFFFFFFFFLL;
    v7 = v6 == 0;
  }
  else
  {
    v7 = 1;
  }
  v8 = objc_msgSend(v0, sel_imageForState_, 0);
  if (v8)
  {

  }
  else if (v7)
  {
    return 1;
  }
  return 0;
}

BOOL _sSo6CGSizeV10PodcastsUIE3eetoiySbAB_ABtFZ_0(double a1, double a2, double a3, double a4)
{
  double v4;
  double v5;
  uint64_t v6;
  double v7;

  v4 = fabs(a1);
  v5 = fabs(a3);
  if (v5 < v4)
    v4 = v5;
  v6 = (*(_QWORD *)&v4 >> 52) & 0x7FFLL;
  if (v6)
  {
    if (v6 == 2047)
      return 0;
    v7 = COERCE_DOUBLE(*(_QWORD *)&v4 & 0x7FF0000000000000) * 2.22044605e-16;
  }
  else
  {
    *(_QWORD *)&v7 = 1;
  }
  if (vabdd_f64(a1, a3) < v7)
    return _s12CoreGraphics7CGFloatV10PodcastsUIE3eetoiySbAC_ACtFZ_0(a2, a4);
  return 0;
}

void type metadata accessor for MPCPlayerItemDurationSnapshot(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1EDAE20E8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1DA4E41DC(a1, (unint64_t *)&unk_1EDAE2050);
}

Swift::Void __swiftcall UIStackView.addArrangedSubviews(_:)(Swift::OpaquePointer a1)
{
  void *v1;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;

  if (!((unint64_t)a1._rawValue >> 62))
  {
    v3 = *(_QWORD *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1DA6705A0();
  if (!v3)
    goto LABEL_10;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if (((unint64_t)a1._rawValue & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1DF09EE48](i, a1._rawValue);
      else
        v5 = *((id *)a1._rawValue + i + 4);
      v6 = v5;
      objc_msgSend(v1, sel_addArrangedSubview_, v5);

    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_1DA48B908()
{
  uint64_t v0;

  sub_1DA484C74(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

BOOL _s12CoreGraphics7CGFloatV10PodcastsUIE3eetoiySbAC_ACtFZ_0(double a1, double a2)
{
  double v2;
  double v3;
  uint64_t v4;
  double v5;
  uint64_t v6;

  v2 = fabs(a1);
  v3 = fabs(a2);
  if (v3 < v2)
    v2 = v3;
  v4 = (*(_QWORD *)&v2 >> 52) & 0x7FFLL;
  if (!v4)
  {
    v6 = 1;
LABEL_7:
    v5 = *(double *)&v6;
    return vabdd_f64(a1, a2) < v5;
  }
  if (v4 == 2047)
  {
    v6 = 0x7FF8000000000000;
    goto LABEL_7;
  }
  v5 = COERCE_DOUBLE(*(_QWORD *)&v2 & 0x7FF0000000000000) * 2.22044605e-16;
  return vabdd_f64(a1, a2) < v5;
}

uint64_t NowPlayingArtwork.Placement.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DA48B9A0 + 4 * byte_1DA6805D0[*v0]))(0x7972616D697270, 0xE700000000000000);
}

uint64_t sub_1DA48B9A0()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1DA48B9B8()
{
  return 0x746E65436F666E69;
}

uint64_t sub_1DA48B9D4()
{
  return 0x65676150776F6873;
}

uint64_t sub_1DA48B9F4()
{
  return 0x706F72646B636162;
}

void destroy for PageRenderEvent(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  if (!swift_getEnumCaseMultiPayload())
  {
    type metadata accessor for PageRenderActivity();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 2)
    {

    }
    else if (EnumCaseMultiPayload == 1)
    {
      v3 = sub_1DA66ED28();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    }
  }
}

double sub_1DA48BA90@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1DA488DD4(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t static PUITextStyle.footnote.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD7E0], a1);
}

uint64_t static PUITextStyle.caption2.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD7D0], a1);
}

uint64_t static PUITextStyle.subhead.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D840(MEMORY[0x1E0CDD790], a1);
}

uint64_t PUITextStyle.tight.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA47D7B0(MEMORY[0x1E0CDD6D8], a1);
}

uint64_t sub_1DA48BACC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return sub_1DA66BE60();
}

uint64_t getEnumTagSinglePayload for FollowRSSFeedAppIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

void sub_1DA48BB54(id *a1)
{
  uint64_t v2;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:

      break;
    case 1u:
    case 2u:
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 3u:
    case 4u:
      v2 = sub_1DA66EB90();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 6u:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      break;
    default:
      return;
  }
}

uint64_t sub_1DA48BBEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 280) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE2040);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 288) = v4;
  *v4 = v2;
  v4[1] = sub_1DA4B1AE0;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA48BCB8()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[38] = v0[8];
  sub_1DA47D774(0, &qword_1EDAE2028);
  v1 = (_QWORD *)swift_task_alloc();
  v0[39] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4B1A7C;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA48BD44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  *(_BYTE *)(v3 + 328) = a3;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = a2;
  *(_QWORD *)(v3 + 96) = sub_1DA66F0A0();
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  *(_QWORD *)(v3 + 112) = sub_1DA66F088();
  *(_QWORD *)(v3 + 120) = swift_task_alloc();
  v4 = sub_1DA66F5D4();
  *(_QWORD *)(v3 + 128) = v4;
  *(_QWORD *)(v3 + 136) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 144) = swift_task_alloc();
  v5 = sub_1DA66F07C();
  *(_QWORD *)(v3 + 152) = v5;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 168) = swift_task_alloc();
  *(_QWORD *)(v3 + 176) = swift_task_alloc();
  *(_QWORD *)(v3 + 184) = swift_task_alloc();
  *(_QWORD *)(v3 + 192) = swift_task_alloc();
  *(_QWORD *)(v3 + 200) = swift_task_alloc();
  v6 = sub_1DA66F4FC();
  *(_QWORD *)(v3 + 208) = v6;
  *(_QWORD *)(v3 + 216) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 224) = swift_task_alloc();
  *(_QWORD *)(v3 + 232) = swift_task_alloc();
  *(_QWORD *)(v3 + 240) = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2030);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 248) = v7;
  *v7 = v3;
  v7[1] = sub_1DA4B1B44;
  return sub_1DA66EDD0();
}

uint64_t UIView.fullSizeSubviewConstraints(_:insets:)(void *a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DA67E620;
  v12 = objc_msgSend(a1, sel_trailingAnchor);
  v13 = objc_msgSend(v5, sel_trailingAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, -a5);

  *(_QWORD *)(v11 + 32) = v14;
  v15 = objc_msgSend(a1, sel_leadingAnchor);
  v16 = objc_msgSend(v5, sel_leadingAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v16, a3);

  *(_QWORD *)(v11 + 40) = v17;
  v18 = objc_msgSend(a1, sel_topAnchor);
  v19 = objc_msgSend(v5, sel_topAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, a2);

  *(_QWORD *)(v11 + 48) = v20;
  v21 = objc_msgSend(a1, sel_bottomAnchor);
  v22 = objc_msgSend(v5, sel_bottomAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, -a4);

  *(_QWORD *)(v11 + 56) = v23;
  sub_1DA66FAB4();
  return v11;
}

id sub_1DA48C0F8(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *a2);
  *a3 = result;
  return result;
}

void sub_1DA48C140(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v4 = *a2;
  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_, *a2);
  v6 = objc_msgSend(v5, sel_fontDescriptorWithSymbolicTraits_, 2);

  v7 = (void *)objc_opt_self();
  if (v6)
  {
    v8 = objc_msgSend(v7, sel_fontWithDescriptor_size_, v6, 0.0);

  }
  else
  {
    v8 = objc_msgSend(v7, sel_preferredFontForTextStyle_, v4);
  }
  *a3 = v8;
}

uint64_t sub_1DA48C208(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

UIEdgeInsets __swiftcall UIEdgeInsets.subtracting(other:)(UIEdgeInsets other)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  UIEdgeInsets result;

  v5 = v1 - other.top;
  v6 = v2 - other.left;
  v7 = v3 - other.bottom;
  v8 = v4 - other.right;
  result.right = v8;
  result.bottom = v7;
  result.left = v6;
  result.top = v5;
  return result;
}

uint64_t sub_1DA48C270(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_1DA670798();
  sub_1DA6707A4();
  v6 = sub_1DA6707C8();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1DA48C38C(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1DA48C38C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1DA5DAD68();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1DA5DC504();
      goto LABEL_14;
    }
    sub_1DA5DD144();
  }
  v8 = *v3;
  sub_1DA670798();
  sub_1DA6707A4();
  result = sub_1DA6707C8();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_1DA670738();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1DA48C4D8(uint64_t a1, uint64_t a2)
{
  return sub_1DA485B88(a1, a2);
}

uint64_t Promise.mapError(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = sub_1DA66F658();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  sub_1DA66BE60();
  swift_retain_n();
  sub_1DA66F61C();
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_1DA48C59C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DA66DD74() - 8) + 80);
  return sub_1DA485CC0(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), v1 + ((v4 + 49) & ~v4), v3);
}

uint64_t sub_1DA48C5F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA48C600(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1DA48C600(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE53C0);
  v7 = sub_1DA6707D4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(a4 - 8) + 16))((char *)&v13 - v10, a1, a4, v9);
  swift_storeEnumTagMultiPayload();
  a2(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1DA48C6D4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1DA485A8C(a1, a2, v2);
}

uint64_t initializeWithCopy for JSPackage(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10PodcastsUI5GlyphV8SettingsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  char v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  void *v9;
  void *v10;
  double v11;
  int v12;
  void *v13;
  char v14;
  uint64_t result;
  id v16;
  id v17;
  char v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  id v22;
  id v23;
  char v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *(void **)(a1 + 16);
  v3 = *(double *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(unsigned __int8 *)(a1 + 56);
  v7 = *(unsigned __int8 *)(a1 + 57);
  v8 = *(unsigned __int8 *)(a1 + 58);
  v9 = *(void **)(a1 + 64);
  v10 = *(void **)(a2 + 16);
  v11 = *(double *)(a2 + 24);
  v12 = *(unsigned __int8 *)(a2 + 32);
  v30 = *(_QWORD *)(a2 + 40);
  v31 = *(_QWORD *)(a1 + 40);
  v29 = *(_QWORD *)(a2 + 48);
  v27 = *(unsigned __int8 *)(a2 + 57);
  v28 = *(unsigned __int8 *)(a2 + 56);
  v26 = *(unsigned __int8 *)(a2 + 58);
  v13 = *(void **)(a2 + 64);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v14 = sub_1DA6706D8(), result = 0, (v14 & 1) != 0))
  {
    if (v2)
    {
      if (!v10)
        return 0;
      v25 = v5;
      sub_1DA47D774(0, (unint64_t *)&qword_1EDADE948);
      v16 = v10;
      v17 = v2;
      v18 = sub_1DA6701A4();

      if ((v18 & 1) == 0)
        return 0;
    }
    else
    {
      v25 = v5;
      if (v10)
        return 0;
    }
    if ((v4 & 1) != 0)
    {
      if (v31 == v30)
        v19 = v12;
      else
        v19 = 0;
      v20 = v19 == 1;
      v21 = v25;
      if (!v20)
        return 0;
    }
    else
    {
      result = 0;
      v21 = v25;
      if ((v12 & 1) != 0 || v3 != v11 || v31 != v30)
        return result;
    }
    result = 0;
    if (v21 == v29 && ((v6 ^ v28) & 1) == 0 && ((v7 ^ v27) & 1) == 0 && ((v8 ^ v26) & 1) == 0)
    {
      if (v9)
      {
        if (v13)
        {
          sub_1DA47D774(0, &qword_1F026BFA8);
          v22 = v13;
          v23 = v9;
          v24 = sub_1DA6701A4();

          if ((v24 & 1) != 0)
            return 1;
        }
      }
      else if (!v13)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t static Glyph.PlayControls.play.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE5230, &qword_1EDAE5228, a1);
}

uint64_t destroy for ArtworkBackgroundSessionDescriptor(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for AssetCaches();
  v7 = &v4[*(int *)(v6 + 20)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = &v4[*(int *)(v6 + 24)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

void **initializeWithCopy for ArtworkBackgroundSessionDescriptor(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = v4;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
  v10 = type metadata accessor for AssetCaches();
  v11 = *(int *)(v10 + 20);
  v12 = &v6[v11];
  v13 = &v7[v11];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = *(int *)(v10 + 24);
  v16 = &v6[v15];
  v17 = &v7[v15];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

void sub_1DA48CB10()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1DA48D80C(319, &qword_1EDADFF30, &qword_1EDADFC40);
  if (v0 <= 0x3F)
  {
    sub_1DA48D80C(319, &qword_1EDADFF20, &qword_1EDADFC38);
    if (v1 <= 0x3F)
    {
      sub_1DA48D80C(319, (unint64_t *)&unk_1EDADFF50, &qword_1EDADFC60);
      if (v2 <= 0x3F)
      {
        sub_1DA48D80C(319, &qword_1EDADFF40, (uint64_t *)&unk_1EDADFC48);
        if (v3 <= 0x3F)
        {
          sub_1DA48D80C(319, &qword_1EDADFF78, &qword_1EDAE0118);
          if (v4 <= 0x3F)
          {
            sub_1DA4B2FC0();
            if (v5 <= 0x3F)
            {
              sub_1DA5E4B24();
              if (v6 <= 0x3F)
                swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

uint64_t NowPlayingAlignmentCoordinator.__allocating_init(asPartOf:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A620);
  v23 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AssetCaches();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC18);
  MEMORY[0x1E0C80A78](v10);
  v21 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC48);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v14;
  v31 = 0;
  memset(v30, 0, sizeof(v30));
  v29 = 0;
  memset(v28, 0, sizeof(v28));
  v15 = sub_1DA66D150();
  memset(v26, 0, sizeof(v26));
  v27 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC78);
  sub_1DA66EE30();
  sub_1DA66F580();
  sub_1DA66F580();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v9[*(int *)(v7 + 24)], v3);
  sub_1DA4B2E3C((uint64_t)v9);
  sub_1DA66C97C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16 = sub_1DA66C94C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v2, v0);
  v24 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC30);
  sub_1DA52E4A0();
  v17 = (uint64_t)v21;
  sub_1DA66C898();
  swift_release();
  type metadata accessor for PlaybackController();
  sub_1DA66F580();
  v18 = v24;
  swift_allocObject();
  v19 = NowPlayingAlignmentCoordinator.init(fullTimelineAligner:scoutingAligner:alignment:transcriptModel:transcriptProvider:alignmentCache:playbackController:)((uint64_t)v30, (uint64_t)v28, (uint64_t)v26, (uint64_t)v22, &v25, v17, v18);
  swift_release();
  return v19;
}

ValueMetadata *type metadata accessor for ExtendedLaunchController.LoadingHandle()
{
  return &type metadata for ExtendedLaunchController.LoadingHandle;
}

uint64_t ExplicitContentPresenter.symbol.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  char v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = v1 + 4;
  v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1DA48D054(v2, &v5);
  os_unfair_lock_unlock(v3);
  if (v5)
    return 11768802;
  else
    return 3028656112;
}

void sub_1DA48D054(_BYTE *a1@<X0>, char *a2@<X8>)
{
  int v3;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  char v12;

  v3 = *a1;
  if (v3 != 2)
  {
    v12 = v3 & 1;
    goto LABEL_12;
  }
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_syncStringForKey_, *MEMORY[0x1E0D7F2C8]);

  if (v6)
  {
    v7 = sub_1DA66F8BC();
    v9 = v8;

    if (v7 == 0x6165726F6BLL && v9 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_1DA6706D8();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        goto LABEL_8;
    }
    v12 = 1;
    *a1 = 1;
    goto LABEL_12;
  }
LABEL_8:
  v12 = 0;
  *a1 = 0;
LABEL_12:
  *a2 = v12;
}

void static PageRenderContentTypes.unspecified.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t getEnumTagSinglePayload for LibraryImageProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for ExtendedLaunchStatus()
{
  return &type metadata for ExtendedLaunchStatus;
}

id sub_1DA48D19C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString;
  v2 = *(void **)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString);
  }
  else
  {
    v4 = sub_1DA48D220(*(void **)(v0 + OBJC_IVAR___AMPLanguageAwareString_baseAttributedString), *(_QWORD **)(v0 + OBJC_IVAR___AMPLanguageAwareString_paragraphs));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1DA48D220(void *a1, _QWORD *a2)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t inited;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;

  if (a1)
    return a1;
  v4 = a2[2];
  if (v4 == 1
    && (v6 = a2[4],
        v5 = a2[5],
        v7 = a2[6],
        swift_bridgeObjectRetain(),
        v8 = sub_1DA66F9DC(),
        swift_bridgeObjectRelease(),
        !v6)
    && v5 == v8)
  {
    switch(v7)
    {
      case -1:
        if (qword_1EDAE5210 != -1)
          swift_once();
        v9 = &qword_1EDAE50F0;
        goto LABEL_32;
      case 1:
        if (qword_1EDAE4FD8 != -1)
          swift_once();
        v9 = &qword_1EDAE4FC8;
LABEL_32:
        v20 = (void *)*v9;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E7E0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1DA678510;
        v22 = (void *)*MEMORY[0x1E0DC1178];
        *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1178];
        *(_QWORD *)(inited + 64) = sub_1DA47D774(0, (unint64_t *)&unk_1EDAE5100);
        *(_QWORD *)(inited + 40) = v20;
        v23 = v20;
        swift_bridgeObjectRetain();
        v24 = v23;
        v25 = v22;
        sub_1DA63CD6C(inited);
        v26 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
        v27 = (void *)sub_1DA66F88C();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1DA5853EC();
        v28 = (void *)sub_1DA66F748();
        swift_bridgeObjectRelease();
        v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

        return v29;
      case 0:
        if (qword_1EDAE5208 != -1)
          swift_once();
        v9 = &qword_1EDAE50E8;
        goto LABEL_32;
    }
LABEL_33:
    result = (id)sub_1DA670570();
    __break(1u);
  }
  else
  {
    v10 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v10, sel_initWithString_, v11);

    if (v4)
    {
      swift_bridgeObjectRetain();
      v13 = a2 + 6;
      v14 = *MEMORY[0x1E0DC1178];
      do
      {
        v17 = *(v13 - 2);
        v16 = *(v13 - 1);
        v18 = *v13;
        if (*v13 == -1)
        {
          v15 = &qword_1EDAE50F0;
          if (qword_1EDAE5210 != -1)
          {
            swift_once();
            v15 = &qword_1EDAE50F0;
          }
        }
        else if (v18 == 1)
        {
          v15 = &qword_1EDAE4FC8;
          if (qword_1EDAE4FD8 != -1)
          {
            swift_once();
            v15 = &qword_1EDAE4FC8;
          }
        }
        else
        {
          if (v18)
            goto LABEL_33;
          v15 = &qword_1EDAE50E8;
          if (qword_1EDAE5208 != -1)
          {
            swift_once();
            v15 = &qword_1EDAE50E8;
          }
        }
        v13 += 4;
        objc_msgSend(v12, sel_addAttribute_value_range_, v14, *v15, v17, v16);
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3498]), sel_initWithAttributedString_, v12);

    return v19;
  }
  return result;
}

void sub_1DA48D654()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1DA4A9F5C();
  if (v0 <= 0x3F)
  {
    sub_1DA48D80C(319, &qword_1EDAE1E08, &qword_1EDAE20D0);
    if (v1 <= 0x3F)
    {
      sub_1DA48D80C(319, (unint64_t *)&unk_1EDAE1E20, (uint64_t *)&unk_1EDAE20D8);
      if (v2 <= 0x3F)
      {
        sub_1DA48D80C(319, &qword_1EDAE1E38, &qword_1EDAE20F0);
        if (v3 <= 0x3F)
        {
          sub_1DA48D80C(319, (unint64_t *)&unk_1EDAE1DD0, (uint64_t *)&unk_1EDAE0CC8);
          if (v4 <= 0x3F)
          {
            sub_1DA48D80C(319, &qword_1EDADFF68, &qword_1EDAE0020);
            if (v5 <= 0x3F)
            {
              sub_1DA48D80C(319, &qword_1EDAE1E50, &qword_1EDAE2158);
              if (v6 <= 0x3F)
                swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void sub_1DA48D80C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1DA66E0D4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1DA48D858(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  id v5;
  id v6;

  v3 = *a1;
  if (v3
    && (v4 = objc_msgSend(v3, sel_tracklist),
        v5 = objc_msgSend(v4, sel_playingItem),
        v4,
        v5))
  {
    v6 = objc_msgSend(v5, sel_seekCommand);

  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
}

void sub_1DA48D8E8(id *a1@<X0>, uint64_t a2@<X8>)
{
  char **v2;
  uint64_t v3;
  id v5;
  id v6;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *a1;
  if (!*a1)
    goto LABEL_19;
  v6 = objc_msgSend(*a1, sel_preferredBackwardJumpIntervals);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDADE760);
  v7 = sub_1DA66FA9C();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
    if (!v16)
      goto LABEL_18;
  }
  else if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_19:
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 1;
    return;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x1DF09EE48](0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      v17 = sub_1DA6705A0();
      swift_bridgeObjectRelease();
      if (v17)
        goto LABEL_9;
      goto LABEL_18;
    }
    v8 = *(id *)(v7 + 32);
  }
  v9 = v8;
  swift_bridgeObjectRelease();
  v2 = &selRef__adjustedNativeFontDescriptorWithBaseNativeFontDescriptor_forCustomTextStyle_;
  objc_msgSend(v9, sel_doubleValue);
  v3 = v10;

  v11 = objc_msgSend(v5, sel_preferredForwardJumpIntervals);
  v7 = sub_1DA66FA9C();

  if (v7 >> 62)
    goto LABEL_17;
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_18;
LABEL_9:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x1DF09EE48](0, v7);
    goto LABEL_12;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v7 + 32);
LABEL_12:
    v13 = v12;
    swift_bridgeObjectRelease();
    objc_msgSend(v13, v2[441]);
    v15 = v14;

    *(_QWORD *)a2 = v3;
    *(_QWORD *)(a2 + 8) = v15;
    *(_BYTE *)(a2 + 16) = 0;
    return;
  }
  __break(1u);
}

uint64_t _s21PlayerPathCoordinatorCMa()
{
  uint64_t result;

  result = qword_1EDAE0CB8;
  if (!qword_1EDAE0CB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t storeEnumTagSinglePayload for FollowRSSFeedAppIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

id sub_1DA48DB5C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1DA54CB00(a1, (SEL *)&selRef_tracklist, a2);
}

void sub_1DA48DB68(uint64_t a1)
{
  sub_1DA48AA04(a1);
}

_QWORD *sub_1DA48DB70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  _QWORD v30[2];
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;

  v33 = a1;
  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1BA0);
  v6 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  v38 = v6;
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DA66FEBC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66FE80();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v12);
  v14 = sub_1DA66EA04();
  MEMORY[0x1E0C80A78](v14);
  v15 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
  v16 = v2 + 16;
  v17 = v15;
  v36 = v16;
  v30[1] = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  sub_1DA66E9E0();
  v39 = v17;
  sub_1DA47E32C((unint64_t *)&unk_1EDADE730, v13, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6F8);
  sub_1DA4841D4((unint64_t *)&unk_1EDADE700, &qword_1EDADE6F8, MEMORY[0x1E0DEAF38]);
  sub_1DA670378();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF8D0], v8);
  v18 = sub_1DA66FEF8();
  v19 = v31;
  v31[3] = v18;
  v20 = sub_1DA4A8F3C(MEMORY[0x1E0DEE9D8]);
  v22 = v33;
  v21 = v34;
  v19[4] = v20;
  v19[5] = v21;
  v39 = v22;
  v40 = (id)v19[3];
  v23 = v40;
  v24 = sub_1DA66FE8C();
  v25 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v32, 1, 1, v24);
  v26 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CD8);
  sub_1DA4841D4(&qword_1EDAE1CD0, &qword_1EDAE1CD8, MEMORY[0x1E0C95D90]);
  sub_1DA4A89F0();
  v27 = v35;
  sub_1DA66E248();
  sub_1DA47E2F0(v25, (uint64_t *)&unk_1EDAE20A0);

  swift_allocObject();
  swift_weakInit();
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B90, &qword_1EDAE1BA0, MEMORY[0x1E0C95CB8]);
  v28 = v37;
  sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v28);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1FD0);
  sub_1DA4841D4(&qword_1EDAE1FE0, (uint64_t *)&unk_1EDAE1FD0, MEMORY[0x1E0DEAF58]);
  sub_1DA66DF90();
  swift_endAccess();
  swift_release();
  swift_release();
  return v19;
}

ValueMetadata *type metadata accessor for PlaybackController.ResponseError()
{
  return &type metadata for PlaybackController.ResponseError;
}

uint64_t sub_1DA48DFA0(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1DA66E098();
  return swift_endAccess();
}

uint64_t sub_1DA48E004(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_1DA66DEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - v7;
  if (!*a1)
  {
    sub_1DA66DE70();
    v20 = sub_1DA66DEDC();
    v21 = sub_1DA66FDC0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1DA478000, v20, v21, "Now playing item is empty", v22, 2u);
      MEMORY[0x1DF0A0474](v22, -1, -1);
    }

    v23 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
    v24 = v8;
    goto LABEL_9;
  }
  v9 = *a1;
  sub_1DA66DE70();
  v10 = v9;
  v11 = sub_1DA66DEDC();
  v12 = sub_1DA66FDC0();
  if (!os_log_type_enabled(v11, v12))
  {

    v23 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
    v24 = v5;
LABEL_9:
    v25 = v2;
    return v23(v24, v25);
  }
  v29 = v2;
  v13 = swift_slowAlloc();
  v14 = swift_slowAlloc();
  v28 = v14;
  *(_DWORD *)v13 = 141558275;
  v30 = 1752392040;
  v31 = v14;
  sub_1DA6702C4();
  *(_WORD *)(v13 + 12) = 2081;
  v15 = objc_msgSend(v10, sel_title);
  if (v15)
  {
    v16 = v15;
    v17 = sub_1DA66F8BC();
    v19 = v18;

  }
  else
  {
    v19 = 0xE500000000000000;
    v17 = 0x3E4C494E3CLL;
  }
  v30 = sub_1DA49AD00(v17, v19, &v31);
  sub_1DA6702C4();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1DA478000, v11, v12, "Now playing item changed to: '%{private,mask.hash}s'", (uint8_t *)v13, 0x16u);
  v26 = v28;
  swift_arrayDestroy();
  MEMORY[0x1DF0A0474](v26, -1, -1);
  MEMORY[0x1DF0A0474](v13, -1, -1);

  v23 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v24 = v5;
  v25 = v29;
  return v23(v24, v25);
}

uint64_t PlaybackController.LogController.init(playbackController:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1D98);
  v2 = *(_QWORD *)(v1 - 8);
  v27 = v1;
  v28 = v2;
  MEMORY[0x1E0C80A78](v1);
  v25 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFD40);
  v5 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  v30 = v5;
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4478);
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D60);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4488);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E00);
  sub_1DA66E098();
  swift_endAccess();
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1D50, &qword_1EDAE1D60, MEMORY[0x1E0C96190]);
  sub_1DA545574();
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v18 = MEMORY[0x1E0C958E0];
  sub_1DA4841D4(&qword_1EDAE4480, &qword_1EDAE4488, MEMORY[0x1E0C958E0]);
  sub_1DA66E284();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1FD0);
  sub_1DA4841D4(&qword_1EDAE1FE0, (uint64_t *)&unk_1EDAE1FD0, MEMORY[0x1E0DEAF58]);
  sub_1DA66DF90();
  swift_release();
  v32 = sub_1DA497BB4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1C50);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C40, &qword_1EDAE1C50, MEMORY[0x1E0C95D90]);
  sub_1DA66E26C();
  swift_release();
  sub_1DA4841D4(&qword_1EDAE4470, &qword_1EDAE4478, v18);
  sub_1DA66E284();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
  sub_1DA66DF90();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1E40);
  v19 = v25;
  sub_1DA66E098();
  swift_endAccess();
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1D88, (uint64_t *)&unk_1EDAE1D98, MEMORY[0x1E0C96190]);
  sub_1DA53DDD4();
  v21 = v26;
  v20 = v27;
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v20);
  sub_1DA4841D4(&qword_1EDADFD38, &qword_1EDADFD40, v18);
  v22 = v29;
  sub_1DA66E284();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v22);
  sub_1DA66DF90();
  swift_release();
  result = swift_release();
  *v31 = v33;
  return result;
}

uint64_t sub_1DA48E760(unsigned __int8 *a1)
{
  return *a1;
}

void sub_1DA48E774()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DA48AFEC();
  if (v0 <= 0x3F)
  {
    sub_1DA6617A4(319, (unint64_t *)&unk_1EDAE4208, MEMORY[0x1E0D7E430]);
    if (v1 <= 0x3F)
    {
      sub_1DA6617A4(319, &qword_1EDAE4278, MEMORY[0x1E0D7E848]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

_BYTE *initializeWithCopy for PageRenderEvent(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for PageRenderActivity();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        v9 = *(id *)a2;
        v10 = *(id *)a2;
        *(_QWORD *)a1 = v9;
        a1[8] = a2[8];
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v11 = *(void **)a2;
        v12 = v11;
        *(_QWORD *)a1 = v11;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v8 = sub_1DA66ED28();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

id static UIFont.title3Emph.getter()
{
  return sub_1DA4853A8(&qword_1EDADE8F0, (id *)&qword_1EDADE7E0);
}

NSLayoutConstraint __swiftcall NSLayoutConstraint.withPriority(priority:)(UILayoutPriority priority)
{
  void *v1;
  id v3;

  objc_msgSend(v1, sel_setPriority_);
  return (NSLayoutConstraint)v3;
}

float static UILayoutPriority.highestBreakable.getter()
{
  if (qword_1EDADE988 != -1)
    swift_once();
  return *(float *)&dword_1EDADE978;
}

void sub_1DA48EA04(char *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  char v15;

  v2 = (void *)sub_1DA66C0DC();
  v3 = sub_1DA66F8BC();
  v5 = v4;
  if (v3 == sub_1DA66F8BC() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v8 = sub_1DA6706D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
LABEL_14:

    v15 = 1;
    goto LABEL_15;
  }
  v9 = sub_1DA66F8BC();
  v11 = v10;
  if (v9 == sub_1DA66F8BC() && v11 == v12)
  {

    swift_bridgeObjectRelease_n();
    v15 = 0;
  }
  else
  {
    v14 = sub_1DA6706D8();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      v15 = 0;
    else
      v15 = 2;
  }
LABEL_15:
  *a1 = v15;
}

uint64_t Promise.publisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE53C0);
  sub_1DA66E05C();
  sub_1DA66BE60();
  return sub_1DA66E068();
}

uint64_t sub_1DA48EBAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA48EBB8(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1DA48EBB8(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DA670294();
  v7 = sub_1DA6707D4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v14 - v10;
  v12 = *(_QWORD *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)&v14 - v10, a1, a4, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, a4);
  swift_storeEnumTagMultiPayload();
  a2(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t BaseObjectGraph.withName(_:)()
{
  uint64_t v0;

  sub_1DA66EE30();
  sub_1DA66BE60();
  v0 = sub_1DA66EE3C();
  swift_bridgeObjectRetain();
  sub_1DA66EDF4();
  return v0;
}

uint64_t sub_1DA48ED08(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA48489C(a1, *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t storeEnumTagSinglePayload for JSPackage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JSPackage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for HSBColor()
{
  return &type metadata for HSBColor;
}

ValueMetadata *type metadata accessor for JoeColorClampBrightnessAlgorithm()
{
  return &type metadata for JoeColorClampBrightnessAlgorithm;
}

uint64_t type metadata accessor for NowPlayingAlignmentCoordinator(uint64_t a1)
{
  return sub_1DA48EED8(a1, (uint64_t *)&unk_1EDADFAE8);
}

uint64_t sub_1DA48EED8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA48EF0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA48EF40()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DA66CEBC();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA48EFC8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t destroy for UnownedImageIssueIdentifier(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA66C358();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t type metadata accessor for ExplicitContentPresenter()
{
  return objc_opt_self();
}

uint64_t PageRenderController.init(eventName:pipeline:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a3;
  v34 = type metadata accessor for PageRenderState(0);
  MEMORY[0x1E0C80A78](v34);
  v35 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1DA66F304();
  v6 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1DA66EE54();
  v9 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66F3AC();
  v28 = *(_QWORD *)(v12 - 8);
  v29 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  swift_bridgeObjectRetain();
  v32 = a1;
  v33 = a2;
  sub_1DA66ED10();
  if (qword_1EDAE3D18 != -1)
    swift_once();
  v31 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v11, v38, v37);
  swift_bridgeObjectRetain();
  sub_1DA66F3A0();
  v17 = v30;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0D40AB8], v30);
  sub_1DA66F394();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v17);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v29);
  sub_1DA66F3F4();
  swift_allocObject();
  v18 = sub_1DA66F3B8();
  v19 = v36;
  v20 = v37;
  v21 = v33;
  *(_QWORD *)(v36 + 16) = v32;
  *(_QWORD *)(v19 + 24) = v21;
  v22 = v38;
  v16((char *)(v19 + OBJC_IVAR____TtC10PodcastsUI20PageRenderController_pipeline), v38, v20);
  *(_QWORD *)(v19 + OBJC_IVAR____TtC10PodcastsUI20PageRenderController_presenter) = v18;
  type metadata accessor for PageRenderState.PrimaryDataState(0);
  v23 = (uint64_t)v35;
  swift_storeEnumTagMultiPayload();
  v24 = (_QWORD *)(v23 + *(int *)(v34 + 20));
  *v24 = 0;
  v24[1] = 0;
  v24[2] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2170);
  v25 = swift_allocObject();
  *(_DWORD *)(v25 + ((*(unsigned int *)(*(_QWORD *)v25 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1DA484504(v23, v25 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v25 + 16), type metadata accessor for PageRenderState);
  sub_1DA47F880(v23, type metadata accessor for PageRenderState);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v22, v20);
  *(_QWORD *)(v19 + OBJC_IVAR____TtC10PodcastsUI20PageRenderController_state) = v25;
  return v19;
}

uint64_t storeEnumTagSinglePayload for LibraryImageProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA48F388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = *(_QWORD *)(v0 + 288);
  v33 = *(_QWORD *)(v0 + 272);
  v34 = *(_QWORD *)(v0 + 280);
  v28 = *(_QWORD *)(v0 + 256);
  v26 = *(_QWORD *)(v0 + 248);
  v19 = *(_QWORD *)(v0 + 240);
  v24 = *(_QWORD *)(v0 + 264);
  v25 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 224);
  v20 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 200);
  v15 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 160);
  v14 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 144);
  v29 = *(_QWORD *)(v0 + 136);
  v30 = *(_QWORD *)(v0 + 120);
  v31 = *(_QWORD *)(v0 + 112);
  v32 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 80);
  v5 = *(void **)(v18 + OBJC_IVAR___PUIObjCArtworkProvider_managedObjectContext);
  *(_QWORD *)(swift_allocObject() + 16) = v5;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4B10);
  v7 = sub_1DA670060();
  swift_release();
  *(_QWORD *)(v0 + 56) = v7;
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  *(_QWORD *)(v0 + 64) = sub_1DA66FE50();
  v8 = sub_1DA66FE8C();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v22 = v8;
  v21(v4, 1, 1, v8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4860);
  sub_1DA4841D4(&qword_1EDAE4858, (uint64_t *)&unk_1EDAE4860, MEMORY[0x1E0C96108]);
  sub_1DA4A89F0();
  sub_1DA66E248();
  sub_1DA47E2F0(v4, (uint64_t *)&unk_1EDAE20A0);

  swift_release();
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4668);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE46F0, &qword_1EDAE4700, MEMORY[0x1E0C95CB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE4658, &qword_1EDAE4668, MEMORY[0x1E0C95C10]);
  sub_1DA66E224();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v3);
  sub_1DA4841D4(&qword_1EDAE4620, &qword_1EDAE4628, MEMORY[0x1E0C95B78]);
  sub_1DA66E1E8();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v14);
  swift_getKeyPath();
  sub_1DA4841D4(&qword_1EDAE45A8, &qword_1EDAE45B0, MEMORY[0x1E0C95AD0]);
  sub_1DA66E170();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v15, v17);
  sub_1DA4813E4(v18 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider, v0 + 16);
  v9 = swift_allocObject();
  sub_1DA4841BC((__int128 *)(v0 + 16), v9 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFD80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE4388, &qword_1EDAE4398, MEMORY[0x1E0C95748]);
  sub_1DA4841D4((unint64_t *)&unk_1EDADFD70, &qword_1EDADFD80, MEMORY[0x1E0C95950]);
  sub_1DA66E230();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v19, v23);
  *(_QWORD *)(v0 + 72) = sub_1DA66FE50();
  v21(v4, 1, 1, v22);
  sub_1DA4841D4(&qword_1EDAE45F8, &qword_1EDAE4600, MEMORY[0x1E0C95B78]);
  sub_1DA66E248();
  sub_1DA47E2F0(v4, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v24, v26);
  v10 = sub_1DA4841D4(&qword_1EDAE4720, (uint64_t *)&unk_1EDAE4728, MEMORY[0x1E0C95CB8]);
  MEMORY[0x1DF09CBEC](v33, v10);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v27, v33);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v32, v29, v31);
  sub_1DA4841D4(&qword_1EDAE4828, &qword_1EDAE4830, MEMORY[0x1E0C96010]);
  sub_1DA66FC10();
  *(_QWORD *)(v0 + 296) = sub_1DA4841D4(&qword_1EDAE4800, &qword_1EDAE4808, MEMORY[0x1E0C95FF0]);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 304) = v11;
  *v11 = v0;
  v11[1] = sub_1DA488D48;
  return sub_1DA66FB50();
}

uint64_t dispatch thunk of LanguageAwareString.attributedString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

void sub_1DA48F970(uint64_t a1@<X0>, unsigned __int8 *a2@<X8>)
{
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = objc_msgSend(*(id *)(a1 + 8), sel_route);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_isDeviceRoute);

  }
  else
  {
    v5 = 1;
  }
  *a2 = v5;
}

id sub_1DA48F9D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 8), sel_route);
  *a2 = result;
  return result;
}

ValueMetadata *type metadata accessor for JoeColorCandidates()
{
  return &type metadata for JoeColorCandidates;
}

void static JoeColorCandidates.all.getter(_BYTE *a1@<X8>)
{
  *a1 = 31;
}

uint64_t sub_1DA48FA74()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1DA487C10((uint64_t *)(v0 + 16));
  sub_1DA66EB3C();
  sub_1DA66EB30();
  sub_1DA66EAF4();
  sub_1DA66EB18();
  swift_allocObject();
  sub_1DA66EB0C();
  sub_1DA4813E4(v0 + 16, v0 + 56);
  sub_1DA66F490();
  sub_1DA66EADC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 296) = v1;
  *v1 = v0;
  v1[1] = sub_1DA4AF3D8;
  return sub_1DA66EAC4();
}

uint64_t sub_1DA48FC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  void (*v7)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = *(_QWORD *)(v0 + 384);
  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 312);
  v5 = MEMORY[0x1E0D3F158];
  *(_QWORD *)(v0 + 160) = v3;
  *(_QWORD *)(v0 + 168) = v5;
  v42 = v0 + 136;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 136));
  v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  v7(boxed_opaque_existential_1, v2, v3);
  *(_QWORD *)(v0 + 240) = v3;
  *(_QWORD *)(v0 + 248) = v5;
  v8 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 216));
  v7(v8, v2, v3);
  sub_1DA4B0AA8((_QWORD *)(v0 + 216), v2 + *(int *)(v1 + 36), (uint64_t *)(v0 + 176));
  v9 = *(_QWORD *)(v0 + 360);
  if (v43)
  {
    sub_1DA47E2F0(*(_QWORD *)(v0 + 360), &qword_1EDAE05C8);
    __swift_destroy_boxed_opaque_existential_0(v0 + 216);
LABEL_8:
    __swift_destroy_boxed_opaque_existential_0(v42);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  v10 = *(uint64_t **)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 304);
  __swift_destroy_boxed_opaque_existential_0(v0 + 216);
  v7(v10, v9, v11);
  if (qword_1EDAE1968 != -1)
    swift_once();
  v12 = sub_1DA66EB90();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EDAEAAD8);
  v14 = sub_1DA66EB48();
  v16 = v15;
  if (v15 >> 60 == 15)
  {
    type metadata accessor for JSPackageError();
    sub_1DA519CC8();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v17, v13, v12);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v19 = *(_QWORD *)(v0 + 360);
    v20 = *(_QWORD *)(v0 + 312);
    v21 = *(_QWORD *)(v0 + 320);
    v22 = *(_QWORD *)(v0 + 304);
    __swift_destroy_boxed_opaque_existential_0(v0 + 176);
    sub_1DA47E2F0(v19, &qword_1EDAE05C8);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    goto LABEL_8;
  }
  v18 = v14;
  sub_1DA66C058();
  swift_allocObject();
  sub_1DA66C04C();
  sub_1DA4AE848();
  sub_1DA66C040();
  v41 = *(_QWORD *)(v0 + 360);
  v25 = v18;
  v26 = *(_QWORD *)(v0 + 312);
  v27 = *(_QWORD *)(v0 + 320);
  v28 = *(_QWORD *)(v0 + 304);
  v29 = *(_QWORD *)(v0 + 280);
  swift_release();
  sub_1DA49873C(v25, v16);
  v30 = *(_QWORD *)(v0 + 256);
  v40 = *(_OWORD *)(v0 + 264);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
  sub_1DA4813E4(v42, v0 + 16);
  sub_1DA4813E4(v0 + 176, v0 + 56);
  *(_QWORD *)(v0 + 96) = v30;
  *(_OWORD *)(v0 + 104) = v40;
  v31 = sub_1DA66EB54();
  if (v32)
    v33 = v31;
  else
    v33 = 0x6E776F6E6B6E753CLL;
  if (v32)
    v34 = v32;
  else
    v34 = 0xE90000000000003ELL;
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  *(_QWORD *)(v0 + 120) = v33;
  *(_QWORD *)(v0 + 128) = v34;
  v35 = *(_OWORD *)(v0 + 16);
  v36 = *(_OWORD *)(v0 + 32);
  v37 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v29 + 48) = v37;
  *(_OWORD *)v29 = v35;
  *(_OWORD *)(v29 + 16) = v36;
  v38 = *(_OWORD *)(v0 + 80);
  v39 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v29 + 80) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v29 + 96) = v39;
  *(_OWORD *)(v29 + 64) = v38;
  *(_QWORD *)(v29 + 112) = v34;
  __swift_destroy_boxed_opaque_existential_0(v42);
  sub_1DA47E2F0(v41, &qword_1EDAE05C8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_1DA48FFE8()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA49002C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(v0 + 48) = v2;
  v3 = v1 + v2;
  v4 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 56) = v4;
  v5 = *(unsigned __int8 *)(v1 + v2 + 8);
  if (v5)
  {
    if (v5 == 1)
    {
      sub_1DA66BE60();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
    }
    v8 = *(_QWORD *)(v0 + 40);
    sub_1DA4A8C24(v1 + qword_1EDADF8C0, v8);
    v10 = *(_QWORD *)(v1 + qword_1EDADF8B8);
    v9 = *(_QWORD *)(v1 + qword_1EDADF8B8 + 8);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v10;
    v11[5] = v9;
    sub_1DA66BE60();
    v12 = sub_1DA5C06E0(v8, (uint64_t)&unk_1F026A1E8, (uint64_t)v11);
    *(_QWORD *)(v0 + 64) = v12;
    *(_QWORD *)v3 = v12;
    *(_BYTE *)(v3 + 8) = 0;
    sub_1DA66BE60();
    swift_release();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v13;
    sub_1DA66F5F8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    *v13 = v0;
    v13[1] = sub_1DA4B0F08;
  }
  else
  {
    sub_1DA66BE60();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v7;
    sub_1DA66F5F8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    *v7 = v0;
    v7[1] = sub_1DA49020C;
  }
  return sub_1DA66FBBC();
}

uint64_t sub_1DA49020C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA490270()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  *(_QWORD *)(v1 + 40) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA4902CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  sub_1DA47F880(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for JSPackageLoader);
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))type metadata accessor for JSPackageFetcher);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1DA490750(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1DA490B20()
{
  void *v0;
  id v1;

  objc_msgSend(v0, sel_state);
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  v1 = objc_msgSend(v0, sel_debugDescription);
  sub_1DA66F8BC();

  sub_1DA66F988();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1DA490D18@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (**a3)(void *a1)@<X8>)
{
  uint64_t v3;
  uint64_t ObjectType;
  os_unfair_lock_s *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  ObjectType = swift_getObjectType();
  v8 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC10PodcastsUI24ExtendedLaunchController_lock);
  v9 = (uint64_t)&v8[4];
  v10 = v8 + 7;
  os_unfair_lock_lock(v8 + 7);
  v23 = ObjectType;
  sub_1DA4AC324(v9, a1, a2, (uint64_t)&v24);
  os_unfair_lock_unlock(v10);
  v11 = v24;
  v12 = v25;
  if (qword_1EDAE1498 != -1)
    swift_once();
  v13 = sub_1DA66DEF4();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EDAE1478);
  swift_bridgeObjectRetain_n();
  v14 = sub_1DA66DEDC();
  v15 = sub_1DA66FDC0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v24 = v22;
    *(_DWORD *)v16 = 136315394;
    v17 = sub_1DA4ABE48(v11, v12);
    sub_1DA49AD00(v17, v18, &v24);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1DA49AD00(a1, a2, &v24);
    sub_1DA6702C4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA478000, v14, v15, "Loading handle will be %s for %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v22, -1, -1);
    MEMORY[0x1DF0A0474](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = v19;
  *(_QWORD *)(v20 + 40) = v11;
  *(_BYTE *)(v20 + 48) = v12;
  *(_QWORD *)(v20 + 56) = v23;
  *a3 = sub_1DA4ABFEC;
  a3[1] = (void (*)(void *))v20;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA490FD0(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1DA66DEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  sub_1DA66DE70();
  v7 = v6;
  v8 = sub_1DA66DEDC();
  v9 = sub_1DA66FDC0();
  if (os_log_type_enabled(v8, v9))
  {
    v18 = v2;
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v20 = v11;
    *(_DWORD *)v10 = 136446210;
    if (v6)
    {
      v12 = objc_msgSend(v7, sel_routeName);
      v13 = sub_1DA66F8BC();
      v15 = v14;

    }
    else
    {
      v15 = 0xE500000000000000;
      v13 = 0x3E4C494E3CLL;
    }
    v19 = sub_1DA49AD00(v13, v15, &v20);
    sub_1DA6702C4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA478000, v8, v9, "Current route changed to %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v11, -1, -1);
    MEMORY[0x1DF0A0474](v10, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t UIFont.textStyle.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;

  v1 = objc_msgSend(v0, sel_fontDescriptor);
  v2 = objc_msgSend(v1, sel_fontAttributes);

  type metadata accessor for AttributeName(0);
  sub_1DA491518();
  v3 = sub_1DA66F754();

  if (!*(_QWORD *)(v3 + 16))
  {
    v9 = 0u;
    v10 = 0u;
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v4 = (id)*MEMORY[0x1E0DC13B8];
  v5 = sub_1DA491310((uint64_t)v4);
  if ((v6 & 1) == 0)
  {
    v9 = 0u;
    v10 = 0u;

    goto LABEL_8;
  }
  sub_1DA49ADD0(*(_QWORD *)(v3 + 56) + 32 * v5, (uint64_t)&v9);

  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
  {
LABEL_9:
    sub_1DA480E84((uint64_t)&v9);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v7 = sub_1DA66F88C();
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1DA491310(uint64_t a1)
{
  uint64_t v2;

  sub_1DA66F8BC();
  sub_1DA670798();
  sub_1DA66F94C();
  v2 = sub_1DA6707C8();
  swift_bridgeObjectRelease();
  return sub_1DA491390(a1, v2);
}

unint64_t sub_1DA491390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1DA66F8BC();
    v8 = v7;
    if (v6 == sub_1DA66F8BC() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1DA6706D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1DA66F8BC();
          v15 = v14;
          if (v13 == sub_1DA66F8BC() && v15 == v16)
            break;
          v18 = sub_1DA6706D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1EDAE5078);
}

unint64_t sub_1DA491518()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE5058;
  if (!qword_1EDAE5058)
  {
    type metadata accessor for AttributeName(255);
    result = MEMORY[0x1DF0A039C](&unk_1DA677D78, v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE5058);
  }
  return result;
}

uint64_t sub_1DA491560(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_1DA66DEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  sub_1DA66DE70();
  v7 = sub_1DA66DEDC();
  v8 = sub_1DA66FDC0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136446210;
    v14 = v10;
    if (v6)
      v11 = 0x676E6979616C70;
    else
      v11 = 0x646570706F7473;
    v13 = sub_1DA49AD00(v11, 0xE700000000000000, &v14);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA478000, v7, v8, "Is playing state changed to %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v10, -1, -1);
    MEMORY[0x1DF0A0474](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1DA49170C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v0 = sub_1DA66FF70();
  v19 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B88);
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1A30);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_defaultCenter);
  sub_1DA66FF7C();

  v14 = objc_msgSend(v12, sel_defaultCenter);
  sub_1DA66FF7C();

  sub_1DA553844();
  sub_1DA66E1DC();
  v15 = *(void (**)(char *, uint64_t))(v19 + 8);
  v15(v2, v0);
  v15(v5, v0);
  sub_1DA4841D4(&qword_1EDAE1B80, &qword_1EDAE1B88, MEMORY[0x1E0C95C80]);
  sub_1DA66E128();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  sub_1DA4841D4(&qword_1EDAE1A28, &qword_1EDAE1A30, MEMORY[0x1E0C95708]);
  v16 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  return v16;
}

uint64_t AssetCaches.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v12;

  v2 = sub_1DA66CBE0();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1DA66C358();
  MEMORY[0x1E0C80A78](v3);
  v12 = (void *)objc_opt_self();
  v4 = objc_msgSend(v12, sel_artworkAssetURL);
  sub_1DA66C304();

  sub_1DA66CBD4();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_defaultCenter);
  sub_1DA66CEBC();
  sub_1DA4982D4(&qword_1EDAE2138, &qword_1EDAE2130, 0x1E0CB3940, MEMORY[0x1E0DEFCF8]);
  sub_1DA66C970();
  v7 = objc_msgSend(v12, sel_artworkAssetURL, a1);
  sub_1DA66C304();

  sub_1DA66CBD4();
  v8 = objc_msgSend(v5, sel_defaultCenter);
  type metadata accessor for AssetCaches();
  type metadata accessor for PreparedArtworkRequest();
  sub_1DA5B9878((unint64_t *)&qword_1EDAE52D0, (uint64_t)&protocol conformance descriptor for PreparedArtworkRequest);
  sub_1DA5B9878(&qword_1EDADF988, (uint64_t)&protocol conformance descriptor for PreparedArtworkRequest);
  sub_1DA4982D4(&qword_1EDAE2128, (unint64_t *)&qword_1EDAE5388, 0x1E0DC3870, (uint64_t)&protocol conformance descriptor for UIImage);
  sub_1DA66C970();
  v9 = objc_msgSend(v12, sel_alignmentAssetURL);
  sub_1DA66C304();

  sub_1DA66CBD4();
  v10 = objc_msgSend(v5, sel_defaultCenter);
  sub_1DA66D15C();
  return sub_1DA66C970();
}

uint64_t sub_1DA491C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  v13 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v6, (uint64_t)v16);
  v7 = v17;
  v8 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
  sub_1DA66E2B4();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
  sub_1DA498314();
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v1);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
  v9 = v12;
  v10 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v9);
  return v10;
}

Swift::Void __swiftcall InteractionContext.Page.log(preamble:origin:)(Swift::String preamble, PodcastsUI::InteractionContext::Origin origin)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  NSObject *v84;
  unint64_t v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  os_log_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  os_log_t v98;
  uint64_t countAndFlagsBits;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  void *object;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  os_log_t v111;
  unint64_t v112;

  v3 = v2;
  v4 = (char *)origin;
  object = preamble._object;
  countAndFlagsBits = preamble._countAndFlagsBits;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19C0);
  MEMORY[0x1E0C80A78](v5);
  v100 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1DA66D564();
  v103 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v93 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v102 = (char *)&v90 - v9;
  MEMORY[0x1E0C80A78](v10);
  v104 = (char *)&v90 - v11;
  v107 = sub_1DA66DEF4();
  v105 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v94 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v90 - v14;
  MEMORY[0x1E0C80A78](v16);
  v95 = (char *)&v90 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v90 - v19;
  v21 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v90 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v90 - v28;
  v30 = *v4;
  sub_1DA4931E8(v3);
  v97 = v31;
  v109 = v32;
  v111 = 0;
  v112 = 0xE000000000000000;
  sub_1DA66F988();
  LOBYTE(v110) = v30;
  sub_1DA670528();
  v33 = v112;
  v98 = v111;
  sub_1DA492DD4(v3, (uint64_t)v29);
  v108 = v21;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v35 = *((_QWORD *)v29 + 2);
    v36 = *((_QWORD *)v29 + 3);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED88);
    sub_1DA47E2F0((uint64_t)&v29[*(int *)(v37 + 64)], &qword_1EDAE19C0);
    if (!v36)
      goto LABEL_8;
  }
  else
  {
    if (EnumCaseMultiPayload != 2)
    {
      sub_1DA492FFC((uint64_t)v29);
LABEL_8:
      swift_bridgeObjectRelease();
      v36 = 0xE400000000000000;
      v35 = 1701736302;
      goto LABEL_9;
    }
    v35 = *((_QWORD *)v29 + 2);
    v36 = *((_QWORD *)v29 + 3);
    if (!v36)
      goto LABEL_8;
  }
LABEL_9:
  v38 = InteractionContext.Page.adamID.getter();
  if ((v39 & 1) != 0 || (v40 = v38, (sub_1DA66DCD8() & 1) != 0))
  {
    sub_1DA492DD4(v3, (uint64_t)v26);
    v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 3)
    {
      v92 = v35;
      v42 = *((_QWORD *)v26 + 3);
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED88);
      sub_1DA47E2F0((uint64_t)&v26[*(int *)(v54 + 64)], &qword_1EDAE19C0);
    }
    else
    {
      if (v41 != 2)
      {
        sub_1DA492FFC((uint64_t)v26);
        swift_bridgeObjectRelease();
        LOBYTE(v42) = 0;
        v56 = v33;
        v65 = v102;
        v64 = v103;
        v45 = v109;
        goto LABEL_27;
      }
      v92 = v35;
      v42 = *((_QWORD *)v26 + 3);
    }
    v55 = v107;
    v56 = v33;
    swift_bridgeObjectRelease();
    v45 = v109;
    v57 = v95;
    if (v42)
    {
      v96 = v15;
      sub_1DA66DE40();
      v58 = (unint64_t)object;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v59 = sub_1DA66DEDC();
      v60 = sub_1DA66FDC0();
      LODWORD(v91) = v60;
      if (os_log_type_enabled(v59, v60))
      {
        v61 = swift_slowAlloc();
        v90 = (os_log_t)swift_slowAlloc();
        v111 = v90;
        *(_DWORD *)v61 = 136446978;
        swift_bridgeObjectRetain();
        v110 = sub_1DA49AD00(countAndFlagsBits, v58, (uint64_t *)&v111);
        sub_1DA6702C4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v61 + 12) = 2082;
        swift_bridgeObjectRetain();
        v110 = sub_1DA49AD00(v97, v109, (uint64_t *)&v111);
        sub_1DA6702C4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v61 + 22) = 2082;
        swift_bridgeObjectRetain();
        v110 = sub_1DA49AD00(v92, v36, (uint64_t *)&v111);
        sub_1DA6702C4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v61 + 32) = 2082;
        swift_bridgeObjectRetain();
        v110 = sub_1DA49AD00((uint64_t)v98, v33, (uint64_t *)&v111);
        v56 = v33;
        sub_1DA6702C4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DA478000, v59, (os_log_type_t)v91, "%{public}s: %{public}s(uuid=%{public}s, adamID=none), %{public}s", (uint8_t *)v61, 0x2Au);
        v62 = v90;
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v62, -1, -1);
        v63 = v61;
        v45 = v109;
        MEMORY[0x1DF0A0474](v63, -1, -1);

        (*(void (**)(char *, uint64_t))(v105 + 8))(v57, v107);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v105 + 8))(v57, v55);
      }
      LOBYTE(v42) = 1;
      v15 = v96;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v96 = v15;
    v43 = (uint64_t)v20;
    sub_1DA66DE40();
    v44 = (unint64_t)object;
    swift_bridgeObjectRetain_n();
    v45 = v109;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v46 = sub_1DA66DEDC();
    v47 = sub_1DA66FDC0();
    LODWORD(v95) = v47;
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v92 = v43;
      v90 = v46;
      v49 = v48;
      v91 = swift_slowAlloc();
      v111 = (os_log_t)v91;
      *(_DWORD *)v49 = 136447491;
      swift_bridgeObjectRetain();
      v110 = sub_1DA49AD00(countAndFlagsBits, v44, (uint64_t *)&v111);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v49 + 12) = 2082;
      swift_bridgeObjectRetain();
      v110 = sub_1DA49AD00(v97, v109, (uint64_t *)&v111);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v49 + 22) = 2082;
      swift_bridgeObjectRetain();
      v110 = sub_1DA49AD00(v35, v36, (uint64_t *)&v111);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v49 + 32) = 2160;
      v110 = 1752392040;
      sub_1DA6702C4();
      *(_WORD *)(v49 + 42) = 2081;
      v110 = v40;
      sub_1DA4F726C();
      v50 = sub_1DA670354();
      v110 = sub_1DA49AD00(v50, v51, (uint64_t *)&v111);
      v45 = v109;
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 52) = 2082;
      swift_bridgeObjectRetain();
      v110 = sub_1DA49AD00((uint64_t)v98, v33, (uint64_t *)&v111);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      v52 = v90;
      _os_log_impl(&dword_1DA478000, v90, (os_log_type_t)v95, "%{public}s: %{public}s(uuid=%{public}s, adamID=%{private,mask.hash}s), %{public}s", (uint8_t *)v49, 0x3Eu);
      v53 = v91;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v53, -1, -1);
      MEMORY[0x1DF0A0474](v49, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v92, v107);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v43, v107);
    }
    LOBYTE(v42) = 1;
    v15 = v96;
    v56 = v33;
  }
  v65 = v102;
  v64 = v103;
LABEL_27:
  v66 = (uint64_t)v100;
  sub_1DA492DD4(v3, (uint64_t)v23);
  v67 = swift_getEnumCaseMultiPayload();
  if (v67 == 3)
  {
    swift_bridgeObjectRelease();
    v68 = (uint64_t)&v23[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED88) + 64)];
    goto LABEL_31;
  }
  if (v67 == 1)
  {
    v68 = (uint64_t)v23;
LABEL_31:
    sub_1DA6692D8(v68, v66);
    v69 = v101;
    goto LABEL_33;
  }
  v69 = v101;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v66, 1, 1, v101);
  sub_1DA492FFC((uint64_t)v23);
LABEL_33:
  v70 = v104;
  v71 = (unint64_t)object;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v66, 1, v69) == 1)
  {
    sub_1DA47E2F0(v66, &qword_1EDAE19C0);
    if ((v42 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v83 = v94;
      sub_1DA66DE40();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84 = sub_1DA66DEDC();
      v85 = v45;
      v86 = sub_1DA66FDC0();
      if (os_log_type_enabled(v84, v86))
      {
        v87 = swift_slowAlloc();
        v88 = swift_slowAlloc();
        v111 = (os_log_t)v88;
        *(_DWORD *)v87 = 136446722;
        swift_bridgeObjectRetain();
        v110 = sub_1DA49AD00(countAndFlagsBits, v71, (uint64_t *)&v111);
        sub_1DA6702C4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v87 + 12) = 2082;
        swift_bridgeObjectRetain();
        v110 = sub_1DA49AD00(v97, v85, (uint64_t *)&v111);
        sub_1DA6702C4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v87 + 22) = 2082;
        swift_bridgeObjectRetain();
        v110 = sub_1DA49AD00((uint64_t)v98, v56, (uint64_t *)&v111);
        sub_1DA6702C4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DA478000, v84, v86, "%{public}s: %{public}s, %{public}s", (uint8_t *)v87, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v88, -1, -1);
        MEMORY[0x1DF0A0474](v87, -1, -1);

        (*(void (**)(char *, uint64_t))(v105 + 8))(v94, v107);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v105 + 8))(v83, v107);
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v70, v66, v69);
    sub_1DA66DE40();
    v72 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v72(v65, v70, v69);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v73 = v15;
    v74 = sub_1DA66DEDC();
    v75 = sub_1DA66FDC0();
    LODWORD(v109) = v75;
    if (os_log_type_enabled(v74, v75))
    {
      v76 = swift_slowAlloc();
      v96 = v73;
      v77 = v76;
      v78 = swift_slowAlloc();
      v111 = (os_log_t)v78;
      *(_DWORD *)v77 = 136446978;
      swift_bridgeObjectRetain();
      v110 = sub_1DA49AD00(countAndFlagsBits, v71, (uint64_t *)&v111);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v77 + 12) = 2082;
      swift_bridgeObjectRetain();
      v110 = sub_1DA49AD00(v97, v45, (uint64_t *)&v111);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v77 + 22) = 2082;
      swift_bridgeObjectRetain();
      v110 = sub_1DA49AD00((uint64_t)v98, v56, (uint64_t *)&v111);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v77 + 32) = 2080;
      v79 = v102;
      v72(v93, v102, v69);
      v80 = sub_1DA66F904();
      v110 = sub_1DA49AD00(v80, v81, (uint64_t *)&v111);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      v82 = *(void (**)(char *, uint64_t))(v103 + 8);
      v82(v79, v69);
      _os_log_impl(&dword_1DA478000, v74, (os_log_type_t)v109, "%{public}s: %{public}s, %{public}s, %s", (uint8_t *)v77, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v78, -1, -1);
      MEMORY[0x1DF0A0474](v77, -1, -1);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v96, v107);
      v82(v104, v69);
    }
    else
    {

      v89 = *(void (**)(char *, uint64_t))(v64 + 8);
      v89(v65, v69);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v73, v107);
      v89(v70, v69);
    }
  }
}

uint64_t sub_1DA492DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InteractionContext.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *initializeWithCopy for InteractionContext.Page(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v10 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v10;
      swift_bridgeObjectRetain();
      v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED88) + 64);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = sub_1DA66D564();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19C0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      goto LABEL_13;
    case 2:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v17 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v17;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v7 = sub_1DA66D564();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19C0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_13;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1DA492FFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InteractionContext.Page(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for InteractionContext.Page(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 3:
      swift_bridgeObjectRelease();
      a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED88) + 64);
LABEL_6:
      v3 = sub_1DA66D564();
      v4 = *(_QWORD *)(v3 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
      return result;
    case 2:
      return swift_bridgeObjectRelease();
    case 1:
      goto LABEL_6;
  }
  return result;
}

uint64_t InteractionContext.Page.adamID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA492DD4(v1, (uint64_t)v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v6 = *(_QWORD *)v4;
    swift_bridgeObjectRelease();
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED88);
    sub_1DA47E2F0((uint64_t)&v4[*(int *)(v7 + 64)], &qword_1EDAE19C0);
  }
  else if (EnumCaseMultiPayload == 2)
  {
    v6 = *(_QWORD *)v4;
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload)
  {
    sub_1DA492FFC((uint64_t)v4);
    return 0;
  }
  else
  {
    return *(_QWORD *)v4;
  }
  return v6;
}

void sub_1DA4931E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1DA492DD4(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1DA49327C + 4 * byte_1DA686C20[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DA49327C()
{
  return 0x506C656E6E616863;
}

uint64_t sub_1DA4934AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v16[4];
  uint64_t v17;

  sub_1DA66D528();
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_1DA66C328();
  v3 = sub_1DA66CA24();
  if (v1)
  {
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  else
  {
    v5 = v3;
    v15 = a1;
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      sub_1DA498918();
      v7 = (uint64_t *)(v5 + 40);
      v8 = MEMORY[0x1E0DEE9D8];
      do
      {
        v9 = *(v7 - 1);
        v10 = *v7;
        swift_bridgeObjectRetain();
        if ((sub_1DA67033C() & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v17 = v8;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1DA498794(0, *(_QWORD *)(v8 + 16) + 1, 1);
            v8 = v17;
          }
          v13 = *(_QWORD *)(v8 + 16);
          v12 = *(_QWORD *)(v8 + 24);
          if (v13 >= v12 >> 1)
          {
            sub_1DA498794(v12 > 1, v13 + 1, 1);
            v8 = v17;
          }
          *(_QWORD *)(v8 + 16) = v13 + 1;
          v14 = v8 + 16 * v13;
          *(_QWORD *)(v14 + 32) = v9;
          *(_QWORD *)(v14 + 40) = v10;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v7 += 2;
        --v6;
      }
      while (v6);
    }
    else
    {
      v8 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    *v15 = v8;
  }
  return result;
}

uint64_t sub_1DA49367C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34[3];
  uint64_t v35;
  uint64_t v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  v26 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1AF8);
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v25 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1C10);
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v27 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v10, (uint64_t)v34);
  v11 = v35;
  v12 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
  sub_1DA66E2B4();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
  sub_1DA498314();
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
  v13 = v23;
  v14 = (void *)sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v13);
  v34[0] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE20D0);
  v15 = v25;
  sub_1DA66E17C();
  swift_release();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v34[0] = (id)sub_1DA66FEC8();
  v16 = sub_1DA66FE8C();
  v17 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v29, 1, 1, v16);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1AE8, &qword_1EDAE1AF8, MEMORY[0x1E0C95950]);
  sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v19 = v27;
  v18 = v28;
  sub_1DA66E248();
  sub_1DA47E2F0(v17, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v18);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C00, &qword_1EDAE1C10, MEMORY[0x1E0C95CB8]);
  v20 = v30;
  v21 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v20);
  return v21;
}

uint64_t sub_1DA493B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34[3];
  uint64_t v35;
  uint64_t v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  v26 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1AC8);
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v25 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1BE0);
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v27 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v10, (uint64_t)v34);
  v11 = v35;
  v12 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
  sub_1DA66E2B4();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
  sub_1DA498314();
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
  v13 = v23;
  v14 = (void *)sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v13);
  v34[0] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE20F0);
  v15 = v25;
  sub_1DA66E17C();
  swift_release();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v34[0] = (id)sub_1DA66FEC8();
  v16 = sub_1DA66FE8C();
  v17 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v29, 1, 1, v16);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1AB8, &qword_1EDAE1AC8, MEMORY[0x1E0C95950]);
  sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v19 = v27;
  v18 = v28;
  sub_1DA66E248();
  sub_1DA47E2F0(v17, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v18);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1BD0, &qword_1EDAE1BE0, MEMORY[0x1E0C95CB8]);
  v20 = v30;
  v21 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v20);
  return v21;
}

uint64_t sub_1DA493F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43[3];
  uint64_t v44;
  uint64_t v45;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v41 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1AB0);
  v8 = *(_QWORD *)(v7 - 8);
  v34 = v7;
  v35 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1A88);
  v39 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v31 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1BC0);
  v40 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v36 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v13, (uint64_t)v43);
  v14 = v44;
  v15 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
  sub_1DA66E2B4();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
  sub_1DA498314();
  v16 = v29;
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v16);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
  v17 = v30;
  v18 = (void *)sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v17);
  v43[0] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE20C8);
  sub_1DA66E17C();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0CC8);
  v19 = v31;
  v20 = v34;
  sub_1DA66DF3C();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v20);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v43[0] = (id)sub_1DA66FEC8();
  v21 = sub_1DA66FE8C();
  v22 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v41, 1, 1, v21);
  sub_1DA4841D4(&qword_1EDAE1A80, &qword_1EDAE1A88, MEMORY[0x1E0C95950]);
  sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v24 = v36;
  v23 = v37;
  sub_1DA66E248();
  sub_1DA47E2F0(v22, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v23);
  sub_1DA4841D4(&qword_1EDAE1BB8, (uint64_t *)&unk_1EDAE1BC0, MEMORY[0x1E0C95CB8]);
  v25 = v38;
  v26 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v25);
  return v26;
}

id sub_1DA4948D4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v26;
  objc_class *ObjectType;
  objc_super v28;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = sub_1DA66C4D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_bundle;
  sub_1DA5EC4EC();
  v11 = v2;
  *(_QWORD *)&v2[v10] = sub_1DA670174();
  v12 = OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_dateFormatters;
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v11[v12] = sub_1DA4A9050(MEMORY[0x1E0DEE9D8]);
  v14 = OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_dateIntervalFormatters;
  *(_QWORD *)&v11[v14] = sub_1DA4A9044(v13);
  v15 = sub_1DA4A867C(a1, a2);
  v17 = v16;
  swift_bridgeObjectRelease();
  v18 = *(void **)&v3[v10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v19 + 32) = v15;
  *(_QWORD *)(v19 + 40) = v17;
  v20 = v18;
  v21 = sub_1DA670180();
  v23 = v22;

  swift_bridgeObjectRelease();
  v24 = (uint64_t *)&v11[OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_preferredLocalization];
  *v24 = v21;
  v24[1] = v23;
  swift_bridgeObjectRetain();
  sub_1DA66C460();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_locale], v9, v6);

  v28.receiver = v11;
  v28.super_class = ObjectType;
  return objc_msgSendSuper2(&v28, sel_init);
}

unint64_t sub_1DA494A88(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1DA6705D0();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  sub_1DA66BE60();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_1DA499108(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA494B9C(uint64_t a1)
{
  return sub_1DA494A88(a1, &qword_1EDAE50A0);
}

unint64_t sub_1DA4950BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE780);
  v2 = sub_1DA6705D0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v6, (uint64_t)v15, &qword_1EDAE2168);
    result = sub_1DA49A800((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1DA49ACF0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA4951FC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE00C8);
  v2 = sub_1DA6705D0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1DA66BE60();
  while (1)
  {
    sub_1DA49CC94(v6, (uint64_t)&v15, &qword_1EDADFFE0);
    v7 = v15;
    v8 = v16;
    result = sub_1DA499108(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_1DA4841BC(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DA496374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34[3];
  uint64_t v35;
  uint64_t v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  v26 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1AE0);
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v25 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1BF8);
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v27 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v10, (uint64_t)v34);
  v11 = v35;
  v12 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
  sub_1DA66E2B4();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
  sub_1DA498314();
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
  v13 = v23;
  v14 = (void *)sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v13);
  v34[0] = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20D8);
  v15 = v25;
  sub_1DA66E17C();
  swift_release();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v34[0] = (id)sub_1DA66FEC8();
  v16 = sub_1DA66FE8C();
  v17 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v29, 1, 1, v16);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1AD0, &qword_1EDAE1AE0, MEMORY[0x1E0C95950]);
  sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v19 = v27;
  v18 = v28;
  sub_1DA66E248();
  sub_1DA47E2F0(v17, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v18);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1BE8, &qword_1EDAE1BF8, MEMORY[0x1E0C95CB8]);
  v20 = v30;
  v21 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v20);
  return v21;
}

uint64_t PlaybackController.init(reachability:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  id v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  char *v98;
  void *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, uint64_t);
  uint64_t *v111;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;

  v2 = v1;
  v160 = a1;
  v122 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1D98);
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v119 = (char *)&v113 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v120 = (char *)&v113 - v5;
  v115 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1D30);
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v113 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B28);
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v116 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF10);
  v154 = *(_QWORD *)(v8 - 8);
  v155 = v8;
  MEMORY[0x1E0C80A78](v8);
  v152 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v153 = (char *)&v113 - v11;
  v151 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1D68);
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x1E0C80A78](v151);
  v148 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v149 = (char *)&v113 - v14;
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D40);
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x1E0C80A78](v147);
  v144 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v145 = (char *)&v113 - v17;
  v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1D78);
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v140 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v141 = (char *)&v113 - v20;
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D60);
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v136 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v137 = (char *)&v113 - v23;
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D48);
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v131 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v132 = (char *)&v113 - v26;
  v156 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1E40);
  v130 = *(_QWORD *)(v156 - 8);
  MEMORY[0x1E0C80A78](v156);
  v129 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF60);
  v128 = *(_QWORD *)(v159 - 8);
  MEMORY[0x1E0C80A78](v159);
  v127 = (char *)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DC0);
  v126 = *(_QWORD *)(v158 - 8);
  MEMORY[0x1E0C80A78](v158);
  v125 = (char *)&v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E30);
  v124 = *(_QWORD *)(v157 - 8);
  MEMORY[0x1E0C80A78](v157);
  v123 = (char *)&v113 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1E10);
  v135 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v113 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E00);
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v113 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v113 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__isPlaying;
  LOBYTE(v162) = 0;
  sub_1DA66E08C();
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v42, v41, v38);
  v43 = v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__nowPlayingItem;
  *(_QWORD *)&v162 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE20D0);
  sub_1DA66E08C();
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v43, v37, v34);
  v44 = v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__tracklist;
  *(_QWORD *)&v162 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20D8);
  sub_1DA66E08C();
  v45 = *(void (**)(uint64_t, char *, uint64_t))(v135 + 32);
  v135 = v31;
  v45(v44, v33, v31);
  v46 = v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__durationSnapshot;
  v163 = 0u;
  v164 = 0u;
  v162 = 0u;
  v165 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE20F0);
  v47 = v123;
  sub_1DA66E08C();
  (*(void (**)(uint64_t, char *, uint64_t))(v124 + 32))(v46, v47, v157);
  v48 = v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__preferredJumpInterval;
  v162 = 0uLL;
  LOBYTE(v163) = 1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0CC8);
  v49 = v125;
  sub_1DA66E08C();
  (*(void (**)(uint64_t, char *, uint64_t))(v126 + 32))(v48, v49, v158);
  v50 = v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__videoOutput;
  *(_QWORD *)&v162 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0020);
  v51 = v127;
  sub_1DA66E08C();
  (*(void (**)(uint64_t, char *, uint64_t))(v128 + 32))(v50, v51, v159);
  v52 = v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__currentRoute;
  *(_QWORD *)&v162 = 0;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2158);
  v54 = v129;
  v128 = v53;
  sub_1DA66E08C();
  (*(void (**)(uint64_t, char *, uint64_t))(v130 + 32))(v52, v54, v156);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_routeController) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_logController) = 0;
  v55 = OBJC_IVAR____TtC10PodcastsUI18PlaybackController_performedCommandsPublisher;
  *(_QWORD *)&v164 = 0;
  v162 = 0u;
  v163 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFEC8);
  swift_allocObject();
  *(_QWORD *)(v2 + v55) = sub_1DA66DFFC();
  v56 = v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playbackPositionTracker;
  *(_OWORD *)v56 = 0u;
  *(_OWORD *)(v56 + 16) = 0u;
  *(_QWORD *)(v56 + 32) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___queueController) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playerPath) = 0;
  v57 = v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___volumeController;
  *(_OWORD *)v57 = 0u;
  *(_OWORD *)(v57 + 16) = 0u;
  *(_QWORD *)(v57 + 32) = 0;
  if (qword_1EDAE2770 != -1)
    swift_once();
  *(_OWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_player) = xmmword_1EDAE3C70;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_reachability) = v160;
  v58 = qword_1EDAE2778;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v58 != -1)
    swift_once();
  v59 = (void *)qword_1EDAEAB98;
  v60 = (_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource);
  v60[3] = _s27AutomaticResponseDataSourceCMa();
  v60[4] = &off_1EA0CCC00;
  *v60 = v59;
  swift_beginAccess();
  v61 = v60[3];
  v62 = v60[4];
  v63 = __swift_project_boxed_opaque_existential_1(v60, v61);
  v64 = *(_QWORD *)(v61 - 8);
  v65 = MEMORY[0x1E0C80A78](v63);
  v67 = (char *)&v113 - v66;
  (*(void (**)(char *, __n128))(v64 + 16))((char *)&v113 - v66, v65);
  v68 = *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8);
  v69 = v59;
  v70 = v68(v61, v62);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v67, v61);
  *(_QWORD *)&v162 = v70;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  v71 = sub_1DA66E11C();
  swift_release();
  _s17PlayerInvalidatorCMa();
  swift_allocObject();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playerMonitor) = sub_1DA48DB70(v71, 5);
  v161 = sub_1DA497BB4();
  swift_beginAccess();
  v72 = v132;
  sub_1DA66E098();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1C50);
  v73 = MEMORY[0x1E0C95D90];
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C40, &qword_1EDAE1C50, MEMORY[0x1E0C95D90]);
  sub_1DA66E290();
  swift_release();
  v74 = v133;
  v75 = v134;
  (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v131, v72, v134);
  swift_beginAccess();
  sub_1DA66E0A4();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v75);
  v161 = sub_1DA49367C();
  swift_beginAccess();
  v76 = v137;
  sub_1DA66E098();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1C98);
  sub_1DA4841D4(&qword_1EDAE1C90, &qword_1EDAE1C98, v73);
  sub_1DA66E290();
  swift_release();
  v77 = v138;
  v78 = v139;
  (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v136, v76, v139);
  swift_beginAccess();
  sub_1DA66E0A4();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
  v161 = sub_1DA493B04();
  swift_beginAccess();
  v79 = v141;
  sub_1DA66E098();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CB8);
  sub_1DA4841D4(&qword_1EDAE1CB0, &qword_1EDAE1CB8, v73);
  sub_1DA66E290();
  swift_release();
  v80 = v142;
  v81 = v143;
  (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v140, v79, v143);
  swift_beginAccess();
  sub_1DA66E0A4();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
  v161 = sub_1DA493F8C();
  swift_beginAccess();
  v82 = v145;
  sub_1DA66E098();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1C38);
  sub_1DA4841D4(&qword_1EDAE1C30, &qword_1EDAE1C38, v73);
  sub_1DA66E290();
  swift_release();
  v83 = v146;
  v84 = v147;
  (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v144, v82, v147);
  swift_beginAccess();
  sub_1DA66E0A4();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v84);
  v161 = sub_1DA496374();
  swift_beginAccess();
  v85 = v149;
  sub_1DA66E098();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CA8);
  sub_1DA4841D4(&qword_1EDAE1CA0, &qword_1EDAE1CA8, v73);
  sub_1DA66E290();
  swift_release();
  v86 = v150;
  v87 = v151;
  (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v148, v85, v151);
  swift_beginAccess();
  sub_1DA66E0A4();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
  v161 = sub_1DA54C538();
  swift_beginAccess();
  v88 = v153;
  sub_1DA66E098();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFEB8);
  sub_1DA4841D4(&qword_1EDADFEB0, (uint64_t *)&unk_1EDADFEB8, v73);
  sub_1DA66E290();
  swift_release();
  v90 = v154;
  v89 = v155;
  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v152, v88, v155);
  swift_beginAccess();
  sub_1DA66E0A4();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v88, v89);
  v91 = v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  v93 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource + 24);
  v92 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource + 32);
  v94 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource), v93);
  v95 = *(_QWORD *)(v93 - 8);
  v96 = MEMORY[0x1E0C80A78](v94);
  v98 = (char *)&v113 - v97;
  (*(void (**)(char *, __n128))(v95 + 16))((char *)&v113 - v97, v96);
  v99 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v92 + 24))(v93, v92);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v98, v93);
  if (v99)
  {
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1DA8);
    v100 = v113;
    sub_1DA66E098();
    swift_endAccess();

    sub_1DA4841D4((unint64_t *)&unk_1EDAE1D20, (uint64_t *)&unk_1EDAE1D30, MEMORY[0x1E0C96190]);
    v101 = v116;
    v102 = v115;
    sub_1DA66E17C();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v100, v102);
    swift_beginAccess();
    v103 = v120;
    sub_1DA66E098();
    swift_endAccess();
    sub_1DA4841D4((unint64_t *)&unk_1EDAE1B18, &qword_1EDAE1B28, MEMORY[0x1E0C95950]);
    v104 = v118;
    sub_1DA66E290();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v101, v104);
    v105 = v121;
    v106 = v122;
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v119, v103, v122);
    swift_beginAccess();
    sub_1DA66E0A4();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v103, v106);
  }
  sub_1DA66BE60();
  PlaybackController.LogController.init(playbackController:)(&v162);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_logController) = v162;
  swift_bridgeObjectRelease();
  sub_1DA4813E4(v91, (uint64_t)&v162);
  type metadata accessor for PlaybackController.RouteController();
  v107 = swift_allocObject();
  *(_QWORD *)(v107 + 16) = v2;
  v108 = *((_QWORD *)&v163 + 1);
  v109 = v164;
  __swift_project_boxed_opaque_existential_1(&v162, *((uint64_t *)&v163 + 1));
  v110 = *(uint64_t (**)(uint64_t, uint64_t))(v109 + 24);
  sub_1DA66BE60();
  *(_QWORD *)(v107 + 24) = v110(v108, v109);
  sub_1DA4841BC(&v162, v107 + 32);
  swift_unknownObjectRelease();
  v111 = (uint64_t *)(v2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_routeController);
  swift_beginAccess();
  *v111 = v107;
  swift_release();
  return v2;
}

uint64_t sub_1DA497B64(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DA497B8C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DA497BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34[3];
  uint64_t v35;
  uint64_t v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1AA0);
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v23 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFE58);
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v27 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v10, (uint64_t)v34);
  v11 = v35;
  v12 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
  sub_1DA66E2B4();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
  sub_1DA498314();
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v3);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
  v13 = v24;
  v14 = (void *)sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v13);
  v34[0] = v14;
  v15 = v23;
  sub_1DA66E17C();
  swift_release();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v34[0] = (id)sub_1DA66FEC8();
  v16 = sub_1DA66FE8C();
  v17 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v29, 1, 1, v16);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A90, (uint64_t *)&unk_1EDAE1AA0, MEMORY[0x1E0C95950]);
  sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v19 = v27;
  v18 = v28;
  sub_1DA66E248();
  sub_1DA47E2F0(v17, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v18);
  sub_1DA4841D4(&qword_1EDADFE50, (uint64_t *)&unk_1EDADFE58, MEMORY[0x1E0C95CB8]);
  v20 = v30;
  v21 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v20);
  return v21;
}

uint64_t sub_1DA498034@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  id v14;
  uint64_t v15;
  id v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1D10);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D08);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2070);
    sub_1DA66E038();
    sub_1DA4841D4(&qword_1F026AB20, (uint64_t *)&unk_1EDAE1D10, MEMORY[0x1E0C960D0]);
    v12 = sub_1DA66E11C();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v16 = *(id *)a1;
    v14 = v16;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2070);
    sub_1DA66E02C();
    sub_1DA4841D4((unint64_t *)&unk_1EDAE1CF8, &qword_1EDAE1D08, MEMORY[0x1E0C960B0]);
    v12 = sub_1DA66E11C();
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  *a2 = v12;
  return result;
}

_QWORD *sub_1DA4981C8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA484734(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA4982D4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1DA47D774(255, a2);
    result = MEMORY[0x1DF0A039C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DA498314()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EDAE2080;
  if (!qword_1EDAE2080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EDAE2070);
    v2 = sub_1DA4982D4((unint64_t *)&unk_1EDAE2090, (unint64_t *)&unk_1EDAE2060, 0x1E0D4B388, MEMORY[0x1E0DEFD00]);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EDAE2080);
  }
  return result;
}

uint64_t sub_1DA498398@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
  *a1 = result;
  return result;
}

uint64_t sub_1DA4983BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v2 = MEMORY[0x1E0DEE9E0];
  v3 = a1 + 64;
  v37 = MEMORY[0x1E0DEE9E0];
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v7)
      goto LABEL_39;
    v15 = *(_QWORD *)(v3 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v7)
        goto LABEL_39;
      v15 = *(_QWORD *)(v3 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v7)
          goto LABEL_39;
        v15 = *(_QWORD *)(v3 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v7)
            goto LABEL_39;
          v15 = *(_QWORD *)(v3 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_24:
    v6 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_6:
    v12 = *(_OWORD *)(*(_QWORD *)(a1 + 56) + 16 * v11);
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v11 + 8);
    if (v13 >> 60 == 15)
      goto LABEL_7;
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v19 = v18[1];
    v36 = *v18;
    v20 = *(_QWORD *)(v2 + 16);
    v35 = *(_OWORD *)(*(_QWORD *)(a1 + 56) + 16 * v11);
    if (*(_QWORD *)(v2 + 24) <= v20)
    {
      v22 = v20 + 1;
      v23 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v11);
      sub_1DA498D8C(v12, v13);
      sub_1DA498D8C(v23, v13);
      swift_bridgeObjectRetain();
      sub_1DA49895C(v22, 1);
      v2 = v37;
    }
    else
    {
      v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v11);
      sub_1DA498D8C(v12, v13);
      sub_1DA498D8C(v21, v13);
      swift_bridgeObjectRetain();
    }
    sub_1DA670798();
    sub_1DA66F94C();
    result = sub_1DA6707C8();
    v24 = v2 + 64;
    v25 = -1 << *(_BYTE *)(v2 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v2 + 64 + 8 * (v26 >> 6))) == 0)
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      v12 = v35;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v24 + 8 * v27);
        if (v32 != -1)
        {
          v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_38;
        }
      }
      goto LABEL_41;
    }
    v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v2 + 64 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    v12 = v35;
LABEL_38:
    *(_QWORD *)(v24 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = 16 * v28;
    v34 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v33);
    *v34 = v36;
    v34[1] = v19;
    *(_OWORD *)(*(_QWORD *)(v2 + 56) + v33) = v12;
    ++*(_QWORD *)(v2 + 16);
LABEL_7:
    result = sub_1DA49873C(v12, v13);
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_39:
    sub_1DA4F1D6C();
    return v2;
  }
  v15 = *(_QWORD *)(v3 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v7)
      goto LABEL_39;
    v15 = *(_QWORD *)(v3 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1DA4986F8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1DA49873C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1DA4986F8(a1, a2);
  return a1;
}

uint64_t sub_1DA498750(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    sub_1DA66BE60();
  }
  return sub_1DA66BE60();
}

uint64_t sub_1DA498794(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DA4987B0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DA4987B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

unint64_t sub_1DA498918()
{
  unint64_t result;

  result = qword_1EDAE5030;
  if (!qword_1EDAE5030)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDAE5030);
  }
  return result;
}

uint64_t sub_1DA49895C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2570);
  v6 = a2;
  v7 = sub_1DA6705B8();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = sub_1DA66BE60();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1DA498750(v37, *((unint64_t *)&v37 + 1));
      }
      sub_1DA670798();
      sub_1DA66F94C();
      result = sub_1DA6707C8();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

unint64_t sub_1DA498C68(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2580);
  v2 = (_QWORD *)sub_1DA6705D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1DA66BE60();
  v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1DA498D8C(v7, v8);
    result = sub_1DA499108(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (uint64_t *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DA498D8C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1DA498750(a1, a2);
  return a1;
}

unint64_t sub_1DA498DA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE21C0);
    v2 = (_QWORD *)sub_1DA6705D0();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = (uint64_t *)&unk_1EDAE1F98;
  v11 = MEMORY[0x1E0DEE9B8] + 8;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1DA4F1D6C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(v10);
    swift_dynamicCast();
    sub_1DA49ACF0(v6, v7);
    sub_1DA49ACF0(v7, v40);
    sub_1DA49ACF0(v40, &v38);
    result = sub_1DA499108(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      result = (unint64_t)sub_1DA49ACF0(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_1DA49ACF0(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1DA499108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DA670798();
  sub_1DA66F94C();
  v4 = sub_1DA6707C8();
  return sub_1DA49916C(a1, a2, v4);
}

unint64_t sub_1DA49916C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1DA6706D8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1DA6706D8() & 1) == 0);
    }
  }
  return v6;
}

id IMPlayerItem.populateContentItem(_:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  id v28;
  id v29;
  id v30;
  double v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char isUniquelyReferenced_nonNull_native;
  id v60;
  void *v61;
  char *v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  char **v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  unsigned int (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  unsigned __int8 v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;
  char v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  unsigned __int8 v111;
  char v112;
  id v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  void *v150;
  void *v151;
  id v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  char *v167;
  char *v168;
  char *v169;
  void (*v170)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _OWORD v176[2];
  __int128 v177;
  uint64_t v178;
  _QWORD v179[5];
  uint64_t v180;

  v2 = v1;
  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  v173 = v4;
  v174 = v5;
  MEMORY[0x1E0C80A78](v4);
  v169 = (char *)&v167 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v7);
  v171 = (char *)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v172 = (uint64_t)&v167 - v10;
  MEMORY[0x1E0C80A78](v11);
  v170 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v167 - v12);
  MEMORY[0x1E0C80A78](v13);
  v167 = (char *)&v167 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v167 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v167 - v19;
  v21 = sub_1DA66C430();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v168 = (char *)&v167 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  *(_QWORD *)&v25 = MEMORY[0x1E0C80A78](v24).n128_u64[0];
  v27 = (char *)&v167 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = objc_msgSend(v1, sel_album, v25);
  objc_msgSend(a1, sel_setAlbumArtistName_, v28);

  v29 = objc_msgSend(v2, sel_author);
  objc_msgSend(a1, sel_setTrackArtistName_, v29);

  v30 = objc_msgSend(v2, sel_title);
  objc_msgSend(a1, sel_setTitle_, v30);

  objc_msgSend(v2, sel_duration);
  objc_msgSend(a1, sel_setDuration_);
  objc_msgSend(v2, sel_playhead);
  objc_msgSend(a1, sel_setElapsedTime_);
  LODWORD(v31) = 0;
  objc_msgSend(a1, sel_setPlaybackRate_, v31);
  v32 = objc_msgSend(v2, sel_album);
  objc_msgSend(a1, sel_setAlbumName_, v32);

  v33 = 0;
  if (objc_msgSend(v2, sel_areChaptersLoaded))
  {
    v34 = objc_msgSend(v2, sel_timeChapters);
    if (v34)
    {
      v35 = v34;
      v33 = objc_msgSend(v34, sel_count);

    }
    else
    {
      v33 = 0;
    }
  }
  objc_msgSend(a1, sel_setNumberOfChildren_, v33);
  objc_msgSend(a1, sel_setContainer_, (uint64_t)objc_msgSend(a1, sel_numberOfChildren) > 0);
  objc_msgSend(a1, sel_setHasArtwork_, 1);
  v36 = objc_msgSend(v2, sel_artworkIdentifier);
  objc_msgSend(a1, sel_setArtworkIdentifier_, v36);

  v37 = objc_msgSend(a1, sel_identifier);
  v38 = sub_1DA66F8BC();
  v40 = v39;

  v179[0] = v38;
  v179[1] = v40;
  sub_1DA498918();
  v41 = sub_1DA670324();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setLegacyUniqueID_, v41);
  objc_msgSend(a1, sel_setSharableItem_, 1);
  objc_msgSend(a1, sel_setHasDescription_, 1);
  objc_msgSend(a1, sel_setStoreID_, objc_msgSend(v2, sel_episodeStoreId));
  objc_msgSend(a1, sel_setStoreAlbumID_, objc_msgSend(v2, sel_podcastStoreId));
  v42 = objc_msgSend(v2, sel_episodeGuid);
  if (v42 || (v42 = objc_msgSend(v2, sel_episodeUuid)) != 0)
  {
    sub_1DA66F8BC();

    v42 = (id)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_setExternalContentIdentifier_, v42);

  v43 = objc_msgSend(v2, sel_podcastUuid);
  objc_msgSend(a1, sel_setCollectionIdentifier_, v43);

  if (objc_msgSend(v2, sel_isVideo))
    v44 = 1024;
  else
    v44 = 2;
  objc_msgSend(a1, sel_setMediaType_, v44);
  objc_msgSend(a1, sel_setSeasonNumber_, objc_msgSend(v2, sel_seasonNumber));
  objc_msgSend(a1, sel_setEpisodeNumber_, objc_msgSend(v2, sel_episodeNumber));
  v45 = (unint64_t)objc_msgSend(v2, sel_episodeType);
  v46 = v173;
  if (v45 > 2)
    v47 = 1;
  else
    v47 = qword_1DA6869D0[v45];
  objc_msgSend(a1, sel_setEpisodeType_, v47);
  objc_msgSend(a1, sel_setPlayable_, 1);
  v48 = objc_msgSend(v2, sel_pubDate);
  if (v48)
  {
    v49 = v168;
    sub_1DA66C40C();

    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v49, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v27, 0, 1, v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v27, 1, v21) == 1)
    {
      v48 = 0;
    }
    else
    {
      v48 = (id)sub_1DA66C3F4();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v27, 1, 1, v21);
  }
  v50 = v174;
  objc_msgSend(a1, sel_setReleaseDate_, v48);

  v51 = MEMORY[0x1E0DEE9E0];
  v180 = MEMORY[0x1E0DEE9E0];
  v52 = objc_msgSend(v2, sel_podcastFeedUrl);
  if (v52)
  {
    v53 = v52;
    v54 = sub_1DA66F8BC();
    v56 = v55;

    *(_QWORD *)&v177 = sub_1DA66F8BC();
    *((_QWORD *)&v177 + 1) = v57;
    v58 = MEMORY[0x1E0DEA968];
    sub_1DA6703F0();
    v178 = v58;
    *(_QWORD *)&v177 = v54;
    *((_QWORD *)&v177 + 1) = v56;
    sub_1DA49ACF0(&v177, v176);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v175 = v51;
    sub_1DA49A6C8(v176, (uint64_t)v179, isUniquelyReferenced_nonNull_native);
    v180 = v175;
    swift_bridgeObjectRelease();
    sub_1DA49A930((uint64_t)v179);
  }
  v60 = objc_msgSend(v2, sel_episodeShareUrl);
  if (v60)
  {
    v61 = v60;
    sub_1DA66C304();

    v62 = *(char **)(v50 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v62)(v17, 0, 1, v46);
  }
  else
  {
    v62 = *(char **)(v50 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v62)(v17, 1, 1, v46);
  }
  sub_1DA49B0AC((uint64_t)v17, (uint64_t)v20);
  v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  if (v63(v20, 1, v46))
  {
    sub_1DA47E2F0((uint64_t)v20, &qword_1EDAE5020);
  }
  else
  {
    v64 = v169;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v169, v20, v46);
    sub_1DA47E2F0((uint64_t)v20, &qword_1EDAE5020);
    v65 = sub_1DA66C298();
    v67 = v66;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v64, v46);
    if (sub_1DA66F958() < 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_QWORD *)&v177 = sub_1DA66F8BC();
      *((_QWORD *)&v177 + 1) = v68;
      v69 = MEMORY[0x1E0DEA968];
      sub_1DA6703F0();
      v178 = v69;
      *(_QWORD *)&v177 = v65;
      *((_QWORD *)&v177 + 1) = v67;
      sub_1DA49ACF0(&v177, v176);
      v70 = v180;
      v71 = swift_isUniquelyReferenced_nonNull_native();
      v175 = v70;
      sub_1DA49A6C8(v176, (uint64_t)v179, v71);
      v180 = v175;
      swift_bridgeObjectRelease();
      sub_1DA49A930((uint64_t)v179);
    }
  }
  v72 = (uint64_t)v170;
  v73 = objc_msgSend(v2, sel_supportsArtworkUrl);
  v74 = MEMORY[0x1E0DEAFA0];
  v170 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v62;
  if ((v73 & 1) != 0)
  {
    v75 = objc_msgSend(v2, sel_artworkUrl);
    if (v75)
    {
      v76 = v75;
      sub_1DA66C304();

      v77 = 0;
    }
    else
    {
      v77 = 1;
    }
    v80 = (uint64_t)v167;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v62)(v72, v77, 1, v46);
    sub_1DA49B0AC(v72, v80);
    if (v63((char *)v80, 1, v46))
    {
      sub_1DA47E2F0(v80, &qword_1EDAE5020);
      v81 = 0;
    }
    else
    {
      v82 = v174;
      v83 = v169;
      (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v169, v80, v46);
      sub_1DA47E2F0(v80, &qword_1EDAE5020);
      sub_1DA66C298();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v46);
      v81 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
    }
    v79 = &selRef__adjustedNativeFontDescriptorWithBaseNativeFontDescriptor_forCustomTextStyle_;
    objc_msgSend(a1, sel_setArtworkURL_, v81);

    *(_QWORD *)&v177 = sub_1DA66F8BC();
    *((_QWORD *)&v177 + 1) = v84;
    sub_1DA6703F0();
    v178 = v74;
    LOBYTE(v177) = 1;
    sub_1DA49ACF0(&v177, v176);
    v85 = v180;
    v86 = swift_isUniquelyReferenced_nonNull_native();
    v175 = v85;
    sub_1DA49A6C8(v176, (uint64_t)v179, v86);
    v78 = v175;
    swift_bridgeObjectRelease();
    sub_1DA49A930((uint64_t)v179);
  }
  else
  {
    v78 = v180;
    v79 = &selRef__adjustedNativeFontDescriptorWithBaseNativeFontDescriptor_forCustomTextStyle_;
  }
  v87 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v63;
  *(_QWORD *)&v177 = sub_1DA66F8BC();
  *((_QWORD *)&v177 + 1) = v88;
  v89 = MEMORY[0x1E0DEA968];
  sub_1DA6703F0();
  v90 = objc_msgSend(v2, sel_isNotSubscribeable);
  v178 = v74;
  LOBYTE(v177) = v90 ^ 1;
  sub_1DA49ACF0(&v177, v176);
  v91 = swift_isUniquelyReferenced_nonNull_native();
  v175 = v78;
  sub_1DA49A6C8(v176, (uint64_t)v179, v91);
  v92 = v175;
  swift_bridgeObjectRelease();
  sub_1DA49A930((uint64_t)v179);
  *(_QWORD *)&v177 = sub_1DA66F8BC();
  *((_QWORD *)&v177 + 1) = v93;
  sub_1DA6703F0();
  v94 = objc_msgSend(v2, sel_isPlaceholder);
  v178 = v74;
  LOBYTE(v177) = v94;
  sub_1DA49ACF0(&v177, v176);
  v95 = swift_isUniquelyReferenced_nonNull_native();
  v175 = v92;
  sub_1DA49A6C8(v176, (uint64_t)v179, v95);
  v96 = v175;
  v180 = v175;
  swift_bridgeObjectRelease();
  sub_1DA49A930((uint64_t)v179);
  v97 = objc_msgSend(v2, sel_podcastIsSerial);
  *(_QWORD *)&v177 = sub_1DA66F8BC();
  *((_QWORD *)&v177 + 1) = v98;
  sub_1DA6703F0();
  if (v97)
    v99 = 2;
  else
    v99 = 1;
  v178 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v177 = v99;
  sub_1DA49ACF0(&v177, v176);
  v100 = swift_isUniquelyReferenced_nonNull_native();
  v175 = v96;
  sub_1DA49A6C8(v176, (uint64_t)v179, v100);
  v101 = v175;
  swift_bridgeObjectRelease();
  sub_1DA49A930((uint64_t)v179);
  v180 = v101;
  v102 = objc_msgSend(v2, v79[475]);
  v103 = MEMORY[0x1E0DEE9E0];
  if (v102)
  {
    v104 = v102;
    v105 = sub_1DA66F8BC();
    v107 = v106;

    *(_QWORD *)&v177 = sub_1DA66F8BC();
    *((_QWORD *)&v177 + 1) = v108;
    sub_1DA6703F0();
    v178 = v89;
    *(_QWORD *)&v177 = v105;
    *((_QWORD *)&v177 + 1) = v107;
    sub_1DA49ACF0(&v177, v176);
    v109 = swift_isUniquelyReferenced_nonNull_native();
    v175 = v103;
    sub_1DA49A6C8(v176, (uint64_t)v179, v109);
    v103 = v175;
    swift_bridgeObjectRelease();
    sub_1DA49A930((uint64_t)v179);
  }
  *(_QWORD *)&v177 = sub_1DA66F8BC();
  *((_QWORD *)&v177 + 1) = v110;
  sub_1DA6703F0();
  v111 = objc_msgSend(v2, sel_isLocal);
  v178 = v74;
  LOBYTE(v177) = v111;
  sub_1DA49ACF0(&v177, v176);
  v112 = swift_isUniquelyReferenced_nonNull_native();
  v175 = v103;
  sub_1DA49A6C8(v176, (uint64_t)v179, v112);
  swift_bridgeObjectRelease();
  sub_1DA49A930((uint64_t)v179);
  objc_msgSend(a1, sel_setSharableItem_, 1);
  v113 = objc_msgSend(v2, sel_showArtworkProperties);
  if (v113)
  {
    v114 = v113;
    v115 = sub_1DA66CD18();
    v117 = v116;

    *(_QWORD *)&v177 = sub_1DA66F8BC();
    *((_QWORD *)&v177 + 1) = v118;
    sub_1DA6703F0();
    v178 = v89;
    *(_QWORD *)&v177 = v115;
    *((_QWORD *)&v177 + 1) = v117;
    sub_1DA49ACF0(&v177, v176);
    v119 = swift_isUniquelyReferenced_nonNull_native();
    v175 = v101;
    sub_1DA49A6C8(v176, (uint64_t)v179, v119);
    v101 = v175;
    v180 = v175;
    swift_bridgeObjectRelease();
    sub_1DA49A930((uint64_t)v179);
  }
  *(_QWORD *)&v177 = sub_1DA66F8BC();
  *((_QWORD *)&v177 + 1) = v120;
  sub_1DA6703F0();
  v121 = sub_1DA49B0F4();
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24F0);
  *(_QWORD *)&v177 = v121;
  sub_1DA49ACF0(&v177, v176);
  v122 = swift_isUniquelyReferenced_nonNull_native();
  v175 = v101;
  sub_1DA49A6C8(v176, (uint64_t)v179, v122);
  v123 = v175;
  v180 = v175;
  swift_bridgeObjectRelease();
  sub_1DA49A930((uint64_t)v179);
  if ((sub_1DA66C778() & 1) != 0)
  {
    *(_QWORD *)&v177 = sub_1DA66F8BC();
    *((_QWORD *)&v177 + 1) = v124;
    v125 = MEMORY[0x1E0DEA968];
    sub_1DA6703F0();
    v126 = objc_msgSend(v2, sel_transcriptIdentifier);
    if (v126)
    {
      v127 = v126;
      v128 = sub_1DA66F8BC();
      v130 = v129;

      v178 = v125;
      *(_QWORD *)&v177 = v128;
      *((_QWORD *)&v177 + 1) = v130;
      sub_1DA49ACF0(&v177, v176);
      v131 = swift_isUniquelyReferenced_nonNull_native();
      v175 = v123;
      sub_1DA49A6C8(v176, (uint64_t)v179, v131);
      v180 = v175;
      swift_bridgeObjectRelease();
      sub_1DA49A930((uint64_t)v179);
    }
    else
    {
      sub_1DA49AFC4((uint64_t)v179, &v177);
      sub_1DA49A930((uint64_t)v179);
      sub_1DA47E2F0((uint64_t)&v177, &qword_1EDAE5130);
    }
    *(_QWORD *)&v177 = sub_1DA66F8BC();
    *((_QWORD *)&v177 + 1) = v132;
    v133 = MEMORY[0x1E0DEA968];
    sub_1DA6703F0();
    v134 = objc_msgSend(v2, sel_transcriptSource);
    if (v134)
    {
      v135 = v134;
      v136 = sub_1DA66F8BC();
      v138 = v137;

      v178 = v133;
      *(_QWORD *)&v177 = v136;
      *((_QWORD *)&v177 + 1) = v138;
      sub_1DA49ACF0(&v177, v176);
      v139 = v180;
      v140 = swift_isUniquelyReferenced_nonNull_native();
      v175 = v139;
      sub_1DA49A6C8(v176, (uint64_t)v179, v140);
      v180 = v175;
      swift_bridgeObjectRelease();
      sub_1DA49A930((uint64_t)v179);
    }
    else
    {
      sub_1DA49AFC4((uint64_t)v179, &v177);
      sub_1DA49A930((uint64_t)v179);
      sub_1DA47E2F0((uint64_t)&v177, &qword_1EDAE5130);
    }
    *(_QWORD *)&v177 = sub_1DA66F8BC();
    *((_QWORD *)&v177 + 1) = v141;
    v142 = MEMORY[0x1E0DEA968];
    sub_1DA6703F0();
    v143 = objc_msgSend(v2, sel_priceType);
    if (v143)
    {
      v144 = v143;
      v145 = sub_1DA66F8BC();
      v147 = v146;

      v178 = v142;
      *(_QWORD *)&v177 = v145;
      *((_QWORD *)&v177 + 1) = v147;
      sub_1DA49ACF0(&v177, v176);
      v148 = v180;
      v149 = swift_isUniquelyReferenced_nonNull_native();
      v175 = v148;
      sub_1DA49A6C8(v176, (uint64_t)v179, v149);
      v180 = v175;
      swift_bridgeObjectRelease();
      sub_1DA49A930((uint64_t)v179);
    }
    else
    {
      sub_1DA49AFC4((uint64_t)v179, &v177);
      sub_1DA49A930((uint64_t)v179);
      sub_1DA47E2F0((uint64_t)&v177, &qword_1EDAE5130);
    }
  }
  swift_bridgeObjectRetain();
  v150 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setUserInfo_, v150);

  v151 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setDeviceSpecificUserInfo_, v151);

  objc_msgSend(a1, sel_setExplicitContent_, objc_msgSend(v2, sel_isExplicit));
  objc_msgSend(a1, sel_setPlayCount_, objc_msgSend(v2, sel_playCount));
  v152 = objc_msgSend(v2, sel_podcastShareUrl);
  if (v152)
  {
    v153 = v152;
    v154 = (uint64_t)v171;
    sub_1DA66C304();

    v155 = 0;
    v156 = v173;
    v157 = v174;
  }
  else
  {
    v155 = 1;
    v156 = v173;
    v157 = v174;
    v154 = (uint64_t)v171;
  }
  v170(v154, v155, 1, v156);
  v158 = v172;
  sub_1DA49B0AC(v154, v172);
  if (v87(v158, 1, v156))
  {
    sub_1DA47E2F0(v158, &qword_1EDAE5020);
  }
  else
  {
    v159 = v169;
    (*(void (**)(char *, uint64_t, uint64_t))(v157 + 16))(v169, v158, v156);
    sub_1DA47E2F0(v158, &qword_1EDAE5020);
    v160 = sub_1DA66C298();
    v162 = v161;
    (*(void (**)(char *, uint64_t))(v157 + 8))(v159, v156);
    *(_QWORD *)&v177 = sub_1DA66F8BC();
    *((_QWORD *)&v177 + 1) = v163;
    sub_1DA6703F0();
    v178 = v89;
    *(_QWORD *)&v177 = v160;
    *((_QWORD *)&v177 + 1) = v162;
    sub_1DA49ACF0(&v177, v176);
    v164 = v180;
    v165 = swift_isUniquelyReferenced_nonNull_native();
    v175 = v164;
    sub_1DA49A6C8(v176, (uint64_t)v179, v165);
    swift_bridgeObjectRelease();
    sub_1DA49A930((uint64_t)v179);
  }
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setStreamingContent_, objc_msgSend(v2, sel_isLocal) ^ 1);
  return objc_msgSend(a1, sel_setEditingStyleFlags_, objc_msgSend(v2, sel_editingStyleFlags));
}

_OWORD *sub_1DA49A6C8(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1DA49A800(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        return sub_1DA49ACF0(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1DA57D148();
      goto LABEL_7;
    }
    sub_1DA49A9DC(v13, a3 & 1);
    v19 = sub_1DA49A800(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1DA49A8F4(a2, (uint64_t)v21);
      return sub_1DA49A964(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1DA670744();
  __break(1u);
  return result;
}

unint64_t sub_1DA49A800(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA6703D8();
  return sub_1DA49A830(a1, v2);
}

unint64_t sub_1DA49A830(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1DA49A8F4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1DF09EDC4](v9, a1);
      sub_1DA49A930((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1DA49A8F4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1DA49A930(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

_OWORD *sub_1DA49A964(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1DA49ACF0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_1DA49A9DC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE780);
  v6 = sub_1DA6705B8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = sub_1DA66BE60();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1DA49ACF0((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1DA49A8F4(v25, (uint64_t)&v38);
      sub_1DA49ADD0(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1DA6703D8();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1DA49ACF0(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

_OWORD *sub_1DA49ACF0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1DA49AD00(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1DA49AE0C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1DA49ADD0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1DA49ADD0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1DA49ADD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1DA49AE0C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1DA6702D0();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1DA49B254(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1DA6704A4();
  if (!v8)
  {
    sub_1DA670564();
    __break(1u);
LABEL_17:
    result = sub_1DA6705DC();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

double sub_1DA49AFC4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1DA49A800(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA57D148();
      v9 = v11;
    }
    sub_1DA49A930(*(_QWORD *)(v9 + 48) + 40 * v6);
    sub_1DA49ACF0((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1DA5A8D2C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1DA49B0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA49B0F4()
{
  void *v0;
  void *v1;
  uint64_t inited;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2588);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678FF0;
  *(_QWORD *)(inited + 32) = sub_1DA66D5DC();
  *(_QWORD *)(inited + 40) = v3;
  v4 = objc_msgSend(v0, sel_showArtworkProperties);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1DA66CCF4();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0xF000000000000000;
  }
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = sub_1DA66D5E8();
  *(_QWORD *)(inited + 72) = v9;
  v10 = objc_msgSend(v1, sel_uberArtworkProperties);
  if (v10)
  {
    v11 = v10;
    v12 = sub_1DA66CCF4();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0xF000000000000000;
  }
  *(_QWORD *)(inited + 80) = v12;
  *(_QWORD *)(inited + 88) = v14;
  *(_QWORD *)(inited + 96) = sub_1DA66D5F4();
  *(_QWORD *)(inited + 104) = v15;
  v16 = objc_msgSend(v1, sel_episodeArtworkProperties);
  if (v16)
  {
    v17 = v16;
    v18 = sub_1DA66CCF4();
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0xF000000000000000;
  }
  *(_QWORD *)(inited + 112) = v18;
  *(_QWORD *)(inited + 120) = v20;
  v21 = sub_1DA498C68(inited);
  v22 = sub_1DA4983BC(v21);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1DA49B254(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1DA49B2E8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1DA4F62A4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1DA4F62A4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1DA49B2E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1DA49B45C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1DA670450();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1DA670564();
      __break(1u);
LABEL_10:
      v2 = sub_1DA66F994();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1DA6705DC();
    __break(1u);
LABEL_14:
    result = sub_1DA670564();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1DA49B45C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53B8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_1DA49C560(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t destroy for InteractionContext(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for InteractionContext.Page(0);
  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 3:
      swift_bridgeObjectRelease();
      a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED88) + 64);
LABEL_6:
      v3 = sub_1DA66D564();
      v4 = *(_QWORD *)(v3 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
      return result;
    case 2:
      return swift_bridgeObjectRelease();
    case 1:
      goto LABEL_6;
  }
  return result;
}

uint64_t InteractionContext.view.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InteractionContext(0) + 20));
}

uint64_t UIView.interactionContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  void *v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _OWORD v47[2];
  uint64_t v48;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0A68);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for InteractionContext.Page(0);
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = UIView.mt_viewController.getter();
  v40 = v5;
  if (!v8)
    goto LABEL_7;
  v9 = (void *)v8;
  objc_opt_self();
  v10 = (void *)swift_dynamicCastObjCClass();
  if (!v10)
    goto LABEL_5;
  v11 = objc_msgSend(v10, sel_topViewController);

  if (!v11)
  {
LABEL_7:
    v9 = 0;
    goto LABEL_8;
  }
  v9 = v11;
LABEL_5:
  *(_QWORD *)&v44 = v9;
  sub_1DA47D774(0, &qword_1EDADE798);
  v12 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1628);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v48 = 0;
    memset(v47, 0, sizeof(v47));
  }
  v41 = v9;
  v42 = v4;
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = MEMORY[0x1DF0A054C](v13 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADEC08);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1DA47E36C;
  *(_QWORD *)(v15 + 24) = v14;
  sub_1DA6705E8();
  v16 = (void *)v44;
  if ((_QWORD)v44)
  {
    sub_1DA47D774(0, qword_1EDADE950);
    v17 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      while (1)
      {
        v43 = v16;
        v18 = v16;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1638);
        if ((swift_dynamicCast() & 1) != 0)
          break;
        v46 = 0;
        v44 = 0u;
        v45 = 0u;
        sub_1DA47E2F0((uint64_t)&v44, &qword_1EDAE1640);

        sub_1DA6705E8();
        v16 = (void *)v44;
        if (!(_QWORD)v44)
          goto LABEL_21;
      }
      v37 = v7;
      v38 = v13;
      v19 = a1;
      v21 = *((_QWORD *)&v45 + 1);
      v20 = v46;
      __swift_project_boxed_opaque_existential_1(&v44, *((uint64_t *)&v45 + 1));
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v21, v20);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v44);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_1DA49CFA4(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
      v24 = *((_QWORD *)v17 + 2);
      v23 = *((_QWORD *)v17 + 3);
      a1 = v19;
      if (v24 >= v23 >> 1)
        v17 = sub_1DA49CFA4((char *)(v23 > 1), v24 + 1, 1, v17);
      v7 = v37;
      *((_QWORD *)v17 + 2) = v24 + 1;
      v17[v24 + 32] = v22;
      sub_1DA6705E8();
      v16 = (void *)v44;
      v13 = v38;
    }
    while ((_QWORD)v44);
  }
  else
  {
    v17 = (char *)MEMORY[0x1E0DEE9D8];
  }
LABEL_21:
  swift_release();
  swift_release();
  if (*((_QWORD *)v17 + 2))
    v25 = v17[32];
  else
    v25 = 7;
  v26 = (uint64_t)v42;
  swift_bridgeObjectRelease();
  sub_1DA49CC94((uint64_t)v47, (uint64_t)&v44, &qword_1EDAE1630);
  v27 = *((_QWORD *)&v45 + 1);
  if (*((_QWORD *)&v45 + 1))
  {
    v28 = v46;
    __swift_project_boxed_opaque_existential_1(&v44, *((uint64_t *)&v45 + 1));
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
    v30 = v39;
    v29 = v40;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v26, 0, 1, v40);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v26, 1, v29) != 1)
    {
      sub_1DA49CCD8(v26, (uint64_t)v7);
      goto LABEL_29;
    }
  }
  else
  {
    sub_1DA47E2F0((uint64_t)&v44, &qword_1EDAE1630);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v26, 1, 1, v40);
  }
  swift_storeEnumTagMultiPayload();
  sub_1DA47E2F0(v26, &qword_1EDAE0A68);
LABEL_29:
  sub_1DA49CC94((uint64_t)v47, (uint64_t)&v44, &qword_1EDAE1630);
  v31 = *((_QWORD *)&v45 + 1);
  if (*((_QWORD *)&v45 + 1))
  {
    v32 = v46;
    __swift_project_boxed_opaque_existential_1(&v44, *((uint64_t *)&v45 + 1));
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v32 + 16))(&v43, v31, v32);

    v33 = (char)v43;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v44);
  }
  else
  {

    sub_1DA47E2F0((uint64_t)&v44, &qword_1EDAE1630);
    v33 = 2;
  }
  sub_1DA49CCD8((uint64_t)v7, a1);
  v34 = type metadata accessor for InteractionContext(0);
  *(_BYTE *)(a1 + *(int *)(v34 + 20)) = v25;
  *(_BYTE *)(a1 + *(int *)(v34 + 24)) = v33;
  return sub_1DA47E2F0((uint64_t)v47, &qword_1EDAE1630);
}

uint64_t type metadata accessor for InteractionContext(uint64_t a1)
{
  return sub_1DA48EED8(a1, qword_1EDADEA38);
}

uint64_t sub_1DA49CC94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA49CCD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InteractionContext.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for InteractionContext.Page(uint64_t a1)
{
  return sub_1DA48EED8(a1, qword_1EDADE990);
}

uint64_t UIView.mt_viewController.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t inited;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t result;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;

  v0 = swift_allocObject() + 16;
  swift_unknownObjectWeakInit();
  v1 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  v2 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = MEMORY[0x1DF0A054C](v0);
  v3 = (id *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE7C8);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = sub_1DA582C20;
  *(_QWORD *)(inited + 24) = v2;
  sub_1DA66BE60();
  swift_beginAccess();
  v5 = *(void **)(v2 + 16);
  v6 = v5;
  v7 = objc_msgSend(v6, sel_nextResponder);
  v8 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = v7;

  if (v5)
  {
    do
    {
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
      else
      {

      }
      v9 = *v3;
      v6 = *v3;
      v10 = objc_msgSend(v6, sel_nextResponder);
      v11 = *v3;
      *v3 = v10;

    }
    while (v9);
    v1 = v16;
  }
  swift_release();
  swift_release();
  result = swift_release();
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v15 = sub_1DA6705A0();
  result = swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_17;
LABEL_12:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x1DF09EE48](0, v1);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v1 + 32);
LABEL_15:
    v14 = v13;
    swift_bridgeObjectRelease();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

char *sub_1DA49CFA4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE21F0);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1DA49D09C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1DA49D09C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA49D180(uint64_t a1)
{
  return sub_1DA56E264(a1, (SEL *)&selRef_privateQueueContext, &qword_1EDADF970);
}

uint64_t sub_1DA49D194@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[3];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v28[1] = a3;
  v28[2] = a2;
  v36 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF08);
  v6 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  v33 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0128);
  v10 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  v35 = v10;
  MEMORY[0x1E0C80A78](v9);
  v30 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE44D0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE45E0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4528);
  v31 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v21 = (char *)v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  sub_1DA49D4BC((uint64_t)v15);
  sub_1DA4841D4(&qword_1EDAE44C8, &qword_1EDAE44D0, MEMORY[0x1E0C95950]);
  sub_1DA66E218();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0000);
  sub_1DA4841D4(&qword_1EDAE45D8, &qword_1EDAE45E0, MEMORY[0x1E0C95B60]);
  sub_1DA66E17C();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v37 = v22;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA66E02C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
  v23 = v30;
  v24 = v32;
  sub_1DA66E020();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v24);
  sub_1DA4841D4(&qword_1EDAE4520, &qword_1EDAE4528, MEMORY[0x1E0C95950]);
  sub_1DA4841D4(&qword_1EDAE0120, &qword_1EDAE0128, MEMORY[0x1E0C964C8]);
  v25 = v29;
  v26 = v34;
  sub_1DA66E188();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v21, v25);
}

uint64_t sub_1DA49D4BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  _QWORD v44[4];

  v41 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFE20);
  v5 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  v36 = v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4380);
  v9 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  v38 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4610);
  v13 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  v40 = v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE0080);
  v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v16, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0110);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DA67C310;
  v18 = sub_1DA66F8BC();
  v19 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 40) = v20;
  v21 = sub_1DA66F8BC();
  *(_QWORD *)(v17 + 88) = v19;
  *(_QWORD *)(v17 + 64) = v21;
  *(_QWORD *)(v17 + 72) = v22;
  v23 = sub_1DA66F8BC();
  *(_QWORD *)(v17 + 120) = v19;
  *(_QWORD *)(v17 + 96) = v23;
  *(_QWORD *)(v17 + 104) = v24;
  v25 = sub_1DA66F8BC();
  *(_QWORD *)(v17 + 152) = v19;
  *(_QWORD *)(v17 + 128) = v25;
  *(_QWORD *)(v17 + 136) = v26;
  v27 = sub_1DA66F8BC();
  *(_QWORD *)(v17 + 184) = v19;
  *(_QWORD *)(v17 + 160) = v27;
  *(_QWORD *)(v17 + 168) = v28;
  v29 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setPropertiesToFetch_, v29);

  sub_1DA66D534();
  __swift_project_boxed_opaque_existential_1(v44, v44[3]);
  v43 = sub_1DA66D600();
  v42 = (id)sub_1DA66D540();
  v30 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v3, 1, 1, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFEA0);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  sub_1DA4841D4(&qword_1EDADFE98, (uint64_t *)&unk_1EDADFEA0, MEMORY[0x1E0C95D90]);
  sub_1DA4A89F0();
  sub_1DA66E248();
  sub_1DA47E2F0((uint64_t)v3, (uint64_t *)&unk_1EDAE20A0);

  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4B10);
  sub_1DA4841D4(&qword_1EDADFE18, &qword_1EDADFE20, MEMORY[0x1E0C95CB8]);
  v31 = v35;
  sub_1DA66E128();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v31);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4668);
  sub_1DA4841D4(&qword_1EDAE4378, &qword_1EDAE4380, MEMORY[0x1E0C95708]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE4658, &qword_1EDAE4668, MEMORY[0x1E0C95C10]);
  v32 = v37;
  sub_1DA66E224();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v32);
  sub_1DA4841D4(&qword_1EDAE4608, (uint64_t *)&unk_1EDAE4610, MEMORY[0x1E0C95B78]);
  v33 = v39;
  sub_1DA66E17C();

  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v15, v33);
}

uint64_t UnownedImageIssueIdentifier.startIdentifyingIssues(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t, __n128);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  id v105;

  v2 = v1;
  v4 = type metadata accessor for UnownedImageIssueIdentifier();
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v86 = *(_QWORD *)(v4 - 8);
  v87 = v5;
  MEMORY[0x1E0C80A78](v4);
  v104 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1DA66D54C();
  v7 = *(_QWORD *)(v76 - 8);
  v77 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v76);
  v73 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66C358();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v12;
  v101 = *(_QWORD *)(v13 + 64);
  v15 = v13;
  v85 = v13;
  MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFEF0);
  v72 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFE30);
  v75 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v71 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFDE8);
  v82 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v103 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4648);
  v90 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v78 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE44F8);
  v25 = *(_QWORD *)(v24 - 8);
  v91 = v24;
  v92 = v25;
  MEMORY[0x1E0C80A78](v24);
  v80 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4638);
  v97 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v89 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE44D8);
  v99 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v93 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE44E8);
  v100 = *(_QWORD *)(v98 - 8);
  v29 = MEMORY[0x1E0C80A78](v98);
  v94 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
  v81 = v17;
  v83 = v14;
  v84(v17, v2, v14, v29);
  sub_1DA66E02C();
  v31 = a1;
  v105 = (id)sub_1DA66D540();
  v32 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v11, 1, 1, v32);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  sub_1DA4841D4(&qword_1EDADFEE8, &qword_1EDADFEF0, MEMORY[0x1E0C960B0]);
  sub_1DA4A89F0();
  sub_1DA66E248();
  sub_1DA47E2F0((uint64_t)v11, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v20, v18);
  v33 = v7;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v35 = v73;
  v36 = v76;
  v34(v73, a1, v76);
  v37 = *(unsigned __int8 *)(v33 + 80);
  v38 = swift_allocObject() + ((v37 + 16) & ~v37);
  v39 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
  v40 = v35;
  v39(v38, v35, v36);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA4841D4(&qword_1EDADFE28, &qword_1EDADFE30, MEMORY[0x1E0C95CB8]);
  v41 = v74;
  v42 = v71;
  sub_1DA66E200();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v41);
  v43 = v104;
  sub_1DA49E2DC(v102, v104);
  v34(v40, v31, v36);
  v44 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  v45 = (v44 + v87 + v37) & ~v37;
  v46 = swift_allocObject();
  sub_1DA4F7228(v43, v46 + v44, (uint64_t (*)(_QWORD))type metadata accessor for UnownedImageIssueIdentifier);
  v39(v46 + v45, v40, v36);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0008);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4590);
  sub_1DA4841D4(&qword_1EDADFDE0, &qword_1EDADFDE8, MEMORY[0x1E0C95B48]);
  sub_1DA4841D4(&qword_1EDAE4588, &qword_1EDAE4590, MEMORY[0x1E0C95970]);
  v47 = v78;
  v48 = v79;
  v49 = v103;
  sub_1DA66E230();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v49, v48);
  v50 = v102;
  v51 = v104;
  sub_1DA49E2DC(v102, v104);
  v52 = swift_allocObject();
  sub_1DA4F7228(v51, v52 + v44, (uint64_t (*)(_QWORD))type metadata accessor for UnownedImageIssueIdentifier);
  v53 = MEMORY[0x1E0C95B78];
  sub_1DA4841D4(&qword_1EDAE4640, (uint64_t *)&unk_1EDAE4648, MEMORY[0x1E0C95B78]);
  v54 = v80;
  v55 = v88;
  sub_1DA66E17C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v47, v55);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFE08);
  v56 = MEMORY[0x1E0C95950];
  sub_1DA4841D4(&qword_1EDAE44F0, &qword_1EDAE44F8, MEMORY[0x1E0C95950]);
  sub_1DA4841D4(&qword_1EDADFE00, &qword_1EDADFE08, MEMORY[0x1E0C95C10]);
  v57 = v89;
  v58 = v91;
  sub_1DA66E224();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v54, v58);
  v59 = v81;
  v60 = v83;
  ((void (*)(char *, uint64_t, uint64_t))v84)(v81, v50, v83);
  v61 = v85;
  v62 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  v63 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v63 + v62, v59, v60);
  sub_1DA4841D4(&qword_1EDAE4630, &qword_1EDAE4638, v53);
  v64 = v93;
  v65 = v95;
  sub_1DA66E17C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v57, v65);
  sub_1DA66D51C();
  v66 = v94;
  v67 = v96;
  sub_1DA66DF3C();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v64, v67);
  sub_1DA4841D4(&qword_1EDAE44E0, &qword_1EDAE44E8, v56);
  v68 = v98;
  v69 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v66, v68);
  return v69;
}

uint64_t sub_1DA49E2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnownedImageIssueIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t type metadata accessor for UnownedImageIssueIdentifier()
{
  uint64_t result;

  result = qword_1EDADECE0;
  if (!qword_1EDADECE0)
    return swift_getSingletonMetadata();
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1DA66BE60();
}

void sub_1DA49EDB0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_1DA49FBC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA4A1A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

void sub_1DA4A2394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA4A26D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA4A2754(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1DA4A2774(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x1DA4A2728);
}

id debuggingInfoForTask(void *a1)
{
  id v1;
  unint64_t v2;
  __CFString *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = a1;
  v2 = objc_msgSend(v1, "state");
  if (v2 > 3)
    v3 = 0;
  else
    v3 = off_1EA0C6578[v2];
  v4 = (void *)MEMORY[0x1E0CB3940];
  v5 = objc_msgSend(v1, "taskIdentifier");
  objc_msgSend(v1, "currentRequest");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "URL");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringWithFormat:", CFSTR("NSURLSessionTask %ld <%@> { %@ }"), v5, v7, v3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void sub_1DA4A2F90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t isMulticore()
{
  if (isMulticore_onceToken != -1)
    dispatch_once(&isMulticore_onceToken, &__block_literal_global_26);
  return isMulticore_result;
}

uint64_t physicalMemory()
{
  if (physicalMemory_onceToken != -1)
    dispatch_once(&physicalMemory_onceToken, &__block_literal_global_28);
  return physicalMemory_physicalMemory;
}

void sub_1DA4A4A58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t isTV()
{
  if (isTV_onceToken != -1)
    dispatch_once(&isTV_onceToken, &__block_literal_global_0);
  return isTV___isTV;
}

void __isTV_block_invoke()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  isTV___isTV = v1 == 2;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

id IMPlayerItem.init(episode:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  float v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  char *v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  uint64_t v76;
  void *v77;
  void (*v78)(char *, _QWORD, uint64_t);
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  void (*v83)(char *, uint64_t);
  char v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  uint64_t v89;
  void *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  char v96;
  char **v97;
  char *v98;
  char **v99;
  char **v100;
  id v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t *boxed_opaque_existential_1;
  id v107;
  void *v108;
  id v109;
  id v110;
  void *v111;
  id v112;
  id v113;
  uint64_t v114;
  char *v115;
  id v116;
  void *v117;
  id v118;
  id v119;
  void *v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  void *v126;
  id v127;
  id v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  void *v137;
  id v138;
  id v139;
  void *v140;
  id v141;
  id v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  void *v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t, uint64_t, uint64_t);
  id v150;
  void *v151;
  uint64_t v152;
  char *v153;
  id v154;
  void *v155;
  id v156;
  void *v157;
  id v158;
  void *v159;
  id v160;
  void *v161;
  id v162;
  void *v163;
  id v164;
  uint64_t v165;
  id v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  id v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  id v174;
  void *v175;
  uint64_t v176;
  char *v177;
  id v178;
  void *v179;
  id v180;
  void *v181;
  id v182;
  uint64_t v183;
  id v184;
  void *v185;
  void *v186;
  id v187;
  void *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  void *v193;
  uint64_t v194;
  void (*v195)(char *, uint64_t, uint64_t, uint64_t);
  id v196;
  void *v197;
  uint64_t v198;
  char *v199;
  id v200;
  void *v201;
  uint64_t v202;
  char *v203;
  id v204;
  void *v205;
  id v206;
  void *v207;
  id v208;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  uint64_t v216;
  void (*v217)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  _OWORD v222[2];
  uint64_t v223[3];
  uint64_t v224;
  unint64_t v225;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v4);
  v214 = (char *)&v210 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = sub_1DA66D330();
  v6 = *(_QWORD *)(v220 - 8);
  MEMORY[0x1E0C80A78](v220);
  v215 = (char *)&v210 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v210 - v9;
  v11 = sub_1DA66C430();
  v218 = *(_QWORD *)(v11 - 8);
  v219 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v210 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DA66C358();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v210 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v18);
  v210 = (char *)&v210 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v212 = (char *)&v210 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v210 - v23;
  MEMORY[0x1E0C80A78](v25);
  v211 = (char *)&v210 - v26;
  *(_QWORD *)&v28 = MEMORY[0x1E0C80A78](v27).n128_u64[0];
  v30 = (char *)&v210 - v29;
  v221 = a1;
  v31 = objc_msgSend(a1, sel_bestUrl, v28);
  v216 = v15;
  v213 = v17;
  if (v31)
  {
    sub_1DA66C304();

    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v30, v17, v14);
    v217 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v217(v30, 0, 1, v14);
    v32 = v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v30, 1, v14) == 1)
    {
      v31 = 0;
    }
    else
    {
      v31 = (id)sub_1DA66C2C8();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v14);
    }
  }
  else
  {
    v217 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v217(v30, 1, 1, v14);
    v32 = v14;
  }
  v33 = v6;
  v34 = objc_msgSend(v2, sel_initWithUrl_, v31);

  v35 = v34;
  v36 = v221;
  v37 = objc_msgSend(v221, sel_title);
  objc_msgSend(v35, sel_setTitle_, v37);

  v38 = objc_msgSend((id)objc_opt_self(), sel_validatedIdNumberFromStoreId_, objc_msgSend(v36, sel_storeTrackId));
  if (v38)
  {
    v39 = v38;
    v40 = objc_msgSend(v38, sel_longLongValue);

  }
  else
  {
    v40 = 0;
  }
  objc_msgSend(v35, sel_setEpisodeStoreId_, v40);
  v41 = v221;
  v42 = objc_msgSend(v221, sel_uuid);
  objc_msgSend(v35, sel_setEpisodeUuid_, v42);

  v43 = objc_msgSend(v41, sel_guid);
  objc_msgSend(v35, sel_setEpisodeGuid_, v43);

  v44 = objc_msgSend(v41, sel_objectID);
  objc_msgSend(v35, sel_setEpisodeObjectID_, v44);

  objc_msgSend(v41, sel_duration);
  objc_msgSend(v35, sel_setDuration_);
  objc_msgSend(v41, sel_playhead);
  objc_msgSend(v35, sel_setPlayhead_, v45);
  objc_msgSend(v35, sel_setIsVideo_, objc_msgSend(v41, sel_isVideo));
  objc_msgSend(v41, sel_pubDate);
  sub_1DA66C3AC();
  v46 = (void *)sub_1DA66C3F4();
  (*(void (**)(char *, uint64_t))(v218 + 8))(v13, v219);
  objc_msgSend(v35, sel_setPubDate_, v46);

  objc_msgSend(v35, sel_setEpisodePID_, objc_msgSend(v41, sel_persistentID));
  objc_msgSend(v35, sel_setIsNotSubscribeable_, 0);
  objc_msgSend(v35, sel_setIsExplicit_, objc_msgSend(v41, sel_isExplicit));
  v47 = objc_msgSend(v41, sel_podcast);
  if (v47)
  {
    v48 = v47;
    v49 = objc_msgSend(v47, sel_imageURL);

    if (v49)
    {
      sub_1DA66F8BC();

      v50 = v211;
      sub_1DA66C334();
      swift_bridgeObjectRelease();
      v51 = v216;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v216 + 48))(v50, 1, v32) == 1)
      {
        v52 = 0;
      }
      else
      {
        v52 = (void *)sub_1DA66C2C8();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v32);
      }
      objc_msgSend(v35, sel_setArtworkUrl_, v52);

    }
  }
  v53 = v221;
  objc_msgSend(v35, sel_setSeasonNumber_, objc_msgSend(v221, sel_seasonNumber));
  objc_msgSend(v35, sel_setEpisodeNumber_, objc_msgSend(v53, sel_episodeNumber));
  objc_msgSend(v35, sel_setEpisodeType_, objc_msgSend(v53, sel_episodeTypeResolvedValue));
  v54 = objc_msgSend(v53, sel_podcast);
  if (v54)
  {
    v55 = v54;
    v56 = objc_msgSend(v54, sel_isSerialShowTypeInFeed);

  }
  else
  {
    v56 = 0;
  }
  objc_msgSend(v35, sel_setPodcastIsSerial_, v56);
  v57 = v221;
  objc_msgSend(v35, sel_setPlayCount_, objc_msgSend(v221, sel_playCount));
  v58 = objc_msgSend(v57, sel_podcast);
  v59 = v58;
  if (v58)
  {
    v60 = objc_msgSend(v58, sel_bestAvailableStoreCleanURL);

    if (v60)
    {
      v61 = (uint64_t)v212;
      sub_1DA66C304();

      v62 = 0;
    }
    else
    {
      v62 = 1;
      v61 = (uint64_t)v212;
    }
    v217((char *)v61, v62, 1, v32);
    sub_1DA4A686C(v61, (uint64_t)v24, &qword_1EDAE5020);
    v63 = v216;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v216 + 48))(v24, 1, v32) == 1)
    {
      v59 = 0;
    }
    else
    {
      v59 = (void *)sub_1DA66C2C8();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v24, v32);
    }
  }
  else
  {
    v217(v24, 1, 1, v32);
  }
  objc_msgSend(v35, sel_setPodcastShareUrl_, v59);

  v64 = v221;
  v65 = objc_msgSend(v221, sel_priceType);
  objc_msgSend(v35, sel_setPriceType_, v65);

  v66 = objc_msgSend(v64, sel_podcast);
  v67 = v66;
  if (v66)
  {
    v68 = objc_msgSend(v66, sel_displayType);

    if (v68)
    {
      sub_1DA66F8BC();

      v67 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v67 = 0;
    }
  }
  objc_msgSend(v35, sel_setPodcastDisplayType_, v67);

  v69 = objc_msgSend(v221, sel_podcast);
  v70 = v69;
  if (v69)
  {
    v71 = objc_msgSend(v69, sel_channel);

    if (v71)
    {
      v70 = objc_msgSend(v71, sel_subscriptionActive);

    }
    else
    {
      v70 = 0;
    }
  }
  objc_msgSend(v35, sel_setPaidSubscriptionActive_, v70);
  v72 = objc_msgSend(v221, sel_podcast);
  v73 = v72;
  if (v72)
  {
    v74 = objc_msgSend(v72, sel_channel);

    if (v74
      && (v75 = objc_msgSend(v74, sel_subscriptionOfferAppType),
          v74,
          v75))
    {
      v76 = sub_1DA66F8BC();
      v73 = v77;

    }
    else
    {
      v76 = 0;
      v73 = 0;
    }
  }
  else
  {
    v76 = 0;
  }
  v78 = *(void (**)(char *, _QWORD, uint64_t))(v33 + 104);
  v79 = v220;
  v78(v10, *MEMORY[0x1E0D7E2F0], v220);
  v80 = sub_1DA66D324();
  v82 = v81;
  v83 = *(void (**)(char *, uint64_t))(v33 + 8);
  v83(v10, v79);
  if (v73)
  {
    if (v76 == v80 && v73 == v82)
      v84 = 1;
    else
      v84 = sub_1DA6706D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v84 = 0;
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setIsAppleMusicEpisode_, v84 & 1);
  v85 = objc_msgSend(v221, sel_podcast);
  v86 = v85;
  if (v85)
  {
    v87 = objc_msgSend(v85, sel_channel);

    if (v87
      && (v88 = objc_msgSend(v87, sel_subscriptionOfferAppType),
          v87,
          v88))
    {
      v89 = sub_1DA66F8BC();
      v86 = v90;

    }
    else
    {
      v89 = 0;
      v86 = 0;
    }
  }
  else
  {
    v89 = 0;
  }
  v91 = v215;
  v92 = v220;
  v78(v215, *MEMORY[0x1E0D7E2E8], v220);
  v93 = sub_1DA66D324();
  v95 = v94;
  v83(v91, v92);
  if (v86)
  {
    if (v89 == v93 && v86 == v95)
      v96 = 1;
    else
      v96 = sub_1DA6706D8();
    v97 = &selRef_tintColorForTheme_;
    v98 = v213;
    v99 = &selRef_ams_isActiveAccountCombined;
    v100 = &selRef_ams_isActiveAccountCombined;
    swift_bridgeObjectRelease();
  }
  else
  {
    v96 = 0;
    v97 = &selRef_tintColorForTheme_;
    v98 = v213;
    v99 = &selRef_ams_isActiveAccountCombined;
    v100 = &selRef_ams_isActiveAccountCombined;
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setIsAppleNewsEpisode_, v96 & 1);
  v101 = v221;
  v102 = objc_msgSend(v221, v97[483]);
  v103 = v102;
  if (v102)
  {
    v104 = objc_msgSend(v102, sel_channel);

    if (v104)
    {
      v103 = objc_msgSend(v104, sel_storeId);

    }
    else
    {
      v103 = 0;
    }
  }
  objc_msgSend(v35, sel_setChannelStoreId_, v103);
  objc_msgSend(v35, sel_setEntitled_, objc_msgSend(v101, sel_isEntitled));
  v105 = sub_1DA66C784();
  v224 = v105;
  v225 = sub_1DA4A68B0();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v223);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v105 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E0D7D538], v105);
  LOBYTE(v105) = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v223);
  if ((v105 & 1) != 0)
  {
    v107 = objc_msgSend(v101, v97[483]);
    if (v107)
    {
      v108 = v107;
      v109 = objc_msgSend(v107, sel_storeCollectionId);

      v110 = objc_msgSend(v35, sel_episode);
      if (v110)
      {
        v111 = v110;
        v112 = objc_msgSend(v110, sel_storeTrackId);

        v113 = objc_msgSend((id)objc_opt_self(), sel_productURLForStoreCollectionId_storeTrackId_, v109, v112);
        if (v113)
        {
          sub_1DA66C304();

          v114 = v216;
          v115 = v210;
          (*(void (**)(char *, char *, uint64_t))(v216 + 32))(v210, v98, v32);
          v217(v115, 0, 1, v32);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v115, 1, v32) == 1)
          {
            v113 = 0;
          }
          else
          {
            v113 = (id)sub_1DA66C2C8();
            (*(void (**)(char *, uint64_t))(v114 + 8))(v115, v32);
          }
        }
        else
        {
          v217(v210, 1, 1, v32);
        }
        objc_msgSend(v35, sel_setEpisodeShareUrl_, v113);

      }
    }
  }
  v116 = objc_msgSend(v101, v97[483]);
  v117 = v116;
  if (v116)
  {
    v118 = objc_msgSend(v116, sel_feedURL);

    if (v118)
    {
      sub_1DA66F8BC();

      v117 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v117 = 0;
    }
  }
  objc_msgSend(v35, sel_setPodcastFeedUrl_, v117);

  v119 = objc_msgSend(v101, v97[483]);
  if (v119)
  {
    v120 = v119;
    v121 = objc_msgSend(v119, sel_storeCollectionId);

  }
  else
  {
    v121 = 0;
  }
  objc_msgSend(v35, sel_setPodcastStoreId_, v121);
  if (objc_msgSend(v35, sel_paidSubscriptionActive))
    v122 = objc_msgSend(v101, sel_entitledTranscriptProvider);
  else
    v122 = objc_msgSend(v101, sel_freeTranscriptProvider);
  v123 = v122;
  if (v123)
  {
    sub_1DA66F8BC();

    v123 = (id)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v35, sel_setTranscriptSource_, v123);

  v124 = objc_msgSend(v101, sel_transcriptIdentifier);
  objc_msgSend(v35, sel_setTranscriptIdentifier_, v124);

  v125 = objc_msgSend(v101, v97[483]);
  v126 = v125;
  if (v125)
  {
    v127 = objc_msgSend(v125, sel_title);

    if (v127)
    {
      sub_1DA66F8BC();

    }
  }
  objc_msgSend(v35, v100[89]);
  objc_msgSend(v35, v99[87]);
  v128 = objc_msgSend(v101, v97[483]);
  if (v128)
  {
    v129 = v128;
    objc_msgSend(v128, sel_isSerialShowTypeInFeed);

  }
  v130 = (uint64_t)v214;
  if (objc_msgSend(v101, sel_valueForKey_, *MEMORY[0x1E0D7F2E8]))
  {
    sub_1DA670360();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v222, 0, sizeof(v222));
  }
  sub_1DA4A686C((uint64_t)v222, (uint64_t)v223, &qword_1EDAE5130);
  if (v224)
  {
    v131 = v219;
    v132 = swift_dynamicCast();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v218 + 56))(v130, v132 ^ 1u, 1, v131);
  }
  else
  {
    sub_1DA47E2F0((uint64_t)v223, &qword_1EDAE5130);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v218 + 56))(v130, 1, 1, v219);
  }
  sub_1DA66D390();
  sub_1DA66D384();
  v134 = v133;
  swift_bridgeObjectRelease();
  sub_1DA47E2F0(v130, &qword_1EDADE6C8);
  if (v134)
  {
    v135 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v135 = 0;
  }
  objc_msgSend(v35, sel_setAlbum_, v135);

  v136 = objc_msgSend(v101, v97[483]);
  v137 = v136;
  if (v136)
  {
    v138 = objc_msgSend(v136, sel_title);

    if (v138)
    {
      sub_1DA66F8BC();

      v137 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v137 = 0;
    }
  }
  objc_msgSend(v35, sel_setAuthor_, v137);

  v139 = objc_msgSend(v101, v97[483]);
  v140 = v139;
  if (v139)
  {
    v141 = objc_msgSend(v139, sel_uuid);

    if (v141)
    {
      sub_1DA66F8BC();

      v140 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v140 = 0;
    }
  }
  objc_msgSend(v35, sel_setPodcastUuid_, v140);

  v142 = objc_msgSend(v101, sel_artworkTemplateURL);
  if (v142)
  {
    v143 = v142;
    v144 = sub_1DA66F8BC();
    v219 = v145;
    v220 = v144;

    v146 = objc_msgSend(v101, sel_artworkBackgroundColor);
    if (v146)
    {
      v147 = v146;
      v148 = sub_1DA66F8BC();
      v217 = v149;
      v218 = v148;

    }
    else
    {
      v217 = 0;
      v218 = 0;
    }
    v150 = objc_msgSend(v101, sel_artworkTextPrimaryColor);
    if (v150)
    {
      v151 = v150;
      v152 = sub_1DA66F8BC();
      v215 = v153;
      v216 = v152;

    }
    else
    {
      v215 = 0;
      v216 = 0;
    }
    v154 = objc_msgSend(v101, sel_artworkTextSecondaryColor);
    if (v154)
    {
      v155 = v154;
      v214 = (char *)sub_1DA66F8BC();

    }
    else
    {
      v214 = 0;
    }
    v156 = objc_msgSend(v101, sel_artworkTextTertiaryColor);
    if (v156)
    {
      v157 = v156;
      sub_1DA66F8BC();

    }
    v158 = objc_msgSend(v101, sel_artworkTextQuaternaryColor);
    if (v158)
    {
      v159 = v158;
      sub_1DA66F8BC();

    }
    v160 = objc_allocWithZone((Class)sub_1DA66CD24());
    v161 = (void *)sub_1DA66CD0C();
    objc_msgSend(v35, sel_setEpisodeArtworkProperties_, v161);

    v97 = &selRef_tintColorForTheme_;
  }
  v162 = objc_msgSend(v101, v97[483]);
  if (v162)
  {
    v163 = v162;
    v164 = objc_msgSend(v162, sel_artworkTemplateURL);
    if (v164 || (v164 = objc_msgSend(v163, sel_imageURL)) != 0)
    {
      v165 = sub_1DA66F8BC();

      v166 = objc_msgSend(v163, sel_artworkPrimaryColor);
      if (v166)
      {
        v167 = v166;
        v168 = sub_1DA66F8BC();
        v218 = v169;
        v219 = v168;

      }
      else
      {
        v218 = 0;
        v219 = 0;
      }
      v170 = objc_msgSend(v163, sel_artworkTextPrimaryColor);
      if (v170)
      {
        v171 = v170;
        v172 = sub_1DA66F8BC();
        v216 = v173;
        v217 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v172;

      }
      else
      {
        v216 = 0;
        v217 = 0;
      }
      v174 = objc_msgSend(v163, sel_artworkTextSecondaryColor);
      if (v174)
      {
        v175 = v174;
        v176 = sub_1DA66F8BC();
        v214 = v177;
        v215 = (char *)v176;

      }
      else
      {
        v214 = 0;
        v215 = 0;
      }
      v178 = objc_msgSend(v163, sel_artworkTextTertiaryColor);
      v220 = v165;
      if (v178)
      {
        v179 = v178;
        sub_1DA66F8BC();

      }
      v180 = objc_msgSend(v163, sel_artworkTextQuaternaryColor);
      if (v180)
      {
        v181 = v180;
        sub_1DA66F8BC();

      }
      v97 = &selRef_tintColorForTheme_;
      v182 = objc_allocWithZone((Class)sub_1DA66CD24());
      v183 = sub_1DA66CD0C();
      objc_msgSend(v35, sel_setShowArtworkProperties_, v183);

      v163 = (void *)v183;
    }

  }
  v184 = objc_msgSend(v101, v97[483]);
  v185 = v35;
  if (v184)
  {
    v186 = v184;
    v187 = objc_msgSend(v184, sel_uberBackgroundImageURL);
    if (v187)
    {
      v188 = v187;
      v189 = sub_1DA66F8BC();
      v191 = v190;

      v192 = objc_msgSend(v186, sel_uberBackgroundJoeColor);
      if (v192)
      {
        v193 = v192;
        v194 = sub_1DA66F8BC();
        v217 = v195;
        v218 = v194;

      }
      else
      {
        v217 = 0;
        v218 = 0;
      }
      v196 = objc_msgSend(v186, sel_uberArtworkTextPrimaryColor);
      v220 = v189;
      if (v196)
      {
        v197 = v196;
        v198 = sub_1DA66F8BC();
        v215 = v199;
        v216 = v198;

      }
      else
      {
        v215 = 0;
        v216 = 0;
      }
      v200 = objc_msgSend(v186, sel_uberArtworkTextSecondaryColor);
      v219 = v191;
      if (v200)
      {
        v201 = v200;
        v202 = sub_1DA66F8BC();
        v213 = v203;
        v214 = (char *)v202;

      }
      else
      {
        v213 = 0;
        v214 = 0;
      }
      v204 = objc_msgSend(v186, sel_uberArtworkTextTertiaryColor);
      if (v204)
      {
        v205 = v204;
        sub_1DA66F8BC();

      }
      v206 = objc_msgSend(v186, sel_uberArtworkTextQuaternaryColor);
      if (v206)
      {
        v207 = v206;
        sub_1DA66F8BC();

      }
      v208 = objc_allocWithZone((Class)sub_1DA66CD24());
      v185 = (void *)sub_1DA66CD0C();
      objc_msgSend(v35, sel_setUberArtworkProperties_, v185);

      v186 = v35;
    }
    else
    {
      v185 = v35;
    }

  }
  return v35;
}

{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithEpisode_, a1);

  return v2;
}

uint64_t sub_1DA4A686C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DA4A68B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE1990;
  if (!qword_1EDAE1990)
  {
    v1 = sub_1DA66C784();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7D520], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE1990);
  }
  return result;
}

uint64_t __physicalMemory_block_invoke()
{
  uint64_t result;
  int v1;
  size_t v2[2];

  v2[1] = *MEMORY[0x1E0C80C00];
  v1 = 0;
  v2[0] = 4;
  result = sysctlbyname("hw.physmem", &v1, v2, 0, 0);
  physicalMemory_physicalMemory = v1;
  return result;
}

uint64_t __isMulticore_block_invoke()
{
  uint64_t result;
  int v1;
  size_t v2[2];

  v2[1] = *MEMORY[0x1E0C80C00];
  v1 = 1;
  v2[0] = 4;
  result = sysctlbyname("hw.ncpu", &v1, v2, 0, 0);
  isMulticore_result = v1 != 1;
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DA4A70E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1DA66EB90();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1DA66EB9C();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  sub_1DA4EF8E4();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for JSPackageFetcher();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1DA66F4FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  swift_release();
  return swift_deallocObject();
}

void objectdestroyTm_5()
{
  type metadata accessor for SelectionConfirmingPicker();
}

uint64_t sub_1DA4A7344(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v4 = v1 + ((v3 + 48) & ~v3);
  swift_release();
  swift_release();
  v5 = sub_1DA66E95C();
  v6 = *(void (**)(uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v6(v4 + *(int *)(v5 + 32));
  v6(v4 + a1[13]);
  sub_1DA66E8F0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v7 = v4 + a1[18];
  v8 = sub_1DA66E338();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  if (*(_QWORD *)(v4 + a1[20]))
    swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1DA66CEBC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void objectdestroyTm_7()
{
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

void sub_1DA4A7540(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v4 = v1
     + ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80));
  swift_release();
  swift_release();
  v5 = sub_1DA66E95C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v6(v4 + *(int *)(v5 + 32), v2);
  swift_release();
  swift_release();
  v6(v4 + *(int *)(a1 + 64), v2);
  sub_1DA66E8F0();
  swift_release();
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

uint64_t sub_1DA4A7600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v3, 1, a1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v3 + *(int *)(a1 + 60), v2);
    v5(v3 + *(int *)(a1 + 64), v2);
  }
  sub_1DA670294();
  sub_1DA66E8F0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v7 = v4 + *(int *)(v1 + 88);
  v8 = sub_1DA66E338();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  if (*(unsigned __int8 *)(v0 + 64) != 255)

  if (*(_QWORD *)(v0 + 72))
    swift_release();

  if (*(_QWORD *)(v0 + 120))
    swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_10()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_11()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1DA4A7E24(uint64_t a1)
{
  return sub_1DA4A7E38(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DA4A7E38(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE21F8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA4A7F84(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  double v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1DA670678();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_130;
    if (v3)
      return sub_1DA4A8DD0(0, v3, 1, v2);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_138;
  v88 = result;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_96:
      v78 = v11;
      v87 = v8;
      if (v12 >= 2)
      {
        v79 = *v2;
        do
        {
          v80 = v12 - 2;
          if (v12 < 2)
            goto LABEL_125;
          if (!v79)
            goto LABEL_137;
          v81 = v78;
          v82 = *(_QWORD *)&v78[16 * v80 + 32];
          v83 = *(_QWORD *)&v78[16 * v12 + 24];
          sub_1DA5F45E4((char *)(v79 + v82), (char *)(v79 + *(_QWORD *)&v78[16 * v12 + 16]), v79 + v83, __dst);
          if (v1)
            break;
          if (v83 < v82)
            goto LABEL_126;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v81 = sub_1DA5E752C((uint64_t)v81);
          if (v80 >= *((_QWORD *)v81 + 2))
            goto LABEL_127;
          v84 = &v81[16 * v80 + 32];
          *(_QWORD *)v84 = v82;
          *((_QWORD *)v84 + 1) = v83;
          v85 = *((_QWORD *)v81 + 2);
          if (v12 > v85)
            goto LABEL_128;
          memmove(&v81[16 * v12 + 16], &v81[16 * v12 + 32], 16 * (v85 - v12));
          v78 = v81;
          *((_QWORD *)v81 + 2) = v85 - 1;
          v12 = v85 - 1;
        }
        while (v85 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v87 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v87 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1DA66FB08();
    *(_QWORD *)(v7 + 16) = v6;
    v87 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v86 = v2;
  v10 = *v2;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v89 = v3;
  v90 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(char *)(v10 + v9);
      v15 = dbl_1DA682448[v14];
      v16 = dbl_1DA682448[*(char *)(v10 + v13)];
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        while (v15 < v16 != dbl_1DA682448[*(char *)(v10 + v9)] >= dbl_1DA682448[(char)v14])
        {
          LOBYTE(v14) = *(_BYTE *)(v10 + v9++);
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v9 < v13)
          goto LABEL_131;
        if (v13 < v9)
        {
          v17 = v9 - 1;
          v18 = v13;
          do
          {
            if (v18 != v17)
            {
              if (!v10)
                goto LABEL_136;
              v19 = *(_BYTE *)(v10 + v18);
              *(_BYTE *)(v10 + v18) = *(_BYTE *)(v10 + v17);
              *(_BYTE *)(v10 + v17) = v19;
            }
            v59 = ++v18 < v17--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_129;
    if (v9 - v13 >= v88)
      goto LABEL_46;
    v20 = v13 + v88;
    if (__OFADD__(v13, v88))
      goto LABEL_132;
    if (v20 >= v3)
      v20 = v3;
    if (v20 < v13)
      break;
    if (v9 != v20)
    {
      v21 = (_BYTE *)(v10 + v9);
      do
      {
        v22 = *(_BYTE *)(v10 + v9);
        v23 = dbl_1DA682448[v22];
        v24 = v13;
        v25 = v21;
        do
        {
          v26 = (char)*(v25 - 1);
          if (v23 >= dbl_1DA682448[v26])
            break;
          if (!v10)
            goto LABEL_134;
          *v25 = v26;
          *--v25 = v22;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v21;
      }
      while (v9 != v20);
      v9 = v20;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_124;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1DA5E7198(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v90;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_1DA5E7198((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v90;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_113;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_114;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_116;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_119;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_123;
            v59 = v34 < v69;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_77;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_115;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_118;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_121;
        if (__OFADD__(v53, v58))
          goto LABEL_122;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_83:
          if (v59)
            v31 = v43;
          goto LABEL_85;
        }
LABEL_77:
        if ((v54 & 1) != 0)
          goto LABEL_117;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_120;
        if (v65 < v53)
          goto LABEL_15;
LABEL_85:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
          goto LABEL_133;
        }
        if (!v10)
          goto LABEL_135;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_1DA5F45E4((char *)(v10 + *(_QWORD *)v71), (char *)(v10 + *(_QWORD *)v74), v10 + v75, __dst);
        if (v1)
          goto LABEL_93;
        if (v75 < v72)
          goto LABEL_110;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_111;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_112;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v90;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v89;
    if (v9 >= v89)
    {
      v2 = v86;
      v8 = v87;
      goto LABEL_96;
    }
  }
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  result = sub_1DA670564();
  __break(1u);
  return result;
}

unint64_t sub_1DA4A85EC()
{
  unint64_t result;

  result = qword_1EDADE770;
  if (!qword_1EDADE770)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDADE770);
  }
  return result;
}

void sub_1DA4A8628(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  sub_1DA66BE60();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_1DA4A867C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v6;
  BOOL v7;
  BOOL v8;
  char v9;
  BOOL v11;

  v3 = 0x4E435F687ALL;
  if (a1 != 0x736E61485F687ALL || a2 != 0xE700000000000000)
  {
    v6 = sub_1DA6706D8();
    v7 = a1 == 0x736E61482D687ALL && a2 == 0xE700000000000000;
    v8 = v7;
    if ((v6 & 1) == 0 && !v8 && (sub_1DA6706D8() & 1) == 0)
    {
      v3 = 0x57545F687ALL;
      if (a1 != 0x746E61485F687ALL || a2 != 0xE700000000000000)
      {
        v9 = sub_1DA6706D8();
        v11 = a1 == 0x746E61482D687ALL && a2 == 0xE700000000000000;
        if ((v9 & 1) == 0 && !v11 && (sub_1DA6706D8() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          return a1;
        }
      }
    }
  }
  return v3;
}

void sub_1DA4A87CC()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1DA66F88C();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v0);

  if (v1)
    qword_1EDAE5390 = (uint64_t)v1;
  else
    __break(1u);
}

id sub_1DA4A8840(uint64_t a1)
{
  return sub_1DA48C0F8(a1, MEMORY[0x1E0DC4B10], &qword_1EDADE750);
}

id sub_1DA4A8854(uint64_t a1)
{
  return sub_1DA48C0F8(a1, MEMORY[0x1E0DC4A90], &qword_1EDAE5260);
}

id sub_1DA4A8868(uint64_t a1)
{
  return sub_1DA48C0F8(a1, MEMORY[0x1E0DC4B60], &qword_1EDAE51F0);
}

id static UIFont.title3.getter()
{
  return sub_1DA4853A8(&qword_1EDAE51F8, (id *)&qword_1EDAE51F0);
}

id sub_1DA4A8898(uint64_t a1)
{
  return sub_1DA48C0F8(a1, MEMORY[0x1E0DC4B58], &qword_1EDAE51D8);
}

id sub_1DA4A88AC(uint64_t a1)
{
  return sub_1DA48C0F8(a1, MEMORY[0x1E0DC4A88], &qword_1EDAE51C8);
}

id static UIFont.body.getter()
{
  return sub_1DA4853A8(&qword_1EDAE51D0, (id *)&qword_1EDAE51C8);
}

void sub_1DA4A88DC(uint64_t a1)
{
  sub_1DA5835DC(a1, MEMORY[0x1E0DC4B58], qword_1EDAE2108);
}

id static UIFont.title2EmphShort.getter()
{
  return sub_1DA4853A8(&qword_1EDAE2118, (id *)qword_1EDAE2108);
}

void sub_1DA4A890C(uint64_t a1)
{
  sub_1DA48C140(a1, MEMORY[0x1E0DC4AA0], &qword_1EDAE5090);
}

id static UIFont.caption2Emph.getter()
{
  return sub_1DA4853A8(&qword_1EDAE5258, (id *)&qword_1EDAE5090);
}

void sub_1DA4A893C(uint64_t a1)
{
  sub_1DA48C140(a1, MEMORY[0x1E0DC4B10], &qword_1EDAE5248);
}

id static UIFont.subheadEmph.getter()
{
  return sub_1DA4853A8(&qword_1EDAE51C0, (id *)&qword_1EDAE5248);
}

void sub_1DA4A896C(uint64_t a1)
{
  sub_1DA48C140(a1, MEMORY[0x1E0DC4B60], &qword_1EDADE7E0);
}

void sub_1DA4A8980(uint64_t a1)
{
  sub_1DA48C140(a1, MEMORY[0x1E0DC4B58], &qword_1EDAE51A8);
}

id static UIFont.title2Emph.getter()
{
  return sub_1DA4853A8(qword_1EDAE51B0, (id *)&qword_1EDAE51A8);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1EDAE20F8);
}

uint64_t sub_1DA4A89C4()
{
  return sub_1DA47E32C((unint64_t *)&unk_1EDAE5068, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DA677AC0);
}

unint64_t sub_1DA4A89F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE20B0;
  if (!qword_1EDAE20B0)
  {
    v1 = sub_1DA47D774(255, (unint64_t *)&qword_1EDAE5050);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE20B0);
  }
  return result;
}

uint64_t sub_1DA4A8A48(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DA4A8A88()
{
  dword_1EDADE978 = 1148829696;
}

Swift::Void __swiftcall UIApplication.completeExtendedLaunchTest(tabName:)(Swift::String tabName)
{
  void *v1;
  void *object;
  uint64_t countAndFlagsBits;
  id v4;
  uint64_t inited;
  uint64_t v6;
  void *v7;

  object = tabName._object;
  countAndFlagsBits = tabName._countAndFlagsBits;
  v4 = objc_msgSend(v1, sel__launchTestName);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2228);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  v6 = MEMORY[0x1E0DEA968];
  sub_1DA6703F0();
  *(_QWORD *)(inited + 96) = v6;
  *(_QWORD *)(inited + 72) = countAndFlagsBits;
  *(_QWORD *)(inited + 80) = object;
  swift_bridgeObjectRetain();
  sub_1DA4950BC(inited);
  v7 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_finishedTest_extraResults_, v4, v7);

}

unint64_t sub_1DA4A8BC0()
{
  unint64_t result;

  result = qword_1EDAE2018;
  if (!qword_1EDAE2018)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDAE2018);
  }
  return result;
}

uint64_t sub_1DA4A8BFC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DA4A8C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA4A8C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DA4A8CB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDADFFF0)
  {
    sub_1DA66FB98();
    v0 = sub_1DA670294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDADFFF0);
  }
}

uint64_t sub_1DA4A8D08(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE1FB8);
    v8 = a2;
    result = MEMORY[0x1DF0A039C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA4A8D68(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1DA4A7E24(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1DA4A7F84(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DA4A8DD0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  _BYTE *v5;
  char v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = (_BYTE *)(*a4 + a3);
LABEL_5:
    v6 = *(_BYTE *)(v4 + a3);
    v7 = dbl_1DA682448[v6];
    v8 = result;
    v9 = v5;
    while (1)
    {
      v10 = (char)*(v9 - 1);
      if (v7 >= dbl_1DA682448[v10])
      {
LABEL_4:
        ++a3;
        ++v5;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      *v9 = v10;
      *--v9 = v6;
      if (a3 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA4A8E48(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE1FA8);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x1DF0A039C](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DA4A8EBC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EDAE1FA0;
  if (!qword_1EDAE1FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE1F98);
    v2[0] = MEMORY[0x1E0DEA9A0];
    v2[1] = sub_1DA4A8D08((unint64_t *)&unk_1EDAE1FC0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEE9A0]);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EDAE1FA0);
  }
  return result;
}

unint64_t sub_1DA4A8F3C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D6F0);
  v2 = (_QWORD *)sub_1DA6705D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1DA66BE60();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    result = sub_1DA48AF08((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA4A9044(uint64_t a1)
{
  return sub_1DA494A88(a1, (uint64_t *)&unk_1EDAE21B0);
}

unint64_t sub_1DA4A9050(uint64_t a1)
{
  return sub_1DA494A88(a1, (uint64_t *)&unk_1EDAE21A0);
}

unint64_t sub_1DA4A905C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2190);
  v2 = (_QWORD *)sub_1DA6705D0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1DA66BE60();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DA499108(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_BYTE *sub_1DA4A917C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result[1] & ~*result & 1;
  return result;
}

uint64_t sub_1DA4A9194(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_1DA66BE60();
  v1(v2);
  return swift_release();
}

uint64_t sub_1DA4A91C0()
{
  uint64_t v0;

  v0 = sub_1DA66F6A0();
  __swift_allocate_value_buffer(v0, qword_1EDADEDC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDADEDC8);
  return sub_1DA66F688();
}

uint64_t sub_1DA4A9220@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t static OSLogger.Subsystem.podcasts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1EDADFFC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D413D0], (uint64_t)qword_1EDADEDC8, a1);
}

uint64_t sub_1DA4A92B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_1DA66F6A0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66F6B8();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (qword_1EDADFFC8 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v3, (uint64_t)qword_1EDADEDC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  return sub_1DA66F6AC();
}

uint64_t sub_1DA4A93AC(uint64_t a1)
{
  return sub_1DA4A92B0(a1, qword_1EDADFFA8);
}

uint64_t sub_1DA4A93D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA4A93DC(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1DA4A93DC(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  sub_1DA670294();
  v6 = sub_1DA6707D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(a4 - 8) + 56))((char *)&v12 - v9, 1, 1, a4, v8);
  swift_storeEnumTagMultiPayload();
  a2(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t Promise.optionalPublisher.getter()
{
  sub_1DA670294();
  sub_1DA66E05C();
  sub_1DA66BE60();
  return sub_1DA66E068();
}

uint64_t sub_1DA4A9524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4A9520;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1F026A1F8 + dword_1F026A1F8))(a1, v4);
}

uint64_t sub_1DA4A9594(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1DA4A951C;
  return v5();
}

uint64_t sub_1DA4A95EC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = sub_1DA66C4B4();
  v0 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1DA66C4D8();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0158);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1F68);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66F4CC();
  sub_1DA66F4B4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v26)
    return v25;
  sub_1DA66C49C();
  sub_1DA66C4CC();
  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18 = v24;
  v17(v8, v24);
  sub_1DA66C4A8();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v23);
  v19 = sub_1DA66C484();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
  {
    sub_1DA47E2F0((uint64_t)v11, &qword_1EDAE0158);
    v21 = v5;
    sub_1DA66C49C();
    v16 = sub_1DA66C46C();
    v17(v21, v18);
  }
  else
  {
    v16 = sub_1DA66C478();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
  }
  return v16;
}

uint64_t BaseObjectGraph.satisfyingIfPresent<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v7 = sub_1DA670294();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - v9;
  v11 = *(_QWORD *)(a3 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, a2, v7, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1DA66BE60();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v10, a3);
    v3 = BaseObjectGraph.satisfying<A>(_:with:)(a1, (uint64_t)v15, a3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, a3);
  }
  return v3;
}

unint64_t sub_1DA4A9978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE1E98;
  if (!qword_1EDAE1E98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE1EA0);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D3FAD0], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE1E98);
  }
  return result;
}

uint64_t sub_1DA4A99C4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1DA66EB48();
  if (!v1 && v3 >> 60 == 15)
  {
    type metadata accessor for JSPackageError();
    sub_1DA519CC8();
    swift_allocError();
    v6 = v5;
    v7 = sub_1DA66EB90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1DA4A9A80()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4A9B0C()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;

  v1 = v0[14];
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[10] + 16);
  v2(v0[12], v0[4], v0[3]);
  v3 = swift_dynamicCast();
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v3)
  {
    v6 = v0[14];
    v5 = v0[15];
    v7 = v0[13];
    v8 = v0[9];
    v4(v8, 0, 1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8, v7);
    sub_1DA66EA7C();
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(v0[15], v0[13]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v9 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v10 = v0[11];
    v11 = v0[9];
    v12 = v0[7];
    v13 = v0[4];
    v14 = v0[3];
    v4(v11, 1, 1, v0[13]);
    sub_1DA47E2F0(v11, &qword_1EDAE1E70);
    v2(v10, v13, v14);
    v15 = swift_dynamicCast();
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    if (v15)
    {
      v18 = v0[7];
      v17 = v0[8];
      v20 = v0[5];
      v19 = v0[6];
      v16(v20, 0, 1, v19);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v17, v20, v19);
      v21 = (_QWORD *)swift_task_alloc();
      v0[16] = v21;
      *v21 = v0;
      v21[1] = sub_1DA4A9DA0;
      return sub_1DA66EAA0();
    }
    v23 = v0[5];
    v16(v23, 1, 1, v0[6]);
    sub_1DA47E2F0(v23, &qword_1EDAE1E80);
    sub_1DA51AB90();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v9 = (uint64_t (*)(void))v0[1];
  }
  return v9();
}

uint64_t sub_1DA4A9DA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4A9E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E80);
  v3[5] = swift_task_alloc();
  v5 = sub_1DA66EAAC();
  v3[6] = v5;
  v3[7] = *(_QWORD *)(v5 - 8);
  v3[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E70);
  v3[9] = swift_task_alloc();
  v3[10] = *(_QWORD *)(a2 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v6 = sub_1DA66EA88();
  v3[13] = v6;
  v3[14] = *(_QWORD *)(v6 - 8);
  v3[15] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1DA4A9F08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE1E68)
  {
    sub_1DA66E6BC();
    v0 = sub_1DA670294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE1E68);
  }
}

void sub_1DA4A9F5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE1DF0)
  {
    v0 = sub_1DA66E0D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE1DF0);
  }
}

void sub_1DA4A9FB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE1DB0)
  {
    v0 = sub_1DA66E0D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE1DB0);
  }
}

uint64_t sub_1DA4AA004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1DA66F6A0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66DDD4();
  __swift_allocate_value_buffer(v4, qword_1EDADFC90);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EDADFC90);
  if (qword_1EDADFFC8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDADEDC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_1DA66F694();
  sub_1DA66DDBC();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1DA4AA114()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE19C8)
  {
    sub_1DA66D564();
    v0 = sub_1DA670294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE19C8);
  }
}

void sub_1DA4AA168()
{
  qword_1EDAE5028 = 0x3E80000000000000;
}

ValueMetadata *type metadata accessor for SizeClass()
{
  return &type metadata for SizeClass;
}

void *sub_1DA4AA188()
{
  void *result;
  void *v1;

  v1 = &unk_1EA0C6AD0;
  sub_1DA4A8D68((uint64_t *)&v1);
  result = v1;
  off_1EDAE1978 = v1;
  return result;
}

uint64_t sub_1DA4AA1D8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for JSPackage(a2, a1);
  return a2;
}

uint64_t sub_1DA4AA214(uint64_t a1)
{
  return sub_1DA4A70E4(a1, qword_1EDAEAAF0);
}

uint64_t sub_1DA4AA238(uint64_t a1)
{
  return sub_1DA4A70E4(a1, qword_1EDAEAAD8);
}

uint64_t sub_1DA4AA264(uint64_t a1)
{
  return sub_1DA4A70E4(a1, qword_1EDAEAAC0);
}

uint64_t sub_1DA4AA280()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66C430();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t _s18JSPropertiesObjectCMa()
{
  return objc_opt_self();
}

uint64_t sub_1DA4AA310()
{
  return sub_1DA66F2E0();
}

uint64_t sub_1DA4AA324()
{
  return sub_1DA670168();
}

uint64_t sub_1DA4AA3B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66C4D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t _s17JSLocalizerObjectCMa()
{
  uint64_t result;

  result = qword_1EDAE1940;
  if (!qword_1EDAE1940)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s14JSClientObjectCMa()
{
  return objc_opt_self();
}

uint64_t sub_1DA4AA4DC()
{
  id v1;
  id v2;

  if ((objc_msgSend((id)objc_opt_self(), sel_isRunningOnVisionOS) & 1) != 0)
    return 0x447974696C616572;
  v1 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  if (v2 == (id)1)
    return 6578544;
  else
    return 0x656E6F6870;
}

uint64_t _s12JSUserObjectCMa()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for Glyph.Settings()
{
  return &type metadata for Glyph.Settings;
}

unint64_t sub_1DA4AA5C8()
{
  unint64_t result;

  result = qword_1EDAE1918;
  if (!qword_1EDAE1918)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for Glyph.Settings, &type metadata for Glyph.Settings);
    atomic_store(result, (unint64_t *)&qword_1EDAE1918);
  }
  return result;
}

uint64_t sub_1DA4AA60C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE1870 = v2;
  return result;
}

uint64_t static Glyph.TabBar.library.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE1880, &qword_1EDAE1870, a1);
}

uint64_t sub_1DA4AA72C(uint64_t a1)
{
  return sub_1DA5AC2F4(a1, (uint64_t)sub_1DA4B0F6C, &qword_1EDAE1860);
}

uint64_t static Glyph.TabBar.search.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE1868, &qword_1EDAE1860, a1);
}

uint64_t sub_1DA4AA75C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE1850 = v2;
  return result;
}

uint64_t static Glyph.TabBar.browse.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE1858, &qword_1EDAE1850, a1);
}

uint64_t sub_1DA4AA87C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDADED70 = v2;
  return result;
}

uint64_t static Glyph.TabBar.home.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(qword_1EDADFBC8, &qword_1EDADED70, a1);
}

ValueMetadata *type metadata accessor for Glyph.Color()
{
  return &type metadata for Glyph.Color;
}

unint64_t sub_1DA4AA9B0()
{
  unint64_t result;

  result = qword_1EDAE1848;
  if (!qword_1EDAE1848)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for Glyph.Color, &type metadata for Glyph.Color);
    atomic_store(result, (unint64_t *)&qword_1EDAE1848);
  }
  return result;
}

uint64_t Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  sub_1DA66DC60();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_1DA4AAAEC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDAE51E8 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDAE51D8;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1EDAE5228 = v3;
}

uint64_t sub_1DA4AAC48()
{
  return MEMORY[0x1E0D7DCF8];
}

uint64_t sub_1DA4AAC54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA4AAC88()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DA4AACFC()
{
  uint64_t result;

  result = sub_1DA47CDC0(-1);
  qword_1EDAE50F0 = result;
  return result;
}

uint64_t sub_1DA4AAD1C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for AssetCaches();
  if (v1 <= 0x3F)
  {
    result = sub_1DA66DDD4();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for StoreLibraryMultiplexingImageProvider()
{
  uint64_t result;

  result = qword_1EDAE16E8;
  if (!qword_1EDAE16E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for NowPlayingArtworkProviderObjCWrapper()
{
  return objc_opt_self();
}

uint64_t sub_1DA4AAE14()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AssetCaches();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ArtworkBackgroundSessionDescriptor()
{
  uint64_t result;

  result = qword_1EDAE1650;
  if (!qword_1EDAE1650)
    return swift_getSingletonMetadata();
  return result;
}

id sub_1DA4AAEC8(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a1, sel_setDiscretionary_, 1);
  objc_msgSend(a1, sel_setSharedContainerIdentifier_, *MEMORY[0x1E0D7F398]);
  objc_msgSend(a1, sel_setRequestCachePolicy_, 0);
  return objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, 0);
}

uint64_t sub_1DA4AAF64()
{
  return sub_1DA5F1B9C((unint64_t *)&unk_1EDAE4190, MEMORY[0x1E0D7DD50]);
}

uint64_t sub_1DA4AAF88()
{
  return sub_1DA5F1B9C((unint64_t *)&qword_1EDAE4180, MEMORY[0x1E0D7DD38]);
}

uint64_t sub_1DA4AAFAC()
{
  return MEMORY[0x1E0D7DD00];
}

uint64_t sub_1DA4AAFB8()
{
  return MEMORY[0x1E0D7DD20];
}

uint64_t sub_1DA4AAFC4()
{
  uint64_t result;

  result = sub_1DA47CDC0(0);
  qword_1EDAE50E8 = result;
  return result;
}

ValueMetadata *type metadata accessor for JoeColorClampBrightnessAlgorithm.Candidate()
{
  return &type metadata for JoeColorClampBrightnessAlgorithm.Candidate;
}

uint64_t sub_1DA4AAFF4()
{
  return sub_1DA47E32C(&qword_1EDADF978, (uint64_t (*)(uint64_t))type metadata accessor for PreparedArtworkRequest, (uint64_t)&protocol conformance descriptor for PreparedArtworkRequest);
}

uint64_t sub_1DA4AB020()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA4AB054()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DA66CEBC();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA4AB0E8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1DA4AB0F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66C358();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t UnownedImageIssueIdentifier.init(directory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DA66C358();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1DA4AB194@<X0>(_QWORD *a1@<X8>)
{
  sub_1DA66D54C();
  return sub_1DA4934AC(a1);
}

uint64_t sub_1DA4AB1EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for UnownedImageIssueIdentifier() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DA66D54C() - 8) + 80);
  return sub_1DA49D194(a1, v2 + v6, v2 + ((v6 + v7 + v8) & ~v8), a2);
}

uint64_t type metadata accessor for StoreReviewPromptController()
{
  return objc_opt_self();
}

uint64_t static StoreReviewPromptController.shared.getter()
{
  type metadata accessor for StoreReviewPromptController();
  return swift_initStaticObject();
}

void sub_1DA4AB2A4()
{
  sub_1DA4AB2AC();
}

void sub_1DA4AB2AC()
{
  id v0;
  id v1;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC28]), sel_initWithBag_, v0);

    objc_msgSend(v1, sel_applicationDidForeground);
    swift_release();

  }
}

uint64_t dispatch thunk of StoreReviewPromptController.prepareToTrackBecomeActive()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t sub_1DA4AB36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1DA66FF70();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v8 = (id)*MEMORY[0x1E0DC4750];
  sub_1DA66FF64();
  swift_allocObject();
  swift_weakInit();
  sub_1DA47E32C((unint64_t *)&qword_1EDADEBF8, v3, MEMORY[0x1E0CB1F20]);
  v9 = sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  *(_QWORD *)(v1 + 16) = v9;
  return swift_release();
}

uint64_t dispatch thunk of StoreReviewPromptController.modernPageControllerDidAppear(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

void sub_1DA4AB4AC(void *a1)
{
  unint64_t v1;
  unint64_t v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  char v41;
  id v42;
  id v43;
  char v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  unint64_t v52;
  unint64_t v53;

  v2 = v1;
  v4 = objc_msgSend(a1, sel_tabBarController);
  if (!v4)
    return;
  v5 = v4;
  v6 = objc_msgSend(v4, sel_viewControllers);

  if (!v6)
    return;
  v7 = sub_1DA47D774(0, &qword_1EDADE798);
  v8 = sub_1DA66FA9C();

  v9 = objc_msgSend(a1, sel_view);
  if (!v9)
  {
LABEL_82:
    __break(1u);
    return;
  }
  v10 = v9;
  v11 = (unint64_t)objc_msgSend(v9, sel_window);

  if (!v11)
    goto LABEL_31;
  v51 = objc_msgSend((id)v11, sel_windowScene);

  if (!v51)
    goto LABEL_31;
  if ((*(_BYTE *)(v2 + 24) & 1) == 0)
  {
    swift_bridgeObjectRelease();

    return;
  }
  v12 = objc_msgSend(a1, sel_splitViewController);
  if (v12)
  {
    v50 = v12;
    if ((objc_msgSend(v12, sel_isCollapsed) & 1) != 0)
    {

      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    v49 = objc_msgSend(v50, sel_detailViewController);
    if (!v49)
      goto LABEL_64;
    objc_opt_self();
    v35 = (void *)swift_dynamicCastObjCClass();
    if (!v35)
    {

      return;
    }
    v36 = objc_msgSend(v35, sel_viewControllers);

    v11 = sub_1DA66FA9C();
    if (v11 >> 62)
      goto LABEL_78;
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_59;
LABEL_79:

LABEL_31:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_10:
  v13 = MEMORY[0x1E0DEE9D8];
  v53 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)v8 >> 62)
    goto LABEL_68;
  v14 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14)
  {
LABEL_72:
    swift_bridgeObjectRelease();
    v53 = v13;
LABEL_73:
    swift_bridgeObjectRelease();
    sub_1DA65F988(v13, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1DA6608B0);
    v44 = sub_1DA5C4470((uint64_t)a1, v53);
    swift_bridgeObjectRelease();
    if ((v44 & 1) != 0)
    {
      objc_msgSend((id)objc_opt_self(), sel_requestReviewInScene_, v51);
      v45 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC28]), sel_initWithBag_, v45);

      objc_msgSend(v46, sel_didAttemptPromptReview);
      *(_BYTE *)(v2 + 24) = 0;
    }

    return;
  }
LABEL_12:
  v48 = (id)v2;
  if (v14 >= 1)
  {
    v15 = 0;
    v2 = v8 & 0xC000000000000001;
    while (1)
    {
      if (v2)
        v16 = (id)MEMORY[0x1DF09EE48](v15, v8);
      else
        v16 = *(id *)(v8 + 8 * v15 + 32);
      v17 = v16;
      objc_opt_self();
      v18 = (void *)swift_dynamicCastObjCClass();
      if (v18)
      {
        v19 = objc_msgSend(v18, sel_viewControllers);
        v20 = sub_1DA66FA9C();

        if (v20 >> 62)
        {
          swift_bridgeObjectRetain();
          v23 = sub_1DA6705A0();
          swift_bridgeObjectRelease();
          if (!v23)
          {
LABEL_29:

            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
        }
        else if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_29;
        }
        if ((v20 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1DF09EE48](0, v20);
        }
        else
        {
          if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            if (v8 < 0)
              v11 = v8;
            else
              v11 = v8 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v14 = sub_1DA6705A0();
            if (!v14)
              goto LABEL_72;
            goto LABEL_12;
          }
          v21 = *(id *)(v20 + 32);
        }

        v22 = swift_bridgeObjectRelease();
        MEMORY[0x1DF09E464](v22);
        if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
      else
      {

      }
LABEL_15:
      if (v14 == ++v15)
      {
        v50 = (id)v7;
        swift_bridgeObjectRelease();
        v52 = v13;
        swift_bridgeObjectRetain();
        v13 = 0;
        v7 = 0x1E0DC3000uLL;
        while (1)
        {
          if (v2)
            v24 = (id)MEMORY[0x1DF09EE48](v13, v8);
          else
            v24 = *(id *)(v8 + 8 * v13 + 32);
          v25 = v24;
          objc_opt_self();
          v26 = (void *)swift_dynamicCastObjCClass();
          if (v26 && (v27 = objc_msgSend(v26, sel_masterViewController)) != 0)
          {
            v28 = v27;
            objc_opt_self();
            v29 = (void *)swift_dynamicCastObjCClass();
            if (v29)
            {
              v30 = objc_msgSend(v29, sel_viewControllers);

              v31 = sub_1DA66FA9C();
              if (v31 >> 62)
              {
                swift_bridgeObjectRetain();
                v34 = sub_1DA6705A0();
                swift_bridgeObjectRelease();
                if (v34)
                {
LABEL_44:
                  if ((v31 & 0xC000000000000001) != 0)
                  {
                    MEMORY[0x1DF09EE48](0, v31);
                  }
                  else
                  {
                    if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
                      goto LABEL_67;
                    v32 = *(id *)(v31 + 32);
                  }

                  v33 = swift_bridgeObjectRelease();
                  MEMORY[0x1DF09E464](v33);
                  if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                    sub_1DA66FAC0();
                  sub_1DA66FB14();
                  sub_1DA66FAB4();
                  goto LABEL_35;
                }
              }
              else if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                goto LABEL_44;
              }

              swift_bridgeObjectRelease();
            }
            else
            {

            }
          }
          else
          {

          }
LABEL_35:
          if (v14 == ++v13)
          {
            swift_bridgeObjectRelease();
            v13 = v52;
            v2 = (unint64_t)v48;
            goto LABEL_73;
          }
        }
      }
    }
  }
  __break(1u);
LABEL_78:
  swift_bridgeObjectRetain();
  v47 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v47)
    goto LABEL_79;
LABEL_59:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v37 = (id)MEMORY[0x1DF09EE48](0, v11);
    goto LABEL_62;
  }
  if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_82;
  }
  v37 = *(id *)(v11 + 32);
LABEL_62:
  v38 = v37;
  swift_bridgeObjectRelease();
  v39 = a1;
  v40 = v38;
  v41 = sub_1DA6701A4();

  if ((v41 & 1) != 0)
  {
    objc_msgSend((id)objc_opt_self(), sel_requestReviewInScene_, v51);
    v42 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC28]), sel_initWithBag_, v42);

    objc_msgSend(v43, sel_didAttemptPromptReview);
    *(_BYTE *)(v2 + 24) = 0;
  }
LABEL_64:

}

uint64_t sub_1DA4ABCA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA4ABCDC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DA66CEBC();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA4ABD84()
{
  return swift_allocateGenericValueMetadata();
}

void sub_1DA4ABD8C()
{
  qword_1EDADF9B8 = 0x40A7700000000000;
  qword_1EDADF9C0 = (uint64_t)&unk_1EA0C6C20;
}

uint64_t type metadata accessor for ExtendedLaunchController()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ExtendedLaunchController.HandleId()
{
  return &type metadata for ExtendedLaunchController.HandleId;
}

uint64_t sub_1DA4ABE48(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return 0x4568636E75616C2ELL;
  sub_1DA670444();
  swift_bridgeObjectRelease();
  sub_1DA670684();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  return 0xD000000000000014;
}

id sub_1DA4ABF0C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExtendedLaunchController()), sel_init);
  qword_1EDAE14A0 = (uint64_t)result;
  return result;
}

id static ExtendedLaunchController.shared.getter()
{
  if (qword_1EDAE14B0 != -1)
    swift_once();
  return (id)qword_1EDAE14A0;
}

uint64_t sub_1DA4ABF78()
{
  uint64_t v0;

  v0 = sub_1DA66DEF4();
  __swift_allocate_value_buffer(v0, qword_1EDAE1478);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE1478);
  sub_1DA4A85EC();
  sub_1DA670258();
  return sub_1DA66DEE8();
}

void sub_1DA4ABFEC(void *a1)
{
  uint64_t v1;

  sub_1DA4AC000(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

void sub_1DA4AC000(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  uint64_t v26[4];

  v26[3] = *MEMORY[0x1E0C80C00];
  v11 = a4 + 16;
  if (qword_1EDAE1498 != -1)
    swift_once();
  v12 = sub_1DA66DEF4();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EDAE1478);
  swift_bridgeObjectRetain();
  v13 = a1;
  swift_bridgeObjectRetain();
  v14 = a1;
  v15 = sub_1DA66DEDC();
  v16 = sub_1DA66FDC0();
  if (os_log_type_enabled(v15, v16))
  {
    v24 = v11;
    v25 = a6;
    v17 = swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v26[0] = v19;
    *(_DWORD *)v17 = 136315394;
    swift_bridgeObjectRetain();
    sub_1DA49AD00(a2, (unint64_t)a3, v26);
    sub_1DA6702C4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2112;
    if (a1)
    {
      v20 = a1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_1DA6702C4();
    }
    else
    {
      sub_1DA6702C4();
      v21 = 0;
    }
    *v18 = v21;

    _os_log_impl(&dword_1DA478000, v15, v16, "Ending loading for %s with %@", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v19, -1, -1);
    MEMORY[0x1DF0A0474](v17, -1, -1);

    a6 = v25;
    v11 = v24;
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  swift_beginAccess();
  v22 = MEMORY[0x1DF0A054C](v11);
  if (v22)
  {
    v23 = (void *)v22;
    sub_1DA4AC57C(a5, a6 & 1, a2, a3, a1);

  }
}

uint64_t dispatch thunk of ExtendedLaunchController.getLoadingHandle(name:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

void sub_1DA4AC324(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (qword_1EDAE1498 != -1)
      swift_once();
    v8 = sub_1DA66DEF4();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EDAE1478);
    swift_bridgeObjectRetain_n();
    v9 = sub_1DA66DEDC();
    v10 = sub_1DA66FDC0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v14 = v12;
      *(_DWORD *)v11 = 136315138;
      swift_bridgeObjectRetain();
      sub_1DA49AD00(a2, a3, &v14);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA478000, v9, v10, "%s requested a loading handle after launch ended.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v12, -1, -1);
      MEMORY[0x1DF0A0474](v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_9;
  }
  if (*(_QWORD *)a1 != -1)
  {
    ++*(_QWORD *)a1;
    *(_BYTE *)(a1 + 8) = 0;
LABEL_9:
    v13 = *(_BYTE *)(a1 + 8);
    *(_QWORD *)a4 = *(_QWORD *)a1;
    *(_BYTE *)(a4 + 8) = v13;
    return;
  }
  __break(1u);
}

uint64_t destroy for TranscriptDebugView.ClearCacheButton()
{
  return swift_release();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptDebugView.ClearCacheButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1DA66BE60();
  return a1;
}

uint64_t ExtendedLaunchController.LoadingHandle.finishedLoading.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DA66BE60();
  return v1;
}

void sub_1DA4AC57C(uint64_t a1, char a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v5;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  void *v32;
  Swift::String v33;
  void *v34;
  NSObject *oslog;
  uint64_t v36;

  v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC10PodcastsUI24ExtendedLaunchController_lock);
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 28));
  if ((*(_BYTE *)(v11 + 24) & 1) != 0 || (a2 & 1) != 0 || *(_QWORD *)(v11 + 16) != a1)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 28));
    if (qword_1EDAE1498 != -1)
      swift_once();
    v23 = sub_1DA66DEF4();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EDAE1478);
    oslog = sub_1DA66DEDC();
    v24 = sub_1DA66FDC0();
    if (os_log_type_enabled(oslog, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1DA478000, oslog, v24, "Something else was responsible for ending extended launch. Skipping calling instrumentation methods.", v25, 2u);
      MEMORY[0x1DF0A0474](v25, -1, -1);
    }

  }
  else
  {
    *(_QWORD *)(v11 + 16) = 0;
    *(_BYTE *)(v11 + 24) = 1;
    os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 28));
    v12 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    if (a5)
    {
      v13 = a5;
      if (qword_1EDAE1498 != -1)
        swift_once();
      v14 = sub_1DA66DEF4();
      __swift_project_value_buffer(v14, (uint64_t)qword_1EDAE1478);
      v15 = a5;
      swift_bridgeObjectRetain();
      v16 = a5;
      swift_bridgeObjectRetain();
      v17 = sub_1DA66DEDC();
      v18 = sub_1DA66FDC0();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        v20 = swift_slowAlloc();
        v36 = v20;
        *(_DWORD *)v19 = 136446466;
        swift_bridgeObjectRetain();
        sub_1DA49AD00(a3, (unint64_t)a4, &v36);
        sub_1DA6702C4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 12) = 2082;
        swift_getErrorValue();
        v21 = sub_1DA670750();
        sub_1DA49AD00(v21, v22, &v36);
        sub_1DA6702C4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1DA478000, v17, v18, "%{public}s failed launch test with error: %{public}s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v20, -1, -1);
        MEMORY[0x1DF0A0474](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      swift_getErrorValue();
      sub_1DA670750();
      v31 = objc_msgSend(v12, sel__launchTestName);
      v32 = (void *)sub_1DA66F88C();
      objc_msgSend(v12, sel_failedTest_withFailure_, v31, v32);
      swift_bridgeObjectRelease();

    }
    else
    {
      if (qword_1EDAE1498 != -1)
        swift_once();
      v26 = sub_1DA66DEF4();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EDAE1478);
      swift_bridgeObjectRetain_n();
      v27 = sub_1DA66DEDC();
      v28 = sub_1DA66FDC0();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v30 = swift_slowAlloc();
        v36 = v30;
        *(_DWORD *)v29 = 136446210;
        swift_bridgeObjectRetain();
        sub_1DA49AD00(a3, (unint64_t)a4, &v36);
        sub_1DA6702C4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DA478000, v27, v28, "%{public}s completed the launch test.", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v30, -1, -1);
        MEMORY[0x1DF0A0474](v29, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v33._countAndFlagsBits = a3;
      v33._object = a4;
      UIApplication.completeExtendedLaunchTest(tabName:)(v33);
    }
    sub_1DA66DB7C();
    v34 = (void *)sub_1DA66DB70();
    sub_1DA66DB64();

  }
}

uint64_t ExplicitContentPresenter.init()()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 20) = 0;
  *(_BYTE *)(v1 + 16) = 2;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_1DA4ACB40(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD v12[2];

  v3 = sub_1DA66CEBC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = *v1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v6);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  *(_QWORD *)(v9 + ((v5 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B948);
  swift_allocObject();
  v10 = v7;
  v12[1] = sub_1DA66E074();
  sub_1DA66CDA8();
  sub_1DA4841D4(&qword_1F026B950, &qword_1F026B948, MEMORY[0x1E0C96108]);
  sub_1DA66E200();
  return swift_release();
}

uint64_t sub_1DA4ACCAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA4ACCBC()
{
  return sub_1DA47E32C(&qword_1EDADF998, (uint64_t (*)(uint64_t))type metadata accessor for PreparedArtworkRequest, (uint64_t)&protocol conformance descriptor for PreparedArtworkRequest);
}

uint64_t sub_1DA4ACCE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66CEBC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DA4ACD50()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66EE54();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for LibraryImageProvider(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for AssetCaches();
  v6 = a1 + *(int *)(v5 + 20);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + *(int *)(v5 + 24);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[5];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_0(a1 + a2[6]);

  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LibraryImageProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for AssetCaches();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[5];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[6];
  v21 = *(_OWORD *)(a2 + v20 + 24);
  *(_OWORD *)(a1 + v20 + 24) = v21;
  (**(void (***)(void))(v21 - 8))();
  v22 = a3[7];
  v23 = a3[8];
  v24 = *(void **)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v24;
  v25 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v25;
  v26 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v27 = v24;
  v28 = v25;
  sub_1DA66BE60();
  sub_1DA66BE60();
  return a1;
}

void sub_1DA4AD038()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for AssetCaches();
  if (v0 <= 0x3F)
  {
    sub_1DA55B540();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_1DA4AD0E4()
{
  unint64_t result;

  result = qword_1F026B960;
  if (!qword_1F026B960)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ImageStoreAssetError, &type metadata for ImageStoreAssetError);
    atomic_store(result, (unint64_t *)&qword_1F026B960);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExtendedLaunchStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DA4AD174 + 4 * byte_1DA686005[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DA4AD1A8 + 4 * asc_1DA686000[v4]))();
}

uint64_t sub_1DA4AD1A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA4AD1B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA4AD1B8);
  return result;
}

uint64_t sub_1DA4AD1C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA4AD1CCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DA4AD1D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA4AD1D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s9PlacementOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t ExtendedLaunchStatus.error.getter()
{
  unsigned __int8 *v0;
  unsigned int v1;
  uint64_t result;

  v1 = *v0;
  type metadata accessor for ExtendedLaunchStatus.ExtendedLaunchError();
  result = swift_allocObject();
  if (v1 > 1)
  {
    *(_BYTE *)(result + 16) = v1;
  }
  else
  {
    swift_deallocPartialClassInstance();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ExtendedLaunchStatus.ExtendedLaunchError()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ObjCArtworkProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DA4AD324(char a1)
{
  void *v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc();

  v6 = *(_QWORD *)(v5 + 24);
  if (v1)
  {
    v7 = (void *)sub_1DA66C1F0();

    (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 24), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v5 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1DA4AD3D0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1DA4A9520;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1F026B028 + dword_1F026B028))(v2, v3);
}

uint64_t sub_1DA4AD434(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1DA4AD324;
  return sub_1DA4AD5B0();
}

uint64_t sub_1DA4AD5B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[10] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4808);
  v1[11] = v2;
  v1[12] = *(_QWORD *)(v2 - 8);
  v1[13] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4830);
  v1[14] = v3;
  v1[15] = *(_QWORD *)(v3 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  v1[18] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4700);
  v1[19] = v4;
  v1[20] = *(_QWORD *)(v4 - 8);
  v1[21] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4628);
  v1[22] = v5;
  v1[23] = *(_QWORD *)(v5 - 8);
  v1[24] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE45B0);
  v1[25] = v6;
  v1[26] = *(_QWORD *)(v6 - 8);
  v1[27] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4398);
  v1[28] = v7;
  v1[29] = *(_QWORD *)(v7 - 8);
  v1[30] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4600);
  v1[31] = v8;
  v1[32] = *(_QWORD *)(v8 - 8);
  v1[33] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4728);
  v1[34] = v9;
  v1[35] = *(_QWORD *)(v9 - 8);
  v1[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA4AD77C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t type metadata accessor for UIPurchaseDelegate()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of PlaybackController.$preferredJumpInterval.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t sub_1DA4AD838()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__preferredJumpInterval, (uint64_t *)&unk_1EDAE1DC0);
}

uint64_t storeEnumTagSinglePayload for PlaybackController.PreferredJumpInterval(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void sub_1DA4AD874()
{
  unint64_t v0;

  sub_1DA4A9FB0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

id sub_1DA4AD908(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*a1)
    v2 = 2;
  else
    v2 = 0;
  return objc_msgSend(*(id *)(v1 + 16), sel_setDiscoveryMode_, v2);
}

uint64_t sub_1DA4AD92C(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA4AD934(a1, *(void **)(v1 + 16));
}

uint64_t sub_1DA4AD934(uint64_t a1, void *a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v10[6];

  ObjectType = swift_getObjectType();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = ObjectType;
  v5 = (void *)objc_opt_self();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1DA4ADD90;
  *(_QWORD *)(v6 + 24) = v4;
  v10[4] = sub_1DA4ADFBC;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1DA4A8628;
  v10[3] = &block_descriptor_15;
  v7 = _Block_copy(v10);
  v8 = a2;
  sub_1DA66BE60();
  swift_release();
  objc_msgSend(v5, sel_getActiveRouteWithTimeout_completion_, v7, 1.0);
  _Block_release(v7);
  return swift_release();
}

uint64_t _s21PlayerPathCoordinatorC14PlayerPathPairVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

void sub_1DA4ADA98()
{
  uint64_t v0;

  sub_1DA4ADAA4(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1DA4ADAA4(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  unsigned __int8 v7;
  id v8;
  id v9;
  char v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();

  v4 = objc_msgSend(v20, sel_route);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();

  v5 = objc_msgSend(v20, sel_route);
  if (v5 && (v6 = objc_msgSend(v5, sel_connection), v5, v6))
  {
    v7 = objc_msgSend(v6, sel_isInvalidated);

    if (!v4)
      goto LABEL_7;
  }
  else
  {
    v7 = 0;
    if (!v4)
      goto LABEL_7;
  }
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE2148);
  v8 = a2;
  v9 = v4;
  v10 = sub_1DA6701A4();

  if (!(v7 & 1 | ((v10 & 1) == 0)))
  {

    return;
  }
LABEL_7:
  v11 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_pathWithRoute_bundleID_playerID_, v11, v12, v13);

  if ((objc_msgSend(v11, sel_isDeviceRoute) & 1) != 0)
    v16 = v15;
  else
    v17 = objc_msgSend(v14, sel_pathWithRoute_bundleID_playerID_, v11, 0, 0);
  swift_getKeyPath();
  swift_getKeyPath();
  v18 = a1;
  sub_1DA66E0C8();

}

uint64_t sub_1DA4ADD90(void *a1)
{
  uint64_t v1;

  return sub_1DA4ADD98(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DA4ADD98(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v6 = sub_1DA66E9C8();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DA66EA04();
  v10 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v13 = (void *)sub_1DA66FEC8();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a1;
  v14[4] = a3;
  aBlock[4] = sub_1DA4ADA98;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA4A9194;
  aBlock[3] = &block_descriptor_17;
  v15 = _Block_copy(aBlock);
  v16 = a2;
  v17 = a1;
  swift_release();
  sub_1DA66E9EC();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DA47E32C((unint64_t *)&qword_1EDADE6D0, v7, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA4841D4((unint64_t *)&qword_1EDADE6F0, (uint64_t *)&unk_1EDADE6E0, MEMORY[0x1E0DEAF38]);
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

void sub_1DA4ADFBC(void *a1)
{
  uint64_t v1;

  sub_1DA4ADFC4(a1, *(void (**)(id))(v1 + 16));
}

void sub_1DA4ADFC4(void *a1, void (*a2)(id))
{
  id v4;
  id v5;

  if (a1)
    v5 = a1;
  else
    v5 = objc_msgSend((id)objc_opt_self(), sel_systemRoute);
  v4 = a1;
  a2(v5);

}

uint64_t dispatch thunk of PlaybackController.isPlayingPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of PlaybackController.responsePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t _s17PlayerInvalidatorCMa()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of PlaybackController.$durationSnapshot.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t sub_1DA4AE07C()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__durationSnapshot, &qword_1EDAE1E30);
}

uint64_t dispatch thunk of PlaybackController.$nowPlayingItem.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t sub_1DA4AE09C()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__nowPlayingItem, &qword_1EDAE1E00);
}

unint64_t sub_1DA4AE0B4()
{
  unint64_t result;

  result = qword_1EDAE0B48;
  if (!qword_1EDAE0B48)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA68126C, &_s13ConfigurationV12PlayerOptionON);
    atomic_store(result, (unint64_t *)&qword_1EDAE0B48);
  }
  return result;
}

uint64_t sub_1DA4AE0F8()
{
  uint64_t result;
  char v1;
  char v2;
  char v3;
  uint64_t v4;

  v4 = MEMORY[0x1E0DEE9E8];
  sub_1DA48C270(&v3, 2);
  sub_1DA48C270(&v2, 1);
  result = sub_1DA48C270(&v1, 0);
  *(_QWORD *)&xmmword_1EDAEAB18 = 0x7374736163646F50;
  *((_QWORD *)&xmmword_1EDAEAB18 + 1) = 0xE800000000000000;
  qword_1EDAEAB28 = 0xD000000000000012;
  unk_1EDAEAB30 = 0x80000001DA68F000;
  qword_1EDAEAB38 = v4;
  return result;
}

uint64_t dispatch thunk of PlaybackController.$currentRoute.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t sub_1DA4AE1A4()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__currentRoute, (uint64_t *)&unk_1EDAE1E40);
}

uint64_t sub_1DA4AE1B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66ED28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DA4AE240()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for InteractionContext.Page(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractionContext.View()
{
  return &type metadata for InteractionContext.View;
}

char *assignWithTake for InteractionContext.Page(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_1DA492FFC((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED88) + 64);
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = sub_1DA66D564();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19C0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      goto LABEL_12;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1DA66D564();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19C0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1DA4AE488()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD v2[10];

  v2[4] = "\t";
  sub_1DA4AA114();
  if (v1 <= 0x3F)
  {
    v2[5] = *(_QWORD *)(v0 - 8) + 64;
    v2[6] = &unk_1DA686DF8;
    swift_getTupleTypeLayout3();
    v2[7] = v2;
    v2[8] = &unk_1DA686DC0;
    v2[9] = &unk_1DA686E28;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t _s4DataOwca(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  __int128 v9;
  id *v10;
  int v11;
  id v12;
  id v13;
  id *v14;
  int v15;
  id v16;
  id v17;
  id *v18;
  int v19;
  id v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;

  if (a1 != a2)
  {
    sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v4 = *(unsigned __int8 *)(a2 + 32);
      swift_bridgeObjectRetain();
      if (v4 == 255)
      {
        v9 = *(_OWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = v9;
      }
      else
      {
        v5 = *(_QWORD *)(a2 + 16);
        v6 = *(_QWORD *)(a2 + 24);
        sub_1DA481390(v5, v6, v4);
        *(_QWORD *)(a1 + 16) = v5;
        *(_QWORD *)(a1 + 24) = v6;
        *(_BYTE *)(a1 + 32) = v4;
      }
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v10 = (id *)(a2 + 56);
      v11 = *(unsigned __int8 *)(a2 + 64);
      if (v11 == 255)
      {
        v13 = *v10;
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        *(_QWORD *)(a1 + 56) = v13;
      }
      else
      {
        v12 = *v10;
        sub_1DA4E762C(*v10, *(_BYTE *)(a2 + 64));
        *(_QWORD *)(a1 + 56) = v12;
        *(_BYTE *)(a1 + 64) = v11;
      }
      v14 = (id *)(a2 + 72);
      v15 = *(unsigned __int8 *)(a2 + 80);
      if (v15 == 255)
      {
        v17 = *v14;
        *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
        *(_QWORD *)(a1 + 72) = v17;
      }
      else
      {
        v16 = *v14;
        sub_1DA4E762C(*v14, *(_BYTE *)(a2 + 80));
        *(_QWORD *)(a1 + 72) = v16;
        *(_BYTE *)(a1 + 80) = v15;
      }
      v18 = (id *)(a2 + 88);
      v19 = *(unsigned __int8 *)(a2 + 96);
      if (v19 == 255)
      {
        v21 = *v18;
        *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
        *(_QWORD *)(a1 + 88) = v21;
      }
      else
      {
        v20 = *v18;
        sub_1DA4E762C(*v18, *(_BYTE *)(a2 + 96));
        *(_QWORD *)(a1 + 88) = v20;
        *(_BYTE *)(a1 + 96) = v19;
      }
      v22 = (id *)(a2 + 104);
      v23 = *(unsigned __int8 *)(a2 + 112);
      if (v23 == 255)
      {
        v25 = *v22;
        *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
        *(_QWORD *)(a1 + 104) = v25;
      }
      else
      {
        v24 = *v22;
        sub_1DA4E762C(*v22, *(_BYTE *)(a2 + 112));
        *(_QWORD *)(a1 + 104) = v24;
        *(_BYTE *)(a1 + 112) = v23;
      }
      v26 = (id *)(a2 + 120);
      v27 = *(unsigned __int8 *)(a2 + 128);
      if (v27 == 255)
      {
        v29 = *v26;
        *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
        *(_QWORD *)(a1 + 120) = v29;
      }
      else
      {
        v28 = *v26;
        sub_1DA4E762C(*v26, *(_BYTE *)(a2 + 128));
        *(_QWORD *)(a1 + 120) = v28;
        *(_BYTE *)(a1 + 128) = v27;
      }
      *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
      v30 = (int *)sub_1DA66CA0C();
      v31 = v30[11];
      v32 = a1 + v31;
      v33 = a2 + v31;
      v34 = sub_1DA66C928();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      v35 = v30[12];
      v36 = (_QWORD *)(a1 + v35);
      v37 = (_QWORD *)(a2 + v35);
      *v36 = *v37;
      v36[1] = v37[1];
      *(_BYTE *)(a1 + v30[13]) = *(_BYTE *)(a2 + v30[13]);
      *(_BYTE *)(a1 + v30[14]) = *(_BYTE *)(a2 + v30[14]);
      *(_BYTE *)(a1 + v30[15]) = *(_BYTE *)(a2 + v30[15]);
      v38 = v30[16];
      v39 = (_QWORD *)(a1 + v38);
      v40 = (_QWORD *)(a2 + v38);
      *v39 = *v40;
      v39[1] = v40[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v7 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v8 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DA4AE81C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1DA4AE88C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

unint64_t sub_1DA4AE848()
{
  unint64_t result;

  result = qword_1EDAE09B0;
  if (!qword_1EDAE09B0)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67C58C, &type metadata for JSPackageManifest);
    atomic_store(result, (unint64_t *)&qword_1EDAE09B0);
  }
  return result;
}

uint64_t sub_1DA4AE88C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE21D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA4AECA8();
  sub_1DA6707EC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    v7 = sub_1DA670618();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1FA8);
    v9[15] = 1;
    sub_1DA4A8E48(&qword_1EDAE1FB0, (uint64_t (*)(void))sub_1DA4A8EBC, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    swift_bridgeObjectRetain();
    sub_1DA670630();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t storeEnumTagSinglePayload for JSPackageManifest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA4AEAC0 + 4 * byte_1DA67C535[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA4AEAF4 + 4 * asc_1DA67C530[v4]))();
}

uint64_t sub_1DA4AEAF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA4AEAFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA4AEB04);
  return result;
}

uint64_t sub_1DA4AEB10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA4AEB18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA4AEB1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA4AEB24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for NowPlayingArtworkProvider.ArtworkError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1DA4AEBC0()
{
  _BYTE *v0;

  if (*v0)
    return 0x617A696C61636F6CLL;
  else
    return 0x6E6F6973726576;
}

ValueMetadata *type metadata accessor for JSPackageManifest.CodingKeys()
{
  return &type metadata for JSPackageManifest.CodingKeys;
}

unint64_t sub_1DA4AEC20()
{
  unint64_t result;

  result = qword_1EDAE09A8;
  if (!qword_1EDAE09A8)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67C60C, &type metadata for JSPackageManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDAE09A8);
  }
  return result;
}

unint64_t sub_1DA4AEC64()
{
  unint64_t result;

  result = qword_1EDAE09A0;
  if (!qword_1EDAE09A0)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67C634, &type metadata for JSPackageManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDAE09A0);
  }
  return result;
}

unint64_t sub_1DA4AECA8()
{
  unint64_t result;

  result = qword_1EDAE0998;
  if (!qword_1EDAE0998)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67C6C4, &type metadata for JSPackageManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDAE0998);
  }
  return result;
}

uint64_t type metadata accessor for JSLocalizerObject()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ExplicitTreatment()
{
  return &type metadata for ExplicitTreatment;
}

void sub_1DA4AED1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66F4FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_unknownObjectRelease();

}

uint64_t sub_1DA4AED6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_1DA66F4FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_unknownObjectRetain();
  v9 = v8;
  return a1;
}

uint64_t sub_1DA4AEDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSPackageFetcher();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA4AEE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSPackageFetcher();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA4AEE64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66F4FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for JSPackageFetcher()
{
  uint64_t result;

  result = qword_1EDAE08D8;
  if (!qword_1EDAE08D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA4AEF20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1DA66F6A0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66F6B8();
  __swift_allocate_value_buffer(v4, qword_1EDAE08B0);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EDAE08B0);
  if (qword_1EDADFFC8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDADEDC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_1DA66F6AC();
}

uint64_t sub_1DA4AF020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_1EDAE08D0 != -1)
    swift_once();
  v16 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 272);
  v18 = *(_QWORD *)(v0 + 288);
  v13 = *(_QWORD *)(v0 + 256);
  v14 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 232);
  v12 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 168);
  v20 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 128);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EDAE08B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v7, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
  sub_1DA66EC8C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
  sub_1DA66EC68();
  sub_1DA66EC5C();
  *(_QWORD *)(v0 + 120) = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 96));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(boxed_opaque_existential_1, v1, v2);
  sub_1DA66EC44();
  sub_1DA47E2F0(v0 + 96, &qword_1EDAE5130);
  sub_1DA66EC5C();
  sub_1DA66EC80();
  sub_1DA66F538();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  sub_1DA66EAD0();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  v9 = v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE05C8) + 36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v9, 0, 1, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v15, v11, v20);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4AF300()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v2 = (_QWORD *)swift_task_alloc();
  v0[39] = v2;
  *v2 = v0;
  v2[1] = sub_1DA4AF374;
  return sub_1DA4A9E04(v0[29], v1);
}

uint64_t sub_1DA4AF374()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4AF3D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4AF43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  v5 = sub_1DA66EA70();
  v4[20] = v5;
  v4[21] = *(_QWORD *)(v5 - 8);
  v4[22] = swift_task_alloc();
  sub_1DA66EC74();
  v4[23] = swift_task_alloc();
  v6 = sub_1DA66F6B8();
  v4[24] = v6;
  v4[25] = *(_QWORD *)(v6 - 8);
  v4[26] = swift_task_alloc();
  v7 = sub_1DA66C358();
  v4[27] = v7;
  v4[28] = *(_QWORD *)(v7 - 8);
  v4[29] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E88);
  v4[30] = v8;
  v4[31] = *(_QWORD *)(v8 - 8);
  v4[32] = swift_task_alloc();
  sub_1DA66EB00();
  v4[33] = swift_task_alloc();
  v9 = sub_1DA66EAE8();
  v4[34] = v9;
  v4[35] = *(_QWORD *)(v9 - 8);
  v4[36] = swift_task_alloc();
  return swift_task_switch();
}

void *sub_1DA4AF584()
{
  void *result;

  result = (void *)sub_1DA4A905C((uint64_t)&unk_1EA0C6B98);
  off_1EDAE08A0 = result;
  return result;
}

uint64_t sub_1DA4AF5A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *boxed_opaque_existential_1;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v41 = a1;
  v2 = type metadata accessor for JSPackageFetcher();
  v35 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v35 + 64);
  MEMORY[0x1E0C80A78](v2);
  v38 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66EB84();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v39 = (char *)&v34 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66C358();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v34 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v36 = (char *)&v34 - v15;
  v37 = v1;
  swift_getObjectType();
  if (qword_1EDAE04D8 != -1)
    swift_once();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1EA0);
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EDAEAAA8);
  sub_1DA66ED34();
  v18 = v45;
  if (!v45)
  {
    type metadata accessor for JSPackageError();
    sub_1DA47E32C((unint64_t *)&qword_1EDAE0428, (uint64_t (*)(uint64_t))type metadata accessor for JSPackageError, (uint64_t)&unk_1DA6830A0);
    swift_allocError();
    v22 = v21;
    v21[3] = v16;
    v21[4] = sub_1DA4A9978();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_1, v17, v16);
    goto LABEL_7;
  }
  v19 = v44;
  sub_1DA66C334();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DA47E2F0((uint64_t)v10, &qword_1EDAE5020);
    type metadata accessor for JSPackageError();
    sub_1DA47E32C((unint64_t *)&qword_1EDAE0428, (uint64_t (*)(uint64_t))type metadata accessor for JSPackageError, (uint64_t)&unk_1DA6830A0);
    swift_allocError();
    *v20 = v19;
    v20[1] = v18;
LABEL_7:
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  v25 = v36;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v36, v10, v11);
  v27 = v42;
  v26 = v43;
  v28 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v39, *MEMORY[0x1E0D3F310], v43);
  v29 = v38;
  sub_1DA4AEDDC(v37, v38);
  v30 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v37 = swift_allocObject();
  sub_1DA4AEE20(v29, v37 + v30);
  v31 = sub_1DA66EA88();
  v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3F188];
  v33 = v41;
  v41[3] = v31;
  v33[4] = sub_1DA47E32C(&qword_1F0269F88, v32, MEMORY[0x1E0D3F180]);
  __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v34, v25, v11);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v40, v28, v26);
  sub_1DA66EA94();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v25, v11);
}

uint64_t sub_1DA4AF9F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  char *v40;
  id v41;
  void *v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t *v51;
  _QWORD *v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;

  v62 = a1;
  v1 = type metadata accessor for JSPackageFetcher();
  v55 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v56 = v2;
  v58 = (uint64_t)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66EB84();
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  MEMORY[0x1E0C80A78](v3);
  v61 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v60 = (char *)&v54 - v6;
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v59 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v66 = (char *)&v54 - v11;
  v65 = sub_1DA66C280();
  v12 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v54 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v54 - v22;
  MEMORY[0x1E0C80A78](v24);
  v69 = (uint64_t)&v54 - v25;
  if (qword_1EDAE52F8 != -1)
    swift_once();
  v26 = objc_msgSend((id)qword_1EDAE5390, sel_resourceURL);
  if (v26)
  {
    v27 = v26;
    sub_1DA66C304();

    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v28(v20, 0, 1, v7);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v28(v20, 1, 1, v7);
  }
  sub_1DA49B0AC((uint64_t)v20, (uint64_t)v23);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v29(v23, 1, v7) == 1)
  {
    sub_1DA47E2F0((uint64_t)v23, &qword_1EDAE5020);
    v30 = 1;
    v31 = v69;
  }
  else
  {
    v67 = 0xD000000000000014;
    v68 = 0x80000001DA68C270;
    v32 = *MEMORY[0x1E0CAFD78];
    v54 = v28;
    v33 = v14;
    v34 = v7;
    v35 = v12;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
    v37 = v65;
    v36(v33, v32, v65);
    sub_1DA498918();
    v31 = v69;
    sub_1DA66C34C();
    v38 = *(void (**)(char *, uint64_t))(v35 + 8);
    v7 = v34;
    v39 = v33;
    v28 = v54;
    v38(v39, v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v23, v34);
    v30 = 0;
  }
  v28((char *)v31, v30, 1, v7);
  sub_1DA4B2F78(v31, (uint64_t)v17);
  if (v29(v17, 1, v7) == 1)
  {
    sub_1DA47E2F0((uint64_t)v17, &qword_1EDAE5020);
  }
  else
  {
    v40 = v66;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v66, v17, v7);
    v41 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_1DA66C328();
    v42 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v43 = objc_msgSend(v41, sel_fileExistsAtPath_, v42);

    if ((v43 & 1) != 0)
    {
      v45 = v63;
      v44 = v64;
      v46 = v60;
      (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v60, *MEMORY[0x1E0D3F310], v64);
      v47 = v58;
      sub_1DA4AEDDC(v57, v58);
      v48 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      v65 = swift_allocObject();
      sub_1DA4AEE20(v47, v65 + v48);
      v49 = sub_1DA66EA88();
      v50 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3F188];
      v51 = v62;
      v62[3] = v49;
      v51[4] = sub_1DA47E32C(&qword_1F0269F88, v50, MEMORY[0x1E0D3F180]);
      __swift_allocate_boxed_opaque_existential_1(v51);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v59, v40, v7);
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v61, v46, v44);
      sub_1DA66EA94();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v40, v7);
      return sub_1DA47E2F0(v69, &qword_1EDAE5020);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v40, v7);
  }
  type metadata accessor for JSPackageError();
  sub_1DA47E32C((unint64_t *)&qword_1EDAE0428, (uint64_t (*)(uint64_t))type metadata accessor for JSPackageError, (uint64_t)&unk_1DA6830A0);
  swift_allocError();
  *v53 = 0xD000000000000014;
  v53[1] = 0x80000001DA68C270;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return sub_1DA47E2F0(v31, &qword_1EDAE5020);
}

uint64_t type metadata accessor for JSDurationObject()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DirectionalRange()
{
  return &type metadata for DirectionalRange;
}

id sub_1DA4B007C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AssetDownloaders()), sel_init);
  qword_1EDAE0880 = (uint64_t)result;
  return result;
}

uint64_t sub_1DA4B00AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3 + *a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
}

uint64_t type metadata accessor for UserPreferences()
{
  return objc_opt_self();
}

double sub_1DA4B010C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  double result;

  v4 = *(void **)(v2 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA66EE78();
  v5 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_objectForKey_, v5);

  if (v6)
  {
    sub_1DA670360();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

void sub_1DA4B01C0(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  type metadata accessor for PageRenderState.PrimaryDataState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v3 = sub_1DA66ED28();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (EnumCaseMultiPayload == 1)
  {

  }
}

_QWORD *sub_1DA4B0234(_QWORD *a1, id *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  v6 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v10 = sub_1DA66ED28();
    (*(void (**)(_QWORD *, id *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v8 = *a2;
    v9 = *a2;
    *a1 = v8;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  return a1;
}

uint64_t sub_1DA4B031C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PageRenderState.PrimaryDataState(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for PageRenderState(uint64_t a1)
{
  return sub_1DA48EED8(a1, qword_1EDAE0748);
}

uint64_t sub_1DA4B03A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66ED28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for PageRenderState.PrimaryDataState(uint64_t a1)
{
  return sub_1DA48EED8(a1, (uint64_t *)&unk_1EDAE06A0);
}

uint64_t sub_1DA4B042C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PageRenderActivity();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DA4B0498(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_1DA66C358();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return result;
}

void sub_1DA4B0524()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1DA4B2FC0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for JSPackageSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JSPackageSource);
}

uint64_t sub_1DA4B05B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA66EA64();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1DA4B05EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66EA64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DA4B0630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSPackageLoader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA4B0674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSPackageLoader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA4B06B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66EA64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for JSPackageLoader()
{
  uint64_t result;

  result = qword_1EDAE04E0;
  if (!qword_1EDAE04E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA4B075C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = v0[43];
  v2 = v0[41];
  sub_1DA4B0630(v0[37], v1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  v0[46] = v4;
  sub_1DA4B0674(v1, v4 + v3);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F0269F40 + dword_1F0269F40);
  v5 = (_QWORD *)swift_task_alloc();
  v0[47] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_1DA4B081C;
  return v7(v0[45], (uint64_t)&unk_1F0269F38, v4);
}

uint64_t sub_1DA4B081C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4B0888()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1DA66EBA8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_1DA4B08F0;
  return sub_1DA66EA58();
}

uint64_t sub_1DA4B08F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1 + 16;
  v3 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0(v2);
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1DA4B0968(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for JSPackageLoader() - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1DA4AD77C;
  v8[8] = a2;
  v8[9] = v7;
  v8[7] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4B09F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[36] = a2;
  v3[37] = v2;
  v3[35] = a1;
  v4 = sub_1DA66EA70();
  v3[38] = v4;
  v3[39] = *(_QWORD *)(v4 - 8);
  v3[40] = swift_task_alloc();
  v5 = *(_QWORD *)(type metadata accessor for JSPackageLoader() - 8);
  v3[41] = v5;
  v3[42] = *(_QWORD *)(v5 + 64);
  v3[43] = swift_task_alloc();
  v3[44] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE05C8);
  v3[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B0AA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66F8F8();
  MEMORY[0x1E0C80A78](v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EDAE1958 != -1)
    swift_once();
  v10 = sub_1DA66EB90();
  v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1EDAEAAC0);
  result = sub_1DA4A99C4(v11);
  if (!v3)
  {
    v14 = result;
    v15 = v13;
    sub_1DA66F8EC();
    sub_1DA66F8C8();
    if (v16)
    {
      sub_1DA4B2F78(v21, (uint64_t)v8);
      v17 = sub_1DA66F67C();
      v18 = MEMORY[0x1E0D41390];
      a3[3] = v17;
      a3[4] = v18;
      __swift_allocate_boxed_opaque_existential_1(a3);
      sub_1DA66F670();
    }
    else
    {
      type metadata accessor for JSPackageError();
      sub_1DA519CC8();
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v19, v11, v10);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    return sub_1DA4986F8(v14, v15);
  }
  return result;
}

uint64_t sub_1DA4B0CAC(uint64_t a1)
{
  return sub_1DA52A360(a1, qword_1EDAEAAA8);
}

uint64_t sub_1DA4B0CD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66EB90();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_1DA4B0D58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1DA4A8CB4();
  if (v4 <= 0x3F)
  {
    type metadata accessor for AsyncOnceValue.State(319, *(_QWORD *)(a1 + 80), v2, v3);
    if (v5 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for AsyncOnceValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncOnceValue);
}

uint64_t sub_1DA4B0E0C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DA4B0E84()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for AsyncOnceValue.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncOnceValue.State);
}

uint64_t sub_1DA4B0E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release();
  v3 = v2 + v1;
  v4 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)v3 = v4;
  *(_BYTE *)(v3 + 8) = 1;
  sub_1DA66BE60();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1DA4B0F08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B0F70()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1A00);
  swift_allocObject();
  result = sub_1DA66DC54();
  qword_1EDAE0358 = result;
  return result;
}

void sub_1DA4B0FB4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DA66E6EC();
  if (v0 <= 0x3F)
  {
    sub_1DA4A9F08();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1DA4B1040()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66F4FC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DA4B10B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
  sub_1DA66EC38();
  sub_1DA66F538();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_1DA487760(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 448));
}

uint64_t sub_1DA4B11F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1DA66F5A4();
  if (qword_1EDADFFC0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 408) = __swift_project_value_buffer(*(_QWORD *)(v0 + 264), (uint64_t)qword_1EDADFFA8);
  *(_QWORD *)(v0 + 416) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
  v5 = *(_QWORD *)(sub_1DA66EC8C() - 8);
  *(_QWORD *)(v0 + 424) = *(_QWORD *)(v5 + 72);
  *(_DWORD *)(v0 + 456) = *(_DWORD *)(v5 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
  sub_1DA66EC38();
  sub_1DA66F538();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  sub_1DA66F5F8();
  swift_allocObject();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 432) = v6;
  *v6 = v0;
  v6[1] = sub_1DA4B150C;
  return sub_1DA66F5E0();
}

uint64_t sub_1DA4B1384()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t v8;

  v2 = v0[43];
  v1 = v0[44];
  v3 = v0[42];
  v8 = v0[41];
  v4 = v0[40];
  sub_1DA47D774(0, &qword_1EDAE2028);
  sub_1DA66EBB4();
  sub_1DA66EBB4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1F80);
  sub_1DA66EBB4();
  sub_1DA66BE60();
  sub_1DA66EE0C();
  sub_1DA66EE0C();
  v0[45] = sub_1DA66EE0C();
  swift_release();
  swift_release();
  swift_release();
  v5 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v5(v3, v4);
  v5(v2, v4);
  v5(v1, v4);
  v6 = (_QWORD *)swift_task_alloc();
  v0[46] = v6;
  *v6 = v0;
  v6[1] = sub_1DA4B15FC;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4B150C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 448) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4B1580(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 392) = v1;
  swift_task_dealloc();
  if (v1)
    __swift_destroy_boxed_opaque_existential_0(v4 + 136);
  else
    *(_QWORD *)(v4 + 400) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4B15FC()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[47] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_1DA4813E4((uint64_t)(v2 + 7), (uint64_t)(v2 + 17));
  v4 = (_QWORD *)swift_task_alloc();
  v2[48] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_1DA4B1580;
  return sub_1DA4B2230(v2[45]);
}

uint64_t sub_1DA4B169C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[30] = a1;
  v2[31] = v1;
  sub_1DA66EC74();
  v2[32] = swift_task_alloc();
  v3 = sub_1DA66F6B8();
  v2[33] = v3;
  v2[34] = *(_QWORD *)(v3 - 8);
  v2[35] = swift_task_alloc();
  v4 = sub_1DA66F5B0();
  v2[36] = v4;
  v2[37] = *(_QWORD *)(v4 - 8);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v5 = sub_1DA66EBD8();
  v2[40] = v5;
  v2[41] = *(_QWORD *)(v5 - 8);
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B1798(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1DA4B17EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1DA4B183C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4B17EC;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_1DA4B1798;
  return sub_1DA4B169C(v2);
}

uint64_t sub_1DA4B18B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4B1798;
  return sub_1DA4B169C(a1);
}

uint64_t LazyJSStack.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = sub_1DA66F4FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  sub_1DA66EDDC();
  sub_1DA4B1D28();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v2;
  swift_allocObject();
  v12 = sub_1DA4B1BA8((uint64_t)v7, (uint64_t)&unk_1F026A148, v11);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v12;
}

uint64_t sub_1DA4B1A18()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[33] = v0[7];
  v1 = (_QWORD *)swift_task_alloc();
  v0[34] = v1;
  *v1 = v0;
  v1[1] = sub_1DA48BBEC;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4B1A7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B1AE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B1B44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B1BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3 + OBJC_IVAR____TtC10PodcastsUI11LazyJSStack_bag;
  v11 = sub_1DA66F4FC();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  sub_1DA66FB74();
  v13 = sub_1DA66FB98();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADF948);
  v15 = swift_allocObject();
  sub_1DA66BE60();
  swift_defaultActor_initialize();
  sub_1DA4A8C6C((uint64_t)v9, v15 + qword_1EDADF8C0);
  v16 = (_QWORD *)(v15 + qword_1EDADF8B8);
  *v16 = &unk_1F026A200;
  v16[1] = v14;
  v17 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 112);
  *(_QWORD *)v17 = 0;
  *(_BYTE *)(v17 + 8) = 2;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10PodcastsUI11LazyJSStack_stack) = v15;
  return v3;
}

uint64_t sub_1DA4B1D28()
{
  uint64_t v0;

  setenv("JSC_numberOfGCMarkers", "3", 1);
  setenv("JSC_numberOfWorklistThreads", "2", 1);
  if (qword_1EDADFFC0 != -1)
    swift_once();
  v0 = sub_1DA66F6B8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDADFFA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
  sub_1DA66EC8C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
  sub_1DA66EC38();
  sub_1DA66F538();
  swift_bridgeObjectRelease();
  return setenv("JSC_useJIT", "0", 1);
}

uint64_t sub_1DA4B1E58()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[130] = v0[117];
  v1 = (_QWORD *)swift_task_alloc();
  v0[131] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4B2118;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4B1EBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B1F20()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[138] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  v2[139] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_1DA4B1EBC;
  return sub_1DA48BD44(v2[122], v2[118], 0);
}

uint64_t sub_1DA4B1FBC()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[136] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  v2[137] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_1DA4B1F20;
  return sub_1DA48BD44(v2[123], v2[118], 1);
}

uint64_t sub_1DA4B2058()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 1072) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1F80);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 1080) = v4;
  *v4 = v2;
  v4[1] = sub_1DA4B1FBC;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4B2118()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 1056) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 1064) = v4;
  *v4 = v2;
  v4[1] = sub_1DA4B2058;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4B21CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1032) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B2230(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2[119] = v1;
  v2[118] = a1;
  v3 = sub_1DA66F514();
  v2[120] = v3;
  v2[121] = *(_QWORD *)(v3 - 8);
  v2[122] = swift_task_alloc();
  v2[123] = swift_task_alloc();
  v4 = sub_1DA66F4FC();
  v2[124] = v4;
  v2[125] = *(_QWORD *)(v4 - 8);
  v2[126] = swift_task_alloc();
  v2[127] = swift_task_alloc();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2030);
  v5 = (_QWORD *)swift_task_alloc();
  v2[128] = v5;
  *v5 = v2;
  v5[1] = sub_1DA4B21CC;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4B2330()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 32) = *(_QWORD *)(v0 + 152);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4B2370()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[6];
  v1 = (uint64_t *)v0[7];
  v3 = v0[5];
  v4 = objc_msgSend((id)objc_opt_self(), sel_mediaApiClientIdentifier);
  v5 = sub_1DA66F8BC();
  v7 = v6;

  *v1 = v5;
  v1[1] = v7;
  v1[2] = 0;
  v1[3] = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0D40A60], v3);
  v8 = (_QWORD *)swift_task_alloc();
  v0[17] = v8;
  *v8 = v0;
  v8[1] = sub_1DA4B2570;
  return sub_1DA66FD78();
}

uint64_t sub_1DA4B2448()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[12] = v0[2];
  v0[13] = sub_1DA66EE24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0018);
  v1 = (_QWORD *)swift_task_alloc();
  v0[14] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4B25E4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4B24D4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[8] = sub_1DA66EE30();
  v0[9] = sub_1DA66EE24();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE2040);
  v1 = (_QWORD *)swift_task_alloc();
  v0[10] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4B2678;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4B2570(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 144) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 152) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4B25E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = *(void **)(v2 + 96);
    swift_release();

  }
  else
  {
    swift_release();
    *(_QWORD *)(v2 + 128) = sub_1DA47D774(0, &qword_1EDAE2028);
  }
  return swift_task_switch();
}

uint64_t sub_1DA4B2678()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4B26E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[4] = a1;
  v2 = sub_1DA66F2D4();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B2744()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
  v3 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 392);
  v7 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  v9 = *(_QWORD *)(v0 + 352);
  v8 = *(_QWORD *)(v0 + 360);
  v10 = *(_QWORD *)(v0 + 328);
  v11 = *(_QWORD **)(v0 + 296);
  v12 = MEMORY[0x1E0D40778];
  v11[3] = *(_QWORD *)(v0 + 480);
  v11[4] = v12;
  *v11 = v1;
  v2(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_1DA487760(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4B2830()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 448) = sub_1DA66EE24();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v1;
  *v1 = v0;
  v1[1] = sub_1DA4B2988;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4B28A0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[52] = sub_1DA66EE30();
  v0[53] = sub_1DA66EE24();
  v1 = (_QWORD *)swift_task_alloc();
  v0[54] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4B29F4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4B2914(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 496) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 504) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4B2988()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4B29F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4B2A60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[37] = a1;
  v2 = sub_1DA66EB90();
  v1[38] = v2;
  v1[39] = *(_QWORD *)(v2 - 8);
  v1[40] = swift_task_alloc();
  v3 = sub_1DA66F250();
  v1[41] = v3;
  v1[42] = *(_QWORD *)(v3 - 8);
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  v4 = sub_1DA66F484();
  v1[45] = v4;
  v1[46] = *(_QWORD *)(v4 - 8);
  v1[47] = swift_task_alloc();
  v5 = sub_1DA66F4FC();
  v1[48] = v5;
  v1[49] = *(_QWORD *)(v5 - 8);
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B2B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  sub_1DA66EE30();
  sub_1DA66EE24();
  sub_1DA66F4FC();
  sub_1DA66F580();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E90);
  sub_1DA66F580();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE2040);
  v12 = *(_OWORD *)(v0 + 16);
  sub_1DA66F580();
  swift_release();
  v6 = *(_QWORD *)(v0 + 32);
  *(_OWORD *)(v2 + *(int *)(v1 + 20)) = v12;
  *(_QWORD *)(v2 + *(int *)(v1 + 24)) = v6;
  sub_1DA66EE24();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, *MEMORY[0x1E0D3F280], v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2200);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DA678510;
  v8 = sub_1DA66EB6C();
  v9 = MEMORY[0x1E0D3F2F0];
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = v9;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v7 + 32));
  sub_1DA66EB60();
  sub_1DA66EA4C();
  swift_release();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v10;
  *v10 = v0;
  v10[1] = sub_1DA4B2D14;
  return sub_1DA4B09F4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1DA4B2D14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4B2D78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[5] = a1;
  v2 = sub_1DA66EB24();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  type metadata accessor for JSPackageLoader();
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for JSPackageFetcher();
  v1[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t type metadata accessor for EmptyPlayer()
{
  return objc_opt_self();
}

uint64_t sub_1DA4B2E3C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AssetCaches();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DA4B2E78()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DA5B9D10();
  if (v0 <= 0x3F)
  {
    sub_1DA5B9DB8();
    if (v1 <= 0x3F)
    {
      sub_1DA5B9EB0();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DA4B2F18()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for AssetCaches();
  __swift_allocate_value_buffer(v0, qword_1EDAE0178);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE0178);
  return AssetCaches.init()(v1);
}

ValueMetadata *type metadata accessor for PodcastsUIBootstrap()
{
  return &type metadata for PodcastsUIBootstrap;
}

uint64_t PodcastsUIBootstrap.init(process:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1DA4B2F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DA4B2FC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE0148)
  {
    sub_1DA66C358();
    v0 = sub_1DA670294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE0148);
  }
}

uint64_t isPad()
{
  if (isPad_onceToken != -1)
    dispatch_once(&isPad_onceToken, &__block_literal_global_1);
  return isPad___isPad;
}

void __isPad_block_invoke()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  isPad___isPad = v1 == 1;
}

uint64_t isPhone()
{
  if (isPhone_onceToken != -1)
    dispatch_once(&isPhone_onceToken, &__block_literal_global_2);
  return isPhone___isPhone;
}

void __isPhone_block_invoke()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  isPhone___isPhone = v1 == 0;
}

uint64_t isMac()
{
  if (isMac_onceToken != -1)
    dispatch_once(&isMac_onceToken, &__block_literal_global_3);
  return isMac___isMac;
}

void __isMac_block_invoke()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  isMac___isMac = v1 == 5;
}

BOOL isTouch()
{
  if (isTouch_onceToken != -1)
    dispatch_once(&isTouch_onceToken, &__block_literal_global_4);
  return isTouch_result == 0;
}

uint64_t __isTouch_block_invoke()
{
  uint64_t result;
  utsname v1;
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  memset(&v1, 0, 512);
  uname(&v1);
  result = strncmp(v1.machine, "iPod", 4uLL);
  isTouch_result = result;
  return result;
}

BOOL isTallPhone()
{
  void *v0;
  double Height;
  void *v2;
  double v3;
  _BOOL8 v4;
  CGRect v6;

  if (isPhone_onceToken != -1)
    dispatch_once(&isPhone_onceToken, &__block_literal_global_2);
  if (!isPhone___isPhone)
    return 0;
  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "nativeBounds");
  Height = CGRectGetHeight(v6);
  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "nativeScale");
  v4 = Height / v3 >= 568.0;

  return v4;
}

BOOL isShortPhone()
{
  if (isPhone_onceToken != -1)
    dispatch_once(&isPhone_onceToken, &__block_literal_global_2);
  return isPhone___isPhone && !isTallPhone();
}

uint64_t isMultitaskingSupported()
{
  void *v0;

  if ((isMultitaskingSupported___checked & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      isMultitaskingSupported___isMultitaskingSupported = objc_msgSend(v0, "isMultitaskingSupported");
    isMultitaskingSupported___checked = 1;

  }
  return isMultitaskingSupported___isMultitaskingSupported;
}

BOOL isWildcatOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x75F9;
}

BOOL isWildcat()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 30200;
}

BOOL isWildcatOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version >> 3 > 0xEBE;
}

BOOL isApexOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x9C41;
}

BOOL isApex()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 40000;
}

BOOL isApexOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version >> 6 > 0x270;
}

BOOL isBakerOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x9CA5;
}

BOOL isBaker()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 40100;
}

BOOL isBakerOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x9CA3;
}

BOOL isJasperOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x9D09;
}

BOOL isJasper()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 40200;
}

BOOL isJasperOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x9D07;
}

BOOL isDurangoOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x9D6D;
}

BOOL isDurango()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 40300;
}

BOOL isDurangoOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x9D6B;
}

BOOL isTellurideOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0xC351;
}

BOOL isTelluride()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 50000;
}

BOOL isTellurideOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version >> 4 > 0xC34;
}

BOOL isHoodooOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0xC3B5;
}

BOOL isHoodoo()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 50100;
}

BOOL isHoodooOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0xC3B3;
}

BOOL isSundanceOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0xEA61;
}

BOOL isSundance()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 60000;
}

BOOL isSundanceOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version >> 5 > 0x752;
}

BOOL isBrightonOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0xEE49;
}

BOOL isBrighton()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 61000;
}

BOOL isBrightonOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0xEE47;
}

BOOL isInnsbruckOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x11171;
}

BOOL isInnsbruck()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 70000;
}

BOOL isInnsbruckOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x1116F;
}

BOOL isSochiOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x111D5;
}

BOOL isSochi()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 70100;
}

BOOL isSochiOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x111D3;
}

BOOL isOkemoOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x13881;
}

BOOL isOkemo()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 80000;
}

BOOL isOkemoOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version >> 7 > 0x270;
}

BOOL isOkemoTaosOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x138E5;
}

BOOL isOkemoTaos()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 80100;
}

BOOL isOkemoTaosOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x138E3;
}

BOOL isOkemoZursOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x13949;
}

BOOL isOkemoZurs()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 80200;
}

BOOL isOkemoZursOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x13947;
}

BOOL isStoweOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x139AD;
}

BOOL isStowe()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 80300;
}

BOOL isStoweOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x139AB;
}

BOOL isCopperOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x13A11;
}

BOOL isCopper()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 80400;
}

BOOL isCopperOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x13A0F;
}

BOOL isMonarchOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x15F91;
}

BOOL isMonarch()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 90000;
}

BOOL isMonarchOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x15F8F;
}

BOOL isBoulderOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x15FF5;
}

BOOL isBoulder()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 90100;
}

BOOL isBoulderOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x15FF3;
}

BOOL isCastlerockOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x16059;
}

BOOL isCastlerock()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 90200;
}

BOOL isCastlerockOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x16057;
}

BOOL isEagleOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x160BD;
}

BOOL isEagle()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 90300;
}

BOOL isEagleOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version > 0x160BB;
}

BOOL isWhitetailOrEarlier()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version < 0x186A1;
}

BOOL isWhitetail()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version == 100000;
}

BOOL isWhitetailOrLater()
{
  if (deviceVersion_onceToken != -1)
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_34);
  return deviceVersion_version >> 5 > 0xC34;
}

BOOL isRetina()
{
  void *v0;
  double v1;
  _BOOL8 v2;

  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v0, "scale");
    v2 = v1 > 1.0;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

BOOL isARMv6()
{
  size_t v1;
  int v2;

  v2 = 0;
  v1 = 4;
  sysctlbyname("hw.cpusubtype", &v2, &v1, 0, 0);
  return v2 == 6;
}

BOOL isK48()
{
  if (isK48_onceToken != -1)
    dispatch_once(&isK48_onceToken, &__block_literal_global_10);
  return isK48_result == 0;
}

uint64_t __isK48_block_invoke()
{
  uint64_t result;
  utsname v1;
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  memset(&v1, 0, 512);
  uname(&v1);
  result = strncmp(v1.machine, "iPad1,1", 7uLL);
  isK48_result = result;
  return result;
}

BOOL isN18()
{
  if (isN18_onceToken != -1)
    dispatch_once(&isN18_onceToken, &__block_literal_global_12);
  return isN18_result == 0;
}

uint64_t __isN18_block_invoke()
{
  uint64_t result;
  utsname v1;
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  memset(&v1, 0, 512);
  uname(&v1);
  result = strncmp(v1.machine, "iPod3,1", 7uLL);
  isN18_result = result;
  return result;
}

BOOL isN88()
{
  if (isN88_onceToken != -1)
    dispatch_once(&isN88_onceToken, &__block_literal_global_14);
  return isN88_result == 0;
}

uint64_t __isN88_block_invoke()
{
  uint64_t result;
  utsname v1;
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  memset(&v1, 0, 512);
  uname(&v1);
  result = strncmp(v1.machine, "iPhone2,1", 9uLL);
  isN88_result = result;
  return result;
}

BOOL isN56()
{
  if (isN56_onceToken != -1)
    dispatch_once(&isN56_onceToken, &__block_literal_global_16);
  return isN56_result == 0;
}

uint64_t __isN56_block_invoke()
{
  uint64_t result;
  utsname v1;
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  memset(&v1, 0, 512);
  uname(&v1);
  result = strncmp(v1.machine, "iPhone7,1", 9uLL);
  isN56_result = result;
  return result;
}

BOOL isN61()
{
  if (isN61_onceToken != -1)
    dispatch_once(&isN61_onceToken, &__block_literal_global_18);
  return isN61_result == 0;
}

uint64_t __isN61_block_invoke()
{
  uint64_t result;
  utsname v1;
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  memset(&v1, 0, 512);
  uname(&v1);
  result = strncmp(v1.machine, "iPhone7,2", 9uLL);
  isN61_result = result;
  return result;
}

BOOL isN66()
{
  if (isN66_onceToken != -1)
    dispatch_once(&isN66_onceToken, &__block_literal_global_20);
  return isN66_result == 0;
}

uint64_t __isN66_block_invoke()
{
  uint64_t result;
  utsname v1;
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  memset(&v1, 0, 512);
  uname(&v1);
  result = strncmp(v1.machine, "iPhone8,2", 9uLL);
  isN66_result = result;
  return result;
}

BOOL isN71()
{
  if (isN71_onceToken != -1)
    dispatch_once(&isN71_onceToken, &__block_literal_global_22);
  return isN71_result == 0;
}

uint64_t __isN71_block_invoke()
{
  uint64_t result;
  utsname v1;
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  memset(&v1, 0, 512);
  uname(&v1);
  result = strncmp(v1.machine, "iPhone8,1", 9uLL);
  isN71_result = result;
  return result;
}

uint64_t isN56Width()
{
  if (isN56Width_onceToken != -1)
    dispatch_once(&isN56Width_onceToken, &__block_literal_global_24);
  return isN56Width_result;
}

void __isN56Width_block_invoke()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  id v5;

  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "currentMode");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "size");
  v3 = v2;

  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "scale");
  isN56Width_result = v3 >= v4 * 414.0 + -0.00000011920929;

}

uint64_t isN61Width()
{
  if (isN61Width_onceToken != -1)
    dispatch_once(&isN61Width_onceToken, &__block_literal_global_25);
  return isN61Width_result;
}

void __isN61Width_block_invoke()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  double v6;
  id v7;

  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "currentMode");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "size");
  v3 = v2;

  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "scale");
  if (v3 >= v4 * 375.0 + -0.00000011920929)
  {
    objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "scale");
    isN61Width_result = v3 < v6 * 414.0 + -0.00000011920929;

  }
  else
  {
    isN61Width_result = 0;
  }

}

uint64_t isH4()
{
  if (isH4_onceToken != -1)
    dispatch_once(&isH4_onceToken, &__block_literal_global_30);
  return isH4_isLowEndHardware;
}

void __isH4_block_invoke()
{
  void *v0;
  void *v1;
  const __CFNumber *v2;
  const __CFNumber *v3;
  BOOL v4;
  uint64_t valuePtr;

  v0 = (void *)MGCopyAnswer();
  v1 = v0;
  if (v0)
  {
    isH4_isLowEndHardware = objc_msgSend(v0, "BOOLValue");
  }
  else
  {
    valuePtr = 0;
    v2 = (const __CFNumber *)MGCopyAnswer();
    if (v2)
    {
      v3 = v2;
      CFNumberGetValue(v2, kCFNumberSInt64Type, &valuePtr);
      CFRelease(v3);
      v4 = (valuePtr & 0xFFF0) == 35136;
    }
    else
    {
      v4 = 0;
    }
    isH4_isLowEndHardware = v4;
  }

}

void __deviceVersion_block_invoke()
{
  void *v0;
  int v1;
  BOOL v2;
  void *v3;
  id v4;

  objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "systemVersion");
  v4 = (id)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v4, "compare:options:", CFSTR("3.2"), 64) == -1)
  {
    v1 = 0;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("4.0"), 64) == -1)
  {
    v1 = 30200;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("4.1"), 64) == -1)
  {
    v1 = 40000;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("4.2"), 64) == -1)
  {
    v1 = 40100;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("4.3"), 64) == -1)
  {
    v1 = 40200;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("5.0"), 64) == -1)
  {
    v1 = 40300;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("5.1"), 64) == -1)
  {
    v1 = 50000;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("6.0"), 64) == -1)
  {
    v1 = 50100;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("6.1"), 64) == -1)
  {
    v1 = 60000;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("6.2"), 64) == -1)
  {
    v1 = 61000;
    goto LABEL_36;
  }
  v1 = 70000;
  if (objc_msgSend(v4, "compare:options:", CFSTR("7.1"), 64) == -1)
    goto LABEL_36;
  if (objc_msgSend(v4, "compare:options:", CFSTR("8.0"), 64) == -1)
    goto LABEL_35;
  v1 = 80000;
  if (objc_msgSend(v4, "compare:options:", CFSTR("8.1"), 64) == -1)
    goto LABEL_36;
  if (objc_msgSend(v4, "compare:options:", CFSTR("8.2"), 64) == -1)
  {
LABEL_35:
    v1 += 100;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("8.3"), 64) == -1)
  {
LABEL_38:
    v1 += 200;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("8.4"), 64) == -1)
  {
LABEL_39:
    v1 += 300;
    goto LABEL_36;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("9.0"), 64) == -1)
  {
    v1 = 80400;
    goto LABEL_36;
  }
  v1 = 90000;
  if (objc_msgSend(v4, "compare:options:", CFSTR("9.1"), 64) == -1)
  {
LABEL_36:
    v3 = v4;
    goto LABEL_37;
  }
  if (objc_msgSend(v4, "compare:options:", CFSTR("9.2"), 64) == -1)
    goto LABEL_35;
  if (objc_msgSend(v4, "compare:options:", CFSTR("9.3"), 64) == -1)
    goto LABEL_38;
  if (objc_msgSend(v4, "compare:options:", CFSTR("10.0"), 64) == -1)
    goto LABEL_39;
  v2 = objc_msgSend(v4, "compare:options:", CFSTR("10.1"), 64) == -1;
  v3 = v4;
  if (v2)
    v1 = 100000;
  else
    v1 = 999999;
LABEL_37:
  deviceVersion_version = v1;

}

uint64_t MTMPUDeviceGetGraphicsQuality()
{
  if (MTMPUDeviceGetGraphicsQuality_sOnceToken != -1)
    dispatch_once(&MTMPUDeviceGetGraphicsQuality_sOnceToken, &__block_literal_global_1);
  return MTMPUDeviceGetGraphicsQuality_sGraphicsQuality;
}

void sub_1DA4B7508(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1DA4B915C(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
  JUMPOUT(0x1DA4B9148);
}

void sub_1DA4B921C(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
  JUMPOUT(0x1DA4B9208);
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

CGImageSource *CGImageCreateWithURL(const __CFURL *a1)
{
  CGImageSource *result;
  CGImageSource *v2;
  CGImageRef ImageAtIndex;

  result = CGImageSourceCreateWithURL(a1, 0);
  if (result)
  {
    v2 = result;
    ImageAtIndex = CGImageSourceCreateImageAtIndex(result, 0, 0);
    CFRelease(v2);
    return ImageAtIndex;
  }
  return result;
}

CGContext *CGBitmapContextCreateWithImage(CGImage *a1)
{
  unint64_t Width;
  unint64_t Height;
  CGColorSpace *DeviceRGB;
  CGColorSpace *v5;
  CGContext *v6;
  CGRect v8;

  Width = CGImageGetWidth(a1);
  Height = CGImageGetHeight(a1);
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (!DeviceRGB)
    return 0;
  v5 = DeviceRGB;
  v6 = CGBitmapContextCreate(0, Width, Height, 8uLL, 4 * Width, DeviceRGB, 1u);
  CGColorSpaceRelease(v5);
  if (v6)
  {
    v8.size.width = (double)Width;
    v8.size.height = (double)Height;
    v8.origin.x = 0.0;
    v8.origin.y = 0.0;
    CGContextDrawImage(v6, v8, a1);
  }
  return v6;
}

CGImageRef CGImageCreateFromImageAdjustingHSL(CGImage *a1, float a2, float a3, float a4)
{
  float v4;
  float v5;
  float v6;
  float v7;
  _BOOL4 v8;
  CGImageRef result;
  CGContext *v10;
  unsigned int *Data;
  size_t Width;
  size_t Height;
  uint64_t i;
  unsigned int *v15;
  size_t v16;
  unsigned int v17;
  int v18;
  float v19;
  float v20;
  float v21;
  float v23;
  float v24;
  BOOL v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  int v37;
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  float v43;
  float v44;
  CGImageRef Image;

  v4 = a2 / 360.0;
  v5 = a3 / 100.0;
  v6 = a4 / 100.0;
  if (v4 >= 0.0)
    v7 = v4;
  else
    v7 = v4 + 1.0;
  v8 = v7 == 0.0;
  if (v7 == 1.0)
    v8 = 1;
  if (v6 == 0.0 && v5 == 0.0 && v8)
    return CGImageRetain(a1);
  result = CGBitmapContextCreateWithImage(a1);
  if (result)
  {
    v10 = result;
    Data = (unsigned int *)CGBitmapContextGetData(result);
    Width = CGBitmapContextGetWidth(v10);
    Height = CGBitmapContextGetHeight(v10);
    if (Height)
    {
      for (i = 0; i != Height; ++i)
      {
        if (Width)
        {
          v15 = Data;
          v16 = Width;
          do
          {
            v17 = *v15;
            v18 = *v15;
            v19 = (float)v18 / 255.0;
            v20 = (float)BYTE1(*v15) / 255.0;
            v21 = (float)BYTE2(*v15) / 255.0;
            if (v19 < v20 || v19 < v21)
            {
              if (v20 >= v19)
                v23 = (float)v18 / 255.0;
              else
                v23 = (float)BYTE1(v17) / 255.0;
              if (v19 >= v21)
                v24 = (float)BYTE2(v17) / 255.0;
              else
                v24 = (float)v18 / 255.0;
              v25 = v20 < v19 || v20 < v21;
              if (v25)
                v26 = (float)BYTE2(v17) / 255.0;
              else
                v26 = (float)BYTE1(v17) / 255.0;
              if (v25)
                v27 = v23;
              else
                v27 = v24;
            }
            else
            {
              if (v20 >= v21)
                v27 = (float)BYTE2(v17) / 255.0;
              else
                v27 = (float)BYTE1(v17) / 255.0;
              v26 = (float)v18 / 255.0;
            }
            v28 = 0.0;
            if (v26 <= 0.0)
            {
              v30 = 0.0;
            }
            else
            {
              v29 = v26 - v27;
              v30 = (float)(v26 - v27) / v26;
              if (v30 != 0.0)
              {
                v31 = (float)(v26 - v20) / v29;
                v32 = (float)(v26 - v21) / v29;
                if (v26 == v19)
                {
                  if (v27 == v20)
                    v28 = v32 + 5.0;
                  else
                    v28 = 1.0 - v31;
                }
                else
                {
                  v44 = (float)(v26 - v19) / v29;
                  if (v26 == v20)
                  {
                    if (v27 == v21)
                      v28 = v44 + 1.0;
                    else
                      v28 = 3.0 - v32;
                  }
                  else if (v27 == v19)
                  {
                    v28 = v31 + 3.0;
                  }
                  else
                  {
                    v28 = 5.0 - v44;
                  }
                }
              }
            }
            v33 = v7 + (float)(v28 / 6.0);
            if (v33 > 1.0)
              v33 = v33 + -1.0;
            if (v5 >= 0.0)
            {
              if (v5 > 0.0)
                v30 = v30 + (float)((float)(1.0 - v30) * v5);
            }
            else
            {
              v30 = (float)(v5 + 1.0) * v30;
            }
            v34 = v26 + (float)((float)(1.0 - v26) * v6);
            if (v6 <= 0.0)
              v34 = v26;
            v35 = (float)(v6 + 1.0) * v26;
            if (v6 >= 0.0)
              v35 = v34;
            if (v33 == 1.0)
              v36 = 0.0;
            else
              v36 = v33 * 6.0;
            v37 = (int)v36;
            v38 = v36 - (float)(int)v36;
            v39 = (float)(1.0 - v30) * v35;
            v40 = (float)(1.0 - (float)(v30 * v38)) * v35;
            v41 = (float)(1.0 - (float)(v30 * (float)(1.0 - v38))) * v35;
            v42 = v35;
            v43 = v41;
            switch(v37)
            {
              case 1:
                v42 = v40;
                v43 = v35;
                break;
              case 2:
                v42 = v39;
                v43 = v35;
                v39 = v41;
                break;
              case 3:
                v42 = v39;
                v43 = v40;
                goto LABEL_63;
              case 4:
                v42 = v41;
                v43 = v39;
LABEL_63:
                v39 = v35;
                break;
              case 5:
                v42 = v35;
                v43 = v39;
                v39 = v40;
                break;
              default:
                break;
            }
            *v15++ = v17 & 0xFF000000 | (int)(float)(v42 * 255.0) | ((int)(float)(v43 * 255.0) << 8) | ((int)(float)(v39 * 255.0) << 16);
            --v16;
          }
          while (v16);
        }
        Data += Width;
      }
    }
    Image = CGBitmapContextCreateImage(v10);
    CFRelease(v10);
    return Image;
  }
  return result;
}

uint64_t CGImageSourcePixelSize(CGImageSource *a1)
{
  const __CFDictionary *v1;
  const __CFDictionary *v2;
  const __CFNumber *Value;
  const __CFNumber *v4;
  BOOL v5;
  const __CFNumber *v6;
  __int128 v8;

  v1 = CGImageSourceCopyPropertiesAtIndex(a1, 0, 0);
  if (v1)
  {
    v2 = v1;
    Value = (const __CFNumber *)CFDictionaryGetValue(v1, (const void *)*MEMORY[0x1E0CBD048]);
    v4 = (const __CFNumber *)CFDictionaryGetValue(v2, (const void *)*MEMORY[0x1E0CBD040]);
    v8 = 0uLL;
    if (Value)
      v5 = v4 == 0;
    else
      v5 = 1;
    if (!v5)
    {
      v6 = v4;
      CFNumberGetValue(Value, kCFNumberNSIntegerType, &v8);
      CFNumberGetValue(v6, kCFNumberNSIntegerType, (char *)&v8 + 8);
    }
    CFRelease(v2);
  }
  else
  {
    return CGPixelSizeZero;
  }
  return v8;
}

BOOL CGImageSourceIsSquare(CGImageSource *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = CGImageSourcePixelSize(a1);
  return v1 == v2;
}

double *MTMPU::Point3D::Point3D(double *this, double a2, double a3, double a4)
{
  *this = a2;
  this[1] = a3;
  this[2] = a4;
  return this;
}

{
  *this = a2;
  this[1] = a3;
  this[2] = a4;
  return this;
}

BOOL MTMPU::Point3D::operator==(double *a1, double *a2)
{
  return MTMPUFloatEqualToFloat(*a1, *a2)
      && MTMPUFloatEqualToFloat(a1[1], a2[1])
      && MTMPUFloatEqualToFloat(a1[2], a2[2]);
}

BOOL MTMPU::Point3D::operator!=(double *a1, double *a2)
{
  return !MTMPU::Point3D::operator==(a1, a2);
}

BOOL MTMPU::Point3D::resolveEquationOfPlaneDefinedByFirstThreePointsInVector(double **a1, double *a2, double *a3, double *a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v34;

  v15 = **a1;
  v16 = (*a1)[1];
  v17 = (*a1)[2];
  v18 = (*a1)[4];
  v19 = (*a1)[5];
  v20 = (*a1)[6];
  v21 = (*a1)[7];
  v22 = (*a1)[8];
  v34 = (*a1)[3];
  return MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v15, v16, v17, v34, v18, v19, a11, a12, v20, v21, v22)|| MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v15,
           v16,
           v17,
           v20,
           v21,
           v22,
           v23,
           v24,
           v34,
           v18,
           v19)
      || MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v34, v18, v19, v15, v16, v17, v25, v26, v20, v21, v22)|| MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v34,
           v18,
           v19,
           v20,
           v21,
           v22,
           v27,
           v28,
           v15,
           v16,
           v17)
      || MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v20, v21, v22, v15, v16, v17, v29, v30, v34, v18, v19)|| MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v20,
           v21,
           v22,
           v34,
           v18,
           v19,
           v31,
           v32,
           v15,
           v16,
           v17);
}

BOOL MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(double *a1, double *a2, double *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14)
{
  double v26;
  double v28;
  double v29;
  double v30;
  double v31;
  _BOOL4 v32;
  double v33;
  double v34;

  v26 = a8 - a5;
  if (MTMPUFloatEqualToFloat(a8 - a5, 0.0))
    return 0;
  v28 = a13 - a8;
  v29 = a7 - a4;
  v30 = -v28 / v26;
  v31 = a12 - a7 + v30 * (a7 - a4);
  v32 = MTMPUFloatEqualToFloat(v31, 0.0);
  if (!v32)
  {
    v33 = (a14 - a9 + v30 * (a9 - a6)) / v31;
    if (a1)
      *a1 = v33;
    v34 = (a9 - a6 - v33 * v29) / v26;
    if (a2)
      *a2 = v34;
    if (a3)
      *a3 = a6 - v33 * a4 - v34 * a5;
  }
  return !v32;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void sub_1DA4BF234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t CoreTextLibrary()
{
  uint64_t v0;
  void *v2;

  if (!CoreTextLibraryCore_frameworkLibrary)
    CoreTextLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = CoreTextLibraryCore_frameworkLibrary;
  if (!CoreTextLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

void sub_1DA4BF4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1DA4BF564(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1DA4BF7C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::insert(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  char *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = (char *)a2;
  v7 = *a1;
  v6 = a1[1];
  v8 = (a2 - *a1) >> 5;
  v11 = a1[2];
  v9 = (uint64_t)(a1 + 2);
  v10 = v11;
  if (v6 >= v11)
  {
    v12 = ((uint64_t)(v6 - v7) >> 5) + 1;
    if (v12 >> 59)
      std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
    v13 = v10 - v7;
    if (v13 >> 4 > v12)
      v12 = v13 >> 4;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0)
      v14 = 0x7FFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    v21 = v9;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>>(v9, v14);
    else
      v15 = 0;
    v17 = v15;
    v18 = &v15[32 * v8];
    v19 = v18;
    v20 = &v15[32 * v14];
    std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::push_back[abi:ne180100](&v17, a3);
    v4 = (char *)std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__swap_out_circular_buffer(a1, &v17, v4);
    std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::~__split_buffer((uint64_t)&v17);
  }
  else if (a2 == v6)
  {
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__construct_one_at_end[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer const&>((uint64_t)a1, a3);
  }
  else
  {
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__move_range((uint64_t)a1, a2, v6, a2 + 32);
    if ((unint64_t)v4 <= a3)
      a3 += 32 * (a1[1] > a3);
    if (v4 != (char *)a3)
      std::vector<MTMPU::LayoutInterpolator::Entry>::__assign_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(v4, *(char **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 4);
    *(_QWORD *)(v7 + 32 * v8 + 24) = *(_QWORD *)(a3 + 24);
  }
  return v4;
}

void sub_1DA4BF948(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1DA4BFC20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double MTMPULayoutInterpolatorScaledValueFromTraitEnvironment(void *a1, void *a2, double a3)
{
  id v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  double v11;

  v5 = a2;
  objc_msgSend(a1, "valueForReferenceMetric:", a3);
  v7 = v6;
  objc_msgSend(v5, "traitCollection");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "displayScale");
  v10 = v9;

  v11 = MTMPUFloatRoundForScale(v7, v10);
  return v11;
}

void sub_1DA4BFD14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1DA4C00D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,void *a28,uint64_t a29)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1DA4C02D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  uint64_t v13;
  void *v15;

  if (__p)
    operator delete(__p);
  v15 = *(void **)v13;
  if (*(_QWORD *)v13)
  {
    *(_QWORD *)(v13 + 8) = v15;
    operator delete(v15);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<MTMPU::Point3D>::insert(uint64_t a1, char *__src, unint64_t a3)
{
  unint64_t v3;
  char *v4;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  void *__p;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v3 = a3;
  v4 = __src;
  v6 = *(char **)(a1 + 8);
  v8 = a1 + 16;
  v7 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    v13 = *(char **)a1;
    v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v6[-*(_QWORD *)a1] >> 3) + 1;
    if (v14 > 0xAAAAAAAAAAAAAAALL)
      std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
    v15 = __src - v13;
    v16 = 0xAAAAAAAAAAAAAAABLL * ((__src - v13) >> 3);
    v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - (_QWORD)v13) >> 3);
    if (2 * v17 > v14)
      v14 = 2 * v17;
    if (v17 >= 0x555555555555555)
      v18 = 0xAAAAAAAAAAAAAAALL;
    else
      v18 = v14;
    v33 = a1 + 16;
    if (v18)
      v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::Point3D>>(a1 + 16, v18);
    else
      v19 = 0;
    v22 = &v19[24 * v16];
    __p = v19;
    v30 = v22;
    v31 = v22;
    v32 = &v19[24 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4)
          v24 = 1;
        else
          v24 = 2 * v16;
        v25 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::Point3D>>(v8, v24);
        v22 = &v25[24 * (v24 >> 2)];
        __p = v25;
        v30 = v22;
        v32 = &v25[24 * v26];
        if (v19)
          operator delete(v19);
      }
      else
      {
        v23 = v16 + 2;
        if (v16 >= -1)
          v23 = v16 + 1;
        v22 -= 24 * (v23 >> 1);
        v30 = v22;
      }
    }
    v27 = *(_OWORD *)v3;
    *((_QWORD *)v22 + 2) = *(_QWORD *)(v3 + 16);
    *(_OWORD *)v22 = v27;
    v31 = v22 + 24;
    v4 = (char *)std::vector<MTMPU::Point3D>::__swap_out_circular_buffer((void **)a1, (uint64_t)&__p, v4);
    if (v31 != v30)
      v31 = &v30[(v31 - v30 - 24) % 0x18uLL];
    if (__p)
      operator delete(__p);
  }
  else if (__src == v6)
  {
    v21 = *(_OWORD *)a3;
    *((_QWORD *)__src + 2) = *(_QWORD *)(a3 + 16);
    *(_OWORD *)__src = v21;
    *(_QWORD *)(a1 + 8) = __src + 24;
  }
  else
  {
    v9 = __src + 24;
    v10 = v6 - 24;
    v11 = *(_QWORD *)(a1 + 8);
    while (v10 < v6)
    {
      v12 = *(_OWORD *)v10;
      *(_QWORD *)(v11 + 16) = *((_QWORD *)v10 + 2);
      *(_OWORD *)v11 = v12;
      v11 += 24;
      v10 += 24;
    }
    *(_QWORD *)(a1 + 8) = v11;
    if (v6 != v9)
      memmove(__src + 24, __src, v6 - v9);
    if ((unint64_t)v4 <= v3)
      v3 += 24 * (*(_QWORD *)(a1 + 8) > v3);
    v20 = *(_OWORD *)v3;
    *((_QWORD *)v4 + 2) = *(_QWORD *)(v3 + 16);
    *(_OWORD *)v4 = v20;
  }
  return v4;
}

void sub_1DA4C0578(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *std::string::basic_string[abi:ne180100]<0>(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:ne180100]();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("basic_string");
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1EA0C4048, MEMORY[0x1E0DE42D0]);
}

void sub_1DA4C0758(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5020] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E0DE4E98], MEMORY[0x1E0DE4390]);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__assign_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char v22;
  char v23;

  v8 = a1 + 16;
  v9 = *(_QWORD *)a1;
  if (a4 > (uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 5)
  {
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__vdeallocate((uint64_t *)a1);
    if (a4 >> 59)
      std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
    v10 = *(_QWORD *)(a1 + 16) - *(_QWORD *)a1;
    v11 = v10 >> 4;
    if (v10 >> 4 <= a4)
      v11 = a4;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0)
      v12 = 0x7FFFFFFFFFFFFFFLL;
    else
      v12 = v11;
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__vallocate[abi:ne180100]((_QWORD *)a1, v12);
    v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(v8, a2, a3, *(_QWORD **)(a1 + 8));
    goto LABEL_11;
  }
  v14 = (*(_QWORD *)(a1 + 8) - v9) >> 5;
  if (v14 < a4)
  {
    v15 = a2 + 32 * v14;
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *>((int)&v22, a2, v15, v9);
    v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(v8, v15, a3, *(_QWORD **)(a1 + 8));
LABEL_11:
    *(_QWORD *)(a1 + 8) = v13;
    return;
  }
  std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *>((int)&v23, a2, a3, v9);
  v17 = v16;
  v18 = *(_QWORD *)(a1 + 8);
  if (v18 != v16)
  {
    v19 = *(_QWORD *)(a1 + 8);
    do
    {
      v21 = *(void **)(v19 - 32);
      v19 -= 32;
      v20 = v21;
      if (v21)
      {
        *(_QWORD *)(v18 - 24) = v20;
        operator delete(v20);
      }
      v18 = v19;
    }
    while (v19 != v17);
  }
  *(_QWORD *)(a1 + 8) = v17;
}

void sub_1DA4C0910(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1DA4C0918(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__vdeallocate(uint64_t *a1)
{
  if (*a1)
  {
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__clear[abi:ne180100](a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 59)
    std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[32 * v4];
  return result;
}

_QWORD *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD v8[3];
  char v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      std::vector<MTMPU::LayoutInterpolator::Entry>::__init_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(v4, *(const void **)v6, *(_QWORD *)(v6 + 8), (uint64_t)(*(_QWORD *)(v6 + 8) - *(_QWORD *)v6) >> 4);
      v4[3] = *(_QWORD *)(v6 + 24);
      v4 = v11 + 4;
      v11 += 4;
      v6 += 32;
    }
    while (v6 != a3);
  }
  v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1DA4C0A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<MTMPU::LayoutInterpolator::Entry>::__init_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<MTMPU::LayoutInterpolator::Entry>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1DA4C0AAC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<MTMPU::LayoutInterpolator::Entry>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 60)
    std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::Entry>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

void std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::Entry>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(16 * a2);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>::operator()[abi:ne180100](a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v1 = **(_QWORD **)(a1 + 16);
  v2 = **(_QWORD **)(a1 + 8);
  if (v1 != v2)
  {
    v3 = **(_QWORD **)(a1 + 16);
    do
    {
      v5 = *(void **)(v3 - 32);
      v3 -= 32;
      v4 = v5;
      if (v5)
      {
        *(_QWORD *)(v1 - 24) = v4;
        operator delete(v4);
      }
      v1 = v3;
    }
    while (v3 != v2);
  }
}

uint64_t std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *>(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (v5 != a4)
        std::vector<MTMPU::LayoutInterpolator::Entry>::__assign_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>((char *)a4, *(char **)v5, *(_QWORD *)(v5 + 8), (uint64_t)(*(_QWORD *)(v5 + 8) - *(_QWORD *)v5) >> 4);
      *(_QWORD *)(a4 + 24) = *(_QWORD *)(v5 + 24);
      v5 += 32;
      a4 += 32;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

char *std::vector<MTMPU::LayoutInterpolator::Entry>::__assign_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 4)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 60)
      std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 3;
    if (v8 >> 3 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0)
      v11 = 0xFFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = std::vector<MTMPU::LayoutInterpolator::Entry>::__vallocate[abi:ne180100](v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 4;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[16 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

void std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *a1;
  v2 = a1[1];
  if (v2 != *a1)
  {
    v4 = a1[1];
    do
    {
      v6 = *(void **)(v4 - 32);
      v4 -= 32;
      v5 = v6;
      if (v6)
      {
        *(_QWORD *)(v2 - 24) = v5;
        operator delete(v5);
      }
      v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(32 * a2);
}

double std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__construct_one_at_end[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer const&>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  std::vector<MTMPU::LayoutInterpolator::Entry>::__init_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>((_QWORD *)v4, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 4);
  result = *(double *)(a2 + 24);
  *(double *)(v4 + 24) = result;
  *(_QWORD *)(a1 + 8) = v4 + 32;
  return result;
}

void sub_1DA4C0E30(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__move_range(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = a2 + v6 - a4;
  v8 = (_QWORD *)v6;
  if (v7 < a3)
  {
    v9 = v7;
    v8 = *(_QWORD **)(a1 + 8);
    do
    {
      *v8 = 0;
      v8[1] = 0;
      v8[2] = 0;
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v8[2] = *(_QWORD *)(v9 + 16);
      *(_QWORD *)v9 = 0;
      *(_QWORD *)(v9 + 8) = 0;
      *(_QWORD *)(v9 + 16) = 0;
      v8[3] = *(_QWORD *)(v9 + 24);
      v8 += 4;
      v9 += 32;
    }
    while (v9 < a3);
  }
  *(_QWORD *)(a1 + 8) = v8;
  return std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_backward_loop<std::_ClassicAlgPolicy>,std::__move_backward_trivial>,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,0>(a2, v7, v6);
}

double std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::push_back[abi:ne180100](_QWORD *a1, uint64_t a2)
{
  __n128 *v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 *v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  int64x2_t v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  int64x2_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = (__n128 *)a1[2];
  if (v4 == (__n128 *)a1[3])
  {
    v6 = *a1;
    v5 = (__n128 *)a1[1];
    v7 = (uint64_t)v5 - *a1;
    if ((unint64_t)v5 <= *a1)
    {
      v15 = (uint64_t)v4 - v6;
      v14 = v15 == 0;
      v16 = v15 >> 4;
      if (v14)
        v17 = 1;
      else
        v17 = v16;
      v31 = a1[4];
      v18 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>>(v31, v17);
      v20 = &v18[32 * (v17 >> 2)];
      v21 = a1[1];
      v22 = a1[2] - v21;
      if (v22)
      {
        v23 = &v20[v22];
        v24 = &v18[32 * (v17 >> 2)];
        do
        {
          *(_QWORD *)v24 = 0;
          *((_QWORD *)v24 + 1) = 0;
          *((_QWORD *)v24 + 2) = 0;
          *(_OWORD *)v24 = *(_OWORD *)v21;
          *((_QWORD *)v24 + 2) = *(_QWORD *)(v21 + 16);
          *(_QWORD *)v21 = 0;
          *(_QWORD *)(v21 + 8) = 0;
          *(_QWORD *)(v21 + 16) = 0;
          *((_QWORD *)v24 + 3) = *(_QWORD *)(v21 + 24);
          v24 += 32;
          v21 += 32;
        }
        while (v24 != v23);
        v25 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        v25 = vdupq_n_s64(v21);
        v23 = &v18[32 * (v17 >> 2)];
      }
      v28 = *a1;
      *a1 = v18;
      a1[1] = v20;
      v29 = v25;
      v26 = a1[3];
      a1[2] = v23;
      a1[3] = &v18[32 * v19];
      v30 = v26;
      std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::~__split_buffer((uint64_t)&v28);
      v4 = (__n128 *)a1[2];
    }
    else
    {
      v8 = v7 >> 5;
      v9 = v7 >> 5 < -1;
      v10 = (v7 >> 5) + 2;
      if (v9)
        v11 = v10;
      else
        v11 = v8 + 1;
      v12 = v11 >> 1;
      std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,0>(v5, v4, (uint64_t)&v5[-2 * (v11 >> 1)]);
      v4 = v13;
      a1[1] -= 32 * v12;
      a1[2] = v13;
    }
  }
  v4->n128_u64[0] = 0;
  v4->n128_u64[1] = 0;
  v4[1].n128_u64[0] = 0;
  std::vector<MTMPU::LayoutInterpolator::Entry>::__init_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(v4, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 4);
  result = *(double *)(a2 + 24);
  v4[1].n128_f64[1] = result;
  a1[2] += 32;
  return result;
}

uint64_t std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = (uint64_t)(a1 + 2);
  std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>((uint64_t)(a1 + 2), (uint64_t)a3, a3, *a1, (_QWORD *)*a1, v6, v6);
  a2[1] = v8;
  a2[2] = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(v7, (uint64_t)a3, a1[1], (_QWORD *)a2[2]);
  v9 = *a1;
  *a1 = a2[1];
  a2[1] = v9;
  v10 = a1[1];
  a1[1] = a2[2];
  a2[2] = v10;
  v11 = a1[2];
  a1[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_backward_loop<std::_ClassicAlgPolicy>,std::__move_backward_trivial>,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,0>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if (a2 != a1)
  {
    v6 = a2;
    do
    {
      std::vector<MTMPU::LayoutInterpolator::Entry>::__move_assign(a3 - 32, (__n128 *)(v6 - 32));
      *(_QWORD *)(a3 - 8) = *(_QWORD *)(v6 - 8);
      a3 -= 32;
      v6 -= 32;
    }
    while (v6 != a1);
  }
  return a2;
}

__n128 std::vector<MTMPU::LayoutInterpolator::Entry>::__move_assign(uint64_t a1, __n128 *a2)
{
  void *v4;
  __n128 result;

  v4 = *(void **)a1;
  if (v4)
  {
    *(_QWORD *)(a1 + 8) = v4;
    operator delete(v4);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  result = *a2;
  *(__n128 *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

__n128 *std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,0>(__n128 *a1, __n128 *a2, uint64_t a3)
{
  __n128 *v4;
  __n128 *v5;

  v4 = a1;
  if (a1 == a2)
    return a1;
  v5 = a2;
  do
  {
    std::vector<MTMPU::LayoutInterpolator::Entry>::__move_assign(a3, v4);
    *(_QWORD *)(a3 + 24) = v4[1].n128_u64[1];
    a3 += 32;
    v4 += 2;
  }
  while (v4 != v5);
  return v5;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  __int128 v13;
  __int128 v14;

  v7 = a7;
  *(_QWORD *)&v14 = a6;
  *((_QWORD *)&v14 + 1) = a7;
  v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    v9 = a6;
  }
  else
  {
    do
    {
      *(_QWORD *)(v7 - 32) = 0;
      *(_QWORD *)(v7 - 24) = 0;
      *(_QWORD *)(v7 - 16) = 0;
      v8 = *((_OWORD *)a3 - 2);
      a3 -= 4;
      *(_OWORD *)(v7 - 32) = v8;
      *(_QWORD *)(v7 - 16) = a3[2];
      a3[1] = 0;
      a3[2] = 0;
      *a3 = 0;
      *(_QWORD *)(v7 - 8) = a3[3];
      v7 = *((_QWORD *)&v14 + 1) - 32;
      *((_QWORD *)&v14 + 1) -= 32;
    }
    while (a3 != a5);
    v9 = v14;
  }
  v12 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v11);
  return v9;
}

_QWORD *std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  _QWORD v6[3];
  char v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = a4;
  v9 = a4;
  v8 = a4;
  v6[0] = a1;
  v6[1] = &v8;
  v6[2] = &v9;
  if (a2 != a3)
  {
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      *(_OWORD *)v4 = *(_OWORD *)a2;
      v4[2] = *(_QWORD *)(a2 + 16);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      v4[3] = *(_QWORD *)(a2 + 24);
      v4 += 4;
      a2 += 32;
    }
    while (a2 != a3);
    v9 = v4;
  }
  v7 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v6);
  return v4;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>::operator()[abi:ne180100](a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    v3 = *(void **)v1;
    if (*(_QWORD *)v1)
    {
      *(_QWORD *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 32;
  }
}

uint64_t std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::~__split_buffer(uint64_t a1)
{
  std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::__destruct_at_end[abi:ne180100](a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;

  v2 = *(_QWORD *)(a1 + 16);
  while (v2 != a2)
  {
    v5 = *(void **)(v2 - 32);
    *(_QWORD *)(a1 + 16) = v2 - 32;
    if (v5)
    {
      *(_QWORD *)(v2 - 24) = v5;
      operator delete(v5);
      v2 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v2 -= 32;
    }
  }
}

void *std::vector<MTMPU::Point3D>::__swap_out_circular_buffer(void **a1, uint64_t a2, char *__src)
{
  void *v5;
  char *v6;
  void *v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  _BYTE *v11;
  uint64_t v12;
  int64_t v13;
  char *v14;
  void *v15;
  void *v16;

  v5 = *(void **)(a2 + 8);
  v6 = (char *)*a1;
  v7 = v5;
  if (*a1 != __src)
  {
    v8 = __src;
    v9 = *(_QWORD *)(a2 + 8);
    do
    {
      v10 = *(_OWORD *)(v8 - 24);
      v7 = (void *)(v9 - 24);
      *(_QWORD *)(v9 - 8) = *((_QWORD *)v8 - 1);
      *(_OWORD *)(v9 - 24) = v10;
      v8 -= 24;
      v9 -= 24;
    }
    while (v8 != v6);
  }
  *(_QWORD *)(a2 + 8) = v7;
  v11 = a1[1];
  v12 = *(_QWORD *)(a2 + 16);
  v13 = v11 - __src;
  if (v11 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v11 - __src);
    v7 = *(void **)(a2 + 8);
  }
  *(_QWORD *)(a2 + 16) = v12 + v13;
  v14 = (char *)*a1;
  *a1 = v7;
  *(_QWORD *)(a2 + 8) = v14;
  v15 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v15;
  v16 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)a2 = *(_QWORD *)(a2 + 8);
  return v5;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::Point3D>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(24 * a2);
}

LABEL_1:
  v10 = a1;
  while (2)
  {
    a1 = v10;
    v11 = a2 - v10;
    v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2 - v10) >> 3);
    switch(v12)
    {
      case 0:
      case 1:
        return;
      case 2:
        v61 = *(double *)(a2 - 24);
        v62 = *(double *)(a2 - 16);
        v60 = a2 - 24;
        v63 = a3[1];
        if ((v63 - v62) * (v63 - v62) + (*a3 - v61) * (*a3 - v61) < (v63 - *(double *)(v10 + 8))
                                                                   * (v63 - *(double *)(v10 + 8))
                                                                   + (*a3 - *(double *)v10) * (*a3 - *(double *)v10))
        {
          v129 = *(_QWORD *)(v10 + 16);
          v124 = *(_OWORD *)v10;
          v64 = *(_OWORD *)v60;
          *(_QWORD *)(v10 + 16) = *(_QWORD *)(v60 + 16);
          *(_OWORD *)v10 = v64;
          *(_QWORD *)(v60 + 16) = v129;
          *(_OWORD *)v60 = v124;
        }
        return;
      case 3:
        std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>((__int128 *)v10, (double *)(v10 + 24), (double *)(a2 - 24), a3);
        return;
      case 4:
        std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>(v10, v10 + 24, v10 + 48, a2 - 24, a3);
        return;
      case 5:
        std::__sort5_maybe_branchless[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *,0>((__n128 *)v10, (__n128 *)(v10 + 24), (__n128 *)(v10 + 48), (__n128 *)(v10 + 72), (__n128 *)(a2 - 24), a3);
        return;
      default:
        if (v11 <= 575)
        {
          if ((a5 & 1) != 0)
          {
            if (v10 != a2)
            {
              v65 = v10 + 24;
              if (v10 + 24 != a2)
              {
                v66 = 0;
                v67 = *a3;
                v68 = v10;
                do
                {
                  v69 = v65;
                  v70 = *(double *)(v68 + 24);
                  v71 = *(double *)(v68 + 32);
                  if ((a3[1] - v71) * (a3[1] - v71) + (v67 - v70) * (v67 - v70) < (a3[1] - *(double *)(v68 + 8))
                                                                                 * (a3[1] - *(double *)(v68 + 8))
                                                                                 + (v67 - *(double *)v68)
                                                                                 * (v67 - *(double *)v68))
                  {
                    v72 = *(_QWORD *)(v68 + 40);
                    v73 = v66;
                    while (1)
                    {
                      v74 = v10 + v73;
                      *(_OWORD *)(v74 + 24) = *(_OWORD *)(v10 + v73);
                      *(_QWORD *)(v74 + 40) = *(_QWORD *)(v10 + v73 + 16);
                      if (!v73)
                        break;
                      v75 = a3[1];
                      v73 -= 24;
                      if ((v75 - v71) * (v75 - v71) + (*a3 - v70) * (*a3 - v70) >= (v75 - *(double *)(v74 - 16))
                                                                                  * (v75 - *(double *)(v74 - 16))
                                                                                  + (*a3 - *(double *)(v74 - 24))
                                                                                  * (*a3 - *(double *)(v74 - 24)))
                      {
                        v76 = v10 + v73 + 24;
                        goto LABEL_67;
                      }
                    }
                    v76 = v10;
LABEL_67:
                    *(double *)v76 = v70;
                    *(double *)(v76 + 8) = v71;
                    *(_QWORD *)(v76 + 16) = v72;
                    v67 = *a3;
                  }
                  v65 = v69 + 24;
                  v66 += 24;
                  v68 = v69;
                }
                while (v69 + 24 != a2);
              }
            }
          }
          else if (v10 != a2)
          {
            v113 = v10 + 24;
            if (v10 + 24 != a2)
            {
              v114 = *a3;
              do
              {
                v115 = v113;
                v116 = *(double *)(a1 + 24);
                v117 = *(double *)(a1 + 32);
                if ((a3[1] - v117) * (a3[1] - v117) + (v114 - v116) * (v114 - v116) < (a3[1] - *(double *)(a1 + 8))
                                                                                     * (a3[1] - *(double *)(a1 + 8))
                                                                                     + (v114 - *(double *)a1)
                                                                                     * (v114 - *(double *)a1))
                {
                  v118 = *(_QWORD *)(a1 + 40);
                  do
                  {
                    *(_OWORD *)v113 = *(_OWORD *)(v113 - 24);
                    *(_QWORD *)(v113 + 16) = *(_QWORD *)(v113 - 8);
                    v119 = *(double *)(v113 - 48);
                    v120 = *(double *)(v113 - 40);
                    v113 -= 24;
                  }
                  while ((a3[1] - v117) * (a3[1] - v117) + (*a3 - v116) * (*a3 - v116) < (a3[1] - v120)
                                                                                        * (a3[1] - v120)
                                                                                        + (*a3 - v119) * (*a3 - v119));
                  *(double *)v113 = v116;
                  *(double *)(v113 + 8) = v117;
                  *(_QWORD *)(v113 + 16) = v118;
                  v114 = *a3;
                }
                v113 = v115 + 24;
                a1 = v115;
              }
              while (v115 + 24 != a2);
            }
          }
          return;
        }
        if (!a4)
        {
          if (v10 != a2)
          {
            v77 = (unint64_t)(v12 - 2) >> 1;
            v78 = v77;
            do
            {
              v79 = v78;
              if (v77 >= v78)
              {
                v80 = (2 * v78) | 1;
                v81 = v10 + 24 * v80;
                v82 = *a3;
                if (2 * v79 + 2 >= v12)
                {
                  v83 = a3[1];
                }
                else
                {
                  v83 = a3[1];
                  if ((v83 - *(double *)(v81 + 8)) * (v83 - *(double *)(v81 + 8))
                     + (v82 - *(double *)v81) * (v82 - *(double *)v81) < (v83 - *(double *)(v81 + 32))
                                                                       * (v83 - *(double *)(v81 + 32))
                                                                       + (v82 - *(double *)(v81 + 24))
                                                                       * (v82 - *(double *)(v81 + 24)))
                  {
                    v81 += 24;
                    v80 = 2 * v79 + 2;
                  }
                }
                v84 = v10 + 24 * v79;
                v85 = *(double *)v84;
                v86 = *(_OWORD *)(v84 + 8);
                if ((v83 - *(double *)(v81 + 8)) * (v83 - *(double *)(v81 + 8))
                   + (v82 - *(double *)v81) * (v82 - *(double *)v81) >= (v83 - *(double *)&v86)
                                                                      * (v83 - *(double *)&v86)
                                                                      + (v82 - *(double *)v84) * (v82 - *(double *)v84))
                {
                  do
                  {
                    v87 = v81;
                    v88 = *(_OWORD *)v81;
                    *(_QWORD *)(v84 + 16) = *(_QWORD *)(v81 + 16);
                    *(_OWORD *)v84 = v88;
                    if (v77 < v80)
                      break;
                    v89 = 2 * v80;
                    v80 = (2 * v80) | 1;
                    v81 = v10 + 24 * v80;
                    v90 = v89 + 2;
                    v91 = *a3;
                    v92 = a3[1];
                    if (v90 < v12
                      && (v92 - *(double *)(v81 + 8)) * (v92 - *(double *)(v81 + 8))
                       + (v91 - *(double *)v81) * (v91 - *(double *)v81) < (v92 - *(double *)(v81 + 32))
                                                                         * (v92 - *(double *)(v81 + 32))
                                                                         + (v91 - *(double *)(v81 + 24))
                                                                         * (v91 - *(double *)(v81 + 24)))
                    {
                      v81 += 24;
                      v80 = v90;
                    }
                    v84 = v87;
                  }
                  while ((v92 - *(double *)(v81 + 8)) * (v92 - *(double *)(v81 + 8))
                        + (v91 - *(double *)v81) * (v91 - *(double *)v81) >= (v92 - *(double *)&v86)
                                                                           * (v92 - *(double *)&v86)
                                                                           + (v91 - v85) * (v91 - v85));
                  *(double *)v87 = v85;
                  *(_OWORD *)(v87 + 8) = v86;
                }
              }
              v78 = v79 - 1;
            }
            while (v79);
            v93 = v11 / 0x18uLL;
            do
            {
              v94 = 0;
              v130 = *(_QWORD *)(v10 + 16);
              v125 = *(_OWORD *)v10;
              v95 = v10;
              do
              {
                v96 = v95;
                v95 += 24 * v94 + 24;
                v97 = 2 * v94;
                v94 = (2 * v94) | 1;
                v98 = v97 + 2;
                if (v98 < v93)
                {
                  v99 = a3[1];
                  if ((v99 - *(double *)(v95 + 8)) * (v99 - *(double *)(v95 + 8))
                     + (*a3 - *(double *)v95) * (*a3 - *(double *)v95) < (v99 - *(double *)(v95 + 32))
                                                                       * (v99 - *(double *)(v95 + 32))
                                                                       + (*a3 - *(double *)(v95 + 24))
                                                                       * (*a3 - *(double *)(v95 + 24)))
                  {
                    v95 += 24;
                    v94 = v98;
                  }
                }
                v100 = *(_OWORD *)v95;
                *(_QWORD *)(v96 + 16) = *(_QWORD *)(v95 + 16);
                *(_OWORD *)v96 = v100;
              }
              while (v94 <= (uint64_t)((unint64_t)(v93 - 2) >> 1));
              a2 -= 24;
              if (v95 == a2)
              {
                *(_QWORD *)(v95 + 16) = v130;
                *(_OWORD *)v95 = v125;
              }
              else
              {
                v101 = *(_OWORD *)a2;
                *(_QWORD *)(v95 + 16) = *(_QWORD *)(a2 + 16);
                *(_OWORD *)v95 = v101;
                *(_QWORD *)(a2 + 16) = v130;
                *(_OWORD *)a2 = v125;
                v102 = v95 - v10 + 24;
                if (v102 >= 25)
                {
                  v103 = (v102 / 0x18uLL - 2) >> 1;
                  v104 = v10 + 24 * v103;
                  v105 = *(double *)v95;
                  v106 = *(double *)(v95 + 8);
                  v107 = a3[1];
                  if ((v107 - *(double *)(v104 + 8)) * (v107 - *(double *)(v104 + 8))
                     + (*a3 - *(double *)v104) * (*a3 - *(double *)v104) < (v107 - v106) * (v107 - v106)
                                                                         + (*a3 - *(double *)v95)
                                                                         * (*a3 - *(double *)v95))
                  {
                    v108 = *(_QWORD *)(v95 + 16);
                    do
                    {
                      v109 = v104;
                      v110 = *(_OWORD *)v104;
                      *(_QWORD *)(v95 + 16) = *(_QWORD *)(v104 + 16);
                      *(_OWORD *)v95 = v110;
                      if (!v103)
                        break;
                      v103 = (v103 - 1) >> 1;
                      v104 = v10 + 24 * v103;
                      v111 = a3[1];
                      v95 = v109;
                    }
                    while ((v111 - *(double *)(v104 + 8)) * (v111 - *(double *)(v104 + 8))
                          + (*a3 - *(double *)v104) * (*a3 - *(double *)v104) < (v111 - v106) * (v111 - v106)
                                                                              + (*a3 - v105) * (*a3 - v105));
                    *(double *)v109 = v105;
                    *(double *)(v109 + 8) = v106;
                    *(_QWORD *)(v109 + 16) = v108;
                  }
                }
              }
            }
            while (v93-- > 2);
          }
          return;
        }
        v13 = (unint64_t)v12 >> 1;
        v14 = v10 + 24 * ((unint64_t)v12 >> 1);
        if ((unint64_t)v11 < 0xC01)
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>((__int128 *)(a1 + 24 * v13), (double *)a1, (double *)(a2 - 24), a3);
        }
        else
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>((__int128 *)a1, (double *)(a1 + 24 * v13), (double *)(a2 - 24), a3);
          v15 = 3 * v13;
          v16 = (double *)(a1 + 24 * v13 - 24);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>((__int128 *)(a1 + 24), v16, (double *)(a2 - 48), a3);
          v17 = (double *)(a1 + 24 + 8 * v15);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>((__int128 *)(a1 + 48), v17, (double *)(a2 - 72), a3);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>((__int128 *)v16, (double *)v14, v17, a3);
          v126 = *(_QWORD *)(a1 + 16);
          v121 = *(_OWORD *)a1;
          v18 = *(_QWORD *)(v14 + 16);
          *(_OWORD *)a1 = *(_OWORD *)v14;
          *(_QWORD *)(a1 + 16) = v18;
          *(_QWORD *)(v14 + 16) = v126;
          *(_OWORD *)v14 = v121;
        }
        --a4;
        v19 = *(double *)a1;
        if ((a5 & 1) == 0)
        {
          v21 = *(double *)(a1 + 8);
          v20 = *(_QWORD *)(a1 + 16);
          v22 = *a3;
          v23 = a3[1];
          v24 = (v23 - v21) * (v23 - v21) + (*a3 - v19) * (*a3 - v19);
          if ((v23 - *(double *)(a1 - 16)) * (v23 - *(double *)(a1 - 16))
             + (*a3 - *(double *)(a1 - 24)) * (*a3 - *(double *)(a1 - 24)) < v24)
            goto LABEL_11;
          if (v24 >= (v23 - *(double *)(a2 - 16)) * (v23 - *(double *)(a2 - 16))
                    + (v22 - *(double *)(a2 - 24)) * (v22 - *(double *)(a2 - 24)))
          {
            v46 = (double *)(a1 + 24);
            do
            {
              v10 = (unint64_t)v46;
              if ((unint64_t)v46 >= a2)
                break;
              v47 = (v23 - v46[1]) * (v23 - v46[1]) + (v22 - *v46) * (v22 - *v46);
              v46 += 3;
            }
            while (v24 >= v47);
          }
          else
          {
            v10 = a1;
            do
            {
              v44 = *(double *)(v10 + 24);
              v45 = *(double *)(v10 + 32);
              v10 += 24;
            }
            while (v24 >= (v23 - v45) * (v23 - v45) + (v22 - v44) * (v22 - v44));
          }
          v48 = a2;
          if (v10 < a2)
          {
            v48 = a2;
            do
            {
              v49 = *(double *)(v48 - 24);
              v50 = *(double *)(v48 - 16);
              v48 -= 24;
            }
            while (v24 < (v23 - v50) * (v23 - v50) + (v22 - v49) * (v22 - v49));
          }
          while (v10 < v48)
          {
            v128 = *(_QWORD *)(v10 + 16);
            v123 = *(_OWORD *)v10;
            v51 = *(_OWORD *)v48;
            *(_QWORD *)(v10 + 16) = *(_QWORD *)(v48 + 16);
            *(_OWORD *)v10 = v51;
            *(_QWORD *)(v48 + 16) = v128;
            *(_OWORD *)v48 = v123;
            v52 = *a3;
            v53 = a3[1];
            v54 = (v53 - v21) * (v53 - v21) + (*a3 - v19) * (*a3 - v19);
            do
            {
              v55 = *(double *)(v10 + 24);
              v56 = *(double *)(v10 + 32);
              v10 += 24;
            }
            while (v54 >= (v53 - v56) * (v53 - v56) + (v52 - v55) * (v52 - v55));
            do
            {
              v57 = *(double *)(v48 - 24);
              v58 = *(double *)(v48 - 16);
              v48 -= 24;
            }
            while (v54 < (v53 - v58) * (v53 - v58) + (v52 - v57) * (v52 - v57));
          }
          if (v10 - 24 != a1)
          {
            v59 = *(_OWORD *)(v10 - 24);
            *(_QWORD *)(a1 + 16) = *(_QWORD *)(v10 - 8);
            *(_OWORD *)a1 = v59;
          }
          a5 = 0;
          *(double *)(v10 - 24) = v19;
          *(double *)(v10 - 16) = v21;
          *(_QWORD *)(v10 - 8) = v20;
          continue;
        }
        v21 = *(double *)(a1 + 8);
        v20 = *(_QWORD *)(a1 + 16);
        v22 = *a3;
        v23 = a3[1];
        v24 = (v23 - v21) * (v23 - v21) + (*a3 - v19) * (*a3 - v19);
LABEL_11:
        v25 = 0;
        do
        {
          v26 = (v23 - *(double *)(a1 + v25 + 32)) * (v23 - *(double *)(a1 + v25 + 32))
              + (v22 - *(double *)(a1 + v25 + 24)) * (v22 - *(double *)(a1 + v25 + 24));
          v25 += 24;
        }
        while (v26 < v24);
        v27 = a1 + v25;
        v28 = a2;
        if (v25 == 24)
        {
          v28 = a2;
          do
          {
            if (v27 >= v28)
              break;
            v31 = *(double *)(v28 - 24);
            v32 = *(double *)(v28 - 16);
            v28 -= 24;
          }
          while ((v23 - v32) * (v23 - v32) + (v22 - v31) * (v22 - v31) >= v24);
        }
        else
        {
          do
          {
            v29 = *(double *)(v28 - 24);
            v30 = *(double *)(v28 - 16);
            v28 -= 24;
          }
          while ((v23 - v30) * (v23 - v30) + (v22 - v29) * (v22 - v29) >= v24);
        }
        v10 = a1 + v25;
        if (v27 < v28)
        {
          v33 = v28;
          do
          {
            v127 = *(_QWORD *)(v10 + 16);
            v122 = *(_OWORD *)v10;
            v34 = *(_OWORD *)v33;
            *(_QWORD *)(v10 + 16) = *(_QWORD *)(v33 + 16);
            *(_OWORD *)v10 = v34;
            *(_QWORD *)(v33 + 16) = v127;
            *(_OWORD *)v33 = v122;
            v35 = *a3;
            v36 = a3[1];
            v37 = (v36 - v21) * (v36 - v21) + (*a3 - v19) * (*a3 - v19);
            do
            {
              v38 = *(double *)(v10 + 24);
              v39 = *(double *)(v10 + 32);
              v10 += 24;
            }
            while ((v36 - v39) * (v36 - v39) + (v35 - v38) * (v35 - v38) < v37);
            do
            {
              v40 = *(double *)(v33 - 24);
              v41 = *(double *)(v33 - 16);
              v33 -= 24;
            }
            while ((v36 - v41) * (v36 - v41) + (v35 - v40) * (v35 - v40) >= v37);
          }
          while (v10 < v33);
        }
        if (v10 - 24 != a1)
        {
          v42 = *(_OWORD *)(v10 - 24);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(v10 - 8);
          *(_OWORD *)a1 = v42;
        }
        *(double *)(v10 - 24) = v19;
        *(double *)(v10 - 16) = v21;
        *(_QWORD *)(v10 - 8) = v20;
        if (v27 < v28)
        {
LABEL_30:
          std::__introsort<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *,false>(a1, v10 - 24, a3, a4, a5 & 1);
          a5 = 0;
          continue;
        }
        v43 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>(a1, v10 - 24, a3);
        if (!std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>(v10, a2, a3))
        {
          if (v43)
            continue;
          goto LABEL_30;
        }
        a2 = v10 - 24;
        if (!v43)
          goto LABEL_1;
        return;
    }
  }
}

__n128 std::__sort5_maybe_branchless[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *,0>(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5, double *a6)
{
  double v12;
  __n128 result;
  unint64_t v14;
  unint64_t v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  double v19;
  unint64_t v20;
  unint64_t v21;
  double v22;
  unint64_t v23;
  unint64_t v24;

  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>((uint64_t)a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)a4, a6);
  v12 = a6[1];
  result.n128_f64[0] = (v12 - a5->n128_f64[1]) * (v12 - a5->n128_f64[1])
                     + (*a6 - a5->n128_f64[0]) * (*a6 - a5->n128_f64[0]);
  if (result.n128_f64[0] < (v12 - a4->n128_f64[1]) * (v12 - a4->n128_f64[1])
                          + (*a6 - a4->n128_f64[0]) * (*a6 - a4->n128_f64[0]))
  {
    v14 = a4[1].n128_u64[0];
    result = *a4;
    v15 = a5[1].n128_u64[0];
    *a4 = *a5;
    a4[1].n128_u64[0] = v15;
    *a5 = result;
    a5[1].n128_u64[0] = v14;
    v16 = a6[1];
    result.n128_f64[0] = (v16 - a4->n128_f64[1]) * (v16 - a4->n128_f64[1])
                       + (*a6 - a4->n128_f64[0]) * (*a6 - a4->n128_f64[0]);
    if (result.n128_f64[0] < (v16 - a3->n128_f64[1]) * (v16 - a3->n128_f64[1])
                            + (*a6 - a3->n128_f64[0]) * (*a6 - a3->n128_f64[0]))
    {
      v17 = a3[1].n128_u64[0];
      result = *a3;
      v18 = a4[1].n128_u64[0];
      *a3 = *a4;
      a3[1].n128_u64[0] = v18;
      *a4 = result;
      a4[1].n128_u64[0] = v17;
      v19 = a6[1];
      result.n128_f64[0] = (v19 - a3->n128_f64[1]) * (v19 - a3->n128_f64[1])
                         + (*a6 - a3->n128_f64[0]) * (*a6 - a3->n128_f64[0]);
      if (result.n128_f64[0] < (v19 - a2->n128_f64[1]) * (v19 - a2->n128_f64[1])
                              + (*a6 - a2->n128_f64[0]) * (*a6 - a2->n128_f64[0]))
      {
        v20 = a2[1].n128_u64[0];
        result = *a2;
        v21 = a3[1].n128_u64[0];
        *a2 = *a3;
        a2[1].n128_u64[0] = v21;
        *a3 = result;
        a3[1].n128_u64[0] = v20;
        v22 = a6[1];
        result.n128_f64[0] = (v22 - a2->n128_f64[1]) * (v22 - a2->n128_f64[1])
                           + (*a6 - a2->n128_f64[0]) * (*a6 - a2->n128_f64[0]);
        if (result.n128_f64[0] < (v22 - a1->n128_f64[1]) * (v22 - a1->n128_f64[1])
                                + (*a6 - a1->n128_f64[0]) * (*a6 - a1->n128_f64[0]))
        {
          v23 = a1[1].n128_u64[0];
          result = *a1;
          v24 = a2[1].n128_u64[0];
          *a1 = *a2;
          a1[1].n128_u64[0] = v24;
          *a2 = result;
          a2[1].n128_u64[0] = v23;
        }
      }
    }
  }
  return result;
}

__int128 *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>(__int128 *result, double *a2, double *a3, double *a4)
{
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  double v20;
  uint64_t v21;

  v4 = a4[1];
  v5 = (v4 - a2[1]) * (v4 - a2[1]) + (*a4 - *a2) * (*a4 - *a2);
  v6 = (v4 - a3[1]) * (v4 - a3[1]) + (*a4 - *a3) * (*a4 - *a3);
  if (v5 >= (v4 - *((double *)result + 1)) * (v4 - *((double *)result + 1))
           + (*a4 - *(double *)result) * (*a4 - *(double *)result))
  {
    if (v6 < v5)
    {
      v10 = *((_QWORD *)a2 + 2);
      v11 = *(_OWORD *)a2;
      v12 = *((_QWORD *)a3 + 2);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *((_QWORD *)a2 + 2) = v12;
      *(_OWORD *)a3 = v11;
      *((_QWORD *)a3 + 2) = v10;
      v13 = a4[1];
      if ((v13 - a2[1]) * (v13 - a2[1]) + (*a4 - *a2) * (*a4 - *a2) < (v13 - *((double *)result + 1))
                                                                     * (v13 - *((double *)result + 1))
                                                                     + (*a4 - *(double *)result)
                                                                     * (*a4 - *(double *)result))
      {
        v14 = *((_QWORD *)result + 2);
        v15 = *result;
        v16 = *((_QWORD *)a2 + 2);
        *result = *(_OWORD *)a2;
        *((_QWORD *)result + 2) = v16;
        *(_OWORD *)a2 = v15;
        *((_QWORD *)a2 + 2) = v14;
      }
    }
  }
  else
  {
    if (v6 >= v5)
    {
      v17 = *((_QWORD *)result + 2);
      v18 = *result;
      v19 = *((_QWORD *)a2 + 2);
      *result = *(_OWORD *)a2;
      *((_QWORD *)result + 2) = v19;
      *(_OWORD *)a2 = v18;
      *((_QWORD *)a2 + 2) = v17;
      v20 = a4[1];
      if ((v20 - a3[1]) * (v20 - a3[1]) + (*a4 - *a3) * (*a4 - *a3) >= (v20 - a2[1]) * (v20 - a2[1])
                                                                      + (*a4 - *a2) * (*a4 - *a2))
        return result;
      v7 = *((_QWORD *)a2 + 2);
      v8 = *(_OWORD *)a2;
      v21 = *((_QWORD *)a3 + 2);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *((_QWORD *)a2 + 2) = v21;
    }
    else
    {
      v7 = *((_QWORD *)result + 2);
      v8 = *result;
      v9 = *((_QWORD *)a3 + 2);
      *result = *(_OWORD *)a3;
      *((_QWORD *)result + 2) = v9;
    }
    *(_OWORD *)a3 = v8;
    *((_QWORD *)a3 + 2) = v7;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>(uint64_t a1, uint64_t a2, double *a3)
{
  unint64_t v6;
  _BOOL8 result;
  __int128 *v8;
  double v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  double v17;
  __int128 v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;

  v6 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
  result = 1;
  switch(v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v8 = (__int128 *)(a2 - 24);
      v9 = a3[1];
      if ((v9 - *(double *)(a2 - 16)) * (v9 - *(double *)(a2 - 16))
         + (*a3 - *(double *)(a2 - 24)) * (*a3 - *(double *)(a2 - 24)) < (v9 - *(double *)(a1 + 8))
                                                                       * (v9 - *(double *)(a1 + 8))
                                                                       + (*a3 - *(double *)a1) * (*a3 - *(double *)a1))
      {
        v10 = *(_QWORD *)(a1 + 16);
        v11 = *(_OWORD *)a1;
        v12 = *(_QWORD *)(a2 - 8);
        *(_OWORD *)a1 = *v8;
        *(_QWORD *)(a1 + 16) = v12;
        *v8 = v11;
        *(_QWORD *)(a2 - 8) = v10;
      }
      return result;
    case 3uLL:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>((__int128 *)a1, (double *)(a1 + 24), (double *)(a2 - 24), a3);
      return 1;
    case 4uLL:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>(a1, a1 + 24, a1 + 48, a2 - 24, a3);
      return 1;
    case 5uLL:
      std::__sort5_maybe_branchless[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *,0>((__n128 *)a1, (__n128 *)(a1 + 24), (__n128 *)(a1 + 48), (__n128 *)(a1 + 72), (__n128 *)(a2 - 24), a3);
      return 1;
    default:
      v13 = (double *)(a1 + 48);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>((__int128 *)a1, (double *)(a1 + 24), (double *)(a1 + 48), a3);
      v14 = a1 + 72;
      if (a1 + 72 == a2)
        return 1;
      v15 = 0;
      v16 = 0;
      break;
  }
  while (1)
  {
    v17 = *(double *)v14;
    v18 = *(_OWORD *)(v14 + 8);
    v19 = a3[1];
    if ((v19 - *(double *)&v18) * (v19 - *(double *)&v18) + (*a3 - *(double *)v14) * (*a3 - *(double *)v14) < (v19 - v13[1]) * (v19 - v13[1]) + (*a3 - *v13) * (*a3 - *v13))
    {
      v20 = v15;
      while (1)
      {
        v21 = a1 + v20;
        *(_OWORD *)(v21 + 72) = *(_OWORD *)(a1 + v20 + 48);
        *(_QWORD *)(v21 + 88) = *(_QWORD *)(a1 + v20 + 64);
        if (v20 == -48)
          break;
        v22 = a3[1];
        v20 -= 24;
        if ((v22 - *(double *)&v18) * (v22 - *(double *)&v18) + (*a3 - v17) * (*a3 - v17) >= (v22
                                                                                             - *(double *)(v21 + 32))
                                                                                            * (v22
                                                                                             - *(double *)(v21 + 32))
                                                                                            + (*a3
                                                                                             - *(double *)(v21 + 24))
                                                                                            * (*a3
                                                                                             - *(double *)(v21 + 24)))
        {
          v23 = a1 + v20 + 72;
          goto LABEL_12;
        }
      }
      v23 = a1;
LABEL_12:
      *(double *)v23 = v17;
      *(_OWORD *)(v23 + 8) = v18;
      if (++v16 == 8)
        return v14 + 24 == a2;
    }
    v13 = (double *)v14;
    v15 += 24;
    v14 += 24;
    if (v14 == a2)
      return 1;
  }
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double *a5)
{
  double v10;
  __n128 result;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;

  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_4 &,MTMPU::Point3D *>((__int128 *)a1, (double *)a2, (double *)a3, a5);
  v10 = a5[1];
  result.n128_f64[0] = (v10 - *(double *)(a4 + 8)) * (v10 - *(double *)(a4 + 8))
                     + (*a5 - *(double *)a4) * (*a5 - *(double *)a4);
  if (result.n128_f64[0] < (v10 - *(double *)(a3 + 8)) * (v10 - *(double *)(a3 + 8))
                          + (*a5 - *(double *)a3) * (*a5 - *(double *)a3))
  {
    v12 = *(_QWORD *)(a3 + 16);
    result = *(__n128 *)a3;
    v13 = *(_QWORD *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_QWORD *)(a3 + 16) = v13;
    *(__n128 *)a4 = result;
    *(_QWORD *)(a4 + 16) = v12;
    v14 = a5[1];
    result.n128_f64[0] = (v14 - *(double *)(a3 + 8)) * (v14 - *(double *)(a3 + 8))
                       + (*a5 - *(double *)a3) * (*a5 - *(double *)a3);
    if (result.n128_f64[0] < (v14 - *(double *)(a2 + 8)) * (v14 - *(double *)(a2 + 8))
                            + (*a5 - *(double *)a2) * (*a5 - *(double *)a2))
    {
      v15 = *(_QWORD *)(a2 + 16);
      result = *(__n128 *)a2;
      v16 = *(_QWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_QWORD *)(a2 + 16) = v16;
      *(__n128 *)a3 = result;
      *(_QWORD *)(a3 + 16) = v15;
      v17 = a5[1];
      result.n128_f64[0] = (v17 - *(double *)(a2 + 8)) * (v17 - *(double *)(a2 + 8))
                         + (*a5 - *(double *)a2) * (*a5 - *(double *)a2);
      if (result.n128_f64[0] < (v17 - *(double *)(a1 + 8)) * (v17 - *(double *)(a1 + 8))
                              + (*a5 - *(double *)a1) * (*a5 - *(double *)a1))
      {
        v18 = *(_QWORD *)(a1 + 16);
        result = *(__n128 *)a1;
        v19 = *(_QWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = v19;
        *(__n128 *)a2 = result;
        *(_QWORD *)(a2 + 16) = v18;
      }
    }
  }
  return result;
}

void std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__clear[abi:ne180100]((uint64_t *)v2);
    operator delete(**a1);
  }
}

void sub_1DA4C2BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void sub_1DA4C37D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA4C3998(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA4C4240(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

BOOL MTMPUFloatEqualToFloat(double a1, double a2)
{
  return vabdd_f64(a2, a1) < 0.00000011920929;
}

BOOL MTMPUFloatGreaterThanOrEqualToFloat(double a1, double a2)
{
  return vabdd_f64(a2, a1) < 0.00000011920929 || a1 > a2;
}

BOOL MTMPUFloatLessThanOrEqualToFloat(double a1, double a2)
{
  return vabdd_f64(a2, a1) < 0.00000011920929 || a1 < a2;
}

double MTMPUFloatGetSafeScaleForValue(double result)
{
  void *v1;
  double v2;
  double v3;

  if (vabdd_f64(0.0, result) < 0.00000011920929)
  {
    objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "scale");
    v3 = v2;

    return v3;
  }
  return result;
}

double MTMPUFloatFloorForScale(double a1, double a2)
{
  double SafeScaleForValue;

  SafeScaleForValue = MTMPUFloatGetSafeScaleForValue(a2);
  return floor(SafeScaleForValue * a1) / SafeScaleForValue;
}

double MTMPUFloatRoundForScale(double a1, double a2)
{
  double SafeScaleForValue;

  SafeScaleForValue = MTMPUFloatGetSafeScaleForValue(a2);
  return round(SafeScaleForValue * a1) / SafeScaleForValue;
}

double MTMPUFloatCeilForScale(double a1, double a2)
{
  double SafeScaleForValue;

  SafeScaleForValue = MTMPUFloatGetSafeScaleForValue(a2);
  return ceil(SafeScaleForValue * a1) / SafeScaleForValue;
}

BOOL MTMPUSizeEqualToSize(double a1, double a2, double a3, double a4)
{
  _BOOL4 v4;

  v4 = vabdd_f64(a3, a1) < 0.00000011920929;
  return vabdd_f64(a4, a2) < 0.00000011920929 && v4;
}

CGFloat MTMPURectByApplyingUserInterfaceLayoutDirectionInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  double MaxX;
  double v17;
  double v18;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  if (primaryLayoutDirection() == 1)
  {
    v20.origin.x = a5;
    v20.origin.y = a6;
    v20.size.width = a7;
    v20.size.height = a8;
    MaxX = CGRectGetMaxX(v20);
    v21.origin.x = a1;
    v21.origin.y = a2;
    v21.size.width = a3;
    v21.size.height = a4;
    v17 = MaxX - CGRectGetMinX(v21);
    v22.origin.x = a1;
    v22.origin.y = a2;
    v22.size.width = a3;
    v22.size.height = a4;
    v18 = v17 - CGRectGetWidth(v22);
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetMinY(v23);
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    CGRectGetWidth(v24);
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    CGRectGetHeight(v25);
    return v18;
  }
  return a1;
}

uint64_t primaryLayoutDirection()
{
  void *v0;
  void *v1;
  uint64_t v2;

  -[objc_class sharedApplication](NSClassFromString(CFSTR("UIApplication")), "sharedApplication");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = v0;
  if (v0)
    v2 = objc_msgSend(v0, "userInterfaceLayoutDirection");
  else
    v2 = 0;

  return v2;
}

CGFloat MTMPURectByRemovingUserInterfaceLayoutDirectionInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  double MaxX;
  double v17;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  if (primaryLayoutDirection() == 1)
  {
    v19.origin.x = a5;
    v19.origin.y = a6;
    v19.size.width = a7;
    v19.size.height = a8;
    MaxX = CGRectGetMaxX(v19);
    v20.origin.x = a1;
    v20.origin.y = a2;
    v20.size.width = a3;
    v20.size.height = a4;
    v17 = MaxX - CGRectGetMaxX(v20);
    v21.origin.x = a1;
    v21.origin.y = a2;
    v21.size.width = a3;
    v21.size.height = a4;
    CGRectGetMinY(v21);
    v22.origin.x = a1;
    v22.origin.y = a2;
    v22.size.width = a3;
    v22.size.height = a4;
    CGRectGetWidth(v22);
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetHeight(v23);
    return v17;
  }
  return a1;
}

BOOL MTMPURectEqualToRect(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return vabdd_f64(a5, a1) < 0.00000011920929
      && vabdd_f64(a6, a2) < 0.00000011920929
      && vabdd_f64(a7, a3) < 0.00000011920929
      && vabdd_f64(a8, a4) < 0.00000011920929;
}

double MTMPUEdgeInsetsOutsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 - a6;
}

CGFloat MTMPUEdgeInsetsRectInsets(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  CGFloat v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  v18 = a6 - a2;
  CGRectGetMaxY(*(CGRect *)&a1);
  v19.origin.x = a5;
  v19.origin.y = a6;
  v19.size.width = a7;
  v19.size.height = a8;
  CGRectGetMaxY(v19);
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  CGRectGetMaxX(v20);
  v21.origin.x = a5;
  v21.origin.y = a6;
  v21.size.width = a7;
  v21.size.height = a8;
  CGRectGetMaxX(v21);
  return v18;
}

double MTMPULayoutLinearRelationMake(double a1, double a2, double a3, double a4)
{
  return (a4 - a2) / (a3 - a1);
}

double MTMPULayoutLinearRelationEvaluate(double a1, double a2, double a3)
{
  return a2 + a1 * a3;
}

id MTImageDownloaderArtworkDidLoadCacheKeys(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "userInfo");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("keys"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id MTImageDownloaderArtworkDidLoadEntityUuids(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "userInfo");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("uuids"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1DA4C6444(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1DA4C7600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA4C7868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void IMEnsureCanInitiatePlaybackInBackground()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  int v4;
  id v5;
  BOOL v6;
  NSObject *v7;
  id v8;
  uint8_t buf[4];
  void *v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "bundleIdentifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D48560], "sharedAVSystemController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *MEMORY[0x1E0D47E80];
  v8 = 0;
  v4 = objc_msgSend(v2, "setAttribute:forKey:error:", v1, v3, &v8);
  v5 = v8;

  if (v4)
    v6 = v5 == 0;
  else
    v6 = 0;
  if (!v6)
  {
    objc_msgSend(MEMORY[0x1E0D7F1C0], "player");
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v10 = v1;
      v11 = 2112;
      v12 = v5;
      _os_log_impl(&dword_1DA478000, v7, OS_LOG_TYPE_ERROR, "Error temporarily blessing %@ for playback initialization. %@", buf, 0x16u);
    }

  }
}

void IMRegisterAVSystemControllerNotifications(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  int v4;
  id v5;
  BOOL v6;
  NSObject *v7;
  id v8;
  uint8_t buf[4];
  id v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0D48560], "sharedAVSystemController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *MEMORY[0x1E0D48280];
  v8 = 0;
  v4 = objc_msgSend(v2, "setAttribute:forKey:error:", v1, v3, &v8);
  v5 = v8;

  if (v4)
    v6 = v5 == 0;
  else
    v6 = 0;
  if (!v6)
  {
    objc_msgSend(MEMORY[0x1E0D7F1C0], "player");
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v10 = v1;
      v11 = 2112;
      v12 = v5;
      _os_log_impl(&dword_1DA478000, v7, OS_LOG_TYPE_ERROR, "Error registering for notifications: %@. %@", buf, 0x16u);
    }

  }
}

uint64_t MTMPU::LayoutInterpolator::_EntriesContainerMakeInsertionError@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D2>)
{
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[11];
  char v19;
  uint64_t v20;

  *(_DWORD *)a3 = 0;
  v10 = a3 + 8;
  std::string::basic_string[abi:ne180100]<0>((_QWORD *)(a3 + 8), "");
  *(_DWORD *)a3 = a2;
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v18);
  switch(a2)
  {
    case 1:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)"Found perfect duplicate entry while trying to insert ", 53);
      MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(a4, a1, v18);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)". ", 2);
      v11 = "Doing nothing.";
      v12 = 14;
      goto LABEL_7;
    case 2:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)"Error: Found inconsistent duplicate entry while trying to insert ", 65);
      MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(a4, a1, v18);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)". ", 2);
      v13 = "Already have ";
      v14 = 13;
      goto LABEL_6;
    case 3:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)"Error: Attempting to insert ", 28);
      MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(a4, a1, v18);
      v13 = " with a specified secondary reference metric with another entry present that does not have a specified secon"
            "dary reference metric: ";
      v14 = 131;
      goto LABEL_6;
    case 4:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)"Error: Attempting to insert ", 28);
      MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(a4, a1, v18);
      v13 = " without a specified secondary reference metric with another entry present that does have a specified second"
            "ary reference metric: ";
      v14 = 130;
LABEL_6:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)v13, v14);
      MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(a5, a1, v18);
      v11 = ".";
      v12 = 1;
LABEL_7:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)v11, v12);
      break;
    default:
      break;
  }
  std::stringbuf::str();
  if (*(char *)(a3 + 31) < 0)
    operator delete(*(void **)v10);
  *(_OWORD *)v10 = v16;
  *(_QWORD *)(v10 + 16) = v17;
  v18[0] = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)((char *)v18 + *(_QWORD *)(v18[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
  v18[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v19 < 0)
    operator delete((void *)v18[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x1DF09F9AC](&v20);
}

void sub_1DA4CA900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  void **v4;
  uint64_t v5;
  va_list va;

  va_start(va, a4);
  std::ostringstream::~ostringstream((uint64_t)va);
  if (*(char *)(v5 + 31) < 0)
    operator delete(*v4);
  _Unwind_Resume(a1);
}

uint64_t std::ostringstream::basic_ostringstream[abi:ne180100](uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::ios_base *v6;

  v2 = MEMORY[0x1E0DE4FE0];
  v3 = MEMORY[0x1E0DE4FE0] + 64;
  *(_QWORD *)(a1 + 112) = MEMORY[0x1E0DE4FE0] + 64;
  v4 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v5 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + *(_QWORD *)(v4 - 24)) = v5;
  v6 = (std::ios_base *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 24));
  std::ios_base::init(v6, (void *)(a1 + 8));
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *(_QWORD *)a1 = v2 + 24;
  *(_QWORD *)(a1 + 112) = v3;
  std::streambuf::basic_streambuf();
  *(_QWORD *)(a1 + 8) = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_1DA4CA9F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x1DF09F9AC](v1);
  _Unwind_Resume(a1);
}

_QWORD *MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(double a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v5;

  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a3, (uint64_t)"(referenceMetric: ", 18);
  std::ostream::operator<<();
  if (!MTMPUFloatEqualToFloat(a1, -1.13427449e38))
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a3, (uint64_t)", secondaryReferenceMetric: ", 28);
    std::ostream::operator<<();
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a3, (uint64_t)", value: ", 9);
  v5 = (_QWORD *)std::ostream::operator<<();
  return std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)")", 1);
}

uint64_t std::ostringstream::~ostringstream(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DE4F60];
  v3 = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)a1 = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 8) = MEMORY[0x1E0DE4FB8] + 16;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1DF09F9AC](a1 + 112);
  return a1;
}

uint64_t MTMPU::LayoutInterpolator::EntriesContainer::EntriesContainer(uint64_t this, double a2)
{
  *(_QWORD *)this = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(double *)(this + 24) = a2;
  return this;
}

{
  *(_QWORD *)this = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(double *)(this + 24) = a2;
  return this;
}

_QWORD *MTMPU::LayoutInterpolator::EntriesContainer::copyEntriesVector@<X0>(MTMPU::LayoutInterpolator::EntriesContainer *this@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return std::vector<MTMPU::LayoutInterpolator::Entry>::__init_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(a2, *(const void **)this, *((_QWORD *)this + 1), (uint64_t)(*((_QWORD *)this + 1) - *(_QWORD *)this) >> 4);
}

uint64_t MTMPU::LayoutInterpolator::EntriesContainer::entriesCount(MTMPU::LayoutInterpolator::EntriesContainer *this)
{
  return (uint64_t)(*((_QWORD *)this + 1) - *(_QWORD *)this) >> 4;
}

double MTMPU::LayoutInterpolator::EntriesContainer::primaryReferenceMetric(MTMPU::LayoutInterpolator::EntriesContainer *this)
{
  return *((double *)this + 3);
}

void MTMPU::LayoutInterpolator::EntriesContainer::insertEntry(MTMPU::LayoutInterpolator::EntriesContainer *this@<X0>, Entry a2@<0:D0, 8:D1>, uint64_t a3@<X8>)
{
  double var1;
  double var0;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  int v12;
  double v13;
  double *v14;
  double *v15;
  unint64_t v16;
  unint64_t v17;
  double *v18;
  double *v19;
  double v20;
  int v21;
  int v22;
  __int128 v23;
  uint64_t v24;
  Entry v25;

  var1 = a2.var1;
  var0 = a2.var0;
  v25 = a2;
  *(_DWORD *)a3 = 0;
  v7 = a3 + 8;
  std::string::basic_string[abi:ne180100]<0>((_QWORD *)(a3 + 8), "");
  v9 = *(_QWORD *)this;
  v8 = *((_QWORD *)this + 1);
  if (MTMPUFloatEqualToFloat(var0, -1.13427449e38))
  {
    if (v8 == v9)
      goto LABEL_15;
    v11 = **(double **)this;
    v10 = *(double *)(*(_QWORD *)this + 8);
    if (MTMPUFloatEqualToFloat(v11, -1.13427449e38))
    {
      if (MTMPUFloatEqualToFloat(v10, var1))
        v12 = 1;
      else
        v12 = 2;
      MTMPU::LayoutInterpolator::_EntriesContainerMakeInsertionError((uint64_t)this, v12, (uint64_t)&v22, var0, v11);
    }
    else
    {
      MTMPU::LayoutInterpolator::_EntriesContainerMakeInsertionError((uint64_t)this, 4, (uint64_t)&v22, var0, v11);
    }
  }
  else
  {
    if (v8 == v9)
      goto LABEL_15;
    v13 = **(double **)this;
    if (!MTMPUFloatEqualToFloat(v13, -1.13427449e38))
      goto LABEL_15;
    MTMPU::LayoutInterpolator::_EntriesContainerMakeInsertionError((uint64_t)this, 3, (uint64_t)&v22, var0, v13);
  }
  *(_DWORD *)a3 = v22;
  if (*(char *)(a3 + 31) < 0)
    operator delete(*(void **)v7);
  *(_OWORD *)v7 = v23;
  *(_QWORD *)(v7 + 16) = v24;
LABEL_15:
  if (!*(_DWORD *)a3)
  {
    v15 = *(double **)this;
    v14 = (double *)*((_QWORD *)this + 1);
    if (v14 == *(double **)this)
    {
      v15 = (double *)*((_QWORD *)this + 1);
    }
    else
    {
      v16 = ((uint64_t)v14 - *(_QWORD *)this) >> 4;
      do
      {
        v17 = v16 >> 1;
        v18 = &v15[2 * (v16 >> 1)];
        v20 = *v18;
        v19 = v18 + 2;
        v16 += ~(v16 >> 1);
        if (v20 < var0)
          v15 = v19;
        else
          v16 = v17;
      }
      while (v16);
    }
    if (v14 == v15 || !MTMPUFloatEqualToFloat(*v15, var0))
    {
      std::vector<MTMPU::LayoutInterpolator::Entry>::insert((uint64_t)this, (char *)v15, (char *)&v25);
    }
    else
    {
      if (MTMPUFloatEqualToFloat(v15[1], v25.var1))
        v21 = 1;
      else
        v21 = 2;
      MTMPU::LayoutInterpolator::_EntriesContainerMakeInsertionError((uint64_t)this, v21, (uint64_t)&v22, v25.var0, *v15);
      *(_DWORD *)a3 = v22;
      if (*(char *)(a3 + 31) < 0)
        operator delete(*(void **)v7);
      *(_OWORD *)v7 = v23;
      *(_QWORD *)(v7 + 16) = v24;
    }
  }
}

char *std::vector<MTMPU::LayoutInterpolator::Entry>::insert(uint64_t a1, char *__src, char *a3)
{
  char *v3;
  char *v4;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _OWORD *v11;
  __int128 v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  void *__p;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v3 = a3;
  v4 = __src;
  v6 = *(char **)(a1 + 8);
  v8 = a1 + 16;
  v7 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    v13 = *(char **)a1;
    v14 = ((uint64_t)&v6[-*(_QWORD *)a1] >> 4) + 1;
    if (v14 >> 60)
      std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
    v15 = __src - v13;
    v16 = (__src - v13) >> 4;
    v17 = v7 - (_QWORD)v13;
    if (v17 >> 3 > v14)
      v14 = v17 >> 3;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0)
      v18 = 0xFFFFFFFFFFFFFFFLL;
    else
      v18 = v14;
    v30 = a1 + 16;
    if (v18)
      v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::Entry>>(a1 + 16, v18);
    else
      v19 = 0;
    v20 = &v19[16 * v16];
    __p = v19;
    v27 = v20;
    v28 = v20;
    v29 = &v19[16 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4)
          v22 = 1;
        else
          v22 = v15 >> 3;
        v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::Entry>>(v8, v22);
        v20 = &v23[16 * (v22 >> 2)];
        __p = v23;
        v27 = v20;
        v29 = &v23[16 * v24];
        if (v19)
          operator delete(v19);
      }
      else
      {
        v21 = v16 + 2;
        if (v16 >= -1)
          v21 = v16 + 1;
        v20 -= 16 * (v21 >> 1);
        v27 = v20;
      }
    }
    *(_OWORD *)v20 = *(_OWORD *)v3;
    v28 = v20 + 16;
    v4 = (char *)std::vector<MTMPU::LayoutInterpolator::Entry>::__swap_out_circular_buffer((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27)
      v28 += (v27 - v28 + 15) & 0xFFFFFFFFFFFFFFF0;
    if (__p)
      operator delete(__p);
  }
  else if (__src == v6)
  {
    *(_OWORD *)__src = *(_OWORD *)a3;
    *(_QWORD *)(a1 + 8) = __src + 16;
  }
  else
  {
    v9 = __src + 16;
    v10 = v6 - 16;
    v11 = *(_OWORD **)(a1 + 8);
    while (v10 < v6)
    {
      v12 = *(_OWORD *)v10;
      v10 += 16;
      *v11++ = v12;
    }
    *(_QWORD *)(a1 + 8) = v11;
    if (v6 != v9)
      memmove(&v6[-16 * ((v6 - v9) >> 4)], __src, v6 - v9);
    if (v4 <= v3)
      v3 += 16 * (*(_QWORD *)(a1 + 8) > (unint64_t)v3);
    *(_OWORD *)v4 = *(_OWORD *)v3;
  }
  return v4;
}

void sub_1DA4CAFF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double MTMPU::LayoutInterpolator::EntriesContainer::valueForSecondaryReferenceMetric(double **this, double a2)
{
  double *v2;
  double *v3;
  unint64_t v4;
  unint64_t v7;
  double *v8;
  double *v9;
  double v10;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *exception;

  v3 = *this;
  v2 = this[1];
  v4 = ((char *)v2 - (char *)*this) >> 4;
  if (v4 == 1)
    return v3[1];
  if (!v4)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Can't query value from empty entries container.");
  }
  if (v2 == v3)
    goto LABEL_11;
  do
  {
    v7 = v4 >> 1;
    v8 = &v3[2 * (v4 >> 1)];
    v10 = *v8;
    v9 = v8 + 2;
    v4 += ~(v4 >> 1);
    if (v10 < a2)
      v3 = v9;
    else
      v4 = v7;
  }
  while (v4);
  if (v3 == v2)
  {
LABEL_11:
    v12 = *(v2 - 4);
    v13 = *(v2 - 3);
    v14 = *(v2 - 2);
    v15 = *(v2 - 1);
  }
  else
  {
    if (MTMPUFloatEqualToFloat(*v3, a2))
      return v3[1];
    if (v3 == *this)
    {
      v12 = *v3;
      v13 = v3[1];
      v14 = v3[2];
      v15 = v3[3];
    }
    else
    {
      v12 = *(v3 - 2);
      v13 = *(v3 - 1);
      v14 = *v3;
      v15 = v3[1];
    }
  }
  v16 = MTMPULayoutLinearRelationMake(v12, v13, v14, v15);
  return MTMPULayoutLinearRelationEvaluate(v16, v17, a2);
}

void sub_1DA4CB12C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  const std::locale::facet *v10;
  uint64_t v11;
  _BYTE v13[16];
  std::locale v14;

  MEMORY[0x1DF09F934](v13, a1);
  if (v13[0])
  {
    v6 = (uint64_t)a1 + *(_QWORD *)(*a1 - 24);
    v7 = *(_QWORD *)(v6 + 40);
    v8 = *(_DWORD *)(v6 + 8);
    v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)));
      v10 = std::locale::use_facet(&v14, MEMORY[0x1E0DE4A90]);
      v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20)
      v11 = a2 + a3;
    else
      v11 = a2;
    if (!std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(v7, a2, v11, a2 + a3, v6, (char)v9))
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 5);
  }
  MEMORY[0x1DF09F940](v13);
  return a1;
}

void sub_1DA4CB24C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  _QWORD *v12;

  MEMORY[0x1DF09F940](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(_QWORD *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x1DA4CB22CLL);
}

void sub_1DA4CB294(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6;
  uint64_t v11;
  int64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v18;

  v6 = a1;
  if (a1)
  {
    v11 = *(_QWORD *)(a5 + 24);
    if (v11 <= a4 - a2)
      v12 = 0;
    else
      v12 = v11 - (a4 - a2);
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 96))(a1) != a3 - a2)
      return 0;
    if (v12 >= 1)
    {
      std::string::basic_string[abi:ne180100](__p, v12, __c);
      v13 = v18 >= 0 ? __p : (void **)__p[0];
      v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(_QWORD *)v6 + 96))(v6, v13, v12);
      if (v18 < 0)
        operator delete(__p[0]);
      if (v14 != v12)
        return 0;
    }
    v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, a3, v15) == v15)
      *(_QWORD *)(a5 + 24) = 0;
    else
      return 0;
  }
  return v6;
}

void sub_1DA4CB3C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *std::string::basic_string[abi:ne180100](_QWORD *__b, size_t __len, int __c)
{
  void *v6;
  size_t v7;
  size_t v8;

  if (__len >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:ne180100]();
  if (__len >= 0x17)
  {
    v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v7 = __len | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((_BYTE *)__b + 23) = __len;
    v6 = __b;
    if (!__len)
      goto LABEL_9;
  }
  memset(v6, __c, __len);
LABEL_9:
  *((_BYTE *)v6 + __len) = 0;
  return __b;
}

void *std::vector<MTMPU::LayoutInterpolator::Entry>::__swap_out_circular_buffer(void **a1, uint64_t a2, char *__src)
{
  void *v5;
  char *v6;
  void *v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int64_t v12;
  char *v13;
  void *v14;
  void *v15;

  v5 = *(void **)(a2 + 8);
  v6 = (char *)*a1;
  v7 = v5;
  if (*a1 != __src)
  {
    v8 = __src;
    v9 = *(_QWORD *)(a2 + 8);
    do
    {
      v7 = (void *)(v9 - 16);
      *(_OWORD *)(v9 - 16) = *((_OWORD *)v8 - 1);
      v8 -= 16;
      v9 -= 16;
    }
    while (v8 != v6);
  }
  *(_QWORD *)(a2 + 8) = v7;
  v10 = a1[1];
  v11 = *(_QWORD *)(a2 + 16);
  v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    v7 = *(void **)(a2 + 8);
  }
  *(_QWORD *)(a2 + 16) = v11 + v12;
  v13 = (char *)*a1;
  *a1 = v7;
  *(_QWORD *)(a2 + 8) = v13;
  v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v14;
  v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)a2 = *(_QWORD *)(a2 + 8);
  return v5;
}

void sub_1DA4CC8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *MTMPUFontTextStyleGetDescription(uint64_t a1)
{
  return _MTMPUFontTextStyleGetDescriptionAndCustomStyleStatus(a1, 0);
}

const __CFString *_MTMPUFontTextStyleGetDescriptionAndCustomStyleStatus(uint64_t a1, char *a2)
{
  char v2;
  const __CFString *result;
  BOOL v4;

  switch(a1)
  {
    case 0:
      v2 = 0;
      result = CFSTR("body");
      break;
    case 1:
      v2 = 0;
      result = CFSTR("headline");
      break;
    case 2:
      v2 = 0;
      result = CFSTR("subheadline");
      break;
    case 3:
      v2 = 0;
      result = CFSTR("footnote");
      break;
    case 4:
      v2 = 0;
      result = CFSTR("caption-1");
      break;
    case 5:
      v2 = 0;
      result = CFSTR("caption-2");
      break;
    case 6:
      v2 = 0;
      result = CFSTR("title-0");
      break;
    case 7:
      v2 = 0;
      result = CFSTR("title-1");
      break;
    case 8:
      v2 = 0;
      result = CFSTR("title-2");
      break;
    case 9:
      v2 = 0;
      result = CFSTR("title-3");
      break;
    case 10:
      v2 = 0;
      result = CFSTR("headline-1");
      break;
    case 11:
      v2 = 0;
      result = CFSTR("headline-2");
      break;
    case 12:
      v2 = 0;
      result = CFSTR("subheadline-1");
      break;
    case 13:
      v2 = 0;
      result = CFSTR("subheadline-2");
      break;
    case 14:
      v2 = 0;
      result = CFSTR("callout");
      break;
    case 15:
      v2 = 0;
      result = CFSTR("footnote-1");
      break;
    case 16:
      v2 = 0;
      result = CFSTR("footnote-2");
      break;
    case 17:
      v2 = 1;
      result = CFSTR("subheadline-3");
      break;
    case 18:
      v2 = 1;
      result = CFSTR("now-playing-title-1");
      break;
    case 19:
      v2 = 0;
      result = CFSTR("music-title-2");
      break;
    case 20:
      v2 = 0;
      result = CFSTR("music-title-2-multiline");
      break;
    case 21:
      v2 = 1;
      result = CFSTR("page-header");
      break;
    case 22:
      v2 = 1;
      result = CFSTR("page-header-large");
      break;
    case 23:
      v2 = 1;
      result = CFSTR("page-header-mid-large");
      break;
    case 24:
      v2 = 1;
      result = CFSTR("page-header-small");
      break;
    case 25:
      v2 = 1;
      result = CFSTR("page-header-compact-supertitle");
      break;
    case 26:
      v2 = 1;
      result = CFSTR("page-header-compact-subtitle");
      break;
    case 27:
      v2 = 1;
      result = CFSTR("page-header-regular-subtitle");
      break;
    default:
      v4 = a1 == 1000;
      if (a1 == 1000)
        result = CFSTR("system-font");
      else
        result = 0;
      v2 = v4;
      break;
  }
  if (a2)
    *a2 = v2;
  return result;
}

__CFString *MTMPUFontWeightGetDescription(unint64_t a1)
{
  if (a1 > 8)
    return 0;
  else
    return off_1EA0C5C98[a1];
}

__CFString *MTMPUFontLeadingAdjustmentGetDescription(unint64_t a1)
{
  if (a1 > 2)
    return 0;
  else
    return off_1EA0C5CE0[a1];
}

void sub_1DA4CEBEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t CoreTextLibrary_0()
{
  uint64_t v0;
  void *v2;

  if (!CoreTextLibraryCore_frameworkLibrary_0)
    CoreTextLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  v0 = CoreTextLibraryCore_frameworkLibrary_0;
  if (!CoreTextLibraryCore_frameworkLibrary_0)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

uint64_t _MPUApplicationDefaultsDidChangeNotification(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_defaultsDidChange");
}

void sub_1DA4D007C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void sub_1DA4D0314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA4D0568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA4D084C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t IMAccessibilitySetShouldInstallCategories(uint64_t result)
{
  _AXShouldInstallIMCategories = result;
  return result;
}

Class IMAccessibilityInitialize()
{
  Class result;

  if (_AXShouldInstallIMCategories)
  {
    IMAccessibilityInstallSafeCategory(CFSTR("IMUIViewAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMAccessibilityLabelAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMExpandingLabelAccessibility"));
    return IMAccessibilityInstallSafeCategory(CFSTR("IMSearchFieldAccessibility"));
  }
  return result;
}

double IMAXFrameToBounds(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;
  void *v10;
  double v11;
  double v12;

  v9 = a1;
  objc_msgSend(v9, "window");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "convertRect:fromWindow:", 0, a2, a3, a4, a5);
  objc_msgSend(v9, "convertRect:fromView:", v10);
  v12 = v11;

  return v12;
}

void IMAXPerformSafeBlock(void *a1)
{
  void (**v1)(void);

  v1 = a1;
  v1[2]();

}

void sub_1DA4D1038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, int a10, __int16 a11, __int16 a12, uint64_t a13)
{
  id v13;
  NSObject *v14;
  id v15;
  id v16;
  void *v17;

  if (a2 == 1)
  {
    v13 = objc_begin_catch(exception_object);
    objc_msgSend(MEMORY[0x1E0D7F1C0], "accessibility");
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v13, "name");
      v15 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "reason");
      v16 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "callStackSymbols");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(a9) = 138412802;
      *(_QWORD *)((char *)&a9 + 4) = v15;
      WORD6(a9) = 2112;
      *(_QWORD *)((char *)&a9 + 14) = v16;
      a12 = 2112;
      a13 = (uint64_t)v17;
      _os_log_impl(&dword_1DA478000, v14, OS_LOG_TYPE_ERROR, "Caught exception '%@' while performing safe block; reason: '%@'. Stacktrace: %@.",
        (uint8_t *)&a9,
        0x20u);

    }
    objc_end_catch();
    JUMPOUT(0x1DA4D1000);
  }
  _Unwind_Resume(exception_object);
}

double CGPointMultiply(double a1, double a2, double a3)
{
  return a1 * a3;
}

double CGRectFitRectInRect(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8;
  double v9;
  double v10;
  float v12;
  float v13;
  float v14;
  float v15;
  double v16;
  double v17;
  double result;

  v8 = *MEMORY[0x1E0C9D648];
  v9 = *(double *)(MEMORY[0x1E0C9D648] + 8);
  v10 = 0.0;
  if (a3 != *MEMORY[0x1E0C9D820] || a4 != *(double *)(MEMORY[0x1E0C9D820] + 8))
  {
    v12 = a7;
    v13 = a8;
    v14 = a3;
    v15 = a4;
    v10 = fminf(v12 / v14, v13 / v15);
  }
  v16 = a3 * v10;
  v17 = a4 * v10;
  if (a7 > v16)
    v8 = (a7 - v16) * 0.5;
  if (a8 > v17)
    v9 = (a8 - v17) * 0.5;
  *(_QWORD *)&result = (unint64_t)CGRectIntegral(*(CGRect *)&v8);
  return result;
}

float CGSizeScaleThatFitsInCGSize(double a1, double a2, double a3, double a4)
{
  float v5;
  float v6;
  float v7;
  float v8;

  if (a1 == *MEMORY[0x1E0C9D820] && a2 == *(double *)(MEMORY[0x1E0C9D820] + 8))
    return 0.0;
  v5 = a3;
  v6 = a4;
  v7 = a1;
  v8 = a2;
  return fminf(v5 / v7, v6 / v8);
}

double CGRectCenterRectInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  double MidX;
  double v16;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  v19.origin.x = a5;
  v19.origin.y = a6;
  v19.size.width = a7;
  v19.size.height = a8;
  MidX = CGRectGetMidX(v19);
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  v16 = MidX - CGRectGetWidth(v20) * 0.5;
  v21.origin.x = a5;
  v21.origin.y = a6;
  v21.size.width = a7;
  v21.size.height = a8;
  CGRectGetMidY(v21);
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  CGRectGetHeight(v22);
  return v16;
}

double CGRectGetCenter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v8;
  CGRect v10;

  v8 = ceil(CGRectGetMidX(*(CGRect *)&a1));
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMidY(v10);
  return v8;
}

double CGRectMultiply(double result, double a2, double a3, double a4, double a5)
{
  if (a5 != 1.0)
    return result * a5;
  return result;
}

double CGRectRoundUp(double a1)
{
  return ceil(a1);
}

float CGSizeScaleThatFillsInCGSize(double a1, double a2, double a3, double a4)
{
  float v5;
  float v6;
  float v7;
  float v8;

  if (a1 == *MEMORY[0x1E0C9D820] && a2 == *(double *)(MEMORY[0x1E0C9D820] + 8))
    return 0.0;
  v5 = a3;
  v6 = a4;
  v7 = a1;
  v8 = a2;
  return fmaxf(v5 / v7, v6 / v8);
}

double CGSizeScaledToFitInSize(double a1, double a2, double a3, double a4)
{
  double v4;
  float v6;
  float v7;
  float v8;
  float v9;

  v4 = 0.0;
  if (a1 != *MEMORY[0x1E0C9D820] || a2 != *(double *)(MEMORY[0x1E0C9D820] + 8))
  {
    v6 = a3;
    v7 = a4;
    v8 = a1;
    v9 = a2;
    v4 = fminf(v6 / v8, v7 / v9);
  }
  return a1 * v4;
}

double CGSizeScale(double a1, double a2, double a3)
{
  return a1 * a3;
}

double CGSizeScaledToFillInSize(double a1, double a2, double a3, double a4)
{
  double v4;
  float v6;
  float v7;
  float v8;
  float v9;

  v4 = 0.0;
  if (a1 != *MEMORY[0x1E0C9D820] || a2 != *(double *)(MEMORY[0x1E0C9D820] + 8))
  {
    v6 = a3;
    v7 = a4;
    v8 = a1;
    v9 = a2;
    v4 = fmaxf(v6 / v8, v7 / v9);
  }
  return a1 * v4;
}

double CGSizeRound(double a1)
{
  return round(a1);
}

double CGSizeMakeEvenSize(double result)
{
  if (((int)result & 1) != 0)
    return result + -1.0;
  return result;
}

double CGSizeRotate(double a1, double a2)
{
  return a2;
}

double CGSizeMin(double result, double a2, double a3, double a4)
{
  _BOOL4 v4;

  v4 = a3 > result;
  if (a4 > a2)
    v4 = 1;
  if (!v4)
    return a3;
  return result;
}

double CGRectByReplacingX(double a1, double a2, double a3, double a4, double a5)
{
  return a5;
}

double CGRectByReplacingOrigin(double a1, double a2, double a3, double a4, double a5)
{
  return a5;
}

void IMImageWrite(UIImage *a1)
{
  UIImageWriteToSavedPhotosAlbum(a1, 0, 0, 0);
}

double IMDegreeToRadian(double a1)
{
  return a1 * 3.14159265 / 180.0;
}

double IMRadianToDegree(double a1)
{
  return a1 * 180.0 / 3.14159265;
}

double IMRoundToPixel(double a1)
{
  double v2;
  void *v3;
  uint64_t v4;

  v2 = *(double *)&IMRoundToPixel_scale;
  if (*(double *)&IMRoundToPixel_scale == -1.0)
  {
    objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen", *(double *)&IMRoundToPixel_scale);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "scale");
    IMRoundToPixel_scale = v4;

    v2 = *(double *)&IMRoundToPixel_scale;
  }
  return round(v2 * a1) / v2;
}

void CGRectEdgePointAtAngle(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  __double2 v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  CGRectGetMidX(*(CGRect *)&a1);
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  CGRectGetMidY(v11);
  v10 = __sincos_stret(a5);
  if (v10.__sinval <= 0.0000999999975)
  {
    if (v10.__sinval < -0.0000999999975)
    {
      v14.origin.x = a1;
      v14.origin.y = a2;
      v14.size.width = a3;
      v14.size.height = a4;
      CGRectGetMinY(v14);
      v15.origin.x = a1;
      v15.origin.y = a2;
      v15.size.width = a3;
      v15.size.height = a4;
      CGRectGetMinY(v15);
    }
  }
  else
  {
    v12.origin.x = a1;
    v12.origin.y = a2;
    v12.size.width = a3;
    v12.size.height = a4;
    CGRectGetMaxY(v12);
    v13.origin.x = a1;
    v13.origin.y = a2;
    v13.size.width = a3;
    v13.size.height = a4;
    CGRectGetMaxY(v13);
  }
  if (v10.__cosval <= 0.0000999999975)
  {
    if (v10.__cosval < -0.0000999999975)
    {
      v18.origin.x = a1;
      v18.origin.y = a2;
      v18.size.width = a3;
      v18.size.height = a4;
      CGRectGetMinX(v18);
      v19.origin.x = a1;
      v19.origin.y = a2;
      v19.size.width = a3;
      v19.size.height = a4;
      CGRectGetMinX(v19);
    }
  }
  else
  {
    v16.origin.x = a1;
    v16.origin.y = a2;
    v16.size.width = a3;
    v16.size.height = a4;
    CGRectGetMaxX(v16);
    v17.origin.x = a1;
    v17.origin.y = a2;
    v17.size.width = a3;
    v17.size.height = a4;
    CGRectGetMaxX(v17);
  }
}

double IMRectCenteredIntegralRectScale(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v16;
  double v17;
  double v18;
  BOOL v19;
  double v20;
  double v21;
  double v22;

  v16 = a5 + (a7 - a3) * 0.5;
  v17 = fabs(a9);
  v18 = a9;
  if (v17 < 0.00000011920929)
  {
    if (IMAdjustToScale_onceToken != -1)
      dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
    v18 = *(double *)&IMAdjustToScale___s;
  }
  v19 = v18 == 1.0;
  v20 = round(v16 * v18) / v18;
  v21 = round(v16);
  if (v19)
    v22 = v21;
  else
    v22 = v20;
  if (v17 < 0.00000011920929 && IMAdjustToScale_onceToken != -1)
    dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
  return v22;
}

void IMRectCenteredXInRectScale(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  if (fabs(a9) < 0.00000011920929 && IMAdjustToScale_onceToken != -1)
    dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
}

double IMRectCenteredYInRectScale(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  if (fabs(a9) < 0.00000011920929 && IMAdjustToScale_onceToken != -1)
    dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
  return a1;
}

void IMRectCenteredAboutPointScale(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  double v7;

  v7 = fabs(a7);
  if (v7 < 0.00000011920929 && IMAdjustToScale_onceToken != -1)
    dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
  if (v7 < 0.00000011920929 && IMAdjustToScale_onceToken != -1)
    dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
}

void sub_1DA4D3D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA4D431C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA4D4414(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1DA4D65BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __IMAccessibilityValidateInstanceMethodArguments(objc_method *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v12;
  id v13;
  int v14;
  const char **v15;
  const char *v16;
  void *v17;
  void *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  const char *v23;
  const char **v24;

  v12 = a2;
  v13 = a3;
  if (method_getNumberOfArguments(a1) - 2 != (_DWORD)a4)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Argument count is different for method: -[%@ %@]. Actual: %d, Stated: %d"), v12, v13, a4, method_getNumberOfArguments(a1));

  }
  v24 = (const char **)&a9;
  if ((int)a4 >= 1)
  {
    v14 = 0;
    do
    {
      v15 = v24++;
      v16 = *v15;
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", *v15);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("@\"%@\""), v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();

      v19 = method_copyArgumentType(a1, v14 + 2);
      v20 = v19;
      if (v16)
        v21 = v19 == 0;
      else
        v21 = 1;
      v22 = v21 || v18 == 0;
      if (v22 || strcmp(v16, v19) && strcmp((const char *)objc_msgSend(objc_retainAutorelease(v18), "UTF8String"), v20))
      {
        v23 = "_";
        if (v20)
          v23 = v20;
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Argument type is different for method: -[%@ %@]. Actual: '%s', Stated: '%s'"), v12, v13, v23, v16);

      }
      free(v20);

      ++v14;
    }
    while ((_DWORD)a4 != v14);
  }

}

Class IMAccessibilityInstallSafeCategory(NSString *a1)
{
  Class result;

  result = NSClassFromString(a1);
  if (result)
    return (Class)-[objc_class performSelector:](result, "performSelector:", sel__initializeSafeCategory);
  return result;
}

void sub_1DA4D71FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void sub_1DA4D7984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void sub_1DA4DAD88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA4DB10C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

void sub_1DA4DB6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  id *v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v9);
  _Unwind_Resume(a1);
}

void __Block_byref_object_copy__42(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

void __Block_byref_object_dispose__43(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

void sub_1DA4DC07C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA4DC210(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DA4DF658(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA4DFB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1DA4E05F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose__7(uint64_t a1)
{

}

void AMPAddOverridesForSupportingLayoutDirectionOnUIView()
{
  if (sOverride_UIView_traitCollection != -1)
    dispatch_once(&sOverride_UIView_traitCollection, &__block_literal_global_20);
}

id swizzle_UIView_traitCollection(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v10[3];

  v10[2] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  sOriginal_UIView_traitCollection();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "_layoutDirectionValue");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3
    && (v4 = objc_msgSend(v1, "_layoutDirectionFromLayoutDirectionValue:", v3), v4 != objc_msgSend(v2, "layoutDirection")))
  {
    objc_msgSend(MEMORY[0x1E0DC3E88], "traitCollectionWithLayoutDirection:", v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = v2;
    v10[1] = v6;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 2);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC3E88], "traitCollectionWithTraitsFromCollections:", v7);
    v5 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = v2;
  }
  v8 = v5;

  return v8;
}

id MTImageDownloadErrorWithUnderlyingError(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;

  v5 = a3;
  v6 = (void *)MEMORY[0x1E0C99E08];
  v7 = a2;
  objc_msgSend(v6, "dictionary");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("An underlying %@ error occurred"), v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "setObject:forKeyedSubscript:", v9, *MEMORY[0x1E0CB2938]);
  if (v5)
    objc_msgSend(v8, "setObject:forKeyedSubscript:", v5, *MEMORY[0x1E0CB3388]);
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("com.apple.podcasts.MTImageDownloader"), a1, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

id MTImageDownloadErrorWithCode(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_class *v10;
  id v11;
  __CFString *v12;
  void *v13;
  void *v14;

  if (a2)
  {
    v10 = (objc_class *)MEMORY[0x1E0CB3940];
    v11 = a2;
    v12 = (__CFString *)objc_msgSend([v10 alloc], "initWithFormat:arguments:", v11, &a9);

  }
  else
  {
    v12 = CFSTR("An unknown error occurred");
  }
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setObject:forKeyedSubscript:", v12, *MEMORY[0x1E0CB2938]);
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("com.apple.podcasts.MTImageDownloader"), a1, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

id UIPurchaseDelegate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id UIPurchaseDelegate.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI18UIPurchaseDelegate_senderWindow] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIPurchaseDelegate();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_1DA4E284C(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;

  v3 = (void *)objc_opt_self();
  v4 = a1;
  v5 = objc_msgSend(v3, sel_sharedInstance);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC00]), sel_initWithPurchase_bag_, v4, v5);

  objc_msgSend(v6, sel_setDelegate_, v1);
  return v6;
}

id UIPurchaseDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIPurchaseDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1DA4E2930(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v3 = *v1;
  v4 = (void *)objc_opt_self();
  v5 = a1;
  v6 = objc_msgSend(v4, sel_sharedInstance);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC00]), sel_initWithPurchase_bag_, v5, v6);

  objc_msgSend(v7, sel_setDelegate_, v3);
  return v7;
}

uint64_t sub_1DA4E2A40(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(id, id, uint64_t, uint64_t))
{
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;

  v13 = _Block_copy(aBlock);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  v15 = a3;
  v16 = a4;
  v17 = a1;
  a8(v15, v16, a7, v14);

  return swift_release();
}

uint64_t sub_1DA4E2AEC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  int v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1DA4E2B40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1DA4E2B94(uint64_t a1, uint64_t a2)
{
  return sub_1DA4E34A8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

BOOL sub_1DA4E2BAC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_1DA4E2BC0(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

void sub_1DA4E2BCC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1DA4E2BD4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1DA4E2BE8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1DA4E2BFC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1DA4E2C28@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1DA4E2C4C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1DA4E2C60@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1DA4E2C74(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1DA4E2C88()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1DA4E2C98()
{
  return sub_1DA67036C();
}

_QWORD *sub_1DA4E2CB0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1DA4E2CC8(uint64_t a1, uint64_t a2)
{
  return sub_1DA4E2EAC(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0DEDF30]);
}

uint64_t sub_1DA4E2CD4()
{
  return sub_1DA6707BC();
}

uint64_t sub_1DA4E2CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA4E2F24(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0DEDF30]);
}

void sub_1DA4E2D08(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_1DA4E2D10(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1DA4E2D40(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

uint64_t sub_1DA4E2D58(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1DA66F8A4();
  *a2 = 0;
  return result;
}

uint64_t sub_1DA4E2DCC(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1DA66F8B0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1DA4E2E48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1DA66F8BC();
  v2 = sub_1DA66F88C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DA4E2E88(uint64_t a1, uint64_t a2)
{
  return sub_1DA4E34A8(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1DA4E2E94(uint64_t a1, uint64_t a2)
{
  return sub_1DA4E2EAC(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0DEDF10]);
}

uint64_t sub_1DA4E2EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA4E2F24(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0DEDF10]);
}

uint64_t sub_1DA4E2EAC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t *v3;
  uint64_t v5;

  v5 = *v3;
  sub_1DA670798();
  a3(v5);
  return sub_1DA6707C8();
}

uint64_t sub_1DA4E2EFC()
{
  return sub_1DA6707A4();
}

uint64_t sub_1DA4E2F24(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t v6;

  v6 = *v4;
  sub_1DA670798();
  a4(v6);
  return sub_1DA6707C8();
}

_QWORD *sub_1DA4E2F70@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

BOOL sub_1DA4E2F80(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_1DA4E2FB0(uint64_t a1)
{
  MEMORY[0x1DF0A039C](&unk_1DA677BB8, a1);
  return sub_1DA66C67C();
}

uint64_t sub_1DA4E2FEC()
{
  MEMORY[0x1DF0A039C](&unk_1DA677BB8);
  return sub_1DA66C670();
}

uint64_t sub_1DA4E3034(uint64_t a1, uint64_t a2)
{
  sub_1DA670798();
  MEMORY[0x1DF0A039C](&unk_1DA677BB8, a2);
  sub_1DA66C670();
  return sub_1DA6707C8();
}

void sub_1DA4E308C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_1DA4E3098@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_1DA4E30A4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1DA4E30B8(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1DA4E30CC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_1DA4E30E0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

uint64_t sub_1DA4E30F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1DA4E40D0(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

BOOL sub_1DA4E3134(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_1DA4E3148(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

uint64_t sub_1DA4E315C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1DF0A039C](&unk_1DA677BB8, a3);
  return sub_1DA66C664();
}

uint64_t sub_1DA4E31A8()
{
  sub_1DA47E32C((unint64_t *)&qword_1EDADE7A0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DA6783CC);
  sub_1DA47E32C(&qword_1F0268D18, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DA678070);
  return sub_1DA6705F4();
}

uint64_t sub_1DA4E322C()
{
  sub_1DA47E32C(&qword_1F0268D20, (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey, (uint64_t)&unk_1DA677F6C);
  sub_1DA47E32C(&qword_1F0268D28, (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey, (uint64_t)&unk_1DA677F0C);
  return sub_1DA6705F4();
}

uint64_t sub_1DA4E32B0()
{
  sub_1DA47E32C(&qword_1F0268D00, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1DA6781E4);
  sub_1DA47E32C((unint64_t *)&unk_1F0268D08, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1DA678184);
  return sub_1DA6705F4();
}

uint64_t sub_1DA4E3334()
{
  sub_1DA47E32C((unint64_t *)&qword_1EDAE5058, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DA677D78);
  sub_1DA47E32C(&qword_1F0268C10, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DA677A8C);
  return sub_1DA6705F4();
}

uint64_t sub_1DA4E33B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DA66F88C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DA4E33FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DA66F8BC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DA4E3424()
{
  sub_1DA47E32C(&qword_1F0268CF0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1DA67833C);
  sub_1DA47E32C(&qword_1F0268CF8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1DA6782DC);
  return sub_1DA6705F4();
}

uint64_t sub_1DA4E34A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1DA66F8BC();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DA4E34E4()
{
  sub_1DA66F8BC();
  sub_1DA66F94C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA4E3524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1DA66F8BC();
  v2 = v1;
  if (v0 == sub_1DA66F8BC() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1DA6706D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t _s10PodcastsUI18UIPurchaseDelegateC8purchase_6handle10completionySo11AMSPurchaseC_So22AMSAuthenticateRequestCySo0I6ResultCSg_s5Error_pSgtctF_0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;

  v8 = sub_1DA66DEF4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4A85EC();
  sub_1DA670270();
  v12 = a1;
  v13 = sub_1DA66DEDC();
  v14 = sub_1DA66FDC0();
  if (os_log_type_enabled(v13, v14))
  {
    v26 = a2;
    v15 = swift_slowAlloc();
    v24 = v8;
    v16 = (uint8_t *)v15;
    v17 = (_QWORD *)swift_slowAlloc();
    v23 = v9;
    *(_DWORD *)v16 = 138412290;
    v25 = a3;
    v18 = -[NSObject buyParams](v12, sel_buyParams);
    v27 = v18;
    a3 = v25;
    v9 = v23;
    sub_1DA6702C4();
    *v17 = v18;
    a2 = v26;

    _os_log_impl(&dword_1DA478000, v13, v14, "Got authentication request for purchase with buyParams: %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v17, -1, -1);
    v19 = v16;
    v8 = v24;
    MEMORY[0x1DF0A0474](v19, -1, -1);
  }
  else
  {

    v13 = v12;
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a3;
  *(_QWORD *)(v20 + 24) = a4;
  sub_1DA66BE60();
  sub_1DA529394(a2, (uint64_t)sub_1DA4E4438, v20);
  return swift_release();
}

uint64_t _s10PodcastsUI18UIPurchaseDelegateC8purchase_6handle10completionySo11AMSPurchaseC_So16AMSDialogRequestCySo0I6ResultCSg_s5Error_pSgtctF_0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;

  v8 = sub_1DA66DEF4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4A85EC();
  sub_1DA670270();
  v12 = a1;
  v13 = sub_1DA66DEDC();
  v14 = sub_1DA66FDC0();
  if (os_log_type_enabled(v13, v14))
  {
    v26 = a2;
    v15 = swift_slowAlloc();
    v24 = v8;
    v16 = (uint8_t *)v15;
    v17 = (_QWORD *)swift_slowAlloc();
    v23 = v9;
    *(_DWORD *)v16 = 138412290;
    v25 = a3;
    v18 = -[NSObject buyParams](v12, sel_buyParams);
    v27 = v18;
    a3 = v25;
    v9 = v23;
    sub_1DA6702C4();
    *v17 = v18;
    a2 = v26;

    _os_log_impl(&dword_1DA478000, v13, v14, "Got dialog request for purchase with buyParams: %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v17, -1, -1);
    v19 = v16;
    v8 = v24;
    MEMORY[0x1DF0A0474](v19, -1, -1);
  }
  else
  {

    v13 = v12;
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a3;
  *(_QWORD *)(v20 + 24) = a4;
  sub_1DA66BE60();
  sub_1DA5293B0(a2, (uint64_t)sub_1DA4E4158, v20);
  return swift_release();
}

uint64_t _s10PodcastsUI18UIPurchaseDelegateC8purchase_6handle10completionySo11AMSPurchaseC_So20AMSEngagementRequestCySo0I6ResultCSg_s5Error_pSgtctF_0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;

  v8 = sub_1DA66DEF4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4A85EC();
  sub_1DA670270();
  v12 = a1;
  v13 = sub_1DA66DEDC();
  v14 = sub_1DA66FDC0();
  if (os_log_type_enabled(v13, v14))
  {
    v26 = a2;
    v15 = swift_slowAlloc();
    v24 = v8;
    v16 = (uint8_t *)v15;
    v17 = (_QWORD *)swift_slowAlloc();
    v23 = v9;
    *(_DWORD *)v16 = 138412290;
    v25 = a3;
    v18 = -[NSObject buyParams](v12, sel_buyParams);
    v27 = v18;
    a3 = v25;
    v9 = v23;
    sub_1DA6702C4();
    *v17 = v18;
    a2 = v26;

    _os_log_impl(&dword_1DA478000, v13, v14, "Got engagementRequest request for purchase with buyParams: %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v17, -1, -1);
    v19 = v16;
    v8 = v24;
    MEMORY[0x1DF0A0474](v19, -1, -1);
  }
  else
  {

    v13 = v12;
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a3;
  *(_QWORD *)(v20 + 24) = a4;
  sub_1DA66BE60();
  sub_1DA5293CC(a2, (uint64_t)sub_1DA4E4438, v20);
  return swift_release();
}

uint64_t method lookup function for UIPurchaseDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIPurchaseDelegate.handle(_:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of UIPurchaseDelegate.createAMSUIPurchaseTask(from:senderWindow:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

void type metadata accessor for MTEpisodePlayState(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268B48);
}

void type metadata accessor for SymbolScale(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268B50);
}

void type metadata accessor for SymbolWeight(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268B58);
}

void type metadata accessor for MRMediaRemoteError(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268B60);
}

void type metadata accessor for AMSDialogActionStyle(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268B68);
}

uint64_t initializeBufferWithCopyOfBuffer for FairPlayDebugView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  sub_1DA66BE60();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PlayStateDataSource.Config(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PlayStateDataSource.Config(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268B70);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1DA4E41DC(a1, (unint64_t *)&unk_1EDAE5008);
}

void type metadata accessor for ContentMode(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1EDAE20C0);
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
  sub_1DA4E41DC(a1, (unint64_t *)&unk_1F0268B78);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1DA4E41DC(a1, (unint64_t *)&unk_1EDAE5370);
}

void type metadata accessor for NSWritingDirection(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268B88);
}

void type metadata accessor for MTEpisodeDownloadBehavior(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268B90);
}

void type metadata accessor for MTPodcastEpisodeLimit(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1EDAE4C40);
}

void type metadata accessor for MPCPlayerChangeRequestOptions(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268B98);
}

void type metadata accessor for UIUserInterfaceLayoutDirection(uint64_t a1)
{
  sub_1DA4E41DC(a1, (unint64_t *)&unk_1F0268BA0);
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PageRenderState.ResourceCounter(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PageRenderState.ResourceCounter(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268BB0);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1EDADE828);
}

uint64_t sub_1DA4E3EEC()
{
  return sub_1DA47E32C(&qword_1F0268BB8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_1DA677768);
}

uint64_t sub_1DA4E3F18()
{
  return sub_1DA47E32C(&qword_1F0268BC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_1DA677734);
}

uint64_t sub_1DA4E3F44()
{
  return sub_1DA47E32C(&qword_1F0268BC8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_1DA677794);
}

uint64_t sub_1DA4E3F70()
{
  return sub_1DA47E32C(&qword_1F0268BD0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_1DA6777D0);
}

uint64_t sub_1DA4E3F9C()
{
  return sub_1DA47E32C(&qword_1F0268BD8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DA677A50);
}

uint64_t sub_1DA4E3FC8()
{
  return sub_1DA47E32C(&qword_1F0268BE0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DA677A24);
}

uint64_t sub_1DA4E3FF4()
{
  return sub_1DA47E32C(&qword_1EDAE5368, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1DA677B48);
}

uint64_t sub_1DA4E4020()
{
  return sub_1DA47E32C((unint64_t *)&qword_1EDAE5360, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1DA677B74);
}

uint64_t sub_1DA4E404C()
{
  return sub_1DA47E32C(&qword_1F0268BE8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolWeight, (uint64_t)&unk_1DA677C28);
}

uint64_t sub_1DA4E4078()
{
  return sub_1DA47E32C((unint64_t *)&unk_1F0268BF0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolScale, (uint64_t)&unk_1DA677CD4);
}

uint64_t sub_1DA4E40A4()
{
  return sub_1DA47E32C((unint64_t *)&unk_1F0268C00, (uint64_t (*)(uint64_t))type metadata accessor for MTEpisodeDownloadBehavior, (uint64_t)&unk_1DA67795C);
}

uint64_t sub_1DA4E40D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1DA4E4108()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DA4E412C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DA5289C4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1DA4E4134()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA4E4158()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268C78);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_1DA4E41DC(a1, (unint64_t *)&unk_1EDAE4C10);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1EDADE7B8);
}

void type metadata accessor for AMSBagKey(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268C80);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_1DA4E41DC(a1, &qword_1F0268C88);
}

void sub_1DA4E41DC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1DA4E4220()
{
  return sub_1DA47E32C(&qword_1F0268C90, (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey, (uint64_t)&unk_1DA677ED0);
}

uint64_t sub_1DA4E424C()
{
  return sub_1DA47E32C(&qword_1F0268C98, (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey, (uint64_t)&unk_1DA677EA4);
}

uint64_t sub_1DA4E4278()
{
  return sub_1DA47E32C(&qword_1F0268CA0, (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey, (uint64_t)&unk_1DA677F40);
}

uint64_t sub_1DA4E42A4()
{
  return sub_1DA47E32C(&qword_1F0268CA8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DA678034);
}

uint64_t sub_1DA4E42D0()
{
  return sub_1DA47E32C(&qword_1F0268CB0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DA678008);
}

uint64_t sub_1DA4E42FC()
{
  return sub_1DA47E32C(&qword_1F0268CB8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1DA678148);
}

uint64_t sub_1DA4E4328()
{
  return sub_1DA47E32C(&qword_1F0268CC0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1DA67811C);
}

uint64_t sub_1DA4E4354()
{
  return sub_1DA47E32C(&qword_1F0268CC8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1DA6781B8);
}

uint64_t sub_1DA4E4380()
{
  return sub_1DA47E32C(&qword_1F0268CD0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1DA6782A0);
}

uint64_t sub_1DA4E43AC()
{
  return sub_1DA47E32C(&qword_1F0268CD8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1DA678274);
}

uint64_t sub_1DA4E43D8()
{
  return sub_1DA47E32C((unint64_t *)&unk_1F0268CE0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1DA678310);
}

uint64_t sub_1DA4E4404()
{
  return sub_1DA47E32C((unint64_t *)&unk_1EDADE7A8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DA6780A4);
}

uint64_t sub_1DA4E4490()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_1EDAE4E00);
  __swift_allocate_value_buffer(v0, qword_1F0268E50);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0268E50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268E68);
  sub_1DA4841D4(&qword_1F0268E70, qword_1EDAE4E00, MEMORY[0x1E0DF1F60]);
  return sub_1DA66C718();
}

uint64_t sub_1DA4E452C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, uint64_t);
  void (*v76)(char *, uint64_t);
  void (*v77)(char *, uint64_t);
  void (*v78)(char *, char *, uint64_t);
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;

  v87 = a1;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268F30);
  v88 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v85 = (char *)&v76 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v98 = (char *)&v76 - v3;
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24B0);
  v89 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v94 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v95 = (char *)&v76 - v6;
  MEMORY[0x1E0C80A78](v7);
  v96 = (char *)&v76 - v8;
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2488);
  v93 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v83 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v97 = (char *)&v76 - v11;
  MEMORY[0x1E0C80A78](v12);
  v102 = (char *)&v76 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24E0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v76 - v19;
  MEMORY[0x1E0C80A78](v21);
  v80 = (char *)&v76 - v22;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268F38);
  v84 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v101 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1DA66C6E8();
  v82 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24A0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268F40);
  v29 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v31 = (char *)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v100 = (char *)&v76 - v33;
  v34 = sub_1DA66C70C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v28, 1, 1, v34);
  sub_1DA66C628();
  v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2560);
  sub_1DA4841D4(&qword_1EDAE24D8, &qword_1EDAE24E0, MEMORY[0x1E0DF1F60]);
  sub_1DA66C718();
  sub_1DA66C604();
  v35 = *(void (**)(char *, uint64_t))(v15 + 8);
  v35(v17, v14);
  sub_1DA66C610();
  v35(v20, v14);
  v36 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v37 = v80;
  v36(v80, v17, v14);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268F48);
  v39 = v101;
  sub_1DA66C6DC();
  sub_1DA47E2F0((uint64_t)v28, &qword_1EDAE24A0);
  v40 = v37;
  v35(v37, v14);
  v76 = *(void (**)(char *, uint64_t))(v82 + 8);
  v41 = v92;
  v76(v25, v92);
  MEMORY[0x1DF09AFFC](v39, v38);
  v81 = sub_1DA4841D4(&qword_1F0268F50, &qword_1F0268F40, MEMORY[0x1E0DEFDF0]);
  v42 = v103;
  sub_1DA66C604();
  v82 = *(_QWORD *)(v29 + 8);
  ((void (*)(char *, uint64_t))v82)(v31, v42);
  sub_1DA66C628();
  sub_1DA4841D4(&qword_1EDAE24A8, &qword_1EDAE24B0, MEMORY[0x1E0DF1F60]);
  v43 = v94;
  v44 = v91;
  sub_1DA66C718();
  v45 = v95;
  sub_1DA66C604();
  v46 = v89;
  v47 = *(void (**)(char *, uint64_t))(v89 + 8);
  v47(v43, v44);
  sub_1DA66C610();
  v47(v45, v44);
  v78 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  v48 = v96;
  v78(v96, v43, v44);
  v49 = v40;
  v50 = v90;
  sub_1DA66C6C4();
  v47(v48, v44);
  v51 = v76;
  v76(v25, v41);
  v52 = v97;
  v53 = v49;
  MEMORY[0x1DF09B02C](v49, v50);
  v89 = sub_1DA4841D4(&qword_1EDAE2480, &qword_1EDAE2488, MEMORY[0x1E0DEFEB0]);
  v54 = v104;
  sub_1DA66C604();
  v93 = *(_QWORD *)(v93 + 8);
  ((void (*)(char *, uint64_t))v93)(v52, v54);
  v105 = 58;
  v106 = 0xE100000000000000;
  v79 = sub_1DA484258();
  sub_1DA66C604();
  sub_1DA66C628();
  v55 = v94;
  v56 = v44;
  sub_1DA66C718();
  v57 = v95;
  sub_1DA66C604();
  v47(v55, v56);
  sub_1DA66C610();
  v47(v57, v56);
  v77 = v47;
  v78(v48, v55, v56);
  v58 = v53;
  v59 = v90;
  sub_1DA66C6C4();
  v47(v48, v56);
  v60 = v92;
  v61 = v51;
  v51(v25, v92);
  v62 = v83;
  MEMORY[0x1DF09B02C](v58, v59);
  v63 = v104;
  sub_1DA66C604();
  ((void (*)(char *, uint64_t))v93)(v62, v63);
  sub_1DA66C610();
  sub_1DA66C628();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268F58);
  sub_1DA4841D4(&qword_1F0268F60, &qword_1F0268F38, MEMORY[0x1E0DF1F60]);
  sub_1DA66C6AC();
  v61(v25, v60);
  v65 = v107;
  v64 = v108;
  sub_1DA66C628();
  v105 = v65;
  v106 = v64;
  v66 = v96;
  sub_1DA66C6B8();
  sub_1DA4841D4(&qword_1F0268F68, &qword_1F0268F30, MEMORY[0x1E0DF1F60]);
  v67 = v85;
  v68 = v86;
  v69 = v91;
  sub_1DA66C6AC();
  v77(v66, v69);
  v61(v25, v60);
  swift_bridgeObjectRelease();
  sub_1DA66C628();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268E68);
  v70 = v97;
  v71 = v68;
  v72 = v104;
  sub_1DA66C6AC();
  v61(v25, v60);
  v73 = *(void (**)(char *, uint64_t))(v88 + 8);
  v73(v67, v71);
  v73(v98, v71);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v101, v99);
  v74 = (void (*)(char *, uint64_t))v93;
  ((void (*)(char *, uint64_t))v93)(v70, v72);
  v74(v102, v72);
  return ((uint64_t (*)(char *, uint64_t))v82)(v100, v103);
}

uint64_t sub_1DA4E4EDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v41 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24B0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24E0);
  v12 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  v40 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1DA66C6E8();
  v36 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2488);
  v18 = *(_QWORD *)(v17 - 8);
  v37 = v17;
  v38 = v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v42 = (char *)&v34 - v22;
  sub_1DA66C628();
  sub_1DA4841D4(&qword_1EDAE24A8, &qword_1EDAE24B0, MEMORY[0x1E0DF1F60]);
  sub_1DA66C718();
  sub_1DA66C604();
  v23 = *(void (**)(char *, uint64_t))(v2 + 8);
  v23(v4, v1);
  sub_1DA66C610();
  v23(v7, v1);
  v35 = v23;
  v24 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v25 = v10;
  v24(v10, v4, v1);
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2560);
  v27 = v14;
  sub_1DA66C6C4();
  v23(v25, v1);
  v36 = *(_QWORD *)(v36 + 8);
  ((void (*)(char *, uint64_t))v36)(v16, v43);
  MEMORY[0x1DF09B02C](v14, v26);
  sub_1DA4841D4(&qword_1EDAE2480, &qword_1EDAE2488, MEMORY[0x1E0DEFEB0]);
  v28 = v37;
  sub_1DA66C604();
  v38 = *(_QWORD *)(v38 + 8);
  ((void (*)(char *, uint64_t))v38)(v20, v28);
  v44 = 58;
  v45 = 0xE100000000000000;
  sub_1DA484258();
  sub_1DA66C604();
  v29 = v28;
  sub_1DA66C610();
  v30 = v46;
  v31 = v47;
  sub_1DA66C628();
  v44 = v30;
  v45 = v31;
  sub_1DA66C6B8();
  sub_1DA4841D4(&qword_1EDAE24D8, &qword_1EDAE24E0, MEMORY[0x1E0DF1F60]);
  v32 = v39;
  sub_1DA66C6AC();
  v35(v25, v1);
  ((void (*)(char *, uint64_t))v36)(v16, v43);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v32);
  return ((uint64_t (*)(char *, uint64_t))v38)(v42, v29);
}

uint64_t sub_1DA4E52D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v47 = a1;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24B0);
  v48 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v45 = (char *)&v37 - v3;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - v5;
  v50 = sub_1DA66C6E8();
  v43 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24A0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66C634();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v37 - v17;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268F70);
  v19 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v49 = (char *)&v37 - v23;
  sub_1DA66C640();
  v24 = sub_1DA66C70C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 1, 1, v24);
  sub_1DA66C628();
  v39 = sub_1DA4E6D24();
  v25 = MEMORY[0x1E0DEBAF0];
  v38 = v6;
  sub_1DA66C6DC();
  sub_1DA47E2F0((uint64_t)v11, &qword_1EDAE24A0);
  v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v26(v18, v12);
  v40 = v26;
  v43 = *(_QWORD *)(v43 + 8);
  ((void (*)(char *, uint64_t))v43)(v8, v50);
  MEMORY[0x1DF09AFFC](v6, v25);
  sub_1DA4841D4(&qword_1F0268F78, &qword_1F0268F70, MEMORY[0x1E0DEFDF0]);
  v27 = v42;
  sub_1DA66C604();
  v41 = *(void (**)(char *, uint64_t))(v19 + 8);
  v28 = v21;
  v29 = v27;
  v41(v28, v27);
  sub_1DA66C640();
  sub_1DA66C604();
  v26(v15, v12);
  v30 = v38;
  v31 = v29;
  sub_1DA66C610();
  sub_1DA66C628();
  sub_1DA4841D4(&qword_1EDAE24A8, &qword_1EDAE24B0, MEMORY[0x1E0DF1F60]);
  v32 = v44;
  v33 = v45;
  sub_1DA66C6B8();
  v34 = v46;
  sub_1DA66C6B8();
  sub_1DA66C6AC();
  v35 = *(void (**)(char *, uint64_t))(v48 + 8);
  v35(v34, v32);
  v35(v33, v32);
  ((void (*)(char *, uint64_t))v43)(v8, v50);
  v35(v30, v32);
  v40(v18, v12);
  return ((uint64_t (*)(char *, uint64_t))v41)(v49, v31);
}

uint64_t sub_1DA4E5704@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a1;
  v1 = sub_1DA66C6E8();
  v30 = *(_QWORD *)(v1 - 8);
  v31 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24B0);
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  v12 = sub_1DA66C634();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v26 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v26 - v20;
  sub_1DA66C640();
  sub_1DA4E6D24();
  sub_1DA66C604();
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v18, v12);
  sub_1DA66C640();
  sub_1DA66C604();
  v22(v15, v12);
  v26 = v11;
  sub_1DA66C610();
  sub_1DA66C628();
  sub_1DA4841D4(&qword_1EDAE24A8, &qword_1EDAE24B0, MEMORY[0x1E0DF1F60]);
  sub_1DA66C6B8();
  v23 = v27;
  sub_1DA66C6B8();
  sub_1DA66C6AC();
  v24 = *(void (**)(char *, uint64_t))(v28 + 8);
  v24(v23, v4);
  v24(v8, v4);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v3, v31);
  v24(v26, v4);
  v22(v18, v12);
  return ((uint64_t (*)(char *, uint64_t))v22)(v21, v12);
}

uint64_t sub_1DA4E59D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unsigned int (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  void (*v35)(_BYTE *, _QWORD);
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t result;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t *v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t *v57;
  void (*v58)(_BYTE *, _QWORD);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t (*v78)(unint64_t, unint64_t, uint64_t);
  uint64_t v80;
  unint64_t v81;
  void (*v82)(_BYTE *, _QWORD);
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int (*v88)(_QWORD, _QWORD, _QWORD);
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  unint64_t *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  _BYTE v105[40];

  v94 = a2;
  v3 = sub_1DA66C358();
  v97 = *(_QWORD *)(v3 - 8);
  v98 = v3;
  MEMORY[0x1E0C80A78](v3);
  v96 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C13C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v90 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v8);
  v95 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_1DA66C10C();
  v102 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v92 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v80 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v80 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v80 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v80 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v80 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v80 - v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268F18);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = a1;
  sub_1DA66C124();
  v32 = v6;
  v33 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v6 + 48);
  if (!v33(v31, 1, v5))
  {
    v93 = (unint64_t *)v22;
    v85 = v19;
    v84 = v16;
    v83 = v13;
    v88 = v33;
    v86 = v5;
    v89 = v31;
    v34 = sub_1DA66C118();
    v35 = (void (*)(_BYTE *, _QWORD))v34;
    v99 = v36;
    v37 = *v36;
    if (!*v36)
    {
LABEL_23:
      v35(v105, 0);
      v5 = v86;
      v31 = v89;
      v33 = v88;
      goto LABEL_24;
    }
    v38 = *(_QWORD *)(v37 + 16);
    if (!v38)
    {
      v49 = 0;
LABEL_22:
      sub_1DA54539C(v38, v49);
      goto LABEL_23;
    }
    v82 = (void (*)(_BYTE *, _QWORD))v34;
    v87 = v32;
    v39 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
    v101 = *(_QWORD *)(v102 + 72);
    v40 = *(void (**)(char *, unint64_t, uint64_t))(v102 + 16);
    swift_bridgeObjectRetain();
    v41 = 0;
    v81 = v39;
    v42 = v91;
    while (1)
    {
      v40(v28, v37 + v39, v42);
      if (sub_1DA66C100() == 116 && v43 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        v40(v25, (unint64_t)v28, v42);
        v44 = 1;
      }
      else
      {
        v45 = sub_1DA6706D8();
        swift_bridgeObjectRelease();
        v40(v25, (unint64_t)v28, v42);
        if ((v45 & 1) != 0)
        {
          v44 = 1;
        }
        else if (sub_1DA66C100() == 114 && v46 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          v44 = 1;
        }
        else
        {
          v44 = sub_1DA6706D8();
          swift_bridgeObjectRelease();
        }
      }
      v47 = *(void (**)(char *, uint64_t))(v102 + 8);
      v47(v25, v42);
      v47(v28, v42);
      if ((v44 & 1) != 0)
        break;
      ++v41;
      v39 += v101;
      if (v38 == v41)
      {
        result = swift_bridgeObjectRelease();
        v49 = *(_QWORD *)(*v99 + 16);
        goto LABEL_21;
      }
    }
    result = swift_bridgeObjectRelease();
    v49 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      return result;
    }
    v50 = *v99;
    v51 = *(_QWORD *)(*v99 + 16);
    v52 = v93;
    if (v49 == v51)
    {
LABEL_20:
      v38 = v41;
LABEL_21:
      v32 = v87;
      v35 = v82;
      if (v49 >= v38)
        goto LABEL_22;
      __break(1u);
      goto LABEL_69;
    }
    v69 = v101 + v39;
    v70 = v41 + 1;
    v58 = (void (*)(_BYTE *, _QWORD))0xE100000000000000;
    v71 = v85;
    while (1)
    {
      if (v70 >= v51)
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        v37 = sub_1DA53FE3C(0, *(_QWORD *)(v37 + 16) + 1, 1, v37);
        *v52 = v37;
LABEL_27:
        v60 = v91;
        v62 = *(_QWORD *)(v37 + 16);
        v61 = *(_QWORD *)(v37 + 24);
        if (v62 >= v61 >> 1)
        {
          v37 = sub_1DA53FE3C(v61 > 1, v62 + 1, 1, v37);
          *v52 = v37;
        }
        v5 = v41;
        *(_QWORD *)(v37 + 16) = v62 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v102 + 32))(v37+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ *(_QWORD *)(v102 + 72) * v62, v92, v60);
        v58(v105, 0);
        v55 = v100;
        v56 = v87;
        v54 = (uint64_t)v89;
        v63 = v88(v89, 1, v5);
        goto LABEL_32;
      }
      v40((char *)v52, v50 + v69, v42);
      if (sub_1DA66C100() == 116 && v72 == 0xE100000000000000)
        break;
      v37 = sub_1DA6706D8();
      swift_bridgeObjectRelease();
      v52 = v93;
      v40(v71, (unint64_t)v93, v42);
      if ((v37 & 1) != 0)
        goto LABEL_48;
      if (sub_1DA66C100() == 114 && v73 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        v52 = v93;
        goto LABEL_48;
      }
      v37 = sub_1DA6706D8();
      swift_bridgeObjectRelease();
      v47(v71, v42);
      v52 = v93;
      result = ((uint64_t (*)(unint64_t *, uint64_t))v47)(v93, v42);
      if ((v37 & 1) == 0)
      {
        if (v70 != v41)
        {
          if ((v41 & 0x8000000000000000) != 0)
            goto LABEL_71;
          v74 = *v99;
          v75 = *(_QWORD *)(*v99 + 16);
          result = (uint64_t)v84;
          if (v41 >= v75)
            goto LABEL_72;
          v76 = v41 * v101;
          result = ((uint64_t (*)(char *, unint64_t, uint64_t))v40)(v84, v74 + v81 + v41 * v101, v42);
          if (v70 >= v75)
            goto LABEL_73;
          v37 = (unint64_t)v83;
          v40(v83, v74 + v69, v42);
          result = swift_isUniquelyReferenced_nonNull_native();
          *v99 = v74;
          if ((result & 1) == 0)
          {
            result = sub_1DA626244(v74);
            v74 = result;
            *v99 = result;
          }
          if (v41 >= *(_QWORD *)(v74 + 16))
            goto LABEL_74;
          v77 = v74 + v81 + v76;
          v78 = *(uint64_t (**)(unint64_t, unint64_t, uint64_t))(v102 + 40);
          result = v78(v77, v37, v42);
          if (v70 >= *(_QWORD *)(*v99 + 16))
            goto LABEL_75;
          result = v78(*v99 + v69, (unint64_t)v84, v42);
          v71 = v85;
          v52 = v93;
        }
        if (__OFADD__(v41++, 1))
          goto LABEL_70;
      }
LABEL_49:
      v49 = v70 + 1;
      if (__OFADD__(v70, 1))
        goto LABEL_66;
      v50 = *v99;
      v51 = *(_QWORD *)(*v99 + 16);
      ++v70;
      v69 += v101;
      if (v49 == v51)
        goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    v52 = v93;
    v40(v71, (unint64_t)v93, v42);
LABEL_48:
    v47(v71, v42);
    result = ((uint64_t (*)(unint64_t *, uint64_t))v47)(v52, v42);
    goto LABEL_49;
  }
LABEL_24:
  v53 = v33(v31, 1, v5);
  v54 = (uint64_t)v31;
  v55 = v100;
  v56 = v32;
  if (!v53)
  {
    v87 = v32;
    v41 = v5;
    v58 = (void (*)(_BYTE *, _QWORD))sub_1DA66C118();
    if (*v57)
    {
      v52 = v57;
      v103 = 0;
      v104 = 0xE000000000000000;
      sub_1DA66FC34();
      sub_1DA66C0F4();
      swift_bridgeObjectRelease();
      v37 = *v52;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v52 = v37;
      v89 = (char *)v54;
      v88 = v33;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        goto LABEL_67;
      goto LABEL_27;
    }
    v58(v105, 0);
    v55 = v100;
    v56 = v87;
  }
  v63 = v33(v31, 1, v5);
LABEL_32:
  if (v63)
  {
    v65 = v97;
    v64 = v98;
    v66 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v95, 1, 1, v98);
  }
  else
  {
    v67 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v90, v54, v5);
    v66 = (uint64_t)v95;
    sub_1DA66C130();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v67, v5);
    v65 = v97;
    v64 = v98;
  }
  v68 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v96, v55, v64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v66, 1, v64) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v94, v68, v64);
    sub_1DA47E2F0(v66, &qword_1EDAE5020);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v68, v64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v94, v66, v64);
  }
  return sub_1DA47E2F0(v54, &qword_1F0268F18);
}

uint64_t sub_1DA4E637C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD v42[16];

  v29 = a5;
  v30 = a1;
  v28[2] = a17;
  v37 = a16;
  v39 = a15;
  v38 = a14;
  v28[1] = a12;
  v36 = sub_1DA66C358();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v31 = (uint64_t)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a2;
  v42[0] = a2;
  v42[1] = a3;
  v33 = a3;
  v35 = a4;
  v42[2] = a4;
  v24 = v29;
  v42[3] = v29;
  v42[4] = a6;
  v42[5] = a7;
  v42[6] = a8;
  v42[7] = a9;
  v42[8] = a10;
  v42[9] = a11;
  v42[10] = a12;
  v42[11] = a13;
  v42[12] = a14;
  v42[13] = a15;
  v42[14] = a16;
  v42[15] = a17;
  sub_1DA4E6CD0((uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a9)
    sub_1DA66FC40();
  sub_1DA4E6CD0((uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA66FC40();
  sub_1DA4E6CD0((uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA66FC40();
  v25 = v31;
  sub_1DA4E59D0(v30, v31);
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_1DA670444();
  swift_bridgeObjectRelease();
  v40 = 0x3D6665726820613CLL;
  v41 = 0xE900000000000022;
  sub_1DA66C298();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  MEMORY[0x1DF09E2FC](v32, v33, v35, v24);
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  v26 = v40;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v25, v36);
  return v26;
}

uint64_t sub_1DA4E66E8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  type metadata accessor for TimestampParser();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268E78);
  sub_1DA66C730();
  v4 = sub_1DA4E637C(a1, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v6;
  return result;
}

id static TimestampParser.addTimestampAttributions(to:episodeURL:)(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, a1);
  v5 = objc_msgSend(a1, sel_string);
  sub_1DA66F8BC();

  if (qword_1F0268410 != -1)
    swift_once();
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EDAE4E00);
  __swift_project_value_buffer(v6, (uint64_t)qword_1F0268E50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268E68);
  sub_1DA484214();
  sub_1DA4841D4(&qword_1F0268E70, qword_1EDAE4E00, MEMORY[0x1E0DF1F60]);
  v7 = sub_1DA66F820();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F0268E78) - 8);
    v10 = v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1DA4E6978(v10, v4, a2, a1);
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v4;
}

void sub_1DA4E6978(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[8];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v23 = a4;
  v18 = a3;
  v25 = a2;
  v5 = sub_1DA66C358();
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  MEMORY[0x1E0C80A78](v5);
  v19 = (uint64_t)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *MEMORY[0x1E0DC1160];
  v17[6] = type metadata accessor for TimestampParser();
  v17[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268E78);
  v22 = a1;
  sub_1DA66C730();
  v7 = v34;
  v43 = v28;
  v44 = v29;
  v45 = v30;
  v46 = v31;
  v47 = v32;
  v48 = v33;
  v49 = v34;
  v17[1] = v36;
  v17[2] = v35;
  v50 = v35;
  v51 = v36;
  v52 = v37;
  v53 = v38;
  v17[4] = v40;
  v17[5] = v39;
  v54 = v39;
  v55 = v40;
  v17[3] = v41;
  v56 = v41;
  v57 = v42;
  sub_1DA4E6CD0((uint64_t)&v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
    sub_1DA66FC40();
  sub_1DA4E6CD0((uint64_t)&v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA66FC40();
  sub_1DA4E6CD0((uint64_t)&v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA66FC40();
  v8 = v19;
  sub_1DA4E59D0(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1DA66C2C8();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v8, v21);
  *(_QWORD *)&v28 = sub_1DA66C724();
  *((_QWORD *)&v28 + 1) = v10;
  v11 = objc_msgSend(v23, sel_string);
  v12 = sub_1DA66F8BC();
  v14 = v13;

  v26 = v12;
  v27 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268F20);
  sub_1DA4841D4(&qword_1F0268F28, &qword_1F0268F20, MEMORY[0x1E0DEB8A8]);
  sub_1DA498918();
  v15 = sub_1DA6701C8();
  objc_msgSend(v25, sel_addAttribute_value_range_, v24, v9, v15, v16);

}

uint64_t TimestampParser.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t TimestampParser.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TimestampParser()
{
  return objc_opt_self();
}

uint64_t method lookup function for TimestampParser()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DA4E6CD0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1DA4E6D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE2478;
  if (!qword_1EDAE2478)
  {
    v1 = sub_1DA66C634();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEFE38], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE2478);
  }
  return result;
}

uint64_t sub_1DA4E6D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  _QWORD v12[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0268F88);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA49ADD0(a1, (uint64_t)v12);
  if (!swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_5;
  }
  v12[0] = v11[0];
  v12[1] = v11[1];
  v7 = sub_1DA66EF14();
  sub_1DA4E6F3C();
  swift_bridgeObjectRetain();
  sub_1DA66FA60();
  __swift_destroy_boxed_opaque_existential_0(a1);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1DA4E6F84((uint64_t)v6);
LABEL_5:
    v9 = sub_1DA66EF14();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t sub_1DA4E6EE4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1DA4E6F3C();
  result = sub_1DA66FA54();
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v3;
  a1[1] = v4;
  return result;
}

unint64_t sub_1DA4E6F3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F0268F80;
  if (!qword_1F0268F80)
  {
    v1 = sub_1DA66EF14();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D40068], v1);
    atomic_store(result, (unint64_t *)&qword_1F0268F80);
  }
  return result;
}

uint64_t sub_1DA4E6F84(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0268F88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t static UnfollowShowIntent.kind.getter()
{
  return 0xD000000000000012;
}

uint64_t UnfollowShowIntent.show.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4E6FEC(v1, a1);
}

uint64_t sub_1DA4E6FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShowEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t UnfollowShowIntent.init(show:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA4E7038(a1, a2);
}

uint64_t sub_1DA4E7038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShowEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DA4E707C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001DA678470;
}

uint64_t *initializeBufferWithCopyOfBuffer for UnfollowShowIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  void (*v58)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v69;
  _QWORD *v70;
  unsigned int (*v71)(_QWORD *, uint64_t, int *);
  _QWORD *v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  char *__dst;
  int *__dsta;

  v4 = type metadata accessor for ShowEntity();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v6 = (int *)v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v9 = (void *)a2[2];
    v8 = a2[3];
    a1[2] = (uint64_t)v9;
    a1[3] = v8;
    v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    v11 = *(int *)(v4 + 32);
    __dst = (char *)a1 + v11;
    v12 = (char *)a2 + v11;
    v13 = sub_1DA66C358();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    v16 = v9;
    swift_bridgeObjectRetain();
    v73 = v15;
    v74 = v14;
    if (v15(v12, 1, v13))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    *(uint64_t *)((char *)a1 + v6[9]) = *(uint64_t *)((char *)a2 + v6[9]);
    *(uint64_t *)((char *)a1 + v6[10]) = *(uint64_t *)((char *)a2 + v6[10]);
    *(uint64_t *)((char *)a1 + v6[11]) = *(uint64_t *)((char *)a2 + v6[11]);
    *(uint64_t *)((char *)a1 + v6[12]) = *(uint64_t *)((char *)a2 + v6[12]);
    *(uint64_t *)((char *)a1 + v6[13]) = *(uint64_t *)((char *)a2 + v6[13]);
    *(uint64_t *)((char *)a1 + v6[14]) = *(uint64_t *)((char *)a2 + v6[14]);
    *(uint64_t *)((char *)a1 + v6[15]) = *(uint64_t *)((char *)a2 + v6[15]);
    *(uint64_t *)((char *)a1 + v6[16]) = *(uint64_t *)((char *)a2 + v6[16]);
    *(uint64_t *)((char *)a1 + v6[17]) = *(uint64_t *)((char *)a2 + v6[17]);
    __dsta = v6;
    v19 = v6[18];
    v72 = (uint64_t *)((char *)a1 + v19);
    v70 = (uint64_t *)((char *)a2 + v19);
    v20 = (int *)sub_1DA66CA0C();
    v69 = *((_QWORD *)v20 - 1);
    v71 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v69 + 48);
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    v21 = v70;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    if (v71(v70, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      memcpy(v72, v70, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v24 = v13;
      v23 = __dsta;
      v25 = v74;
    }
    else
    {
      v26 = v70[1];
      *v72 = *v70;
      v72[1] = v26;
      v27 = *((unsigned __int8 *)v70 + 32);
      swift_bridgeObjectRetain();
      if (v27 == 255)
      {
        *((_OWORD *)v72 + 1) = *((_OWORD *)v70 + 1);
        *((_BYTE *)v72 + 32) = *((_BYTE *)v70 + 32);
      }
      else
      {
        v28 = v70[2];
        v29 = v70[3];
        sub_1DA481390(v28, v29, v27);
        v72[2] = v28;
        v72[3] = v29;
        v21 = v70;
        *((_BYTE *)v72 + 32) = v27;
      }
      v24 = v13;
      v23 = __dsta;
      v25 = v74;
      *(_OWORD *)(v72 + 5) = *(_OWORD *)(v21 + 5);
      v30 = (id *)(v21 + 7);
      v31 = *((unsigned __int8 *)v21 + 64);
      if (v31 == 255)
      {
        v72[7] = *v30;
        *((_BYTE *)v72 + 64) = *((_BYTE *)v21 + 64);
      }
      else
      {
        v32 = *v30;
        sub_1DA4E762C(*v30, *((_BYTE *)v21 + 64));
        v72[7] = v32;
        *((_BYTE *)v72 + 64) = v31;
      }
      v33 = (id *)(v21 + 9);
      v34 = *((unsigned __int8 *)v21 + 80);
      if (v34 == 255)
      {
        v72[9] = *v33;
        *((_BYTE *)v72 + 80) = *((_BYTE *)v21 + 80);
      }
      else
      {
        v35 = *v33;
        sub_1DA4E762C(*v33, *((_BYTE *)v21 + 80));
        v72[9] = v35;
        *((_BYTE *)v72 + 80) = v34;
      }
      v36 = (id *)(v21 + 11);
      v37 = *((unsigned __int8 *)v21 + 96);
      if (v37 == 255)
      {
        v72[11] = *v36;
        *((_BYTE *)v72 + 96) = *((_BYTE *)v21 + 96);
      }
      else
      {
        v38 = *v36;
        sub_1DA4E762C(*v36, *((_BYTE *)v21 + 96));
        v72[11] = v38;
        *((_BYTE *)v72 + 96) = v37;
      }
      v39 = (id *)(v21 + 13);
      v40 = *((unsigned __int8 *)v21 + 112);
      if (v40 == 255)
      {
        v72[13] = *v39;
        *((_BYTE *)v72 + 112) = *((_BYTE *)v21 + 112);
      }
      else
      {
        v41 = *v39;
        sub_1DA4E762C(*v39, *((_BYTE *)v21 + 112));
        v72[13] = v41;
        *((_BYTE *)v72 + 112) = v40;
      }
      v42 = (id *)(v21 + 15);
      v43 = *((unsigned __int8 *)v21 + 128);
      if (v43 == 255)
      {
        v72[15] = *v42;
        *((_BYTE *)v72 + 128) = *((_BYTE *)v21 + 128);
      }
      else
      {
        v44 = *v42;
        sub_1DA4E762C(*v42, *((_BYTE *)v21 + 128));
        v72[15] = v44;
        *((_BYTE *)v72 + 128) = v43;
      }
      *((_BYTE *)v72 + 129) = *((_BYTE *)v21 + 129);
      v45 = v20[11];
      v46 = (char *)v72 + v45;
      v47 = v21;
      v48 = (char *)v21 + v45;
      v49 = sub_1DA66C928();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v46, v48, v49);
      v50 = v20[12];
      v51 = (_QWORD *)((char *)v72 + v50);
      v52 = (_QWORD *)((char *)v47 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      *((_BYTE *)v72 + v20[13]) = *((_BYTE *)v47 + v20[13]);
      *((_BYTE *)v72 + v20[14]) = *((_BYTE *)v47 + v20[14]);
      *((_BYTE *)v72 + v20[15]) = *((_BYTE *)v47 + v20[15]);
      v54 = v20[16];
      v55 = (_QWORD *)((char *)v72 + v54);
      v56 = (_QWORD *)((char *)v47 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      v58 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v69 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58(v72, 0, 1, v20);
    }
    v59 = v23[19];
    v60 = (char *)a1 + v59;
    v61 = (char *)a2 + v59;
    v62 = *((_QWORD *)v61 + 1);
    if (v62 >> 60 == 15)
    {
      *(_OWORD *)v60 = *(_OWORD *)v61;
    }
    else
    {
      v63 = *(_QWORD *)v61;
      sub_1DA498750(*(_QWORD *)v61, *((_QWORD *)v61 + 1));
      *(_QWORD *)v60 = v63;
      *((_QWORD *)v60 + 1) = v62;
    }
    v64 = v23[20];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    if (v73(v66, 1, v24))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v65, v66, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v65, 0, 1, v24);
    }
  }
  return a1;
}

id sub_1DA4E762C(id result, char a2)
{
  if (a2 == 1)
    return result;
  return result;
}

uint64_t destroy for UnfollowShowIntent(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for ShowEntity();
  v3 = a1 + v2[8];
  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v7 = a1 + v2[18];
  v8 = sub_1DA66CA0C();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = *(unsigned __int8 *)(v7 + 32);
    if (v9 != 255)
      sub_1DA47F868(*(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), v9);
    v10 = *(unsigned __int8 *)(v7 + 64);
    if (v10 != 255)
      sub_1DA4E7898(*(id *)(v7 + 56), v10);
    v11 = *(unsigned __int8 *)(v7 + 80);
    if (v11 != 255)
      sub_1DA4E7898(*(id *)(v7 + 72), v11);
    v12 = *(unsigned __int8 *)(v7 + 96);
    if (v12 != 255)
      sub_1DA4E7898(*(id *)(v7 + 88), v12);
    v13 = *(unsigned __int8 *)(v7 + 112);
    if (v13 != 255)
      sub_1DA4E7898(*(id *)(v7 + 104), v13);
    v14 = *(unsigned __int8 *)(v7 + 128);
    if (v14 != 255)
      sub_1DA4E7898(*(id *)(v7 + 120), v14);
    v15 = v7 + *(int *)(v8 + 44);
    v16 = sub_1DA66C928();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = (uint64_t *)(a1 + v2[19]);
  v18 = v17[1];
  if (v18 >> 60 != 15)
    sub_1DA4986F8(*v17, v18);
  v19 = a1 + v2[20];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v19, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
  return result;
}

void sub_1DA4E7898(id a1, char a2)
{
  if (a2 == 1)

}

_QWORD *initializeWithCopy for UnfollowShowIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v66;
  _QWORD *v67;
  unsigned int (*v68)(_QWORD *, uint64_t, int *);
  _QWORD *v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  char *__dst;
  int *__dsta;
  uint64_t v73;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = (void *)a2[2];
  v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = (int *)type metadata accessor for ShowEntity();
  v9 = v8[8];
  __dst = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  v11 = sub_1DA66C358();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  v14 = v6;
  swift_bridgeObjectRetain();
  v70 = v13;
  v73 = v11;
  if (v13(v10, 1, v11))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  *(_QWORD *)((char *)a1 + v8[9]) = *(_QWORD *)((char *)a2 + v8[9]);
  *(_QWORD *)((char *)a1 + v8[10]) = *(_QWORD *)((char *)a2 + v8[10]);
  *(_QWORD *)((char *)a1 + v8[11]) = *(_QWORD *)((char *)a2 + v8[11]);
  *(_QWORD *)((char *)a1 + v8[12]) = *(_QWORD *)((char *)a2 + v8[12]);
  *(_QWORD *)((char *)a1 + v8[13]) = *(_QWORD *)((char *)a2 + v8[13]);
  *(_QWORD *)((char *)a1 + v8[14]) = *(_QWORD *)((char *)a2 + v8[14]);
  *(_QWORD *)((char *)a1 + v8[15]) = *(_QWORD *)((char *)a2 + v8[15]);
  *(_QWORD *)((char *)a1 + v8[16]) = *(_QWORD *)((char *)a2 + v8[16]);
  *(_QWORD *)((char *)a1 + v8[17]) = *(_QWORD *)((char *)a2 + v8[17]);
  __dsta = v8;
  v16 = v8[18];
  v69 = (_QWORD *)((char *)a1 + v16);
  v67 = (_QWORD *)((char *)a2 + v16);
  v17 = (int *)sub_1DA66CA0C();
  v66 = *((_QWORD *)v17 - 1);
  v68 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v66 + 48);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  v18 = v67;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v68(v67, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v69, v67, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    v21 = v12;
    v20 = v73;
    v22 = __dsta;
  }
  else
  {
    v23 = v67[1];
    *v69 = *v67;
    v69[1] = v23;
    v24 = *((unsigned __int8 *)v67 + 32);
    swift_bridgeObjectRetain();
    if (v24 == 255)
    {
      *((_OWORD *)v69 + 1) = *((_OWORD *)v67 + 1);
      *((_BYTE *)v69 + 32) = *((_BYTE *)v67 + 32);
    }
    else
    {
      v25 = v67[2];
      v26 = v67[3];
      sub_1DA481390(v25, v26, v24);
      v69[2] = v25;
      v69[3] = v26;
      v18 = v67;
      *((_BYTE *)v69 + 32) = v24;
    }
    v21 = v12;
    v20 = v73;
    v22 = __dsta;
    *(_OWORD *)(v69 + 5) = *(_OWORD *)(v18 + 5);
    v27 = (id *)(v18 + 7);
    v28 = *((unsigned __int8 *)v18 + 64);
    if (v28 == 255)
    {
      v69[7] = *v27;
      *((_BYTE *)v69 + 64) = *((_BYTE *)v18 + 64);
    }
    else
    {
      v29 = *v27;
      sub_1DA4E762C(*v27, *((_BYTE *)v18 + 64));
      v69[7] = v29;
      *((_BYTE *)v69 + 64) = v28;
    }
    v30 = (id *)(v18 + 9);
    v31 = *((unsigned __int8 *)v18 + 80);
    if (v31 == 255)
    {
      v69[9] = *v30;
      *((_BYTE *)v69 + 80) = *((_BYTE *)v18 + 80);
    }
    else
    {
      v32 = *v30;
      sub_1DA4E762C(*v30, *((_BYTE *)v18 + 80));
      v69[9] = v32;
      *((_BYTE *)v69 + 80) = v31;
    }
    v33 = (id *)(v18 + 11);
    v34 = *((unsigned __int8 *)v18 + 96);
    if (v34 == 255)
    {
      v69[11] = *v33;
      *((_BYTE *)v69 + 96) = *((_BYTE *)v18 + 96);
    }
    else
    {
      v35 = *v33;
      sub_1DA4E762C(*v33, *((_BYTE *)v18 + 96));
      v69[11] = v35;
      *((_BYTE *)v69 + 96) = v34;
    }
    v36 = (id *)(v18 + 13);
    v37 = *((unsigned __int8 *)v18 + 112);
    if (v37 == 255)
    {
      v69[13] = *v36;
      *((_BYTE *)v69 + 112) = *((_BYTE *)v18 + 112);
    }
    else
    {
      v38 = *v36;
      sub_1DA4E762C(*v36, *((_BYTE *)v18 + 112));
      v69[13] = v38;
      *((_BYTE *)v69 + 112) = v37;
    }
    v39 = (id *)(v18 + 15);
    v40 = *((unsigned __int8 *)v18 + 128);
    if (v40 == 255)
    {
      v69[15] = *v39;
      *((_BYTE *)v69 + 128) = *((_BYTE *)v18 + 128);
    }
    else
    {
      v41 = *v39;
      sub_1DA4E762C(*v39, *((_BYTE *)v18 + 128));
      v69[15] = v41;
      *((_BYTE *)v69 + 128) = v40;
    }
    *((_BYTE *)v69 + 129) = *((_BYTE *)v18 + 129);
    v42 = v17[11];
    v43 = (char *)v69 + v42;
    v44 = v18;
    v45 = (char *)v18 + v42;
    v46 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v43, v45, v46);
    v47 = v17[12];
    v48 = (_QWORD *)((char *)v69 + v47);
    v49 = (_QWORD *)((char *)v44 + v47);
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    *((_BYTE *)v69 + v17[13]) = *((_BYTE *)v44 + v17[13]);
    *((_BYTE *)v69 + v17[14]) = *((_BYTE *)v44 + v17[14]);
    *((_BYTE *)v69 + v17[15]) = *((_BYTE *)v44 + v17[15]);
    v51 = v17[16];
    v52 = (_QWORD *)((char *)v69 + v51);
    v53 = (_QWORD *)((char *)v44 + v51);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    v55 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v66 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v55(v69, 0, 1, v17);
  }
  v56 = v22[19];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = *((_QWORD *)v58 + 1);
  if (v59 >> 60 == 15)
  {
    *(_OWORD *)v57 = *(_OWORD *)v58;
  }
  else
  {
    v60 = *(_QWORD *)v58;
    sub_1DA498750(*(_QWORD *)v58, *((_QWORD *)v58 + 1));
    *(_QWORD *)v57 = v60;
    *((_QWORD *)v57 + 1) = v59;
  }
  v61 = v22[20];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  if (v70(v63, 1, v20))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v62, v63, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v62, 0, 1, v20);
  }
  return a1;
}

char *assignWithCopy for UnfollowShowIntent(char *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  __int128 v37;
  id *v38;
  int v39;
  id v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  id v53;
  id *v54;
  int v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  void (*v68)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v69;
  uint64_t v70;
  char v71;
  __int128 v72;
  id *v73;
  id *v74;
  int v75;
  id v76;
  void *v77;
  char v78;
  id v79;
  char v80;
  id v81;
  id *v82;
  id *v83;
  int v84;
  id v85;
  void *v86;
  char v87;
  id v88;
  char v89;
  id v90;
  id *v91;
  id *v92;
  int v93;
  id v94;
  void *v95;
  char v96;
  id v97;
  char v98;
  id v99;
  id *v100;
  id *v101;
  int v102;
  id v103;
  void *v104;
  char v105;
  id v106;
  char v107;
  id v108;
  id *v109;
  id *v110;
  int v111;
  id v112;
  void *v113;
  char v114;
  id v115;
  char v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v143;
  uint64_t v144;
  uint64_t (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)*((_QWORD *)a1 + 2);
  v5 = (void *)a2[2];
  *((_QWORD *)a1 + 2) = v5;
  v6 = v5;

  *((_QWORD *)a1 + 3) = a2[3];
  *((_QWORD *)a1 + 4) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 5) = a2[5];
  v7 = (int *)type metadata accessor for ShowEntity();
  v8 = v7[8];
  v9 = &a1[v8];
  v10 = (char *)a2 + v8;
  v11 = sub_1DA66C358();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  v145 = v13;
  v146 = v12;
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  *(_QWORD *)&a1[v7[9]] = *(_QWORD *)((char *)a2 + v7[9]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v7[10]] = *(_QWORD *)((char *)a2 + v7[10]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v7[11]] = *(_QWORD *)((char *)a2 + v7[11]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v7[12]] = *(_QWORD *)((char *)a2 + v7[12]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v7[13]] = *(_QWORD *)((char *)a2 + v7[13]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v7[14]] = *(_QWORD *)((char *)a2 + v7[14]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v7[15]] = *(_QWORD *)((char *)a2 + v7[15]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v7[16]] = *(_QWORD *)((char *)a2 + v7[16]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)&a1[v7[17]] = *(_QWORD *)((char *)a2 + v7[17]);
  sub_1DA66BE60();
  swift_release();
  v17 = v7[18];
  v18 = (uint64_t)&a1[v17];
  v19 = (char *)a2 + v17;
  v20 = (int *)sub_1DA66CA0C();
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22((uint64_t)v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      v143 = v11;
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_QWORD *)(v18 + 8) = *((_QWORD *)v19 + 1);
      v25 = v19[32];
      swift_bridgeObjectRetain();
      if (v25 == 255)
      {
        v37 = *((_OWORD *)v19 + 1);
        *(_BYTE *)(v18 + 32) = v19[32];
        *(_OWORD *)(v18 + 16) = v37;
      }
      else
      {
        v26 = *((_QWORD *)v19 + 2);
        v27 = *((_QWORD *)v19 + 3);
        sub_1DA481390(v26, v27, v25);
        *(_QWORD *)(v18 + 16) = v26;
        *(_QWORD *)(v18 + 24) = v27;
        *(_BYTE *)(v18 + 32) = v25;
      }
      *(_QWORD *)(v18 + 40) = *((_QWORD *)v19 + 5);
      *(_QWORD *)(v18 + 48) = *((_QWORD *)v19 + 6);
      v38 = (id *)(v19 + 56);
      v39 = v19[64];
      if (v39 == 255)
      {
        v41 = *v38;
        *(_BYTE *)(v18 + 64) = v19[64];
        *(_QWORD *)(v18 + 56) = v41;
      }
      else
      {
        v40 = *v38;
        sub_1DA4E762C(*v38, v19[64]);
        *(_QWORD *)(v18 + 56) = v40;
        *(_BYTE *)(v18 + 64) = v39;
      }
      v11 = v143;
      v42 = (id *)(v19 + 72);
      v43 = v19[80];
      if (v43 == 255)
      {
        v45 = *v42;
        *(_BYTE *)(v18 + 80) = v19[80];
        *(_QWORD *)(v18 + 72) = v45;
      }
      else
      {
        v44 = *v42;
        sub_1DA4E762C(*v42, v19[80]);
        *(_QWORD *)(v18 + 72) = v44;
        *(_BYTE *)(v18 + 80) = v43;
      }
      v46 = (id *)(v19 + 88);
      v47 = v19[96];
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v18 + 96) = v19[96];
        *(_QWORD *)(v18 + 88) = v49;
      }
      else
      {
        v48 = *v46;
        sub_1DA4E762C(*v46, v19[96]);
        *(_QWORD *)(v18 + 88) = v48;
        *(_BYTE *)(v18 + 96) = v47;
      }
      v50 = (id *)(v19 + 104);
      v51 = v19[112];
      if (v51 == 255)
      {
        v53 = *v50;
        *(_BYTE *)(v18 + 112) = v19[112];
        *(_QWORD *)(v18 + 104) = v53;
      }
      else
      {
        v52 = *v50;
        sub_1DA4E762C(*v50, v19[112]);
        *(_QWORD *)(v18 + 104) = v52;
        *(_BYTE *)(v18 + 112) = v51;
      }
      v54 = (id *)(v19 + 120);
      v55 = v19[128];
      if (v55 == 255)
      {
        v57 = *v54;
        *(_BYTE *)(v18 + 128) = v19[128];
        *(_QWORD *)(v18 + 120) = v57;
      }
      else
      {
        v56 = *v54;
        sub_1DA4E762C(*v54, v19[128]);
        *(_QWORD *)(v18 + 120) = v56;
        *(_BYTE *)(v18 + 128) = v55;
      }
      *(_BYTE *)(v18 + 129) = v19[129];
      v58 = v20[11];
      v59 = v18 + v58;
      v60 = &v19[v58];
      v61 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      v62 = v20[12];
      v63 = (_QWORD *)(v18 + v62);
      v64 = &v19[v62];
      *v63 = *(_QWORD *)v64;
      v63[1] = *((_QWORD *)v64 + 1);
      *(_BYTE *)(v18 + v20[13]) = v19[v20[13]];
      *(_BYTE *)(v18 + v20[14]) = v19[v20[14]];
      *(_BYTE *)(v18 + v20[15]) = v19[v20[15]];
      v65 = v20[16];
      v66 = (_QWORD *)(v18 + v65);
      v67 = &v19[v65];
      *v66 = *(_QWORD *)v67;
      v66[1] = *((_QWORD *)v67 + 1);
      v68 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v21 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68(v18, 0, 1, v20);
      goto LABEL_75;
    }
LABEL_13:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v18, v19, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_75;
  }
  if (v24)
  {
    sub_1DA4E8990(v18);
    goto LABEL_13;
  }
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = (__int128 *)(v18 + 16);
  v30 = (__int128 *)(v19 + 16);
  v31 = v19[32];
  v144 = v11;
  if (*(unsigned __int8 *)(v18 + 32) == 255)
  {
    if (v31 == 255)
    {
      v72 = *v30;
      *(_BYTE *)(v18 + 32) = v19[32];
      *v29 = v72;
    }
    else
    {
      v69 = *((_QWORD *)v19 + 2);
      v70 = *((_QWORD *)v19 + 3);
      sub_1DA481390(v69, v70, v31);
      *(_QWORD *)(v18 + 16) = v69;
      *(_QWORD *)(v18 + 24) = v70;
      *(_BYTE *)(v18 + 32) = v31;
    }
  }
  else if (v31 == 255)
  {
    sub_1DA4E8928(v18 + 16);
    v71 = v19[32];
    *v29 = *v30;
    *(_BYTE *)(v18 + 32) = v71;
  }
  else
  {
    v32 = *((_QWORD *)v19 + 2);
    v33 = *((_QWORD *)v19 + 3);
    sub_1DA481390(v32, v33, v31);
    v34 = *(_QWORD *)(v18 + 16);
    v35 = *(_QWORD *)(v18 + 24);
    *(_QWORD *)(v18 + 16) = v32;
    *(_QWORD *)(v18 + 24) = v33;
    v36 = *(_BYTE *)(v18 + 32);
    *(_BYTE *)(v18 + 32) = v31;
    sub_1DA47F868(v34, v35, v36);
  }
  *(_QWORD *)(v18 + 40) = *((_QWORD *)v19 + 5);
  *(_QWORD *)(v18 + 48) = *((_QWORD *)v19 + 6);
  v73 = (id *)(v18 + 56);
  v74 = (id *)(v19 + 56);
  v75 = v19[64];
  if (*(unsigned __int8 *)(v18 + 64) == 255)
  {
    v11 = v144;
    if (v75 == 255)
    {
      v81 = *v74;
      *(_BYTE *)(v18 + 64) = v19[64];
      *v73 = v81;
    }
    else
    {
      v79 = *v74;
      sub_1DA4E762C(*v74, v19[64]);
      *(_QWORD *)(v18 + 56) = v79;
      *(_BYTE *)(v18 + 64) = v75;
    }
  }
  else
  {
    v11 = v144;
    if (v75 == 255)
    {
      sub_1DA4E895C(v18 + 56);
      v80 = v19[64];
      *v73 = *v74;
      *(_BYTE *)(v18 + 64) = v80;
    }
    else
    {
      v76 = *v74;
      sub_1DA4E762C(*v74, v19[64]);
      v77 = *(void **)(v18 + 56);
      *(_QWORD *)(v18 + 56) = v76;
      v78 = *(_BYTE *)(v18 + 64);
      *(_BYTE *)(v18 + 64) = v75;
      sub_1DA4E7898(v77, v78);
    }
  }
  v82 = (id *)(v18 + 72);
  v83 = (id *)(v19 + 72);
  v84 = v19[80];
  if (*(unsigned __int8 *)(v18 + 80) == 255)
  {
    if (v84 == 255)
    {
      v90 = *v83;
      *(_BYTE *)(v18 + 80) = v19[80];
      *v82 = v90;
    }
    else
    {
      v88 = *v83;
      sub_1DA4E762C(*v83, v19[80]);
      *(_QWORD *)(v18 + 72) = v88;
      *(_BYTE *)(v18 + 80) = v84;
    }
  }
  else if (v84 == 255)
  {
    sub_1DA4E895C(v18 + 72);
    v89 = v19[80];
    *v82 = *v83;
    *(_BYTE *)(v18 + 80) = v89;
  }
  else
  {
    v85 = *v83;
    sub_1DA4E762C(*v83, v19[80]);
    v86 = *(void **)(v18 + 72);
    *(_QWORD *)(v18 + 72) = v85;
    v87 = *(_BYTE *)(v18 + 80);
    *(_BYTE *)(v18 + 80) = v84;
    sub_1DA4E7898(v86, v87);
  }
  v91 = (id *)(v18 + 88);
  v92 = (id *)(v19 + 88);
  v93 = v19[96];
  if (*(unsigned __int8 *)(v18 + 96) == 255)
  {
    if (v93 == 255)
    {
      v99 = *v92;
      *(_BYTE *)(v18 + 96) = v19[96];
      *v91 = v99;
    }
    else
    {
      v97 = *v92;
      sub_1DA4E762C(*v92, v19[96]);
      *(_QWORD *)(v18 + 88) = v97;
      *(_BYTE *)(v18 + 96) = v93;
    }
  }
  else if (v93 == 255)
  {
    sub_1DA4E895C(v18 + 88);
    v98 = v19[96];
    *v91 = *v92;
    *(_BYTE *)(v18 + 96) = v98;
  }
  else
  {
    v94 = *v92;
    sub_1DA4E762C(*v92, v19[96]);
    v95 = *(void **)(v18 + 88);
    *(_QWORD *)(v18 + 88) = v94;
    v96 = *(_BYTE *)(v18 + 96);
    *(_BYTE *)(v18 + 96) = v93;
    sub_1DA4E7898(v95, v96);
  }
  v100 = (id *)(v18 + 104);
  v101 = (id *)(v19 + 104);
  v102 = v19[112];
  if (*(unsigned __int8 *)(v18 + 112) == 255)
  {
    if (v102 == 255)
    {
      v108 = *v101;
      *(_BYTE *)(v18 + 112) = v19[112];
      *v100 = v108;
    }
    else
    {
      v106 = *v101;
      sub_1DA4E762C(*v101, v19[112]);
      *(_QWORD *)(v18 + 104) = v106;
      *(_BYTE *)(v18 + 112) = v102;
    }
  }
  else if (v102 == 255)
  {
    sub_1DA4E895C(v18 + 104);
    v107 = v19[112];
    *v100 = *v101;
    *(_BYTE *)(v18 + 112) = v107;
  }
  else
  {
    v103 = *v101;
    sub_1DA4E762C(*v101, v19[112]);
    v104 = *(void **)(v18 + 104);
    *(_QWORD *)(v18 + 104) = v103;
    v105 = *(_BYTE *)(v18 + 112);
    *(_BYTE *)(v18 + 112) = v102;
    sub_1DA4E7898(v104, v105);
  }
  v109 = (id *)(v18 + 120);
  v110 = (id *)(v19 + 120);
  v111 = v19[128];
  if (*(unsigned __int8 *)(v18 + 128) == 255)
  {
    if (v111 == 255)
    {
      v117 = *v110;
      *(_BYTE *)(v18 + 128) = v19[128];
      *v109 = v117;
    }
    else
    {
      v115 = *v110;
      sub_1DA4E762C(*v110, v19[128]);
      *(_QWORD *)(v18 + 120) = v115;
      *(_BYTE *)(v18 + 128) = v111;
    }
  }
  else if (v111 == 255)
  {
    sub_1DA4E895C(v18 + 120);
    v116 = v19[128];
    *v109 = *v110;
    *(_BYTE *)(v18 + 128) = v116;
  }
  else
  {
    v112 = *v110;
    sub_1DA4E762C(*v110, v19[128]);
    v113 = *(void **)(v18 + 120);
    *(_QWORD *)(v18 + 120) = v112;
    v114 = *(_BYTE *)(v18 + 128);
    *(_BYTE *)(v18 + 128) = v111;
    sub_1DA4E7898(v113, v114);
  }
  *(_BYTE *)(v18 + 129) = v19[129];
  v118 = v20[11];
  v119 = v18 + v118;
  v120 = &v19[v118];
  v121 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 24))(v119, v120, v121);
  v122 = v20[12];
  v123 = (_QWORD *)(v18 + v122);
  v124 = &v19[v122];
  *v123 = *(_QWORD *)v124;
  v123[1] = *((_QWORD *)v124 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + v20[13]) = v19[v20[13]];
  *(_BYTE *)(v18 + v20[14]) = v19[v20[14]];
  *(_BYTE *)(v18 + v20[15]) = v19[v20[15]];
  v125 = v20[16];
  v126 = (_QWORD *)(v18 + v125);
  v127 = &v19[v125];
  *v126 = *(_QWORD *)v127;
  v126[1] = *((_QWORD *)v127 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_75:
  v128 = v7[19];
  v129 = (uint64_t *)&a1[v128];
  v130 = (_QWORD *)((char *)a2 + v128);
  v131 = *(_QWORD *)((char *)a2 + v128 + 8);
  if (*(_QWORD *)&a1[v128 + 8] >> 60 == 15)
  {
    if (v131 >> 60 != 15)
    {
      v132 = *v130;
      sub_1DA498750(*v130, v131);
      *v129 = v132;
      v129[1] = v131;
      goto LABEL_82;
    }
    goto LABEL_80;
  }
  if (v131 >> 60 == 15)
  {
    sub_1DA4E89CC((uint64_t)v129);
LABEL_80:
    *(_OWORD *)v129 = *(_OWORD *)v130;
    goto LABEL_82;
  }
  v133 = *v130;
  sub_1DA498750(*v130, v131);
  v134 = *v129;
  v135 = v129[1];
  *v129 = v133;
  v129[1] = v131;
  sub_1DA4986F8(v134, v135);
LABEL_82:
  v136 = v7[20];
  v137 = &a1[v136];
  v138 = (char *)a2 + v136;
  v139 = v145(&a1[v136], 1, v11);
  v140 = v145(v138, 1, v11);
  if (!v139)
  {
    if (!v140)
    {
      (*(void (**)(char *, char *, uint64_t))(v146 + 24))(v137, v138, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v146 + 8))(v137, v11);
    goto LABEL_87;
  }
  if (v140)
  {
LABEL_87:
    v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v137, v138, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v137, 0, 1, v11);
  return a1;
}

uint64_t sub_1DA4E8928(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0D7DB28] - 8) + 8))();
  return a1;
}

uint64_t sub_1DA4E895C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0D7ED00] - 8) + 8))();
  return a1;
}

uint64_t sub_1DA4E8990(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA66CA0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA4E89CC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t initializeWithTake for UnfollowShowIntent(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = (int *)type metadata accessor for ShowEntity();
  v5 = v4[8];
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_1DA66C358();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  *(_QWORD *)(a1 + v4[9]) = *(_QWORD *)(a2 + v4[9]);
  *(_QWORD *)(a1 + v4[10]) = *(_QWORD *)(a2 + v4[10]);
  *(_QWORD *)(a1 + v4[11]) = *(_QWORD *)(a2 + v4[11]);
  *(_QWORD *)(a1 + v4[12]) = *(_QWORD *)(a2 + v4[12]);
  *(_QWORD *)(a1 + v4[13]) = *(_QWORD *)(a2 + v4[13]);
  *(_QWORD *)(a1 + v4[14]) = *(_QWORD *)(a2 + v4[14]);
  *(_QWORD *)(a1 + v4[15]) = *(_QWORD *)(a2 + v4[15]);
  *(_QWORD *)(a1 + v4[16]) = *(_QWORD *)(a2 + v4[16]);
  *(_QWORD *)(a1 + v4[17]) = *(_QWORD *)(a2 + v4[17]);
  v12 = v4[18];
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = (int *)sub_1DA66CA0C();
  v16 = *((_QWORD *)v15 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = v14[1];
    *v13 = *v14;
    v13[1] = v18;
    *((_BYTE *)v13 + 32) = *((_BYTE *)v14 + 32);
    *(_OWORD *)((char *)v13 + 40) = *(_OWORD *)((char *)v14 + 40);
    *((_QWORD *)v13 + 7) = *((_QWORD *)v14 + 7);
    *((_BYTE *)v13 + 64) = *((_BYTE *)v14 + 64);
    *(_OWORD *)((char *)v13 + 113) = *(_OWORD *)((char *)v14 + 113);
    *(_OWORD *)((char *)v13 + 104) = *(_OWORD *)((char *)v14 + 104);
    *(_OWORD *)((char *)v13 + 88) = *(_OWORD *)((char *)v14 + 88);
    *(_OWORD *)((char *)v13 + 72) = *(_OWORD *)((char *)v14 + 72);
    *((_BYTE *)v13 + 129) = *((_BYTE *)v14 + 129);
    v19 = v15[11];
    v30 = v10;
    v31 = v9;
    v20 = (char *)v13 + v19;
    v21 = (char *)v14 + v19;
    v22 = sub_1DA66C928();
    v23 = v20;
    v24 = v21;
    v10 = v30;
    v9 = v31;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v23, v24, v22);
    *(_OWORD *)((char *)v13 + v15[12]) = *(_OWORD *)((char *)v14 + v15[12]);
    *((_BYTE *)v13 + v15[13]) = *((_BYTE *)v14 + v15[13]);
    *((_BYTE *)v13 + v15[14]) = *((_BYTE *)v14 + v15[14]);
    *((_BYTE *)v13 + v15[15]) = *((_BYTE *)v14 + v15[15]);
    *(_OWORD *)((char *)v13 + v15[16]) = *(_OWORD *)((char *)v14 + v15[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_OWORD *)(a1 + v4[19]) = *(_OWORD *)(a2 + v4[19]);
  v25 = v4[20];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  if (v10(v27, 1, v8))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v26, v27, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v26, 0, 1, v8);
  }
  return a1;
}

char *assignWithTake for UnfollowShowIntent(char *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  int v23;
  int v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v45;
  _OWORD *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  int v52;
  int v53;
  void *v54;
  _QWORD *v55;
  int v56;
  int v57;
  void *v58;
  _QWORD *v59;
  int v60;
  int v61;
  void *v62;
  _QWORD *v63;
  int v64;
  int v65;
  void *v66;
  _QWORD *v67;
  int v68;
  int v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t, uint64_t);

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v4;
  swift_bridgeObjectRelease();
  v5 = (void *)*((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = a2[2];

  v6 = a2[4];
  *((_QWORD *)a1 + 3) = a2[3];
  *((_QWORD *)a1 + 4) = v6;
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 5) = a2[5];
  v7 = (int *)type metadata accessor for ShowEntity();
  v8 = v7[8];
  v9 = &a1[v8];
  v10 = (char *)a2 + v8;
  v11 = sub_1DA66C358();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  v85 = v12;
  v86 = v13;
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  *(_QWORD *)&a1[v7[9]] = *(_QWORD *)((char *)a2 + v7[9]);
  swift_release();
  *(_QWORD *)&a1[v7[10]] = *(_QWORD *)((char *)a2 + v7[10]);
  swift_release();
  *(_QWORD *)&a1[v7[11]] = *(_QWORD *)((char *)a2 + v7[11]);
  swift_release();
  *(_QWORD *)&a1[v7[12]] = *(_QWORD *)((char *)a2 + v7[12]);
  swift_release();
  *(_QWORD *)&a1[v7[13]] = *(_QWORD *)((char *)a2 + v7[13]);
  swift_release();
  *(_QWORD *)&a1[v7[14]] = *(_QWORD *)((char *)a2 + v7[14]);
  swift_release();
  *(_QWORD *)&a1[v7[15]] = *(_QWORD *)((char *)a2 + v7[15]);
  swift_release();
  *(_QWORD *)&a1[v7[16]] = *(_QWORD *)((char *)a2 + v7[16]);
  swift_release();
  *(_QWORD *)&a1[v7[17]] = *(_QWORD *)((char *)a2 + v7[17]);
  swift_release();
  v17 = v7[18];
  v18 = (uint64_t)&a1[v17];
  v19 = (char *)a2 + v17;
  v20 = (int *)sub_1DA66CA0C();
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22((uint64_t)v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      v25 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *(_OWORD *)(v18 + 16) = v25;
      *(_BYTE *)(v18 + 32) = v19[32];
      *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
      *(_QWORD *)(v18 + 56) = *((_QWORD *)v19 + 7);
      *(_BYTE *)(v18 + 64) = v19[64];
      *(_OWORD *)(v18 + 113) = *(_OWORD *)(v19 + 113);
      *(_OWORD *)(v18 + 104) = *(_OWORD *)(v19 + 104);
      *(_OWORD *)(v18 + 88) = *(_OWORD *)(v19 + 88);
      *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
      *(_BYTE *)(v18 + 129) = v19[129];
      v26 = v20[11];
      v27 = v18 + v26;
      v28 = &v19[v26];
      v29 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      *(_OWORD *)(v18 + v20[12]) = *(_OWORD *)&v19[v20[12]];
      *(_BYTE *)(v18 + v20[13]) = v19[v20[13]];
      *(_BYTE *)(v18 + v20[14]) = v19[v20[14]];
      *(_BYTE *)(v18 + v20[15]) = v19[v20[15]];
      *(_OWORD *)(v18 + v20[16]) = *(_OWORD *)&v19[v20[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
LABEL_13:
      v31 = v85;
      goto LABEL_14;
    }
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v18, v19, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  if (v24)
  {
    sub_1DA4E8990(v18);
    goto LABEL_12;
  }
  v45 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v45;
  swift_bridgeObjectRelease();
  v46 = v19 + 16;
  v47 = *(unsigned __int8 *)(v18 + 32);
  if (v47 != 255)
  {
    v48 = v19[32];
    if (v48 != 255)
    {
      v49 = *(_QWORD *)(v18 + 16);
      v50 = *(_QWORD *)(v18 + 24);
      *(_OWORD *)(v18 + 16) = *v46;
      *(_BYTE *)(v18 + 32) = v48;
      sub_1DA47F868(v49, v50, v47);
      goto LABEL_33;
    }
    sub_1DA4E8928(v18 + 16);
  }
  *(_OWORD *)(v18 + 16) = *v46;
  *(_BYTE *)(v18 + 32) = v19[32];
LABEL_33:
  *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
  v51 = v19 + 56;
  v52 = *(unsigned __int8 *)(v18 + 64);
  if (v52 != 255)
  {
    v53 = v19[64];
    if (v53 != 255)
    {
      v54 = *(void **)(v18 + 56);
      *(_QWORD *)(v18 + 56) = *v51;
      *(_BYTE *)(v18 + 64) = v53;
      sub_1DA4E7898(v54, v52);
      goto LABEL_38;
    }
    sub_1DA4E895C(v18 + 56);
  }
  *(_QWORD *)(v18 + 56) = *v51;
  *(_BYTE *)(v18 + 64) = v19[64];
LABEL_38:
  v31 = v85;
  v55 = v19 + 72;
  v56 = *(unsigned __int8 *)(v18 + 80);
  if (v56 != 255)
  {
    v57 = v19[80];
    if (v57 != 255)
    {
      v58 = *(void **)(v18 + 72);
      *(_QWORD *)(v18 + 72) = *v55;
      *(_BYTE *)(v18 + 80) = v57;
      sub_1DA4E7898(v58, v56);
      goto LABEL_43;
    }
    sub_1DA4E895C(v18 + 72);
  }
  *(_QWORD *)(v18 + 72) = *v55;
  *(_BYTE *)(v18 + 80) = v19[80];
LABEL_43:
  v59 = v19 + 88;
  v60 = *(unsigned __int8 *)(v18 + 96);
  if (v60 != 255)
  {
    v61 = v19[96];
    if (v61 != 255)
    {
      v62 = *(void **)(v18 + 88);
      *(_QWORD *)(v18 + 88) = *v59;
      *(_BYTE *)(v18 + 96) = v61;
      sub_1DA4E7898(v62, v60);
      goto LABEL_48;
    }
    sub_1DA4E895C(v18 + 88);
  }
  *(_QWORD *)(v18 + 88) = *v59;
  *(_BYTE *)(v18 + 96) = v19[96];
LABEL_48:
  v63 = v19 + 104;
  v64 = *(unsigned __int8 *)(v18 + 112);
  if (v64 != 255)
  {
    v65 = v19[112];
    if (v65 != 255)
    {
      v66 = *(void **)(v18 + 104);
      *(_QWORD *)(v18 + 104) = *v63;
      *(_BYTE *)(v18 + 112) = v65;
      sub_1DA4E7898(v66, v64);
      goto LABEL_53;
    }
    sub_1DA4E895C(v18 + 104);
  }
  *(_QWORD *)(v18 + 104) = *v63;
  *(_BYTE *)(v18 + 112) = v19[112];
LABEL_53:
  v67 = v19 + 120;
  v68 = *(unsigned __int8 *)(v18 + 128);
  if (v68 == 255)
  {
LABEL_57:
    *(_QWORD *)(v18 + 120) = *v67;
    *(_BYTE *)(v18 + 128) = v19[128];
    goto LABEL_58;
  }
  v69 = v19[128];
  if (v69 == 255)
  {
    sub_1DA4E895C(v18 + 120);
    goto LABEL_57;
  }
  v70 = *(void **)(v18 + 120);
  *(_QWORD *)(v18 + 120) = *v67;
  *(_BYTE *)(v18 + 128) = v69;
  sub_1DA4E7898(v70, v68);
LABEL_58:
  *(_BYTE *)(v18 + 129) = v19[129];
  v71 = v20[11];
  v72 = v18 + v71;
  v73 = &v19[v71];
  v74 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
  v75 = v20[12];
  v76 = (_QWORD *)(v18 + v75);
  v77 = &v19[v75];
  v79 = *(_QWORD *)v77;
  v78 = *((_QWORD *)v77 + 1);
  *v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + v20[13]) = v19[v20[13]];
  *(_BYTE *)(v18 + v20[14]) = v19[v20[14]];
  *(_BYTE *)(v18 + v20[15]) = v19[v20[15]];
  v80 = v20[16];
  v81 = (_QWORD *)(v18 + v80);
  v82 = &v19[v80];
  v84 = *(_QWORD *)v82;
  v83 = *((_QWORD *)v82 + 1);
  *v81 = v84;
  v81[1] = v83;
  swift_bridgeObjectRelease();
LABEL_14:
  v32 = v7[19];
  v33 = (uint64_t)&a1[v32];
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)&a1[v32 + 8];
  if (v35 >> 60 == 15)
  {
LABEL_17:
    *(_OWORD *)v33 = *(_OWORD *)v34;
    goto LABEL_19;
  }
  v36 = *((_QWORD *)v34 + 1);
  if (v36 >> 60 == 15)
  {
    sub_1DA4E89CC(v33);
    goto LABEL_17;
  }
  v37 = *(_QWORD *)v33;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = v36;
  sub_1DA4986F8(v37, v35);
LABEL_19:
  v38 = v7[20];
  v39 = &a1[v38];
  v40 = (char *)a2 + v38;
  v41 = v86(&a1[v38], 1, v11);
  v42 = v86(v40, 1, v11);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v39, v40, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v39, v11);
    goto LABEL_24;
  }
  if (v42)
  {
LABEL_24:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v39, v40, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v39, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnfollowShowIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA4E9418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShowEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for UnfollowShowIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA4E9460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShowEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UnfollowShowIntent()
{
  uint64_t result;

  result = qword_1EDAE3CC0;
  if (!qword_1EDAE3CC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA4E94DC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ShowEntity();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t PodcastsUIBootstrap.buildForegroundDependencies(basedOn:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_signpost_type_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v2 = sub_1DA66DD74();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - v7;
  if (qword_1EDADFCB0 != -1)
    swift_once();
  v9 = sub_1DA66DDD4();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EDADFC90);
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v10 = sub_1DA66DDB0();
  v11 = sub_1DA66FF58();
  if ((sub_1DA670240() & 1) != 0)
  {
    v12 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v12(v5, v8, v2);
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v10, v11, v14, "PodcastsUIBootstrap.foreground", "", v13, 2u);
    MEMORY[0x1DF0A0474](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {

    v12 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  }
  v12(v5, v8, v2);
  sub_1DA66DE10();
  swift_allocObject();
  sub_1DA66DE04();
  PodcastsFoundationBootstrap.buildForegroundDependencies(basedOn:)(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2248);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v15 + 32) = type metadata accessor for LazyJSStack();
  v18[1] = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1FE8);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1FF0, &qword_1EDAE1FE8, MEMORY[0x1E0DEAF38]);
  sub_1DA66EDE8();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DA66EE30();
  sub_1DA66BE60();
  v16 = sub_1DA66EE3C();
  sub_1DA66EDF4();
  swift_release();
  sub_1DA4EAC6C("PodcastsUIBootstrap.foreground", 30, 2);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v16;
}

uint64_t PodcastsUIBootstrap.buildBackgroundDependencies()()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  os_signpost_type_t v31;
  char v32;
  void (*v33)(char *, char *, uint64_t);
  uint8_t *v34;
  os_signpost_id_t v35;
  uint8_t *v36;
  id v37;
  id v38;
  char **v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD);
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t v69;
  void *ObjCClassFromMetadata;
  id v71;
  id v72;
  void (*v73)(_QWORD, _QWORD, _QWORD);
  char *v74;
  ValueMetadata *v75;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  void (*v83)(char *, ValueMetadata *);
  unint64_t v84;
  unint64_t v85;
  void (*v86)(unint64_t, char *, uint64_t);
  char *v87;
  ValueMetadata *v88;
  void (*v89)(uint64_t *, char *, ValueMetadata *);
  uint64_t *v90;
  void *v91;
  void *v92;
  void *v93;
  char *v94;
  uint64_t v95;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char **v111;
  char **v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  _BYTE v123[40];
  __int128 v124;
  uint64_t v125;
  id v126[2];
  ValueMetadata *v127;
  _UNKNOWN **v128;

  v100 = sub_1DA66DA14();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v97 = (char *)&v97 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v98 = (char *)&v97 - v3;
  v122 = sub_1DA66F2BC();
  v113 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v101 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v102 = (char *)&v97 - v6;
  MEMORY[0x1E0C80A78](v7);
  v118 = (char *)&v97 - v8;
  MEMORY[0x1E0C80A78](v9);
  v112 = (char **)((char *)&v97 - v10);
  v110 = type metadata accessor for AssetCaches();
  MEMORY[0x1E0C80A78](v110);
  v109 = (uint64_t)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v111 = (char **)((char *)&v97 - v13);
  v108 = sub_1DA66F4FC();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v105 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v106 = (char *)&v97 - v16;
  v121 = (_QWORD *)sub_1DA66FDF0();
  v104 = *(v121 - 1);
  MEMORY[0x1E0C80A78](v121);
  v103 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DA66EBD8();
  v114 = *(_QWORD **)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1DA66DD74();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v97 - v26;
  v28 = *v0;
  if (qword_1EDADFCB0 != -1)
    swift_once();
  v119 = v18;
  v29 = sub_1DA66DDD4();
  __swift_project_value_buffer(v29, (uint64_t)qword_1EDADFC90);
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v30 = sub_1DA66DDB0();
  v31 = sub_1DA66FF58();
  v32 = sub_1DA670240();
  v120 = v21;
  v117 = v22;
  if ((v32 & 1) != 0)
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v33(v24, v27, v21);
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    v35 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v30, v31, v35, "PodcastsUIBootstrap.background", "", v34, 2u);
    v36 = v34;
    v21 = v120;
    MEMORY[0x1DF0A0474](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  else
  {

    v33 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  }
  v116 = v27;
  v33(v24, v27, v21);
  sub_1DA66DE10();
  swift_allocObject();
  v115 = sub_1DA66DE04();
  v37 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  PodcastsFoundationBootstrap.buildBackgroundDependencies()();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE2040);
  v126[0] = v28;
  v38 = v28;
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  v39 = (char **)v114[1];
  v40 = v119;
  ((void (*)(char *, uint64_t))v39)(v20, v119);

  swift_release();
  v127 = (ValueMetadata *)sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2030);
  v128 = (_UNKNOWN **)MEMORY[0x1E0D416D0];
  v126[0] = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1EA8);
  sub_1DA4813E4((uint64_t)v126, (uint64_t)&v124);
  v41 = v37;
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
  v126[0] = v41;
  v114 = v41;
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  swift_release();
  v42 = v104;
  v43 = (uint64_t)v103;
  v44 = v121;
  (*(void (**)(char *, _QWORD, _QWORD *))(v104 + 104))(v103, *MEMORY[0x1E0D7EF98], v121);
  v45 = sub_1DA4EAF00(v43);
  (*(void (**)(uint64_t, _QWORD *))(v42 + 8))(v43, v44);
  type metadata accessor for UserPreferences();
  v46 = (_QWORD *)swift_allocObject();
  v46[2] = v45;
  v47 = (void *)sub_1DA47E32C((unint64_t *)&qword_1EDAE07D8, (uint64_t (*)(uint64_t))type metadata accessor for UserPreferences, (uint64_t)&unk_1DA678BB4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E90);
  v126[0] = v46;
  v126[1] = v47;
  swift_unknownObjectRetain();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  swift_release();
  swift_release();
  v48 = (void *)objc_opt_self();
  v49 = objc_msgSend(v48, sel_bagProfileName);
  sub_1DA66F8BC();

  v121 = v48;
  v50 = objc_msgSend(v48, sel_bagProfileVersion);
  sub_1DA66F8BC();

  v51 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v52 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v53 = objc_msgSend((id)objc_opt_self(), sel_bagForProfile_profileVersion_, v51, v52);

  v54 = v106;
  sub_1DA66F4A8();
  v55 = v107;
  v56 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v105, v54, v108);
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
  swift_release();
  type metadata accessor for ExplicitContentPresenter();
  v57 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A0);
  v58 = swift_allocObject();
  *(_DWORD *)(v58 + 20) = 0;
  *(_BYTE *)(v58 + 16) = 2;
  v57[2] = v58;
  v126[0] = v57;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  swift_release();
  swift_release();
  v59 = type metadata accessor for LazyJSStack();
  v60 = sub_1DA66BE60();
  v126[0] = (id)LazyJSStack.__allocating_init(asPartOf:)(v60);
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  swift_release();
  swift_release();
  v127 = (ValueMetadata *)v59;
  v128 = (_UNKNOWN **)sub_1DA47E32C((unint64_t *)&unk_1EDADF7F0, (uint64_t (*)(uint64_t))type metadata accessor for LazyJSStack, (uint64_t)&protocol conformance descriptor for LazyJSStack);
  sub_1DA66EDDC();
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  sub_1DA4813E4((uint64_t)v126, (uint64_t)&v124);
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
  swift_release();
  v62 = (_QWORD *)swift_allocObject();
  v63 = swift_allocObject();
  *(_DWORD *)(v63 + 20) = 0;
  *(_BYTE *)(v63 + 16) = 2;
  v62[2] = v63;
  v126[0] = v62;
  sub_1DA66BE60();
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  swift_release();
  swift_release();
  if (qword_1EDAE0190 != -1)
    swift_once();
  v64 = __swift_project_value_buffer(v110, (uint64_t)qword_1EDAE0178);
  v65 = (void (*)(_QWORD, _QWORD))v111;
  sub_1DA484548(v64, (uint64_t)v111);
  sub_1DA484548((uint64_t)v65, v109);
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  swift_release();
  sub_1DA4B2E3C((uint64_t)v65);
  v66 = v113;
  if (qword_1EDAE0888 != -1)
    swift_once();
  v67 = (void *)qword_1EDAE0880;
  type metadata accessor for AssetDownloaders();
  v126[0] = v67;
  v68 = v67;
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);

  swift_release();
  v69 = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2018);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v71 = objc_msgSend(ObjCClassFromMetadata, sel_defaultStore);
  v127 = (ValueMetadata *)v69;
  v128 = &protocol witness table for MTImageStore;
  v126[0] = v71;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0170);
  sub_1DA4813E4((uint64_t)v126, (uint64_t)&v124);
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
  v126[0] = objc_msgSend(ObjCClassFromMetadata, sel_defaultStore);
  v72 = v126[0];
  sub_1DA66EBCC();
  sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);

  swift_release();
  sub_1DA66BE60();
  v73 = (void (*)(_QWORD, _QWORD, _QWORD))v112;
  sub_1DA4EB3A8((uint64_t)v112);
  sub_1DA66EDC4();
  if (v125)
  {
    sub_1DA4841BC(&v124, (uint64_t)v126);
    sub_1DA4813E4((uint64_t)v126, (uint64_t)&v124);
    v74 = v118;
    v75 = (ValueMetadata *)v122;
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 16))(v118, v73, v122);
    sub_1DA4EB9A4((uint64_t)&v124, (uint64_t)v123);
    sub_1DA66F298();
    sub_1DA47E2F0((uint64_t)&v124, (uint64_t *)&unk_1EDADFF88);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
    (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD), ValueMetadata *))(v66 + 8))(v73, v75);
    (*(void (**)(_QWORD, char *, ValueMetadata *))(v66 + 32))(v73, v74, v75);
  }
  else
  {
    sub_1DA47E2F0((uint64_t)&v124, (uint64_t *)&unk_1EDADFF88);
    v75 = (ValueMetadata *)v122;
  }
  v127 = v75;
  v128 = (_UNKNOWN **)MEMORY[0x1E0D407F0];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v126);
  v112 = *(char ***)(v66 + 32);
  ((void (*)(uint64_t *, _QWORD, ValueMetadata *))v112)(boxed_opaque_existential_1, v73, v75);
  sub_1DA4813E4((uint64_t)v126, (uint64_t)&v124);
  sub_1DA66EBCC();
  v77 = sub_1DA66EE0C();
  ((void (*)(char *, uint64_t))v39)(v20, v40);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
  swift_release_n();
  if (objc_msgSend(v121, sel_supportsLocalLibrary))
  {
    sub_1DA66D660();
    sub_1DA66BE60();
    v126[0] = (id)MediaSpaceCalculator.init(asPartOf:)();
    sub_1DA66BE60();
    sub_1DA66EBCC();
    v110 = v77;
    sub_1DA66EE0C();
    ((void (*)(char *, uint64_t))v39)(v20, v40);
    swift_release();
    sub_1DA66BE60();
    sub_1DA66EDDC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C20);
    sub_1DA66EDDC();
    v109 = v61;
    v78 = v98;
    sub_1DA66DA08();
    swift_release();
    v79 = v99;
    v80 = v100;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v97, v78, v100);
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    v111 = v39;
    ((void (*)(char *, uint64_t))v39)(v20, v40);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
    swift_release();
    sub_1DA66BE60();
    v81 = v101;
    sub_1DA66F2B0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FD8);
    sub_1DA4841D4(&qword_1F0268FE0, &qword_1F0268FD8, (uint64_t)&unk_1DA67AA38);
    v82 = v118;
    sub_1DA66F28C();
    v83 = *(void (**)(char *, ValueMetadata *))(v66 + 8);
    v83(v81, v75);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00E0);
    v84 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    v85 = swift_allocObject() + v84;
    v86 = *(void (**)(unint64_t, char *, uint64_t))(v66 + 16);
    v86(v85, v82, v122);
    v87 = v102;
    sub_1DA66F2B0();
    sub_1DA66F2A4();
    swift_setDeallocating();
    v88 = (ValueMetadata *)v122;
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v83(v82, v88);
    sub_1DA66EDC4();
    if (v125)
    {
      sub_1DA4841BC(&v124, (uint64_t)v126);
      sub_1DA4813E4((uint64_t)v126, (uint64_t)&v124);
      v86((unint64_t)v82, v87, (uint64_t)v88);
      sub_1DA4EB9A4((uint64_t)&v124, (uint64_t)v123);
      sub_1DA66F298();
      sub_1DA47E2F0((uint64_t)&v124, (uint64_t *)&unk_1EDADFF88);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
      v83(v87, v88);
      v89 = (void (*)(uint64_t *, char *, ValueMetadata *))v112;
      ((void (*)(char *, char *, ValueMetadata *))v112)(v87, v82, v88);
    }
    else
    {
      sub_1DA47E2F0((uint64_t)&v124, (uint64_t *)&unk_1EDADFF88);
      v89 = (void (*)(uint64_t *, char *, ValueMetadata *))v112;
    }
    v127 = v88;
    v128 = (_UNKNOWN **)MEMORY[0x1E0D407F0];
    v90 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v126);
    v89(v90, v87, v88);
    sub_1DA4813E4((uint64_t)v126, (uint64_t)&v124);
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    v40 = v119;
    v39 = v111;
    ((void (*)(char *, uint64_t))v111)(v20, v119);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
    swift_release();
    swift_release_n();
  }
  if ((objc_msgSend(v121, sel_supportsLocalLibrary) & 1) == 0)
  {
    v127 = &type metadata for ThinClientEpisodeStateNetworking;
    v128 = (_UNKNOWN **)sub_1DA4EB93C();
    v126[0] = (id)swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
    sub_1DA66BE60();
    sub_1DA66EDDC();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FC0);
    sub_1DA4813E4((uint64_t)v126, (uint64_t)&v124);
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    ((void (*)(char *, uint64_t))v39)(v20, v40);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
    sub_1DA66DBE8();
    sub_1DA66BE60();
    sub_1DA66EDDC();
    v91 = (void *)sub_1DA66DBDC();
    swift_release();
    v126[0] = v91;
    sub_1DA66BE60();
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    ((void (*)(char *, uint64_t))v39)(v20, v40);
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FC8);
    sub_1DA66BE60();
    sub_1DA66EDDC();
    v92 = (void *)sub_1DA66DC48();
    swift_release();
    v126[0] = v92;
    sub_1DA66BE60();
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    ((void (*)(char *, uint64_t))v39)(v20, v40);
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FD0);
    sub_1DA66BE60();
    sub_1DA66EDDC();
    v93 = (void *)sub_1DA66DC48();
    swift_release();
    v126[0] = v93;
    sub_1DA66BE60();
    sub_1DA66EBCC();
    sub_1DA66EE0C();
    ((void (*)(char *, uint64_t))v39)(v20, v40);
    swift_release();
    swift_release();
    swift_release();
  }
  v94 = v116;
  sub_1DA66EE30();
  sub_1DA66BE60();
  v95 = sub_1DA66EE3C();
  sub_1DA66EDF4();

  swift_release();
  sub_1DA4EAC6C("PodcastsUIBootstrap.background", 30, 2);
  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v94, v120);
  return v95;
}

uint64_t sub_1DA4EAC6C(char *a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t result;
  uint64_t v17;
  const char *v18;
  uint8_t *v19;
  os_signpost_id_t v20;
  void (*v21)(_BYTE *, uint64_t);
  _BYTE v22[4];
  int v23;
  uint64_t v24;
  int v25;

  v25 = a3;
  v24 = sub_1DA66DDE0();
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1DA66DD74();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v22[-v12];
  if (qword_1EDADFCB0 != -1)
    swift_once();
  v14 = sub_1DA66DDD4();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EDADFC90);
  v15 = sub_1DA66DDB0();
  sub_1DA66DDF8();
  v23 = sub_1DA66FF4C();
  result = sub_1DA670240();
  if ((result & 1) == 0)
    goto LABEL_7;
  if ((v25 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    }
    goto LABEL_12;
  }
  if ((unint64_t)a1 >> 32)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (a1 >> 11 == 27)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  if (a1 >> 16 > 0x10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  a1 = sub_1DA5C964C();
LABEL_12:
  sub_1DA66BE60();
  sub_1DA66DE1C();
  swift_release();
  v17 = v24;
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v4 + 88))(v6, v24) == *MEMORY[0x1E0DF2190])
  {
    v18 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v17);
    v18 = "";
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v19 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v19 = 0;
  v20 = sub_1DA66DD5C();
  _os_signpost_emit_with_name_impl(&dword_1DA478000, v15, (os_signpost_type_t)v23, v20, a1, v18, v19, 2u);
  MEMORY[0x1DF0A0474](v19, -1, -1);

  v21 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v21(v13, v7);
  return ((uint64_t (*)(_BYTE *, uint64_t))v21)(v10, v7);
}

uint64_t sub_1DA4EAF00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  os_unfair_lock_s *v6;
  void *v7;
  uint64_t result;
  uint64_t v9;
  os_unfair_lock_s *v10;
  unint64_t v11;

  v2 = sub_1DA66FDF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3C18);
  sub_1DA66EDDC();
  v6 = v10;
  os_unfair_lock_lock(v10 + 6);
  v7 = sub_1DA4EB784((uint64_t *)&v6[4], a1);
  os_unfair_lock_unlock(v6 + 6);
  if (v7)
  {
    swift_release();
    return (uint64_t)v7;
  }
  else
  {
    os_unfair_lock_lock(v6 + 6);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v6 + 6);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    v10 = 0;
    v11 = 0xE000000000000000;
    sub_1DA670444();
    sub_1DA66F988();
    sub_1DA670528();
    sub_1DA66F988();
    sub_1DA47D774(0, &qword_1F0268FF8);
    sub_1DA47E32C(&qword_1EDAE4BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7EFB0], MEMORY[0x1E0D7EFC0]);
    sub_1DA66F790();
    sub_1DA66F988();
    swift_bridgeObjectRelease();
    result = sub_1DA670570();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA4EB11C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  os_unfair_lock_s *v16;
  unint64_t v17;

  v4 = sub_1DA66D5C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0268FE8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3BF0);
  sub_1DA66EDDC();
  v11 = v16;
  os_unfair_lock_lock(v16 + 6);
  sub_1DA4EB7D4((uint64_t *)&v11[4], a1, (uint64_t)v10);
  os_unfair_lock_unlock(v11 + 6);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_1DA47E2F0((uint64_t)v10, &qword_1F0268FE8);
    os_unfair_lock_lock(v11 + 6);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v11 + 6);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_1DA670444();
    sub_1DA66F988();
    sub_1DA670528();
    sub_1DA66F988();
    sub_1DA47E32C((unint64_t *)&qword_1F026E390, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E5D0], MEMORY[0x1E0D7E5E0]);
    sub_1DA66F790();
    sub_1DA66F988();
    swift_bridgeObjectRelease();
    result = sub_1DA670570();
    __break(1u);
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v10, v12);
  }
  return result;
}

uint64_t sub_1DA4EB3A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(unint64_t, char *, uint64_t);
  char *v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;

  v29 = a1;
  v1 = sub_1DA66F2BC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - v6;
  MEMORY[0x1E0C80A78](v8);
  v33 = (char *)&v26 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - v14;
  MEMORY[0x1E0C80A78](v16);
  v32 = (char *)&v26 - v17;
  sub_1DA66F2B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFB98);
  sub_1DA4841D4(&qword_1EDADFB90, &qword_1EDADFB98, (uint64_t)&protocol conformance descriptor for FetchMAPIRepresentableIntentImplementation<A>);
  sub_1DA66F28C();
  v18 = *(void (**)(char *, uint64_t))(v2 + 8);
  v31 = v15;
  v18(v15, v1);
  sub_1DA66F2B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFBA8);
  sub_1DA4841D4(&qword_1EDADFBA0, &qword_1EDADFBA8, (uint64_t)&protocol conformance descriptor for FetchMAPIRepresentableIntentImplementation<A>);
  sub_1DA66F28C();
  v30 = v12;
  v18(v12, v1);
  v19 = v33;
  sub_1DA66F2B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFBB8);
  sub_1DA4841D4(&qword_1EDADFBB0, &qword_1EDADFBB8, (uint64_t)&protocol conformance descriptor for FetchMAPIRepresentableIntentImplementation<A>);
  sub_1DA66F28C();
  v18(v19, v1);
  sub_1DA66F2B0();
  sub_1DA4EB9EC();
  sub_1DA66F28C();
  v27 = v7;
  v18(v7, v1);
  sub_1DA66F2B0();
  sub_1DA4EBA30();
  sub_1DA66F28C();
  v18(v4, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00E0);
  v20 = *(_QWORD *)(v2 + 72);
  v21 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v28 = swift_allocObject();
  v22 = v28 + v21;
  v23 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 16);
  v23(v28 + v21, v32, v1);
  v23(v22 + v20, v31, v1);
  v23(v22 + 2 * v20, v30, v1);
  v23(v22 + 3 * v20, v33, v1);
  v24 = v27;
  v23(v22 + 4 * v20, v27, v1);
  sub_1DA66F2B0();
  sub_1DA66F2A4();
  sub_1DA66F2A4();
  sub_1DA66F2A4();
  sub_1DA66F2A4();
  sub_1DA66F2A4();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v18(v24, v1);
  v18(v33, v1);
  v18(v30, v1);
  v18(v31, v1);
  return ((uint64_t (*)(char *, uint64_t))v18)(v32, v1);
}

uint64_t sub_1DA4EB76C(uint64_t a1)
{
  return PodcastsUIBootstrap.buildForegroundDependencies(basedOn:)(a1);
}

void *sub_1DA4EB784(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  void *v5;
  id v6;

  v2 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
    return 0;
  v3 = sub_1DA55C950(a2);
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v3);
  v6 = v5;
  return v5;
}

uint64_t sub_1DA4EB7D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v5 = sub_1DA55C8B8(a2), (v6 & 1) != 0))
  {
    v7 = v5;
    v8 = *(_QWORD *)(v4 + 56);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a3, v8 + *(_QWORD *)(v10 + 72) * v7, v9);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
}

uint64_t sub_1DA4EB894(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1DA4EB8A4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

void sub_1DA4EB8B4(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13;

  v13 = sub_1DA66DD5C();
  _os_signpost_emit_with_name_impl(&dword_1DA478000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_1DA4EB934()
{
  return 1;
}

unint64_t sub_1DA4EB93C()
{
  unint64_t result;

  result = qword_1F0268FB8;
  if (!qword_1F0268FB8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ThinClientEpisodeStateNetworking, &type metadata for ThinClientEpisodeStateNetworking);
    atomic_store(result, (unint64_t *)&qword_1F0268FB8);
  }
  return result;
}

uint64_t sub_1DA4EB980()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DA4EB9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFF88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DA4EB9EC()
{
  unint64_t result;

  result = qword_1EDADFBC0;
  if (!qword_1EDADFBC0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FetchPodcastForEpisodeIntentImplementation, &type metadata for FetchPodcastForEpisodeIntentImplementation);
    atomic_store(result, (unint64_t *)&qword_1EDADFBC0);
  }
  return result;
}

unint64_t sub_1DA4EBA30()
{
  unint64_t result;

  result = qword_1F0268FF0;
  if (!qword_1F0268FF0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for DebugLibraryStorageTipSuggestedLimitIntentImplementation, &type metadata for DebugLibraryStorageTipSuggestedLimitIntentImplementation);
    atomic_store(result, (unint64_t *)&qword_1F0268FF0);
  }
  return result;
}

unint64_t static RemoveEpisodesDownloadIntent.kind.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t RemoveEpisodesDownloadIntent.episodeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoveEpisodesDownloadIntent.init(episodeIdentifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_1DA4EBAA0(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x80000001DA678550;
}

ValueMetadata *type metadata accessor for RemoveEpisodesDownloadIntent()
{
  return &type metadata for RemoveEpisodesDownloadIntent;
}

uint64_t WidgetImageProvider.diskCache.getter()
{
  return sub_1DA66BE60();
}

uint64_t WidgetImageProvider.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  _BYTE v10[8];
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5320);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1DA66C358();
  MEMORY[0x1E0C80A78](v6);
  v7 = objc_msgSend((id)objc_opt_self(), sel_artworkAssetURL);
  sub_1DA66C304();

  sub_1DA66E038();
  sub_1DA4841D4(&qword_1EDAE5318, &qword_1EDAE5320, MEMORY[0x1E0C960D0]);
  v8 = sub_1DA66E11C();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE52E8);
  swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADEEE8);
  sub_1DA4841D4(&qword_1EDAE23C8, &qword_1EDADEEE8, MEMORY[0x1E0C95D90]);
  sub_1DA66D3B4();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  sub_1DA66FEC8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE5300);
  swift_allocObject();
  v10[4] = 0;
  result = sub_1DA66CEEC();
  *a1 = result;
  return result;
}

uint64_t WidgetImageProvider.load(artwork:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EDADEEF0);
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v1;
  v14 = sub_1DA4EBF60(a1);
  if (v14)
  {
    v15 = v14;
    v20 = (uint64_t)v14;
    sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5388);
    v16 = v15;
    sub_1DA66E02C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    sub_1DA66E020();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1DA4841D4(&qword_1EDAE23D8, &qword_1EDAE53D0, MEMORY[0x1E0C964C8]);
    v17 = sub_1DA66E11C();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    sub_1DA4EC9DC();
    v20 = swift_allocError();
    sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5388);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    sub_1DA66E014();
    sub_1DA4841D4(&qword_1EDAE23D0, qword_1EDADEEF0, MEMORY[0x1E0C96068]);
    v17 = sub_1DA66E11C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  }
  return v17;
}

id sub_1DA4EBF60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint8_t *v46;
  uint8_t *v47;
  void (*v48)(char *, uint64_t);
  id v49;
  char *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  _BOOL4 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  NSObject *v95;
  os_log_type_t v96;
  char *v97;
  uint8_t *v98;
  uint8_t *v99;
  double v100;
  double v101;
  double v102;
  double v103;
  char *v104;
  double v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126[2];
  id v127;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v3);
  v111 = (uint64_t)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C358();
  v114 = *(_QWORD *)(v5 - 8);
  v115 = v5;
  MEMORY[0x1E0C80A78](v5);
  v112 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66C8BC();
  v120 = *(_QWORD *)(v7 - 8);
  v121 = v7;
  MEMORY[0x1E0C80A78](v7);
  v119 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66DEF4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v113 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v110 = (char *)&v106 - v13;
  MEMORY[0x1E0C80A78](v14);
  v118 = (char *)&v106 - v15;
  MEMORY[0x1E0C80A78](v16);
  v123 = (char *)&v106 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v106 - v19;
  v21 = type metadata accessor for PreparedArtworkRequest();
  MEMORY[0x1E0C80A78](v21);
  v108 = (uint64_t)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v117 = (uint64_t)&v106 - v24;
  MEMORY[0x1E0C80A78](v25);
  v116 = (uint64_t)&v106 - v26;
  MEMORY[0x1E0C80A78](v27);
  v122 = (uint64_t)&v106 - v28;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v106 - v30;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v106 - v33;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v106 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v106 - v39;
  v41 = *v1;
  v42 = sub_1DA66CEBC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, a1, v42);
  sub_1DA66CC1C();
  _s10PodcastsUI22PreparedArtworkRequestV4with6formatAC0A10Foundation0D6FormatO_tF_0();
  sub_1DA66DE94();
  v43 = sub_1DA66DEDC();
  v44 = sub_1DA66FD90();
  v45 = os_log_type_enabled(v43, v44);
  v124 = v9;
  if (v45)
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    _os_log_impl(&dword_1DA478000, v43, v44, "Checking for exact request...", v46, 2u);
    v47 = v46;
    v9 = v124;
    MEMORY[0x1DF0A0474](v47, -1, -1);
  }

  v48 = *(void (**)(char *, uint64_t))(v10 + 8);
  v48(v20, v9);
  sub_1DA4ED950();
  sub_1DA66CF04();
  v49 = (id)v126[1];
  sub_1DA481308((uint64_t)v40, (uint64_t)v34);
  if (v49)
  {
    sub_1DA4ED998((uint64_t)v34);
    v127 = v49;
LABEL_6:
    v50 = v123;
    sub_1DA66DE94();
    sub_1DA481308((uint64_t)v40, (uint64_t)v31);
    v51 = v122;
    sub_1DA481308((uint64_t)v40, v122);
    v52 = sub_1DA66DEDC();
    v53 = sub_1DA66FD90();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v107 = v48;
      v117 = v55;
      v126[0] = v55;
      *(_DWORD *)v54 = 136315394;
      v118 = v40;
      v56 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
      v125 = sub_1DA49AD00(v56, v57, v126);
      v109 = v37;
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      sub_1DA4ED998((uint64_t)v31);
      *(_WORD *)(v54 + 12) = 2080;
      v58 = v51;
      v59 = v119;
      _s10PodcastsUI22PreparedArtworkRequestV10fileFormat0A10Foundation04FileG0Ovg_0();
      v60 = sub_1DA66C8B0();
      v62 = v61;
      (*(void (**)(char *, uint64_t))(v120 + 8))(v59, v121);
      v125 = sub_1DA49AD00(v60, v62, v126);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      sub_1DA4ED998(v58);
      _os_log_impl(&dword_1DA478000, v52, v53, "Found exact match: %s.%s", (uint8_t *)v54, 0x16u);
      v63 = v117;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v63, -1, -1);
      MEMORY[0x1DF0A0474](v54, -1, -1);

      v107(v123, v124);
      sub_1DA4ED998((uint64_t)v109);
      v64 = (uint64_t)v118;
LABEL_10:
      sub_1DA4ED998(v64);
      return v49;
    }

    sub_1DA4ED998(v51);
    sub_1DA4ED998((uint64_t)v31);
    v48(v50, v124);
LABEL_9:
    sub_1DA4ED998((uint64_t)v37);
    v64 = (uint64_t)v40;
    goto LABEL_10;
  }
  sub_1DA66CF04();
  sub_1DA4ED998((uint64_t)v34);
  v49 = v127;
  if (v127)
    goto LABEL_6;
  v66 = v41;
  v67 = v118;
  sub_1DA66DE94();
  v68 = v116;
  sub_1DA481308((uint64_t)v40, v116);
  v69 = v117;
  sub_1DA481308((uint64_t)v40, v117);
  v70 = sub_1DA66DEDC();
  v71 = sub_1DA66FD90();
  v72 = v71;
  v73 = os_log_type_enabled(v70, v71);
  v109 = v37;
  v106 = v66;
  if (v73)
  {
    v74 = v69;
    v75 = swift_slowAlloc();
    v123 = (char *)swift_slowAlloc();
    v126[0] = (uint64_t)v123;
    *(_DWORD *)v75 = 136315394;
    v107 = v48;
    LODWORD(v122) = v72;
    v76 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
    v125 = sub_1DA49AD00(v76, v77, v126);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    sub_1DA4ED998(v68);
    *(_WORD *)(v75 + 12) = 2080;
    v78 = v119;
    v79 = v74;
    _s10PodcastsUI22PreparedArtworkRequestV10fileFormat0A10Foundation04FileG0Ovg_0();
    v80 = sub_1DA66C8B0();
    v82 = v81;
    (*(void (**)(char *, uint64_t))(v120 + 8))(v78, v121);
    v125 = sub_1DA49AD00(v80, v82, v126);
    v9 = v124;
    v37 = v109;
    v48 = v107;
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    sub_1DA4ED998(v79);
    _os_log_impl(&dword_1DA478000, v70, (os_log_type_t)v122, "Failed to find exact request: %s.%s, checking for original", (uint8_t *)v75, 0x16u);
    v83 = v123;
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v83, -1, -1);
    MEMORY[0x1DF0A0474](v75, -1, -1);
  }
  else
  {
    sub_1DA4ED998(v68);
    sub_1DA4ED998(v69);
  }

  v48(v67, v9);
  v85 = v114;
  v84 = v115;
  v86 = v111;
  v126[0] = v106;
  sub_1DA4ECA20(v111);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v86, 1, v84) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v112, v86, v84);
    sub_1DA66DE94();
    v95 = sub_1DA66DEDC();
    v96 = sub_1DA66FD90();
    if (os_log_type_enabled(v95, v96))
    {
      v97 = v40;
      v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v98 = 0;
      _os_log_impl(&dword_1DA478000, v95, v96, "Found original artwork, performing in-place resize before returning", v98, 2u);
      v99 = v98;
      v40 = v97;
      MEMORY[0x1DF0A0474](v99, -1, -1);
    }

    v48(v110, v9);
    sub_1DA66CDC0();
    v101 = v100;
    v103 = v102;
    sub_1DA66CDD8();
    v104 = v112;
    v49 = ThumbnailImageResizer.resizedImage(at:to:displayScale:)(v101, v103, v105);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v104, v84);
    goto LABEL_9;
  }
  sub_1DA4ED9D4(v86);
  sub_1DA66DE94();
  v87 = v108;
  sub_1DA481308((uint64_t)v40, v108);
  v88 = sub_1DA66DEDC();
  v89 = sub_1DA66FDA8();
  if (os_log_type_enabled(v88, v89))
  {
    v90 = (uint8_t *)swift_slowAlloc();
    v91 = v40;
    v92 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v90 = 138412290;
    v93 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
    v126[0] = v93;
    v9 = v124;
    sub_1DA6702C4();
    *v92 = v93;
    sub_1DA4ED998(v87);
    _os_log_impl(&dword_1DA478000, v88, v89, "Failed to find widget image in cache for %@", v90, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    v94 = v92;
    v40 = v91;
    MEMORY[0x1DF0A0474](v94, -1, -1);
    MEMORY[0x1DF0A0474](v90, -1, -1);

  }
  else
  {

    sub_1DA4ED998(v87);
  }
  v48(v113, v9);
  sub_1DA4ED998((uint64_t)v109);
  sub_1DA4ED998((uint64_t)v40);
  return 0;
}

unint64_t sub_1DA4EC9DC()
{
  unint64_t result;

  result = qword_1EDAE23C0;
  if (!qword_1EDAE23C0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for WidgetImageProvider.WidgetImageError, &type metadata for WidgetImageProvider.WidgetImageError);
    atomic_store(result, (unint64_t *)&qword_1EDAE23C0);
  }
  return result;
}

uint64_t sub_1DA4ECA20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  id v38;
  void *v39;
  unsigned int v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  id v62;
  void *v63;
  unsigned int v64;
  char *v65;
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  char *v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  void (*v85)(char *, uint64_t);
  void (*v86)(char *, uint64_t);
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  void (*v100)(char *, uint64_t);
  char *v101;
  uint64_t v102;
  unint64_t v103;
  void (*v104)(char *, uint64_t);
  void (*v105)(char *, uint64_t);
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  void (*v109)(char *, uint64_t);
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135[2];

  v132 = a1;
  v1 = sub_1DA66C8BC();
  v119 = *(_QWORD *)(v1 - 8);
  v120 = v1;
  MEMORY[0x1E0C80A78](v1);
  v118 = (char *)&v111 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66DEF4();
  v127 = *(_QWORD *)(v3 - 8);
  v128 = v3;
  MEMORY[0x1E0C80A78](v3);
  v116 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v117 = (char *)&v111 - v6;
  MEMORY[0x1E0C80A78](v7);
  v125 = (char *)&v111 - v8;
  v9 = sub_1DA66CEBC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v115 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v113 = (char *)&v111 - v13;
  MEMORY[0x1E0C80A78](v14);
  v114 = (char *)&v111 - v15;
  MEMORY[0x1E0C80A78](v16);
  v112 = (char *)&v111 - v17;
  MEMORY[0x1E0C80A78](v18);
  v124 = (char *)&v111 - v19;
  MEMORY[0x1E0C80A78](v20);
  v121 = (char *)&v111 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v111 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v111 - v26;
  v28 = sub_1DA66C358();
  v130 = *(_QWORD *)(v28 - 8);
  v131 = v28;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v111 - v32;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v111 - v35;
  sub_1DA66CEE0();
  sub_1DA66CE20();
  sub_1DA66CC1C();
  _s10PodcastsUI22PreparedArtworkRequestV4with6formatAC0A10Foundation0D6FormatO_tF_0();
  sub_1DA66D780();
  v129 = v36;
  v133 = v27;
  sub_1DA66D780();
  v37 = (void *)objc_opt_self();
  v38 = objc_msgSend(v37, sel_defaultManager);
  v126 = v33;
  sub_1DA66C328();
  v39 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v38, sel_fileExistsAtPath_, v39);

  if (v40)
  {
    v122 = v30;
    sub_1DA66DE94();
    v41 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v42 = v121;
    v41(v121, v24, v9);
    v41(v124, v24, v9);
    v43 = sub_1DA66DEDC();
    v44 = sub_1DA66FD90();
    v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      v46 = swift_slowAlloc();
      v123 = v24;
      v47 = v46;
      v117 = (char *)swift_slowAlloc();
      v135[0] = (uint64_t)v117;
      *(_DWORD *)v47 = 136315394;
      v48 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
      v134 = sub_1DA49AD00(v48, v49, v135);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      LODWORD(v116) = v45;
      v50 = *(void (**)(char *, uint64_t))(v10 + 8);
      v50(v42, v9);
      *(_WORD *)(v47 + 12) = 2080;
      v51 = v118;
      v52 = v124;
      _s10PodcastsUI22PreparedArtworkRequestV10fileFormat0A10Foundation04FileG0Ovg_0();
      v53 = sub_1DA66C8B0();
      v55 = v54;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v51, v120);
      v134 = sub_1DA49AD00(v53, v55, v135);
      v56 = v132;
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      v50(v52, v9);
      _os_log_impl(&dword_1DA478000, v43, (os_log_type_t)v116, "Found preferred artwork: %s.%s", (uint8_t *)v47, 0x16u);
      v57 = v117;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v57, -1, -1);
      MEMORY[0x1DF0A0474](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v127 + 8))(v125, v128);
      v59 = v130;
      v58 = v131;
      v60 = *(void (**)(char *, uint64_t))(v130 + 8);
      v60(v122, v131);
      v50(v123, v9);
      v50(v133, v9);
      v60(v129, v58);
    }
    else
    {

      v85 = *(void (**)(char *, uint64_t))(v10 + 8);
      v85(v124, v9);
      v85(v42, v9);
      (*(void (**)(char *, uint64_t))(v127 + 8))(v125, v128);
      v59 = v130;
      v58 = v131;
      v86 = *(void (**)(char *, uint64_t))(v130 + 8);
      v86(v122, v131);
      v85(v24, v9);
      v85(v133, v9);
      v86(v129, v58);
      v56 = v132;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v56, v126, v58);
LABEL_13:
    v107 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v56, v107, 1, v58);
  }
  v61 = v9;
  v123 = v24;
  v62 = objc_msgSend(v37, sel_defaultManager);
  sub_1DA66C328();
  v63 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v64 = objc_msgSend(v62, sel_fileExistsAtPath_, v63);

  v65 = v30;
  if (v64)
  {
    v66 = v117;
    sub_1DA66DE94();
    v67 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v68 = v112;
    v69 = v133;
    v67(v112, v133, v61);
    v70 = v114;
    v67(v114, v69, v61);
    v71 = sub_1DA66DEDC();
    v72 = sub_1DA66FD90();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = swift_slowAlloc();
      v125 = (char *)swift_slowAlloc();
      v135[0] = (uint64_t)v125;
      *(_DWORD *)v73 = 136315394;
      v111 = v61;
      v74 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
      v134 = sub_1DA49AD00(v74, v75, v135);
      v122 = v65;
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      v76 = *(void (**)(char *, uint64_t))(v10 + 8);
      v76(v68, v61);
      *(_WORD *)(v73 + 12) = 2080;
      v77 = v118;
      v78 = v114;
      _s10PodcastsUI22PreparedArtworkRequestV10fileFormat0A10Foundation04FileG0Ovg_0();
      v79 = sub_1DA66C8B0();
      v81 = v80;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v77, v120);
      v134 = sub_1DA49AD00(v79, v81, v135);
      v65 = v122;
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      v82 = v111;
      v76(v78, v111);
      _os_log_impl(&dword_1DA478000, v71, v72, "Found original artwork: %s.%s", (uint8_t *)v73, 0x16u);
      v83 = v125;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v83, -1, -1);
      MEMORY[0x1DF0A0474](v73, -1, -1);

      (*(void (**)(char *, uint64_t))(v127 + 8))(v117, v128);
      v59 = v130;
      v58 = v131;
      v84 = *(void (**)(char *, uint64_t))(v130 + 8);
      v84(v126, v131);
      v76(v123, v82);
      v76(v133, v82);
      v84(v129, v58);
    }
    else
    {

      v105 = *(void (**)(char *, uint64_t))(v10 + 8);
      v105(v70, v61);
      v105(v68, v61);
      (*(void (**)(char *, uint64_t))(v127 + 8))(v66, v128);
      v59 = v130;
      v58 = v131;
      v106 = *(void (**)(char *, uint64_t))(v130 + 8);
      v106(v126, v131);
      v105(v123, v61);
      v105(v69, v61);
      v106(v129, v58);
    }
    v56 = v132;
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v132, v65, v58);
    goto LABEL_13;
  }
  v87 = v116;
  sub_1DA66DE94();
  v88 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v89 = v113;
  v90 = v123;
  v88(v113, v123, v9);
  v91 = v115;
  v92 = v133;
  v88(v115, v133, v9);
  v93 = sub_1DA66DEDC();
  v94 = sub_1DA66FD90();
  if (os_log_type_enabled(v93, v94))
  {
    v95 = swift_slowAlloc();
    v96 = swift_slowAlloc();
    v122 = v65;
    v97 = v96;
    v135[0] = v96;
    *(_DWORD *)v95 = 136315394;
    v98 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
    v134 = sub_1DA49AD00(v98, v99, v135);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    v100 = *(void (**)(char *, uint64_t))(v10 + 8);
    v100(v89, v9);
    *(_WORD *)(v95 + 12) = 2080;
    v101 = v115;
    v102 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
    v134 = sub_1DA49AD00(v102, v103, v135);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    v100(v101, v9);
    _os_log_impl(&dword_1DA478000, v93, v94, "Failed to find original artwork for either:\n\tPreferred: '%s'\n\tOriginal: %s", (uint8_t *)v95, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v97, -1, -1);
    MEMORY[0x1DF0A0474](v95, -1, -1);

    (*(void (**)(char *, uint64_t))(v127 + 8))(v116, v128);
    v59 = v130;
    v58 = v131;
    v104 = *(void (**)(char *, uint64_t))(v130 + 8);
    v104(v122, v131);
    v104(v126, v58);
    v100(v123, v9);
    v100(v133, v9);
    v104(v129, v58);
  }
  else
  {

    v108 = *(void (**)(char *, uint64_t))(v10 + 8);
    v108(v91, v9);
    v108(v89, v9);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v87, v128);
    v59 = v130;
    v58 = v131;
    v109 = *(void (**)(char *, uint64_t))(v130 + 8);
    v109(v65, v131);
    v109(v126, v58);
    v108(v90, v9);
    v108(v92, v9);
    v109(v129, v58);
  }
  v107 = 1;
  v56 = v132;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v56, v107, 1, v58);
}

uint64_t static WidgetImageProvider.WidgetImageError.== infix(_:_:)()
{
  return 1;
}

uint64_t WidgetImageProvider.WidgetImageError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t WidgetImageProvider.WidgetImageError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t sub_1DA4ED620()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t sub_1DA4ED660()
{
  return sub_1DA6707A4();
}

uint64_t sub_1DA4ED684()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t sub_1DA4ED6C4()
{
  unint64_t result;

  result = qword_1F0269000;
  if (!qword_1F0269000)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for WidgetImageProvider.WidgetImageError, &type metadata for WidgetImageProvider.WidgetImageError);
    atomic_store(result, (unint64_t *)&qword_1F0269000);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for WidgetImageProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1DA66BE60();
  return a1;
}

uint64_t destroy for WidgetImageProvider()
{
  return swift_release();
}

_QWORD *assignWithCopy for WidgetImageProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1DA66BE60();
  swift_release();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for WidgetImageProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetImageProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetImageProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetImageProvider()
{
  return &type metadata for WidgetImageProvider;
}

uint64_t getEnumTagSinglePayload for WidgetImageProvider.WidgetImageError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for WidgetImageProvider.WidgetImageError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA4ED8EC + 4 * byte_1DA678600[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA4ED90C + 4 * byte_1DA678605[v4]))();
}

_BYTE *sub_1DA4ED8EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA4ED90C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA4ED914(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA4ED91C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA4ED924(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA4ED92C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1DA4ED938()
{
  return 0;
}

ValueMetadata *type metadata accessor for WidgetImageProvider.WidgetImageError()
{
  return &type metadata for WidgetImageProvider.WidgetImageError;
}

unint64_t sub_1DA4ED950()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE52D0;
  if (!qword_1EDAE52D0)
  {
    v1 = type metadata accessor for PreparedArtworkRequest();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PreparedArtworkRequest, v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE52D0);
  }
  return result;
}

uint64_t sub_1DA4ED998(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PreparedArtworkRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA4ED9D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double static DynamicImpressionsTracker.Configuration.defaultImpressionTimeThreshold.getter()
{
  return 0.1;
}

uint64_t static DynamicImpressionsTracker.Configuration.defaultQueueName.getter()
{
  return 0x74656D2D61746164;
}

uint64_t static DynamicImpressionsTracker.Configuration.default.getter()
{
  return sub_1DA66F31C();
}

uint64_t DynamicImpressionsTracker.Configuration.init(impressionTimeThreshold:)()
{
  return sub_1DA66F31C();
}

uint64_t DynamicImpressionsTracker.init(configuration:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1DA66F328();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  v6 = sub_1DA66F358();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

_QWORD *sub_1DA4EDB28(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1DA6705A0())
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF09EE48](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_uuid);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1DA66F8BC();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1DA4981C8(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_1DA4981C8((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t RemoveEpisodesDownloadIntentImplementation.perform(_:objectGraph:)(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2[9] = a2;
  v4 = sub_1DA670078();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v5 = sub_1DA66FB98();
  v2[13] = v5;
  v2[14] = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  v7 = *a1;
  v2[15] = v6;
  v2[16] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_1F0269018);
  v8 = (_QWORD *)swift_task_alloc();
  v2[17] = v8;
  *v8 = v2;
  v8[1] = sub_1DA4EDD94;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4EDD94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 152) = v4;
  *v4 = v2;
  v4[1] = sub_1DA4EDE54;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4EDE54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA4EDEB8()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[21] = v0[7];
  swift_getObjectType();
  sub_1DA66FBE0();
  v1 = (_QWORD *)swift_task_alloc();
  v0[22] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4EDF38;
  return sub_1DA6700C0();
}

uint64_t sub_1DA4EDF38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DA4EDFBC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v1 = (void *)v0[23];
  v2 = v0[16];
  v4 = v0[11];
  v3 = v0[12];
  v5 = v0[10];
  v6 = swift_allocObject();
  v0[24] = v6;
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v2;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x1E0C977C0], v5);
  v7 = v1;
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[25] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  *v8 = v0;
  v8[1] = sub_1DA4EE0A8;
  return sub_1DA67009C();
}

uint64_t sub_1DA4EE0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4EE13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 40;
    do
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      swift_bridgeObjectRetain();
      sub_1DA66C85C();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  v4 = *(void **)(v0 + 184);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DA4EE224()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4EE264()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4EE2AC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA4EE304@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  _QWORD *v4;

  result = sub_1DA67006C();
  if (!v1)
  {
    v4 = sub_1DA4EDB28(result);
    result = swift_bridgeObjectRelease();
    *a1 = v4;
  }
  return result;
}

uint64_t sub_1DA4EE374()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1DA4EE3A0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA4EE304(a1);
}

unint64_t sub_1DA4EE3BC()
{
  unint64_t result;

  result = qword_1EDAE3F20;
  if (!qword_1EDAE3F20)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RemoveEpisodesDownloadIntent, &type metadata for RemoveEpisodesDownloadIntent);
    atomic_store(result, (unint64_t *)&qword_1EDAE3F20);
  }
  return result;
}

uint64_t sub_1DA4EE404(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1DA4EE45C;
  return RemoveEpisodesDownloadIntentImplementation.perform(_:objectGraph:)(a2, a3);
}

uint64_t sub_1DA4EE45C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1 & 1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

ValueMetadata *type metadata accessor for RemoveEpisodesDownloadIntentImplementation()
{
  return &type metadata for RemoveEpisodesDownloadIntentImplementation;
}

uint64_t sub_1DA4EE4CC()
{
  type metadata accessor for FairPlayDebugController();
  swift_allocObject();
  return sub_1DA633344();
}

uint64_t FairPlayDebugView.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t (**v20)();
  uint64_t v21;
  __int128 v22;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  char v31;

  v24[1] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269030);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269038);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1[1];
  v29 = *v1;
  v30 = v9;
  v31 = *((_BYTE *)v1 + 32);
  v24[4] = &v29;
  v24[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269040);
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269048);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269050);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269058);
  v13 = sub_1DA4841D4(&qword_1F0269060, &qword_1F0269058, MEMORY[0x1E0CDD950]);
  v25 = v12;
  v26 = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269068);
  v16 = sub_1DA4841D4(&qword_1F0269070, &qword_1F0269068, MEMORY[0x1E0CD8918]);
  v25 = v15;
  v26 = v16;
  v17 = swift_getOpaqueTypeConformance2();
  v25 = v10;
  v26 = v11;
  v27 = OpaqueTypeConformance2;
  v28 = v17;
  swift_getOpaqueTypeConformance2();
  sub_1DA66E41C();
  v18 = swift_allocObject();
  v19 = v30;
  *(_OWORD *)(v18 + 16) = v29;
  *(_OWORD *)(v18 + 32) = v19;
  *(_BYTE *)(v18 + 48) = v31;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  v20 = (uint64_t (**)())&v8[*(int *)(v6 + 36)];
  *v20 = sub_1DA4EF8EC;
  v20[1] = (uint64_t (*)())v18;
  v20[2] = 0;
  v20[3] = 0;
  sub_1DA4EFF70((uint64_t)&v29, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v21 = swift_allocObject();
  v22 = v30;
  *(_OWORD *)(v21 + 16) = v29;
  *(_OWORD *)(v21 + 32) = v22;
  *(_BYTE *)(v21 + 48) = v31;
  sub_1DA4EFF70((uint64_t)&v29, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  sub_1DA4EFB4C();
  sub_1DA66E77C();
  swift_release();
  return sub_1DA4EFBD0((uint64_t)v8);
}

uint64_t sub_1DA4EE7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v15 = a1;
  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269058);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269048);
  v16 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02690A0);
  sub_1DA4841D4(&qword_1F02690A8, &qword_1F02690A0, MEMORY[0x1E0CE0680]);
  sub_1DA66E6F8();
  sub_1DA66E518();
  v10 = sub_1DA4841D4(&qword_1F0269060, &qword_1F0269058, MEMORY[0x1E0CDD950]);
  sub_1DA66E7A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v18 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269050);
  v20 = v3;
  v21 = v10;
  swift_getOpaqueTypeConformance2();
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269068);
  v12 = sub_1DA4841D4(&qword_1F0269070, &qword_1F0269068, MEMORY[0x1E0CD8918]);
  v20 = v11;
  v21 = v12;
  swift_getOpaqueTypeConformance2();
  sub_1DA66E7D0();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v9, v7);
}

uint64_t sub_1DA4EEA0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4EE7B8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1DA4EEA14@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  char v46;
  uint64_t v47;

  v41 = a2;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02690C0);
  v37 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v39 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v32 - v5;
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v32 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02690C8);
  v34 = *(_QWORD *)(v35 - 8);
  v11 = v34;
  MEMORY[0x1E0C80A78](v35);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  v44 = a1;
  *(_QWORD *)&v45 = 0xD000000000000013;
  *((_QWORD *)&v45 + 1) = 0x80000001DA68A570;
  v46 = 0;
  v17 = MEMORY[0x1E0DEE9D8];
  v47 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02690D0);
  sub_1DA4F0028();
  v33 = v16;
  sub_1DA66E974();
  v43 = a1;
  v45 = xmmword_1DA6787B0;
  v46 = 0;
  v47 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02690E8);
  sub_1DA4F00D8();
  v32 = v10;
  sub_1DA66E974();
  v42 = a1;
  v45 = xmmword_1DA6787C0;
  v46 = 0;
  v47 = v17;
  v18 = v36;
  sub_1DA66E974();
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v20 = v35;
  v19(v13, v16, v35);
  v21 = v37;
  v22 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v23 = v38;
  v24 = v10;
  v25 = v40;
  v22(v38, v24, v40);
  v26 = v39;
  v22(v39, v18, v25);
  v27 = v41;
  v19(v41, v13, v20);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269120);
  v22(&v27[*(int *)(v28 + 48)], v23, v25);
  v22(&v27[*(int *)(v28 + 64)], v26, v25);
  v29 = *(void (**)(char *, uint64_t))(v21 + 8);
  v29(v18, v25);
  v29(v32, v25);
  v30 = *(void (**)(char *, uint64_t))(v34 + 8);
  v30(v33, v20);
  v29(v26, v25);
  v29(v23, v25);
  return ((uint64_t (*)(char *, uint64_t))v30)(v13, v20);
}

uint64_t sub_1DA4EED98(uint64_t a1)
{
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  type metadata accessor for FairPlayDebugController();
  sub_1DA47E32C(&qword_1F0269098, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayDebugController, (uint64_t)&unk_1DA684B28);
  sub_1DA66E368();
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EFFCC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF8E4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269140);
  sub_1DA4841D4(&qword_1F0269148, &qword_1F0269140, MEMORY[0x1E0DEAF48]);
  sub_1DA4F008C();
  sub_1DA4F02A8();
  return sub_1DA66E968();
}

uint64_t sub_1DA4EEF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  void *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 41);
  v7 = *(void **)(a1 + 48);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = v4;
  *(_BYTE *)(a2 + 40) = v5;
  *(_BYTE *)(a2 + 41) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  v8 = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA4EEF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t (**v11)();
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269100);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  type metadata accessor for FairPlayDebugController();
  sub_1DA47E32C(&qword_1F0269098, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayDebugController, (uint64_t)&unk_1DA684B28);
  sub_1DA66E368();
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EFFCC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF8E4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269128);
  type metadata accessor for FairPlayDebugKeyCell();
  sub_1DA4841D4(&qword_1F0269130, &qword_1F0269128, MEMORY[0x1E0DEAF48]);
  sub_1DA47E32C(&qword_1F0269108, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayDebugKeyCell, (uint64_t)&unk_1DA686AB8);
  sub_1DA47E32C(&qword_1F0269138, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayKeyViewModel, (uint64_t)&unk_1DA67FF18);
  sub_1DA66E968();
  v8 = swift_allocObject();
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(a1 + 32);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1DA4F0280;
  *(_QWORD *)(v10 + 24) = v8;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
  v11 = (uint64_t (**)())(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F02690E8) + 36));
  *v11 = sub_1DA4E4438;
  v11[1] = (uint64_t (*)())v10;
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DA4EF218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA4F0230(a1, a2);
}

uint64_t sub_1DA4EF220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t (**v11)();
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269100);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  type metadata accessor for FairPlayDebugController();
  sub_1DA47E32C(&qword_1F0269098, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayDebugController, (uint64_t)&unk_1DA684B28);
  sub_1DA66E368();
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EFFCC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF8E4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269128);
  type metadata accessor for FairPlayDebugKeyCell();
  sub_1DA4841D4(&qword_1F0269130, &qword_1F0269128, MEMORY[0x1E0DEAF48]);
  sub_1DA47E32C(&qword_1F0269108, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayDebugKeyCell, (uint64_t)&unk_1DA686AB8);
  sub_1DA47E32C(&qword_1F0269138, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayKeyViewModel, (uint64_t)&unk_1DA67FF18);
  sub_1DA66E968();
  v8 = swift_allocObject();
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(a1 + 32);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1DA4F01EC;
  *(_QWORD *)(v10 + 24) = v8;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
  v11 = (uint64_t (**)())(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F02690E8) + 36));
  *v11 = sub_1DA4E4158;
  v11[1] = (uint64_t (*)())v10;
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DA4EF4D0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1DA4EFF70(a2, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  type metadata accessor for FairPlayDebugController();
  sub_1DA47E32C(&qword_1F0269098, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayDebugController, (uint64_t)&unk_1DA684B28);
  v5 = sub_1DA66E368();
  sub_1DA4EFF70(a2, (void (*)(_QWORD, _QWORD))sub_1DA4EFFCC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF8E4);
  v6 = sub_1DA66C550();
  if ((v7 & 1) == 0)
    a3(v6, v5);
  return swift_release();
}

uint64_t sub_1DA4EF5A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;

  v2 = sub_1DA66E59C();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269068);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DA66E590();
  v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02690B0);
  sub_1DA4841D4(&qword_1F02690B8, &qword_1F02690B0, MEMORY[0x1E0CDFA58]);
  sub_1DA66E374();
  v7 = sub_1DA4841D4(&qword_1F0269070, &qword_1F0269068, MEMORY[0x1E0CD8918]);
  MEMORY[0x1DF09CF88](v6, v3, v7);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DA4EF6E8(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;

  v2 = swift_allocObject();
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_BYTE *)(v2 + 48) = *(_BYTE *)(a1 + 32);
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  return sub_1DA66E908();
}

uint64_t sub_1DA4EF77C(uint64_t a1)
{
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  type metadata accessor for FairPlayDebugController();
  sub_1DA47E32C(&qword_1F0269098, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayDebugController, (uint64_t)&unk_1DA684B28);
  sub_1DA66E368();
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EFFCC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF8E4);
  sub_1DA631B58();
  swift_release();
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  sub_1DA66E368();
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EFFCC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF8E4);
  sub_1DA631B74();
  swift_release();
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  sub_1DA66E368();
  sub_1DA4EFF70(a1, (void (*)(_QWORD, _QWORD))sub_1DA4EFFCC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF8E4);
  sub_1DA631B90();
  return swift_release();
}

uint64_t sub_1DA4EF8E4()
{
  return swift_release();
}

uint64_t sub_1DA4EF8EC()
{
  uint64_t v0;

  return sub_1DA4EF77C(v0 + 16);
}

uint64_t sub_1DA4EF8F4(uint64_t result)
{
  if (result)
    return sub_1DA66BE60();
  return result;
}

uint64_t sub_1DA4EF904()
{
  return sub_1DA66BE60();
}

uint64_t sub_1DA4EF90C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_1DA66FB68();
  *(_QWORD *)(v1 + 24) = sub_1DA66FB5C();
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA4EF978()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_1DA4EFF70(v1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  type metadata accessor for FairPlayDebugController();
  sub_1DA47E32C(&qword_1F0269098, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayDebugController, (uint64_t)&unk_1DA684B28);
  sub_1DA66E368();
  sub_1DA4EFF70(v1, (void (*)(_QWORD, _QWORD))sub_1DA4EFFCC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF8E4);
  sub_1DA631B58();
  swift_release();
  sub_1DA4EFF70(v1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  sub_1DA66E368();
  sub_1DA4EFF70(v1, (void (*)(_QWORD, _QWORD))sub_1DA4EFFCC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF8E4);
  sub_1DA631B74();
  swift_release();
  sub_1DA4EFF70(v1, (void (*)(_QWORD, _QWORD))sub_1DA4EF8F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF904);
  sub_1DA66E368();
  sub_1DA4EFF70(v1, (void (*)(_QWORD, _QWORD))sub_1DA4EFFCC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DA4EF8E4);
  sub_1DA631B90();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4EFB00()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1DA4AD77C;
  return sub_1DA4EF90C(v0 + 16);
}

unint64_t sub_1DA4EFB4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1F0269088;
  if (!qword_1F0269088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269038);
    v2[0] = sub_1DA4841D4(&qword_1F0269090, &qword_1F0269030, MEMORY[0x1E0CD94D0]);
    v2[1] = MEMORY[0x1E0CDC8B0];
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1F0269088);
  }
  return result;
}

uint64_t sub_1DA4EFBD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA4EFC10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA4EFC20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA66E89C();
  *a1 = result;
  return result;
}

uint64_t sub_1DA4EFC64()
{
  return sub_1DA66E794();
}

uint64_t destroy for FairPlayDebugView(_QWORD *a1)
{
  if (*a1)
    swift_release();
  return sub_1DA4EF8E4();
}

uint64_t initializeWithCopy for FairPlayDebugView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    sub_1DA66BE60();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1DA4EF904();
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FairPlayDebugView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v6;
      sub_1DA66BE60();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1DA66BE60();
  swift_release();
LABEL_8:
  v7 = a2[2];
  v8 = a2[3];
  v9 = *((_BYTE *)a2 + 32);
  sub_1DA4EF904();
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  sub_1DA4EF8E4();
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FairPlayDebugView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_release();
LABEL_8:
  v7 = *((_BYTE *)a2 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1DA4EF8E4();
  return a1;
}

uint64_t getEnumTagSinglePayload for FairPlayDebugView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FairPlayDebugView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FairPlayDebugView()
{
  return &type metadata for FairPlayDebugView;
}

uint64_t sub_1DA4EFF24()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269038);
  sub_1DA4EFB4C();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA4EFF70(uint64_t a1, void (*a2)(_QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 32);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  a3(v5, v6, v7);
  return a1;
}

uint64_t sub_1DA4EFFCC(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1DA4EFFDC@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4EEA14(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1DA4EFFE4()
{
  uint64_t v0;

  return sub_1DA4EF5A0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1DA4EFFEC()
{
  uint64_t v0;

  return sub_1DA4EF6E8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1DA4EFFF8()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1DA4F0020()
{
  uint64_t v0;

  return sub_1DA4EED98(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1DA4F0028()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1F02690D8;
  if (!qword_1F02690D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F02690D0);
    v2 = sub_1DA4F008C();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFEE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1F02690D8);
  }
  return result;
}

unint64_t sub_1DA4F008C()
{
  unint64_t result;

  result = qword_1F02690E0;
  if (!qword_1F02690E0)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67B154, &type metadata for FairPlayDebugDownloadEpisodeCell);
    atomic_store(result, (unint64_t *)&qword_1F02690E0);
  }
  return result;
}

uint64_t sub_1DA4F00D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4EEF68(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1DA4F00D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1F02690F0;
  if (!qword_1F02690F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F02690E8);
    v2[0] = sub_1DA4F015C();
    v2[1] = sub_1DA4841D4(&qword_1F0269110, &qword_1F0269118, MEMORY[0x1E0CDBEF0]);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1F02690F0);
  }
  return result;
}

unint64_t sub_1DA4F015C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F02690F8;
  if (!qword_1F02690F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269100);
    v2 = sub_1DA47E32C(&qword_1F0269108, (uint64_t (*)(uint64_t))type metadata accessor for FairPlayDebugKeyCell, (uint64_t)&unk_1DA686AB8);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFEE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1F02690F8);
  }
  return result;
}

uint64_t sub_1DA4F01D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4EF220(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1DA4F01EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA4EF4D0(a1, v1 + 16, (void (*)(uint64_t, uint64_t))sub_1DA632BE4);
}

uint64_t sub_1DA4F020C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA4F0230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FairPlayKeyViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA4F0280(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA4EF4D0(a1, v1 + 16, (void (*)(uint64_t, uint64_t))sub_1DA632700);
}

unint64_t sub_1DA4F02A8()
{
  unint64_t result;

  result = qword_1F0269150[0];
  if (!qword_1F0269150[0])
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA686A1C, &type metadata for FairPlayEpisodeViewModel);
    atomic_store(result, qword_1F0269150);
  }
  return result;
}

uint64_t sub_1DA4F02F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1DA657418(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

void ImageStore.asyncLocallyDiskCachedImage(forKey:size:completionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  char *v18;
  double v19;
  double v20;
  char *v21;
  uint64_t v22;
  double *v23;
  void (*v24)(uint64_t, uint64_t, uint64_t *, void (*)(void *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, double, double);
  _QWORD *v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  __int16 v29;

  v13 = *(_QWORD *)(a5 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v16 = MEMORY[0x1E0C80A78](a1).n128_f64[0];
  v18 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v16 >= 1.0)
    v19 = v16;
  else
    v19 = 1.0;
  if (v17 >= 1.0)
    v20 = v17;
  else
    v20 = 1.0;
  v28 = 0;
  v29 = 256;
  v21 = (char *)(*(uint64_t (**)(double, double))(v15 + 24))(v19, v20);
  if (v21)
  {
    v27 = v21;
    a3(v21, a1, a2);

  }
  else
  {
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 48))(a1, a2, a5, a6) & 1) != 0)
    {
      v28 = 0;
      v29 = 256;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v6, a5);
      v26 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v27 = (char *)((v14 + v26 + 7) & 0xFFFFFFFFFFFFFFF8);
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = a5;
      *(_QWORD *)(v22 + 24) = a6;
      *(_QWORD *)(v22 + 32) = a3;
      *(_QWORD *)(v22 + 40) = a4;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22 + v26, v18, a5);
      v23 = (double *)&v27[v22];
      *v23 = v19;
      v23[1] = v20;
      v24 = *(void (**)(uint64_t, uint64_t, uint64_t *, void (*)(void *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, double, double))(a6 + 32);
      sub_1DA66BE60();
      v24(a1, a2, &v28, sub_1DA4F0878, v22, a5, a6, v19, v20);
    }
    else
    {
      v25 = (_QWORD *)swift_allocObject();
      v25[2] = a3;
      v25[3] = a4;
      v25[4] = a1;
      v25[5] = a2;
      sub_1DA66BE60();
      swift_bridgeObjectRetain();
      sub_1DA4F0584((void (*)(void *))sub_1DA4F0580, (uint64_t)v25, a5, a6, v19, v20);
    }
    swift_release();
  }
}

void sub_1DA4F0584(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  double v10;
  double v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t *, uint64_t (*)(), uint64_t, uint64_t, uint64_t, double, double);
  id v19;
  uint64_t v20;
  __int16 v21;

  if (a5 >= 1.0)
    v10 = a5;
  else
    v10 = 1.0;
  if (a6 >= 1.0)
    v11 = a6;
  else
    v11 = 1.0;
  v12 = sub_1DA66F8BC();
  v20 = 0;
  v21 = 256;
  v13 = (void *)(*(uint64_t (**)(uint64_t, double, double))(a4 + 24))(v12, v10, v11);
  swift_bridgeObjectRelease();
  if (v13)
  {
    v19 = v13;
    a1(v13);

  }
  else
  {
    v14 = sub_1DA66F8BC();
    v16 = v15;
    v20 = 0;
    v21 = 256;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a1;
    *(_QWORD *)(v17 + 24) = a2;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t (*)(), uint64_t, uint64_t, uint64_t, double, double))(a4 + 32);
    sub_1DA66BE60();
    v18(v14, v16, &v20, sub_1DA4E4158, v17, a3, a4, v10, v11);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_1DA4F06FC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t, uint64_t), uint64_t a5, double a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v19;
  id v20;

  if (a1)
  {
    v20 = a1;
    a4(a1, a2, a3);

  }
  else
  {
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = a2;
    v19[5] = a3;
    sub_1DA66BE60();
    swift_bridgeObjectRetain();
    sub_1DA4F0584((void (*)(void *))sub_1DA4F0580, (uint64_t)v19, a9, a10, a6, a7);
    swift_release();
  }
}

uint64_t sub_1DA4F0800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1DA4F0878(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  double *v7;

  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (double *)(v3 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1DA4F06FC(a1, a2, a3, *(void (**)(void *, uint64_t, uint64_t))(v3 + 32), *(_QWORD *)(v3 + 40), *v7, v7[1], v3 + v6, v4, *(_QWORD *)(v3 + 24));
}

uint64_t getEnumTagSinglePayload for ImageBlur(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1DA4F08D0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t dispatch thunk of ImageStore.image(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ImageStore.image(forKey:size:imageBlur:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ImageStore.imageInMemory(forKey:size:imageBlur:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of ImageStore.asyncImage(forKey:size:imageBlur:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of ImageStore.hasItem(forKey:size:imageBlur:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of ImageStore.hasItem(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ImageStore.invalidate(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1DA4F0928(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 + 16))(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1DA4F0950()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1DA4F0974()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  sub_1DA4F1538((uint64_t)v0 + qword_1EDADF8C0);
  swift_release();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 112);
  v5 = type metadata accessor for AsyncOnceValue.State(0, *(_QWORD *)(v1 + 80), v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1DA4F09F4()
{
  sub_1DA4F0974();
  return swift_defaultActor_deallocate();
}

uint64_t *sub_1DA4F0A0C(uint64_t *__dst, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X14 }
    }
    if (v9 == 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 1;
      return v3;
    }
    *__dst = *a2;
    *((_BYTE *)__dst + v5) = 0;
  }
  sub_1DA66BE60();
  return v3;
}

uint64_t sub_1DA4F0B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
    else
      return swift_release();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1DA4F0B7C + 4 * byte_1DA678995[v5]))();
  }
}

_BYTE *sub_1DA4F0BDC(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 1;
  }
  else
  {
    *(_QWORD *)__dst = *a2;
    __dst[v5] = 0;
    sub_1DA66BE60();
  }
  return __dst;
}

unsigned __int8 *sub_1DA4F0CC8(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = __dst[v7];
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    else
      swift_release();
    v10 = __src[v7];
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v7] = 0;
      sub_1DA66BE60();
    }
  }
  return __dst;
}

_BYTE *sub_1DA4F0E74(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 1;
  }
  else
  {
    *(_QWORD *)__dst = *a2;
    __dst[v5] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1DA4F0F5C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = __dst[v7];
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    else
      swift_release();
    v10 = __src[v7];
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v7] = 0;
    }
  }
  return __dst;
}

uint64_t sub_1DA4F1104(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1DA4F11C8 + 4 * byte_1DA6789B8[(v4 - 1)]))();
}

void sub_1DA4F1214(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1DA4F13BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1DA4F1404 + 4 * byte_1DA6789C6[v3]))();
}

void sub_1DA4F144C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1DA4F1514()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1DA4F1520()
{
  return sub_1DA4F1514();
}

uint64_t sub_1DA4F1538(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t IntentDelegatingActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA4F1894(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1DA4F1588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[8] = AssociatedTypeWitness;
  v6[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[10] = swift_task_alloc();
  v6[11] = swift_getAssociatedConformanceWitness();
  v8 = swift_getAssociatedTypeWitness();
  v6[12] = v8;
  v6[13] = *(_QWORD *)(v8 - 8);
  v6[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA4F1680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 24), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 24));
  (*(void (**)(uint64_t, uint64_t))(v1 + 32))(v2, v1);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v3;
  *v3 = v0;
  v3[1] = sub_1DA4F1730;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F1730()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (!v0)
    (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
  return swift_task_switch();
}

uint64_t sub_1DA4F17CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *MEMORY[0x1E0D3F990];
  v3 = sub_1DA66ED70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4F1848()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4F1888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA4F1894(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1DA4F1894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v20[2];
  _BYTE v21[40];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a3 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  sub_1DA66EDDC();
  sub_1DA4813E4((uint64_t)v21, (uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  sub_1DA4841BC(v20, v15 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(_QWORD *)(v15 + ((v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02691E8);
  sub_1DA66BE60();
  v16 = sub_1DA66F658();
  v17 = sub_1DA66FB98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = &unk_1F02691E0;
  v18[5] = v15;
  v18[6] = v16;
  sub_1DA66BE60();
  sub_1DA527E84((uint64_t)v10, (uint64_t)&unk_1F02691F0, (uint64_t)v18);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  return v16;
}

uint64_t sub_1DA4F1A78(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8);
}

uint64_t dispatch thunk of IntentDelegatingActionModel.intent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for IntentDelegatingActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentDelegatingActionImplementation);
}

uint64_t sub_1DA4F1A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA4F1B20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1 + 32;
  v9 = v1 + v7;
  v10 = *(_QWORD *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1DA4AD77C;
  return sub_1DA4F1588(a1, v8, v9, v10, v4, v5);
}

uint64_t sub_1DA4F1BC4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA4F1BF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1DA4AD77C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1F026A1F0
                                                                                     + dword_1F026A1F0))(a1, v4, v5, v6, v7, v8);
}

id sub_1DA4F1D04()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DA4F1D6C()
{
  return swift_release();
}

unint64_t sub_1DA4F1D74()
{
  uint64_t inited;
  uint64_t v1;
  unint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  void (*v4)(uint64_t *, _QWORD, uint64_t);
  char v5;
  uint64_t *v6;
  char v7;
  uint64_t *v8;
  char v9;
  uint64_t *v10;
  uint64_t v12[3];
  uint64_t v13;
  unint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2210);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678B30;
  *(_QWORD *)(inited + 32) = 0xD000000000000024;
  *(_QWORD *)(inited + 40) = 0x80000001DA68A650;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = 0xD000000000000014;
  *(_QWORD *)(inited + 64) = 0x80000001DA68A680;
  v1 = sub_1DA66C784();
  v13 = v1;
  v2 = sub_1DA4A68B0();
  v14 = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  v4 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104);
  v4(boxed_opaque_existential_1, *MEMORY[0x1E0D7D528], v1);
  v5 = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  *(_BYTE *)(inited + 72) = v5 & 1;
  *(_QWORD *)(inited + 80) = 0xD000000000000018;
  *(_QWORD *)(inited + 88) = 0x80000001DA68A6A0;
  *(_BYTE *)(inited + 96) = 1;
  *(_QWORD *)(inited + 104) = 0xD000000000000013;
  *(_QWORD *)(inited + 112) = 0x80000001DA68A6C0;
  *(_BYTE *)(inited + 120) = sub_1DA66C778() & 1;
  *(_QWORD *)(inited + 128) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 136) = 0x80000001DA68A6E0;
  *(_BYTE *)(inited + 144) = 1;
  *(_QWORD *)(inited + 152) = 0x7374726F70707573;
  *(_QWORD *)(inited + 160) = 0xEF626154656D6F48;
  v13 = v1;
  v14 = v2;
  v6 = __swift_allocate_boxed_opaque_existential_1(v12);
  v4(v6, *MEMORY[0x1E0D7D578], v1);
  v7 = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  *(_BYTE *)(inited + 168) = v7 & 1;
  strcpy((char *)(inited + 176), "supportsGingko");
  *(_BYTE *)(inited + 191) = -18;
  v13 = v1;
  v14 = v2;
  v8 = __swift_allocate_boxed_opaque_existential_1(v12);
  v4(v8, *MEMORY[0x1E0D7D570], v1);
  v9 = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  *(_BYTE *)(inited + 192) = v9 & 1;
  *(_QWORD *)(inited + 200) = 0xD000000000000011;
  *(_QWORD *)(inited + 208) = 0x80000001DA68A700;
  v13 = v1;
  v14 = v2;
  v10 = __swift_allocate_boxed_opaque_existential_1(v12);
  v4(v10, *MEMORY[0x1E0D7D580], v1);
  LOBYTE(v1) = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  *(_BYTE *)(inited + 216) = v1 & 1;
  *(_QWORD *)(inited + 224) = 0x7374726F70707573;
  *(_QWORD *)(inited + 232) = 0xEF73746948706F54;
  *(_BYTE *)(inited + 240) = sub_1DA66C760() & 1;
  return sub_1DA63C5C8(inited);
}

uint64_t sub_1DA4F1FF4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  _QWORD v15[3];
  uint64_t v16;

  v5 = *(void **)(v2 + 16);
  sub_1DA4F2340(a1, (uint64_t)v15);
  v6 = v16;
  if (v16)
  {
    v7 = __swift_project_boxed_opaque_existential_1(v15, v16);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = MEMORY[0x1E0C80A78](v7);
    v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
    v12 = sub_1DA6706C0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
  else
  {
    v12 = 0;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DA66EE78();
  v13 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setObject_forKey_, v12, v13);
  swift_unknownObjectRelease();

  sub_1DA480E84(a1);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
}

uint64_t sub_1DA4F2134()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void (*sub_1DA4F215C(_QWORD *a1, _QWORD *a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  char *v5;
  _OWORD *v6;
  void *v7;
  void *v8;
  id v9;

  v5 = (char *)malloc(0x98uLL);
  *a1 = v5;
  v6 = v5 + 80;
  *((_QWORD *)v5 + 18) = v2;
  sub_1DA4813E4((uint64_t)a2, (uint64_t)v5);
  v7 = *(void **)(v2 + 16);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DA66EE78();
  v8 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_objectForKey_, v8);

  if (v9)
  {
    sub_1DA670360();
    swift_unknownObjectRelease();
  }
  else
  {
    *v6 = 0u;
    v6[1] = 0u;
  }
  return sub_1DA4F2238;
}

void sub_1DA4F2238(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a1 + 80;
  if ((a2 & 1) != 0)
  {
    sub_1DA4F2340(*a1 + 80, v2 + 112);
    sub_1DA4841BC((__int128 *)v2, v2 + 40);
    sub_1DA4F1FF4(v2 + 112, (_QWORD *)(v2 + 40));
    sub_1DA480E84(v3);
  }
  else
  {
    sub_1DA4F1FF4(*a1 + 80, (_QWORD *)v2);
  }
  free((void *)v2);
}

void sub_1DA4F22BC(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA66EE78();
  v3 = (id)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_removeObjectForKey_, v3);

}

id sub_1DA4F2330()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_synchronize);
}

uint64_t sub_1DA4F2340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t static PlayEpisodeIntent.kind.getter()
{
  return 0xD000000000000011;
}

uint64_t PlayEpisodeIntent.episode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4F23B0(v1, a1);
}

uint64_t sub_1DA4F23B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PlayEpisodeIntent.init(episode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA4F23FC(a1, a2);
}

uint64_t sub_1DA4F23FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DA4F2440(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001DA678BE0;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlayEpisodeIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  char *__dst;
  int *v75;

  v4 = type metadata accessor for EpisodeEntity();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v8 = (void *)a2[2];
    v7 = a2[3];
    a1[2] = (uint64_t)v8;
    a1[3] = v7;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    v71 = a2[11];
    a1[10] = a2[10];
    a1[11] = v71;
    v72 = a2[13];
    a1[12] = a2[12];
    a1[13] = v72;
    v12 = a2[15];
    a1[14] = a2[14];
    a1[15] = v12;
    v13 = a2[17];
    a1[16] = a2[16];
    a1[17] = v13;
    v75 = (int *)v4;
    v14 = *(int *)(v4 + 80);
    __dst = (char *)a1 + v14;
    v70 = (char *)a2 + v14;
    v15 = sub_1DA66DB58();
    v69 = *(_QWORD *)(v15 - 8);
    v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
    swift_bridgeObjectRetain();
    v16 = v8;
    swift_bridgeObjectRetain();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    if (v73(v70, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
      memcpy(__dst, v70, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(__dst, v70, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(__dst, 0, 1, v15);
    }
    v19 = v75[21];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = (int *)sub_1DA66CA0C();
    v23 = *((_QWORD *)v22 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = v21[1];
      *v20 = *v21;
      v20[1] = v25;
      v26 = *((unsigned __int8 *)v21 + 32);
      swift_bridgeObjectRetain();
      if (v26 == 255)
      {
        *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
        *((_BYTE *)v20 + 32) = *((_BYTE *)v21 + 32);
      }
      else
      {
        v27 = v21[2];
        v28 = v21[3];
        sub_1DA481390(v27, v28, v26);
        v20[2] = v27;
        v20[3] = v28;
        *((_BYTE *)v20 + 32) = v26;
      }
      *(_OWORD *)(v20 + 5) = *(_OWORD *)(v21 + 5);
      v29 = (id *)(v21 + 7);
      v30 = *((unsigned __int8 *)v21 + 64);
      if (v30 == 255)
      {
        v20[7] = *v29;
        *((_BYTE *)v20 + 64) = *((_BYTE *)v21 + 64);
      }
      else
      {
        v31 = *v29;
        sub_1DA4E762C(*v29, *((_BYTE *)v21 + 64));
        v20[7] = v31;
        *((_BYTE *)v20 + 64) = v30;
      }
      v32 = (id *)(v21 + 9);
      v33 = *((unsigned __int8 *)v21 + 80);
      if (v33 == 255)
      {
        v20[9] = *v32;
        *((_BYTE *)v20 + 80) = *((_BYTE *)v21 + 80);
      }
      else
      {
        v34 = *v32;
        sub_1DA4E762C(*v32, *((_BYTE *)v21 + 80));
        v20[9] = v34;
        *((_BYTE *)v20 + 80) = v33;
      }
      v35 = (id *)(v21 + 11);
      v36 = *((unsigned __int8 *)v21 + 96);
      if (v36 == 255)
      {
        v20[11] = *v35;
        *((_BYTE *)v20 + 96) = *((_BYTE *)v21 + 96);
      }
      else
      {
        v37 = *v35;
        sub_1DA4E762C(*v35, *((_BYTE *)v21 + 96));
        v20[11] = v37;
        *((_BYTE *)v20 + 96) = v36;
      }
      v38 = (id *)(v21 + 13);
      v39 = *((unsigned __int8 *)v21 + 112);
      if (v39 == 255)
      {
        v20[13] = *v38;
        *((_BYTE *)v20 + 112) = *((_BYTE *)v21 + 112);
      }
      else
      {
        v40 = *v38;
        sub_1DA4E762C(*v38, *((_BYTE *)v21 + 112));
        v20[13] = v40;
        *((_BYTE *)v20 + 112) = v39;
      }
      v41 = (id *)(v21 + 15);
      v42 = *((unsigned __int8 *)v21 + 128);
      if (v42 == 255)
      {
        v20[15] = *v41;
        *((_BYTE *)v20 + 128) = *((_BYTE *)v21 + 128);
      }
      else
      {
        v43 = *v41;
        sub_1DA4E762C(*v41, *((_BYTE *)v21 + 128));
        v20[15] = v43;
        *((_BYTE *)v20 + 128) = v42;
      }
      *((_BYTE *)v20 + 129) = *((_BYTE *)v21 + 129);
      v44 = v22[11];
      v45 = (char *)v20 + v44;
      v46 = (char *)v21 + v44;
      v47 = sub_1DA66C928();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      v48 = v22[12];
      v49 = (_QWORD *)((char *)v20 + v48);
      v50 = (_QWORD *)((char *)v21 + v48);
      v51 = v50[1];
      *v49 = *v50;
      v49[1] = v51;
      *((_BYTE *)v20 + v22[13]) = *((_BYTE *)v21 + v22[13]);
      *((_BYTE *)v20 + v22[14]) = *((_BYTE *)v21 + v22[14]);
      *((_BYTE *)v20 + v22[15]) = *((_BYTE *)v21 + v22[15]);
      v52 = v22[16];
      v53 = (_QWORD *)((char *)v20 + v52);
      v54 = (_QWORD *)((char *)v21 + v52);
      v55 = v54[1];
      *v53 = *v54;
      v53[1] = v55;
      v56 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v56(v20, 0, 1, v22);
    }
    v57 = v75[22];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    v60 = *((_QWORD *)v59 + 1);
    if (v60 >> 60 == 15)
    {
      *(_OWORD *)v58 = *(_OWORD *)v59;
    }
    else
    {
      v61 = *(_QWORD *)v59;
      sub_1DA498750(*(_QWORD *)v59, *((_QWORD *)v59 + 1));
      *(_QWORD *)v58 = v61;
      *((_QWORD *)v58 + 1) = v60;
    }
    v62 = v75[23];
    v63 = (char *)a1 + v62;
    v64 = (char *)a2 + v62;
    v65 = sub_1DA66C358();
    v66 = *(_QWORD *)(v65 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
    }
  }
  return a1;
}

uint64_t destroy for PlayEpisodeIntent(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v2 = (int *)type metadata accessor for EpisodeEntity();
  v3 = a1 + v2[20];
  v4 = sub_1DA66DB58();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = a1 + v2[21];
  v7 = sub_1DA66CA0C();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v8 = *(unsigned __int8 *)(v6 + 32);
    if (v8 != 255)
      sub_1DA47F868(*(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), v8);
    v9 = *(unsigned __int8 *)(v6 + 64);
    if (v9 != 255)
      sub_1DA4E7898(*(id *)(v6 + 56), v9);
    v10 = *(unsigned __int8 *)(v6 + 80);
    if (v10 != 255)
      sub_1DA4E7898(*(id *)(v6 + 72), v10);
    v11 = *(unsigned __int8 *)(v6 + 96);
    if (v11 != 255)
      sub_1DA4E7898(*(id *)(v6 + 88), v11);
    v12 = *(unsigned __int8 *)(v6 + 112);
    if (v12 != 255)
      sub_1DA4E7898(*(id *)(v6 + 104), v12);
    v13 = *(unsigned __int8 *)(v6 + 128);
    if (v13 != 255)
      sub_1DA4E7898(*(id *)(v6 + 120), v13);
    v14 = v6 + *(int *)(v7 + 44);
    v15 = sub_1DA66C928();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v16 = (uint64_t *)(a1 + v2[22]);
  v17 = v16[1];
  if (v17 >> 60 != 15)
    sub_1DA4986F8(*v16, v17);
  v18 = a1 + v2[23];
  v19 = sub_1DA66C358();
  v20 = *(_QWORD *)(v19 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  return result;
}

_QWORD *initializeWithCopy for PlayEpisodeIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  char *__dst;
  int *v72;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = (void *)a2[2];
  v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  v11 = a2[13];
  a1[12] = a2[12];
  a1[13] = v11;
  v12 = a2[15];
  a1[14] = a2[14];
  a1[15] = v12;
  v13 = a2[17];
  a1[16] = a2[16];
  a1[17] = v13;
  v72 = (int *)type metadata accessor for EpisodeEntity();
  v14 = v72[20];
  __dst = (char *)a1 + v14;
  v15 = (char *)a2 + v14;
  v16 = sub_1DA66DB58();
  v69 = *(_QWORD *)(v16 - 8);
  v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  swift_bridgeObjectRetain();
  v17 = v6;
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v70(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(__dst, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(__dst, 0, 1, v16);
  }
  v19 = v72[21];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = (int *)sub_1DA66CA0C();
  v23 = *((_QWORD *)v22 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v21[1];
    *v20 = *v21;
    v20[1] = v25;
    v26 = *((unsigned __int8 *)v21 + 32);
    swift_bridgeObjectRetain();
    if (v26 == 255)
    {
      *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
      *((_BYTE *)v20 + 32) = *((_BYTE *)v21 + 32);
    }
    else
    {
      v27 = v21[2];
      v28 = v21[3];
      sub_1DA481390(v27, v28, v26);
      v20[2] = v27;
      v20[3] = v28;
      *((_BYTE *)v20 + 32) = v26;
    }
    *(_OWORD *)(v20 + 5) = *(_OWORD *)(v21 + 5);
    v29 = (id *)(v21 + 7);
    v30 = *((unsigned __int8 *)v21 + 64);
    if (v30 == 255)
    {
      v20[7] = *v29;
      *((_BYTE *)v20 + 64) = *((_BYTE *)v21 + 64);
    }
    else
    {
      v31 = *v29;
      sub_1DA4E762C(*v29, *((_BYTE *)v21 + 64));
      v20[7] = v31;
      *((_BYTE *)v20 + 64) = v30;
    }
    v32 = (id *)(v21 + 9);
    v33 = *((unsigned __int8 *)v21 + 80);
    if (v33 == 255)
    {
      v20[9] = *v32;
      *((_BYTE *)v20 + 80) = *((_BYTE *)v21 + 80);
    }
    else
    {
      v34 = *v32;
      sub_1DA4E762C(*v32, *((_BYTE *)v21 + 80));
      v20[9] = v34;
      *((_BYTE *)v20 + 80) = v33;
    }
    v35 = (id *)(v21 + 11);
    v36 = *((unsigned __int8 *)v21 + 96);
    if (v36 == 255)
    {
      v20[11] = *v35;
      *((_BYTE *)v20 + 96) = *((_BYTE *)v21 + 96);
    }
    else
    {
      v37 = *v35;
      sub_1DA4E762C(*v35, *((_BYTE *)v21 + 96));
      v20[11] = v37;
      *((_BYTE *)v20 + 96) = v36;
    }
    v38 = (id *)(v21 + 13);
    v39 = *((unsigned __int8 *)v21 + 112);
    if (v39 == 255)
    {
      v20[13] = *v38;
      *((_BYTE *)v20 + 112) = *((_BYTE *)v21 + 112);
    }
    else
    {
      v40 = *v38;
      sub_1DA4E762C(*v38, *((_BYTE *)v21 + 112));
      v20[13] = v40;
      *((_BYTE *)v20 + 112) = v39;
    }
    v41 = (id *)(v21 + 15);
    v42 = *((unsigned __int8 *)v21 + 128);
    if (v42 == 255)
    {
      v20[15] = *v41;
      *((_BYTE *)v20 + 128) = *((_BYTE *)v21 + 128);
    }
    else
    {
      v43 = *v41;
      sub_1DA4E762C(*v41, *((_BYTE *)v21 + 128));
      v20[15] = v43;
      *((_BYTE *)v20 + 128) = v42;
    }
    *((_BYTE *)v20 + 129) = *((_BYTE *)v21 + 129);
    v44 = v22[11];
    v45 = (char *)v20 + v44;
    v46 = (char *)v21 + v44;
    v47 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = v22[12];
    v49 = (_QWORD *)((char *)v20 + v48);
    v50 = (_QWORD *)((char *)v21 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    *((_BYTE *)v20 + v22[13]) = *((_BYTE *)v21 + v22[13]);
    *((_BYTE *)v20 + v22[14]) = *((_BYTE *)v21 + v22[14]);
    *((_BYTE *)v20 + v22[15]) = *((_BYTE *)v21 + v22[15]);
    v52 = v22[16];
    v53 = (_QWORD *)((char *)v20 + v52);
    v54 = (_QWORD *)((char *)v21 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v23 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56(v20, 0, 1, v22);
  }
  v57 = v72[22];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = *((_QWORD *)v59 + 1);
  if (v60 >> 60 == 15)
  {
    *(_OWORD *)v58 = *(_OWORD *)v59;
  }
  else
  {
    v61 = *(_QWORD *)v59;
    sub_1DA498750(*(_QWORD *)v59, *((_QWORD *)v59 + 1));
    *(_QWORD *)v58 = v61;
    *((_QWORD *)v58 + 1) = v60;
  }
  v62 = v72[23];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = sub_1DA66C358();
  v66 = *(_QWORD *)(v65 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
  }
  return a1;
}

_QWORD *assignWithCopy for PlayEpisodeIntent(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  __int128 v37;
  id *v38;
  int v39;
  id v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  id v53;
  id *v54;
  int v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  void (*v68)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v69;
  uint64_t v70;
  char v71;
  __int128 v72;
  id *v73;
  id *v74;
  int v75;
  id v76;
  void *v77;
  char v78;
  id v79;
  char v80;
  id v81;
  id *v82;
  id *v83;
  int v84;
  id v85;
  void *v86;
  char v87;
  id v88;
  char v89;
  id v90;
  id *v91;
  id *v92;
  int v93;
  id v94;
  void *v95;
  char v96;
  id v97;
  char v98;
  id v99;
  id *v100;
  id *v101;
  int v102;
  id v103;
  void *v104;
  char v105;
  id v106;
  char v107;
  id v108;
  id *v109;
  id *v110;
  int v111;
  id v112;
  void *v113;
  char v114;
  id v115;
  char v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(char *, uint64_t, uint64_t);
  int v142;
  int v143;
  uint64_t v144;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1DA66BE60();
  swift_release();
  a1[7] = a2[7];
  sub_1DA66BE60();
  swift_release();
  a1[8] = a2[8];
  sub_1DA66BE60();
  swift_release();
  a1[9] = a2[9];
  sub_1DA66BE60();
  swift_release();
  a1[10] = a2[10];
  sub_1DA66BE60();
  swift_release();
  a1[11] = a2[11];
  sub_1DA66BE60();
  swift_release();
  a1[12] = a2[12];
  sub_1DA66BE60();
  swift_release();
  a1[13] = a2[13];
  sub_1DA66BE60();
  swift_release();
  a1[14] = a2[14];
  sub_1DA66BE60();
  swift_release();
  a1[15] = a2[15];
  sub_1DA66BE60();
  swift_release();
  a1[16] = a2[16];
  sub_1DA66BE60();
  swift_release();
  a1[17] = a2[17];
  sub_1DA66BE60();
  swift_release();
  v7 = (int *)type metadata accessor for EpisodeEntity();
  v8 = v7[20];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1DA66DB58();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  v17 = v7[21];
  v18 = (uint64_t)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = (int *)sub_1DA66CA0C();
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22((uint64_t)v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_QWORD *)(v18 + 8) = *((_QWORD *)v19 + 1);
      v25 = v19[32];
      swift_bridgeObjectRetain();
      if (v25 == 255)
      {
        v37 = *((_OWORD *)v19 + 1);
        *(_BYTE *)(v18 + 32) = v19[32];
        *(_OWORD *)(v18 + 16) = v37;
      }
      else
      {
        v26 = *((_QWORD *)v19 + 2);
        v27 = *((_QWORD *)v19 + 3);
        sub_1DA481390(v26, v27, v25);
        *(_QWORD *)(v18 + 16) = v26;
        *(_QWORD *)(v18 + 24) = v27;
        *(_BYTE *)(v18 + 32) = v25;
      }
      *(_QWORD *)(v18 + 40) = *((_QWORD *)v19 + 5);
      *(_QWORD *)(v18 + 48) = *((_QWORD *)v19 + 6);
      v38 = (id *)(v19 + 56);
      v39 = v19[64];
      if (v39 == 255)
      {
        v41 = *v38;
        *(_BYTE *)(v18 + 64) = v19[64];
        *(_QWORD *)(v18 + 56) = v41;
      }
      else
      {
        v40 = *v38;
        sub_1DA4E762C(*v38, v19[64]);
        *(_QWORD *)(v18 + 56) = v40;
        *(_BYTE *)(v18 + 64) = v39;
      }
      v42 = (id *)(v19 + 72);
      v43 = v19[80];
      if (v43 == 255)
      {
        v45 = *v42;
        *(_BYTE *)(v18 + 80) = v19[80];
        *(_QWORD *)(v18 + 72) = v45;
      }
      else
      {
        v44 = *v42;
        sub_1DA4E762C(*v42, v19[80]);
        *(_QWORD *)(v18 + 72) = v44;
        *(_BYTE *)(v18 + 80) = v43;
      }
      v46 = (id *)(v19 + 88);
      v47 = v19[96];
      if (v47 == 255)
      {
        v49 = *v46;
        *(_BYTE *)(v18 + 96) = v19[96];
        *(_QWORD *)(v18 + 88) = v49;
      }
      else
      {
        v48 = *v46;
        sub_1DA4E762C(*v46, v19[96]);
        *(_QWORD *)(v18 + 88) = v48;
        *(_BYTE *)(v18 + 96) = v47;
      }
      v50 = (id *)(v19 + 104);
      v51 = v19[112];
      if (v51 == 255)
      {
        v53 = *v50;
        *(_BYTE *)(v18 + 112) = v19[112];
        *(_QWORD *)(v18 + 104) = v53;
      }
      else
      {
        v52 = *v50;
        sub_1DA4E762C(*v50, v19[112]);
        *(_QWORD *)(v18 + 104) = v52;
        *(_BYTE *)(v18 + 112) = v51;
      }
      v54 = (id *)(v19 + 120);
      v55 = v19[128];
      if (v55 == 255)
      {
        v57 = *v54;
        *(_BYTE *)(v18 + 128) = v19[128];
        *(_QWORD *)(v18 + 120) = v57;
      }
      else
      {
        v56 = *v54;
        sub_1DA4E762C(*v54, v19[128]);
        *(_QWORD *)(v18 + 120) = v56;
        *(_BYTE *)(v18 + 128) = v55;
      }
      *(_BYTE *)(v18 + 129) = v19[129];
      v58 = v20[11];
      v59 = v18 + v58;
      v60 = &v19[v58];
      v61 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      v62 = v20[12];
      v63 = (_QWORD *)(v18 + v62);
      v64 = &v19[v62];
      *v63 = *(_QWORD *)v64;
      v63[1] = *((_QWORD *)v64 + 1);
      *(_BYTE *)(v18 + v20[13]) = v19[v20[13]];
      *(_BYTE *)(v18 + v20[14]) = v19[v20[14]];
      *(_BYTE *)(v18 + v20[15]) = v19[v20[15]];
      v65 = v20[16];
      v66 = (_QWORD *)(v18 + v65);
      v67 = &v19[v65];
      *v66 = *(_QWORD *)v67;
      v66[1] = *((_QWORD *)v67 + 1);
      v68 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v21 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68(v18, 0, 1, v20);
      goto LABEL_75;
    }
LABEL_13:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v18, v19, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_75;
  }
  if (v24)
  {
    sub_1DA4E8990(v18);
    goto LABEL_13;
  }
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = (__int128 *)(v18 + 16);
  v30 = (__int128 *)(v19 + 16);
  v31 = v19[32];
  if (*(unsigned __int8 *)(v18 + 32) == 255)
  {
    if (v31 == 255)
    {
      v72 = *v30;
      *(_BYTE *)(v18 + 32) = v19[32];
      *v29 = v72;
    }
    else
    {
      v69 = *((_QWORD *)v19 + 2);
      v70 = *((_QWORD *)v19 + 3);
      sub_1DA481390(v69, v70, v19[32]);
      *(_QWORD *)(v18 + 16) = v69;
      *(_QWORD *)(v18 + 24) = v70;
      *(_BYTE *)(v18 + 32) = v31;
    }
  }
  else if (v31 == 255)
  {
    sub_1DA4E8928(v18 + 16);
    v71 = v19[32];
    *v29 = *v30;
    *(_BYTE *)(v18 + 32) = v71;
  }
  else
  {
    v32 = *((_QWORD *)v19 + 2);
    v33 = *((_QWORD *)v19 + 3);
    sub_1DA481390(v32, v33, v19[32]);
    v34 = *(_QWORD *)(v18 + 16);
    v35 = *(_QWORD *)(v18 + 24);
    *(_QWORD *)(v18 + 16) = v32;
    *(_QWORD *)(v18 + 24) = v33;
    v36 = *(_BYTE *)(v18 + 32);
    *(_BYTE *)(v18 + 32) = v31;
    sub_1DA47F868(v34, v35, v36);
  }
  *(_QWORD *)(v18 + 40) = *((_QWORD *)v19 + 5);
  *(_QWORD *)(v18 + 48) = *((_QWORD *)v19 + 6);
  v73 = (id *)(v18 + 56);
  v74 = (id *)(v19 + 56);
  v75 = v19[64];
  if (*(unsigned __int8 *)(v18 + 64) == 255)
  {
    if (v75 == 255)
    {
      v81 = *v74;
      *(_BYTE *)(v18 + 64) = v19[64];
      *v73 = v81;
    }
    else
    {
      v79 = *v74;
      sub_1DA4E762C(*v74, v19[64]);
      *(_QWORD *)(v18 + 56) = v79;
      *(_BYTE *)(v18 + 64) = v75;
    }
  }
  else if (v75 == 255)
  {
    sub_1DA4E895C(v18 + 56);
    v80 = v19[64];
    *v73 = *v74;
    *(_BYTE *)(v18 + 64) = v80;
  }
  else
  {
    v76 = *v74;
    sub_1DA4E762C(*v74, v19[64]);
    v77 = *(void **)(v18 + 56);
    *(_QWORD *)(v18 + 56) = v76;
    v78 = *(_BYTE *)(v18 + 64);
    *(_BYTE *)(v18 + 64) = v75;
    sub_1DA4E7898(v77, v78);
  }
  v82 = (id *)(v18 + 72);
  v83 = (id *)(v19 + 72);
  v84 = v19[80];
  if (*(unsigned __int8 *)(v18 + 80) == 255)
  {
    if (v84 == 255)
    {
      v90 = *v83;
      *(_BYTE *)(v18 + 80) = v19[80];
      *v82 = v90;
    }
    else
    {
      v88 = *v83;
      sub_1DA4E762C(*v83, v19[80]);
      *(_QWORD *)(v18 + 72) = v88;
      *(_BYTE *)(v18 + 80) = v84;
    }
  }
  else if (v84 == 255)
  {
    sub_1DA4E895C(v18 + 72);
    v89 = v19[80];
    *v82 = *v83;
    *(_BYTE *)(v18 + 80) = v89;
  }
  else
  {
    v85 = *v83;
    sub_1DA4E762C(*v83, v19[80]);
    v86 = *(void **)(v18 + 72);
    *(_QWORD *)(v18 + 72) = v85;
    v87 = *(_BYTE *)(v18 + 80);
    *(_BYTE *)(v18 + 80) = v84;
    sub_1DA4E7898(v86, v87);
  }
  v91 = (id *)(v18 + 88);
  v92 = (id *)(v19 + 88);
  v93 = v19[96];
  if (*(unsigned __int8 *)(v18 + 96) == 255)
  {
    if (v93 == 255)
    {
      v99 = *v92;
      *(_BYTE *)(v18 + 96) = v19[96];
      *v91 = v99;
    }
    else
    {
      v97 = *v92;
      sub_1DA4E762C(*v92, v19[96]);
      *(_QWORD *)(v18 + 88) = v97;
      *(_BYTE *)(v18 + 96) = v93;
    }
  }
  else if (v93 == 255)
  {
    sub_1DA4E895C(v18 + 88);
    v98 = v19[96];
    *v91 = *v92;
    *(_BYTE *)(v18 + 96) = v98;
  }
  else
  {
    v94 = *v92;
    sub_1DA4E762C(*v92, v19[96]);
    v95 = *(void **)(v18 + 88);
    *(_QWORD *)(v18 + 88) = v94;
    v96 = *(_BYTE *)(v18 + 96);
    *(_BYTE *)(v18 + 96) = v93;
    sub_1DA4E7898(v95, v96);
  }
  v100 = (id *)(v18 + 104);
  v101 = (id *)(v19 + 104);
  v102 = v19[112];
  if (*(unsigned __int8 *)(v18 + 112) == 255)
  {
    if (v102 == 255)
    {
      v108 = *v101;
      *(_BYTE *)(v18 + 112) = v19[112];
      *v100 = v108;
    }
    else
    {
      v106 = *v101;
      sub_1DA4E762C(*v101, v19[112]);
      *(_QWORD *)(v18 + 104) = v106;
      *(_BYTE *)(v18 + 112) = v102;
    }
  }
  else if (v102 == 255)
  {
    sub_1DA4E895C(v18 + 104);
    v107 = v19[112];
    *v100 = *v101;
    *(_BYTE *)(v18 + 112) = v107;
  }
  else
  {
    v103 = *v101;
    sub_1DA4E762C(*v101, v19[112]);
    v104 = *(void **)(v18 + 104);
    *(_QWORD *)(v18 + 104) = v103;
    v105 = *(_BYTE *)(v18 + 112);
    *(_BYTE *)(v18 + 112) = v102;
    sub_1DA4E7898(v104, v105);
  }
  v109 = (id *)(v18 + 120);
  v110 = (id *)(v19 + 120);
  v111 = v19[128];
  if (*(unsigned __int8 *)(v18 + 128) == 255)
  {
    if (v111 == 255)
    {
      v117 = *v110;
      *(_BYTE *)(v18 + 128) = v19[128];
      *v109 = v117;
    }
    else
    {
      v115 = *v110;
      sub_1DA4E762C(*v110, v19[128]);
      *(_QWORD *)(v18 + 120) = v115;
      *(_BYTE *)(v18 + 128) = v111;
    }
  }
  else if (v111 == 255)
  {
    sub_1DA4E895C(v18 + 120);
    v116 = v19[128];
    *v109 = *v110;
    *(_BYTE *)(v18 + 128) = v116;
  }
  else
  {
    v112 = *v110;
    sub_1DA4E762C(*v110, v19[128]);
    v113 = *(void **)(v18 + 120);
    *(_QWORD *)(v18 + 120) = v112;
    v114 = *(_BYTE *)(v18 + 128);
    *(_BYTE *)(v18 + 128) = v111;
    sub_1DA4E7898(v113, v114);
  }
  *(_BYTE *)(v18 + 129) = v19[129];
  v118 = v20[11];
  v119 = v18 + v118;
  v120 = &v19[v118];
  v121 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 24))(v119, v120, v121);
  v122 = v20[12];
  v123 = (_QWORD *)(v18 + v122);
  v124 = &v19[v122];
  *v123 = *(_QWORD *)v124;
  v123[1] = *((_QWORD *)v124 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + v20[13]) = v19[v20[13]];
  *(_BYTE *)(v18 + v20[14]) = v19[v20[14]];
  *(_BYTE *)(v18 + v20[15]) = v19[v20[15]];
  v125 = v20[16];
  v126 = (_QWORD *)(v18 + v125);
  v127 = &v19[v125];
  *v126 = *(_QWORD *)v127;
  v126[1] = *((_QWORD *)v127 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_75:
  v128 = v7[22];
  v129 = (_QWORD *)((char *)a1 + v128);
  v130 = (_QWORD *)((char *)a2 + v128);
  v131 = *(_QWORD *)((char *)a2 + v128 + 8);
  if (*(_QWORD *)((char *)a1 + v128 + 8) >> 60 == 15)
  {
    if (v131 >> 60 != 15)
    {
      v132 = *v130;
      sub_1DA498750(v132, v131);
      *v129 = v132;
      v129[1] = v131;
      goto LABEL_82;
    }
    goto LABEL_80;
  }
  if (v131 >> 60 == 15)
  {
    sub_1DA4E89CC((uint64_t)v129);
LABEL_80:
    *(_OWORD *)v129 = *(_OWORD *)v130;
    goto LABEL_82;
  }
  v133 = *v130;
  sub_1DA498750(v133, v131);
  v134 = *v129;
  v135 = v129[1];
  *v129 = v133;
  v129[1] = v131;
  sub_1DA4986F8(v134, v135);
LABEL_82:
  v136 = v7[23];
  v137 = (char *)a1 + v136;
  v138 = (char *)a2 + v136;
  v139 = sub_1DA66C358();
  v140 = *(_QWORD *)(v139 - 8);
  v141 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v140 + 48);
  v142 = v141(v137, 1, v139);
  v143 = v141(v138, 1, v139);
  if (!v142)
  {
    if (!v143)
    {
      (*(void (**)(char *, char *, uint64_t))(v140 + 24))(v137, v138, v139);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v140 + 8))(v137, v139);
    goto LABEL_87;
  }
  if (v143)
  {
LABEL_87:
    v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v137, v138, v139);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
  return a1;
}

uint64_t initializeWithTake for PlayEpisodeIntent(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  v7 = (int *)type metadata accessor for EpisodeEntity();
  v8 = v7[20];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1DA66DB58();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = v7[21];
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  v17 = (int *)sub_1DA66CA0C();
  v18 = *((_QWORD *)v17 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = v16[1];
    *v15 = *v16;
    v15[1] = v20;
    *((_BYTE *)v15 + 32) = *((_BYTE *)v16 + 32);
    *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
    *((_QWORD *)v15 + 7) = *((_QWORD *)v16 + 7);
    *((_BYTE *)v15 + 64) = *((_BYTE *)v16 + 64);
    *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
    *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
    *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
    *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
    *((_BYTE *)v15 + 129) = *((_BYTE *)v16 + 129);
    v21 = v17[11];
    v22 = (char *)v15 + v21;
    v23 = (char *)v16 + v21;
    v24 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *((_BYTE *)v15 + v17[13]) = *((_BYTE *)v16 + v17[13]);
    *((_BYTE *)v15 + v17[14]) = *((_BYTE *)v16 + v17[14]);
    *((_BYTE *)v15 + v17[15]) = *((_BYTE *)v16 + v17[15]);
    *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_OWORD *)(a1 + v7[22]) = *(_OWORD *)(a2 + v7[22]);
  v25 = v7[23];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  v28 = sub_1DA66C358();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

_QWORD *assignWithTake for PlayEpisodeIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, int *);
  int v24;
  int v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v48;
  _OWORD *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  int v55;
  int v56;
  void *v57;
  _QWORD *v58;
  int v59;
  int v60;
  void *v61;
  _QWORD *v62;
  int v63;
  int v64;
  void *v65;
  _QWORD *v66;
  int v67;
  int v68;
  void *v69;
  _QWORD *v70;
  int v71;
  int v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = (void *)a1[2];
  a1[2] = a2[2];

  v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  a1[13] = a2[13];
  swift_release();
  a1[14] = a2[14];
  swift_release();
  a1[15] = a2[15];
  swift_release();
  a1[16] = a2[16];
  swift_release();
  a1[17] = a2[17];
  swift_release();
  v8 = (int *)type metadata accessor for EpisodeEntity();
  v9 = v8[20];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1DA66DB58();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1F0269260);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v18 = v8[21];
  v19 = (uint64_t)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = (int *)sub_1DA66CA0C();
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23((uint64_t)v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      v26 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + 16) = v26;
      *(_BYTE *)(v19 + 32) = v20[32];
      *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
      *(_QWORD *)(v19 + 56) = *((_QWORD *)v20 + 7);
      *(_BYTE *)(v19 + 64) = v20[64];
      *(_OWORD *)(v19 + 113) = *(_OWORD *)(v20 + 113);
      *(_OWORD *)(v19 + 104) = *(_OWORD *)(v20 + 104);
      *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
      *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
      *(_BYTE *)(v19 + 129) = v20[129];
      v27 = v21[11];
      v28 = v19 + v27;
      v29 = &v20[v27];
      v30 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)(v19 + v21[12]) = *(_OWORD *)&v20[v21[12]];
      *(_BYTE *)(v19 + v21[13]) = v20[v21[13]];
      *(_BYTE *)(v19 + v21[14]) = v20[v21[14]];
      *(_BYTE *)(v19 + v21[15]) = v20[v21[15]];
      *(_OWORD *)(v19 + v21[16]) = *(_OWORD *)&v20[v21[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    sub_1DA4E8990(v19);
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v19, v20, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  v48 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v48;
  swift_bridgeObjectRelease();
  v49 = v20 + 16;
  v50 = *(unsigned __int8 *)(v19 + 32);
  if (v50 != 255)
  {
    v51 = v20[32];
    if (v51 != 255)
    {
      v52 = *(_QWORD *)(v19 + 16);
      v53 = *(_QWORD *)(v19 + 24);
      *(_OWORD *)(v19 + 16) = *v49;
      *(_BYTE *)(v19 + 32) = v51;
      sub_1DA47F868(v52, v53, v50);
      goto LABEL_32;
    }
    sub_1DA4E8928(v19 + 16);
  }
  *(_OWORD *)(v19 + 16) = *v49;
  *(_BYTE *)(v19 + 32) = v20[32];
LABEL_32:
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
  v54 = v20 + 56;
  v55 = *(unsigned __int8 *)(v19 + 64);
  if (v55 != 255)
  {
    v56 = v20[64];
    if (v56 != 255)
    {
      v57 = *(void **)(v19 + 56);
      *(_QWORD *)(v19 + 56) = *v54;
      *(_BYTE *)(v19 + 64) = v56;
      sub_1DA4E7898(v57, v55);
      goto LABEL_37;
    }
    sub_1DA4E895C(v19 + 56);
  }
  *(_QWORD *)(v19 + 56) = *v54;
  *(_BYTE *)(v19 + 64) = v20[64];
LABEL_37:
  v58 = v20 + 72;
  v59 = *(unsigned __int8 *)(v19 + 80);
  if (v59 != 255)
  {
    v60 = v20[80];
    if (v60 != 255)
    {
      v61 = *(void **)(v19 + 72);
      *(_QWORD *)(v19 + 72) = *v58;
      *(_BYTE *)(v19 + 80) = v60;
      sub_1DA4E7898(v61, v59);
      goto LABEL_42;
    }
    sub_1DA4E895C(v19 + 72);
  }
  *(_QWORD *)(v19 + 72) = *v58;
  *(_BYTE *)(v19 + 80) = v20[80];
LABEL_42:
  v62 = v20 + 88;
  v63 = *(unsigned __int8 *)(v19 + 96);
  if (v63 != 255)
  {
    v64 = v20[96];
    if (v64 != 255)
    {
      v65 = *(void **)(v19 + 88);
      *(_QWORD *)(v19 + 88) = *v62;
      *(_BYTE *)(v19 + 96) = v64;
      sub_1DA4E7898(v65, v63);
      goto LABEL_47;
    }
    sub_1DA4E895C(v19 + 88);
  }
  *(_QWORD *)(v19 + 88) = *v62;
  *(_BYTE *)(v19 + 96) = v20[96];
LABEL_47:
  v66 = v20 + 104;
  v67 = *(unsigned __int8 *)(v19 + 112);
  if (v67 != 255)
  {
    v68 = v20[112];
    if (v68 != 255)
    {
      v69 = *(void **)(v19 + 104);
      *(_QWORD *)(v19 + 104) = *v66;
      *(_BYTE *)(v19 + 112) = v68;
      sub_1DA4E7898(v69, v67);
      goto LABEL_52;
    }
    sub_1DA4E895C(v19 + 104);
  }
  *(_QWORD *)(v19 + 104) = *v66;
  *(_BYTE *)(v19 + 112) = v20[112];
LABEL_52:
  v70 = v20 + 120;
  v71 = *(unsigned __int8 *)(v19 + 128);
  if (v71 == 255)
  {
LABEL_56:
    *(_QWORD *)(v19 + 120) = *v70;
    *(_BYTE *)(v19 + 128) = v20[128];
    goto LABEL_57;
  }
  v72 = v20[128];
  if (v72 == 255)
  {
    sub_1DA4E895C(v19 + 120);
    goto LABEL_56;
  }
  v73 = *(void **)(v19 + 120);
  *(_QWORD *)(v19 + 120) = *v70;
  *(_BYTE *)(v19 + 128) = v72;
  sub_1DA4E7898(v73, v71);
LABEL_57:
  *(_BYTE *)(v19 + 129) = v20[129];
  v74 = v21[11];
  v75 = v19 + v74;
  v76 = &v20[v74];
  v77 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 40))(v75, v76, v77);
  v78 = v21[12];
  v79 = (_QWORD *)(v19 + v78);
  v80 = &v20[v78];
  v82 = *(_QWORD *)v80;
  v81 = *((_QWORD *)v80 + 1);
  *v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + v21[13]) = v20[v21[13]];
  *(_BYTE *)(v19 + v21[14]) = v20[v21[14]];
  *(_BYTE *)(v19 + v21[15]) = v20[v21[15]];
  v83 = v21[16];
  v84 = (_QWORD *)(v19 + v83);
  v85 = &v20[v83];
  v87 = *(_QWORD *)v85;
  v86 = *((_QWORD *)v85 + 1);
  *v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
LABEL_13:
  v32 = v8[22];
  v33 = (uint64_t)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)((char *)a1 + v32 + 8);
  if (v35 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)v33 = *(_OWORD *)v34;
    goto LABEL_18;
  }
  v36 = *((_QWORD *)v34 + 1);
  if (v36 >> 60 == 15)
  {
    sub_1DA4E89CC(v33);
    goto LABEL_16;
  }
  v37 = *(_QWORD *)v33;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = v36;
  sub_1DA4986F8(v37, v35);
LABEL_18:
  v38 = v8[23];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_1DA66C358();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v39, v40, v41);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
    goto LABEL_23;
  }
  if (v45)
  {
LABEL_23:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayEpisodeIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA4F4628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PlayEpisodeIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA4F4670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PlayEpisodeIntent()
{
  uint64_t result;

  result = qword_1EDAE3C20;
  if (!qword_1EDAE3C20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA4F46EC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for EpisodeEntity();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_1DA4F4754(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DA4F476C()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t sub_1DA4F47B0()
{
  return sub_1DA6707A4();
}

uint64_t sub_1DA4F47D8()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t NowPlayingArtworkProvider.__allocating_init(imageProvider:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1DA4841BC(a1, v2 + 16);
  return v2;
}

uint64_t NowPlayingArtworkProvider.init(imageProvider:)(__int128 *a1)
{
  uint64_t v1;

  sub_1DA4841BC(a1, v1 + 16);
  return v1;
}

uint64_t NowPlayingArtworkProvider.fetch(for:dataProvider:at:of:)(unsigned __int8 *a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269290);
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v39 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269298);
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v41 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02692A0);
  v45 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v43 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DA66DEF4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *a1;
  sub_1DA66DE94();
  v21 = sub_1DA66DEDC();
  v22 = sub_1DA66FD9C();
  if (os_log_type_enabled(v21, v22))
  {
    v38[0] = a2;
    v23 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    *(_DWORD *)v23 = 136315394;
    v48 = (id)sub_1DA49AD00(0xD00000000000001CLL, 0x80000001DA68A7C0, &v49);
    sub_1DA6702C4();
    *(_WORD *)(v23 + 12) = 2082;
    v38[1] = v15;
    __asm { BR              X9 }
  }

  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v24 = v47;
  LOBYTE(v49) = v47;
  v49 = NowPlayingArtworkProvider.data(for:dataProvider:at:)((char *)&v49, a2, a3);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v48 = (id)sub_1DA66FEC8();
  v25 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 1, 1, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5000);
  v26 = MEMORY[0x1E0C95D90];
  sub_1DA4841D4(&qword_1EDAE4FF8, &qword_1EDAE5000, MEMORY[0x1E0C95D90]);
  sub_1DA4A89F0();
  v27 = v39;
  sub_1DA66E248();
  sub_1DA47E2F0((uint64_t)v12, (uint64_t *)&unk_1EDAE20A0);

  swift_release();
  v28 = swift_allocObject();
  swift_weakInit();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v28;
  *(_BYTE *)(v29 + 24) = v24;
  *(double *)(v29 + 32) = a4;
  *(double *)(v29 + 40) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
  sub_1DA4841D4(&qword_1F02692A8, &qword_1F0269290, MEMORY[0x1E0C95CB8]);
  v31 = v41;
  v30 = v42;
  sub_1DA66E17C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v30);
  v32 = sub_1DA4841D4(&qword_1F02692B0, &qword_1F0269298, MEMORY[0x1E0C95950]);
  v33 = sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, v26);
  v34 = v43;
  v35 = v46;
  MEMORY[0x1DF09CAF0](v46, v32, v33);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v35);
  sub_1DA4841D4(&qword_1F02692B8, &qword_1F02692A0, MEMORY[0x1E0C95870]);
  v36 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v15);
  return v36;
}

uint64_t NowPlayingArtworkProvider.data(for:dataProvider:at:)(char *a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v19;
  __int128 v20[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02692C0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = swift_allocObject();
  swift_weakInit();
  sub_1DA4813E4(a2, (uint64_t)v20);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_BYTE *)(v15 + 24) = v13;
  sub_1DA4841BC(v20, v15 + 32);
  *(double *)(v15 + 72) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE25A0);
  swift_allocObject();
  *(_QWORD *)&v20[0] = sub_1DA66E074();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v19 = (id)sub_1DA66FEC8();
  v16 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  sub_1DA4841D4(&qword_1EDAE2598, &qword_1EDAE25A0, MEMORY[0x1E0C96108]);
  sub_1DA4A89F0();
  sub_1DA66E248();
  sub_1DA47E2F0((uint64_t)v8, (uint64_t *)&unk_1EDAE20A0);

  swift_release();
  sub_1DA4841D4(&qword_1F02692C8, &qword_1F02692C0, MEMORY[0x1E0C95CB8]);
  v17 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v17;
}

uint64_t sub_1DA4F50D8@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;

  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EDADEEF0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    LOBYTE(v19) = a2;
    v15 = sub_1DA4F63F0(a1, (unsigned __int8 *)&v19, (_QWORD *)(Strong + 16), a4, a5);
    result = swift_release();
  }
  else
  {
    sub_1DA4F71E4();
    v17 = swift_allocError();
    *v18 = 0;
    v19 = v17;
    sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5388);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    sub_1DA66E014();
    sub_1DA4841D4(&qword_1EDAE23D0, qword_1EDADEEF0, MEMORY[0x1E0C96068]);
    v15 = sub_1DA66E11C();
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  *a3 = v15;
  return result;
}

uint64_t NowPlayingArtworkProvider.fetch(for:placement:of:)(uint64_t a1, unsigned __int8 *a2, double a3, double a4)
{
  uint64_t v4;
  unsigned __int8 v6;

  v6 = *a2;
  return sub_1DA4F63F0(a1, &v6, (_QWORD *)(v4 + 16), a3, a4);
}

uint64_t sub_1DA4F5294(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];
  __int128 v28[2];

  v12 = sub_1DA66E9C8();
  v25 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DA66EA04();
  v23 = *(_QWORD *)(v15 - 8);
  v24 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v18 = (void *)sub_1DA66FE44();
  sub_1DA4813E4(a5, (uint64_t)v28);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a3;
  *(_BYTE *)(v19 + 24) = a4;
  sub_1DA4841BC(v28, v19 + 32);
  *(double *)(v19 + 72) = a6;
  *(_QWORD *)(v19 + 80) = a1;
  *(_QWORD *)(v19 + 88) = a2;
  aBlock[4] = sub_1DA4F7184;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA4A9194;
  aBlock[3] = &block_descriptor;
  v20 = _Block_copy(aBlock);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66E9EC();
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1DA4F719C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA4841D4((unint64_t *)&qword_1EDADE6F0, (uint64_t *)&unk_1EDADE6E0, MEMORY[0x1E0DEAF38]);
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v17, v14, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v24);
  return swift_release();
}

uint64_t sub_1DA4F54D8(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  void (*v20)(uint64_t *);
  char v21;

  v20 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE25D8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2590);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NowPlayingArtwork.Data();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v21 = a2;
    sub_1DA4F5734(&v21, a3, (uint64_t)v11);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_1DA4F7228((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
      sub_1DA484504((uint64_t)v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
      swift_storeEnumTagMultiPayload();
      v20(v8);
      sub_1DA47E2F0((uint64_t)v8, &qword_1EDAE25D8);
      return sub_1DA47F880((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_1DA47E2F0((uint64_t)v11, &qword_1EDAE2590);
  sub_1DA4F71E4();
  v17 = swift_allocError();
  *v18 = 1;
  *v8 = v17;
  swift_storeEnumTagMultiPayload();
  v20(v8);
  return sub_1DA47E2F0((uint64_t)v8, &qword_1EDAE25D8);
}

uint64_t sub_1DA4F5734@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[4];
  _QWORD v60[4];

  v55 = a3;
  v5 = sub_1DA66DEF4();
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  MEMORY[0x1E0C80A78](v5);
  v51 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v46 - v8;
  v9 = type metadata accessor for NowPlayingArtwork.Data();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2590);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v46 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v46 - v20;
  v54 = *a1;
  v22 = (uint64_t)*(&off_1EA0C8430 + v54);
  sub_1DA4813E4(a2, (uint64_t)v60);
  v56 = a2;
  sub_1DA4813E4(a2, (uint64_t)v59);
  v23 = *(_QWORD *)(v22 + 16);
  v57 = v22;
  if (!v23)
  {
    swift_bridgeObjectRetain();
LABEL_8:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
    v29 = 1;
    v31 = v55;
    v30 = v56;
    goto LABEL_9;
  }
  v48 = v18;
  v49 = v15;
  v47 = v12;
  v24 = v22 + 32;
  swift_bridgeObjectRetain();
  v25 = 0;
  while (1)
  {
    v26 = *(_BYTE *)(v24 + v25);
    __swift_project_boxed_opaque_existential_1(v59, v59[3]);
    LOBYTE(v58) = v26;
    NowPlayingArtworkDataProviding.data(for:at:)((unsigned __int8 *)&v58);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    v28 = v27(v21, 1, v9);
    sub_1DA47E2F0((uint64_t)v21, &qword_1EDAE2590);
    if (v28 != 1)
      break;
    if (v23 == ++v25)
      goto LABEL_8;
  }
  if (v23 == v25)
    goto LABEL_8;
  if (v25 >= *(_QWORD *)(v57 + 16))
  {
    __break(1u);
    goto LABEL_21;
  }
  v40 = *(_BYTE *)(v24 + v25);
  __swift_project_boxed_opaque_existential_1(v60, v60[3]);
  LOBYTE(v58) = v40;
  v41 = (uint64_t)v48;
  NowPlayingArtworkDataProviding.data(for:at:)((unsigned __int8 *)&v58);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  v42 = (uint64_t)v49;
  sub_1DA49CC94(v41, (uint64_t)v49, &qword_1EDAE2590);
  if (v27((char *)v42, 1, v9) == 1)
  {
LABEL_21:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
    __break(1u);
    JUMPOUT(0x1DA4F6060);
  }
  v43 = v42;
  v44 = (uint64_t)v47;
  sub_1DA4F7228(v43, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
  sub_1DA47E2F0(v41, &qword_1EDAE2590);
  v31 = v55;
  sub_1DA4F7228(v44, v55, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
  v29 = 0;
  v30 = v56;
LABEL_9:
  v32 = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v31, v29, 1, v9);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v31, 1, v9) == 1)
  {
    v33 = v51;
    sub_1DA66DE94();
    sub_1DA4813E4(v30, (uint64_t)v60);
    v34 = sub_1DA66DEDC();
    v35 = sub_1DA66FDA8();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v59[0] = swift_slowAlloc();
      *(_DWORD *)v36 = 136315907;
      v58 = sub_1DA49AD00(0xD00000000000001CLL, 0x80000001DA68A7C0, v59);
      sub_1DA6702C4();
      *(_WORD *)(v36 + 12) = 2082;
      __asm { BR              X9 }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);

  }
  else
  {
    v33 = v50;
    sub_1DA66DE94();
    sub_1DA4813E4(v30, (uint64_t)v60);
    v37 = sub_1DA66DEDC();
    v38 = sub_1DA66FD9C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v59[0] = swift_slowAlloc();
      *(_DWORD *)v39 = 136315907;
      v58 = sub_1DA49AD00(0xD00000000000001CLL, 0x80000001DA68A7C0, v59);
      sub_1DA6702C4();
      *(_WORD *)(v39 + 12) = 2082;
      __asm { BR              X9 }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v33, v53);
}

uint64_t NowPlayingArtworkProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t NowPlayingArtworkProvider.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1DA4F60C8(unsigned __int8 *a1, uint64_t a2, double a3, double a4, double a5)
{
  return NowPlayingArtworkProvider.fetch(for:dataProvider:at:of:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1DA4F60E8(uint64_t a1, unsigned __int8 *a2, double a3, double a4)
{
  uint64_t *v4;
  uint64_t v5;
  unsigned __int8 v7;

  v5 = *v4;
  v7 = *a2;
  return sub_1DA4F63F0(a1, &v7, (_QWORD *)(v5 + 16), a3, a4);
}

uint64_t sub_1DA4F6118(char *a1, uint64_t a2, double a3)
{
  return NowPlayingArtworkProvider.data(for:dataProvider:at:)(a1, a2, a3);
}

uint64_t sub_1DA4F6138(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

_BYTE **sub_1DA4F616C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1DA4F617C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1DA4F619C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1DA49AD00(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1DA6702C4();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1DA4F620C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA4F6230()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA4F6254@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1DA4F50D8(a1, *(_BYTE *)(v2 + 24), a2, *(double *)(v2 + 32), *(double *)(v2 + 40));
}

uint64_t sub_1DA4F6264()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_1DA4F6290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DA4F5294(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), v2 + 32, *(double *)(v2 + 72));
}

uint64_t sub_1DA4F62A4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA4F63F0(uint64_t a1, unsigned __int8 *a2, _QWORD *a3, double Width, double Height)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  uint64_t (*v38)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t (*v40)(void);
  uint64_t v41;
  unsigned __int8 *v42;
  void *v43;
  id v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  id v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  double v58;
  CGFloat v59;
  double v60;
  CGFloat v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  unsigned __int8 *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t (*v77)(void);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned __int8 *v106;
  uint64_t v107;
  uint64_t v108[5];
  _QWORD v109[5];
  uint64_t v110[2];
  CGRect v111;
  CGRect v112;

  v95 = a3;
  v106 = a2;
  v107 = a1;
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19A8);
  v100 = *(char **)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v99 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DA66D5C4();
  MEMORY[0x1E0C80A78](v8);
  v94 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_1DA66D1F8();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v89 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D8);
  MEMORY[0x1E0C80A78](v11);
  v93 = (uint64_t)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v92 = (char *)&v88 - v14;
  v98 = sub_1DA66CEBC();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v96 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v16);
  v88 = (uint64_t)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v105 = (uint64_t)&v88 - v19;
  MEMORY[0x1E0C80A78](v20);
  v104 = (uint64_t)&v88 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C8);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D0);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1DA66DEF4();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v31 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v88 - v33;
  v35 = type metadata accessor for NowPlayingArtwork.Data();
  MEMORY[0x1E0C80A78](v35);
  v37 = (void **)((char *)&v88 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v106 = (unsigned __int8 *)*v106;
  sub_1DA484504(v107, (uint64_t)v37, v38);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v40 = MEMORY[0x1E0D7D7F0];
      v41 = v104;
      sub_1DA4F7228((uint64_t)v37, v104, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
      sub_1DA66DE94();
      sub_1DA66FD90();
      sub_1DA66D5D0();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v31, v103);
      sub_1DA484504(v41, v105, (uint64_t (*)(_QWORD))v40);
      v42 = v106;
      if (Width == 1.79769313e308 || Height == 1.79769313e308)
      {
        if ((_DWORD)v106 == 3)
        {
          v43 = (void *)objc_opt_self();
          v44 = objc_msgSend(v43, sel_mainScreen);
          objc_msgSend(v44, sel_bounds);
          v46 = v45;
          v48 = v47;
          v50 = v49;
          v52 = v51;

          v111.origin.x = v46;
          v111.origin.y = v48;
          v111.size.width = v50;
          v111.size.height = v52;
          Width = CGRectGetWidth(v111);
          v53 = objc_msgSend(v43, sel_mainScreen);
          objc_msgSend(v53, sel_bounds);
          v55 = v54;
          v57 = v56;
          v59 = v58;
          v61 = v60;

          v112.origin.x = v55;
          v112.origin.y = v57;
          v112.size.width = v59;
          v112.size.height = v61;
          Height = CGRectGetHeight(v112);
        }
        else
        {
          Width = 600.0;
          Height = 600.0;
        }
      }
      v74 = sub_1DA66DD14();
      v75 = (uint64_t)v92;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v92, 1, 1, v74);
      sub_1DA4813E4((uint64_t)v110, (uint64_t)v109);
      v76 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      objc_msgSend(v76, sel_scale);

      v77 = MEMORY[0x1E0D7D7F0];
      v78 = v105;
      sub_1DA484504(v105, v88, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
      sub_1DA66C9F4();
      v79 = v90;
      v80 = (uint64_t)v89;
      v81 = v91;
      (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v89, *MEMORY[0x1E0D7E1C8], v91);
      CGSize.fitting(_:aspectRule:)(v80, Width, Height);
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v80, v81);
      sub_1DA49CC94(v75, v93, &qword_1EDAE53D8);
      sub_1DA66D5AC();
      sub_1DA49CC94((uint64_t)v109, (uint64_t)v108, &qword_1EDAE5310);
      v82 = v96;
      sub_1DA66CE5C();
      sub_1DA47E2F0((uint64_t)v109, &qword_1EDAE5310);
      sub_1DA47E2F0(v75, &qword_1EDAE53D8);
      sub_1DA47F880(v78, (uint64_t (*)(_QWORD))v77);
      v83 = v95[3];
      v84 = v95[4];
      __swift_project_boxed_opaque_existential_1(v95, v83);
      v108[0] = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 8))(v82, v83, v84);
      sub_1DA4813E4((uint64_t)v110, (uint64_t)v109);
      __asm { BR              X9 }
    }
    v67 = *v37;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE5330);
    swift_allocObject();
    v110[0] = sub_1DA66E074();
    sub_1DA4841D4(&qword_1EDAE5328, (uint64_t *)&unk_1EDAE5330, MEMORY[0x1E0C96108]);
    v68 = sub_1DA66E11C();
    swift_release();

  }
  else
  {
    v100 = v25;
    v101 = v23;
    v104 = v22;
    v107 = v27;
    v105 = v26;
    v62 = (char *)*v37;
    sub_1DA66DE94();
    v63 = sub_1DA66DEDC();
    v64 = sub_1DA66FD9C();
    if (os_log_type_enabled(v63, v64))
    {
      v99 = v62;
      v65 = v106;
      v66 = swift_slowAlloc();
      v98 = swift_slowAlloc();
      v110[0] = v98;
      *(_DWORD *)v66 = 136315394;
      v109[0] = sub_1DA49AD00(0xD00000000000001CLL, 0x80000001DA68A7C0, v110);
      sub_1DA6702C4();
      *(_WORD *)(v66 + 12) = 2080;
      __asm { BR              X9 }
    }

    (*(void (**)(char *, uint64_t))(v102 + 8))(v34, v103);
    v69 = v105;
    v70 = v107;
    v71 = v29;
    v72 = v104;
    v73 = v101;
    v110[0] = (uint64_t)v62;
    sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5388);
    v85 = v62;
    v86 = v100;
    sub_1DA66E02C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    sub_1DA66E020();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v86, v72);
    sub_1DA4841D4(&qword_1EDAE23D8, &qword_1EDAE53D0, MEMORY[0x1E0C964C8]);
    v68 = sub_1DA66E11C();

    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v69);
  }
  return v68;
}

uint64_t type metadata accessor for NowPlayingArtworkProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for NowPlayingArtworkProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingArtworkProvider.__allocating_init(imageProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1DA4F7124()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DA4F7148(void (*a1)(void **), uint64_t a2)
{
  uint64_t v2;

  sub_1DA5F26C0(a1, a2, v2);
}

uint64_t sub_1DA4F7150()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA4F7184()
{
  uint64_t v0;

  return sub_1DA4F54D8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), v0 + 32, *(void (**)(uint64_t *))(v0 + 80));
}

unint64_t sub_1DA4F719C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDADE6D0;
  if (!qword_1EDADE6D0)
  {
    v1 = sub_1DA66E9C8();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1EDADE6D0);
  }
  return result;
}

unint64_t sub_1DA4F71E4()
{
  unint64_t result;

  result = qword_1F02692D0;
  if (!qword_1F02692D0)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA678D78, &type metadata for NowPlayingArtworkProvider.ArtworkError);
    atomic_store(result, (unint64_t *)&qword_1F02692D0);
  }
  return result;
}

uint64_t sub_1DA4F7228(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DA4F726C()
{
  unint64_t result;

  result = qword_1EDAE0130;
  if (!qword_1EDAE0130)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEE1C8], MEMORY[0x1E0DEE190]);
    atomic_store(result, (unint64_t *)&qword_1EDAE0130);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NowPlayingArtworkProvider.ArtworkError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA4F72FC + 4 * byte_1DA678C9A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA4F7330 + 4 * byte_1DA678C95[v4]))();
}

uint64_t sub_1DA4F7330(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA4F7338(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA4F7340);
  return result;
}

uint64_t sub_1DA4F734C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA4F7354);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA4F7358(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA4F7360(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1DA4F736C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtworkProvider.ArtworkError()
{
  return &type metadata for NowPlayingArtworkProvider.ArtworkError;
}

unint64_t sub_1DA4F738C()
{
  unint64_t result;

  result = qword_1F02692D8;
  if (!qword_1F02692D8)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA678D50, &type metadata for NowPlayingArtworkProvider.ArtworkError);
    atomic_store(result, (unint64_t *)&qword_1F02692D8);
  }
  return result;
}

uint64_t sub_1DA4F73D0()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F02692E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F02692E0);
  return sub_1DA66C208();
}

uint64_t static FollowRSSFeedAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1F0268418, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1F02692E0, a1);
}

uint64_t sub_1DA4F7454()
{
  uint64_t v0;

  v0 = sub_1DA66BF68();
  __swift_allocate_value_buffer(v0, qword_1F02692F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F02692F8);
  return sub_1DA66BF5C();
}

uint64_t static FollowRSSFeedAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1F0268420, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1F02692F8, a1);
}

uint64_t static FollowRSSFeedAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static FollowRSSFeedAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static FollowRSSFeedAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269310);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269318);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA4F7658();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269328);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

unint64_t sub_1DA4F7658()
{
  unint64_t result;

  result = qword_1F0269320;
  if (!qword_1F0269320)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FollowRSSFeedAppIntent, &type metadata for FollowRSSFeedAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269320);
  }
  return result;
}

uint64_t FollowRSSFeedAppIntent.$feedURL.getter()
{
  return sub_1DA66BE30();
}

uint64_t sub_1DA4F76BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1DA66BE60();
  sub_1DA66BE60();
  v2 = sub_1DA66BE30();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t FollowRSSFeedAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t sub_1DA4F7744@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BC98();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA4F77A4()
{
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BCA4();
  swift_release();
  return swift_release();
}

uint64_t FollowRSSFeedAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*FollowRSSFeedAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t FollowRSSFeedAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t FollowRSSFeedAppIntent.feedURL.getter()
{
  return sub_1DA66BE18();
}

uint64_t sub_1DA4F78C8()
{
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  return swift_release();
}

uint64_t sub_1DA4F7914(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  v2 = sub_1DA66C358();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE24();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  swift_release();
  return swift_release();
}

uint64_t FollowRSSFeedAppIntent.feedURL.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1DA66C358();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_1DA66BE24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*FollowRSSFeedAppIntent.feedURL.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

void sub_1DA4F7AE4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t FollowRSSFeedAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;

  v21 = a1;
  v20 = sub_1DA66C004();
  v1 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66C220();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v22 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v15 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269340);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v16 = sub_1DA66C358();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
  v17 = sub_1DA66BD58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0C91738], v20);
  result = sub_1DA66BE48();
  v19 = v21;
  *v21 = v15;
  v19[1] = result;
  return result;
}

unint64_t sub_1DA4F7DB0()
{
  unint64_t result;

  result = qword_1F0269338;
  if (!qword_1F0269338)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7E100], MEMORY[0x1E0D7E0F8]);
    atomic_store(result, (unint64_t *)&qword_1F0269338);
  }
  return result;
}

uint64_t FollowRSSFeedAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269350);
  *(_QWORD *)(v2 + 24) = swift_task_alloc();
  v3 = type metadata accessor for ShowEntity();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_QWORD *)(v2 + 56) = type metadata accessor for FollowFeedIntent();
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  *(_OWORD *)(v2 + 72) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA4F7EA4()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  char *v8;

  v2 = (int *)v0[7];
  v1 = v0[8];
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  v3 = sub_1DA66C358();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 0, 1, v3);
  v4 = v1 + v2[5];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = (_QWORD *)(v1 + v2[6]);
  *v5 = 0;
  v5[1] = 0;
  *(_BYTE *)(v1 + v2[7]) = 0;
  v8 = (char *)&dword_1F0269358 + dword_1F0269358;
  v6 = (_QWORD *)swift_task_alloc();
  v0[11] = v6;
  *v6 = v0;
  v6[1] = sub_1DA4F7F90;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v8)(v0[8], v0[9], v0[10]);
}

uint64_t sub_1DA4F7F90(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 64);
  *(_QWORD *)(v5 + 96) = a1;
  *(_QWORD *)(v5 + 104) = a2;
  *(_BYTE *)(v5 + 152) = a3;
  *(_QWORD *)(v5 + 112) = v3;
  swift_task_dealloc();
  sub_1DA47F880(v6, (uint64_t (*)(_QWORD))type metadata accessor for FollowFeedIntent);
  return swift_task_switch();
}

uint64_t sub_1DA4F8018()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 112);
  sub_1DA66FBEC();
  v2 = *(_BYTE *)(v0 + 152);
  v4 = *(void **)(v0 + 96);
  v3 = *(void **)(v0 + 104);
  if (v1)
  {
    sub_1DA4FAB18(*(void **)(v0 + 96), *(id *)(v0 + 104), *(_BYTE *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269360);
    v6 = swift_allocObject();
    *(_QWORD *)(v0 + 120) = v6;
    *(_OWORD *)(v6 + 16) = xmmword_1DA678510;
    *(_QWORD *)(v6 + 32) = v4;
    *(_QWORD *)(v6 + 40) = v3;
    *(_BYTE *)(v6 + 48) = v2;
    sub_1DA4FAB3C(v4, v3, v2);
    v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F0269368 + dword_1F0269368);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v7;
    *v7 = v0;
    v7[1] = sub_1DA4F8130;
    return v8(v6, *(_QWORD *)(v0 + 72));
  }
}

uint64_t sub_1DA4F8130(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 136) = a1;
  *(_QWORD *)(v3 + 144) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA4F81A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char v9;
  _BYTE *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(v0 + 136);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 40) + 80);
    sub_1DA4E6FEC(v1 + ((v2 + 32) & ~v2), *(_QWORD *)(v0 + 24));
    v3 = 0;
  }
  else
  {
    v3 = 1;
  }
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, v3, 1, v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    v7 = *(void **)(v0 + 96);
    v8 = *(void **)(v0 + 104);
    v9 = *(_BYTE *)(v0 + 152);
    sub_1DA4FAB60(*(_QWORD *)(v0 + 24));
    sub_1DA4FABA0();
    swift_allocError();
    *v10 = 1;
    swift_willThrow();
    sub_1DA4FAB18(v7, v8, v9);
  }
  else
  {
    v11 = *(void **)(v0 + 96);
    v12 = *(void **)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 48);
    v14 = *(_BYTE *)(v0 + 152);
    sub_1DA4E7038(*(_QWORD *)(v0 + 24), v13);
    sub_1DA47E32C(&qword_1EDAE3B00, (uint64_t (*)(uint64_t))type metadata accessor for ShowEntity, (uint64_t)&protocol conformance descriptor for ShowEntity);
    sub_1DA66BD64();
    sub_1DA4FAB18(v11, v12, v14);
    sub_1DA47F880(v13, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4F8370()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4F83C4()
{
  uint64_t v0;

  sub_1DA4FAB18(*(void **)(v0 + 96), *(id *)(v0 + 104), *(_BYTE *)(v0 + 152));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4F8424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return swift_task_switch();
}

uint64_t sub_1DA4F843C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[14] = v0[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F84C4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F84C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F8530()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[17] = v0[11];
  v1 = (_QWORD *)swift_task_alloc();
  v0[18] = v1;
  type metadata accessor for FollowFeedIntent();
  sub_1DA47E32C(&qword_1F0269440, (uint64_t (*)(uint64_t))type metadata accessor for FollowFeedIntent, (uint64_t)&protocol conformance descriptor for FollowFeedIntent);
  *v1 = v0;
  v1[1] = sub_1DA4F860C;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F860C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F8678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a2;
  *(_QWORD *)(v2 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4F8694()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F871C;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F871C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F8788()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[10];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  sub_1DA4FAF28();
  *v1 = v0;
  v1[1] = sub_1DA4F8848;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F8848()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F88B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4F88D0()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F8958;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F8958()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F89C4()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[8];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for PlayEpisodeIntent();
  sub_1DA47E32C(qword_1F0269498, (uint64_t (*)(uint64_t))type metadata accessor for PlayEpisodeIntent, (uint64_t)&protocol conformance descriptor for PlayEpisodeIntent);
  *v1 = v0;
  v1[1] = sub_1DA4F8A90;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F8A90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F8AFC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4F8B30()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4F8B64()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4F8BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4F8BC0()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F8C48;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F8C48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F8CB4()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[8];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for OpenTranscriptIntent();
  sub_1DA47E32C(&qword_1F0269488, (uint64_t (*)(uint64_t))type metadata accessor for OpenTranscriptIntent, (uint64_t)&protocol conformance descriptor for OpenTranscriptIntent);
  *v1 = v0;
  v1[1] = sub_1DA4F8D80;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F8D80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F8DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4F8E08()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F8E90;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F8E90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F8EFC()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[8];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for UpdateEpisodePlayStateIntent();
  sub_1DA47E32C(&qword_1F0269460, (uint64_t (*)(uint64_t))type metadata accessor for UpdateEpisodePlayStateIntent, (uint64_t)&protocol conformance descriptor for UpdateEpisodePlayStateIntent);
  *v1 = v0;
  v1[1] = sub_1DA4F8D80;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F8FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a1;
  v3[11] = a3;
  v3[7] = a2;
  return swift_task_switch();
}

uint64_t sub_1DA4F8FE4()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F906C;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F906C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F90D8()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[9];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  sub_1DA4FAF6C();
  *v1 = v0;
  v1[1] = sub_1DA4F8D80;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F918C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4F91A8()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F9230;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F9230()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F929C()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[8];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for PlayStationIntent();
  sub_1DA47E32C(&qword_1F0269450, (uint64_t (*)(uint64_t))type metadata accessor for PlayStationIntent, (uint64_t)&protocol conformance descriptor for PlayStationIntent);
  *v1 = v0;
  v1[1] = sub_1DA4F8D80;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F9368(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return swift_task_switch();
}

uint64_t sub_1DA4F9380()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[14] = v0[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F9408;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F9408()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F9474()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[17] = v0[11];
  v1 = (_QWORD *)swift_task_alloc();
  v0[18] = v1;
  type metadata accessor for FollowFeedIntent();
  sub_1DA47E32C(&qword_1F0269440, (uint64_t (*)(uint64_t))type metadata accessor for FollowFeedIntent, (uint64_t)&protocol conformance descriptor for FollowFeedIntent);
  *v1 = v0;
  v1[1] = sub_1DA4F9550;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F9550()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F95BC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4F95F0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_1DA4F962C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4F966C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a2;
  *(_QWORD *)(v2 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4F9688()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F9710;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F9710()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F977C()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[10];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  sub_1DA4FAF28();
  *v1 = v0;
  v1[1] = sub_1DA4F983C;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F983C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F98A8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 56));
}

uint64_t sub_1DA4F98E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a1;
  v3[11] = a3;
  v3[7] = a2;
  return swift_task_switch();
}

uint64_t sub_1DA4F98FC()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F9984;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F9984()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F99F0()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[9];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  sub_1DA4FAEE4();
  *v1 = v0;
  v1[1] = sub_1DA4F8A90;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F9AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4F9AC0()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F9B48;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F9B48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F9BB4()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[8];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for EnqueueMediaItemForPlaybackIntent();
  sub_1DA47E32C(&qword_1F0269408, (uint64_t (*)(uint64_t))type metadata accessor for EnqueueMediaItemForPlaybackIntent, (uint64_t)&protocol conformance descriptor for EnqueueMediaItemForPlaybackIntent);
  *v1 = v0;
  v1[1] = sub_1DA4F8D80;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F9C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a1;
  v3[11] = a3;
  v3[7] = a2;
  return swift_task_switch();
}

uint64_t sub_1DA4F9C9C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F9D24;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F9D24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F9D90()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[9];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  sub_1DA4FAEA0();
  *v1 = v0;
  v1[1] = sub_1DA4F8D80;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4F9E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA4F9E60()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4F9EE8;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4F9EE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4F9F54()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[8];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for UnfollowShowIntent();
  sub_1DA47E32C(&qword_1F02693F0, (uint64_t (*)(uint64_t))type metadata accessor for UnfollowShowIntent, (uint64_t)&protocol conformance descriptor for UnfollowShowIntent);
  *v1 = v0;
  v1[1] = sub_1DA4F8D80;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4FA020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a1;
  v3[11] = a3;
  v3[7] = a2;
  return swift_task_switch();
}

uint64_t sub_1DA4FA03C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4FA0C4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4FA0C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4FA130()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[9];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  sub_1DA4EE3BC();
  *v1 = v0;
  v1[1] = sub_1DA4F8D80;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4FA1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = a1;
  *(_QWORD *)(v4 + 88) = a4;
  return swift_task_switch();
}

uint64_t sub_1DA4FA1FC()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[12] = v0[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4FA284;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4FA284()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4FA2F0()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[15] = v0[9];
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for FetchShowLatestEpisodesIntent();
  sub_1DA47E32C(&qword_1F02693D8, (uint64_t (*)(uint64_t))type metadata accessor for FetchShowLatestEpisodesIntent, (uint64_t)&protocol conformance descriptor for FetchShowLatestEpisodesIntent);
  *v1 = v0;
  v1[1] = sub_1DA4F983C;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4FA3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return swift_task_switch();
}

uint64_t sub_1DA4FA3E4()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[11] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4FA46C;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4FA46C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4FA4D8()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[14] = v0[8];
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  sub_1DA4FAE5C();
  *v1 = v0;
  v1[1] = sub_1DA4FA584;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4FA584()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4FA5F0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4FA624()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA4FA664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return swift_task_switch();
}

uint64_t sub_1DA4FA67C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BC98();
  v0[11] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = v1;
  *v1 = v0;
  v1[1] = sub_1DA4FA704;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA4FA704()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4FA770()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1DA66BC98();
  v0[14] = v0[8];
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  sub_1DA4FAE18();
  *v1 = v0;
  v1[1] = sub_1DA4FA81C;
  return sub_1DA66EE90();
}

uint64_t sub_1DA4FA81C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA4FA888@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268418 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F02692E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA4FA900()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269310);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269318);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269328);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA4FAA6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return FollowRSSFeedAppIntent.perform()(a1);
}

uint64_t sub_1DA4FAAC0()
{
  sub_1DA4F7658();
  return sub_1DA66BD1C();
}

uint64_t sub_1DA4FAAE8()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

void sub_1DA4FAB18(void *a1, id a2, char a3)
{
  if (a3 == 2)
  {

  }
  else if (a3 == 1)
  {
    swift_bridgeObjectRelease();
  }
}

id sub_1DA4FAB3C(id result, id a2, char a3)
{
  if (a3 == 2)
    return result;
  if (a3 == 1)
    return (id)swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1DA4FAB60(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269350);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA4FABA0()
{
  unint64_t result;

  result = qword_1F0269370;
  if (!qword_1F0269370)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for IntentFeedSubscriptionError, &type metadata for IntentFeedSubscriptionError);
    atomic_store(result, (unint64_t *)&qword_1F0269370);
  }
  return result;
}

unint64_t sub_1DA4FABE8()
{
  unint64_t result;

  result = qword_1F0269378;
  if (!qword_1F0269378)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FollowRSSFeedAppIntent, &type metadata for FollowRSSFeedAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269378);
  }
  return result;
}

unint64_t sub_1DA4FAC30()
{
  unint64_t result;

  result = qword_1F0269380;
  if (!qword_1F0269380)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FollowRSSFeedAppIntent, &type metadata for FollowRSSFeedAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269380);
  }
  return result;
}

uint64_t sub_1DA4FAC74()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1DA4FAC98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for FollowRSSFeedAppIntent()
{
  swift_release();
  return swift_release();
}

_QWORD *_s10PodcastsUI22FollowRSSFeedAppIntentVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1DA66BE60();
  sub_1DA66BE60();
  return a1;
}

_QWORD *assignWithCopy for FollowRSSFeedAppIntent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1DA66BE60();
  swift_release();
  a1[1] = a2[1];
  sub_1DA66BE60();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FollowRSSFeedAppIntent(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FollowRSSFeedAppIntent()
{
  return &type metadata for FollowRSSFeedAppIntent;
}

uint64_t sub_1DA4FADC0()
{
  return sub_1DA4841D4(&qword_1F0269390, &qword_1F0269398, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1DA4FADEC()
{
  return sub_1DA4841D4(&qword_1F02693A0, &qword_1F02693A8, MEMORY[0x1E0C915A0]);
}

unint64_t sub_1DA4FAE18()
{
  unint64_t result;

  result = qword_1F02693B8;
  if (!qword_1F02693B8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayPreviousChapterIntent, &type metadata for PlayPreviousChapterIntent);
    atomic_store(result, (unint64_t *)&qword_1F02693B8);
  }
  return result;
}

unint64_t sub_1DA4FAE5C()
{
  unint64_t result;

  result = qword_1F02693C8;
  if (!qword_1F02693C8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayNextChapterIntent, &type metadata for PlayNextChapterIntent);
    atomic_store(result, (unint64_t *)&qword_1F02693C8);
  }
  return result;
}

unint64_t sub_1DA4FAEA0()
{
  unint64_t result;

  result = qword_1EDAE3D20;
  if (!qword_1EDAE3D20)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for DownloadEpisodesIntent, &type metadata for DownloadEpisodesIntent);
    atomic_store(result, (unint64_t *)&qword_1EDAE3D20);
  }
  return result;
}

unint64_t sub_1DA4FAEE4()
{
  unint64_t result;

  result = qword_1F0269420;
  if (!qword_1F0269420)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for BookmarkEpisodeIntent, &type metadata for BookmarkEpisodeIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269420);
  }
  return result;
}

unint64_t sub_1DA4FAF28()
{
  unint64_t result;

  result = qword_1F0269430;
  if (!qword_1F0269430)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FetchShowEntitiesIntent, &type metadata for FetchShowEntitiesIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269430);
  }
  return result;
}

unint64_t sub_1DA4FAF6C()
{
  unint64_t result;

  result = qword_1F0269470;
  if (!qword_1F0269470)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UnbookmarkEpisodeIntent, &type metadata for UnbookmarkEpisodeIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269470);
  }
  return result;
}

unint64_t static OpenTranscriptIntent.kind.getter()
{
  return 0xD000000000000014;
}

uint64_t OpenTranscriptIntent.episode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4F23B0(v1, a1);
}

void sub_1DA4FAFFC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x80000001DA678EF0;
}

uint64_t getEnumTagSinglePayload for OpenTranscriptIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA4FB028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OpenTranscriptIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA4FB070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for OpenTranscriptIntent()
{
  uint64_t result;

  result = qword_1EDAE3CF0;
  if (!qword_1EDAE3CF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA4FB0EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v2 = sub_1DA66BE6C();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696F0);
  v5 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696F8);
  MEMORY[0x1E0C80A78](v8);
  sub_1DA504F0C();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v31 = sub_1DA505384();
  v33 = a1;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v30 = sub_1DA66BE84();
  v32 = *(void (**)(char *, uint64_t))(v5 + 8);
  v32(v7, v34);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v10 = v28;
  v9 = v29;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v4, *MEMORY[0x1E0C90F68], v29);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v29 = sub_1DA66BE84();
  v11 = v34;
  v12 = v32;
  v32(v7, v34);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v28 = sub_1DA66BE84();
  v12(v7, v11);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v27 = sub_1DA66BE84();
  v13 = v34;
  v32(v7, v34);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  v25 = 0xD000000000000018;
  sub_1DA66BF08();
  sub_1DA66BF20();
  v26 = sub_1DA66BE84();
  v14 = v32;
  v32(v7, v13);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v24 = sub_1DA66BE84();
  v15 = v34;
  v14(v7, v34);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v16 = sub_1DA66BE84();
  v14(v7, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269700);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DA678F90;
  v18 = v29;
  *(_QWORD *)(v17 + 32) = v30;
  *(_QWORD *)(v17 + 40) = v18;
  v19 = v27;
  *(_QWORD *)(v17 + 48) = v28;
  *(_QWORD *)(v17 + 56) = v19;
  v20 = v24;
  *(_QWORD *)(v17 + 64) = v26;
  *(_QWORD *)(v17 + 72) = v20;
  *(_QWORD *)(v17 + 80) = v16;
  v21 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1DA4FB874(uint64_t a1)
{
  return sub_1DA4FF0EC(a1, (uint64_t)&unk_1DA6792C0, (void (*)(uint64_t))sub_1DA504F0C);
}

uint64_t sub_1DA4FB890()
{
  return sub_1DA5001E0();
}

uint64_t sub_1DA4FB8BC(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696D8);
  v16 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696E0);
  MEMORY[0x1E0C80A78](v4);
  sub_1DA504F50();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v13[1] = sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  v19 = a1;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v17 = sub_1DA66BE84();
  v14 = *(void (**)(char *, uint64_t))(v16 + 8);
  v5 = v18;
  v14(v3, v18);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v16 = sub_1DA66BE84();
  v6 = v14;
  v14(v3, v5);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v15 = sub_1DA66BE84();
  v7 = v18;
  v6(v3, v18);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v8 = sub_1DA66BE84();
  v6(v3, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696E8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DA678FA0;
  v10 = v16;
  *(_QWORD *)(v9 + 32) = v17;
  *(_QWORD *)(v9 + 40) = v10;
  *(_QWORD *)(v9 + 48) = v15;
  *(_QWORD *)(v9 + 56) = v8;
  v11 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1DA4FBD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA504F50();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA4FBE90()
{
  return sub_1DA5001E0();
}

uint64_t sub_1DA4FBEBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;

  v36 = a1;
  v1 = sub_1DA66BE6C();
  v30 = *(_QWORD *)(v1 - 8);
  v31 = v1;
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696C0);
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696C8);
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1DA504F94();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v37 = sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v33 = sub_1DA66BE84();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9 = v34;
  v8(v5, v34);
  v35 = v8;
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v32 = sub_1DA66BE84();
  v8(v5, v9);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v26 = v7;
  v28 = sub_1DA66BE84();
  v10 = v34;
  v35(v5, v34);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v27 = sub_1DA66BE84();
  v11 = v35;
  v35(v5, v10);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v12 = v29;
  v13 = v30;
  v14 = v31;
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v29, *MEMORY[0x1E0C90F68], v31);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v14);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v31 = sub_1DA66BE84();
  v15 = v34;
  v11(v5, v34);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v30 = sub_1DA66BE84();
  v16 = v15;
  v17 = v15;
  v18 = v35;
  v35(v5, v16);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v19 = sub_1DA66BE84();
  v18(v5, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696D0);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1DA678F90;
  v21 = v32;
  *(_QWORD *)(v20 + 32) = v33;
  *(_QWORD *)(v20 + 40) = v21;
  v22 = v27;
  *(_QWORD *)(v20 + 48) = v28;
  *(_QWORD *)(v20 + 56) = v22;
  v23 = v30;
  *(_QWORD *)(v20 + 64) = v31;
  *(_QWORD *)(v20 + 72) = v23;
  *(_QWORD *)(v20 + 80) = v19;
  v24 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1DA4FC68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA504F94();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA4FC7B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;

  v40 = a1;
  v1 = sub_1DA66BE6C();
  v35 = *(_QWORD *)(v1 - 8);
  v36 = v1;
  MEMORY[0x1E0C80A78](v1);
  v34 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696A8);
  v3 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696B0);
  MEMORY[0x1E0C80A78](v6);
  sub_1DA504FD8();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v39 = sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v38 = sub_1DA66BE84();
  v7 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8 = v42;
  v7(v5, v42);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v37 = sub_1DA66BE84();
  v7(v5, v8);
  v41 = v7;
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v33 = sub_1DA66BE84();
  v7(v5, v42);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v32 = sub_1DA66BE84();
  v9 = v42;
  v41(v5, v42);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v31 = sub_1DA66BE84();
  v10 = v9;
  v11 = v9;
  v12 = v41;
  v41(v5, v10);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v30 = sub_1DA66BE84();
  v12(v5, v11);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v29 = sub_1DA66BE84();
  v41(v5, v42);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v13 = *MEMORY[0x1E0C90F68];
  v14 = v34;
  v15 = v35;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 104);
  v17 = v36;
  v16(v34, v13, v36);
  sub_1DA66BEF0();
  v18 = *(void (**)(char *, uint64_t))(v15 + 8);
  v18(v14, v17);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v35 = sub_1DA66BE84();
  v41(v5, v42);
  sub_1DA66BF14();
  sub_1DA66BF08();
  v16(v14, v13, v17);
  sub_1DA66BEF0();
  v18(v14, v17);
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v36 = sub_1DA66BE84();
  v19 = v41;
  v20 = v42;
  v41(v5, v42);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v21 = sub_1DA66BE84();
  v19(v5, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696B8);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DA678FB0;
  v23 = v37;
  *(_QWORD *)(v22 + 32) = v38;
  *(_QWORD *)(v22 + 40) = v23;
  v24 = v32;
  *(_QWORD *)(v22 + 48) = v33;
  *(_QWORD *)(v22 + 56) = v24;
  v25 = v30;
  *(_QWORD *)(v22 + 64) = v31;
  *(_QWORD *)(v22 + 72) = v25;
  v26 = v35;
  *(_QWORD *)(v22 + 80) = v29;
  *(_QWORD *)(v22 + 88) = v26;
  *(_QWORD *)(v22 + 96) = v36;
  *(_QWORD *)(v22 + 104) = v21;
  v27 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1DA4FD1F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA504FD8();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA4FD31C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;

  v38 = a1;
  v1 = sub_1DA66BE6C();
  v33 = *(_QWORD *)(v1 - 8);
  v34 = v1;
  MEMORY[0x1E0C80A78](v1);
  v32 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269690);
  v3 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269698);
  MEMORY[0x1E0C80A78](v6);
  sub_1DA50501C();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v7 = sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  v27 = 0x80000001DA68B380;
  v28 = 0xD00000000000001ALL;
  sub_1DA66BF08();
  sub_1DA66BF20();
  v35 = sub_1DA66BE84();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9 = v36;
  v8(v5, v36);
  v37 = v8;
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v31 = sub_1DA66BE84();
  v8(v5, v9);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v26[1] = v7;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v30 = sub_1DA66BE84();
  v10 = v36;
  v37(v5, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v29 = sub_1DA66BE84();
  v11 = v10;
  v12 = v10;
  v13 = v37;
  v37(v5, v12);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v28 = sub_1DA66BE84();
  v13(v5, v11);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v27 = sub_1DA66BE84();
  v37(v5, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v14 = v32;
  v15 = v33;
  v16 = v34;
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v32, *MEMORY[0x1E0C90F68], v34);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v14, v16);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v34 = sub_1DA66BE84();
  v18 = v36;
  v17 = v37;
  v37(v5, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v19 = sub_1DA66BE84();
  v17(v5, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02696A0);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1DA678FC0;
  v21 = v31;
  *(_QWORD *)(v20 + 32) = v35;
  *(_QWORD *)(v20 + 40) = v21;
  v22 = v29;
  *(_QWORD *)(v20 + 48) = v30;
  *(_QWORD *)(v20 + 56) = v22;
  v23 = v27;
  *(_QWORD *)(v20 + 64) = v28;
  *(_QWORD *)(v20 + 72) = v23;
  *(_QWORD *)(v20 + 80) = v34;
  *(_QWORD *)(v20 + 88) = v19;
  v24 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1DA4FDB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA50501C();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA4FDCAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;

  v43 = a1;
  v1 = sub_1DA66BE6C();
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  MEMORY[0x1E0C80A78](v1);
  v37 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269678);
  v3 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269680);
  MEMORY[0x1E0C80A78](v6);
  sub_1DA505060();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v7 = sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v36 = sub_1DA66BE84();
  v42 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8 = v41;
  v42(v5, v41);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v40 = v7;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v35 = sub_1DA66BE84();
  v42(v5, v8);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  v30 = 0x80000001DA68B330;
  sub_1DA66BF08();
  sub_1DA66BF20();
  v34 = sub_1DA66BE84();
  v9 = v42;
  v42(v5, v8);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v33 = sub_1DA66BE84();
  v10 = v5;
  v11 = v5;
  v12 = v41;
  v9(v10, v41);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v32 = sub_1DA66BE84();
  v9(v11, v12);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v31 = sub_1DA66BE84();
  v14 = v41;
  v13 = v42;
  v42(v11, v41);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v30 = sub_1DA66BE84();
  v13(v11, v14);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v29 = sub_1DA66BE84();
  v15 = v41;
  v42(v11, v41);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v28 = sub_1DA66BE84();
  v16 = v42;
  v42(v11, v15);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v18 = v37;
  v17 = v38;
  v19 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v37, *MEMORY[0x1E0C90F68], v39);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v19);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v20 = sub_1DA66BE84();
  v16(v11, v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269688);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1DA678FB0;
  v22 = v35;
  *(_QWORD *)(v21 + 32) = v36;
  *(_QWORD *)(v21 + 40) = v22;
  v23 = v33;
  *(_QWORD *)(v21 + 48) = v34;
  *(_QWORD *)(v21 + 56) = v23;
  v24 = v31;
  *(_QWORD *)(v21 + 64) = v32;
  *(_QWORD *)(v21 + 72) = v24;
  v25 = v29;
  *(_QWORD *)(v21 + 80) = v30;
  *(_QWORD *)(v21 + 88) = v25;
  *(_QWORD *)(v21 + 96) = v28;
  *(_QWORD *)(v21 + 104) = v20;
  v26 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1DA4FE700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA505060();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA4FE828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);

  v34 = a1;
  v1 = sub_1DA66BE6C();
  v28 = *(_QWORD *)(v1 - 8);
  v29 = v1;
  MEMORY[0x1E0C80A78](v1);
  v27 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269660);
  v3 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269668);
  MEMORY[0x1E0C80A78](v6);
  sub_1DA5050A4();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v35 = sub_1DA505384();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v32 = sub_1DA66BE84();
  v7 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8 = v33;
  v7(v5, v33);
  v36 = v7;
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  v26 = 0x80000001DA68B250;
  sub_1DA66BF08();
  sub_1DA66BF20();
  v31 = sub_1DA66BE84();
  v7(v5, v8);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v30 = sub_1DA66BE84();
  v36(v5, v8);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v10 = v27;
  v9 = v28;
  v11 = v29;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v27, *MEMORY[0x1E0C90F68], v29);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v11);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v29 = sub_1DA66BE84();
  v12 = v33;
  v13 = v36;
  v36(v5, v33);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v28 = sub_1DA66BE84();
  v13(v5, v12);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v27 = (char *)sub_1DA66BE84();
  v14 = v33;
  v36(v5, v33);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v26 = sub_1DA66BE84();
  v15 = v14;
  v16 = v14;
  v17 = v36;
  v36(v5, v15);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v18 = sub_1DA66BE84();
  v17(v5, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269670);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1DA678FC0;
  v20 = v31;
  *(_QWORD *)(v19 + 32) = v32;
  *(_QWORD *)(v19 + 40) = v20;
  v21 = v29;
  *(_QWORD *)(v19 + 48) = v30;
  *(_QWORD *)(v19 + 56) = v21;
  v22 = v27;
  *(_QWORD *)(v19 + 64) = v28;
  *(_QWORD *)(v19 + 72) = v22;
  *(_QWORD *)(v19 + 80) = v26;
  *(_QWORD *)(v19 + 88) = v18;
  v23 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1DA4FF0D0(uint64_t a1)
{
  return sub_1DA4FF0EC(a1, (uint64_t)&unk_1DA6791D0, (void (*)(uint64_t))sub_1DA5050A4);
}

uint64_t sub_1DA4FF0EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_1DA66BED8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA505384();
  sub_1DA66BE60();
  v8 = swift_release();
  a3(v8);
  sub_1DA66BECC();
  v9 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v10 + 32) = v9;
  v11 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1DA4FF20C()
{
  return sub_1DA5001E0();
}

uint64_t sub_1DA4FF238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);

  v31 = a1;
  v1 = sub_1DA66BE6C();
  v27 = *(_QWORD *)(v1 - 8);
  v28 = v1;
  MEMORY[0x1E0C80A78](v1);
  v26 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269648);
  v3 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269650);
  MEMORY[0x1E0C80A78](v6);
  sub_1DA5050E8();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v29 = sub_1DA505384();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v25 = sub_1DA66BE84();
  v7 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8 = v30;
  v7(v5, v30);
  v32 = v7;
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v24 = sub_1DA66BE84();
  v7(v5, v8);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v23 = sub_1DA66BE84();
  v9 = v30;
  v32(v5, v30);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v22 = sub_1DA66BE84();
  v10 = v32;
  v32(v5, v9);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v21 = sub_1DA66BE84();
  v11 = v30;
  v10(v5, v30);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v13 = v26;
  v12 = v27;
  v14 = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v26, *MEMORY[0x1E0C90F68], v28);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v14);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v15 = sub_1DA66BE84();
  v32(v5, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269658);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DA678FD0;
  v17 = v24;
  *(_QWORD *)(v16 + 32) = v25;
  *(_QWORD *)(v16 + 40) = v17;
  v18 = v22;
  *(_QWORD *)(v16 + 48) = v23;
  *(_QWORD *)(v16 + 56) = v18;
  *(_QWORD *)(v16 + 64) = v21;
  *(_QWORD *)(v16 + 72) = v15;
  v19 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1DA4FF8FC(uint64_t a1)
{
  return sub_1DA4FF0EC(a1, (uint64_t)&unk_1DA6791A8, (void (*)(uint64_t))sub_1DA5050E8);
}

uint64_t sub_1DA4FF918(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);

  v2 = sub_1DA66BE6C();
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x1E0C80A78](v2);
  v31 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269630);
  v4 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269638);
  MEMORY[0x1E0C80A78](v7);
  sub_1DA50512C();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v35 = sub_1DA505384();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v30 = sub_1DA66BE84();
  v37 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8 = v36;
  v37(v6, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v34 = a1;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v29 = sub_1DA66BE84();
  v9 = v37;
  v37(v6, v8);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  v26 = 0x80000001DA68B160;
  sub_1DA66BF08();
  sub_1DA66BF20();
  v28 = sub_1DA66BE84();
  v10 = v36;
  v9(v6, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v27 = sub_1DA66BE84();
  v37(v6, v10);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v26 = sub_1DA66BE84();
  v11 = v36;
  v12 = v37;
  v37(v6, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v25 = sub_1DA66BE84();
  v12(v6, v11);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v24 = sub_1DA66BE84();
  v13 = v36;
  v12(v6, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v15 = v31;
  v14 = v32;
  v16 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E0C90F68], v33);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v17 = sub_1DA66BE84();
  v37(v6, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269640);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1DA678FC0;
  v19 = v29;
  *(_QWORD *)(v18 + 32) = v30;
  *(_QWORD *)(v18 + 40) = v19;
  v20 = v27;
  *(_QWORD *)(v18 + 48) = v28;
  *(_QWORD *)(v18 + 56) = v20;
  v21 = v25;
  *(_QWORD *)(v18 + 64) = v26;
  *(_QWORD *)(v18 + 72) = v21;
  *(_QWORD *)(v18 + 80) = v24;
  *(_QWORD *)(v18 + 88) = v17;
  v22 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1DA5001C4(uint64_t a1)
{
  return sub_1DA4FF0EC(a1, (uint64_t)&unk_1DA679180, (void (*)(uint64_t))sub_1DA50512C);
}

uint64_t sub_1DA5001E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1DA66BE9C();
  v1 = sub_1DA66BE9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269560);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DA678FE0;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = sub_1DA66BE90();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DA50026C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void (*v4)(char *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269610);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA505170();
  sub_1DA66BEE4();
  v14 = sub_1DA66BE84();
  v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  sub_1DA66BEE4();
  v5 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v6 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v7 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v8 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v9 = sub_1DA66BE84();
  v4(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269618);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DA678FD0;
  *(_QWORD *)(v10 + 32) = v14;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v6;
  *(_QWORD *)(v10 + 56) = v7;
  *(_QWORD *)(v10 + 64) = v8;
  *(_QWORD *)(v10 + 72) = v9;
  v11 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1DA500504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void (*v4)(char *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269600);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA5051B4();
  sub_1DA66BEE4();
  v20 = sub_1DA66BE84();
  v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  sub_1DA66BEE4();
  v19 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v18 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v17 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v16 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v5 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v6 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v7 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v8 = sub_1DA66BE84();
  v4(v3, v0);
  sub_1DA66BEE4();
  v9 = sub_1DA66BE84();
  v4(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269608);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DA678FB0;
  v11 = v19;
  *(_QWORD *)(v10 + 32) = v20;
  *(_QWORD *)(v10 + 40) = v11;
  v12 = v17;
  *(_QWORD *)(v10 + 48) = v18;
  *(_QWORD *)(v10 + 56) = v12;
  *(_QWORD *)(v10 + 64) = v16;
  *(_QWORD *)(v10 + 72) = v5;
  *(_QWORD *)(v10 + 80) = v6;
  *(_QWORD *)(v10 + 88) = v7;
  *(_QWORD *)(v10 + 96) = v8;
  *(_QWORD *)(v10 + 104) = v9;
  v13 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1DA5008C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a1;
  v1 = sub_1DA66BE6C();
  v37 = *(_QWORD *)(v1 - 8);
  v38 = v1;
  MEMORY[0x1E0C80A78](v1);
  v36 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695E8);
  v3 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695F0);
  MEMORY[0x1E0C80A78](v6);
  sub_1DA5051F8();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v7 = sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v39 = sub_1DA66BE84();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9 = v43;
  v8(v5, v43);
  v40 = v8;
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v35 = sub_1DA66BE84();
  v8(v5, v9);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v41 = v7;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v34 = sub_1DA66BE84();
  v10 = v40;
  v40(v5, v43);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v33 = sub_1DA66BE84();
  v11 = v43;
  v10(v5, v43);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v32 = sub_1DA66BE84();
  v12 = v40;
  v40(v5, v11);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v31 = sub_1DA66BE84();
  v12(v5, v43);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v30 = sub_1DA66BE84();
  v13 = v43;
  v14 = v40;
  v40(v5, v43);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v29 = sub_1DA66BE84();
  v14(v5, v13);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v15 = v36;
  v16 = v37;
  v17 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E0C90F68], v38);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v17);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v38 = sub_1DA66BE84();
  v18 = v43;
  v19 = v40;
  v40(v5, v43);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v20 = sub_1DA66BE84();
  v19(v5, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695F8);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1DA678FB0;
  v22 = v35;
  *(_QWORD *)(v21 + 32) = v39;
  *(_QWORD *)(v21 + 40) = v22;
  v23 = v33;
  *(_QWORD *)(v21 + 48) = v34;
  *(_QWORD *)(v21 + 56) = v23;
  v24 = v31;
  *(_QWORD *)(v21 + 64) = v32;
  *(_QWORD *)(v21 + 72) = v24;
  v25 = v29;
  *(_QWORD *)(v21 + 80) = v30;
  *(_QWORD *)(v21 + 88) = v25;
  *(_QWORD *)(v21 + 96) = v38;
  *(_QWORD *)(v21 + 104) = v20;
  v26 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1DA501318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA5051F8();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA501440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1DA66BE9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269560);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v1 + 32) = v0;
  v2 = sub_1DA66BE90();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1DA5014B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v2 = sub_1DA66BE6C();
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x1E0C80A78](v2);
  v26 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695D0);
  v4 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695D8);
  MEMORY[0x1E0C80A78](v7);
  sub_1DA50523C();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v8 = sub_1DA47E32C(&qword_1EDAE3B00, (uint64_t (*)(uint64_t))type metadata accessor for ShowEntity, (uint64_t)&protocol conformance descriptor for ShowEntity);
  v34 = a1;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v31 = sub_1DA66BE84();
  v33 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9 = v36;
  v33(v6, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  v35 = 0x80000001DA68ADA0;
  sub_1DA66BF08();
  sub_1DA66BF20();
  v30 = sub_1DA66BE84();
  v10 = v33;
  v33(v6, v9);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v32 = v8;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v29 = sub_1DA66BE84();
  v10(v6, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v12 = v26;
  v11 = v27;
  v13 = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v26, *MEMORY[0x1E0C90F68], v28);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v13);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v28 = sub_1DA66BE84();
  v14 = v36;
  v15 = v33;
  v33(v6, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v27 = sub_1DA66BE84();
  v15(v6, v14);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v26 = (char *)sub_1DA66BE84();
  v16 = v36;
  v17 = v33;
  v33(v6, v36);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v18 = sub_1DA66BE84();
  v17(v6, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695E0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1DA678F90;
  v20 = v30;
  *(_QWORD *)(v19 + 32) = v31;
  *(_QWORD *)(v19 + 40) = v20;
  v21 = v28;
  *(_QWORD *)(v19 + 48) = v29;
  *(_QWORD *)(v19 + 56) = v21;
  v22 = v26;
  *(_QWORD *)(v19 + 64) = v27;
  *(_QWORD *)(v19 + 72) = v22;
  *(_QWORD *)(v19 + 80) = v18;
  v23 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1DA501C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1EDAE3B00, (uint64_t (*)(uint64_t))type metadata accessor for ShowEntity, (uint64_t)&protocol conformance descriptor for ShowEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA50523C();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA501D90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);

  v2 = sub_1DA66BE6C();
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x1E0C80A78](v2);
  v21 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695B8);
  v4 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695C0);
  MEMORY[0x1E0C80A78](v7);
  sub_1DA4F7658();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v19[1] = sub_1DA47E32C(&qword_1F02695B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0C91C38]);
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v24 = sub_1DA66BE84();
  v26 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8 = v25;
  v26(v6, v25);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v19[2] = a1;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v20 = sub_1DA66BE84();
  v26(v6, v8);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v10 = v21;
  v9 = v22;
  v11 = v23;
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v21, *MEMORY[0x1E0C90F68], v23);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v11);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v23 = sub_1DA66BE84();
  v12 = v25;
  v13 = v26;
  v26(v6, v25);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v14 = sub_1DA66BE84();
  v13(v6, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695C8);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DA678FA0;
  v16 = v20;
  *(_QWORD *)(v15 + 32) = v24;
  *(_QWORD *)(v15 + 40) = v16;
  *(_QWORD *)(v15 + 48) = v23;
  *(_QWORD *)(v15 + 56) = v14;
  v17 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1DA5022AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1F02695B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0C91C38]);
  sub_1DA66BE60();
  swift_release();
  sub_1DA4F7658();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA5023D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1DA66BE9C();
  v1 = sub_1DA66BE9C();
  v2 = sub_1DA66BE9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269560);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DA678FF0;
  *(_QWORD *)(v3 + 32) = v0;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)(v3 + 48) = v2;
  v4 = sub_1DA66BE90();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1DA502498(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v2 = sub_1DA66BE6C();
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x1E0C80A78](v2);
  v26 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269598);
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695A0);
  MEMORY[0x1E0C80A78](v7);
  sub_1DA505280();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v8 = sub_1DA47E32C(&qword_1EDAE3B00, (uint64_t (*)(uint64_t))type metadata accessor for ShowEntity, (uint64_t)&protocol conformance descriptor for ShowEntity);
  v30 = a1;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v29 = sub_1DA66BE84();
  v31 = *(void (**)(char *, uint64_t))(v4 + 8);
  v31(v6, v33);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v32 = v8;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v10 = v26;
  v9 = v27;
  v11 = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v26, *MEMORY[0x1E0C90F68], v28);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v11);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v28 = sub_1DA66BE84();
  v12 = v33;
  v13 = v31;
  v31(v6, v33);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v27 = sub_1DA66BE84();
  v13(v6, v12);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v26 = (char *)sub_1DA66BE84();
  v14 = v33;
  v15 = v31;
  v31(v6, v33);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v25 = sub_1DA66BE84();
  v15(v6, v14);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v24 = sub_1DA66BE84();
  v16 = v33;
  v15(v6, v33);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v17 = sub_1DA66BE84();
  v15(v6, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02695A8);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1DA678F90;
  v19 = v28;
  *(_QWORD *)(v18 + 32) = v29;
  *(_QWORD *)(v18 + 40) = v19;
  v20 = v26;
  *(_QWORD *)(v18 + 48) = v27;
  *(_QWORD *)(v18 + 56) = v20;
  v21 = v24;
  *(_QWORD *)(v18 + 64) = v25;
  *(_QWORD *)(v18 + 72) = v21;
  *(_QWORD *)(v18 + 80) = v17;
  v22 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1DA502C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1EDAE3B00, (uint64_t (*)(uint64_t))type metadata accessor for ShowEntity, (uint64_t)&protocol conformance descriptor for ShowEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA505280();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA502D74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;

  v2 = sub_1DA66BE6C();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  MEMORY[0x1E0C80A78](v2);
  v27 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269580);
  v4 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269588);
  MEMORY[0x1E0C80A78](v7);
  sub_1DA5052C4();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v34 = sub_1DA47E32C(&qword_1EDAE3B00, (uint64_t (*)(uint64_t))type metadata accessor for ShowEntity, (uint64_t)&protocol conformance descriptor for ShowEntity);
  v32 = a1;
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v30 = sub_1DA66BE84();
  v33 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8 = v31;
  v33(v6, v31);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v9 = v27;
  v10 = v28;
  v11 = v29;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v27, *MEMORY[0x1E0C90F68], v29);
  sub_1DA66BEF0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v11);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v29 = sub_1DA66BE84();
  v33(v6, v8);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  v25 = 0x80000001DA68ABE0;
  v26 = 0xD000000000000017;
  sub_1DA66BF08();
  sub_1DA66BF20();
  v28 = sub_1DA66BE84();
  v12 = v33;
  v33(v6, v8);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  v24 = 0x80000001DA68AC00;
  sub_1DA66BF08();
  sub_1DA66BF20();
  v27 = (char *)sub_1DA66BE84();
  v12(v6, v8);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v26 = sub_1DA66BE84();
  v13 = v31;
  v12(v6, v31);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v25 = sub_1DA66BE84();
  v14 = v33;
  v33(v6, v13);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v24 = sub_1DA66BE84();
  v15 = v31;
  v14(v6, v31);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v16 = sub_1DA66BE84();
  v14(v6, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269590);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DA678FC0;
  v18 = v29;
  *(_QWORD *)(v17 + 32) = v30;
  *(_QWORD *)(v17 + 40) = v18;
  v19 = v27;
  *(_QWORD *)(v17 + 48) = v28;
  *(_QWORD *)(v17 + 56) = v19;
  v20 = v25;
  *(_QWORD *)(v17 + 64) = v26;
  *(_QWORD *)(v17 + 72) = v20;
  *(_QWORD *)(v17 + 80) = v24;
  *(_QWORD *)(v17 + 88) = v16;
  v21 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1DA5035F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1EDAE3B00, (uint64_t (*)(uint64_t))type metadata accessor for ShowEntity, (uint64_t)&protocol conformance descriptor for ShowEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA5052C4();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA503718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1DA66BE9C();
  v1 = sub_1DA66BE9C();
  v2 = sub_1DA66BE9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269560);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DA678FF0;
  *(_QWORD *)(v3 + 32) = v0;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)(v3 + 48) = v2;
  v4 = sub_1DA66BE90();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1DA5037DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *);
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;

  v47 = a1;
  v44 = sub_1DA66BE6C();
  v36 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269568);
  v2 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269570);
  MEMORY[0x1E0C80A78](v5);
  sub_1DA505308();
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  v45 = sub_1DA47E32C(&qword_1F0269550, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v42 = sub_1DA66BE84();
  v6 = *(void (**)(char *, uint64_t))(v2 + 8);
  v7 = v48;
  v6(v4, v48);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v41 = sub_1DA66BE84();
  v6(v4, v7);
  v46 = v6;
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v40 = sub_1DA66BE84();
  v6(v4, v48);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v39 = sub_1DA66BE84();
  v8 = v48;
  v46(v4, v48);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v38 = sub_1DA66BE84();
  v9 = v8;
  v10 = v46;
  v46(v4, v9);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v37 = sub_1DA66BE84();
  v11 = v48;
  v10(v4, v48);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  LODWORD(v34) = *MEMORY[0x1E0C90F68];
  v12 = v36;
  v33 = *(void (**)(char *))(v36 + 104);
  v14 = v43;
  v13 = v44;
  v33(v43);
  sub_1DA66BEF0();
  v32 = *(void (**)(char *, uint64_t))(v12 + 8);
  v32(v14, v13);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v36 = sub_1DA66BE84();
  v15 = v46;
  v46(v4, v11);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v35 = sub_1DA66BE84();
  v15(v4, v48);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  v17 = v43;
  v16 = v44;
  ((void (*)(char *, _QWORD, uint64_t))v33)(v43, v34, v44);
  sub_1DA66BEF0();
  v32(v17, v16);
  sub_1DA66BF08();
  sub_1DA66BF20();
  v44 = sub_1DA66BE84();
  v18 = v46;
  v46(v4, v48);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v43 = (char *)sub_1DA66BE84();
  v18(v4, v48);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v34 = sub_1DA66BE84();
  v19 = v48;
  v20 = v46;
  v46(v4, v48);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v33 = (void (*)(char *))sub_1DA66BE84();
  v20(v4, v19);
  sub_1DA66BF14();
  sub_1DA66BF08();
  swift_getKeyPath();
  sub_1DA66BE60();
  swift_release();
  sub_1DA66BEFC();
  swift_release();
  sub_1DA66BF08();
  sub_1DA66BF20();
  v21 = sub_1DA66BE84();
  v20(v4, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269578);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DA679000;
  v23 = v41;
  *(_QWORD *)(v22 + 32) = v42;
  *(_QWORD *)(v22 + 40) = v23;
  v24 = v39;
  *(_QWORD *)(v22 + 48) = v40;
  *(_QWORD *)(v22 + 56) = v24;
  v25 = v37;
  *(_QWORD *)(v22 + 64) = v38;
  *(_QWORD *)(v22 + 72) = v25;
  v26 = v35;
  *(_QWORD *)(v22 + 80) = v36;
  *(_QWORD *)(v22 + 88) = v26;
  v27 = v43;
  *(_QWORD *)(v22 + 96) = v44;
  *(_QWORD *)(v22 + 104) = v27;
  v28 = v33;
  *(_QWORD *)(v22 + 112) = v34;
  *(_QWORD *)(v22 + 120) = v28;
  *(_QWORD *)(v22 + 128) = v21;
  v29 = sub_1DA66BE78();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1DA504528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DA66BED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1F0269550, (uint64_t (*)(uint64_t))type metadata accessor for StationEntity, (uint64_t)&protocol conformance descriptor for StationEntity);
  sub_1DA66BE60();
  swift_release();
  sub_1DA505308();
  sub_1DA66BECC();
  v4 = sub_1DA66BEC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269558);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1DA66BEB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA504650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1DA66BE9C();
  v1 = sub_1DA66BE9C();
  v2 = sub_1DA66BE9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269560);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DA678FF0;
  *(_QWORD *)(v3 + 32) = v0;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)(v3 + 48) = v2;
  v4 = sub_1DA66BE90();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1DA504700()
{
  qword_1F027BC70 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1DA50471C()
{
  if (qword_1F0268428 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for PodcastsAppIntentsProvider()
{
  return &type metadata for PodcastsAppIntentsProvider;
}

uint64_t sub_1DA50476C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void (*v4)(char *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v0 = sub_1DA66BF44();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DownloadEpisodesAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA504F0C();
  sub_1DA66BF50();
  v29 = sub_1DA66BF38();
  v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  MarkEpisodeAsPlayedAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA504F50();
  sub_1DA66BF50();
  v28 = sub_1DA66BF38();
  v4(v3, v0);
  MarkEpisodeAsUnplayedAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA504F94();
  sub_1DA66BF50();
  v27 = sub_1DA66BF38();
  v4(v3, v0);
  PlayEpisodeAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA504FD8();
  sub_1DA66BF50();
  v26 = sub_1DA66BF38();
  v4(v3, v0);
  PlayEpisodeLastAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA50501C();
  sub_1DA66BF50();
  v25 = sub_1DA66BF38();
  v4(v3, v0);
  PlayEpisodeNextAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA505060();
  sub_1DA66BF50();
  v24 = sub_1DA66BF38();
  v4(v3, v0);
  RemoveEpisodesDownloadAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA5050A4();
  sub_1DA66BF50();
  v23 = sub_1DA66BF38();
  v4(v3, v0);
  SaveEpisodeAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA5050E8();
  sub_1DA66BF50();
  v22 = sub_1DA66BF38();
  v4(v3, v0);
  UnsaveEpisodeAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA50512C();
  sub_1DA66BF50();
  v21 = sub_1DA66BF38();
  v4(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  LOBYTE(v30) = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  *(_QWORD *)&v32 = sub_1DA66BCBC();
  sub_1DA505170();
  sub_1DA66BF50();
  v20 = sub_1DA66BF38();
  v4(v3, v0);
  LOBYTE(v30) = 2;
  sub_1DA6703F0();
  sub_1DA66BCC8();
  *(_QWORD *)&v32 = sub_1DA66BCBC();
  sub_1DA5051B4();
  sub_1DA66BF50();
  v5 = sub_1DA66BF38();
  v4(v3, v0);
  ViewTranscriptAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA5051F8();
  sub_1DA66BF50();
  v6 = sub_1DA66BF38();
  v4(v3, v0);
  FetchShowLatestEpisodesAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  v31 = v33;
  sub_1DA50523C();
  sub_1DA66BF50();
  v7 = sub_1DA66BF38();
  v4(v3, v0);
  FollowRSSFeedAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA4F7658();
  sub_1DA66BF50();
  v8 = sub_1DA66BF38();
  v4(v3, v0);
  FollowShowAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA505280();
  sub_1DA66BF50();
  v9 = sub_1DA66BF38();
  v4(v3, v0);
  UnfollowShowAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA5052C4();
  sub_1DA66BF50();
  v10 = sub_1DA66BF38();
  v4(v3, v0);
  PlayStationAppIntent.init()((uint64_t *)&v32);
  v30 = v32;
  sub_1DA505308();
  sub_1DA66BF50();
  v11 = sub_1DA66BF38();
  v4(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269548);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DA679010;
  v13 = v28;
  *(_QWORD *)(v12 + 32) = v29;
  *(_QWORD *)(v12 + 40) = v13;
  v14 = v26;
  *(_QWORD *)(v12 + 48) = v27;
  *(_QWORD *)(v12 + 56) = v14;
  v15 = v24;
  *(_QWORD *)(v12 + 64) = v25;
  *(_QWORD *)(v12 + 72) = v15;
  v16 = v22;
  *(_QWORD *)(v12 + 80) = v23;
  *(_QWORD *)(v12 + 88) = v16;
  v17 = v20;
  *(_QWORD *)(v12 + 96) = v21;
  *(_QWORD *)(v12 + 104) = v17;
  *(_QWORD *)(v12 + 112) = v5;
  *(_QWORD *)(v12 + 120) = v6;
  *(_QWORD *)(v12 + 128) = v7;
  *(_QWORD *)(v12 + 136) = v8;
  *(_QWORD *)(v12 + 144) = v9;
  *(_QWORD *)(v12 + 152) = v10;
  *(_QWORD *)(v12 + 160) = v11;
  v18 = sub_1DA66BF2C();
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1DA504F0C()
{
  unint64_t result;

  result = qword_1F02694C8;
  if (!qword_1F02694C8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for DownloadEpisodesAppIntent, &type metadata for DownloadEpisodesAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02694C8);
  }
  return result;
}

unint64_t sub_1DA504F50()
{
  unint64_t result;

  result = qword_1F02694D0;
  if (!qword_1F02694D0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for MarkEpisodeAsPlayedAppIntent, &type metadata for MarkEpisodeAsPlayedAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02694D0);
  }
  return result;
}

unint64_t sub_1DA504F94()
{
  unint64_t result;

  result = qword_1F02694D8;
  if (!qword_1F02694D8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for MarkEpisodeAsUnplayedAppIntent, &type metadata for MarkEpisodeAsUnplayedAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02694D8);
  }
  return result;
}

unint64_t sub_1DA504FD8()
{
  unint64_t result;

  result = qword_1F02694E0;
  if (!qword_1F02694E0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayEpisodeAppIntent, &type metadata for PlayEpisodeAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02694E0);
  }
  return result;
}

unint64_t sub_1DA50501C()
{
  unint64_t result;

  result = qword_1F02694E8;
  if (!qword_1F02694E8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayEpisodeLastAppIntent, &type metadata for PlayEpisodeLastAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02694E8);
  }
  return result;
}

unint64_t sub_1DA505060()
{
  unint64_t result;

  result = qword_1F02694F0;
  if (!qword_1F02694F0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayEpisodeNextAppIntent, &type metadata for PlayEpisodeNextAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02694F0);
  }
  return result;
}

unint64_t sub_1DA5050A4()
{
  unint64_t result;

  result = qword_1F02694F8;
  if (!qword_1F02694F8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RemoveEpisodesDownloadAppIntent, &type metadata for RemoveEpisodesDownloadAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02694F8);
  }
  return result;
}

unint64_t sub_1DA5050E8()
{
  unint64_t result;

  result = qword_1F0269500;
  if (!qword_1F0269500)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for SaveEpisodeAppIntent, &type metadata for SaveEpisodeAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269500);
  }
  return result;
}

unint64_t sub_1DA50512C()
{
  unint64_t result;

  result = qword_1F0269508;
  if (!qword_1F0269508)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UnsaveEpisodeAppIntent, &type metadata for UnsaveEpisodeAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269508);
  }
  return result;
}

unint64_t sub_1DA505170()
{
  unint64_t result;

  result = qword_1F0269510;
  if (!qword_1F0269510)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayNextChapterAppIntent, &type metadata for PlayNextChapterAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269510);
  }
  return result;
}

unint64_t sub_1DA5051B4()
{
  unint64_t result;

  result = qword_1F0269518;
  if (!qword_1F0269518)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayPreviousChapterAppIntent, &type metadata for PlayPreviousChapterAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269518);
  }
  return result;
}

unint64_t sub_1DA5051F8()
{
  unint64_t result;

  result = qword_1F0269520;
  if (!qword_1F0269520)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ViewTranscriptAppIntent, &type metadata for ViewTranscriptAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269520);
  }
  return result;
}

unint64_t sub_1DA50523C()
{
  unint64_t result;

  result = qword_1F0269528;
  if (!qword_1F0269528)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FetchShowLatestEpisodesAppIntent, &type metadata for FetchShowLatestEpisodesAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269528);
  }
  return result;
}

unint64_t sub_1DA505280()
{
  unint64_t result;

  result = qword_1F0269530;
  if (!qword_1F0269530)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FollowShowAppIntent, &type metadata for FollowShowAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269530);
  }
  return result;
}

unint64_t sub_1DA5052C4()
{
  unint64_t result;

  result = qword_1F0269538;
  if (!qword_1F0269538)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UnfollowShowAppIntent, &type metadata for UnfollowShowAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269538);
  }
  return result;
}

unint64_t sub_1DA505308()
{
  unint64_t result;

  result = qword_1F0269540;
  if (!qword_1F0269540)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayStationAppIntent, &type metadata for PlayStationAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269540);
  }
  return result;
}

unint64_t sub_1DA505384()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F0269620;
  if (!qword_1F0269620)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269628);
    v2 = sub_1DA47E32C(&qword_1EDAE3B60, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0C91CC8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1F0269620);
  }
  return result;
}

uint64_t PlayEpisodeAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;

  v27 = a1;
  v1 = sub_1DA66C004();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269738);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66C220();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v28 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v18 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269740);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v19 = type metadata accessor for EpisodeEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_1DA66BD58();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0C91738], v26);
  sub_1DA505720();
  result = sub_1DA66BE3C();
  v23 = v27;
  *v27 = v18;
  v23[1] = result;
  return result;
}

unint64_t sub_1DA505720()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE3B58;
  if (!qword_1EDAE3B58)
  {
    v1 = type metadata accessor for EpisodeEntity();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for EpisodeEntity, v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE3B58);
  }
  return result;
}

uint64_t PlayEpisodeAppIntent.episode.getter()
{
  return sub_1DA66BE18();
}

uint64_t sub_1DA505788(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for EpisodeEntity();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1DA4F23B0(a1, (uint64_t)&v9 - v6);
  sub_1DA4F23B0((uint64_t)v7, (uint64_t)v4);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE24();
  sub_1DA47F880((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  swift_release();
  return swift_release();
}

uint64_t PlayEpisodeAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for EpisodeEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA4F23B0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66BE24();
  return sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1DA5058EC()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269708);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269708);
  return sub_1DA66C208();
}

uint64_t static PlayEpisodeAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268430 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269708);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA5059C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  __swift_allocate_value_buffer(v0, qword_1F0269720);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F0269720);
  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t static PlayEpisodeAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268438 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269720);
  swift_beginAccess();
  return sub_1DA505ACC(v3, a1);
}

uint64_t sub_1DA505ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static PlayEpisodeAppIntent.description.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268438 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269720);
  swift_beginAccess();
  sub_1DA505BA8(a1, v3);
  swift_endAccess();
  return sub_1DA505BF0(a1);
}

uint64_t sub_1DA505BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA505BF0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*static PlayEpisodeAppIntent.description.modify())()
{
  uint64_t v0;

  if (qword_1F0268438 != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269720);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static PlayEpisodeAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static PlayEpisodeAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayEpisodeAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269750);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269758);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA504FD8();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269760);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t PlayEpisodeAppIntent.$episode.getter()
{
  return sub_1DA66BE30();
}

uint64_t PlayEpisodeAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t PlayEpisodeAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*PlayEpisodeAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t PlayEpisodeAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*PlayEpisodeAppIntent.episode.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t PlayEpisodeAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 32) = a1;
  v3 = sub_1DA66BD58();
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 56) = swift_task_alloc();
  type metadata accessor for EpisodeEntity();
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  sub_1DA66F880();
  *(_QWORD *)(v2 + 72) = swift_task_alloc();
  type metadata accessor for PlayEpisodeIntent();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  *(_OWORD *)(v2 + 88) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA50602C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F0269490 + dword_1F0269490);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA5060C4;
  return v3((uint64_t)v3, v0[10], v0[11]);
}

uint64_t sub_1DA5060C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  sub_1DA47F880(v2, (uint64_t (*)(_QWORD))type metadata accessor for PlayEpisodeIntent);
  return swift_task_switch();
}

uint64_t sub_1DA50613C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  sub_1DA66F874();
  sub_1DA66F868();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  sub_1DA66BDA0();
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  sub_1DA66F85C();
  swift_bridgeObjectRelease();
  sub_1DA66F868();
  sub_1DA66BD4C();
  sub_1DA66BD70();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA506294()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  sub_1DA506734(v1, v2);
  sub_1DA66BD70();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA506334()
{
  unint64_t result;

  result = qword_1F0269770;
  if (!qword_1F0269770)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayEpisodeAppIntent, &type metadata for PlayEpisodeAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269770);
  }
  return result;
}

unint64_t sub_1DA50637C()
{
  unint64_t result;

  result = qword_1F0269778;
  if (!qword_1F0269778)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayEpisodeAppIntent, &type metadata for PlayEpisodeAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269778);
  }
  return result;
}

uint64_t sub_1DA5063C0()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1DA5063E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5063F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268430 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269708);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA506464()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269750);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269758);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269760);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA5065BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268438 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269720);
  swift_beginAccess();
  return sub_1DA505ACC(v3, a1);
}

uint64_t sub_1DA506640(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return PlayEpisodeAppIntent.perform()(a1);
}

uint64_t sub_1DA506694()
{
  sub_1DA504FD8();
  return sub_1DA66BD1C();
}

ValueMetadata *type metadata accessor for PlayEpisodeAppIntent()
{
  return &type metadata for PlayEpisodeAppIntent;
}

uint64_t sub_1DA5066DC()
{
  return sub_1DA4841D4(&qword_1F0269788, &qword_1F0269790, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1DA506708()
{
  return sub_1DA4841D4(&qword_1F0269798, &qword_1F02697A0, MEMORY[0x1E0C915B0]);
}

void sub_1DA506734(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  int v22;
  id v23;
  id v24;
  void *v25;
  char v26;
  id v27;
  id v28;
  char v29;
  id v30;
  uint64_t v31;
  char *v32;
  int v33;
  id v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  char v42;
  id v43;

  v39 = a2;
  v3 = sub_1DA66D1E0();
  v38 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v36 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - v9;
  v11 = sub_1DA66CF58();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v36 - v19;
  v40 = a1;
  v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v20, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
    if (v22 == *MEMORY[0x1E0D7DDE8]
      || v22 == *MEMORY[0x1E0D7DE00]
      || v22 == *MEMORY[0x1E0D7DDE0]
      || v22 == *MEMORY[0x1E0D7DDF8])
    {
      sub_1DA66BD40();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
    else
    {
      sub_1DA66BD40();
      v35 = *(void (**)(char *, uint64_t))(v12 + 8);
      v35(v17, v11);
      v35(v14, v11);
    }
    goto LABEL_28;
  }

  v43 = a1;
  v23 = a1;
  if (swift_dynamicCast())
  {
    v24 = v40;
    v25 = v41;
    v26 = v42;
    if (v42 == 1)
    {
      sub_1DA66BD40();
      sub_1DA506D64(v24, v25, 1);
    }
    else
    {
      if (v42 == 2 || v42 == 4 && v40 == (id)1 && !v41)
      {
LABEL_33:
        sub_1DA66BD40();
        goto LABEL_34;
      }
      sub_1DA66BD40();
      sub_1DA506D64(v24, v25, v26);
    }
LABEL_34:
    v34 = v43;
    goto LABEL_35;
  }

  v43 = a1;
  v27 = a1;
  if (swift_dynamicCast())
  {
    v28 = v40;
    v29 = (char)v41;
    if (v41 == 2 && (unint64_t)v40 <= 2)
      goto LABEL_33;
    sub_1DA66BD40();
    sub_1DA506D54(v28, v29);
    goto LABEL_34;
  }

  v40 = a1;
  v30 = a1;
  if (!swift_dynamicCast())
  {

    sub_1DA66BD40();
    return;
  }
  v32 = v37;
  v31 = v38;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v10, v3);
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v5, v32, v3);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v5, v3);
  if (v33 == *MEMORY[0x1E0D7E1A0]
    || v33 == *MEMORY[0x1E0D7E1A8]
    || v33 == *MEMORY[0x1E0D7E190]
    || v33 == *MEMORY[0x1E0D7E198])
  {
    sub_1DA66BD40();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v3);
LABEL_28:
    v34 = v40;
LABEL_35:

    return;
  }
  sub_1DA6706CC();
  __break(1u);
}

void sub_1DA506D54(id a1, char a2)
{
  if (!a2)

}

void sub_1DA506D64(void *a1, id a2, char a3)
{
  if (a3 == 1)
  {

  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t ViewTranscriptAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;

  v27 = a1;
  v1 = sub_1DA66C004();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269738);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66C220();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v28 = 0;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v18 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269740);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v19 = type metadata accessor for EpisodeEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_1DA66BD58();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0C91738], v26);
  sub_1DA505720();
  result = sub_1DA66BE3C();
  v23 = v27;
  *v27 = v18;
  v23[1] = result;
  return result;
}

uint64_t ViewTranscriptAppIntent.episode.getter()
{
  return sub_1DA66BE18();
}

uint64_t ViewTranscriptAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for EpisodeEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA4F23B0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66BE24();
  return sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1DA507104()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F02697A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F02697A8);
  return sub_1DA66C208();
}

uint64_t static ViewTranscriptAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268440 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F02697A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA5071DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  __swift_allocate_value_buffer(v0, qword_1F02697C0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F02697C0);
  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t static ViewTranscriptAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268448 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F02697C0);
  return sub_1DA505ACC(v3, a1);
}

uint64_t static ViewTranscriptAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static ViewTranscriptAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static ViewTranscriptAppIntent.openAppWhenRun.getter()
{
  return 1;
}

uint64_t static ViewTranscriptAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02697D8);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02697E0);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA5051F8();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02697E8);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t ViewTranscriptAppIntent.$episode.getter()
{
  return sub_1DA66BE30();
}

uint64_t ViewTranscriptAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t ViewTranscriptAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*ViewTranscriptAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t ViewTranscriptAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*ViewTranscriptAppIntent.episode.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t ViewTranscriptAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  type metadata accessor for OpenTranscriptIntent();
  *(_QWORD *)(v2 + 24) = swift_task_alloc();
  *(_OWORD *)(v2 + 32) = *v1;
  sub_1DA66FB68();
  *(_QWORD *)(v2 + 48) = sub_1DA66FB5C();
  *(_QWORD *)(v2 + 56) = sub_1DA66FB38();
  *(_QWORD *)(v2 + 64) = v3;
  return swift_task_switch();
}

uint64_t sub_1DA507628()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F0269480 + dword_1F0269480);
  v1 = (_QWORD *)swift_task_alloc();
  v0[9] = v1;
  *v1 = v0;
  v1[1] = sub_1DA5076C0;
  return v3((uint64_t)v3, v0[3], v0[4]);
}

uint64_t sub_1DA5076C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_1DA47F880(v2, (uint64_t (*)(_QWORD))type metadata accessor for OpenTranscriptIntent);
  return swift_task_switch();
}

uint64_t sub_1DA50773C()
{
  uint64_t v0;

  swift_release();
  sub_1DA66BD7C();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA507784()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA5077C8()
{
  unint64_t result;

  result = qword_1F02697F8;
  if (!qword_1F02697F8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ViewTranscriptAppIntent, &type metadata for ViewTranscriptAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02697F8);
  }
  return result;
}

unint64_t sub_1DA507810()
{
  unint64_t result;

  result = qword_1F0269800;
  if (!qword_1F0269800)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ViewTranscriptAppIntent, &type metadata for ViewTranscriptAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269800);
  }
  return result;
}

uint64_t sub_1DA507854()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA507864()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA507874@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268440 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F02697A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA5078E4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02697D8);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02697E0);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02697E8);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA507A50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268448 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F02697C0);
  return sub_1DA505ACC(v3, a1);
}

uint64_t sub_1DA507AB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return ViewTranscriptAppIntent.perform()(a1);
}

uint64_t sub_1DA507B04()
{
  sub_1DA5051F8();
  return sub_1DA66BD1C();
}

ValueMetadata *type metadata accessor for ViewTranscriptAppIntent()
{
  return &type metadata for ViewTranscriptAppIntent;
}

uint64_t sub_1DA507B4C()
{
  return sub_1DA4841D4(&qword_1F0269810, &qword_1F0269818, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1DA507B78()
{
  return sub_1DA4841D4(&qword_1F0269820, &qword_1F0269828, MEMORY[0x1E0C91590]);
}

uint64_t MarkEpisodeAsPlayedAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;

  v27 = a1;
  v1 = sub_1DA66C004();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269738);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66C220();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v28 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v18 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269740);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v19 = type metadata accessor for EpisodeEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_1DA66BD58();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0C91738], v26);
  sub_1DA505720();
  result = sub_1DA66BE3C();
  v23 = v27;
  *v27 = v18;
  v23[1] = result;
  return result;
}

uint64_t MarkEpisodeAsPlayedAppIntent.episode.getter()
{
  return sub_1DA66BE18();
}

uint64_t MarkEpisodeAsPlayedAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for EpisodeEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA4F23B0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66BE24();
  return sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1DA507F28()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269830);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269830);
  return sub_1DA66C208();
}

uint64_t static MarkEpisodeAsPlayedAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268450 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static MarkEpisodeAsPlayedAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t static MarkEpisodeAsPlayedAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static MarkEpisodeAsPlayedAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static MarkEpisodeAsPlayedAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269848);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269850);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA504F50();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269858);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t MarkEpisodeAsPlayedAppIntent.$episode.getter()
{
  return sub_1DA66BE30();
}

uint64_t MarkEpisodeAsPlayedAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t MarkEpisodeAsPlayedAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*MarkEpisodeAsPlayedAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t MarkEpisodeAsPlayedAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*MarkEpisodeAsPlayedAppIntent.episode.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t MarkEpisodeAsPlayedAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = type metadata accessor for UpdateEpisodePlayStateIntent();
  *(_QWORD *)(v2 + 40) = swift_task_alloc();
  sub_1DA66D1BC();
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_QWORD *)(v2 + 56) = type metadata accessor for EpisodeEntity();
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  v3 = sub_1DA66DEF4();
  *(_QWORD *)(v2 + 72) = v3;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  *(_OWORD *)(v2 + 96) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA5083E8()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  sub_1DA66DE28();
  swift_retain_n();
  swift_retain_n();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FD90();
  if (os_log_type_enabled(v1, v2))
  {
    v14 = v0[9];
    v15 = v0[11];
    v13 = v0[10];
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v17 = v4;
    *(_DWORD *)v3 = 136315138;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    v5 = sub_1DA66F904();
    v0[2] = sub_1DA49AD00(v5, v6, &v17);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1DA478000, v1, v2, "Received a request to mark episode as played: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v4, -1, -1);
    MEMORY[0x1DF0A0474](v3, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  }
  else
  {
    v8 = v0[10];
    v7 = v0[11];
    v9 = v0[9];
    swift_release_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  v10 = (_QWORD *)v0[5];
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  *v10 = 0;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F0269478 + dword_1F0269478);
  v11 = (_QWORD *)swift_task_alloc();
  v0[14] = v11;
  *v11 = v0;
  v11[1] = sub_1DA50866C;
  return v16(v0[6], v0[5], v0[12]);
}

uint64_t sub_1DA50866C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  sub_1DA47F880(v3, (uint64_t (*)(_QWORD))type metadata accessor for UpdateEpisodePlayStateIntent);
  if (!v0)
    sub_1DA47F880(*(_QWORD *)(v2 + 48), (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E168]);
  return swift_task_switch();
}

uint64_t sub_1DA5086FC()
{
  uint64_t v0;

  sub_1DA66BD7C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA508764()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5087C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268450 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA508830()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269848);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269850);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269858);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA508998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1DA5089F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return MarkEpisodeAsPlayedAppIntent.perform()(a1);
}

uint64_t sub_1DA508A48()
{
  sub_1DA504F50();
  return sub_1DA66BD1C();
}

unint64_t sub_1DA508A74()
{
  unint64_t result;

  result = qword_1F0269868;
  if (!qword_1F0269868)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for MarkEpisodeAsPlayedAppIntent, &type metadata for MarkEpisodeAsPlayedAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269868);
  }
  return result;
}

unint64_t sub_1DA508ABC()
{
  unint64_t result;

  result = qword_1F0269870;
  if (!qword_1F0269870)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for MarkEpisodeAsPlayedAppIntent, &type metadata for MarkEpisodeAsPlayedAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269870);
  }
  return result;
}

uint64_t sub_1DA508B00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA508B10()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for MarkEpisodeAsPlayedAppIntent()
{
  return &type metadata for MarkEpisodeAsPlayedAppIntent;
}

uint64_t sub_1DA508B40()
{
  return sub_1DA4841D4(&qword_1F0269880, &qword_1F0269888, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1DA508B6C()
{
  return sub_1DA4841D4(&qword_1F0269820, &qword_1F0269828, MEMORY[0x1E0C91590]);
}

uint64_t UnsaveEpisodeAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  uint64_t v23;

  v21 = a1;
  v20 = sub_1DA66C004();
  v1 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66C220();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v22 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v15 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02698A8);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v23 = 0;
  v16 = sub_1DA66BD58();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v9, 1, 1, v16);
  v17(v6, 1, 1, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0C91738], v20);
  sub_1DA505720();
  result = sub_1DA66BE3C();
  v19 = v21;
  *v21 = v15;
  v19[1] = result;
  return result;
}

uint64_t UnsaveEpisodeAppIntent.episodes.getter()
{
  uint64_t v1;

  sub_1DA66BE18();
  return v1;
}

uint64_t sub_1DA508E4C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA508EAC()
{
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE24();
  swift_release();
  return swift_release();
}

uint64_t UnsaveEpisodeAppIntent.episodes.setter()
{
  return sub_1DA66BE24();
}

uint64_t sub_1DA508F34()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269890);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269890);
  return sub_1DA66C208();
}

uint64_t static UnsaveEpisodeAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268458 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static UnsaveEpisodeAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t static UnsaveEpisodeAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static UnsaveEpisodeAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static UnsaveEpisodeAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02698B0);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02698B8);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA50512C();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02698C0);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t UnsaveEpisodeAppIntent.$episodes.getter()
{
  return sub_1DA66BE30();
}

uint64_t UnsaveEpisodeAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t UnsaveEpisodeAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*UnsaveEpisodeAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t UnsaveEpisodeAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*UnsaveEpisodeAppIntent.episodes.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t UnsaveEpisodeAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 56) = a1;
  v3 = type metadata accessor for EpisodeEntity();
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 72) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  v4 = sub_1DA66DEF4();
  *(_QWORD *)(v2 + 88) = v4;
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 104) = swift_task_alloc();
  *(_QWORD *)(v2 + 112) = swift_task_alloc();
  *(_OWORD *)(v2 + 120) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA5093C0()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  sub_1DA66DE28();
  swift_retain_n();
  swift_retain_n();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FD90();
  if (os_log_type_enabled(v1, v2))
  {
    v30 = v0[12];
    v31 = v0[11];
    v32 = v0[14];
    v3 = v0[8];
    v4 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v34 = v29;
    *(_DWORD *)v4 = 136315138;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    v5 = MEMORY[0x1DF09E488](v0[5], v3);
    v7 = v6;
    swift_bridgeObjectRelease();
    v0[6] = sub_1DA49AD00(v5, v7, &v34);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1DA478000, v1, v2, "Received a request to unbookmark episodes: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v29, -1, -1);
    MEMORY[0x1DF0A0474](v4, -1, -1);

    v8 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v8(v32, v31);
  }
  else
  {
    v9 = v0[14];
    v10 = v0[11];
    v11 = v0[12];
    swift_release_n();
    swift_release_n();

    v8 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v8(v9, v10);
  }
  v0[17] = v8;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  v12 = v0[2];
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = v0[9];
    v15 = v0[10];
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1DA509D34(0, v13, 0);
    v16 = v12 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v17 = *(_QWORD *)(v14 + 72);
    do
    {
      sub_1DA4F23B0(v16, v0[10]);
      v18 = *(void **)(v15 + 16);
      if (v18)
      {
        v19 = 2;
        v20 = *(_QWORD *)(v15 + 16);
      }
      else
      {
        v19 = 0;
        v20 = *(_QWORD *)(v15 + 40);
      }
      v21 = v0[10];
      v22 = v18;
      sub_1DA509D50(v21);
      v23 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA509D34(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v23 = v34;
      }
      v25 = *(_QWORD *)(v23 + 16);
      v24 = *(_QWORD *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1DA509D34(v24 > 1, v25 + 1, 1);
        v23 = v34;
      }
      *(_QWORD *)(v23 + 16) = v25 + 1;
      v26 = v23 + 24 * v25;
      *(_QWORD *)(v26 + 32) = v20;
      *(_QWORD *)(v26 + 40) = 0;
      *(_BYTE *)(v26 + 48) = v19;
      v16 += v17;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
  }
  v0[18] = v23;
  v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F0269468 + dword_1F0269468);
  v27 = (_QWORD *)swift_task_alloc();
  v0[19] = v27;
  *v27 = v0;
  v27[1] = sub_1DA509780;
  return v33((uint64_t)v33, v23, v0[15]);
}

uint64_t sub_1DA509780()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA5097EC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  sub_1DA66DE28();
  swift_retain_n();
  swift_retain_n();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FD90();
  if (os_log_type_enabled(v1, v2))
  {
    v14 = *(_QWORD *)(v0 + 104);
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
    v13 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 64);
    v4 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v16 = v12;
    *(_DWORD *)v4 = 136315138;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    v5 = MEMORY[0x1DF09E488](*(_QWORD *)(v0 + 24), v3);
    v7 = v6;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = sub_1DA49AD00(v5, v7, &v16);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1DA478000, v1, v2, "Received a request to bookmark episodes: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v12, -1, -1);
    MEMORY[0x1DF0A0474](v4, -1, -1);

    v15(v14, v13);
  }
  else
  {
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 88);
    swift_release_n();
    swift_release_n();

    v8(v9, v10);
  }
  sub_1DA66BD7C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA509A48()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA509A90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268458 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA509B00()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02698B0);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F02698B8);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02698C0);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA509C5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1DA509CB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return UnsaveEpisodeAppIntent.perform()(a1);
}

uint64_t sub_1DA509D0C()
{
  sub_1DA50512C();
  return sub_1DA66BD1C();
}

uint64_t sub_1DA509D34(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DA50A200(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DA509D50(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EpisodeEntity();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA509D90()
{
  unint64_t result;

  result = qword_1F02698D0;
  if (!qword_1F02698D0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UnsaveEpisodeAppIntent, &type metadata for UnsaveEpisodeAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02698D0);
  }
  return result;
}

unint64_t sub_1DA509DD8()
{
  unint64_t result;

  result = qword_1F02698D8;
  if (!qword_1F02698D8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UnsaveEpisodeAppIntent, &type metadata for UnsaveEpisodeAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02698D8);
  }
  return result;
}

uint64_t sub_1DA509E1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA509E2C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for UnsaveEpisodeAppIntent()
{
  return &type metadata for UnsaveEpisodeAppIntent;
}

uint64_t sub_1DA509E5C()
{
  return sub_1DA4841D4(&qword_1F02698E8, &qword_1F02698F0, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1DA509E88(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DA50A378(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DA509EA4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DA50A4E4(a1, a2, a3, *v3, &qword_1F02698F8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DA509EC8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DA50A4E4(a1, a2, a3, *v3, &qword_1F0269958);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DA509EEC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269960, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D5A8]);
  *v3 = result;
  return result;
}

uint64_t sub_1DA509F18(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1EDAE4D40, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7DD28]);
  *v3 = result;
  return result;
}

uint64_t sub_1DA509F44(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50A7C4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1DA509F60(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269950, type metadata accessor for TTMLFile);
  *v3 = result;
  return result;
}

uint64_t sub_1DA509F8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1EDAE4D38, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  *v3 = result;
  return result;
}

uint64_t sub_1DA509FB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269948, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E0B8]);
  *v3 = result;
  return result;
}

uint64_t sub_1DA509FE4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269940, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E070]);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A010(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269938, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E010]);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A03C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269930, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E920]);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A068(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269918, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A094(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269910, (uint64_t (*)(_QWORD))type metadata accessor for StationEntity);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A0C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269908, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A0EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269900, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A118(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269970, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A144(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AAE8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269968, (uint64_t (*)(_QWORD))type metadata accessor for FairPlayKeyViewModel);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A170(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50ACC8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269920, (uint64_t *)&unk_1F026E450);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A19C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50ACC8(a1, a2, a3, (_QWORD *)*v3, &qword_1F0269928, (uint64_t *)&unk_1F026E410);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A1C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DA50AEA8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1DA50A1E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DA50B030(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DA50A200(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269360);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA50A378(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0110);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA50A4E4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA50A63C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D80);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4BC0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA50A7C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A9C0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA50A964(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE25D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA50AAE8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA50ACC8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA50AEA8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D70);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AD0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA50B030(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4D20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t MarkEpisodeAsUnplayedAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;

  v27 = a1;
  v1 = sub_1DA66C004();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269738);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66C220();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v28 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v18 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269740);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v19 = type metadata accessor for EpisodeEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_1DA66BD58();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0C91738], v26);
  sub_1DA505720();
  result = sub_1DA66BE3C();
  v23 = v27;
  *v27 = v18;
  v23[1] = result;
  return result;
}

uint64_t MarkEpisodeAsUnplayedAppIntent.episode.getter()
{
  return sub_1DA66BE18();
}

uint64_t MarkEpisodeAsUnplayedAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for EpisodeEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA4F23B0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66BE24();
  return sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1DA50B51C()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269978);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269978);
  return sub_1DA66C208();
}

uint64_t static MarkEpisodeAsUnplayedAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268460 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269978);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static MarkEpisodeAsUnplayedAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t static MarkEpisodeAsUnplayedAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static MarkEpisodeAsUnplayedAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static MarkEpisodeAsUnplayedAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269990);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269998);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA504F94();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02699A0);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t MarkEpisodeAsUnplayedAppIntent.$episode.getter()
{
  return sub_1DA66BE30();
}

uint64_t MarkEpisodeAsUnplayedAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t MarkEpisodeAsUnplayedAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*MarkEpisodeAsUnplayedAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t MarkEpisodeAsUnplayedAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*MarkEpisodeAsUnplayedAppIntent.episode.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t MarkEpisodeAsUnplayedAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = type metadata accessor for UpdateEpisodePlayStateIntent();
  *(_QWORD *)(v2 + 40) = swift_task_alloc();
  sub_1DA66D1BC();
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_QWORD *)(v2 + 56) = type metadata accessor for EpisodeEntity();
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  v3 = sub_1DA66DEF4();
  *(_QWORD *)(v2 + 72) = v3;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  *(_OWORD *)(v2 + 96) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA50B9E0()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  sub_1DA66DE28();
  swift_retain_n();
  swift_retain_n();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FD90();
  if (os_log_type_enabled(v1, v2))
  {
    v14 = v0[9];
    v15 = v0[11];
    v13 = v0[10];
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v17 = v4;
    *(_DWORD *)v3 = 136315138;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    v5 = sub_1DA66F904();
    v0[2] = sub_1DA49AD00(v5, v6, &v17);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1DA478000, v1, v2, "Received a request to mark episode as unplayed: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v4, -1, -1);
    MEMORY[0x1DF0A0474](v3, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  }
  else
  {
    v8 = v0[10];
    v7 = v0[11];
    v9 = v0[9];
    swift_release_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  v10 = (_QWORD *)v0[5];
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  *v10 = 2;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F0269458 + dword_1F0269458);
  v11 = (_QWORD *)swift_task_alloc();
  v0[14] = v11;
  *v11 = v0;
  v11[1] = sub_1DA50866C;
  return v16(v0[6], v0[5], v0[12]);
}

uint64_t sub_1DA50BC68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268460 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269978);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA50BCD8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269990);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269998);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02699A0);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA50BE44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1DA50BEA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return MarkEpisodeAsUnplayedAppIntent.perform()(a1);
}

uint64_t sub_1DA50BEF4()
{
  sub_1DA504F94();
  return sub_1DA66BD1C();
}

unint64_t sub_1DA50BF20()
{
  unint64_t result;

  result = qword_1F02699B0;
  if (!qword_1F02699B0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for MarkEpisodeAsUnplayedAppIntent, &type metadata for MarkEpisodeAsUnplayedAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02699B0);
  }
  return result;
}

unint64_t sub_1DA50BF68()
{
  unint64_t result;

  result = qword_1F02699B8;
  if (!qword_1F02699B8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for MarkEpisodeAsUnplayedAppIntent, &type metadata for MarkEpisodeAsUnplayedAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F02699B8);
  }
  return result;
}

uint64_t sub_1DA50BFAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA50BFBC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for MarkEpisodeAsUnplayedAppIntent()
{
  return &type metadata for MarkEpisodeAsUnplayedAppIntent;
}

uint64_t sub_1DA50BFEC()
{
  return sub_1DA4841D4(&qword_1F02699C8, &qword_1F02699D0, MEMORY[0x1E0C916B0]);
}

uint64_t PlayStationAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;

  v27 = a1;
  v1 = sub_1DA66C004();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A08);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66C220();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v28 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v18 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A10);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v19 = type metadata accessor for StationEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_1DA66BD58();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0C91738], v26);
  sub_1DA50C2F4();
  result = sub_1DA66BE3C();
  v23 = v27;
  *v27 = v18;
  v23[1] = result;
  return result;
}

unint64_t sub_1DA50C2F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F0269A18;
  if (!qword_1F0269A18)
  {
    v1 = type metadata accessor for StationEntity();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for StationEntity, v1);
    atomic_store(result, (unint64_t *)&qword_1F0269A18);
  }
  return result;
}

uint64_t PlayStationAppIntent.station.getter()
{
  return sub_1DA66BE18();
}

uint64_t sub_1DA50C35C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for StationEntity();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1DA50C4C0(a1, (uint64_t)&v9 - v6);
  sub_1DA50C4C0((uint64_t)v7, (uint64_t)v4);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE24();
  sub_1DA47F880((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StationEntity);
  swift_release();
  return swift_release();
}

uint64_t PlayStationAppIntent.station.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for StationEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA50C4C0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66BE24();
  return sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for StationEntity);
}

uint64_t sub_1DA50C4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA50C504()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F02699D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F02699D8);
  return sub_1DA66C208();
}

uint64_t static PlayStationAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268468 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F02699D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA50C5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  __swift_allocate_value_buffer(v0, qword_1F02699F0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F02699F0);
  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t static PlayStationAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268470 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F02699F0);
  return sub_1DA505ACC(v3, a1);
}

uint64_t static PlayStationAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static PlayStationAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayStationAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A20);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A28);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA505308();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A30);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t PlayStationAppIntent.$station.getter()
{
  return sub_1DA66BE30();
}

uint64_t PlayStationAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t PlayStationAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*PlayStationAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t PlayStationAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*PlayStationAppIntent.station.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t PlayStationAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 32) = a1;
  v3 = sub_1DA66BD58();
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 56) = swift_task_alloc();
  type metadata accessor for StationEntity();
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  sub_1DA66F880();
  *(_QWORD *)(v2 + 72) = swift_task_alloc();
  type metadata accessor for PlayStationIntent();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  *(_OWORD *)(v2 + 88) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA50CA3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F0269448 + dword_1F0269448);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA50CAD4;
  return v3((uint64_t)v3, v0[10], v0[11]);
}

uint64_t sub_1DA50CAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  sub_1DA47F880(v2, (uint64_t (*)(_QWORD))type metadata accessor for PlayStationIntent);
  return swift_task_switch();
}

uint64_t sub_1DA50CB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  sub_1DA66F874();
  sub_1DA66F868();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  sub_1DA66BDA0();
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))type metadata accessor for StationEntity);
  sub_1DA66F85C();
  swift_bridgeObjectRelease();
  sub_1DA66F868();
  sub_1DA66BD4C();
  sub_1DA66BD70();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA50CCA8()
{
  unint64_t result;

  result = qword_1F0269A40;
  if (!qword_1F0269A40)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayStationAppIntent, &type metadata for PlayStationAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269A40);
  }
  return result;
}

unint64_t sub_1DA50CCF0()
{
  unint64_t result;

  result = qword_1F0269A48;
  if (!qword_1F0269A48)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayStationAppIntent, &type metadata for PlayStationAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269A48);
  }
  return result;
}

uint64_t sub_1DA50CD34()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1DA50CD58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA50CD68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268468 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F02699D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA50CDD8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A20);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A28);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A30);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA50CF30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268470 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F02699F0);
  return sub_1DA505ACC(v3, a1);
}

uint64_t sub_1DA50CF90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return PlayStationAppIntent.perform()(a1);
}

uint64_t sub_1DA50CFE4()
{
  sub_1DA505308();
  return sub_1DA66BD1C();
}

ValueMetadata *type metadata accessor for PlayStationAppIntent()
{
  return &type metadata for PlayStationAppIntent;
}

uint64_t sub_1DA50D02C()
{
  return sub_1DA4841D4(&qword_1F0269A58, &qword_1F0269A60, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1DA50D058()
{
  return sub_1DA4841D4(&qword_1F0269798, &qword_1F02697A0, MEMORY[0x1E0C915B0]);
}

uint64_t FollowShowAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;

  v27 = a1;
  v1 = sub_1DA66C004();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269350);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66C220();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v28 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v18 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A98);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v19 = type metadata accessor for ShowEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_1DA66BD58();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0C91738], v26);
  sub_1DA50E1D0((unint64_t *)&qword_1EDAE3AF0, (uint64_t)&protocol conformance descriptor for ShowEntity);
  result = sub_1DA66BE3C();
  v23 = v27;
  *v27 = v18;
  v23[1] = result;
  return result;
}

uint64_t FollowShowAppIntent.show.getter()
{
  return sub_1DA66BE18();
}

uint64_t sub_1DA50D388(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for ShowEntity();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1DA4E6FEC(a1, (uint64_t)&v9 - v6);
  sub_1DA4E6FEC((uint64_t)v7, (uint64_t)v4);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE24();
  sub_1DA47F880((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  swift_release();
  return swift_release();
}

uint64_t FollowShowAppIntent.show.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for ShowEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA4E6FEC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66BE24();
  return sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
}

uint64_t sub_1DA50D4EC()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269A68);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269A68);
  return sub_1DA66C208();
}

uint64_t static FollowShowAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1F0268478, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1F0269A68, a1);
}

uint64_t sub_1DA50D574()
{
  uint64_t v0;

  v0 = sub_1DA66BF68();
  __swift_allocate_value_buffer(v0, qword_1F0269A80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269A80);
  return sub_1DA66BF5C();
}

uint64_t static FollowShowAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1F0268480, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1F0269A80, a1);
}

uint64_t static FollowShowAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static FollowShowAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static FollowShowAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269AA0);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269AA8);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA505280();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269AB0);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t FollowShowAppIntent.$show.getter()
{
  return sub_1DA66BE30();
}

uint64_t FollowShowAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t FollowShowAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*FollowShowAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t FollowShowAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*FollowShowAppIntent.show.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t FollowShowAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269350);
  *(_QWORD *)(v2 + 24) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  *(_QWORD *)(v2 + 32) = swift_task_alloc();
  *(_QWORD *)(v2 + 40) = type metadata accessor for FollowFeedIntent();
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  v3 = type metadata accessor for ShowEntity();
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 72) = swift_task_alloc();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  *(_QWORD *)(v2 + 96) = swift_task_alloc();
  *(_OWORD *)(v2 + 104) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA50D9AC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t (*v16)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 96);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  sub_1DA66BDA0();
  v2 = *(_BYTE *)(v0 + 184);
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  sub_1DA66BE60();
  sub_1DA66BE60();
  v3 = *(_QWORD *)(v0 + 96);
  if ((v2 & 1) != 0)
  {
    sub_1DA66BE18();
    swift_release();
    swift_release();
    sub_1DA50E1D0(&qword_1EDAE3B00, (uint64_t)&protocol conformance descriptor for ShowEntity);
    sub_1DA66BD64();
    sub_1DA47F880(v3, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(_QWORD *)(v0 + 32);
    v10 = *(int **)(v0 + 40);
    sub_1DA66BE18();
    swift_release();
    swift_release();
    sub_1DA4B2F78(v5 + *(int *)(v8 + 32), v9);
    sub_1DA47F880(v5, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    v11 = *(_QWORD *)(v6 + 40);
    sub_1DA47F880(v6, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    sub_1DA66BDA0();
    v12 = *(_BYTE *)(v0 + 185);
    sub_1DA47F880(v3, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
    sub_1DA49B0AC(v9, v7);
    v13 = v7 + v10[5];
    *(_QWORD *)v13 = v11;
    *(_BYTE *)(v13 + 8) = 0;
    v14 = (_QWORD *)(v7 + v10[6]);
    *v14 = 0;
    v14[1] = 0;
    *(_BYTE *)(v7 + v10[7]) = v12;
    v16 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F0269438 + dword_1F0269438);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v15;
    *v15 = v0;
    v15[1] = sub_1DA50DC70;
    return v16(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_1DA50DC70(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v5 = *v4;
  *(_QWORD *)(v5 + 128) = a1;
  *(_QWORD *)(v5 + 136) = a2;
  *(_BYTE *)(v5 + 186) = a3;
  *(_QWORD *)(v5 + 144) = v3;
  swift_task_dealloc();
  sub_1DA47F880(*(_QWORD *)(v5 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FollowFeedIntent);
  return swift_task_switch();
}

uint64_t sub_1DA50DCF4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 144);
  sub_1DA66FBEC();
  v2 = *(_BYTE *)(v0 + 186);
  v4 = *(void **)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  if (v1)
  {
    sub_1DA4FAB18(*(void **)(v0 + 128), *(id *)(v0 + 136), *(_BYTE *)(v0 + 186));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269360);
    v6 = swift_allocObject();
    *(_QWORD *)(v0 + 152) = v6;
    *(_OWORD *)(v6 + 16) = xmmword_1DA678510;
    *(_QWORD *)(v6 + 32) = v4;
    *(_QWORD *)(v6 + 40) = v3;
    *(_BYTE *)(v6 + 48) = v2;
    sub_1DA4FAB3C(v4, v3, v2);
    v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F0269428 + dword_1F0269428);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v7;
    *v7 = v0;
    v7[1] = sub_1DA50DE3C;
    return v8(v6, *(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_1DA50DE3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA50DEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char v9;
  _BYTE *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(v0 + 168);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 64) + 80);
    sub_1DA4E6FEC(v1 + ((v2 + 32) & ~v2), *(_QWORD *)(v0 + 24));
    v3 = 0;
  }
  else
  {
    v3 = 1;
  }
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, v3, 1, v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    v7 = *(void **)(v0 + 128);
    v8 = *(void **)(v0 + 136);
    v9 = *(_BYTE *)(v0 + 186);
    sub_1DA4FAB60(*(_QWORD *)(v0 + 24));
    sub_1DA4FABA0();
    swift_allocError();
    *v10 = 1;
    swift_willThrow();
    sub_1DA4FAB18(v7, v8, v9);
  }
  else
  {
    v11 = *(void **)(v0 + 128);
    v12 = *(void **)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_BYTE *)(v0 + 186);
    sub_1DA4E7038(*(_QWORD *)(v0 + 24), v13);
    sub_1DA50E1D0(&qword_1EDAE3B00, (uint64_t)&protocol conformance descriptor for ShowEntity);
    sub_1DA66BD64();
    sub_1DA4FAB18(v11, v12, v14);
    sub_1DA47F880(v13, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA50E0B4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA50E13C()
{
  uint64_t v0;

  sub_1DA4FAB18(*(void **)(v0 + 128), *(id *)(v0 + 136), *(_BYTE *)(v0 + 186));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA50E1D0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ShowEntity();
    result = MEMORY[0x1DF0A039C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DA50E214()
{
  unint64_t result;

  result = qword_1F0269AC0;
  if (!qword_1F0269AC0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FollowShowAppIntent, &type metadata for FollowShowAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269AC0);
  }
  return result;
}

unint64_t sub_1DA50E25C()
{
  unint64_t result;

  result = qword_1F0269AC8;
  if (!qword_1F0269AC8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FollowShowAppIntent, &type metadata for FollowShowAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269AC8);
  }
  return result;
}

uint64_t sub_1DA50E2A0()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1DA50E2C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA50E2D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268478 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269A68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA50E344()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269AA0);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269AA8);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269AB0);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA50E4A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return FollowShowAppIntent.perform()(a1);
}

uint64_t sub_1DA50E4F4()
{
  sub_1DA505280();
  return sub_1DA66BD1C();
}

ValueMetadata *type metadata accessor for FollowShowAppIntent()
{
  return &type metadata for FollowShowAppIntent;
}

uint64_t sub_1DA50E53C()
{
  return sub_1DA4841D4(&qword_1F0269AD8, &qword_1F0269AE0, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1DA50E568()
{
  return sub_1DA4841D4(&qword_1F02693A0, &qword_1F02693A8, MEMORY[0x1E0C915A0]);
}

uint64_t SaveEpisodeAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  uint64_t v23;

  v21 = a1;
  v20 = sub_1DA66C004();
  v1 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66C220();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v22 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v15 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02698A8);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v23 = 0;
  v16 = sub_1DA66BD58();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v9, 1, 1, v16);
  v17(v6, 1, 1, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0C91738], v20);
  sub_1DA505720();
  result = sub_1DA66BE3C();
  v19 = v21;
  *v21 = v15;
  v19[1] = result;
  return result;
}

uint64_t SaveEpisodeAppIntent.episodes.getter()
{
  uint64_t v1;

  sub_1DA66BE18();
  return v1;
}

uint64_t SaveEpisodeAppIntent.episodes.setter()
{
  return sub_1DA66BE24();
}

uint64_t sub_1DA50E878()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269AE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269AE8);
  return sub_1DA66C208();
}

uint64_t static SaveEpisodeAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268488 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269AE8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static SaveEpisodeAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t static SaveEpisodeAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static SaveEpisodeAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static SaveEpisodeAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B00);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B08);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA5050E8();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B10);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t SaveEpisodeAppIntent.$episodes.getter()
{
  return sub_1DA66BE30();
}

uint64_t SaveEpisodeAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t SaveEpisodeAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*SaveEpisodeAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t SaveEpisodeAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*SaveEpisodeAppIntent.episodes.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t SaveEpisodeAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 40) = a1;
  v3 = type metadata accessor for EpisodeEntity();
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  v4 = sub_1DA66DEF4();
  *(_QWORD *)(v2 + 72) = v4;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  *(_OWORD *)(v2 + 96) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA50ECF0()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  sub_1DA66DE28();
  swift_retain_n();
  swift_retain_n();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FD90();
  if (os_log_type_enabled(v1, v2))
  {
    v29 = v0[10];
    v30 = v0[9];
    v31 = v0[11];
    v3 = v0[6];
    v4 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v33 = v28;
    *(_DWORD *)v4 = 136315138;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    v5 = MEMORY[0x1DF09E488](v0[3], v3);
    v7 = v6;
    swift_bridgeObjectRelease();
    v0[4] = sub_1DA49AD00(v5, v7, &v33);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1DA478000, v1, v2, "Received a request to bookmark episodes: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v28, -1, -1);
    MEMORY[0x1DF0A0474](v4, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v9 = v0[10];
    v8 = v0[11];
    v10 = v0[9];
    swift_release_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  v11 = v0[2];
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = v0[7];
    v14 = v0[8];
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1DA509D34(0, v12, 0);
    v15 = v11 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v16 = *(_QWORD *)(v13 + 72);
    do
    {
      sub_1DA4F23B0(v15, v0[8]);
      v17 = *(void **)(v14 + 16);
      if (v17)
      {
        v18 = 2;
        v19 = *(_QWORD *)(v14 + 16);
      }
      else
      {
        v18 = 0;
        v19 = *(_QWORD *)(v14 + 40);
      }
      v20 = v0[8];
      v21 = v17;
      sub_1DA509D50(v20);
      v22 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA509D34(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v33;
      }
      v24 = *(_QWORD *)(v22 + 16);
      v23 = *(_QWORD *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1DA509D34(v23 > 1, v24 + 1, 1);
        v22 = v33;
      }
      *(_QWORD *)(v22 + 16) = v24 + 1;
      v25 = v22 + 24 * v24;
      *(_QWORD *)(v25 + 32) = v19;
      *(_QWORD *)(v25 + 40) = 0;
      *(_BYTE *)(v25 + 48) = v18;
      v15 += v16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
  }
  v0[14] = v22;
  v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F0269418 + dword_1F0269418);
  v26 = (_QWORD *)swift_task_alloc();
  v0[15] = v26;
  *v26 = v0;
  v26[1] = sub_1DA50F0AC;
  return v32((uint64_t)v32, v22, v0[12]);
}

uint64_t sub_1DA50F0AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA50F118()
{
  uint64_t v0;

  sub_1DA66BD7C();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA50F164()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA50F1A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268488 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269AE8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA50F214()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B00);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B08);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B10);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA50F36C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1DA50F3C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return SaveEpisodeAppIntent.perform()(a1);
}

uint64_t sub_1DA50F41C()
{
  sub_1DA5050E8();
  return sub_1DA66BD1C();
}

unint64_t sub_1DA50F448()
{
  unint64_t result;

  result = qword_1F0269B20;
  if (!qword_1F0269B20)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for SaveEpisodeAppIntent, &type metadata for SaveEpisodeAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269B20);
  }
  return result;
}

unint64_t sub_1DA50F490()
{
  unint64_t result;

  result = qword_1F0269B28;
  if (!qword_1F0269B28)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for SaveEpisodeAppIntent, &type metadata for SaveEpisodeAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269B28);
  }
  return result;
}

uint64_t sub_1DA50F4D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA50F4E4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SaveEpisodeAppIntent()
{
  return &type metadata for SaveEpisodeAppIntent;
}

uint64_t sub_1DA50F514()
{
  return sub_1DA4841D4(&qword_1F0269B38, &qword_1F0269B40, MEMORY[0x1E0C916B0]);
}

uint64_t PlayEpisodeLastAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;

  v27 = a1;
  v1 = sub_1DA66C004();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269738);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66C220();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v28 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v18 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269740);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v19 = type metadata accessor for EpisodeEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_1DA66BD58();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0C91738], v26);
  sub_1DA505720();
  result = sub_1DA66BE3C();
  v23 = v27;
  *v27 = v18;
  v23[1] = result;
  return result;
}

uint64_t PlayEpisodeLastAppIntent.episode.getter()
{
  return sub_1DA66BE18();
}

uint64_t PlayEpisodeLastAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for EpisodeEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA4F23B0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66BE24();
  return sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1DA50F8C4()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269B48);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269B48);
  return sub_1DA66C208();
}

uint64_t static PlayEpisodeLastAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268490 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269B48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA50F994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  __swift_allocate_value_buffer(v0, qword_1F0269B60);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F0269B60);
  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t static PlayEpisodeLastAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268498 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269B60);
  return sub_1DA505ACC(v3, a1);
}

uint64_t static PlayEpisodeLastAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static PlayEpisodeLastAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayEpisodeLastAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B78);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B80);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA50501C();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B88);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t PlayEpisodeLastAppIntent.$episode.getter()
{
  return sub_1DA66BE30();
}

uint64_t PlayEpisodeLastAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t PlayEpisodeLastAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*PlayEpisodeLastAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t PlayEpisodeLastAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*PlayEpisodeLastAppIntent.episode.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t PlayEpisodeLastAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 32) = a1;
  v3 = sub_1DA66BD58();
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 56) = swift_task_alloc();
  type metadata accessor for EpisodeEntity();
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  sub_1DA66F880();
  *(_QWORD *)(v2 + 72) = swift_task_alloc();
  type metadata accessor for EnqueueMediaItemForPlaybackIntent();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  *(_OWORD *)(v2 + 88) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA50FE00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  sub_1DA510044(*(uint64_t **)(v0 + 80));
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F0269410 + dword_1F0269410);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_1DA50FE74;
  return v3((uint64_t)v3, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1DA50FE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  sub_1DA47F880(v2, (uint64_t (*)(_QWORD))type metadata accessor for EnqueueMediaItemForPlaybackIntent);
  return swift_task_switch();
}

uint64_t sub_1DA50FEEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  sub_1DA66F874();
  sub_1DA66F868();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  sub_1DA66BDA0();
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  sub_1DA66F85C();
  swift_bridgeObjectRelease();
  sub_1DA66F868();
  sub_1DA66BD4C();
  sub_1DA66BD70();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA510044@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  char *v18;
  uint64_t v19;

  v2 = sub_1DA66D018();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for EpisodeEntity();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - v10;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  v13 = *((_QWORD *)v11 + 3);
  v12 = *((_QWORD *)v11 + 4);
  swift_bridgeObjectRetain();
  sub_1DA47F880((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DA678510;
    *(_QWORD *)(v14 + 32) = v13;
    *(_QWORD *)(v14 + 40) = v12;
    *a1 = v14;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(a1, *MEMORY[0x1E0D7DF28], v2);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269BC0);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DA678510;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    v16 = *((_QWORD *)v8 + 5);
    sub_1DA47F880((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
    *(_QWORD *)(v15 + 32) = v16;
    *v5 = v15;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0D7DF58], v2);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 32))(a1, v5, v2);
  }
  result = type metadata accessor for EnqueueMediaItemForPlaybackIntent();
  v18 = (char *)a1 + *(int *)(result + 20);
  *(_QWORD *)v18 = 1;
  v18[8] = 2;
  return result;
}

unint64_t sub_1DA510264()
{
  unint64_t result;

  result = qword_1F0269B98;
  if (!qword_1F0269B98)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayEpisodeLastAppIntent, &type metadata for PlayEpisodeLastAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269B98);
  }
  return result;
}

unint64_t sub_1DA5102AC()
{
  unint64_t result;

  result = qword_1F0269BA0;
  if (!qword_1F0269BA0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayEpisodeLastAppIntent, &type metadata for PlayEpisodeLastAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269BA0);
  }
  return result;
}

uint64_t sub_1DA5102F0()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1DA510314()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA510324@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268490 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269B48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA510394()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B78);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B80);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269B88);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA5104F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268498 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269B60);
  return sub_1DA505ACC(v3, a1);
}

uint64_t sub_1DA510554(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return PlayEpisodeLastAppIntent.perform()(a1);
}

uint64_t sub_1DA5105A8()
{
  sub_1DA50501C();
  return sub_1DA66BD1C();
}

ValueMetadata *type metadata accessor for PlayEpisodeLastAppIntent()
{
  return &type metadata for PlayEpisodeLastAppIntent;
}

uint64_t sub_1DA5105F0()
{
  return sub_1DA4841D4(&qword_1F0269BB0, &qword_1F0269BB8, MEMORY[0x1E0C916B0]);
}

uint64_t PlayEpisodeNextAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;

  v27 = a1;
  v1 = sub_1DA66C004();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269738);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66C220();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v28 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v18 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269740);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v19 = type metadata accessor for EpisodeEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_1DA66BD58();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0C91738], v26);
  sub_1DA505720();
  result = sub_1DA66BE3C();
  v23 = v27;
  *v27 = v18;
  v23[1] = result;
  return result;
}

uint64_t PlayEpisodeNextAppIntent.episode.getter()
{
  return sub_1DA66BE18();
}

uint64_t PlayEpisodeNextAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for EpisodeEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA4F23B0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66BE24();
  return sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1DA5109A0()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269BC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269BC8);
  return sub_1DA66C208();
}

uint64_t static PlayEpisodeNextAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684A0 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269BC8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA510A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  __swift_allocate_value_buffer(v0, qword_1F0269BE0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F0269BE0);
  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t static PlayEpisodeNextAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684A8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269BE0);
  return sub_1DA505ACC(v3, a1);
}

uint64_t static PlayEpisodeNextAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static PlayEpisodeNextAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayEpisodeNextAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269BF8);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269C00);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA505060();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269C08);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t PlayEpisodeNextAppIntent.$episode.getter()
{
  return sub_1DA66BE30();
}

uint64_t PlayEpisodeNextAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t PlayEpisodeNextAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*PlayEpisodeNextAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t PlayEpisodeNextAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*PlayEpisodeNextAppIntent.episode.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t PlayEpisodeNextAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 32) = a1;
  v3 = sub_1DA66BD58();
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 56) = swift_task_alloc();
  type metadata accessor for EpisodeEntity();
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  sub_1DA66F880();
  *(_QWORD *)(v2 + 72) = swift_task_alloc();
  type metadata accessor for EnqueueMediaItemForPlaybackIntent();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  *(_OWORD *)(v2 + 88) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA510EE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  sub_1DA511124(*(uint64_t **)(v0 + 80));
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F0269400 + dword_1F0269400);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_1DA510F54;
  return v3((uint64_t)v3, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1DA510F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  sub_1DA47F880(v2, (uint64_t (*)(_QWORD))type metadata accessor for EnqueueMediaItemForPlaybackIntent);
  return swift_task_switch();
}

uint64_t sub_1DA510FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  sub_1DA66F874();
  sub_1DA66F868();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  sub_1DA66BDA0();
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  sub_1DA66F85C();
  swift_bridgeObjectRelease();
  sub_1DA66F868();
  sub_1DA66BD4C();
  sub_1DA66BD70();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA511124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  char *v18;
  uint64_t v19;

  v2 = sub_1DA66D018();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for EpisodeEntity();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - v10;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  v13 = *((_QWORD *)v11 + 3);
  v12 = *((_QWORD *)v11 + 4);
  swift_bridgeObjectRetain();
  sub_1DA47F880((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DA678510;
    *(_QWORD *)(v14 + 32) = v13;
    *(_QWORD *)(v14 + 40) = v12;
    *a1 = v14;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(a1, *MEMORY[0x1E0D7DF28], v2);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269BC0);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DA678510;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    v16 = *((_QWORD *)v8 + 5);
    sub_1DA47F880((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
    *(_QWORD *)(v15 + 32) = v16;
    *v5 = v15;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0D7DF58], v2);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 32))(a1, v5, v2);
  }
  result = type metadata accessor for EnqueueMediaItemForPlaybackIntent();
  v18 = (char *)a1 + *(int *)(result + 20);
  *(_QWORD *)v18 = 0;
  v18[8] = 2;
  return result;
}

unint64_t sub_1DA511340()
{
  unint64_t result;

  result = qword_1F0269C18;
  if (!qword_1F0269C18)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayEpisodeNextAppIntent, &type metadata for PlayEpisodeNextAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269C18);
  }
  return result;
}

unint64_t sub_1DA511388()
{
  unint64_t result;

  result = qword_1F0269C20;
  if (!qword_1F0269C20)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayEpisodeNextAppIntent, &type metadata for PlayEpisodeNextAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269C20);
  }
  return result;
}

uint64_t sub_1DA5113CC()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1DA5113F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA511400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684A0 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269BC8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA511470()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269BF8);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269C00);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269C08);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA5115D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684A8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269BE0);
  return sub_1DA505ACC(v3, a1);
}

uint64_t sub_1DA511634(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return PlayEpisodeNextAppIntent.perform()(a1);
}

uint64_t sub_1DA511688()
{
  sub_1DA505060();
  return sub_1DA66BD1C();
}

ValueMetadata *type metadata accessor for PlayEpisodeNextAppIntent()
{
  return &type metadata for PlayEpisodeNextAppIntent;
}

uint64_t sub_1DA5116D0()
{
  return sub_1DA4841D4(&qword_1F0269C30, &qword_1F0269C38, MEMORY[0x1E0C916B0]);
}

uint64_t DownloadEpisodesAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  uint64_t v23;

  v21 = a1;
  v20 = sub_1DA66C004();
  v1 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66C220();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v22 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v15 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02698A8);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v23 = 0;
  v16 = sub_1DA66BD58();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v9, 1, 1, v16);
  v17(v6, 1, 1, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0C91738], v20);
  sub_1DA505720();
  result = sub_1DA66BE3C();
  v19 = v21;
  *v21 = v15;
  v19[1] = result;
  return result;
}

uint64_t DownloadEpisodesAppIntent.episodes.getter()
{
  uint64_t v1;

  sub_1DA66BE18();
  return v1;
}

uint64_t DownloadEpisodesAppIntent.episodes.setter()
{
  return sub_1DA66BE24();
}

uint64_t sub_1DA5119E0()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269C40);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269C40);
  return sub_1DA66C208();
}

uint64_t static DownloadEpisodesAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684B0 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269C40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static DownloadEpisodesAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t static DownloadEpisodesAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static DownloadEpisodesAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static DownloadEpisodesAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269C58);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269C60);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA504F0C();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269C68);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t DownloadEpisodesAppIntent.$episodes.getter()
{
  return sub_1DA66BE30();
}

uint64_t DownloadEpisodesAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t DownloadEpisodesAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*DownloadEpisodesAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t DownloadEpisodesAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*DownloadEpisodesAppIntent.episodes.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t DownloadEpisodesAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 40) = a1;
  v3 = type metadata accessor for EpisodeEntity();
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  v4 = sub_1DA66DEF4();
  *(_QWORD *)(v2 + 72) = v4;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  *(_OWORD *)(v2 + 96) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA511E58()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  sub_1DA66DE28();
  swift_retain_n();
  swift_retain_n();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FDC0();
  if (os_log_type_enabled(v1, v2))
  {
    v29 = v0[10];
    v30 = v0[9];
    v31 = v0[11];
    v3 = v0[6];
    v4 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v33 = v28;
    *(_DWORD *)v4 = 136315138;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    v5 = MEMORY[0x1DF09E488](v0[3], v3);
    v7 = v6;
    swift_bridgeObjectRelease();
    v0[4] = sub_1DA49AD00(v5, v7, &v33);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1DA478000, v1, v2, "Received a request to download episodes: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v28, -1, -1);
    MEMORY[0x1DF0A0474](v4, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v9 = v0[10];
    v8 = v0[11];
    v10 = v0[9];
    swift_release_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  v11 = v0[2];
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = v0[7];
    v14 = v0[8];
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1DA509D34(0, v12, 0);
    v15 = v11 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v16 = *(_QWORD *)(v13 + 72);
    do
    {
      sub_1DA4F23B0(v15, v0[8]);
      v17 = *(void **)(v14 + 16);
      if (v17)
      {
        v18 = 2;
        v19 = *(_QWORD *)(v14 + 16);
      }
      else
      {
        v18 = 0;
        v19 = *(_QWORD *)(v14 + 40);
      }
      v20 = v0[8];
      v21 = v17;
      sub_1DA509D50(v20);
      v22 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA509D34(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v33;
      }
      v24 = *(_QWORD *)(v22 + 16);
      v23 = *(_QWORD *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1DA509D34(v23 > 1, v24 + 1, 1);
        v22 = v33;
      }
      *(_QWORD *)(v22 + 16) = v24 + 1;
      v25 = v22 + 24 * v24;
      *(_QWORD *)(v25 + 32) = v19;
      *(_QWORD *)(v25 + 40) = 0;
      *(_BYTE *)(v25 + 48) = v18;
      v15 += v16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
  }
  v0[14] = v22;
  v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F02693F8 + dword_1F02693F8);
  v26 = (_QWORD *)swift_task_alloc();
  v0[15] = v26;
  *v26 = v0;
  v26[1] = sub_1DA50F0AC;
  return v32((uint64_t)v32, v22, v0[12]);
}

uint64_t sub_1DA512214@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684B0 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269C40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA512288@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1DA5122E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return DownloadEpisodesAppIntent.perform()(a1);
}

uint64_t sub_1DA512338()
{
  sub_1DA504F0C();
  return sub_1DA66BD1C();
}

unint64_t sub_1DA512364()
{
  unint64_t result;

  result = qword_1F0269C78;
  if (!qword_1F0269C78)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for DownloadEpisodesAppIntent, &type metadata for DownloadEpisodesAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269C78);
  }
  return result;
}

unint64_t sub_1DA5123AC()
{
  unint64_t result;

  result = qword_1F0269C80;
  if (!qword_1F0269C80)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for DownloadEpisodesAppIntent, &type metadata for DownloadEpisodesAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269C80);
  }
  return result;
}

uint64_t sub_1DA5123F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA512400()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DownloadEpisodesAppIntent()
{
  return &type metadata for DownloadEpisodesAppIntent;
}

uint64_t sub_1DA512430()
{
  return sub_1DA4841D4(&qword_1F0269C90, &qword_1F0269C98, MEMORY[0x1E0C916B0]);
}

uint64_t UnfollowShowAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;

  v27 = a1;
  v1 = sub_1DA66C004();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269350);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66C220();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v28 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v18 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A98);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v19 = type metadata accessor for ShowEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_1DA66BD58();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E0C91738], v26);
  sub_1DA512730();
  result = sub_1DA66BE3C();
  v23 = v27;
  *v27 = v18;
  v23[1] = result;
  return result;
}

unint64_t sub_1DA512730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE3AF0;
  if (!qword_1EDAE3AF0)
  {
    v1 = type metadata accessor for ShowEntity();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ShowEntity, v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE3AF0);
  }
  return result;
}

uint64_t UnfollowShowAppIntent.show.getter()
{
  return sub_1DA66BE18();
}

uint64_t UnfollowShowAppIntent.show.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for ShowEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA4E6FEC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66BE24();
  return sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
}

uint64_t sub_1DA512820()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269CA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269CA0);
  return sub_1DA66C208();
}

uint64_t static UnfollowShowAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1F02684B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1F0269CA0, a1);
}

uint64_t sub_1DA5128AC()
{
  uint64_t v0;

  v0 = sub_1DA66BF68();
  __swift_allocate_value_buffer(v0, qword_1F0269CB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269CB8);
  return sub_1DA66BF5C();
}

uint64_t static UnfollowShowAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1F02684C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1F0269CB8, a1);
}

uint64_t static UnfollowShowAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static UnfollowShowAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static UnfollowShowAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269CD0);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269CD8);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA5052C4();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269CE0);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t UnfollowShowAppIntent.$show.getter()
{
  return sub_1DA66BE30();
}

uint64_t UnfollowShowAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t UnfollowShowAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*UnfollowShowAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t UnfollowShowAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*UnfollowShowAppIntent.show.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t UnfollowShowAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  type metadata accessor for UnfollowShowIntent();
  *(_QWORD *)(v2 + 24) = swift_task_alloc();
  *(_QWORD *)(v2 + 32) = type metadata accessor for ShowEntity();
  *(_QWORD *)(v2 + 40) = swift_task_alloc();
  *(_OWORD *)(v2 + 48) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA512C70()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 40);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  sub_1DA66BDA0();
  v2 = *(unsigned __int8 *)(v0 + 80);
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  if (v2 == 1)
  {
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE18();
    swift_release();
    swift_release();
    v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F02693E8 + dword_1F02693E8);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v3;
    *v3 = v0;
    v3[1] = sub_1DA512DB0;
    return v5((uint64_t)v5, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  }
  else
  {
    sub_1DA66BD7C();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DA512DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  sub_1DA47F880(v2, (uint64_t (*)(_QWORD))type metadata accessor for UnfollowShowIntent);
  return swift_task_switch();
}

uint64_t sub_1DA512E28()
{
  uint64_t v0;

  sub_1DA66BD7C();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA512E70()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA512EB4()
{
  unint64_t result;

  result = qword_1F0269CF0;
  if (!qword_1F0269CF0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UnfollowShowAppIntent, &type metadata for UnfollowShowAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269CF0);
  }
  return result;
}

unint64_t sub_1DA512EFC()
{
  unint64_t result;

  result = qword_1F0269CF8;
  if (!qword_1F0269CF8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UnfollowShowAppIntent, &type metadata for UnfollowShowAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269CF8);
  }
  return result;
}

uint64_t sub_1DA512F40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA512F50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA512F60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684B8 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269CA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA512FD0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269CD0);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269CD8);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269CE0);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA513130(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return UnfollowShowAppIntent.perform()(a1);
}

uint64_t sub_1DA513184()
{
  sub_1DA5052C4();
  return sub_1DA66BD1C();
}

ValueMetadata *type metadata accessor for UnfollowShowAppIntent()
{
  return &type metadata for UnfollowShowAppIntent;
}

uint64_t sub_1DA5131CC()
{
  return sub_1DA4841D4(&qword_1F0269D08, &qword_1F0269D10, MEMORY[0x1E0C916B0]);
}

uint64_t RemoveEpisodesDownloadAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  uint64_t v23;

  v21 = a1;
  v20 = sub_1DA66C004();
  v1 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66C220();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v22 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  v15 = sub_1DA66BCBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02698A8);
  sub_1DA66C208();
  sub_1DA66C208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v23 = 0;
  v16 = sub_1DA66BD58();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v9, 1, 1, v16);
  v17(v6, 1, 1, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0C91738], v20);
  sub_1DA505720();
  result = sub_1DA66BE3C();
  v19 = v21;
  *v21 = v15;
  v19[1] = result;
  return result;
}

uint64_t RemoveEpisodesDownloadAppIntent.episodes.getter()
{
  uint64_t v1;

  sub_1DA66BE18();
  return v1;
}

uint64_t RemoveEpisodesDownloadAppIntent.episodes.setter()
{
  return sub_1DA66BE24();
}

uint64_t sub_1DA5134DC()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269D18);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269D18);
  return sub_1DA66C208();
}

uint64_t static RemoveEpisodesDownloadAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684C8 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269D18);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static RemoveEpisodesDownloadAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t static RemoveEpisodesDownloadAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static RemoveEpisodesDownloadAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static RemoveEpisodesDownloadAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269D30);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269D38);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA5050A4();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269D40);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t RemoveEpisodesDownloadAppIntent.$episodes.getter()
{
  return sub_1DA66BE30();
}

uint64_t RemoveEpisodesDownloadAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t RemoveEpisodesDownloadAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*RemoveEpisodesDownloadAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t RemoveEpisodesDownloadAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t (*RemoveEpisodesDownloadAppIntent.episodes.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t RemoveEpisodesDownloadAppIntent.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(type metadata accessor for EpisodeEntity() - 8);
  *(_QWORD *)(v2 + 40) = swift_task_alloc();
  *(_OWORD *)(v2 + 48) = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA513928()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  v1 = v0[2];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v0[4];
    v4 = v0[5];
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1DA509D34(0, v2, 0);
    v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v6 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1DA4F23B0(v5, v0[5]);
      v7 = *(void **)(v4 + 16);
      if (v7)
      {
        v8 = 2;
        v9 = *(_QWORD *)(v4 + 16);
      }
      else
      {
        v8 = 0;
        v9 = *(_QWORD *)(v4 + 40);
      }
      v10 = v0[5];
      v11 = v7;
      sub_1DA509D50(v10);
      v12 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA509D34(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v12 = v19;
      }
      v14 = *(_QWORD *)(v12 + 16);
      v13 = *(_QWORD *)(v12 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1DA509D34(v13 > 1, v14 + 1, 1);
        v12 = v19;
      }
      *(_QWORD *)(v12 + 16) = v14 + 1;
      v15 = v12 + 24 * v14;
      *(_QWORD *)(v15 + 32) = v9;
      *(_QWORD *)(v15 + 40) = 0;
      *(_BYTE *)(v15 + 48) = v8;
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v0[8] = v12;
  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1F02693E0 + dword_1F02693E0);
  v16 = (_QWORD *)swift_task_alloc();
  v0[9] = v16;
  *v16 = v0;
  v16[1] = sub_1DA513AFC;
  return v18((uint64_t)v18, v12, v0[6]);
}

uint64_t sub_1DA513AFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA513B68()
{
  uint64_t v0;

  sub_1DA66BD7C();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA513BA8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA513BDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684C8 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269D18);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA513C50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1DA513CAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return RemoveEpisodesDownloadAppIntent.perform()(a1);
}

uint64_t sub_1DA513D00()
{
  sub_1DA5050A4();
  return sub_1DA66BD1C();
}

unint64_t sub_1DA513D2C()
{
  unint64_t result;

  result = qword_1F0269D50;
  if (!qword_1F0269D50)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RemoveEpisodesDownloadAppIntent, &type metadata for RemoveEpisodesDownloadAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269D50);
  }
  return result;
}

unint64_t sub_1DA513D74()
{
  unint64_t result;

  result = qword_1F0269D58;
  if (!qword_1F0269D58)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RemoveEpisodesDownloadAppIntent, &type metadata for RemoveEpisodesDownloadAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269D58);
  }
  return result;
}

uint64_t sub_1DA513DB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA513DC8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for RemoveEpisodesDownloadAppIntent()
{
  return &type metadata for RemoveEpisodesDownloadAppIntent;
}

uint64_t sub_1DA513DF8()
{
  return sub_1DA4841D4(&qword_1F0269D68, &qword_1F0269D70, MEMORY[0x1E0C916B0]);
}

uint64_t IntentDispatching.dispatch<A>(intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[12] = a6;
  v7[13] = v6;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA513E48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  _QWORD *v4;

  v1 = v0[9];
  v2 = *(_QWORD *)(v0[11] + 8);
  v0[14] = v2;
  v3 = *(uint64_t (**)(uint64_t))(v2 + 8);
  v0[15] = v3;
  v0[16] = v3(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v4 = (_QWORD *)swift_task_alloc();
  v0[17] = v4;
  *v4 = v0;
  v4[1] = sub_1DA513EE4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA513EE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA513F50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[14];
  v2 = (uint64_t (*)(uint64_t, uint64_t))v0[15];
  v3 = v0[9];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  v0[19] = v2(v3, v1);
  v4 = (_QWORD *)swift_task_alloc();
  v0[20] = v4;
  *v4 = v0;
  v4[1] = sub_1DA514004;
  return sub_1DA66EE90();
}

uint64_t sub_1DA514004()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA514070()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5140A4()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FetchShowLatestEpisodesAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t *v28;
  void (*v29)(char *);
  unsigned int v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char v39;
  uint64_t v40;
  char v41;

  v38 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269DB0);
  v36 = *(_QWORD *)(v1 - 8);
  v37 = v1;
  MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1DA66C004();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269330);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269350);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AD0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DA66C220();
  v19 = *(_QWORD *)(v18 - 8);
  v33 = v18;
  MEMORY[0x1E0C80A78](v18);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269A98);
  sub_1DA66C208();
  sub_1DA66C208();
  v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v32(v17, 0, 1, v18);
  v20 = type metadata accessor for ShowEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
  v21 = sub_1DA66BD58();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v11, 1, 1, v21);
  v22(v8, 1, 1, v21);
  v30 = *MEMORY[0x1E0C91738];
  v29 = *(void (**)(char *))(v3 + 104);
  v23 = v34;
  v29(v5);
  sub_1DA47E32C((unint64_t *)&qword_1EDAE3AF0, (uint64_t (*)(uint64_t))type metadata accessor for ShowEntity, (uint64_t)&protocol conformance descriptor for ShowEntity);
  v24 = v11;
  v25 = sub_1DA66BE3C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269DB8);
  sub_1DA66C208();
  sub_1DA66C208();
  v32(v17, 0, 1, v33);
  v40 = 10;
  v41 = 0;
  v22(v24, 1, 1, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v35, *MEMORY[0x1E0C90D28], v37);
  ((void (*)(char *, _QWORD, uint64_t))v29)(v5, v30, v23);
  v26 = sub_1DA66BE54();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  v39 = 2;
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  v28 = v38;
  *v38 = v25;
  v28[1] = v26;
  v28[2] = result;
  return result;
}

uint64_t FetchShowLatestEpisodesAppIntent.show.getter()
{
  return sub_1DA66BE18();
}

uint64_t sub_1DA514534()
{
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DA514594(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for ShowEntity();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1DA4E6FEC(a1, (uint64_t)&v9 - v6);
  sub_1DA4E6FEC((uint64_t)v7, (uint64_t)v4);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE24();
  sub_1DA47F880((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t FetchShowLatestEpisodesAppIntent.show.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for ShowEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1DA4E6FEC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66BE24();
  return sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
}

uint64_t sub_1DA51470C()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269D80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269D80);
  return sub_1DA66C208();
}

uint64_t static FetchShowLatestEpisodesAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684D0 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269D80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA5147E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  __swift_allocate_value_buffer(v0, qword_1F0269D98);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F0269D98);
  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t static FetchShowLatestEpisodesAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684D8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269D98);
  return sub_1DA505ACC(v3, a1);
}

uint64_t static FetchShowLatestEpisodesAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static FetchShowLatestEpisodesAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static FetchShowLatestEpisodesAppIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269DC0);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269DC8);
  MEMORY[0x1E0C80A78](v1);
  sub_1DA50523C();
  sub_1DA66BFE0();
  sub_1DA66BFD4();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269DD0);
  sub_1DA66BFC8();
  swift_release();
  sub_1DA66BFD4();
  sub_1DA66BFF8();
  return sub_1DA66BFBC();
}

uint64_t FetchShowLatestEpisodesAppIntent.$show.getter()
{
  return sub_1DA66BE30();
}

uint64_t sub_1DA514A64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  v2 = sub_1DA66BE30();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t (*FetchShowLatestEpisodesAppIntent.show.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t FetchShowLatestEpisodesAppIntent.limit.getter()
{
  uint64_t v1;

  sub_1DA66BE18();
  return v1;
}

uint64_t sub_1DA514B50@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA514BC4()
{
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE24();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t FetchShowLatestEpisodesAppIntent.limit.setter()
{
  return sub_1DA66BE24();
}

uint64_t (*FetchShowLatestEpisodesAppIntent.limit.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BE0C();
  return sub_1DA4F7884;
}

uint64_t FetchShowLatestEpisodesAppIntent.$limit.getter()
{
  return sub_1DA66BE30();
}

uint64_t FetchShowLatestEpisodesAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t sub_1DA514CFC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BC98();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA514D70()
{
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BCA4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t FetchShowLatestEpisodesAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t (*FetchShowLatestEpisodesAppIntent.objectGraph.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7884;
}

uint64_t FetchShowLatestEpisodesAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t FetchShowLatestEpisodesAppIntent.perform()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = type metadata accessor for FetchShowLatestEpisodesIntent();
  *(_QWORD *)(v2 + 56) = swift_task_alloc();
  *(_OWORD *)(v2 + 64) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_1DA514EF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[7];
  v2 = v0[6];
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE18();
  sub_1DA66BE18();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + *(int *)(v2 + 20)) = v0[2];
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1F02693D0 + dword_1F02693D0);
  v3 = (_QWORD *)swift_task_alloc();
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_1DA514FD8;
  return v5(v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_1DA514FD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 56);
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  sub_1DA47F880(v4, (uint64_t (*)(_QWORD))type metadata accessor for FetchShowLatestEpisodesIntent);
  return swift_task_switch();
}

uint64_t sub_1DA515058()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  v0[3] = v0[12];
  v4 = (_QWORD *)swift_allocObject();
  v0[14] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  v5 = (_QWORD *)swift_task_alloc();
  v0[15] = v5;
  v0[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269628);
  sub_1DA4841D4(&qword_1F0269DF0, &qword_1F0269628, MEMORY[0x1E0DEAF50]);
  *v5 = v0;
  v5[1] = sub_1DA51514C;
  return sub_1DA66FCE8();
}

uint64_t sub_1DA51514C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 144) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA5151D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 144);
  sub_1DA505384();
  sub_1DA66BD64();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA515250()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA515284()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5152CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return swift_task_switch();
}

uint64_t sub_1DA5152E8()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BC98();
  swift_release();
  swift_release();
  swift_release();
  v0[12] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1DA5153B4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA5153B4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;

  v2 = (_QWORD *)*v1;
  v2[14] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = v2[8];
  v5 = type metadata accessor for EpisodeEntity();
  v2[15] = v5;
  v6 = v4 + *(int *)(v5 + 84);
  v8 = (char *)&dword_1F026DC98 + dword_1F026DC98;
  v7 = (_QWORD *)swift_task_alloc();
  v2[16] = v7;
  *v7 = v2;
  v7[1] = sub_1DA51548C;
  return ((uint64_t (*)(uint64_t, _QWORD *))v8)(v6, v2 + 2);
}

uint64_t sub_1DA51548C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 136) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 144) = a2;
    *(_QWORD *)(v6 + 152) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA515504()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA515538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v5 = v4 + *(int *)(v3 + 88);
  sub_1DA49873C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  swift_release();
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5155A8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5155E4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA515618(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1DA4AD77C;
  *(_QWORD *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 72) = v6;
  *(_QWORD *)(v5 + 64) = a1;
  return swift_task_switch();
}

unint64_t sub_1DA515694()
{
  unint64_t result;

  result = qword_1F0269DF8;
  if (!qword_1F0269DF8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FetchShowLatestEpisodesAppIntent, &type metadata for FetchShowLatestEpisodesAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269DF8);
  }
  return result;
}

unint64_t sub_1DA5156DC()
{
  unint64_t result;

  result = qword_1F0269E00;
  if (!qword_1F0269E00)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FetchShowLatestEpisodesAppIntent, &type metadata for FetchShowLatestEpisodesAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269E00);
  }
  return result;
}

uint64_t sub_1DA515720()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1DA515744()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA515754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684D0 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269D80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA5157C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684D8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269D98);
  return sub_1DA505ACC(v3, a1);
}

uint64_t sub_1DA515828(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return FetchShowLatestEpisodesAppIntent.perform()(a1);
}

uint64_t sub_1DA51587C()
{
  sub_1DA50523C();
  return sub_1DA66BD1C();
}

uint64_t sub_1DA5158A4()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t destroy for FetchShowLatestEpisodesAppIntent()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s10PodcastsUI32FetchShowLatestEpisodesAppIntentVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  return a1;
}

_QWORD *assignWithCopy for FetchShowLatestEpisodesAppIntent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1DA66BE60();
  swift_release();
  a1[1] = a2[1];
  sub_1DA66BE60();
  swift_release();
  a1[2] = a2[2];
  sub_1DA66BE60();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FetchShowLatestEpisodesAppIntent(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchShowLatestEpisodesAppIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchShowLatestEpisodesAppIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchShowLatestEpisodesAppIntent()
{
  return &type metadata for FetchShowLatestEpisodesAppIntent;
}

uint64_t sub_1DA515AD8()
{
  return sub_1DA4841D4(&qword_1F0269E10, &qword_1F0269E18, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1DA515B04()
{
  return sub_1DA4841D4(&qword_1F0269E20, &qword_1F0269E28, MEMORY[0x1E0C915A0]);
}

uint64_t PlayNextChapterAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  *a1 = result;
  return result;
}

uint64_t sub_1DA515BB4()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269E30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269E30);
  return sub_1DA66C208();
}

uint64_t static PlayNextChapterAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684E0 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269E30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA515C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  __swift_allocate_value_buffer(v0, qword_1F0269E48);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F0269E48);
  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t static PlayNextChapterAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684E8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269E48);
  return sub_1DA505ACC(v3, a1);
}

uint64_t static PlayNextChapterAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static PlayNextChapterAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayNextChapterAppIntent.parameterSummary.getter()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269E60);
  MEMORY[0x1E0C80A78](v0);
  sub_1DA505170();
  sub_1DA66BFEC();
  return sub_1DA66BFBC();
}

uint64_t PlayNextChapterAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t sub_1DA515E60@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1DA66BE60();
  sub_1DA66BC98();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA515EA8()
{
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

uint64_t PlayNextChapterAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

void (*PlayNextChapterAppIntent.objectGraph.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7AE4;
}

uint64_t PlayNextChapterAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t PlayNextChapterAppIntent.perform()(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v2[2] = a1;
  v3 = sub_1DA66BD58();
  v2[3] = v3;
  v2[4] = *(_QWORD *)(v3 - 8);
  v2[5] = swift_task_alloc();
  sub_1DA66F880();
  v2[6] = swift_task_alloc();
  v4 = sub_1DA66C9AC();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v2[9] = v5;
  v6 = *v1;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F02693C0 + dword_1F02693C0);
  v7 = (_QWORD *)swift_task_alloc();
  v2[10] = v7;
  *v7 = v2;
  v7[1] = sub_1DA51607C;
  return v9(v5, v6);
}

uint64_t sub_1DA51607C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5160E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  sub_1DA66F874();
  sub_1DA66F868();
  sub_1DA66C9A0();
  sub_1DA66F85C();
  swift_bridgeObjectRelease();
  sub_1DA66F868();
  sub_1DA66BD4C();
  sub_1DA66BD70();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5161EC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  sub_1DA506734(v1, *(_QWORD *)(v0 + 40));
  sub_1DA66BD70();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA516280()
{
  unint64_t result;

  result = qword_1F0269E70;
  if (!qword_1F0269E70)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayNextChapterAppIntent, &type metadata for PlayNextChapterAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269E70);
  }
  return result;
}

unint64_t sub_1DA5162C8()
{
  unint64_t result;

  result = qword_1F0269E78;
  if (!qword_1F0269E78)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayNextChapterAppIntent, &type metadata for PlayNextChapterAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269E78);
  }
  return result;
}

uint64_t sub_1DA51630C()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1DA516330()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA516340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684E0 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269E30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA5163B0()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269E60);
  MEMORY[0x1E0C80A78](v0);
  sub_1DA66BFEC();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA51645C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684E8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269E48);
  return sub_1DA505ACC(v3, a1);
}

uint64_t sub_1DA5164BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return PlayNextChapterAppIntent.perform()(a1);
}

uint64_t sub_1DA51650C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  *a1 = result;
  return result;
}

uint64_t sub_1DA516590()
{
  sub_1DA505170();
  return sub_1DA66BD1C();
}

ValueMetadata *type metadata accessor for PlayNextChapterAppIntent()
{
  return &type metadata for PlayNextChapterAppIntent;
}

uint64_t sub_1DA5165D0()
{
  return sub_1DA4841D4(&qword_1F0269E88, &qword_1F0269E90, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1DA5165FC()
{
  return sub_1DA4841D4(&qword_1F0269798, &qword_1F02697A0, MEMORY[0x1E0C915B0]);
}

uint64_t PlayPreviousChapterAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D950);
  sub_1DA4F7DB0();
  sub_1DA6703F0();
  sub_1DA66BCD4();
  sub_1DA66BCC8();
  result = sub_1DA66BCBC();
  *a1 = result;
  return result;
}

uint64_t sub_1DA5166AC()
{
  uint64_t v0;

  v0 = sub_1DA66C220();
  __swift_allocate_value_buffer(v0, qword_1F0269E98);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0269E98);
  return sub_1DA66C208();
}

uint64_t static PlayPreviousChapterAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684F0 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269E98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA51677C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  __swift_allocate_value_buffer(v0, qword_1F0269EB0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F0269EB0);
  sub_1DA66BF5C();
  v2 = sub_1DA66BF68();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t static PlayPreviousChapterAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684F8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269EB0);
  return sub_1DA505ACC(v3, a1);
}

uint64_t static PlayPreviousChapterAppIntent.isDiscoverable.getter()
{
  return 0;
}

uint64_t static PlayPreviousChapterAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayPreviousChapterAppIntent.parameterSummary.getter()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269EC8);
  MEMORY[0x1E0C80A78](v0);
  sub_1DA5051B4();
  sub_1DA66BFEC();
  return sub_1DA66BFBC();
}

uint64_t PlayPreviousChapterAppIntent.objectGraph.getter()
{
  uint64_t v1;

  sub_1DA66BC98();
  return v1;
}

uint64_t PlayPreviousChapterAppIntent.objectGraph.setter()
{
  sub_1DA66BE60();
  sub_1DA66BCA4();
  return swift_release();
}

void (*PlayPreviousChapterAppIntent.objectGraph.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA66BC8C();
  return sub_1DA4F7AE4;
}

uint64_t PlayPreviousChapterAppIntent.$objectGraph.getter()
{
  return sub_1DA66BCB0();
}

uint64_t PlayPreviousChapterAppIntent.perform()(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v2[2] = a1;
  v3 = sub_1DA66BD58();
  v2[3] = v3;
  v2[4] = *(_QWORD *)(v3 - 8);
  v2[5] = swift_task_alloc();
  sub_1DA66F880();
  v2[6] = swift_task_alloc();
  v4 = sub_1DA66C9AC();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v2[9] = v5;
  v6 = *v1;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1F02693B0 + dword_1F02693B0);
  v7 = (_QWORD *)swift_task_alloc();
  v2[10] = v7;
  *v7 = v2;
  v7[1] = sub_1DA51607C;
  return v9(v5, v6);
}

unint64_t sub_1DA516AE8()
{
  unint64_t result;

  result = qword_1F0269ED8;
  if (!qword_1F0269ED8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayPreviousChapterAppIntent, &type metadata for PlayPreviousChapterAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269ED8);
  }
  return result;
}

unint64_t sub_1DA516B30()
{
  unint64_t result;

  result = qword_1F0269EE0;
  if (!qword_1F0269EE0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlayPreviousChapterAppIntent, &type metadata for PlayPreviousChapterAppIntent);
    atomic_store(result, (unint64_t *)&qword_1F0269EE0);
  }
  return result;
}

uint64_t sub_1DA516B74()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1DA516B98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA516BA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684F0 != -1)
    swift_once();
  v2 = sub_1DA66C220();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269E98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA516C18()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269EC8);
  MEMORY[0x1E0C80A78](v0);
  sub_1DA66BFEC();
  return sub_1DA66BFBC();
}

uint64_t sub_1DA516CC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F02684F8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269748);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0269EB0);
  return sub_1DA505ACC(v3, a1);
}

uint64_t sub_1DA516D24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return PlayPreviousChapterAppIntent.perform()(a1);
}

uint64_t sub_1DA516D74()
{
  sub_1DA5051B4();
  return sub_1DA66BD1C();
}

ValueMetadata *type metadata accessor for PlayPreviousChapterAppIntent()
{
  return &type metadata for PlayPreviousChapterAppIntent;
}

uint64_t sub_1DA516DB4()
{
  return sub_1DA4841D4(&qword_1F0269EF0, &qword_1F0269EF8, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1DA516DE0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v11 = MEMORY[0x1E0DEE9D8];
    result = sub_1DA509EC8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1DF09EE48](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_persistentID);

      v10 = *(_QWORD *)(v11 + 16);
      v9 = *(_QWORD *)(v11 + 24);
      if (v10 >= v9 >> 1)
        sub_1DA509EC8(v9 > 1, v10 + 1, 1);
      ++v5;
      *(_QWORD *)(v11 + 16) = v10 + 1;
      *(_QWORD *)(v11 + 8 * v10 + 32) = v8;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA516F44()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  char v16;

  *(_QWORD *)(swift_allocObject() + 16) = MEMORY[0x1E0DEE9D8];
  if ((objc_msgSend((id)objc_opt_self(), sel_isPodcastsApp) & 1) == 0
    && (objc_msgSend((id)objc_opt_self(), sel_canExtensionOpenDatabase) & 1) == 0)
  {
    swift_release();
    return 0;
  }
  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_mainQueueContext);

  MEMORY[0x1E0C80A78](v2);
  sub_1DA670054();
  if (v16 != 1)
  {

    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1DA66D9CC();
  v3 = (void *)sub_1DA66D9B4();
  v4 = MEMORY[0x1DF09C3A0]();

  if ((v4 & 1) == 0)
  {
    sub_1DA66DAF8();
    v5 = (void *)sub_1DA66DAEC();
    sub_1DA66DAE0();

  }
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel__applePodcastsFoundationSharedUserDefaults);
  v8 = (void *)*MEMORY[0x1E0D7F318];
  v9 = objc_msgSend(v7, sel_arrayForKey_, *MEMORY[0x1E0D7F318]);

  if (v9)
  {
    v10 = sub_1DA66FA9C();

    v11 = sub_1DA51866C(v10);
    swift_bridgeObjectRelease();
    if (v11)
      sub_1DA65EF14(v11);
  }
  v12 = objc_msgSend(v6, sel__applePodcastsFoundationSharedUserDefaults);
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v14 = v8;
  objc_msgSend(v12, sel_setObject_forKey_, v13, v14);
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t MPMediaLibrary.removeEpisodesExcludedByGlobalDefault(for:)()
{
  return sub_1DA516F44();
}

id MPMediaLibrary.item(for:)(void *a1)
{
  void *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = (unint64_t)objc_msgSend(a1, sel_persistentID);
  if ((v2 & 0x8000000000000000) != 0)
    return 0;
  v3 = v2;
  if (!objc_msgSend(v1, sel_itemExistsWithPersistentID_, v2))
    return 0;
  else
    return objc_msgSend(v1, sel_itemWithPersistentID_, v3);
}

MPMediaItem_optional __swiftcall MPMediaLibrary.item(for:)(Swift::UInt64 a1)
{
  void *v1;
  Swift::Bool v3;
  objc_class *v4;
  MPMediaItem_optional result;

  if (objc_msgSend(v1, sel_itemExistsWithPersistentID_, a1))
    v4 = (objc_class *)objc_msgSend(v1, sel_itemWithPersistentID_, a1);
  else
    v4 = 0;
  result.value.super.super.isa = v4;
  result.is_nil = v3;
  return result;
}

id sub_1DA5172FC@<X0>(uint64_t a1@<X1>, void *a2@<X2>, _QWORD *a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _QWORD **a7@<X7>, _BYTE *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id result;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  _QWORD *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  id v60;
  id v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  NSObject *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  _QWORD *v70;
  NSObject *v71;
  unint64_t v72;
  void *v73;
  unsigned __int8 v74;
  uint64_t v75;
  _QWORD *v76;
  id v77;
  uint64_t v78;
  void *v79;
  id v80;
  char *v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  _QWORD **v95;
  unint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t aBlock[6];
  uint64_t v104;

  v94 = a8;
  v95 = a7;
  v101 = a6;
  v102 = a2;
  v93 = a5;
  v11 = sub_1DA66DEF4();
  v92 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v88 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v91 = (char *)&v87 - v14;
  MEMORY[0x1E0C80A78](v15);
  v89 = (char *)&v87 - v16;
  if ((os_feature_enabled_serial_sort_auto_downloads() & 1) != 0)
  {
    if (a1)
    {
      v17 = a4;
      goto LABEL_9;
    }
  }
  else if (a1)
  {
    v17 = a4;
    v18 = (void *)sub_1DA66F88C();
    v19 = objc_msgSend(v102, sel_podcastForUuid_, v18);

    if (v19)
    {
      v20 = objc_msgSend(v19, sel_isSerialShowTypeInFeed);

      if (v20)
      {
        if (*a3 == 0x100000001)
          *a3 = 0;
      }
    }
LABEL_9:
    v21 = sub_1DA67000C();
    a4 = v17;
    if (!(v21 >> 62))
      goto LABEL_10;
    goto LABEL_32;
  }
  v21 = sub_1DA670018();
  if (!(v21 >> 62))
  {
LABEL_10:
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22)
      goto LABEL_11;
    goto LABEL_33;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  v22 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_11:
    v90 = v11;
    v23 = (_QWORD *)(v93 + 16);
    v100 = v21 & 0xC000000000000001;
    v24 = 4;
    v96 = v21;
    v97 = a4;
    while (1)
    {
      if (v100)
        result = (id)MEMORY[0x1DF09EE48](v24 - 4, v21);
      else
        result = *(id *)(v21 + 8 * v24);
      v28 = result;
      v29 = v24 - 3;
      if (__OFADD__(v24 - 4, 1))
      {
        __break(1u);
        return result;
      }
      v30 = objc_msgSend(v102, sel_objectWithID_, result);
      objc_opt_self();
      v31 = (void *)swift_dynamicCastObjCClass();
      if (!v31)
        break;
      v32 = v31;
      v33 = (unint64_t)objc_msgSend(v31, sel_persistentID);
      if ((v33 & 0x8000000000000000) != 0
        || (v34 = v33, !objc_msgSend(a4, sel_itemExistsWithPersistentID_, v33))
        || (v35 = objc_msgSend(a4, sel_itemWithPersistentID_, v34)) == 0)
      {
        swift_bridgeObjectRelease();
        v49 = sub_1DA670204();
        if ((v50 & 1) != 0)
        {
          v53 = 0xE700000000000000;
          v51 = 0x3E7974706D453CLL;
        }
        else
        {
          aBlock[0] = v49;
          sub_1DA4F726C();
          v51 = sub_1DA670354();
          v53 = v52;
        }
        v54 = v90;
        v55 = v91;
        sub_1DA66DEAC();
        v56 = v30;
        swift_bridgeObjectRetain();
        v57 = sub_1DA66DEDC();
        v58 = sub_1DA66FDA8();
        if (os_log_type_enabled(v57, v58))
        {
          v102 = (id)v51;
          v59 = swift_slowAlloc();
          v101 = swift_slowAlloc();
          aBlock[0] = v101;
          *(_DWORD *)v59 = 134218498;
          v60 = objc_msgSend(v32, sel_persistentID);

          v104 = (uint64_t)v60;
          sub_1DA6702C4();

          *(_WORD *)(v59 + 12) = 2080;
          v61 = objc_msgSend(v32, sel_uuid);
          if (v61)
          {
            v62 = v61;
            v63 = sub_1DA66F8BC();
            v65 = v64;

          }
          else
          {
            v65 = 0xE700000000000000;
            v63 = 0x3E7974706D453CLL;
          }
          v104 = sub_1DA49AD00(v63, v65, aBlock);
          sub_1DA6702C4();

          swift_bridgeObjectRelease();
          *(_WORD *)(v59 + 22) = 2080;
          swift_bridgeObjectRetain();
          v104 = sub_1DA49AD00((uint64_t)v102, v53, aBlock);
          sub_1DA6702C4();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1DA478000, v57, v58, "Couldn't resolve media item with persistentID %lld for removal. UUID: %s; AdamID: %s.",
            (uint8_t *)v59,
            0x20u);
          v85 = v101;
          swift_arrayDestroy();
          MEMORY[0x1DF0A0474](v85, -1, -1);
          MEMORY[0x1DF0A0474](v59, -1, -1);

          result = (id)(*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v91, v90);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          result = (id)(*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v55, v54);
        }
        goto LABEL_53;
      }
      v36 = v35;
      swift_beginAccess();
      v37 = v28;
      MEMORY[0x1DF09E464]();
      if (*(_QWORD *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DA66FAC0();
      sub_1DA66FB14();
      sub_1DA66FAB4();
      swift_endAccess();
      v38 = v36;
      v39 = (_QWORD *)v101;
      MEMORY[0x1DF09E464]();
      if (*(_QWORD *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DA66FAC0();
      sub_1DA66FB14();
      sub_1DA66FAB4();
      v40 = objc_msgSend(v32, sel_uuid);
      if (v40)
      {
        v41 = v40;
        v42 = sub_1DA66F8BC();
        v98 = v43;
        v99 = v42;

        v44 = v95;
        v45 = *v95;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v44 = v45;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v45 = sub_1DA4981C8(0, v45[2] + 1, 1, v45);
          *v95 = v45;
        }
        v48 = v45[2];
        v47 = v45[3];
        if (v48 >= v47 >> 1)
        {
          v45 = sub_1DA4981C8((_QWORD *)(v47 > 1), v48 + 1, 1, v45);
          *v95 = v45;
        }
        v45[2] = v48 + 1;
        v25 = &v45[2 * v48];
        v26 = v98;
        v25[4] = v99;
        v25[5] = v26;
      }

      ++v24;
      v21 = v96;
      a4 = v97;
      if (v29 == v22)
      {
        swift_bridgeObjectRelease();
        v11 = v90;
        goto LABEL_44;
      }
    }
    swift_bridgeObjectRelease();

    sub_1DA66DEAC();
    v66 = v28;
    v67 = sub_1DA66DEDC();
    v68 = sub_1DA66FDA8();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc();
      v70 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v69 = 138412290;
      aBlock[0] = (uint64_t)v66;
      v71 = v66;
      sub_1DA6702C4();
      *v70 = v66;

      _os_log_impl(&dword_1DA478000, v67, v68, "Couldn't fetch episode with managed object ID %@ for removal.", v69, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v70, -1, -1);
      MEMORY[0x1DF0A0474](v69, -1, -1);
    }
    else
    {

      v67 = v66;
    }
    v86 = v90;

    result = (id)(*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v89, v86);
    goto LABEL_53;
  }
LABEL_33:
  swift_bridgeObjectRelease();
LABEL_44:
  v72 = swift_bridgeObjectRetain();
  sub_1DA517D38(v72);
  swift_bridgeObjectRelease();
  v73 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v74 = objc_msgSend(a4, sel_removeItems_, v73);

  if ((v74 & 1) != 0)
  {
    v75 = swift_allocObject();
    *(_BYTE *)(v75 + 16) = 1;
    v76 = (_QWORD *)swift_allocObject();
    v77 = v102;
    v78 = v93;
    v76[2] = v102;
    v76[3] = v78;
    v76[4] = v75;
    aBlock[4] = (uint64_t)sub_1DA519A14;
    aBlock[5] = (uint64_t)v76;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1DA4A9194;
    aBlock[3] = (uint64_t)&block_descriptor_0;
    v79 = _Block_copy(aBlock);
    v80 = v77;
    sub_1DA66BE60();
    sub_1DA66BE60();
    swift_release();
    objc_msgSend(v80, sel_performBlockAndWaitWithSave_, v79);
    _Block_release(v79);
    swift_beginAccess();
    *v94 = *(_BYTE *)(v75 + 16);
    return (id)swift_release();
  }
  v81 = v88;
  sub_1DA66DEAC();
  v82 = sub_1DA66DEDC();
  v83 = sub_1DA66FDA8();
  if (os_log_type_enabled(v82, v83))
  {
    v84 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v84 = 0;
    _os_log_impl(&dword_1DA478000, v82, v83, "Failed to remove episode assets from Media Library.", v84, 2u);
    MEMORY[0x1DF0A0474](v84, -1, -1);
  }

  result = (id)(*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v81, v11);
LABEL_53:
  *v94 = 0;
  return result;
}

uint64_t sub_1DA517D38(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1DA509E88(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1DF09EE48](i, a1);
        sub_1DA47D774(0, &qword_1EDAE2010);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DA509E88(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1DA509E88(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_1DA49ACF0(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_1DA47D774(0, &qword_1EDAE2010);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DA509E88(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1DA509E88(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_1DA49ACF0(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA517F98(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v10;
  ValueMetadata *v11;
  _UNKNOWN **v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1DA509F44(0, v1, 0);
    v2 = v13;
    v4 = (_BYTE *)(a1 + 40);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *v4;
      v13 = v2;
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1DA509F44(v7 > 1, v8 + 1, 1);
        v2 = v13;
      }
      v4 += 16;
      v11 = &type metadata for PlaybackController.TransportCommand;
      v12 = &protocol witness table for PlaybackController.TransportCommand;
      *(_QWORD *)&v10 = v5;
      BYTE8(v10) = v6;
      *(_QWORD *)(v2 + 16) = v8 + 1;
      sub_1DA4841BC(&v10, v2 + 40 * v8 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DA518090(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E410);
  v2 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E450);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1DA50A170(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v12 = *(_QWORD *)(v2 + 72);
    v10 = v17;
    do
    {
      sub_1DA519904(v11, (uint64_t)v4);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA50A170(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v17;
      }
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1DA50A170(v13 > 1, v14 + 1, 1);
        v10 = v17;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      sub_1DA51994C((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1DA518240(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t i;
  id v21;
  void *v22;
  _BYTE *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];

  v6 = sub_1DA66DEF4();
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)*MEMORY[0x1E0D7F308];
  sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DA678510;
  swift_beginAccess();
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v10 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269F18);
  *(_QWORD *)(v10 + 64) = sub_1DA519A20();
  *(_QWORD *)(v10 + 32) = v11;
  v12 = v9;
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1DA66FD48();
  v14 = (void *)sub_1DA66FA90();
  v15 = objc_msgSend(a1, sel_objectsInEntity_predicate_sortDescriptors_, v12, v13, v14);

  if (v15)
  {
    sub_1DA47D774(0, &qword_1EDADE720);
    v16 = sub_1DA66FA9C();

    v17 = sub_1DA5187B0(v16);
    result = swift_bridgeObjectRelease();
    if (v17)
    {
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        v19 = sub_1DA6705A0();
        result = swift_bridgeObjectRelease();
        if (v19)
          goto LABEL_5;
      }
      else
      {
        v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v19)
        {
LABEL_5:
          if (v19 < 1)
          {
            __break(1u);
            return result;
          }
          for (i = 0; i != v19; ++i)
          {
            if ((v17 & 0xC000000000000001) != 0)
              v21 = (id)MEMORY[0x1DF09EE48](i, v17);
            else
              v21 = *(id *)(v17 + 8 * i + 32);
            v22 = v21;
            objc_msgSend(v21, sel_setAssetURL_, 0);

          }
        }
      }
      return swift_bridgeObjectRelease();
    }
  }
  v23 = (_BYTE *)(a3 + 16);
  sub_1DA66DEAC();
  swift_retain_n();
  v24 = sub_1DA66DEDC();
  v25 = sub_1DA66FDA8();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v38[0] = v34;
    *(_DWORD *)v26 = 136315138;
    v33 = v26 + 4;
    swift_beginAccess();
    v27 = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE4C00);
    v28 = swift_bridgeObjectRetain();
    v29 = MEMORY[0x1DF09E488](v28, v27);
    v31 = v30;
    swift_bridgeObjectRelease();
    v37 = sub_1DA49AD00(v29, v31, v38);
    sub_1DA6702C4();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA478000, v24, v25, "Failed to update episode asset URLs for objectIDs %s", v26, 0xCu);
    v32 = v34;
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v32, -1, -1);
    MEMORY[0x1DF0A0474](v26, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v36);
  result = swift_beginAccess();
  *v23 = 0;
  return result;
}

uint64_t sub_1DA51866C(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1DA498794(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1DA49ADD0(i, (uint64_t)v11);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA498794(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v12;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1DA498794(v5 > 1, v6 + 1, 1);
        v3 = v12;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      v7 = v3 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1DA5187B0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1DA6704E0();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1DF09EE48](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1DA6704BC();
        sub_1DA6704EC();
        sub_1DA6704F8();
        sub_1DA6704C8();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_1DA6704BC();
        sub_1DA6704EC();
        sub_1DA6704F8();
        sub_1DA6704C8();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1DA6705A0();
    swift_bridgeObjectRelease();
    sub_1DA6704E0();
    swift_bridgeObjectRetain();
    v2 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t MPMediaLibrary.remove(episodeIDs:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_1DA66DEF4();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v5 = sub_1DA670078();
  v3[9] = v5;
  v3[10] = *(_QWORD *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA518A30()
{
  uint64_t *v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  v0[13] = (uint64_t)v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[14] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1DA518AA8;
  return sub_1DA5195C4(v0[3], v0[4], (uint64_t)v1);
}

uint64_t sub_1DA518AA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_1DA518B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  id v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(void **)(v0 + 32);
  v5 = swift_allocObject();
  *(_QWORD *)(v0 + 128) = v5;
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *(_DWORD *)(v0 + 192) = *MEMORY[0x1E0C977C0];
  v6 = *(void (**)(uint64_t))(v2 + 104);
  *(_QWORD *)(v0 + 136) = v6;
  v6(v1);
  v7 = v4;
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269F10);
  *v8 = v0;
  v8[1] = sub_1DA518C04;
  return sub_1DA67009C();
}

uint64_t sub_1DA518C04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  v3 = v2[12];
  v4 = v2[9];
  v5 = *(void (**)(uint64_t, uint64_t))(v2[10] + 8);
  if (!v0)
    v2[20] = v5;
  v5(v3, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA518C9C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DA518CF8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  void *v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(id *)(v0 + 40);
  v3 = sub_1DA5194A4(v1, v2);

  swift_bridgeObjectRelease();
  sub_1DA517D38(v3);
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  LODWORD(v1) = objc_msgSend(v2, sel_removeItems_, v4);

  if ((_DWORD)v1)
  {
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
    v6 = *(unsigned int *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 24);
    v10 = *(void **)(v0 + 32);
    v11 = swift_allocObject();
    *(_QWORD *)(v0 + 168) = v11;
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v9;
    v5(v7, v6, v8);
    v12 = v10;
    swift_bridgeObjectRetain();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v13;
    *v13 = v0;
    v13[1] = sub_1DA518F8C;
    return sub_1DA67009C();
  }
  else
  {
    sub_1DA66DEAC();
    v15 = sub_1DA66DEDC();
    v16 = sub_1DA66FDA8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1DA478000, v15, v16, "Failed to remove episode assets from Media Library.", v17, 2u);
      MEMORY[0x1DF0A0474](v17, -1, -1);
    }
    v19 = *(_QWORD *)(v0 + 56);
    v18 = *(_QWORD *)(v0 + 64);
    v20 = *(_QWORD *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1DA518F38()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DA518F8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 160))(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 72));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA519010()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  void *v4;

  v1 = *(unsigned __int8 *)(v0 + 196);
  sub_1DA66D9CC();
  v2 = (void *)sub_1DA66D9B4();
  v3 = MEMORY[0x1DF09C3A0]();

  if ((v3 & 1) == 0 && (_DWORD)v1)
  {
    sub_1DA66DAF8();
    v4 = (void *)sub_1DA66DAEC();
    sub_1DA66DAE0();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA5190B4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

unint64_t sub_1DA519108@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;

  result = sub_1DA67006C();
  if (!v1)
  {
    v4 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1DA6705A0();
      result = swift_bridgeObjectRelease();
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v7 = (id)MEMORY[0x1DF09EE48](i, v4);
          else
            v7 = *(id *)(v4 + 8 * i + 32);
          v8 = v7;
          objc_msgSend(v7, sel_setAssetURL_, 0);

        }
      }
    }
    result = swift_bridgeObjectRelease();
    *a1 = 1;
  }
  return result;
}

unint64_t sub_1DA519218@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  result = sub_1DA67006C();
  if (!v1)
  {
    v19 = a1;
    v4 = sub_1DA516DE0(result);
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v4 + 16);
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v5)
    {
      v7 = (uint64_t *)(v4 + 32);
      do
      {
        v11 = *v7++;
        v10 = v11;
        if (v11 >= 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1DA509EC8(0, v6[2] + 1, 1);
          v9 = v6[2];
          v8 = v6[3];
          if (v9 >= v8 >> 1)
            sub_1DA509EC8(v8 > 1, v9 + 1, 1);
          v6[2] = v9 + 1;
          v6[v9 + 4] = v10;
        }
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
    v12 = v6[2];
    if (v12)
    {
      v20 = MEMORY[0x1E0DEE9D8];
      sub_1DA509EA4(0, v12, 0);
      v13 = v6[4];
      if ((v13 & 0x8000000000000000) != 0)
      {
LABEL_27:
        result = sub_1DA670564();
        __break(1u);
      }
      else
      {
        v14 = v20;
        v16 = *(_QWORD *)(v20 + 16);
        v15 = *(_QWORD *)(v20 + 24);
        v17 = v16 + 1;
        if (v16 >= v15 >> 1)
          goto LABEL_26;
        while (1)
        {
          *(_QWORD *)(v14 + 16) = v17;
          v15 = v14 + 8 * v16;
          *(_QWORD *)(v15 + 32) = v13;
          v17 = v12 - 1;
          if (v12 == 1)
            break;
          v13 = v16 + 5;
          v16 = (unint64_t)(v6 + 5);
          while (v17)
          {
            v18 = *(_QWORD *)v16;
            if ((*(_QWORD *)v16 & 0x8000000000000000) != 0)
              goto LABEL_27;
            v20 = v14;
            v15 = *(_QWORD *)(v14 + 24);
            v12 = v13 - 3;
            if (v13 - 4 >= v15 >> 1)
              sub_1DA509EA4(v15 > 1, v13 - 3, 1);
            *(_QWORD *)(v14 + 16) = v12;
            *(_QWORD *)(v14 + 8 * v13++) = v18;
            v16 += 8;
            if (!--v17)
              goto LABEL_15;
          }
          __break(1u);
LABEL_26:
          sub_1DA509EA4(v15 > 1, v17, 1);
          v14 = v20;
        }
LABEL_15:
        result = swift_release();
        *v19 = v14;
      }
    }
    else
    {
      result = swift_release();
      *v19 = MEMORY[0x1E0DEE9D8];
    }
  }
  return result;
}

uint64_t sub_1DA5194A4(uint64_t a1, void *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;

  result = MEMORY[0x1E0DEE9D8];
  v8 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v4; ++i)
    {
      v7 = *(_QWORD *)(a1 + 8 * i + 32);
      if (objc_msgSend(a2, sel_itemExistsWithPersistentID_, v7)
        && objc_msgSend(a2, sel_itemWithPersistentID_, v7))
      {
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
    }
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1DA5195C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_1DA670078();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA519628()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v2 = v0[7];
  v1 = v0[8];
  v3 = v0[6];
  v4 = v0[3];
  v5 = (void *)v0[4];
  v6 = swift_allocObject();
  v0[9] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
  v7 = v5;
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[10] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  *v8 = v0;
  v8[1] = sub_1DA519710;
  return sub_1DA67009C();
}

uint64_t sub_1DA519710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA5197A4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v1 = *MEMORY[0x1E0D7F318];
  v2 = objc_msgSend(*(id *)(v0 + 40), sel_arrayForKey_, *MEMORY[0x1E0D7F318]);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1DA66FA9C();

    v5 = sub_1DA51866C(v4);
    swift_bridgeObjectRelease();
    if (v5)
      sub_1DA65EF14(v5);
  }
  v6 = *(void **)(v0 + 40);
  v7 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setObject_forKey_, v7, v1);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA519898()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA5198D0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA519218(a1);
}

unint64_t sub_1DA5198EC@<X0>(_BYTE *a1@<X8>)
{
  return sub_1DA519108(a1);
}

uint64_t sub_1DA519904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA51994C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA519998()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1DA5199BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1DA5172FC(*(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD **)(v1 + 40), *(void **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD ***)(v1 + 72), a1);
}

uint64_t sub_1DA5199D0()
{
  return swift_deallocObject();
}

uint64_t sub_1DA5199E0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA519A14()
{
  uint64_t v0;

  return sub_1DA518240(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t sub_1DA519A20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F0269F20;
  if (!qword_1F0269F20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F0269F18);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, &qword_1F0269F20);
  }
  return result;
}

uint64_t sub_1DA519A6C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA519AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA519AE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA519AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for JSPackageLoader() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1DA66EA64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1DA519B60()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA519C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA519CC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE0428;
  if (!qword_1EDAE0428)
  {
    v1 = type metadata accessor for JSPackageError();
    result = MEMORY[0x1DF0A039C](&unk_1DA6830A0, v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE0428);
  }
  return result;
}

uint64_t sub_1DA519D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66EA64();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1DA519D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66EA64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DA519D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66EA64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DA519DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66EA64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DA519E18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA519E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66EA64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DA519E60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA519E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66EA64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

ValueMetadata *type metadata accessor for Legacy()
{
  return &type metadata for Legacy;
}

uint64_t *sub_1DA519EBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1DA66C358();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  v13 = (v7 + v11) & ~v11;
  if (*(_DWORD *)(v9 + 84))
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  v15 = v13 + v14;
  v16 = *(_DWORD *)(v6 + 80) | v10;
  v17 = (*(_BYTE *)(v6 + 80) | v10);
  v18 = v16 & 0x100000;
  if (v17 > 7 || v18 != 0 || v15 > 0x18)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v17 + 16) & ~v17));
    sub_1DA66BE60();
  }
  else
  {
    v22 = v8;
    v23 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v24 = (const void *)(((unint64_t)a2 + v12) & v23);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v24, 1, v22))
    {
      memcpy((void *)(((unint64_t)a1 + v12) & v23), v24, v14);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v23, v24, v22);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v12) & v23, 0, 1, v22);
    }
  }
  return a1;
}

uint64_t sub_1DA519FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  size_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84))
      v13 = *(_QWORD *)(v8 + 64);
    else
      v13 = *(_QWORD *)(v8 + 64) + 1;
    memcpy(v11, v12, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v11, v12, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1DA51A0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (void *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v7);
  v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v11, v12, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      return a1;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v11, v12, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
  return a1;
}

uint64_t sub_1DA51A1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  size_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84))
      v13 = *(_QWORD *)(v8 + 64);
    else
      v13 = *(_QWORD *)(v8 + 64) + 1;
    memcpy(v11, v12, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v11, v12, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1DA51A2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (void *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v7);
  v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v11, v12, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      return a1;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v11, v12, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
  return a1;
}

uint64_t sub_1DA51A3E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(sub_1DA66C358() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = v10;
  if (v9)
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = *(_QWORD *)(v6 + 64) + v13;
  if (a2 <= v11)
    goto LABEL_29;
  v15 = v12 + (v14 & ~v13);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 < 2)
    {
LABEL_29:
      if (v11)
      {
        if (v7 >= v10)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
        v21 = (*(uint64_t (**)(uint64_t))(v8 + 48))((v14 + a1) & ~v13);
        if (v21 >= 2)
          return v21 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_29;
LABEL_20:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = v15;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v11 + v19 + 1;
}

void sub_1DA51A598(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0u;
  v10 = *(_QWORD *)(sub_1DA66C358() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = v12;
  v14 = *(unsigned __int8 *)(v10 + 80);
  if (v11)
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = *(_QWORD *)(v10 + 64) + 1;
  v15 = *(_QWORD *)(v7 + 64) + v14;
  v17 = (v15 & ~(_DWORD)v14) + v16;
  if (a3 > v13)
  {
    if (v17 > 3)
    {
      v9 = 1u;
      if (v13 >= a2)
LABEL_25:
        __asm { BR              X14 }
LABEL_18:
      v19 = ~v13 + a2;
      if (v17 < 4)
      {
        if (v17)
        {
          v20 = v19 & ~(-1 << (8 * v17));
          bzero(a1, (v15 & ~v14) + v16);
          if (v17 == 3)
          {
            *(_WORD *)a1 = v20;
            a1[2] = BYTE2(v20);
          }
          else if (v17 == 2)
          {
            *(_WORD *)a1 = v20;
          }
          else
          {
            *a1 = v20;
          }
        }
      }
      else
      {
        bzero(a1, (v15 & ~v14) + v16);
        *(_DWORD *)a1 = v19;
      }
      __asm { BR              X10 }
    }
    v18 = ((a3 - v13 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v18))
    {
      v9 = 4u;
      if (v13 >= a2)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v18 >= 0x100)
      v9 = 2;
    else
      v9 = v18 > 1;
  }
  if (v13 >= a2)
    goto LABEL_25;
  goto LABEL_18;
}

void sub_1DA51A804()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1DA51A80C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1DA51A830()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1DA51A840()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1DA51A848()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

BOOL sub_1DA51A858(double *a1, double *a2)
{
  return _sSo6CGSizeV10PodcastsUIE3eetoiySbAB_ABtFZ_0(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_1DA51A864(uint64_t a1)
{
  unint64_t result;

  result = sub_1DA51A888();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DA51A888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F0269F70;
  if (!qword_1F0269F70)
  {
    type metadata accessor for CGPoint(255);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0C9BA28], v1);
    atomic_store(result, &qword_1F0269F70);
  }
  return result;
}

uint64_t sub_1DA51A8D0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1DA51A958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2670);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_ams_configurationWithProcessInfo_bag_, *(_QWORD *)(a3 + *(int *)(type metadata accessor for JSPackageFetcher() + 24)), a1);
  swift_unknownObjectRetain();
  sub_1DA66F4A8();
  v10 = sub_1DA66F4FC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 0, 1, v10);
  v11 = (void *)sub_1DA66EB78();
  sub_1DA47E2F0((uint64_t)v7, (uint64_t *)&unk_1EDAE2670);
  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnInternalOS))
  {
    if (qword_1EDAE08D0 != -1)
      swift_once();
    v12 = sub_1DA66F6B8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EDAE08B0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
    sub_1DA66EC8C();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
    sub_1DA66EC38();
    sub_1DA66F538();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setUrlKnownToBeTrusted_, 1);
  }
  return v9;
}

unint64_t sub_1DA51AB74()
{
  return 0xD000000000000034;
}

unint64_t sub_1DA51AB90()
{
  unint64_t result;

  result = qword_1F0269F80;
  if (!qword_1F0269F80)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67A980, &type metadata for ValidatedJetPackAssetLocationError);
    atomic_store(result, (unint64_t *)&qword_1F0269F80);
  }
  return result;
}

id sub_1DA51ABE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for JSPackageFetcher() - 8) + 80);
  return sub_1DA51A958(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t storeEnumTagSinglePayload for ValidatedJetPackAssetLocationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA51AC70 + 4 * byte_1DA67A880[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA51AC90 + 4 * byte_1DA67A885[v4]))();
}

_BYTE *sub_1DA51AC70(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA51AC90(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA51AC98(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA51ACA0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA51ACA8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA51ACB0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ValidatedJetPackAssetLocationError()
{
  return &type metadata for ValidatedJetPackAssetLocationError;
}

uint64_t *sub_1DA51ACCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = sub_1DA66F4FC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    swift_unknownObjectRetain();
    v10 = v9;
  }
  return a1;
}

uint64_t sub_1DA51AD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = sub_1DA66F4FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v8[1] = v10;
  v11 = *(int *)(a3 + 24);
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  return a1;
}

uint64_t sub_1DA51AE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DA66F4FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1DA51AE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v6 = sub_1DA66F4FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  swift_unknownObjectRelease();
  v8[1] = v10;
  v11 = *(int *)(a3 + 24);
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  return a1;
}

uint64_t sub_1DA51AEF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA51AEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DA66F4FC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1DA51AF78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA51AF84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DA66F4FC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

unint64_t sub_1DA51B000()
{
  unint64_t result;

  result = qword_1F0269F90;
  if (!qword_1F0269F90)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67A958, &type metadata for ValidatedJetPackAssetLocationError);
    atomic_store(result, (unint64_t *)&qword_1F0269F90);
  }
  return result;
}

uint64_t static NativeIntentDispatcher.Builder.buildExpression<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_1DA66F2BC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66F2B0();
  v10 = type metadata accessor for _EphemeralIntentImplementationWrapper(0, a2, a3, v9);
  MEMORY[0x1DF0A039C](&unk_1DA67AA38, v10);
  sub_1DA66F28C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for _EphemeralIntentImplementationWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _EphemeralIntentImplementationWrapper);
}

uint64_t dispatch thunk of EphemeralIntentImplementation.init(asPartOf:performing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of EphemeralIntentImplementation.perform()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1DA4AD77C;
  return v9(a1, a2, a3);
}

uint64_t sub_1DA51B194()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DA51B1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  v8 = swift_checkMetadataState();
  v5[10] = v8;
  v5[11] = *(_QWORD *)(v8 - 8);
  v5[12] = swift_task_alloc();
  v5[13] = *(_QWORD *)(a4 - 8);
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA51B2CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD, _QWORD, _QWORD);

  v1 = v0[12];
  v3 = v0[5];
  v2 = v0[6];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[11] + 16))(v1, v0[3], v0[10]);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 24);
  v5 = sub_1DA66BE60();
  v4(v5, v1, v3, v2);
  v8 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v2 + 32) + *(_QWORD *)(v2 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[15] = v6;
  *v6 = v0;
  v6[1] = sub_1DA51B388;
  return v8(v0[9], v0[5], v0[6]);
}

uint64_t sub_1DA51B388()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA51B3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA51B490()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA51B4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  v10 = *(_QWORD *)(a4 + 16);
  v11 = *(_QWORD *)(a4 + 24);
  *v9 = v4;
  v9[1] = sub_1DA4AD77C;
  return sub_1DA51B1B0(a1, a2, a3, v10, v11);
}

uint64_t NowPlayingArtwork.ArtworkType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DA670600();
  result = swift_bridgeObjectRelease();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t NowPlayingArtwork.ArtworkType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DA51B5F0 + 4 * byte_1DA67AA78[*v0]))(0x72657470616863, 0xE700000000000000);
}

uint64_t sub_1DA51B5F0()
{
  return 0x65646F73697065;
}

uint64_t sub_1DA51B604()
{
  return 0x65676150776F6873;
}

uint64_t sub_1DA51B624()
{
  return 2003789939;
}

void sub_1DA51B634(char *a1)
{
  sub_1DA659D5C(*a1);
}

unint64_t sub_1DA51B644()
{
  unint64_t result;

  result = qword_1F0269FB0;
  if (!qword_1F0269FB0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for NowPlayingArtwork.ArtworkType, &type metadata for NowPlayingArtwork.ArtworkType);
    atomic_store(result, (unint64_t *)&qword_1F0269FB0);
  }
  return result;
}

void sub_1DA51B688()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DA670798();
  __asm { BR              X9 }
}

uint64_t sub_1DA51B6D4()
{
  sub_1DA66F94C();
  swift_bridgeObjectRelease();
  return sub_1DA6707C8();
}

void sub_1DA51B740()
{
  __asm { BR              X10 }
}

uint64_t sub_1DA51B77C()
{
  sub_1DA66F94C();
  return swift_bridgeObjectRelease();
}

void sub_1DA51B7D4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DA670798();
  __asm { BR              X9 }
}

uint64_t sub_1DA51B81C()
{
  sub_1DA66F94C();
  swift_bridgeObjectRelease();
  return sub_1DA6707C8();
}

uint64_t sub_1DA51B888@<X0>(char *a1@<X8>)
{
  return NowPlayingArtwork.ArtworkType.init(rawValue:)(a1);
}

uint64_t sub_1DA51B894()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DA51B8C4 + 4 * byte_1DA67AA88[*v0]))();
}

void sub_1DA51B8C4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x65646F73697065;
  a1[1] = v1;
}

void sub_1DA51B8DC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "showPageTall");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1DA51B900(_QWORD *a1@<X8>)
{
  *a1 = 2003789939;
  a1[1] = 0xE400000000000000;
}

uint64_t _s11ArtworkTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11ArtworkTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DA51B9F0 + 4 * byte_1DA67AA91[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DA51BA24 + 4 * byte_1DA67AA8C[v4]))();
}

uint64_t sub_1DA51BA24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA51BA2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA51BA34);
  return result;
}

uint64_t sub_1DA51BA40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA51BA48);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DA51BA4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA51BA54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtwork.ArtworkType()
{
  return &type metadata for NowPlayingArtwork.ArtworkType;
}

uint64_t dispatch thunk of JoeColorAlgorithm.joeColor(for:contrasting:selecting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t Preparable.artworkData(for:imageProvider:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_1DA66DEF4();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v4 = sub_1DA66CEBC();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  v2[12] = swift_task_alloc();
  v5 = sub_1DA66CA0C();
  v2[13] = v5;
  v2[14] = *(_QWORD *)(v5 - 8);
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA51BB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_1DA51C134(*(_QWORD *)(v0 + 24), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DA51C17C(*(_QWORD *)(v0 + 96));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD **)(v0 + 32);
    sub_1DA51C1BC(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    ArtworkModel.preferredRequest.getter(v5);
    v8 = v6[3];
    v7 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v8);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v9;
    *v9 = v0;
    v9[1] = sub_1DA51BC80;
    return ImageProvider.data(for:)(*(_QWORD *)(v0 + 88), v8, v7);
  }
}

uint64_t sub_1DA51BC80(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 136) = a2;
    *(_QWORD *)(v6 + 144) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA51BCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  sub_1DA4E8990(v1);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
}

uint64_t sub_1DA51BD94()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  _QWORD *v8;

  v1 = *(_QWORD **)(v0 + 32);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  sub_1DA66CDC0();
  v5 = v4;
  v7 = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v8;
  *v8 = v0;
  v8[1] = sub_1DA51BE24;
  return ImageProvider.placeholderData(with:)(v2, v3, v5, v7);
}

uint64_t sub_1DA51BE24(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 160) = a2;
    *(_QWORD *)(v6 + 168) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA51BEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  sub_1DA4E8990(v1);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
}

uint64_t sub_1DA51BF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  sub_1DA66DE28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  v5 = sub_1DA66DEDC();
  v6 = sub_1DA66FDA8();
  if (os_log_type_enabled(v5, v6))
  {
    v8 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 64);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
    *(_QWORD *)(v0 + 16) = v11;
    sub_1DA6702C4();
    *v10 = v11;
    v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v12(v7, v20);
    _os_log_impl(&dword_1DA478000, v5, v6, "Episode entity was unable to prepare artwork or placeholder for %@.", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v10, -1, -1);
    MEMORY[0x1DF0A0474](v9, -1, -1);

  }
  else
  {
    v14 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 64);

    v12 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v12(v13, v15);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  v12(v17, v18);
  sub_1DA4E8990(v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
}

uint64_t sub_1DA51C134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA51C17C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA51C1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66CA0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DA51C200(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_1DA6702C4();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t dispatch thunk of Preparable.prepare(asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1DA4AD77C;
  return v9(a1, a2, a3);
}

uint64_t sub_1DA51C328(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    v26 = a1;
    sub_1DA6704E0();
    v4 = sub_1DA51EEE4(v26);
    v6 = v5;
    v7 = v26 + 64;
    v25 = (void *)objc_opt_self();
    result = objc_opt_self();
    v8 = v26;
    v24 = (id)result;
    v9 = 0;
    v23 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v8 + 32))
    {
      v11 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v7 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(v8 + 36) != v6)
        goto LABEL_23;
      v27 = v9;
      v12 = *(void **)(*(_QWORD *)(v8 + 48) + 8 * v4);
      v13 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1DA67ABA0;
      v15 = v12;
      *(_QWORD *)(v14 + 32) = objc_msgSend(v25, sel_predicateForEpisodesDeterminedByLimitSettings_, v13);
      *(_QWORD *)(v14 + 40) = objc_msgSend(v25, sel_predicateForAllEpisodesOnPodcast_, v15);
      sub_1DA66FAB4();
      sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
      v16 = (void *)sub_1DA66FA90();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v24, sel_andPredicateWithSubpredicates_, v16);

      sub_1DA6704BC();
      sub_1DA6704EC();
      sub_1DA6704F8();
      result = sub_1DA6704C8();
      v8 = v26;
      v10 = 1 << *(_BYTE *)(v26 + 32);
      if (v4 >= v10)
        goto LABEL_24;
      v18 = *(_QWORD *)(v7 + 8 * v11);
      if ((v18 & (1 << v4)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(v26 + 36) != v6)
        goto LABEL_26;
      v19 = v18 & (-2 << (v4 & 0x3F));
      if (v19)
      {
        v10 = __clz(__rbit64(v19)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v20 = v11 + 1;
        v21 = (unint64_t)(v10 + 63) >> 6;
        if (v11 + 1 < v21)
        {
          v22 = *(_QWORD *)(v7 + 8 * v20);
          if (v22)
          {
LABEL_18:
            v10 = __clz(__rbit64(v22)) + (v20 << 6);
          }
          else
          {
            while (v21 - 2 != v11)
            {
              v22 = *(_QWORD *)(v26 + 80 + 8 * v11++);
              if (v22)
              {
                v20 = v11 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v9 = v27 + 1;
      v4 = v10;
      if (v27 + 1 == v23)
        return v28;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA51C610(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v11 = MEMORY[0x1E0DEE9D8];
    result = sub_1DA509D34(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1DF09EE48](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v9 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      if (v9 >= v8 >> 1)
        sub_1DA509D34(v8 > 1, v9 + 1, 1);
      ++v5;
      *(_QWORD *)(v11 + 16) = v9 + 1;
      v10 = v11 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v7;
      *(_QWORD *)(v10 + 40) = 0;
      *(_BYTE *)(v10 + 48) = 2;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void RestorePurgedEpisodesTipProvider.tips.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v5[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE44C0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 32))
  {
    v5[1] = *(_QWORD *)(v0 + 32);
    sub_1DA66BE60();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4798);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AC0);
    sub_1DA4841D4((unint64_t *)&unk_1EDAE4788, (uint64_t *)&unk_1EDAE4798, MEMORY[0x1E0C95D90]);
    sub_1DA66E17C();
    swift_release();
    sub_1DA4841D4((unint64_t *)&unk_1EDAE44B0, &qword_1EDAE44C0, MEMORY[0x1E0C95950]);
    sub_1DA66E11C();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DA51C8A0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t inited;
  unint64_t v5;
  uint64_t result;

  v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  *(_BYTE *)(inited + 32) = 1;
  *(_QWORD *)(inited + 40) = v3;
  v5 = sub_1DA640834(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4098);
  result = swift_arrayDestroy();
  *a2 = v5;
  return result;
}

uint64_t RestorePurgedEpisodesTipProvider.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  RestorePurgedEpisodesTipProvider.init(asPartOf:)(a1);
  return v2;
}

_QWORD *RestorePurgedEpisodesTipProvider.init(asPartOf:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[2];
  id v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE46C0);
  v8 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  v45 = v8;
  MEMORY[0x1E0C80A78](v7);
  v41 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4558);
  v11 = *(_QWORD *)(v10 - 8);
  v46 = (void *)v10;
  v47 = v11;
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4890);
  v14 = *(_QWORD *)(v13 - 8);
  v49 = v13;
  v50 = v14;
  MEMORY[0x1E0C80A78](v13);
  v43 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4408);
  v17 = *(_QWORD *)(v16 - 8);
  v51 = v16;
  v52 = v17;
  MEMORY[0x1E0C80A78](v16);
  v48 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DA66FDF0();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[4] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE47B0);
  swift_allocObject();
  v23 = (void *)sub_1DA66DFD8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v39[1] = a1;
  sub_1DA66EDDC();
  v24 = objc_msgSend(v53, sel_privateQueueContext);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE47E0);
  swift_allocObject();
  v1[2] = sub_1DA66DFFC();
  v1[5] = v24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4C60);
  v25 = swift_allocObject();
  *(_DWORD *)(v25 + 24) = 0;
  *(_QWORD *)(v25 + 16) = 0;
  v1[6] = v25;
  v1[3] = v23;
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E0D7EF98], v19);
  v40 = v24;
  sub_1DA66BE60();
  v26 = sub_1DA4EAF00((uint64_t)v22);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v2[7] = v26;
  v53 = v23;
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v55 = (id)sub_1DA66FE5C();
  v27 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 1, 1, v27);
  sub_1DA4841D4(&qword_1EDAE47A8, (uint64_t *)&unk_1EDAE47B0, MEMORY[0x1E0C95F48]);
  sub_1DA4A89F0();
  v28 = v41;
  sub_1DA66E248();
  sub_1DA47E2F0((uint64_t)v6, (uint64_t *)&unk_1EDAE20A0);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4B00);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE46B0, &qword_1EDAE46C0, MEMORY[0x1E0C95CB8]);
  v29 = v42;
  v30 = v44;
  sub_1DA66E17C();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v30);
  v31 = sub_1DA4841D4((unint64_t *)&unk_1EDAE4548, &qword_1EDAE4558, MEMORY[0x1E0C95950]);
  v32 = v43;
  v33 = v46;
  sub_1DA66E104();
  (*(void (**)(char *, void *))(v47 + 8))(v29, v33);
  swift_allocObject();
  swift_weakInit();
  sub_1DA66BE60();
  v53 = v33;
  v54 = v31;
  swift_getOpaqueTypeConformance2();
  v34 = v49;
  v35 = v48;
  sub_1DA66E134();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v34);
  swift_release();
  sub_1DA4841D4(&qword_1EDAE4400, (uint64_t *)&unk_1EDAE4408, MEMORY[0x1E0C957C0]);
  v36 = v51;
  v37 = sub_1DA66E11C();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v36);
  v2[4] = v37;
  swift_release();
  return v2;
}

uint64_t sub_1DA51CEE0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  char **v4;
  ValueMetadata *v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  __int128 v10;
  uint64_t v11;
  __int128 v12[2];
  _BYTE v13[40];
  __int128 v14;
  _QWORD v15[5];

  v3 = *a1;
  v14 = xmmword_1DA678510;
  if (v3)
  {
    v4 = &protocol witness table for RestorePurgedEpisodesTip;
    v5 = &type metadata for RestorePurgedEpisodesTip;
  }
  else
  {
    v5 = 0;
    v4 = 0;
    v15[1] = 0;
    v15[2] = 0;
  }
  v15[0] = v3;
  v15[3] = v5;
  v15[4] = v4;
  swift_bridgeObjectRetain();
  sub_1DA51EFB4((uint64_t)v15, (uint64_t)v13);
  sub_1DA51EFFC((uint64_t)v13, (uint64_t)&v10);
  if (v11)
  {
    sub_1DA4841BC(&v10, (uint64_t)v12);
    sub_1DA4841BC(v12, (uint64_t)&v10);
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v6 = sub_1DA53FE50(0, v6[2] + 1, 1, v6);
    v8 = v6[2];
    v7 = v6[3];
    if (v8 >= v7 >> 1)
      v6 = sub_1DA53FE50((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
    v6[2] = v8 + 1;
    sub_1DA4841BC(&v10, (uint64_t)&v6[5 * v8 + 4]);
  }
  else
  {
    sub_1DA47E2F0((uint64_t)&v10, &qword_1EDAE4078);
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4078);
  result = swift_arrayDestroy();
  *a2 = v6;
  return result;
}

uint64_t sub_1DA51D050()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA51D074()
{
  uint64_t result;
  uint64_t v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 48);
    os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
    if (!*(_QWORD *)(v1 + 16))
      *(_QWORD *)(v1 + 16) = sub_1DA51D11C();
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA51D0F4()
{
  return sub_1DA51D074();
}

Swift::Void __swiftcall RestorePurgedEpisodesTipProvider.requestUpdate()()
{
  sub_1DA66DFE4();
}

uint64_t sub_1DA51D11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE46E8);
  v5 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  v36 = v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE45F0);
  v9 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  v39 = v9;
  MEMORY[0x1E0C80A78](v8);
  v33 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4718);
  v12 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  v41 = v12;
  MEMORY[0x1E0C80A78](v11);
  v34 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4580);
  v15 = *(_QWORD *)(v14 - 8);
  v42 = v14;
  v43 = v15;
  MEMORY[0x1E0C80A78](v14);
  v37 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void **)(v0 + 16);
  v32 = v0;
  v45 = v17;
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  sub_1DA66BE60();
  v44 = (id)sub_1DA66FE5C();
  v18 = sub_1DA66FE8C();
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v31(v3, 1, 1, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE47E0);
  sub_1DA4841D4(&qword_1EDAE47D8, &qword_1EDAE47E0, MEMORY[0x1E0C95FB8]);
  v30 = sub_1DA4A89F0();
  sub_1DA66E248();
  sub_1DA47E2F0((uint64_t)v3, (uint64_t *)&unk_1EDAE20A0);

  swift_release();
  v19 = *(void **)(v0 + 40);
  *(_QWORD *)(swift_allocObject() + 16) = v19;
  v20 = v19;
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4880);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE46D8, &qword_1EDAE46E8, MEMORY[0x1E0C95CB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE4870, (uint64_t *)&unk_1EDAE4880, MEMORY[0x1E0C96108]);
  v21 = v33;
  v22 = v35;
  sub_1DA66E2B4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v22);
  v45 = (id)sub_1DA66FE5C();
  v31(v3, 1, 1, v18);
  sub_1DA4841D4(&qword_1EDAE45E8, &qword_1EDAE45F0, MEMORY[0x1E0C95B78]);
  v23 = v34;
  v24 = v38;
  sub_1DA66E248();
  sub_1DA47E2F0((uint64_t)v3, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3D90);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE4708, &qword_1EDAE4718, MEMORY[0x1E0C95CB8]);
  v25 = v37;
  v26 = v40;
  sub_1DA66E17C();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v26);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE4570, &qword_1EDAE4580, MEMORY[0x1E0C95950]);
  sub_1DA66BE60();
  v27 = v42;
  v28 = sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v27);
  return v28;
}

uint64_t sub_1DA51D5B4@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4880);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v4 = a1;
  result = sub_1DA66E050();
  *a2 = result;
  return result;
}

uint64_t sub_1DA51D620(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2[4] = a1;
  v4 = sub_1DA66DEF4();
  v2[5] = v4;
  v2[6] = *(_QWORD *)(v4 - 8);
  v2[7] = swift_task_alloc();
  v5 = (_QWORD *)swift_task_alloc();
  v2[8] = v5;
  *v5 = v2;
  v5[1] = sub_1DA51D698;
  return sub_1DA51D944(a2);
}

uint64_t sub_1DA51D698(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA51D70C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 32) = *(_QWORD *)(v0 + 80);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA51D748()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 72);
  sub_1DA66DED0();
  v2 = v1;
  v3 = v1;
  v4 = sub_1DA66DEDC();
  v5 = sub_1DA66FDA8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 40);
    v19 = *(_QWORD *)(v0 + 56);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v20 = v9;
    *(_QWORD *)(v0 + 16) = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v11 = sub_1DA66F904();
    *(_QWORD *)(v0 + 24) = sub_1DA49AD00(v11, v12, &v20);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v4, v5, "Failed to fetch purged episodes: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v9, -1, -1);
    MEMORY[0x1DF0A0474](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v18);
  }
  else
  {
    v13 = *(void **)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 48);
    v14 = *(_QWORD *)(v0 + 56);
    v16 = *(_QWORD *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }

  **(_QWORD **)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA51D944(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[5] = a1;
  v2 = sub_1DA670078();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v3 = sub_1DA66C538();
  v1[10] = v3;
  v1[11] = *(_QWORD *)(v3 - 8);
  v1[12] = swift_task_alloc();
  v4 = sub_1DA66C544();
  v1[13] = v4;
  v1[14] = *(_QWORD *)(v4 - 8);
  v1[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  v1[16] = swift_task_alloc();
  v5 = sub_1DA66C430();
  v1[17] = v5;
  v1[18] = *(_QWORD *)(v5 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA51DA60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  id v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 96);
  v30 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  sub_1DA66C52C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v7, *MEMORY[0x1E0CB1130], v9);
  sub_1DA66C418();
  sub_1DA66C514();
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 168) = v10;
  v10(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v30);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v3) == 1)
  {
    sub_1DA47E2F0(*(_QWORD *)(v0 + 128), &qword_1EDADE6C8);
    sub_1DA51EE44();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = *(void **)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 176) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DA67ABA0;
    *(_QWORD *)(v15 + 32) = objc_msgSend((id)objc_opt_self(), sel_predicateForDownloadBehavior_, 5);
    sub_1DA66F8BC();
    v16 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v17 = (void *)sub_1DA66C3F4();
    v18 = objc_msgSend((id)objc_opt_self(), sel_predicateForDateKey_isGreaterThanDate_, v16, v17);

    *(_QWORD *)(v15 + 40) = v18;
    sub_1DA66FAB4();
    *(_QWORD *)(v0 + 184) = sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
    v19 = (void *)sub_1DA66FA90();
    swift_bridgeObjectRelease();
    v20 = (void *)objc_opt_self();
    *(_QWORD *)(v0 + 192) = v20;
    v21 = objc_msgSend(v20, sel_andPredicateWithSubpredicates_, v19);
    *(_QWORD *)(v0 + 200) = v21;

    *(_QWORD *)(v0 + 208) = *MEMORY[0x1E0D7F308];
    sub_1DA66F8BC();
    v22 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
    v23 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(v22, sel_initWithEntityName_, v23);
    *(_QWORD *)(v0 + 216) = v24;

    objc_msgSend(v24, sel_setPredicate_, v21);
    v25 = swift_allocObject();
    *(_QWORD *)(v0 + 224) = v25;
    *(_QWORD *)(v25 + 16) = v14;
    *(_QWORD *)(v25 + 24) = v24;
    *(_DWORD *)(v0 + 296) = *MEMORY[0x1E0C977C0];
    v26 = *(void (**)(uint64_t))(v13 + 104);
    *(_QWORD *)(v0 + 232) = v26;
    v26(v12);
    v27 = v14;
    v28 = v24;
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AE8);
    *v29 = v0;
    v29[1] = sub_1DA51DE64;
    return sub_1DA67009C();
  }
}

uint64_t sub_1DA51DE64()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  v3 = v2[9];
  v4 = v2[6];
  v5 = *(void (**)(uint64_t, uint64_t))(v2[7] + 8);
  if (!v0)
    v2[32] = v5;
  v5(v3, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA51DEFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD *v19;
  unsigned int v21;
  void (*v22)(uint64_t, _QWORD, uint64_t);

  v1 = *(_QWORD *)(v0 + 200);
  v2 = sub_1DA51C328(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  sub_1DA66F8BC();
  v3 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v4 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);
  *(_QWORD *)(v0 + 264) = v5;

  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DA67ABA0;
  *(_QWORD *)(v6 + 32) = v1;
  v7 = *(id *)(v0 + 200);
  swift_bridgeObjectRetain();
  if (v2 >> 62)
  {
    sub_1DA67057C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DA670708();
  }
  v22 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 232);
  v21 = *(_DWORD *)(v0 + 296);
  v8 = *(void **)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(void **)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRelease();
  v12 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v8, sel_orPredicateWithSubpredicates_, v12);

  *(_QWORD *)(v6 + 40) = v13;
  sub_1DA66FAB4();
  v14 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v8, sel_andPredicateWithSubpredicates_, v14);

  objc_msgSend(v5, sel_setPredicate_, v15);
  objc_msgSend(v5, sel_setResultType_, 1);
  v16 = swift_allocObject();
  *(_QWORD *)(v0 + 272) = v16;
  *(_QWORD *)(v16 + 16) = v10;
  *(_QWORD *)(v16 + 24) = v5;
  v22(v9, v21, v11);
  v17 = v10;
  v18 = v5;
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4B30);
  *v19 = v0;
  v19[1] = sub_1DA51E1B0;
  return sub_1DA67009C();
}

uint64_t sub_1DA51E1B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 256))(*(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 48));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA51E238()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
  v5 = *(_QWORD *)(v0 + 136);

  v4(v3, v5);
  v6 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_1DA51E308()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v1 = *(void **)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);

  v3(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA51E3B4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
  v5 = *(_QWORD *)(v0 + 136);

  v4(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA51E468@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4B30);
  sub_1DA4841D4(&qword_1EDAE4B40, (uint64_t *)&unk_1EDAE4B30, MEMORY[0x1E0DEAF50]);
  result = sub_1DA66FCDC();
  if ((result & 1) != 0)
    result = swift_bridgeObjectRetain();
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

Swift::Void __swiftcall RestorePurgedEpisodesTipProvider.requestRefresh()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE47E0);
  sub_1DA4841D4((unint64_t *)&unk_1F0269FC8, &qword_1EDAE47E0, MEMORY[0x1E0C95FB0]);
  sub_1DA66E080();
}

uint64_t RestorePurgedEpisodesTipProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v0;
}

uint64_t RestorePurgedEpisodesTipProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

void sub_1DA51E5DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v5[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE44C0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*(_QWORD *)v0 + 32))
  {
    v5[1] = *(_QWORD *)(*(_QWORD *)v0 + 32);
    sub_1DA66BE60();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4798);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AC0);
    sub_1DA4841D4((unint64_t *)&unk_1EDAE4788, (uint64_t *)&unk_1EDAE4798, MEMORY[0x1E0C95D90]);
    sub_1DA66E17C();
    swift_release();
    sub_1DA4841D4((unint64_t *)&unk_1EDAE44B0, &qword_1EDAE44C0, MEMORY[0x1E0C95950]);
    sub_1DA66E11C();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DA51E718()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE47E0);
  sub_1DA4841D4((unint64_t *)&unk_1F0269FC8, &qword_1EDAE47E0, MEMORY[0x1E0C95FB0]);
  return sub_1DA66E080();
}

uint64_t type metadata accessor for RestorePurgedEpisodesTipProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for RestorePurgedEpisodesTipProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RestorePurgedEpisodesTipProvider.__allocating_init(asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1DA51E7AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA51E7D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1DA51D5B4(*(void **)(v1 + 16), a1);
}

uint64_t sub_1DA51E7D8()
{
  return sub_1DA66DFCC();
}

uint64_t sub_1DA51E80C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4AD77C;
  return sub_1DA51D620(a1, v4);
}

uint64_t sub_1DA51E864@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;

  sub_1DA47D774(0, &qword_1EDADEC00);
  result = sub_1DA670090();
  if (!v1)
  {
    v4 = result;
    v5 = (void *)sub_1DA63C6D8(MEMORY[0x1E0DEE9D8]);
    v11 = v5;
    if (v4 >> 62)
      goto LABEL_12;
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; v6 = sub_1DA6705A0())
    {
      for (i = 4; ; ++i)
      {
        v8 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF09EE48](i - 4, v4) : *(id *)(v4 + 8 * i);
        v5 = v8;
        v9 = i - 3;
        if (__OFADD__(i - 4, 1))
          break;
        v10 = v8;
        sub_1DA51E9E4((uint64_t *)&v11, &v10);

        if (v9 == v6)
        {
          result = swift_bridgeObjectRelease_n();
          *a1 = v11;
          return result;
        }
      }
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
    }
    result = swift_bridgeObjectRelease_n();
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1DA51E9E4(uint64_t *a1, id *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  os_log_t v38;
  _BYTE v39[12];
  int v40;
  os_log_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1DA66DEF4();
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v8).n128_u64[0];
  v12 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *a2;
  v14 = objc_msgSend(*a2, sel_podcast, v10);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, sel_objectID);
    v17 = objc_msgSend(v15, sel_episodeLimitResolvedValue);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v48 = *a1;
    *a1 = 0x8000000000000000;
    sub_1DA537B68((uint64_t)v17, v16, isUniquelyReferenced_nonNull_native);
    *a1 = v48;

    return swift_bridgeObjectRelease();
  }
  else
  {
    v43 = v7;
    v44 = v5;
    v45 = v9;
    v46 = v8;
    sub_1DA66DED0();
    v20 = v13;
    v21 = sub_1DA66DEDC();
    v22 = sub_1DA66FDA8();
    if (os_log_type_enabled(v21, (os_log_type_t)v22))
    {
      v40 = v22;
      v41 = v21;
      v42 = v12;
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v48 = v24;
      *(_DWORD *)v23 = 136315394;
      v25 = objc_msgSend(v20, sel_uuid);
      if (v25)
      {
        v26 = v25;
        v27 = sub_1DA66F8BC();
        v29 = v28;

      }
      else
      {
        v29 = 0xE700000000000000;
        v27 = 0x44495555206F4ELL;
      }
      v30 = v4;
      v32 = v43;
      v31 = v44;
      v47 = sub_1DA49AD00(v27, v29, &v48);
      sub_1DA6702C4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v44 = v23 + 14;
      v33 = objc_msgSend(v20, sel_objectID);
      v34 = objc_msgSend(v33, sel_URIRepresentation);

      sub_1DA66C304();
      sub_1DA51EF6C();
      v35 = sub_1DA670684();
      v37 = v36;
      (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v32, v30);
      v47 = sub_1DA49AD00(v35, v37, &v48);
      sub_1DA6702C4();

      swift_bridgeObjectRelease();
      v38 = v41;
      _os_log_impl(&dword_1DA478000, v41, (os_log_type_t)v40, "Unexpectedly found episode without a show: %s | %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v24, -1, -1);
      MEMORY[0x1DF0A0474](v23, -1, -1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v45 + 8))(v42, v46);
    }
    else
    {

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v45 + 8))(v12, v46);
    }
  }
}

unint64_t sub_1DA51EDB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  uint64_t v4;

  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE4C00);
  result = sub_1DA670090();
  if (!v1)
  {
    v4 = sub_1DA51C610(result);
    result = swift_bridgeObjectRelease();
    *a1 = v4;
  }
  return result;
}

unint64_t sub_1DA51EE44()
{
  unint64_t result;

  result = qword_1F0269FF0;
  if (!qword_1F0269FF0)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67ACE4, &type metadata for RestorePurgedEpisodesError);
    atomic_store(result, (unint64_t *)&qword_1F0269FF0);
  }
  return result;
}

uint64_t sub_1DA51EE88()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA51EEB4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA51E864(a1);
}

unint64_t sub_1DA51EECC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA51EDB0(a1);
}

uint64_t sub_1DA51EEE4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_1DA51EF6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE2610;
  if (!qword_1EDAE2610)
  {
    v1 = sub_1DA66C358();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE2610);
  }
  return result;
}

uint64_t sub_1DA51EFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA51EFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for RestorePurgedEpisodesError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA51F084 + 4 * byte_1DA67ABB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA51F0A4 + 4 * byte_1DA67ABB5[v4]))();
}

_BYTE *sub_1DA51F084(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA51F0A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA51F0AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA51F0B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA51F0BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA51F0C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RestorePurgedEpisodesError()
{
  return &type metadata for RestorePurgedEpisodesError;
}

unint64_t sub_1DA51F0E4()
{
  unint64_t result;

  result = qword_1F026A000;
  if (!qword_1F026A000)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67ACBC, &type metadata for RestorePurgedEpisodesError);
    atomic_store(result, (unint64_t *)&qword_1F026A000);
  }
  return result;
}

uint64_t MTPodcastSkipDuration.text.getter(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DA66D2F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEDBC8];
  *(_OWORD *)(v2 + 16) = xmmword_1DA678510;
  v4 = MEMORY[0x1E0DEDC38];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_DWORD *)(v2 + 32) = a1;
  sub_1DA66F898();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA498918();
  return sub_1DA66E734();
}

void AnalyzedColor.init(color:)(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17[2];

  v17[1] = *(double *)MEMORY[0x1E0C80C00];
  v6 = Color.color.getter((uint64_t)a1, a2);
  v16 = 0.0;
  v17[0] = 0.0;
  v15 = 0.0;
  objc_msgSend(v6, sel_getRed_green_blue_alpha_, v17, &v16, &v15, 0);
  v8 = v16;
  v7 = v17[0];
  v9 = v15;
  v10 = sub_1DA51F4F8(v17[0], v16, v15);
  v12 = v11;
  v14 = v13;

  sub_1DA4E7898(a1, a2);
  *(double *)a3 = v7;
  *(double *)(a3 + 8) = v8;
  *(double *)(a3 + 16) = v9;
  *(double *)(a3 + 24) = v10;
  *(_QWORD *)(a3 + 32) = v12;
  *(_QWORD *)(a3 + 40) = v14;
  *(_OWORD *)(a3 + 48) = xmmword_1DA67AD30;
  *(_QWORD *)(a3 + 64) = 0x405B3883126E978DLL;
}

void __swiftcall AnalyzedColor.init(color:)(PodcastsUI::AnalyzedColor *__return_ptr retstr, UIColor color)
{
  Swift::Double v4;
  Swift::Double v5;
  Swift::Double v6;
  double v7;
  double v8;
  Swift::Double v9;
  double v10;
  Swift::Double v11;
  double v12;
  double v13;
  double v14[2];

  v14[1] = *(double *)MEMORY[0x1E0C80C00];
  v13 = 0.0;
  v14[0] = 0.0;
  v12 = 0.0;
  -[objc_class getRed:green:blue:alpha:](color.super.isa, sel_getRed_green_blue_alpha_, v14, &v13, &v12, 0);
  v5 = v13;
  v4 = v14[0];
  v6 = v12;
  v7 = sub_1DA51F4F8(v14[0], v13, v12);
  v9 = v8;
  v11 = v10;

  retstr->RGB.red = v4;
  retstr->RGB.green = v5;
  retstr->RGB.blue = v6;
  retstr->coordinates.x = v7;
  retstr->coordinates.y = v9;
  retstr->coordinates.z = v11;
  *(_OWORD *)&retstr->referenceX = xmmword_1DA67AD30;
  retstr->referenceZ = 108.883;
}

BOOL AnalyzedColor.isDark.getter()
{
  uint64_t v0;
  double v1;
  double v2;

  v1 = *(double *)(v0 + 32) / *(double *)(v0 + 56);
  if (v1 <= 0.008856)
    v2 = v1 * 7.78703704 + 0.137931034;
  else
    v2 = pow(v1, 0.333333333);
  return v2 * 116.0 + -16.0 < 50.0;
}

uint64_t AnalyzedColor.suggestedInterfaceStyle.getter()
{
  uint64_t v0;
  double v1;
  double v2;

  v1 = *(double *)(v0 + 32) / *(double *)(v0 + 56);
  if (v1 <= 0.008856)
    v2 = v1 * 7.78703704 + 0.137931034;
  else
    v2 = pow(v1, 0.333333333);
  if (v2 * 116.0 + -16.0 >= 65.0)
    return 1;
  else
    return 2;
}

double sub_1DA51F4F8(double a1, double a2, double a3)
{
  double v5;
  double v6;
  double v7;

  if (a1 > 0.04045)
  {
    v5 = pow((a1 + 0.055) / 1.055, 2.4);
    if (a2 <= 0.04045)
      goto LABEL_3;
LABEL_6:
    v6 = pow((a2 + 0.055) / 1.055, 2.4);
    if (a3 <= 0.04045)
      goto LABEL_4;
LABEL_7:
    v7 = pow((a3 + 0.055) / 1.055, 2.4);
    return v5 * 100.0 * 0.412453 + v6 * 100.0 * 0.35758 + v7 * 100.0 * 0.180423;
  }
  v5 = a1 / 12.95;
  if (a2 > 0.04045)
    goto LABEL_6;
LABEL_3:
  v6 = a2 / 12.95;
  if (a3 > 0.04045)
    goto LABEL_7;
LABEL_4:
  v7 = a3 / 12.95;
  return v5 * 100.0 * 0.412453 + v6 * 100.0 * 0.35758 + v7 * 100.0 * 0.180423;
}

uint64_t getEnumTagSinglePayload for AnalyzedColor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AnalyzedColor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AnalyzedColor()
{
  return &type metadata for AnalyzedColor;
}

BOOL static TextFieldAlertSheet.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TextFieldAlertSheet.Style.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t TextFieldAlertSheet.Style.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t TextFieldAlertSheet.alertTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_alertTitle);
  swift_bridgeObjectRetain();
  return v1;
}

void TextFieldAlertSheet.style.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_style);
}

double TextFieldAlertSheet.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_size);
}

uint64_t TextFieldAlertSheet.__allocating_init(title:style:size:actions:)(uint64_t a1, uint64_t a2, char *a3, unint64_t a4, double a5, double a6)
{
  objc_class *v6;
  _BYTE *v13;
  char v14;
  _QWORD *v15;
  double *v16;
  _BYTE *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  char v22;

  v13 = objc_allocWithZone(v6);
  v14 = *a3;
  v15 = &v13[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_alertTitle];
  *v15 = a1;
  v15[1] = a2;
  v13[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_style] = v14;
  v16 = (double *)&v13[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_size];
  *v16 = a5;
  v16[1] = a6;
  v22 = v14;
  v17 = v13;
  v18 = sub_1DA52068C(&v22);
  v19 = &v17[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField];
  *v19 = v18;
  v19[1] = v20;

  return ModalSheet.init(actions:)(a4);
}

uint64_t TextFieldAlertSheet.init(title:style:size:actions:)(uint64_t a1, uint64_t a2, char *a3, unint64_t a4, double a5, double a6)
{
  _BYTE *v6;
  char v8;
  _QWORD *v9;
  double *v10;
  char *v11;
  id v12;
  char *v13;
  uint64_t v14;
  char v16;

  v8 = *a3;
  v9 = &v6[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_alertTitle];
  *v9 = a1;
  v9[1] = a2;
  v6[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_style] = v8;
  v10 = (double *)&v6[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_size];
  *v10 = a5;
  v10[1] = a6;
  v16 = v8;
  v11 = v6;
  v12 = sub_1DA52068C(&v16);
  v13 = &v11[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField];
  *(_QWORD *)v13 = v12;
  *((_QWORD *)v13 + 1) = v14;

  return ModalSheet.init(actions:)(a4);
}

uint64_t sub_1DA51F914(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(_QWORD *)(*a2 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8);
  ObjectType = swift_getObjectType();
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_bridgeObjectRetain();
  return v6(v2, v3, ObjectType, v4);
}

uint64_t sub_1DA51F984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

uint64_t sub_1DA51F9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, ObjectType, v5);
}

void (*sub_1DA51FA18(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8);
  v3[2] = *(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField);
  v3[3] = v4;
  v3[4] = swift_getObjectType();
  *v3 = (*(uint64_t (**)(void))(v4 + 8))();
  v3[1] = v5;
  return sub_1DA51FA88;
}

void sub_1DA51FA88(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v5 = (*a1)[3];
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16);
  v7 = (*a1)[4];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v6(v4, v3, v7, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6(**a1, v3, v7, v5);
  }
  free(v2);
}

void sub_1DA51FB10()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  char *v5;
  id v6;
  objc_super v7;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_size];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_size + 8];
  v3 = (objc_class *)type metadata accessor for SheetView();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = &v4[OBJC_IVAR____TtC10PodcastsUI9SheetView_sizeRestrictions];
  *(_QWORD *)v5 = v1;
  *((_QWORD *)v5 + 1) = v2;
  *((_QWORD *)v5 + 2) = v1;
  *((_QWORD *)v5 + 3) = v2;
  v7.receiver = v4;
  v7.super_class = v3;
  v6 = objc_msgSendSuper2(&v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setView_, v6);

}

void sub_1DA51FCBC()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  objc_super v39;

  v39.receiver = v0;
  v39.super_class = (Class)type metadata accessor for TextFieldAlertSheet();
  objc_msgSendSuper2(&v39, sel_viewDidLoad);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v2 = (void *)sub_1DA66F88C();
  objc_msgSend(v1, sel_setText_, v2);

  v3 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
  objc_msgSend(v1, sel_setFont_, v3);

  v4 = objc_msgSend(v0, sel_view);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_addSubview_, v1);

    v6 = objc_msgSend(v0, sel_view);
    if (v6)
    {
      v7 = v6;
      v8 = *(void **)&v0[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField];
      objc_msgSend(v6, sel_addSubview_, v8);

      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1DA67ADE0;
      v10 = objc_msgSend(v1, sel_topAnchor);
      v11 = sub_1DA5BD444();
      v12 = objc_msgSend(v11, (SEL)&selRef__keyForSize_baseKey_ + 4);

      v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
      *(_QWORD *)(v9 + 32) = v13;
      v14 = objc_msgSend(v1, sel_leadingAnchor);
      v15 = sub_1DA5BD444();
      v16 = objc_msgSend(v15, sel_leadingAnchor);

      v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
      *(_QWORD *)(v9 + 40) = v17;
      v18 = objc_msgSend(v1, sel_trailingAnchor);
      v19 = sub_1DA5BD444();
      v20 = objc_msgSend(v19, sel_trailingAnchor);

      v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
      *(_QWORD *)(v9 + 48) = v21;
      v22 = objc_msgSend(v8, sel_topAnchor);
      v23 = objc_msgSend(v1, sel_bottomAnchor);
      v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 4.0);

      *(_QWORD *)(v9 + 56) = v24;
      v25 = objc_msgSend(v8, sel_leadingAnchor);
      v26 = sub_1DA5BD444();
      v27 = objc_msgSend(v26, sel_leadingAnchor);

      v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
      *(_QWORD *)(v9 + 64) = v28;
      v29 = objc_msgSend(v8, sel_trailingAnchor);
      v30 = sub_1DA5BD444();
      v31 = objc_msgSend(v30, sel_trailingAnchor);

      v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v31);
      *(_QWORD *)(v9 + 72) = v32;
      v33 = objc_msgSend(v8, sel_bottomAnchor);
      v34 = sub_1DA5BD444();
      v35 = objc_msgSend(v34, sel_bottomAnchor);

      v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
      *(_QWORD *)(v9 + 80) = v36;
      sub_1DA66FAB4();
      v37 = (void *)objc_opt_self();
      sub_1DA5207F4();
      v38 = (void *)sub_1DA66FA90();
      swift_bridgeObjectRelease();
      objc_msgSend(v37, sel_activateConstraints_, v38);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DA52019C(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t ObjectType;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for TextFieldAlertSheet();
  objc_msgSendSuper2(&v6, sel_viewWillAppear_, a1 & 1);
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8];
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3);
}

void TextFieldAlertSheet.__allocating_init(actions:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void TextFieldAlertSheet.init(actions:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1DA5202D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

}

id TextFieldAlertSheet.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextFieldAlertSheet();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MacTextView.text.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MacTextView();
  v1 = objc_msgSendSuper2(&v5, sel_text);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1DA66F8BC();

  return v3;
}

void MacTextView.text.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_super v4;

  if (a2)
  {
    v3 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MacTextView();
  objc_msgSendSuper2(&v4, sel_setText_, v3);

}

id sub_1DA520590()
{
  void *v0;

  objc_msgSend(v0, sel_becomeFirstResponder);
  return objc_msgSend(v0, sel_selectAll_, 0);
}

uint64_t sub_1DA5205C0()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_text);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1DA66F8BC();

  return v3;
}

void sub_1DA520624(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  if (a2)
  {
    v3 = (id)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v2, sel_setText_, v3);

}

id sub_1DA52067C()
{
  void *v0;

  return objc_msgSend(v0, sel_becomeFirstResponder);
}

id sub_1DA52068C(_BYTE *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;

  if (*a1 == 1)
  {
    type metadata accessor for MacTextView();
    v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v2 = (void *)objc_opt_self();
    v3 = v1;
    v4 = objc_msgSend(v2, sel_systemFontOfSize_, 13.0);
    objc_msgSend(v3, sel_setFont_, v4);

  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3DB8]), sel_init);
    objc_msgSend(v3, sel_setBorderStyle_, 2);
    v4 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v3, sel_setFont_, v4);
  }

  objc_msgSend(v3, sel_sizeToFit);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

uint64_t type metadata accessor for TextFieldAlertSheet()
{
  return objc_opt_self();
}

unint64_t sub_1DA5207F4()
{
  unint64_t result;

  result = qword_1EDADE8E0;
  if (!qword_1EDADE8E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDADE8E0);
  }
  return result;
}

unint64_t sub_1DA520834()
{
  unint64_t result;

  result = qword_1F026A030;
  if (!qword_1F026A030)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for TextFieldAlertSheet.Style, &type metadata for TextFieldAlertSheet.Style);
    atomic_store(result, (unint64_t *)&qword_1F026A030);
  }
  return result;
}

uint64_t sub_1DA520878@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8);
  ObjectType = swift_getObjectType();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t method lookup function for TextFieldAlertSheet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TextFieldAlertSheet.__allocating_init(title:style:size:actions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of TextFieldAlertSheet.text.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of TextFieldAlertSheet.text.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of TextFieldAlertSheet.text.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t storeEnumTagSinglePayload for TextFieldAlertSheet.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA520980 + 4 * byte_1DA67ADF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA5209B4 + 4 * byte_1DA67ADF0[v4]))();
}

uint64_t sub_1DA5209B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5209BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5209C4);
  return result;
}

uint64_t sub_1DA5209D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5209D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA5209DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5209E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextFieldAlertSheet.Style()
{
  return &type metadata for TextFieldAlertSheet.Style;
}

id VerticallyCenteredView.__allocating_init(wrapping:)(void *a1)
{
  objc_class *v1;
  char *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC10PodcastsUI22VerticallyCenteredView_contentView] = a1;
  v9.receiver = v3;
  v9.super_class = v1;
  v4 = a1;
  v5 = objc_msgSendSuper2(&v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, sel_addSubview_, v4, v9.receiver, v9.super_class);
  v6 = v5;
  v7 = objc_msgSend(v4, sel_backgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  return v6;
}

id VerticallyCenteredView.init(wrapping:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  id v6;
  id v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC10PodcastsUI22VerticallyCenteredView_contentView] = a1;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  v4 = a1;
  v5 = objc_msgSendSuper2(&v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, sel_addSubview_, v4, v9.receiver, v9.super_class);
  v6 = v5;
  v7 = objc_msgSend(v4, sel_backgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  return v6;
}

id VerticallyCenteredView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void VerticallyCenteredView.init(coder:)()
{
  sub_1DA670570();
  __break(1u);
}

Swift::Void __swiftcall VerticallyCenteredView.encode(with:)(NSCoder with)
{
  sub_1DA670570();
  __break(1u);
}

Swift::Void __swiftcall VerticallyCenteredView.layoutSubviews()()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC10PodcastsUI22VerticallyCenteredView_contentView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_sizeThatFits_, v2, v3);
  v5 = v4;
  objc_msgSend(v0, sel_bounds);
  v7 = v6;
  objc_msgSend(v0, sel_bounds);
  v9 = (v8 - v5) * 0.5;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, v7, v9);
}

id VerticallyCenteredView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void VerticallyCenteredView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VerticallyCenteredView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VerticallyCenteredView()
{
  return objc_opt_self();
}

uint64_t method lookup function for VerticallyCenteredView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VerticallyCenteredView.__allocating_init(wrapping:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t AcceptDanglingDownloadsActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_1DA670078();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v4 = *(_QWORD *)(type metadata accessor for AcceptDanglingDownloadsAction() - 8);
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 + 64);
  v2[10] = swift_task_alloc();
  v5 = sub_1DA66FB98();
  v2[11] = v5;
  v2[12] = *(_QWORD *)(v5 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v6 = (_QWORD *)swift_task_alloc();
  v2[14] = v6;
  *v6 = v2;
  v6[1] = sub_1DA521070;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA521070()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5210D4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[16] = v0[2];
  swift_getObjectType();
  sub_1DA4EE300();
  v1 = (_QWORD *)swift_task_alloc();
  v0[17] = v1;
  *v1 = v0;
  v1[1] = sub_1DA521154;
  return sub_1DA6700C0();
}

uint64_t sub_1DA521154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DA5211D8()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;

  v1 = (void *)v0[18];
  v2 = v0[10];
  v3 = v0[7];
  v4 = v0[8];
  v5 = v0[5];
  v6 = v0[6];
  sub_1DA521640(v0[4], v2);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  v0[19] = v8;
  *(_QWORD *)(v8 + 16) = v1;
  sub_1DA521714(v2, v8 + v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v3, *MEMORY[0x1E0C977C0], v5);
  v9 = v1;
  v10 = (_QWORD *)swift_task_alloc();
  v0[20] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_1DA5212D0;
  return sub_1DA67009C();
}

uint64_t sub_1DA5212D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA521364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);

  v2 = *MEMORY[0x1E0D3F990];
  v3 = sub_1DA66ED70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5213FC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA521450()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA5214AC(void *a1)
{
  uint64_t v1;
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  type metadata accessor for AcceptDanglingDownloadsAction();
  result = sub_1DA67006C();
  if (!v1)
  {
    v4 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1DA6705A0();
      swift_bridgeObjectRelease();
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
          __break(1u);
        for (i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v7 = (id)MEMORY[0x1DF09EE48](i, v4);
          else
            v7 = *(id *)(v4 + 8 * i + 32);
          v8 = v7;
          objc_msgSend(v7, sel_setDownloadBehavior_, 2);

        }
      }
    }
    swift_bridgeObjectRelease();
    v10[0] = 0;
    if (objc_msgSend(a1, sel_save_, v10))
    {
      return (unint64_t)v10[0];
    }
    else
    {
      v9 = v10[0];
      sub_1DA66C1FC();

      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1DA521640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AcceptDanglingDownloadsAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA521684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AcceptDanglingDownloadsAction() - 8) + 80);
  v2 = (v1 + 24) & ~v1;

  v3 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DA521714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AcceptDanglingDownloadsAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DA521758()
{
  uint64_t v0;

  type metadata accessor for AcceptDanglingDownloadsAction();
  return sub_1DA5214AC(*(void **)(v0 + 16));
}

unint64_t sub_1DA5217A8()
{
  unint64_t result;

  result = qword_1F026A080;
  if (!qword_1F026A080)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for AcceptDanglingDownloadsActionImplementation, &type metadata for AcceptDanglingDownloadsActionImplementation);
    atomic_store(result, (unint64_t *)&qword_1F026A080);
  }
  return result;
}

uint64_t sub_1DA5217EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4AD77C;
  return AcceptDanglingDownloadsActionImplementation.perform(_:asPartOf:)(a1, a2);
}

unint64_t sub_1DA521858()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026A090;
  if (!qword_1F026A090)
  {
    v1 = type metadata accessor for AcceptDanglingDownloadsAction();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for AcceptDanglingDownloadsAction, v1);
    atomic_store(result, (unint64_t *)&qword_1F026A090);
  }
  return result;
}

uint64_t sub_1DA5218A0()
{
  sub_1DA5218F0();
  return sub_1DA66F310();
}

ValueMetadata *type metadata accessor for AcceptDanglingDownloadsActionImplementation()
{
  return &type metadata for AcceptDanglingDownloadsActionImplementation;
}

unint64_t sub_1DA5218F0()
{
  unint64_t result;

  result = qword_1F026A098;
  if (!qword_1F026A098)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for AcceptDanglingDownloadsActionImplementation, &type metadata for AcceptDanglingDownloadsActionImplementation);
    atomic_store(result, (unint64_t *)&qword_1F026A098);
  }
  return result;
}

uint64_t CategoryObserverProvider.init(asPartOf:)()
{
  id v0;
  uint64_t v1;
  id v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66EDDC();
  v0 = objc_msgSend(v3, sel_privateQueueContext);
  v1 = sub_1DA66D8C4();
  swift_unknownObjectRelease();

  swift_release();
  return v1;
}

_QWORD *sub_1DA5219D0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *__return_ptr, uint64_t);

  v18 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(sub_1DA66C7B4() - 8);
  v7 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v15 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v18(&v16, v7);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    v10 = v17;
    if (v17)
    {
      v11 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1DA4981C8(0, v8[2] + 1, 1, v8);
      v13 = v8[2];
      v12 = v8[3];
      if (v13 >= v12 >> 1)
        v8 = sub_1DA4981C8((_QWORD *)(v12 > 1), v13 + 1, 1, v8);
      v8[2] = v13 + 1;
      v9 = &v8[2 * v13];
      v9[4] = v11;
      v9[5] = v10;
    }
    v7 += v15;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t PlaybackIntent.generateMPCIntent(for:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1[3] = a1;
  v2 = sub_1DA66C7B4();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v3 = sub_1DA66C844();
  v1[8] = v3;
  v1[9] = *(_QWORD *)(v3 - 8);
  v1[10] = swift_task_alloc();
  v4 = sub_1DA66D018();
  v1[11] = v4;
  v1[12] = *(_QWORD *)(v4 - 8);
  v1[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A0A8);
  v1[14] = swift_task_alloc();
  v5 = sub_1DA66C82C();
  v1[15] = v5;
  v1[16] = *(_QWORD *)(v5 - 8);
  v1[17] = swift_task_alloc();
  v6 = sub_1DA66C808();
  v1[18] = v6;
  v1[19] = *(_QWORD *)(v6 - 8);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  sub_1DA66C7CC();
  v1[22] = swift_task_alloc();
  v7 = sub_1DA66CFB8();
  v1[23] = v7;
  v1[24] = *(_QWORD *)(v7 - 8);
  v1[25] = swift_task_alloc();
  v8 = sub_1DA66DEF4();
  v1[26] = v8;
  v1[27] = *(_QWORD *)(v8 - 8);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  v9 = sub_1DA66CFD0();
  v1[33] = v9;
  v1[34] = *(_QWORD *)(v9 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v10 = (_QWORD *)swift_task_alloc();
  v1[37] = v10;
  *v10 = v1;
  v10[1] = sub_1DA521DA0;
  return sub_1DA66CF28();
}

uint64_t sub_1DA521DA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA521E48()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t, uint64_t, uint64_t);
  _QWORD *v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_playerPath);
  v2 = objc_msgSend(v1, sel_isLocal);

  if (v2)
  {
    sub_1DA66DE70();
    v3 = sub_1DA66DEDC();
    v4 = sub_1DA66FD90();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1DA478000, v3, v4, "Creating a local playback intent", v5, 2u);
      MEMORY[0x1DF0A0474](v5, -1, -1);
    }
    v6 = *(_QWORD *)(v0 + 304);
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 208);
    v9 = *(_QWORD *)(v0 + 216);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v10 = sub_1DA66CF34();
    if (v6)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264));
LABEL_10:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v40 = v11;
    if (v11 >> 60 == 15)
    {
      v41 = 0;
    }
    else
    {
      v42 = v10;
      v41 = (void *)sub_1DA66C37C();
      sub_1DA49873C(v42, v40);
    }
    v43 = *(_QWORD *)(v0 + 288);
    v44 = *(_QWORD *)(v0 + 272);
    v53 = *(_QWORD *)(v0 + 264);
    v46 = *(_QWORD *)(v0 + 192);
    v45 = *(_QWORD *)(v0 + 200);
    v47 = *(_QWORD *)(v0 + 184);
    v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4B350]), sel_init);
    v49 = sub_1DA66CFC4();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v46 + 104))(v45, *MEMORY[0x1E0D7DE80], v47);
    v50 = sub_1DA523A18(v45, v49);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    if ((v50 & 1) != 0)
      v51 = 20;
    else
      v51 = 0;
    objc_msgSend(v48, sel_setActionAfterQueueLoad_, v51);
    objc_msgSend(v48, sel_setTracklistSource_, 500);
    objc_msgSend(v48, sel_setTracklistToken_, v41);

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v53);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(id))(v0 + 8))(v48);
  }
  else
  {
    if ((sub_1DA66CF1C() & 1) != 0)
    {
      sub_1DA66DE70();
      v12 = sub_1DA66DEDC();
      v13 = sub_1DA66FDC0();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_1DA478000, v12, v13, "Intent requires local playback with buffered AirPlay", v14, 2u);
        MEMORY[0x1DF0A0474](v14, -1, -1);
      }
      v15 = *(_QWORD *)(v0 + 288);
      v16 = *(_QWORD *)(v0 + 264);
      v17 = *(_QWORD *)(v0 + 272);
      v19 = *(_QWORD *)(v0 + 216);
      v18 = *(_QWORD *)(v0 + 224);
      v20 = *(_QWORD *)(v0 + 208);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      v21 = sub_1DA66CF58();
      sub_1DA47E32C(&qword_1F026A0B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DE08], MEMORY[0x1E0D7DE10]);
      swift_allocError();
      v23 = v22;
      v24 = v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026A0C0) + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v23, v15, v16);
      sub_1DA66CF40();
      v25 = *MEMORY[0x1E0D7DE20];
      v26 = sub_1DA66CF64();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v25, v26);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0D7DDD8], v21);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      goto LABEL_10;
    }
    sub_1DA66DE70();
    v28 = sub_1DA66DEDC();
    v29 = sub_1DA66FDC0();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1DA478000, v28, v29, "Sending a remote playback intent", v30, 2u);
      MEMORY[0x1DF0A0474](v30, -1, -1);
    }
    v31 = *(_QWORD *)(v0 + 280);
    v52 = *(_QWORD *)(v0 + 288);
    v32 = *(_QWORD *)(v0 + 264);
    v33 = *(_QWORD *)(v0 + 272);
    v34 = *(_QWORD *)(v0 + 248);
    v36 = *(_QWORD *)(v0 + 208);
    v35 = *(_QWORD *)(v0 + 216);

    v37 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    *(_QWORD *)(v0 + 312) = v37;
    v37(v34, v36);
    sub_1DA66C7C0();
    sub_1DA66C850();
    swift_allocObject();
    *(_QWORD *)(v0 + 320) = sub_1DA66C820();
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
    *(_QWORD *)(v0 + 328) = v38;
    v38(v31, v52, v32);
    sub_1DA66C7F0();
    v39 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v39;
    *v39 = v0;
    v39[1] = sub_1DA522560;
    return sub_1DA66C7E4();
  }
}

uint64_t sub_1DA522560()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA522608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void (*v34)(uint64_t, uint64_t);
  void *v36;
  id v37;
  void (*v38)(uint64_t, uint64_t);
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_1DA66C7FC();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 264);
    v5 = *(_QWORD *)(v0 + 272);
    v7 = *(_QWORD *)(v0 + 168);
    v50 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 152);
    sub_1DA5239D8(*(_QWORD *)(v0 + 112));
    v10 = sub_1DA66C814();
    sub_1DA47E32C(&qword_1F026A0B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7D608], MEMORY[0x1E0D7D610]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v11, *MEMORY[0x1E0D7D600], v10);
    swift_willThrow();
    swift_release();
    v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v12(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v12(v50, v8);
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  sub_1DA66CFAC();
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 88))(v13, v15);
  if (v16 == *MEMORY[0x1E0D7DF48])
  {
LABEL_6:
    sub_1DA66DE70();
    v17 = sub_1DA66DEDC();
    v18 = sub_1DA66FD90();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1DA478000, v17, v18, "We already have a remote compatible id, no PML needed", v19, 2u);
      MEMORY[0x1DF0A0474](v19, -1, -1);
    }
    v20 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    v21 = *(_QWORD *)(v0 + 232);
    v22 = *(_QWORD *)(v0 + 208);

    v20(v21, v22);
    sub_1DA66CF7C();
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4B350]), sel_init);
    objc_msgSend(v23, sel_setTracklistSource_, 500);
    v24 = (void *)objc_opt_self();
    v25 = (void *)sub_1DA66FA90();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 16) = 0;
    v26 = objc_msgSend(v24, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v25, 0, v0 + 16);

    v27 = *(void **)(v0 + 16);
    v48 = *(_QWORD *)(v0 + 264);
    v49 = *(_QWORD *)(v0 + 288);
    v46 = *(_QWORD *)(v0 + 168);
    v47 = *(_QWORD *)(v0 + 272);
    v28 = *(_QWORD *)(v0 + 152);
    v51 = *(_QWORD *)(v0 + 160);
    v30 = *(_QWORD *)(v0 + 136);
    v29 = *(_QWORD *)(v0 + 144);
    v31 = *(_QWORD *)(v0 + 120);
    v32 = *(_QWORD *)(v0 + 128);
    if (v26)
    {
      v33 = v27;
      objc_msgSend(v23, sel_setTracklistToken_, v26);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v34(v46, v29);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v48);
      v34(v51, v29);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(id))(v0 + 8))(v23);
    }
    v36 = v23;
    v37 = v27;
    sub_1DA66C1FC();

    swift_willThrow();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    v38 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v38(v46, v29);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v48);
    v38(v51, v29);
    goto LABEL_11;
  }
  if (v16 == *MEMORY[0x1E0D7DF58])
  {
LABEL_5:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    goto LABEL_6;
  }
  if (v16 == *MEMORY[0x1E0D7DF28]
    || v16 == *MEMORY[0x1E0D7DF20]
    || v16 == *MEMORY[0x1E0D7DF50]
    || v16 == *MEMORY[0x1E0D7DF60]
    || v16 == *MEMORY[0x1E0D7DF18])
  {
    goto LABEL_19;
  }
  if (v16 == *MEMORY[0x1E0D7DF30])
    goto LABEL_5;
  if (v16 != *MEMORY[0x1E0D7DF40])
LABEL_19:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  sub_1DA66DE70();
  v39 = sub_1DA66DEDC();
  v40 = sub_1DA66FDC0();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v41 = 0;
    _os_log_impl(&dword_1DA478000, v39, v40, "Fetching from PML for remote playback", v41, 2u);
    MEMORY[0x1DF0A0474](v41, -1, -1);
  }
  v42 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
  v43 = *(_QWORD *)(v0 + 240);
  v44 = *(_QWORD *)(v0 + 208);

  v42(v43, v44);
  v45 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v45;
  *v45 = v0;
  v45[1] = sub_1DA522D7C;
  return sub_1DA66C7D8();
}

uint64_t sub_1DA522D7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA522E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, uint64_t, uint64_t);
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int *v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void (*v48)(uint64_t, uint64_t);
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(void **)(v0 + 24);
  v5 = sub_1DA66C838();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  v6 = objc_msgSend(v4, sel_playerPath);
  v7 = objc_msgSend(v6, sel_route);

  if (v7)
  {
    objc_msgSend(v7, sel_isHomePodRoute);

  }
  v8 = MEMORY[0x1E0DEE9D8];
  v65 = MEMORY[0x1E0DEE9D8];
  v9 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  if (v9)
  {
    v10 = 0;
    v11 = *(_QWORD *)(v0 + 40);
    v62 = (id)v5;
    v57 = v9;
    do
    {
      if (v10 >= *(_QWORD *)(v5 + 16))
        __break(1u);
      v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v13 = *(_QWORD *)(v11 + 72);
      (*(void (**)(_QWORD, unint64_t, _QWORD))(v11 + 16))(*(_QWORD *)(v0 + 56), v5 + v12 + v13 * v10, *(_QWORD *)(v0 + 32));
      v14 = v0;
      if ((sub_1DA66C790() & 1) != 0)
      {
        v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
        v15(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DA509EEC(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v14 = v0;
          v8 = v65;
        }
        v17 = *(_QWORD *)(v8 + 16);
        v16 = *(_QWORD *)(v8 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1DA509EEC(v16 > 1, v17 + 1, 1);
          v14 = v0;
          v8 = v65;
        }
        v18 = *(_QWORD *)(v14 + 48);
        v19 = *(_QWORD *)(v14 + 32);
        *(_QWORD *)(v8 + 16) = v17 + 1;
        v15(v8 + v12 + v17 * v13, v18, v19);
        v65 = v8;
        v5 = (uint64_t)v62;
        v9 = v57;
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32));
      }
      ++v10;
    }
    while (v9 != v10);
  }
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v8 + 16);
  v21 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  v22 = v20 >= v21;
  v23 = v20 - v21;
  if (v22)
  {
    v36 = *(_QWORD *)(v0 + 160);
    v37 = swift_task_alloc();
    *(_QWORD *)(v37 + 16) = v36;
    sub_1DA5219D0((void (*)(uint64_t *__return_ptr, uint64_t))sub_1DA5242D0, v37, v8);
    swift_release();
    swift_task_dealloc();
    v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4B350]), sel_init);
    objc_msgSend(v64, sel_setTracklistSource_, 500);
    v38 = (void *)objc_opt_self();
    v39 = (void *)sub_1DA66FA90();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 16) = 0;
    v40 = objc_msgSend(v38, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v39, 0, v0 + 16);

    v41 = *(void **)(v0 + 16);
    v54 = *(_QWORD *)(v0 + 272);
    v56 = *(_QWORD *)(v0 + 264);
    v59 = *(_QWORD *)(v0 + 288);
    v42 = *(_QWORD *)(v0 + 168);
    v61 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 144);
    v43 = *(_QWORD *)(v0 + 152);
    v44 = *(_QWORD *)(v0 + 128);
    v45 = *(_QWORD *)(v0 + 136);
    v46 = *(_QWORD *)(v0 + 120);
    if (v40)
    {
      v47 = v41;
      objc_msgSend(v64, sel_setTracklistToken_, v40);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
      v48 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v48(v42, v27);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v59, v56);
      v48(v61, v27);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(id))(v0 + 8))(v64);
    }
    v50 = v41;
    sub_1DA66C1FC();

    swift_willThrow();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
    v34 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v34(v42, v27);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v59, v56);
    v35 = v61;
  }
  else
  {
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 328);
    v25 = *(_QWORD *)(v0 + 288);
    v26 = *(_QWORD *)(v0 + 264);
    v58 = *(_QWORD *)(v0 + 168);
    v60 = *(_QWORD *)(v0 + 272);
    v63 = *(id *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 144);
    v55 = *(_QWORD *)(v0 + 152);
    v51 = *(_QWORD *)(v0 + 128);
    v52 = *(_QWORD *)(v0 + 120);
    v53 = *(_QWORD *)(v0 + 136);
    swift_release();
    v28 = sub_1DA66CF58();
    sub_1DA47E32C(&qword_1F026A0B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DE08], MEMORY[0x1E0D7DE10]);
    swift_allocError();
    v30 = v29;
    v31 = v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026A0C0) + 48);
    v24(v30, v25, v26);
    v32 = sub_1DA66CF64();
    v33 = (unsigned int *)MEMORY[0x1E0D7DE28];
    if (v23 <= 1)
      v33 = (unsigned int *)MEMORY[0x1E0D7DE18];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, *v33, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x1E0D7DDD8], v28);
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v53, v52);
    v34 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v34(v58, v27);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v25, v26);
    v35 = (uint64_t)v63;
  }
  v34(v35, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA523574()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5236B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 152);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA523834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 120);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v10(v12, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5239D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A0A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA523A18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1DA66CFB8();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1DA47E32C(&qword_1F026A0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DE88], MEMORY[0x1E0D7DE98]),
        v6 = sub_1DA66F7F0(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1DA47E32C((unint64_t *)&unk_1F026A0D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DE88], MEMORY[0x1E0D7DEA0]);
      v12 = sub_1DA66F850();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1DA523B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_9;
  sub_1DA670798();
  sub_1DA66D774();
  v5 = sub_1DA6707C8();
  v6 = -1 << *(_BYTE *)(a4 + 32);
  v7 = v5 & ~v6;
  v8 = a4 + 56;
  if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    goto LABEL_9;
  v9 = *(_QWORD *)(a4 + 48) + 24 * v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1DA5242E8(*(_QWORD *)v9, v11, v12);
  v13 = sub_1DA66D768();
  sub_1DA5242F8(v10, v11, v12);
  if ((v13 & 1) != 0)
  {
    v14 = 1;
    return v14 & 1;
  }
  v15 = ~v6;
  v16 = (v7 + 1) & v15;
  if (((*(_QWORD *)(v8 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
  {
LABEL_9:
    v14 = 0;
    return v14 & 1;
  }
  do
  {
    v17 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    sub_1DA5242E8(*(_QWORD *)v17, v19, v20);
    v14 = sub_1DA66D768();
    sub_1DA5242F8(v18, v19, v20);
    if ((v14 & 1) != 0)
      break;
    v16 = (v16 + 1) & v15;
  }
  while (((*(_QWORD *)(v8 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
  return v14 & 1;
}

uint64_t sub_1DA523D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1DA670798();
    sub_1DA66F94C();
    v6 = sub_1DA6707C8();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1DA6706D8() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1DA6706D8() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1DA523E7C(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  sub_1DA670798();
  sub_1DA6707A4();
  v4 = sub_1DA6707C8();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1DA523F68(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_1DA6703CC();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_1DA670198(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_1DA524308();
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_1DA6701A4();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_1DA6701A4();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

BOOL sub_1DA5240B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = sub_1DA67078C();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1DA52417C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v22 = a1;
  v23 = a2;
  v24 = a3;
  v3 = sub_1DA66C808();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66C7B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66D498();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v22, v7, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v23, v3);
  sub_1DA66D48C();
  v16 = sub_1DA66D450();
  v18 = v17;
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v20 = v24;
  *v24 = v16;
  v20[1] = v18;
  return result;
}

uint64_t sub_1DA5242D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1DA52417C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1DA5242E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1DA5242F8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1DA524308()
{
  unint64_t result;

  result = qword_1EDAE4C00;
  if (!qword_1EDAE4C00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDAE4C00);
  }
  return result;
}

uint64_t FetchShowEntitiesIntent.init(contentIDs:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t static FetchShowEntitiesIntent.kind.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t FetchShowEntitiesIntent.contentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1DA524370(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001ELL;
  a1[1] = 0x80000001DA68C610;
}

ValueMetadata *type metadata accessor for FetchShowEntitiesIntent()
{
  return &type metadata for FetchShowEntitiesIntent;
}

uint64_t XPAccountsMatchFieldsProvider.init(asPartOf:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1DA5243F0();
  sub_1DA66EDDC();
  result = swift_release();
  *a1 = v3;
  return result;
}

unint64_t sub_1DA5243F0()
{
  unint64_t result;

  result = qword_1EDAE2030;
  if (!qword_1EDAE2030)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDAE2030);
  }
  return result;
}

uint64_t sub_1DA52442C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1DA5243F0();
  sub_1DA66EDDC();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t XPAccountsMatchFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(uint64_t a1)
{
  id *v1;

  objc_msgSend(*v1, sel_ams_isActiveAccountCombined);
  sub_1DA66CB68();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  MetricsFieldsBuilder.addValue<A>(_:forField:)();
  return swift_bridgeObjectRelease();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1DA52454C(uint64_t a1)
{
  id *v1;

  objc_msgSend(*v1, sel_ams_isActiveAccountCombined);
  sub_1DA66CB68();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  MetricsFieldsBuilder.addValue<A>(_:forField:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA5245F8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DA4AD77C;
  return sub_1DA66F214();
}

uint64_t sub_1DA524674()
{
  return sub_1DA66F220();
}

ValueMetadata *type metadata accessor for XPAccountsMatchFieldsProvider()
{
  return &type metadata for XPAccountsMatchFieldsProvider;
}

Swift::Void __swiftcall UIApplication.failExtendedLaunchTest(_:)(Swift::String_optional a1)
{
  void *v1;
  void *object;
  id v3;
  uint64_t v4;
  id v5;

  object = a1.value._object;
  v3 = objc_msgSend(v1, sel__launchTestName);
  if (object)
    v4 = sub_1DA66F88C();
  else
    v4 = 0;
  v5 = (id)v4;
  objc_msgSend(v1, sel_failedTest_withFailure_, v3);

}

void destroy for FairPlayEpisodeViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for FairPlayEpisodeViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for FairPlayEpisodeViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v4 = *(void **)(a1 + 48);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for FairPlayEpisodeViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for FairPlayEpisodeViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FairPlayEpisodeViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FairPlayDebugDownloadEpisodeCell()
{
  return &type metadata for FairPlayDebugDownloadEpisodeCell;
}

uint64_t sub_1DA524958()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA524968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  char v94[8];
  uint64_t v95[3];

  v4 = *(_OWORD *)(a1 + 32);
  v5 = *(_OWORD *)a1;
  v91 = *(_OWORD *)(a1 + 16);
  v92 = v4;
  v90 = v5;
  v93 = *(_QWORD *)(a1 + 48);
  sub_1DA498918();
  swift_bridgeObjectRetain();
  v6 = sub_1DA66E734();
  v8 = v7;
  v10 = v9 & 1;
  sub_1DA66E6D4();
  v11 = sub_1DA66E710();
  v68 = v12;
  v69 = v11;
  v59 = v13;
  v70 = v14;
  swift_release();
  sub_1DA5251EC(v6, v8, v10);
  swift_bridgeObjectRelease();
  v81 = *((_QWORD *)&v90 + 1);
  v82 = v91;
  swift_bridgeObjectRetain();
  v15 = sub_1DA66E734();
  v17 = v16;
  v19 = v18 & 1;
  sub_1DA66E650();
  v66 = sub_1DA66E710();
  v67 = v20;
  v76 = v21;
  v58 = v22;
  swift_release();
  sub_1DA5251EC(v15, v17, v19);
  swift_bridgeObjectRelease();
  v23 = sub_1DA66E50C();
  sub_1DA524F50(a1, (uint64_t)&v81);
  v63 = v82;
  v64 = v81;
  v74 = v83;
  v24 = v85;
  v72 = v84;
  v25 = v86;
  v75 = v87;
  v65 = v88;
  v62 = v89;
  sub_1DA5251FC((uint64_t)&v93, (uint64_t)v94);
  sub_1DA5251FC((uint64_t)v94, (uint64_t)v95);
  if (v95[0])
  {
    BYTE5(v61[1]) = 0;
    HIWORD(v61[1]) = -5120;
    strcpy((char *)v61, "Expiry Date:");
    v26 = sub_1DA664264();
    if (v27)
      v28 = v26;
    else
      v28 = 0;
    v29 = 0xE000000000000000;
    if (v27)
      v29 = v27;
    v81 = v28;
    v82 = v29;
    v30 = sub_1DA66E734();
    v32 = v31;
    v34 = v33;
    v35 = v23;
    v37 = v36 & 1;
    LOBYTE(v81) = 0;
    sub_1DA525244(0x4420797269707845, 0xEC0000003A657461, 0);
    v38 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1DA525244(v30, v32, v37);
    swift_bridgeObjectRetain();
    v60 = v30;
    v77 = v32;
    v78 = v37;
    v39 = v37;
    v23 = v35;
    sub_1DA5251EC(v30, v32, v39);
    v79 = v34;
    swift_bridgeObjectRelease();
    sub_1DA5251EC(0x4420797269707845, 0xEC0000003A657461, v81);
    v71 = v38;
    swift_bridgeObjectRelease();
    v73 = 1;
  }
  else
  {
    v61[0] = 0;
    v61[1] = 0;
    v71 = 0;
    v60 = 0;
    v77 = 0;
    v78 = 0;
    v79 = 0;
    v73 = 0;
  }
  v40 = sub_1DA66E50C();
  sub_1DA525060(a1, (uint64_t)&v81);
  v41 = v81;
  v42 = v82;
  v55 = v81;
  v56 = v82;
  v43 = v83;
  *(_QWORD *)(a2 + 80) = v23;
  *(_BYTE *)(a2 + 120) = v74;
  *(_QWORD *)(a2 + 128) = v72;
  *(_QWORD *)(a2 + 136) = v24;
  v45 = v84;
  v44 = v85;
  *(_BYTE *)(a2 + 144) = v25;
  v46 = v86;
  *(_QWORD *)(a2 + 256) = v40;
  *(_BYTE *)(a2 + 72) = 1;
  *(_BYTE *)(a2 + 96) = 1;
  *(_BYTE *)(a2 + 272) = 1;
  *(_QWORD *)(a2 + 304) = v45;
  *(_QWORD *)(a2 + 312) = v44;
  v48 = v87;
  v47 = v88;
  *(_BYTE *)(a2 + 320) = v46;
  v49 = v89;
  *(_QWORD *)a2 = v69;
  *(_QWORD *)(a2 + 8) = v68;
  *(_BYTE *)(a2 + 16) = v59 & 1;
  v50 = v66;
  *(_QWORD *)(a2 + 24) = v70;
  *(_QWORD *)(a2 + 32) = v66;
  *(_QWORD *)(a2 + 40) = v76;
  *(_BYTE *)(a2 + 48) = v58 & 1;
  *(_QWORD *)(a2 + 56) = v67;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 88) = 0;
  v51 = v63;
  v52 = v64;
  *(_QWORD *)(a2 + 104) = v64;
  *(_QWORD *)(a2 + 112) = v63;
  *(_QWORD *)(a2 + 152) = v75;
  *(_QWORD *)(a2 + 160) = v65;
  *(_QWORD *)(a2 + 168) = v62;
  *(_QWORD *)(a2 + 176) = v61[0];
  *(_QWORD *)(a2 + 184) = v61[1];
  *(_QWORD *)(a2 + 192) = 0;
  v53 = v71;
  *(_QWORD *)(a2 + 200) = v71;
  *(_QWORD *)(a2 + 208) = v60;
  *(_QWORD *)(a2 + 216) = v77;
  *(_QWORD *)(a2 + 224) = v78;
  *(_QWORD *)(a2 + 232) = v79;
  *(_QWORD *)(a2 + 240) = 0;
  *(_BYTE *)(a2 + 248) = v73;
  *(_QWORD *)(a2 + 264) = 0;
  *(_QWORD *)(a2 + 280) = v41;
  *(_QWORD *)(a2 + 288) = v42;
  v57 = v43;
  *(_BYTE *)(a2 + 296) = v43;
  *(_QWORD *)(a2 + 328) = v48;
  *(_QWORD *)(a2 + 336) = v47;
  *(_QWORD *)(a2 + 344) = v49;
  v80 = v58 & 1;
  LOBYTE(v81) = v59 & 1;
  sub_1DA525244(v69, v68, v59 & 1);
  swift_bridgeObjectRetain();
  sub_1DA525244(v50, v76, v58 & 1);
  swift_bridgeObjectRetain();
  sub_1DA525244(v52, v51, v74);
  sub_1DA66BE60();
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA525254(v61[0], v61[1], 0, v53, v60, v77, v78);
  sub_1DA525244(v55, v56, v57);
  sub_1DA66BE60();
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA5251EC(v55, v56, v57);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1DA5252BC(v61[0], v61[1], 0, v71, v60, v77, v78);
  sub_1DA5251EC(v64, v63, v74);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1DA5251EC(v66, v76, v58 & 1);
  swift_bridgeObjectRelease();
  sub_1DA5251EC(v69, v68, v59 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA524F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;

  v3 = *(_BYTE *)(a1 + 40);
  v4 = sub_1DA66E89C();
  if ((v3 & 1) != 0)
    v5 = sub_1DA66E848();
  else
    v5 = sub_1DA66E830();
  v6 = v5;
  KeyPath = swift_getKeyPath();
  *(_OWORD *)a2 = xmmword_1DA67B110;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = v4;
  *(_QWORD *)(a2 + 56) = KeyPath;
  *(_QWORD *)(a2 + 64) = v6;
  sub_1DA525244(0x6C66664F20736148, 0xEF79654B20656E69, 0);
  swift_bridgeObjectRetain();
  sub_1DA5251EC(0x6C66664F20736148, 0xEF79654B20656E69, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA525060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;

  v3 = *(_BYTE *)(a1 + 41);
  v4 = sub_1DA66E89C();
  if ((v3 & 1) != 0)
    v5 = sub_1DA66E848();
  else
    v5 = sub_1DA66E830();
  v6 = v5;
  KeyPath = swift_getKeyPath();
  *(_QWORD *)a2 = 0xD000000000000016;
  *(_QWORD *)(a2 + 8) = 0x80000001DA68C630;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = v4;
  *(_QWORD *)(a2 + 56) = KeyPath;
  *(_QWORD *)(a2 + 64) = v6;
  sub_1DA525244(0xD000000000000016, 0x80000001DA68C630, 0);
  swift_bridgeObjectRetain();
  sub_1DA5251EC(0xD000000000000016, 0x80000001DA68C630, 0);
  return swift_bridgeObjectRelease();
}

void *sub_1DA52515C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  _OWORD v6[3];
  uint64_t v7;
  _BYTE __src[352];
  _BYTE v9[359];

  v3 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v3;
  v6[2] = *(_OWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v4 = sub_1DA66E53C();
  sub_1DA524968((uint64_t)v6, (uint64_t)__src);
  memcpy(&v9[7], __src, 0x160uLL);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  return memcpy((void *)(a1 + 17), v9, 0x167uLL);
}

uint64_t sub_1DA5251EC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_1DA5251FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA525244(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_1DA66BE60();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_1DA525254(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  char v9;

  if (a4)
  {
    v9 = a7 & 1;
    sub_1DA525244(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    sub_1DA525244(a5, a6, v9);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DA5252BC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  char v9;

  if (a4)
  {
    v9 = a7 & 1;
    sub_1DA5251EC(result, a2, a3 & 1);
    swift_bridgeObjectRelease();
    sub_1DA5251EC(a5, a6, v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA525324@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA66E458();
  *a1 = result;
  return result;
}

uint64_t sub_1DA52534C()
{
  sub_1DA66BE60();
  return sub_1DA66E464();
}

unint64_t sub_1DA525378()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026A0E8;
  if (!qword_1F026A0E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026A0F0);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFCC0], v1);
    atomic_store(result, (unint64_t *)&qword_1F026A0E8);
  }
  return result;
}

uint64_t NowPlayingArtworkDataProviding.data(for:at:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1DA5253E0 + 4 * byte_1DA67B1E0[*a1]))();
}

uint64_t sub_1DA5253E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
}

uint64_t sub_1DA5253F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
}

BOOL NowPlayingArtworkDataProviding.supportsShowPageTall.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2590);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 40))(a1, a2, v5);
  v8 = type metadata accessor for NowPlayingArtwork.Data();
  v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) != 1;
  sub_1DA47E2F0((uint64_t)v7, &qword_1EDAE2590);
  return v9;
}

uint64_t NowPlayingArtworkDataProviding.supportsEpisodeArtwork.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t *v34;
  uint64_t v35;
  char v36;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v4);
  v59 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v61 = (char *)v55 - v7;
  v8 = sub_1DA66C358();
  v62 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  MEMORY[0x1E0C80A78](v8);
  v57 = (uint64_t)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v56 = (uint64_t)v55 - v11;
  MEMORY[0x1E0C80A78](v12);
  v58 = (char *)v55 - v13;
  MEMORY[0x1E0C80A78](v14);
  v60 = (char *)v55 - v15;
  v16 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v16);
  v18 = (_QWORD *)((char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = type metadata accessor for NowPlayingArtwork.Data();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v55 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2590);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v29);
  v32 = (char *)v55 - v31;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 32))(a1, a2, v30);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v33(v32, 1, v19) == 1)
  {
    sub_1DA47E2F0((uint64_t)v32, &qword_1EDAE2590);
LABEL_7:
    v36 = 0;
    return v36 & 1;
  }
  sub_1DA525A18((uint64_t)v32, (uint64_t)v25);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DA47F880((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
    sub_1DA47F880((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
    goto LABEL_7;
  }
  sub_1DA51C1BC((uint64_t)v25, (uint64_t)v18);
  v55[1] = *v18;
  swift_bridgeObjectRetain();
  sub_1DA47F880((uint64_t)v18, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  sub_1DA47F880((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  if (v33(v28, 1, v19) == 1)
  {
    swift_bridgeObjectRelease();
    v34 = &qword_1EDAE2590;
    v35 = (uint64_t)v28;
LABEL_16:
    sub_1DA47E2F0(v35, v34);
    v36 = 1;
    return v36 & 1;
  }
  sub_1DA525A18((uint64_t)v28, (uint64_t)v22);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DA47F880((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
    sub_1DA47F880((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
    swift_bridgeObjectRelease();
    v36 = 1;
    return v36 & 1;
  }
  sub_1DA51C1BC((uint64_t)v22, (uint64_t)v18);
  swift_bridgeObjectRetain();
  sub_1DA47F880((uint64_t)v18, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  sub_1DA47F880((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingArtwork.Data);
  v38 = v61;
  sub_1DA66C334();
  swift_bridgeObjectRelease();
  v40 = v62;
  v39 = v63;
  v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
  if (v41(v38, 1, v63) == 1)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    v34 = &qword_1EDAE5020;
    v35 = (uint64_t)v38;
    goto LABEL_16;
  }
  v42 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v43 = v60;
  v42(v60, v38, v39);
  v38 = v59;
  sub_1DA66C334();
  swift_bridgeObjectRelease();
  if (v41(v38, 1, v39) == 1)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v39);
    goto LABEL_15;
  }
  v44 = v58;
  v42(v58, v38, v39);
  v45 = v56;
  sub_1DA5C9808(v56);
  v46 = sub_1DA66C298();
  v48 = v47;
  v49 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v49(v45, v39);
  v50 = v57;
  sub_1DA5C9808(v57);
  v51 = sub_1DA66C298();
  v53 = v52;
  v49(v50, v39);
  if (v46 == v51 && v48 == v53)
  {
    swift_bridgeObjectRelease_n();
    v36 = 0;
  }
  else
  {
    v54 = sub_1DA6706D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v54 ^ 1;
  }
  v49((uint64_t)v44, v39);
  v49((uint64_t)v43, v39);
  return v36 & 1;
}

uint64_t sub_1DA525A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingArtwork.Data();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Bool __swiftcall NowPlayingArtworkDataProviding.shouldShowMetadataArtwork(at:)(Swift::Double at)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  Swift::Bool v15;
  uint64_t v16;
  uint64_t v18;

  v4 = v2;
  v5 = v1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2590);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = NowPlayingArtworkDataProviding.supportsEpisodeArtwork.getter(v5, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v3, v5);
  if ((v14 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v5);
    return 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, Swift::Double))(v4 + 48))(v5, v4, at);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v5);
    v16 = type metadata accessor for NowPlayingArtwork.Data();
    v15 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v9, 1, v16) != 1;
    sub_1DA47E2F0((uint64_t)v9, &qword_1EDAE2590);
  }
  return v15;
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.adamID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.isVideoEpisode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.showArtworkData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.episodeArtworkData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.showPageTallArtworkData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.chapterArtworkData(at:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t Color.init(_:)(unsigned int a1)
{
  unsigned int v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = HIBYTE(a1);
  v3 = sub_1DA66E824();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v7 + 104))(v6, *MEMORY[0x1E0CDF3E0], v4);
  return MEMORY[0x1DF09D24C](v6, (double)a1 / 255.0, (double)BYTE1(a1) / 255.0, (double)BYTE2(a1) / 255.0, (double)v2 / 255.0);
}

uint64_t Color.init(hexString:opacity:)(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  double v7;
  int v8;
  unsigned int v9;
  uint64_t v10;

  v2 = sub_1DA66E824();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1DA66DD2C();
  v7 = a1 * 255.0;
  if ((~COERCE__INT64(a1 * 255.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 256.0)
  {
    v8 = result;
    v9 = (int)v7;
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDF3E0], v2);
    return MEMORY[0x1DF09D24C](v5, (double)v8 / 255.0, (double)BYTE1(v8) / 255.0, (double)BYTE2(v8) / 255.0, (double)v9 / 255.0);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DA525E04()
{
  uint64_t v0;

  v0 = sub_1DA66D39C();
  __swift_allocate_value_buffer(v0, qword_1F026A0F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F026A0F8);
  sub_1DA52653C(&qword_1F026A120, MEMORY[0x1E0D7E370]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A128);
  sub_1DA52657C();
  return sub_1DA670378();
}

uint64_t static DeviceCapabilitiesEnvironmentKey.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268500 != -1)
    swift_once();
  v2 = sub_1DA66D39C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F026A0F8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static DeviceCapabilitiesEnvironmentKey.defaultValue.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1F0268500 != -1)
    swift_once();
  v2 = sub_1DA66D39C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F026A0F8);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static DeviceCapabilitiesEnvironmentKey.defaultValue.modify())()
{
  uint64_t v0;

  if (qword_1F0268500 != -1)
    swift_once();
  v0 = sub_1DA66D39C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1F026A0F8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1DA52606C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F0268500 != -1)
    swift_once();
  v2 = sub_1DA66D39C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F026A0F8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DA526104()
{
  sub_1DA52653C(&qword_1F026A118, MEMORY[0x1E0D7E368]);
  return sub_1DA66E404();
}

uint64_t EnvironmentValues.deviceCapabilities.getter()
{
  sub_1DA526198();
  return sub_1DA66E4DC();
}

unint64_t sub_1DA526198()
{
  unint64_t result;

  result = qword_1F026A110;
  if (!qword_1F026A110)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for DeviceCapabilitiesEnvironmentKey, &type metadata for DeviceCapabilitiesEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1F026A110);
  }
  return result;
}

uint64_t sub_1DA5261DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  v2 = sub_1DA66D39C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  sub_1DA526198();
  sub_1DA66E4E8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t EnvironmentValues.deviceCapabilities.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1DA66D39C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_1DA526198();
  sub_1DA66E4E8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*EnvironmentValues.deviceCapabilities.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1DA66D39C();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  v3[6] = sub_1DA526198();
  sub_1DA66E4DC();
  return sub_1DA526408;
}

void sub_1DA526408(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 16) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 32), v3[5], v3[1]);
  v5 = (void *)v3[5];
  v6 = (void *)v3[3];
  v7 = (void *)v3[4];
  v8 = v3[1];
  v9 = v3[2];
  if ((a2 & 1) != 0)
  {
    v4(v3[3], v3[4], v3[1]);
    sub_1DA66E4E8();
    v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
  }
  else
  {
    sub_1DA66E4E8();
    v10 = *(void (**)(void *, uint64_t))(v9 + 8);
  }
  v10(v5, v8);
  free(v5);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t sub_1DA5264EC()
{
  sub_1DA526198();
  return sub_1DA66E4DC();
}

ValueMetadata *type metadata accessor for DeviceCapabilitiesEnvironmentKey()
{
  return &type metadata for DeviceCapabilitiesEnvironmentKey;
}

uint64_t sub_1DA52653C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1DA66D39C();
    result = MEMORY[0x1DF0A039C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DA52657C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026A130;
  if (!qword_1F026A130)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026A128);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1F026A130);
  }
  return result;
}

uint64_t sub_1DA5265C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32) + *(_QWORD *)(v0 + 48);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 2;
  swift_release();
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA526638()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LazyJSStack.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI11LazyJSStack_bag;
  v2 = sub_1DA66F4FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t LazyJSStack.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI11LazyJSStack_bag;
  v2 = sub_1DA66F4FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t LazyJSStack.dispatcher<A, B>(for:asPartOf:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_1DA52674C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = v0[3];
  v2 = (_QWORD *)v0[2];
  v2[3] = v0[4];
  v2[4] = sub_1DA47E32C((unint64_t *)&unk_1EDADF7F0, (uint64_t (*)(uint64_t))type metadata accessor for LazyJSStack, (uint64_t)&protocol conformance descriptor for LazyJSStack);
  *v2 = v1;
  v4 = (uint64_t (*)(void))v0[1];
  sub_1DA66BE60();
  return v4();
}

uint64_t LazyJSStack.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = *v5;
  v7 = sub_1DA66F208();
  v6[10] = v7;
  v6[11] = *(_QWORD *)(v7 - 8);
  v6[12] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF98);
  v6[13] = v8;
  v6[14] = *(_QWORD *)(v8 - 8);
  v6[15] = swift_task_alloc();
  v9 = sub_1DA66ED40();
  v6[16] = v9;
  v6[17] = *(_QWORD *)(v9 - 8);
  v6[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA526880()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[17];
  v1 = v0[18];
  v3 = v0[16];
  v4 = v0[9];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0D3F8D8], v3);
  sub_1DA66F49C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = swift_task_alloc();
  v0[19] = v5;
  *(_QWORD *)(v5 + 16) = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v0[20] = v6;
  *v6 = v0;
  v6[1] = sub_1DA526974;
  return sub_1DA66F4C0();
}

uint64_t sub_1DA526974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_1DA5269F0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v2 = v0[11];
  v1 = (_QWORD *)v0[12];
  v3 = v0[10];
  v4 = v0[2];
  sub_1DA66F1FC();
  sub_1DA66BE60();
  sub_1DA66EE3C();
  *v1 = v4;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0D406D0], v3);
  v0[21] = sub_1DA66F1E4();
  swift_release();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v1, v3);
  v7 = (uint64_t (*)(void))((char *)&dword_1F026A170 + dword_1F026A170);
  v5 = (_QWORD *)swift_task_alloc();
  v0[22] = v5;
  *v5 = v0;
  v5[1] = sub_1DA526AE0;
  return v7();
}

uint64_t sub_1DA526AE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;

  v3 = (_QWORD *)*v2;
  v3[23] = a1;
  v3[24] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v5 = (_QWORD *)swift_task_alloc();
  v3[25] = v5;
  *v5 = v3;
  v5[1] = sub_1DA526B90;
  return sub_1DA66F5EC();
}

uint64_t sub_1DA526B90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA526BFC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA526C5C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA526CBC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LazyJSStack.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[5];

  v39 = a4;
  v36 = a1;
  v7 = sub_1DA66ECC8();
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  v38 = *(_QWORD *)(v34 + 64);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v12);
  v13 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v4 + OBJC_IVAR____TtC10PodcastsUI11LazyJSStack_stack);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFFA0);
  sub_1DA66BE60();
  v18 = sub_1DA66F658();
  v19 = sub_1DA66FB98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = &unk_1F026A188;
  v20[5] = v17;
  v37 = v18;
  v20[6] = v18;
  sub_1DA66BE60();
  sub_1DA527E84((uint64_t)v16, (uint64_t)&unk_1F026A1A0, (uint64_t)v20);
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v36, a3);
  v21 = v34;
  v22 = v9;
  v23 = v9;
  v24 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v22, a2, v35);
  v25 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v26 = v21;
  v27 = (v11 + *(unsigned __int8 *)(v21 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v28 = swift_allocObject();
  v29 = v39;
  *(_QWORD *)(v28 + 16) = a3;
  *(_QWORD *)(v28 + 24) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v28 + v25, v13, a3);
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v28 + v27, v23, v24);
  sub_1DA66F5F8();
  swift_getAssociatedTypeWitness();
  v30 = sub_1DA66F664();
  MEMORY[0x1DF0A039C](MEMORY[0x1E0D41378], v30);
  v40[3] = sub_1DA66F010();
  v40[4] = MEMORY[0x1E0D40248];
  __swift_allocate_boxed_opaque_existential_1(v40);
  sub_1DA66F004();
  v31 = sub_1DA66F634();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  return v31;
}

uint64_t sub_1DA527008(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1F026A170 + dword_1F026A170);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1DA527068;
  return v4();
}

uint64_t sub_1DA527068(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1DA5270C4(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4AD77C;
  v5[2] = a1;
  v5[3] = v4;
  v5[4] = *v4;
  return swift_task_switch();
}

uint64_t sub_1DA527130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1DA4A9520;
  return LazyJSStack.dispatch<A>(_:objectGraph:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1DA5271B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return LazyJSStack.dispatch<A>(intent:jsonContext:)(a1, a2, a3, a4);
}

uint64_t sub_1DA5271D4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527268()
{
  uint64_t v0;

  swift_release();
  sub_1DA487760(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 280);
  v8 = *(_QWORD *)(v0 + 296);
  v9 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 272);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 16))(v1, *(_QWORD *)(v0 + 408), v2);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
  sub_1DA66EC68();
  sub_1DA66EC5C();
  swift_getErrorValue();
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 200) = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 176));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_1, v3, v4);
  sub_1DA66EC44();
  sub_1DA47E2F0(v0 + 176, &qword_1EDAE5130);
  sub_1DA66EC5C();
  sub_1DA66EC80();
  sub_1DA66F550();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v2);
  swift_willThrow();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v9);
  sub_1DA487760(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527514()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527550()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527584()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5275B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  sub_1DA47F880(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for JSPackageLoader);
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))type metadata accessor for JSPackageFetcher);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52762C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5276AC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 384));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 360);
  (*(void (**)(_QWORD, _QWORD))(v0 + 472))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_1DA487760(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5277FC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5278B8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52797C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527A58()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527B3C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527B9C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1016);
  v2 = *(_QWORD *)(v0 + 1000);
  v3 = *(_QWORD *)(v0 + 992);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1016);
  v2 = *(_QWORD *)(v0 + 1000);
  v3 = *(_QWORD *)(v0 + 992);

  sub_1DA487760(v0 + 672);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1016);
  v2 = *(_QWORD *)(v0 + 1000);
  v3 = *(_QWORD *)(v0 + 992);

  __swift_destroy_boxed_opaque_existential_0(v0 + 792);
  sub_1DA487760(v0 + 672);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 1016);
  v2 = *(_QWORD *)(v0 + 1000);
  v3 = *(_QWORD *)(v0 + 992);
  v4 = *(_QWORD *)(v0 + 984);
  v5 = *(_QWORD *)(v0 + 968);
  v6 = *(_QWORD *)(v0 + 960);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  __swift_destroy_boxed_opaque_existential_0(v0 + 792);
  sub_1DA487760(v0 + 672);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA527E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DA66FB98();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1DA66FB8C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1DA47E2F0(a1, &qword_1EDAE2000);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DA66FB38();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1DA527FD0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DA528034;
  return v6(a1);
}

uint64_t sub_1DA528034()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DA528080(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v6[2] = a6;
  v8 = sub_1DA66ED70();
  v6[3] = v8;
  v6[4] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v6[5] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc();
  v6[6] = v10;
  *v10 = v6;
  v10[1] = sub_1DA528118;
  return v12(v9);
}

uint64_t sub_1DA528118()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA52817C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  sub_1DA66F640();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5281D4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  sub_1DA66F628();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52821C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_1DA528284;
  return v9(v6 + 16);
}

uint64_t sub_1DA528284()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5282E8()
{
  uint64_t v0;

  sub_1DA66F640();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA528324()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_1DA66F628();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA528364(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v6[2] = a6;
  v8 = sub_1DA66F028();
  v6[3] = v8;
  v6[4] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v6[5] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc();
  v6[6] = v10;
  *v10 = v6;
  v10[1] = sub_1DA5283FC;
  return v12(v9);
}

uint64_t sub_1DA5283FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA528460(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v4 + 24) = a1;
  v7 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_1DA5284C8;
  return v7(v4 + 16);
}

uint64_t sub_1DA5284C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (!v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1DA528518()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DA52853C(_QWORD *a1@<X8>)
{
  *a1 = 0x4034000000000000;
}

uint64_t sub_1DA528548(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (__cdecl *v6)();

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  v3[2] = a1;
  v6 = (uint64_t (__cdecl *)())((char *)&dword_1F026A170 + dword_1F026A170);
  v4 = (_QWORD *)swift_task_alloc();
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_1DA527068;
  return v6();
}

uint64_t sub_1DA5285D0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA528604(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1DA4AD77C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1F026A198
                                                                                     + dword_1F026A198))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1DA528698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DA66ECC8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1DA528744()
{
  sub_1DA66ECC8();
  sub_1DA66F5F8();
  return sub_1DA66EE84();
}

uint64_t sub_1DA5287E8()
{
  return type metadata accessor for LazyJSStack();
}

uint64_t method lookup function for LazyJSStack()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DA5287FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA528820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4A9520;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1F026A1C8 + dword_1F026A1C8))(a1, v4);
}

uint64_t sub_1DA528890()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5288BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DA4A9520;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1F026A1E0 + dword_1F026A1E0))(a1, v4, v5, v6);
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x1DF0A0474);
  return result;
}

unint64_t sub_1DA528974()
{
  unint64_t result;

  result = qword_1F026A260;
  if (!qword_1F026A260)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67C5B4, &type metadata for JSPackageManifest);
    atomic_store(result, (unint64_t *)&qword_1F026A260);
  }
  return result;
}

void sub_1DA5289C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1DA66C1F0();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t static StoreResponseDelegateError.== infix(_:_:)()
{
  return 1;
}

uint64_t StoreResponseDelegateError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t StoreResponseDelegateError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t sub_1DA528A8C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1DA5293E8(a3, a4, a5, (uint64_t)&unk_1EA0CAA60, (uint64_t)sub_1DA52980C, (uint64_t)&block_descriptor_19);
}

uint64_t sub_1DA528B88(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1DA5293E8(a3, a4, a5, (uint64_t)&unk_1EA0CA9E8, (uint64_t)sub_1DA52976C, (uint64_t)&block_descriptor_1);
}

uint64_t sub_1DA528C84(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1DA5293E8(a3, a4, a5, (uint64_t)&unk_1EA0CAAD8, (uint64_t)sub_1DA529848, (uint64_t)&block_descriptor_28);
}

id UIStoreResponseDelegate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id UIStoreResponseDelegate.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIStoreResponseDelegate();
  return objc_msgSendSuper2(&v2, sel_init);
}

id UIStoreResponseDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIStoreResponseDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1DA528E00(void (*a1)(_QWORD, void *), uint64_t a2, void *a3)
{
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  _QWORD v15[6];

  v6 = objc_msgSend((id)objc_opt_self(), sel_mt_rootViewController);
  if (v6
    && (v7 = v6,
        v8 = objc_msgSend(v6, sel_mt_topViewController),
        v7,
        v8))
  {
    v9 = objc_msgSend(a3, sel_account);
    if (v9)
    {
      v10 = v9;
      if (objc_msgSend(v9, sel_ams_isLocalAccount))
        objc_msgSend(a3, sel_setAccount_, 0);

    }
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDDE8]), sel_initWithRequest_presentingViewController_, a3, v8);
    v12 = objc_msgSend(v11, sel_performAuthentication);
    v15[4] = a1;
    v15[5] = a2;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 1107296256;
    v15[2] = sub_1DA528FC8;
    v15[3] = &block_descriptor_31;
    v13 = _Block_copy(v15);
    sub_1DA66BE60();
    swift_release();
    objc_msgSend(v12, sel_addFinishBlock_, v13);
    _Block_release(v13);

  }
  else
  {
    sub_1DA5297C4();
    v14 = (void *)swift_allocError();
    a1(0, v14);

  }
}

void sub_1DA528FCC(void (*a1)(_QWORD, void *), uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  _QWORD v13[6];

  v6 = objc_msgSend((id)objc_opt_self(), sel_mt_rootViewController);
  if (v6
    && (v7 = v6,
        v8 = objc_msgSend(v6, sel_mt_topViewController),
        v7,
        v8))
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDDD8]), sel_initWithRequest_presentingViewController_, a3, v8);
    v10 = objc_msgSend(v9, sel_present);

    v13[4] = a1;
    v13[5] = a2;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_1DA528FC8;
    v13[3] = &block_descriptor_22;
    v11 = _Block_copy(v13);
    sub_1DA66BE60();
    swift_release();
    objc_msgSend(v10, sel_addFinishBlock_, v11);
    _Block_release(v11);

  }
  else
  {
    sub_1DA5297C4();
    v12 = (void *)swift_allocError();
    a1(0, v12);

  }
}

void sub_1DA52914C(void (*a1)(_QWORD, void *), uint64_t a2, void *a3)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  _QWORD v16[6];

  v6 = objc_msgSend((id)objc_opt_self(), sel_mt_rootViewController);
  if (v6
    && (v7 = v6,
        v8 = objc_msgSend(v6, sel_mt_topViewController),
        v7,
        v8))
  {
    v9 = (void *)objc_opt_self();
    v10 = a3;
    v11 = objc_msgSend(v9, sel_sharedInstance);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDE68]), sel_initWithRequest_bag_presentingViewController_, v10, v11, v8);

    v13 = objc_msgSend(v12, sel_presentEngagement);
    v16[4] = a1;
    v16[5] = a2;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_1DA528FC8;
    v16[3] = &block_descriptor_13;
    v14 = _Block_copy(v16);
    sub_1DA66BE60();
    swift_release();
    objc_msgSend(v13, sel_addFinishBlock_, v14);
    _Block_release(v14);

  }
  else
  {
    sub_1DA5297C4();
    v15 = (void *)swift_allocError();
    a1(0, v15);

  }
}

void sub_1DA529310(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  sub_1DA66BE60();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1DA529384()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DA529394(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA5293E8(a1, a2, a3, (uint64_t)&unk_1EA0CAAD8, (uint64_t)sub_1DA529848, (uint64_t)&block_descriptor_28);
}

uint64_t sub_1DA5293B0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA5293E8(a1, a2, a3, (uint64_t)&unk_1EA0CAA60, (uint64_t)sub_1DA52980C, (uint64_t)&block_descriptor_19);
}

uint64_t sub_1DA5293CC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA5293E8(a1, a2, a3, (uint64_t)&unk_1EA0CA9E8, (uint64_t)sub_1DA52976C, (uint64_t)&block_descriptor_1);
}

uint64_t sub_1DA5293E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v21 = a6;
  v10 = sub_1DA66E9C8();
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66EA04();
  v22 = *(_QWORD *)(v13 - 8);
  v23 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA486298();
  v16 = (void *)sub_1DA66FEC8();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a1;
  aBlock[4] = a5;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA4A9194;
  aBlock[3] = v21;
  v18 = _Block_copy(aBlock);
  sub_1DA66BE60();
  v19 = a1;
  swift_release();
  sub_1DA66E9EC();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DA4F719C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA529778();
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v15, v23);
}

unint64_t sub_1DA5295CC()
{
  unint64_t result;

  result = qword_1F026A270;
  if (!qword_1F026A270)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for StoreResponseDelegateError, &type metadata for StoreResponseDelegateError);
    atomic_store(result, (unint64_t *)&qword_1F026A270);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StoreResponseDelegateError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA529650 + 4 * byte_1DA67B320[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA529670 + 4 * byte_1DA67B325[v4]))();
}

_BYTE *sub_1DA529650(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA529670(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA529678(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA529680(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA529688(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA529690(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StoreResponseDelegateError()
{
  return &type metadata for StoreResponseDelegateError;
}

uint64_t method lookup function for UIStoreResponseDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIStoreResponseDelegate.amsurlSession(_:task:handle:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t type metadata accessor for UIStoreResponse()
{
  return objc_opt_self();
}

uint64_t sub_1DA52972C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DA529750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DA5289C8(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1DA52976C()
{
  uint64_t v0;

  sub_1DA52914C(*(void (**)(_QWORD, void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_1DA529778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDADE6F0;
  if (!qword_1EDADE6F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EDADE6E0);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EDADE6F0);
  }
  return result;
}

unint64_t sub_1DA5297C4()
{
  unint64_t result;

  result = qword_1F026A3D8;
  if (!qword_1F026A3D8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for StoreResponseDelegateError, &type metadata for StoreResponseDelegateError);
    atomic_store(result, (unint64_t *)&qword_1F026A3D8);
  }
  return result;
}

void sub_1DA52980C()
{
  uint64_t v0;

  sub_1DA528FCC(*(void (**)(_QWORD, void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1DA529848()
{
  uint64_t v0;

  sub_1DA528E00(*(void (**)(_QWORD, void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

double static EdgeInsets.zero.getter()
{
  return 0.0;
}

uint64_t sub_1DA529894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1DA65743C(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1DA5298C0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1DA498794(0, v1, 0);
    v2 = v12;
    v4 = a1 + 32;
    sub_1DA4F726C();
    do
    {
      v4 += 8;
      v5 = sub_1DA670354();
      v7 = v6;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_1DA498794(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t FetchMAPIRepresentableIntentImplementation.perform(_:objectGraph:)(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(_OWORD *, uint64_t, uint64_t);

  v10 = (uint64_t (*)(_OWORD *, uint64_t, uint64_t))((char *)&dword_1F026A3F0 + dword_1F026A3F0);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  v8 = *(_QWORD *)(a3 + 16);
  *v7 = v3;
  v7[1] = sub_1DA4B1798;
  return v10(a1, a2, v8);
}

uint64_t sub_1DA529A30(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v11)(_OWORD *, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a1;
  v11 = (uint64_t (*)(_OWORD *, uint64_t, uint64_t))((char *)&dword_1F026A3F0 + dword_1F026A3F0);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  v9 = *(_QWORD *)(a4 + 16);
  *v8 = v4;
  v8[1] = sub_1DA527068;
  return v11(a2, a3, v9);
}

uint64_t sub_1DA529AAC(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v3 + 64) = a3;
  v5 = sub_1DA66D1D4();
  *(_QWORD *)(v3 + 72) = v5;
  *(_QWORD *)(v3 + 80) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 88) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  *(_QWORD *)(v3 + 96) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1C0);
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFD0);
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1D0);
  *(_QWORD *)(v3 + 120) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFE0);
  *(_QWORD *)(v3 + 128) = swift_task_alloc();
  v6 = sub_1DA66CA30();
  *(_QWORD *)(v3 + 136) = v6;
  *(_QWORD *)(v3 + 144) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 152) = swift_task_alloc();
  v7 = sub_1DA66CA90();
  *(_QWORD *)(v3 + 160) = v7;
  *(_QWORD *)(v3 + 168) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 176) = swift_task_alloc();
  *(_OWORD *)(v3 + 184) = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE27E0);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 200) = v8;
  *v8 = v3;
  v8[1] = sub_1DA529C64;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA529C64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA529CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t MAPIRepresentableIntent;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 104))(*(_QWORD *)(v0 + 152), *MEMORY[0x1E0D7D820], *(_QWORD *)(v0 + 136));
  MAPIRepresentableIntent = type metadata accessor for FetchMAPIRepresentableIntent(0, v3, v4, v5);
  FetchMAPIRepresentableIntent.contentType.getter(MAPIRepresentableIntent, v2);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 96);
    v13 = sub_1DA66CA3C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
    v14 = sub_1DA66CA9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
    v15 = sub_1DA66CA54();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
    swift_bridgeObjectRetain();
    v16 = swift_bridgeObjectRetain();
    sub_1DA5298C0(v16);
    swift_bridgeObjectRelease();
    v17 = sub_1DA66CA48();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 1, 1, v17);
    v18 = sub_1DA66C358();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1DA656BAC(MEMORY[0x1E0DEE9D8]);
    sub_1DA656BAC(v19);
    sub_1DA656BD0(v19);
    sub_1DA63CC0C(v19);
    sub_1DA656D64(v19);
    sub_1DA656D88(v19);
    sub_1DA66CA84();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v20;
    *v20 = v0;
    v20[1] = sub_1DA52A010;
    return sub_1DA66DBAC();
  }
}

uint64_t sub_1DA52A010()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA52A074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v8 = sub_1DA66D1C8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
}

uint64_t sub_1DA52A160()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52A1F4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DA52A2A4()
{
  JUMPOUT(0x1DF0A039CLL);
}

uint64_t sub_1DA52A2B4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for FetchMAPIRepresentableIntentImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchMAPIRepresentableIntentImplementation);
}

uint64_t sub_1DA52A2C8()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4900);
  __swift_allocate_value_buffer(v0, qword_1EDAEAB58);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDAEAB58);
  sub_1DA52A3C8();
  return sub_1DA66ED88();
}

uint64_t sub_1DA52A33C(uint64_t a1)
{
  return sub_1DA52A360(a1, qword_1EDAEABC0);
}

uint64_t sub_1DA52A360(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1EA0);
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1DA66ED88();
}

unint64_t sub_1DA52A3C8()
{
  unint64_t result;

  result = qword_1EDADE760;
  if (!qword_1EDADE760)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDADE760);
  }
  return result;
}

uint64_t JSMetricsEventLinter.init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  sub_1DA66EDDC();
  return swift_release();
}

uint64_t sub_1DA52A440()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  sub_1DA66EDDC();
  return swift_release();
}

uint64_t JSMetricsEventLinter.processEvent(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA52A774(v1, (uint64_t)v13);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  v7 = v13[1];
  *(_OWORD *)(v6 + 24) = v13[0];
  *(_OWORD *)(v6 + 40) = v7;
  *(_QWORD *)(v6 + 56) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AA0);
  swift_bridgeObjectRetain();
  v8 = sub_1DA66F658();
  v9 = sub_1DA66FB98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &unk_1F026A408;
  v10[5] = v6;
  v10[6] = v8;
  sub_1DA66BE60();
  sub_1DA527E84((uint64_t)v5, (uint64_t)&unk_1F026A410, (uint64_t)v10);
  swift_release();
  return v8;
}

uint64_t sub_1DA52A5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA52A5D0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = v0[4];
  v1 = (_QWORD *)v0[5];
  sub_1DA66F1FC();
  swift_bridgeObjectRetain();
  v0[6] = sub_1DA66F1F0();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v0[2] = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  sub_1DA52ADE0();
  *v3 = v0;
  v3[1] = sub_1DA52A694;
  return sub_1DA66EE90();
}

uint64_t sub_1DA52A694()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA52A700()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52A734()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52A774(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1DA52A7B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4A9520;
  v5[4] = v4;
  v5[5] = v1 + 24;
  v5[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA52A82C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA52A774(v1, (uint64_t)v13);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  v7 = v13[1];
  *(_OWORD *)(v6 + 24) = v13[0];
  *(_OWORD *)(v6 + 40) = v7;
  *(_QWORD *)(v6 + 56) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AA0);
  swift_bridgeObjectRetain();
  v8 = sub_1DA66F658();
  v9 = sub_1DA66FB98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &unk_1F026A418;
  v10[5] = v6;
  v10[6] = v8;
  sub_1DA66BE60();
  sub_1DA527E84((uint64_t)v5, (uint64_t)&unk_1F026A420, (uint64_t)v10);
  swift_release();
  return v8;
}

uint64_t sub_1DA52A968(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1DA4A9520;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1F026A1C0
                                                                                     + dword_1F026A1C0))(a1, v4, v5, v6, v7, v8);
}

uint64_t initializeWithCopy for JSMetricsEventLinter(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for JSMetricsEventLinter(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        sub_1DA66BE60();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          sub_1DA66BE60();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          sub_1DA66BE60();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for JSMetricsEventLinter(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSMetricsEventLinter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSMetricsEventLinter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSMetricsEventLinter()
{
  return &type metadata for JSMetricsEventLinter;
}

uint64_t sub_1DA52ACA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4AD77C;
  v5[4] = v4;
  v5[5] = v1 + 24;
  v5[3] = a1;
  return swift_task_switch();
}

uint64_t objectdestroy_3Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA52AD4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1DA4AD77C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1F026A1C0
                                                                                     + dword_1F026A1C0))(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_1DA52ADE0()
{
  unint64_t result;

  result = qword_1EDAE3D88;
  if (!qword_1EDAE3D88)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for LintMetricsEventIntent, &type metadata for LintMetricsEventIntent);
    atomic_store(result, (unint64_t *)&qword_1EDAE3D88);
  }
  return result;
}

uint64_t InterestRepository.init(asPartOf:)()
{
  uint64_t v0;

  sub_1DA66CC88();
  sub_1DA66EDDC();
  sub_1DA66D408();
  sub_1DA66EDDC();
  v0 = sub_1DA66D3C0();
  swift_release();
  return v0;
}

uint64_t EpisodeDetailAlignmentCoordinator.scoutingAligner.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  return swift_release();
}

uint64_t sub_1DA52AF08()
{
  return sub_1DA52D4F4();
}

uint64_t sub_1DA52AF20(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[40];

  sub_1DA49CC94(a1, (uint64_t)v3, &qword_1EDADFC38);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA49CC94((uint64_t)v3, (uint64_t)&v2, &qword_1EDADFC38);
  sub_1DA66BE60();
  sub_1DA66E0C8();
  return sub_1DA47E2F0((uint64_t)v3, &qword_1EDADFC38);
}

uint64_t EpisodeDetailAlignmentCoordinator.$scoutingAligner.getter()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner, &qword_1EDADFF18);
}

uint64_t EpisodeDetailAlignmentCoordinator.error.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA52B044@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA52B0C4(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

uint64_t EpisodeDetailAlignmentCoordinator.$error.getter()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error, &qword_1EDADFF70);
}

uint64_t sub_1DA52B154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a5);
  sub_1DA66E098();
  return swift_endAccess();
}

uint64_t sub_1DA52B1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  uint64_t v19;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v19 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v17((char *)&v19 - v15, a1, v9, v14);
  ((void (*)(char *, char *, uint64_t))v17)(v12, v16, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_1DA66E0A4();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t sub_1DA52B2D8(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  _BYTE v19[40];
  _OWORD v20[2];
  uint64_t v21;

  v17 = a2;
  v18 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF18);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner;
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  sub_1DA49CC94((uint64_t)v20, (uint64_t)v19, &qword_1EDADFC38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC38);
  sub_1DA66E08C();
  sub_1DA47E2F0((uint64_t)v20, &qword_1EDADFC38);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  v14 = v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error;
  *(_QWORD *)&v20[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0118);
  sub_1DA66E08C();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v8, v5);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_loadScoutingAligner) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_shouldShazamMatch) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_asset) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_alignmentCoordinator) = a1;
  sub_1DA4841BC(v17, v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_transcriptProvider);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_workQueue) = v18;
  return v3;
}

void EpisodeDetailAlignmentCoordinator.align(asset:to:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  void *v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  char v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[2];
  void *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  id v115;

  v110 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v4);
  v87 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A438);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v78 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A440);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v81 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A448);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v84 = (char *)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A450);
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v88 = (char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A458);
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v91 = (char *)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66CC4C();
  v100 = *(_QWORD *)(v11 - 8);
  v101 = v11;
  MEMORY[0x1E0C80A78](v11);
  v99 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66D5C4();
  v97 = *(_QWORD *)(v13 - 8);
  v98 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC68);
  MEMORY[0x1E0C80A78](v16);
  v102 = (char *)v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DA66D378();
  v104 = *(_QWORD *)(v18 - 8);
  v105 = v18;
  MEMORY[0x1E0C80A78](v18);
  v103 = (char *)v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1DA66C358();
  v94 = *(_QWORD *)(v20 - 8);
  v95 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = (_QWORD *)sub_1DA66DEF4();
  v107 = *(v109 - 1);
  MEMORY[0x1E0C80A78](v109);
  v24 = (char *)v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1DA52D62C(a1);
  v26 = *(void **)(v2 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_asset);
  v112 = v2;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_asset) = v25;
  v108 = v25;
  v106 = v25;

  sub_1DA66DE4C();
  v27 = a1;
  v28 = sub_1DA66DEDC();
  v29 = sub_1DA66FD90();
  v30 = os_log_type_enabled(v28, v29);
  v96 = v15;
  if (v30)
  {
    v31 = swift_slowAlloc();
    v77 = (void *)swift_slowAlloc();
    v115 = v77;
    *(_DWORD *)v31 = 141558275;
    v113 = 1752392040;
    v76[1] = &v114;
    sub_1DA6702C4();
    *(_WORD *)(v31 + 12) = 2081;
    v32 = objc_msgSend(v27, sel_URL, v31 + 14);
    sub_1DA66C304();

    sub_1DA47E32C((unint64_t *)&qword_1EDAE2610, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v33 = v95;
    v34 = sub_1DA670684();
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v94 + 8))(v22, v33);
    v113 = sub_1DA49AD00(v34, v36, (uint64_t *)&v115);
    sub_1DA6702C4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA478000, v28, v29, "Setting up episode detail alignment coordinator: %{private,mask.hash}s", (uint8_t *)v31, 0x16u);
    v37 = v77;
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v37, -1, -1);
    MEMORY[0x1DF0A0474](v31, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, _QWORD *))(v107 + 8))(v24, v109);
  v38 = v106;
  v39 = sub_1DA66D960();

  *(_BYTE *)(v112 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_shouldShazamMatch) = v39 & 1;
  if ((v39 & 1) != 0)
  {
    v41 = v96;
    v40 = v97;
    v42 = v98;
    (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, *MEMORY[0x1E0D7E5B0], v98);
    v44 = v99;
    v43 = v100;
    v45 = v101;
    (*(void (**)(char *, _QWORD, uint64_t))(v100 + 104))(v99, *MEMORY[0x1E0D7DAB0], v101);
    v46 = (uint64_t)v102;
    sub_1DA66D96C();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
    v47 = v41;
    v48 = v38;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v42);
    v50 = v104;
    v49 = v105;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v46, 1, v105) == 1)
    {
      sub_1DA47E2F0(v46, &qword_1EDADFC68);
      v51 = sub_1DA66D984();
      sub_1DA47E32C(&qword_1F026A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E9D8], MEMORY[0x1E0D7E9E0]);
      v52 = swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v53, *MEMORY[0x1E0D7E9D0], v51);
      v111 = v52;
      swift_willThrow();

    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v103, v46, v49);
      v54 = v112;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v112 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_transcriptProvider), *(_QWORD *)(v112 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_transcriptProvider + 24));
      v115 = (id)sub_1DA66D420();
      v113 = *(_QWORD *)(v54 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_workQueue);
      v55 = (id)v113;
      v56 = sub_1DA66FE8C();
      v108 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56);
      v57 = (uint64_t)v87;
      v108(v87, 1, 1, v56);
      v110 = v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A488);
      sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
      sub_1DA4841D4(&qword_1F026A490, &qword_1F026A488, MEMORY[0x1E0C95D90]);
      v107 = sub_1DA4A89F0();
      v58 = v78;
      sub_1DA66E248();
      sub_1DA47E2F0(v57, (uint64_t *)&unk_1EDAE20A0);

      swift_release();
      sub_1DA47D774(0, &qword_1F026A498);
      sub_1DA4841D4(&qword_1F026A4A0, &qword_1F026A438, MEMORY[0x1E0C95CB8]);
      v59 = v81;
      v60 = v80;
      sub_1DA66E128();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v58, v60);
      v61 = swift_allocObject();
      *(_QWORD *)(v61 + 16) = v48;
      v62 = swift_allocObject();
      *(_QWORD *)(v62 + 16) = sub_1DA52D87C;
      *(_QWORD *)(v62 + 24) = v61;
      v109 = v48;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC38);
      v63 = v84;
      v64 = v83;
      sub_1DA66DF18();
      swift_release();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v59, v64);
      v115 = (id)sub_1DA66FEC8();
      v108((char *)v57, 1, 1, v56);
      sub_1DA4841D4(&qword_1F026A4A8, &qword_1F026A448, MEMORY[0x1E0C95708]);
      v65 = v88;
      v66 = v86;
      sub_1DA66E248();
      sub_1DA47E2F0(v57, (uint64_t *)&unk_1EDAE20A0);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v63, v66);
      v67 = swift_allocObject();
      v68 = v112;
      swift_weakInit();
      v69 = swift_allocObject();
      v70 = v110;
      *(_QWORD *)(v69 + 16) = v110;
      *(_QWORD *)(v69 + 24) = v67;
      v71 = v70;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A4B0);
      sub_1DA4841D4(&qword_1F026A4B8, &qword_1F026A450, MEMORY[0x1E0C95CB8]);
      sub_1DA4841D4(&qword_1F026A4C0, &qword_1F026A4B0, MEMORY[0x1E0C960B0]);
      v72 = v91;
      v73 = v90;
      sub_1DA66E1B8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v65, v73);
      swift_allocObject();
      swift_weakInit();
      sub_1DA4841D4(&qword_1F026A4C8, &qword_1F026A458, MEMORY[0x1E0C959F8]);
      v74 = v93;
      v75 = sub_1DA66E284();

      swift_release();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v72, v74);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v103, v105);
      *(_QWORD *)(v68 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_loadScoutingAligner) = v75;
      swift_release();
    }
  }
  else
  {

  }
}

uint64_t sub_1DA52C038@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA66CFE8();
  *a1 = result;
  return result;
}

uint64_t sub_1DA52C060(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  id v6;

  v4 = sub_1DA66DEF4();
  MEMORY[0x1E0C80A78](v4);
  v5 = a2;
  v6 = a1;
  sub_1DA66DE88();
  sub_1DA66DA2C();
  swift_allocObject();
  return sub_1DA66DA20();
}

uint64_t sub_1DA52C104@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = a2(*a1);
  result = sub_1DA66DA2C();
  v6 = MEMORY[0x1E0D7EA68];
  a3[3] = result;
  a3[4] = v6;
  *a3 = v4;
  return result;
}

uint64_t sub_1DA52C148@<X0>(void **a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  id v30;
  char *v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  __int128 aBlock;
  __int128 v47;
  uint64_t (*v48)();
  uint64_t v49;

  v6 = sub_1DA66E9C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66EA04();
  v42 = *(_QWORD *)(v9 - 8);
  v43 = v9;
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66DEF4();
  v40 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  sub_1DA66DE4C();
  v15 = v14;
  v16 = v14;
  v17 = sub_1DA66DEDC();
  v18 = sub_1DA66FDA8();
  if (os_log_type_enabled(v17, v18))
  {
    v39 = a3;
    v19 = swift_slowAlloc();
    v36 = a2;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v38 = v6;
    v22 = v21;
    v45 = (uint64_t)v14;
    *(_QWORD *)&aBlock = v21;
    v35 = v11;
    *(_DWORD *)v20 = 136315138;
    v37 = v7;
    v23 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v24 = sub_1DA66F904();
    v45 = sub_1DA49AD00(v24, v25, (uint64_t *)&aBlock);
    v7 = v37;
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v17, v18, "Failed to construct scouting aligner: %s", v20, 0xCu);
    swift_arrayDestroy();
    v26 = v22;
    v6 = v38;
    MEMORY[0x1DF0A0474](v26, -1, -1);
    v27 = v20;
    a2 = v36;
    MEMORY[0x1DF0A0474](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v11);
  }
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a2;
  *(_QWORD *)(v28 + 24) = v14;
  v48 = sub_1DA52DBAC;
  v49 = v28;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v47 = sub_1DA4A9194;
  *((_QWORD *)&v47 + 1) = &block_descriptor_2;
  v29 = _Block_copy(&aBlock);
  v30 = v14;
  sub_1DA66BE60();
  v31 = v41;
  sub_1DA66E9EC();
  v45 = MEMORY[0x1E0DEE9D8];
  sub_1DA47E32C((unint64_t *)&qword_1EDADE6D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA4841D4((unint64_t *)&qword_1EDADE6F0, (uint64_t *)&unk_1EDADE6E0, MEMORY[0x1E0DEAF38]);
  v32 = v44;
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v31, v32, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v32, v6);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v43);
  swift_release();
  v48 = 0;
  aBlock = 0u;
  v47 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC38);
  return sub_1DA66E02C();
}

uint64_t sub_1DA52C550(uint64_t a1, void *a2)
{
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  id v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = sub_1DA66D984();
    sub_1DA47E32C(&qword_1F026A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E9D8], MEMORY[0x1E0D7E9E0]);
    swift_allocError();
    *v5 = a2;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v5, *MEMORY[0x1E0D7E9C8], v4);
    swift_getKeyPath();
    swift_getKeyPath();
    v6 = a2;
    return sub_1DA66E0C8();
  }
  return result;
}

uint64_t sub_1DA52C650(uint64_t a1)
{
  uint64_t result;
  _BYTE v3[40];
  _BYTE v4[40];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA49CC94(a1, (uint64_t)v4, &qword_1EDADFC38);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA49CC94((uint64_t)v4, (uint64_t)v3, &qword_1EDADFC38);
    sub_1DA66BE60();
    sub_1DA66E0C8();
    sub_1DA47E2F0((uint64_t)v4, &qword_1EDADFC38);
    return swift_release();
  }
  return result;
}

uint64_t EpisodeDetailAlignmentCoordinator.fetchPlayerTimestamp(for:)(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 312) = v1;
  *(double *)(v2 + 304) = a1;
  v3 = sub_1DA66C358();
  *(_QWORD *)(v2 + 320) = v3;
  *(_QWORD *)(v2 + 328) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 336) = swift_task_alloc();
  *(_QWORD *)(v2 + 344) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0150);
  *(_QWORD *)(v2 + 352) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  *(_QWORD *)(v2 + 360) = swift_task_alloc();
  *(_QWORD *)(v2 + 368) = swift_task_alloc();
  *(_QWORD *)(v2 + 376) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA52C7E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 312);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_shouldShazamMatch) & 1) != 0)
  {
    v41 = OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_asset;
    v42 = *(_QWORD *)(v0 + 312);
    v2 = *(void **)(v1 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_asset);
    if (v2)
    {
      v3 = objc_msgSend(v2, sel_URL);
      sub_1DA66C304();

      v4 = 0;
      v1 = *(_QWORD *)(v0 + 312);
    }
    else
    {
      v4 = 1;
    }
    v9 = *(_QWORD *)(v0 + 368);
    v8 = *(_QWORD *)(v0 + 376);
    v11 = *(_QWORD *)(v0 + 344);
    v10 = *(_QWORD *)(v0 + 352);
    v13 = *(_QWORD *)(v0 + 320);
    v12 = *(_QWORD *)(v0 + 328);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, v4, 1, v13);
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_alignmentCoordinator);
    *(_QWORD *)(v0 + 384) = v14;
    v15 = v14 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_url;
    swift_beginAccess();
    sub_1DA49CC94(v15, v9, &qword_1EDAE5020);
    v16 = v10 + *(int *)(v11 + 48);
    sub_1DA49CC94(v8, v10, &qword_1EDAE5020);
    sub_1DA49CC94(v9, v16, &qword_1EDAE5020);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (v17(v10, 1, v13) == 1)
    {
      v18 = *(_QWORD *)(v0 + 376);
      v19 = *(_QWORD *)(v0 + 320);
      sub_1DA47E2F0(*(_QWORD *)(v0 + 368), &qword_1EDAE5020);
      sub_1DA47E2F0(v18, &qword_1EDAE5020);
      if (v17(v16, 1, v19) == 1)
      {
        sub_1DA47E2F0(*(_QWORD *)(v0 + 352), &qword_1EDAE5020);
LABEL_16:
        v35 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 392) = v35;
        *v35 = v0;
        v35[1] = sub_1DA52CD60;
        return NowPlayingAlignmentCoordinator.fetchPlayerTimestamp(for:)(*(double *)(v0 + 304));
      }
    }
    else
    {
      v20 = *(_QWORD *)(v0 + 320);
      sub_1DA49CC94(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360), &qword_1EDAE5020);
      v21 = v17(v16, 1, v20);
      v23 = *(_QWORD *)(v0 + 368);
      v22 = *(_QWORD *)(v0 + 376);
      v24 = *(_QWORD *)(v0 + 360);
      if (v21 != 1)
      {
        v40 = *(_QWORD *)(v0 + 352);
        v30 = *(_QWORD *)(v0 + 328);
        v31 = *(_QWORD *)(v0 + 336);
        v32 = *(_QWORD *)(v0 + 320);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v31, v16, v32);
        sub_1DA47E32C((unint64_t *)&qword_1EDAE0140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v33 = sub_1DA66F850();
        v34 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
        v34(v31, v32);
        sub_1DA47E2F0(v23, &qword_1EDAE5020);
        sub_1DA47E2F0(v22, &qword_1EDAE5020);
        v34(v24, v32);
        sub_1DA47E2F0(v40, &qword_1EDAE5020);
        if ((v33 & 1) != 0)
          goto LABEL_16;
        goto LABEL_12;
      }
      v25 = *(_QWORD *)(v0 + 320);
      v26 = *(_QWORD *)(v0 + 328);
      sub_1DA47E2F0(*(_QWORD *)(v0 + 368), &qword_1EDAE5020);
      sub_1DA47E2F0(v22, &qword_1EDAE5020);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    }
    sub_1DA47E2F0(*(_QWORD *)(v0 + 352), &qword_1EDAE0150);
LABEL_12:
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    if (*(_QWORD *)(v0 + 120))
    {
      sub_1DA4841BC((__int128 *)(v0 + 96), v0 + 56);
      v27 = *(void **)(v42 + v41);
      *(_QWORD *)(v0 + 400) = v27;
      if (v27)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A4E8);
        v27;
        *(_QWORD *)(v0 + 408) = sub_1DA66C5EC();
        v28 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 416) = v28;
        *v28 = v0;
        v28[1] = sub_1DA52CDF0;
        return sub_1DA6700B4();
      }
      v38 = sub_1DA66D984();
      sub_1DA47E32C(&qword_1F026A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E9D8], MEMORY[0x1E0D7E9E0]);
      swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v39, *MEMORY[0x1E0D7E9C0], v38);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0(v0 + 56);
    }
    else
    {
      sub_1DA47E2F0(v0 + 96, &qword_1EDADFC38);
      v36 = sub_1DA66D984();
      sub_1DA47E32C(&qword_1F026A470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E9D8], MEMORY[0x1E0D7E9E0]);
      swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v37, *MEMORY[0x1E0D7E9B8], v36);
      swift_willThrow();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v6 = *(uint64_t (**)(__n128))(v0 + 8);
    return v6(v7);
  }
  v5 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = *(uint64_t (**)(__n128))(v0 + 8);
  v7.n128_u64[0] = v5;
  return v6(v7);
}

uint64_t sub_1DA52CD60(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  __n128 v5;

  v4 = *v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (!v1)
    v5.n128_f64[0] = a1;
  return (*(uint64_t (**)(__n128))(v4 + 8))(v5);
}

uint64_t sub_1DA52CDF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 424) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = *(void **)(v2 + 400);
    swift_release();

  }
  return swift_task_switch();
}

uint64_t sub_1DA52CE60()
{
  _QWORD *v0;
  uint64_t result;
  double v2;
  _QWORD *v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  sub_1DA49CC94((uint64_t)(v0 + 2), (uint64_t)(v0 + 27), &qword_1EDADFC40);
  if (v0[30])
  {
    __swift_project_boxed_opaque_existential_1(v0 + 27, v0[30]);
    sub_1DA66D048();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 27));
  }
  else
  {
    sub_1DA47E2F0((uint64_t)(v0 + 27), &qword_1EDADFC40);
  }
  __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
  result = sub_1DA6700F0();
  if (v2 < 0.0)
  {
    __break(1u);
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v0[54] = v3;
    *v3 = v0;
    v3[1] = sub_1DA52CFC4;
    return sub_1DA66D030();
  }
  return result;
}

uint64_t sub_1DA52CFC4(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(double *)(v3 + 440) = a1;
  *(_QWORD *)(v3 + 448) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA52D02C()
{
  uint64_t v0;
  double v1;

  sub_1DA49CC94(v0 + 16, v0 + 176, &qword_1EDADFC40);
  if (*(_QWORD *)(v0 + 200))
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 200));
    sub_1DA66D054();
    __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  }
  else
  {
    sub_1DA47E2F0(v0 + 176, &qword_1EDADFC40);
  }
  sub_1DA47E2F0(v0 + 16, &qword_1EDADFC40);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  v1 = *(double *)(v0 + 440);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

uint64_t sub_1DA52D11C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 400);
  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52D1A0()
{
  uint64_t v0;

  sub_1DA49CC94(v0 + 16, v0 + 136, &qword_1EDADFC40);
  if (*(_QWORD *)(v0 + 160))
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    sub_1DA66D054();
    __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  }
  else
  {
    sub_1DA47E2F0(v0 + 136, &qword_1EDADFC40);
  }
  sub_1DA47E2F0(v0 + 16, &qword_1EDADFC40);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EpisodeDetailAlignmentCoordinator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_transcriptProvider);
  swift_release();

  return v0;
}

uint64_t EpisodeDetailAlignmentCoordinator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_transcriptProvider);
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1DA52D41C(void *a1, void *a2)
{
  EpisodeDetailAlignmentCoordinator.align(asset:to:)(a1, a2);
}

uint64_t sub_1DA52D43C(double a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA52D48C;
  return EpisodeDetailAlignmentCoordinator.fetchPlayerTimestamp(for:)(a1);
}

uint64_t sub_1DA52D48C(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  __n128 v5;

  v4 = *v2;
  swift_task_dealloc();
  if (!v1)
    v5.n128_f64[0] = a1;
  return (*(uint64_t (**)(__n128))(v4 + 8))(v5);
}

uint64_t sub_1DA52D4E0()
{
  return sub_1DA52D4F4();
}

uint64_t sub_1DA52D4F4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  return swift_release();
}

uint64_t sub_1DA52D558(uint64_t a1)
{
  _BYTE v2[40];

  sub_1DA49CC94(a1, (uint64_t)v2, &qword_1EDADFC40);
  return sub_1DA5DED8C((uint64_t)v2);
}

void *sub_1DA52D598(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_1DA6705DC();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

id sub_1DA52D62C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void (*v13)(char *, uint64_t);
  id v14;
  uint64_t v15;
  void *v16;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;

  v22 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v8).n128_u64[0];
  v11 = (char *)&v21 - v10;
  v12 = objc_msgSend(v22, sel_URL, v9);
  sub_1DA66C304();

  LOBYTE(v12) = sub_1DA66C250();
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v11, v4);
  if ((v12 & 1) != 0)
    return v22;
  sub_1DA66D840();
  v14 = objc_msgSend(v22, sel_URL);
  sub_1DA66C304();

  v15 = sub_1DA66D834();
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_6;
  }
  v16 = (void *)v15;
  sub_1DA66D828();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {

LABEL_6:
    sub_1DA47E2F0((uint64_t)v3, &qword_1EDAE5020);
    return v22;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v18 = objc_allocWithZone(MEMORY[0x1E0C8B3C0]);
  v19 = (void *)sub_1DA66C2C8();
  v20 = objc_msgSend(v18, sel_initWithURL_options_, v19, 0);

  v13(v7, v4);
  return v20;
}

uint64_t sub_1DA52D858()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA52D87C(void *a1)
{
  uint64_t v1;

  return sub_1DA52C060(a1, *(void **)(v1 + 16));
}

uint64_t sub_1DA52D884()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA52D8A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  result = sub_1DA66DA2C();
  v6 = MEMORY[0x1E0D7EA68];
  a2[3] = result;
  a2[4] = v6;
  *a2 = v4;
  return result;
}

uint64_t sub_1DA52D8EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA52D910()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA52D93C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DA52C148(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1DA52D944(uint64_t a1)
{
  return sub_1DA52C650(a1);
}

uint64_t sub_1DA52D94C()
{
  return sub_1DA52D4F4();
}

uint64_t sub_1DA52D970(uint64_t a1)
{
  _BYTE v2[40];

  sub_1DA49CC94(a1, (uint64_t)v2, &qword_1EDADFC40);
  return sub_1DA5DED8C((uint64_t)v2);
}

uint64_t sub_1DA52D9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner, &qword_1EDADFF18);
}

uint64_t sub_1DA52D9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1F026A5E8, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner, &qword_1EDADFF18);
}

uint64_t sub_1DA52DA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error, &qword_1EDADFF70);
}

uint64_t sub_1DA52DA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1F026A5E0, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error, &qword_1EDADFF70);
}

uint64_t sub_1DA52DA50()
{
  return type metadata accessor for EpisodeDetailAlignmentCoordinator();
}

uint64_t type metadata accessor for EpisodeDetailAlignmentCoordinator()
{
  uint64_t result;

  result = qword_1F026A520;
  if (!qword_1F026A520)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DA52DA94()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DA48D80C(319, &qword_1EDADFF20, &qword_1EDADFC38);
  if (v0 <= 0x3F)
  {
    sub_1DA48D80C(319, &qword_1EDADFF78, &qword_1EDAE0118);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for EpisodeDetailAlignmentCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DA52DB80()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DA52DBAC()
{
  uint64_t v0;

  return sub_1DA52C550(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t ImageResizer.resize(image:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  sub_1DA66CDC0();
  v8 = v7;
  v10 = v9;
  sub_1DA66CDD8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double, double, double))(a4 + 8))(a1, a3, a4, v8, v10, v11);
}

uint64_t dispatch thunk of ImageResizer.resize(image:to:displayScale:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ImageResizer.resizedImage(at:to:displayScale:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t DownloadEpisodesIntentImplementation.perform(_:objectGraph:)(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2[15] = a2;
  v4 = sub_1DA66FB98();
  v2[16] = v4;
  v2[17] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v6 = *a1;
  v2[18] = v5;
  v2[19] = v6;
  __swift_instantiateConcreteTypeFromMangledName(qword_1F0269018);
  v7 = (_QWORD *)swift_task_alloc();
  v2[20] = v7;
  *v7 = v2;
  v7[1] = sub_1DA52DCE4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA52DCE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 176) = v4;
  *v4 = v2;
  v4[1] = sub_1DA52DDA4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA52DDA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA52DE08()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[24] = v0[12];
  swift_getObjectType();
  sub_1DA4EE300();
  v1 = (_QWORD *)swift_task_alloc();
  v0[25] = v1;
  *v1 = v0;
  v1[1] = sub_1DA52DE88;
  return sub_1DA6700C0();
}

uint64_t sub_1DA52DE88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DA52DF0C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v1;
  *v1 = v0;
  v1[1] = sub_1DA52DF84;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA52DF84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA52DFE8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[19];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
  v0[14] = v1;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[29] = v2;
  sub_1DA52E3F0();
  *v2 = v0;
  v2[1] = sub_1DA52E0A4;
  return sub_1DA66EE90();
}

uint64_t sub_1DA52E0A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA52E110()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[31] = v0[13];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[32] = v1;
  *v1 = v0;
  v1[1] = sub_1DA52E198;
  return sub_1DA66C868();
}

uint64_t sub_1DA52E198()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA52E204()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DA52E268()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52E29C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52E2D8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52E320()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA52E388()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA52E3F0()
{
  unint64_t result;

  result = qword_1F026A600;
  if (!qword_1F026A600)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for FindOrCreateLocalEpisodeContentIDsIntent, &type metadata for FindOrCreateLocalEpisodeContentIDsIntent);
    atomic_store(result, (unint64_t *)&qword_1F026A600);
  }
  return result;
}

uint64_t sub_1DA52E438(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1DA4EE45C;
  return DownloadEpisodesIntentImplementation.perform(_:objectGraph:)(a2, a3);
}

ValueMetadata *type metadata accessor for DownloadEpisodesIntentImplementation()
{
  return &type metadata for DownloadEpisodesIntentImplementation;
}

unint64_t sub_1DA52E4A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EDADFC28;
  if (!qword_1EDADFC28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDADFC30);
    v2 = MEMORY[0x1E0D7E0E0];
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7DDA0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EDADFC28);
  }
  return result;
}

uint64_t EpisodeDetailAlignmentCoordinator.__allocating_init(asPartOf:)()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;
  uint64_t v4;

  type metadata accessor for NowPlayingAlignmentCoordinator(0);
  sub_1DA66EE30();
  sub_1DA66F580();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFC78);
  sub_1DA66F580();
  sub_1DA486298();
  v0 = sub_1DA66FE68();
  swift_allocObject();
  v1 = sub_1DA52B2D8(v4, &v3, v0);
  swift_release();
  return v1;
}

unint64_t static ReevaluateAutoDownloadsIntent.kind.getter()
{
  return 0xD00000000000001DLL;
}

void sub_1DA52E5F4(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x80000001DA67B7D0;
}

ValueMetadata *type metadata accessor for ReevaluateAutoDownloadsIntent()
{
  return &type metadata for ReevaluateAutoDownloadsIntent;
}

void sub_1DA52E624()
{
  qword_1F026A628 = 0x4028000000000000;
}

double sub_1DA52E634()
{
  uint64_t v0;

  return *(double *)v0;
}

double sub_1DA52E63C()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double sub_1DA52E644()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double sub_1DA52E64C()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double sub_1DA52E654()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

id sub_1DA52E65C()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

uint64_t sub_1DA52E664()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1DA52E690()
{
  uint64_t v0;

  return *(id *)(v0 + 72);
}

double sub_1DA52E698()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

double sub_1DA52E6A0()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

double sub_1DA52E6A8()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

uint64_t sub_1DA52E6B0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 104);
}

id sub_1DA52E6B8()
{
  uint64_t v0;

  return *(id *)(v0 + 112);
}

id sub_1DA52E6C0()
{
  uint64_t v0;

  return *(id *)(v0 + 120);
}

double sub_1DA52E6C8()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

id sub_1DA52E6D0()
{
  uint64_t v0;

  return *(id *)(v0 + 136);
}

id sub_1DA52E6D8()
{
  uint64_t v0;

  return *(id *)(v0 + 144);
}

id sub_1DA52E6E0()
{
  uint64_t v0;

  return *(id *)(v0 + 152);
}

uint64_t sub_1DA52E6E8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t sub_1DA52E6F4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t sub_1DA52E700()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 192);
}

uint64_t sub_1DA52E70C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 208);
}

uint64_t sub_1DA52E718()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 224);
}

BOOL static EpisodeUpsellBannerView.EpisodeUpsellBannerType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EpisodeUpsellBannerView.EpisodeUpsellBannerType.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t EpisodeUpsellBannerView.EpisodeUpsellBannerType.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

BOOL sub_1DA52E7A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

id EpisodeUpsellBannerView.artworkContainerView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView);
}

id sub_1DA52E7C8()
{
  return sub_1DA52E900(&OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))sub_1DA52E7DC);
}

id sub_1DA52E7DC()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1DA52F3E8(v6);
  v1 = v7;
  v2 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 128))(v1, v2);
  objc_msgSend(v0, sel_setFont_, v3);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  v4 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v4);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v0;
}

id sub_1DA52E8EC()
{
  return sub_1DA52E900(&OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___dismissButton, (uint64_t (*)(uint64_t))sub_1DA52E95C);
}

id sub_1DA52E900(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_1DA52E95C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  objc_class *v14;
  char *v15;
  double *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  objc_super v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  sub_1DA52F3E8(v33);
  v2 = v34;
  v3 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v4 = -(*(double (**)(uint64_t, uint64_t))(v3 + 72))(v2, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  sub_1DA52F3E8(v33);
  v5 = v34;
  v6 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v7 = -(*(double (**)(uint64_t, uint64_t))(v6 + 80))(v5, v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  sub_1DA52F3E8(v33);
  v8 = v34;
  v9 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v10 = -(*(double (**)(uint64_t, uint64_t))(v9 + 80))(v8, v9);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  sub_1DA52F3E8(v33);
  v11 = v34;
  v12 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v13 = -(*(double (**)(uint64_t, uint64_t))(v12 + 80))(v11, v12);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  v14 = (objc_class *)type metadata accessor for CloseButton();
  v15 = (char *)objc_allocWithZone(v14);
  v16 = (double *)&v15[OBJC_IVAR____TtC10PodcastsUIP33_7356E91B5F9CFCB46676D7EB93CF2B4411CloseButton_touchInsets];
  *v16 = v4;
  v16[1] = v7;
  v16[2] = v10;
  v16[3] = v13;
  v32.receiver = v15;
  v32.super_class = v14;
  v17 = objc_msgSendSuper2(&v32, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1DA52F3E8(v33);
  v18 = v34;
  v19 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 48))(v18, v19);
  v21 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v20);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  sub_1DA52F3E8(v33);
  v22 = v34;
  v23 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
  v24 = v21;
  v25 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v25, v24);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  objc_msgSend(v17, sel_setImage_forState_, v26, 0);
  v27 = v17;
  sub_1DA52F3E8(v33);
  v28 = v34;
  v29 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 64))(v28, v29);
  objc_msgSend(v27, sel_setTintColor_, v30);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  objc_msgSend(v27, sel_addTarget_action_forControlEvents_, a1, sel_closeButtonTapped, 64);

  return v27;
}

id sub_1DA52EC84()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___tapBannerGestureRecognizer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___tapBannerGestureRecognizer);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___tapBannerGestureRecognizer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_initWithTarget_action_, v0, sel_cellTapped);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1DA52ED1C(char *a1, uint64_t a2, _QWORD *a3)
{
  void (*v3)(uint64_t);
  uint64_t v4;
  char *v5;

  v3 = *(void (**)(uint64_t))&a1[*a3];
  if (v3)
  {
    v5 = a1;
    v4 = sub_1DA4EF8F4((uint64_t)v3);
    v3(v4);
    sub_1DA4EFFCC((uint64_t)v3);

  }
}

id sub_1DA52ED88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___textLayout;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___textLayout);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___textLayout);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1DA52EDF8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleLabelCenterYConstraint;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleLabelCenterYConstraint);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleLabelCenterYConstraint);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel), sel_centerYAnchor);
    v5 = sub_1DA52ED88();
    v6 = objc_msgSend(v5, sel_centerYAnchor);

    v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_1DA52EEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleTopAnchorConstraint;
  v3 = *(void **)(v0
                + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleTopAnchorConstraint);
  v4 = v3;
  if (v3 == (void *)1)
  {
    sub_1DA52F3E8(v16);
    v5 = v17;
    v6 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 152))(v5, v6);
    if ((v8 & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
      v4 = 0;
    }
    else
    {
      v9 = *(double *)&v7;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
      v10 = sub_1DA52E7C8();
      v11 = objc_msgSend(v10, sel_topAnchor);

      v12 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel), sel_bottomAnchor);
      v4 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v12, v9);

    }
    v13 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v4;
    v14 = v4;
    sub_1DA532940(v13);
  }
  sub_1DA532950(v3);
  return v4;
}

void *sub_1DA52F000()
{
  return sub_1DA52F1D8(&OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleBottomConstraint, (uint64_t (*)(uint64_t))sub_1DA52F014);
}

id sub_1DA52F014(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  id v16;
  id v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  sub_1DA52F3E8(v19);
  v2 = v20;
  v3 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 176))(v2, v3);
  if ((v5 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    sub_1DA52F3E8(v19);
    v11 = v20;
    v12 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 184))(v11, v12);
    if ((v14 & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
      return 0;
    }
    v15 = *(double *)&v13;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    v16 = sub_1DA52E7C8();
    v8 = objc_msgSend(v16, sel_bottomAnchor);

    v9 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView), sel_bottomAnchor);
    v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, v15);
  }
  else
  {
    v6 = *(double *)&v4;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    v7 = sub_1DA52E7C8();
    v8 = objc_msgSend(v7, sel_firstBaselineAnchor);

    v9 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView), sel_bottomAnchor);
    v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, v6);
  }
  v17 = v10;

  return v17;
}

void *sub_1DA52F1C4()
{
  return sub_1DA52F1D8(&OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleTopConstraint, (uint64_t (*)(uint64_t))sub_1DA52F240);
}

void *sub_1DA52F1D8(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  v5 = v4;
  if (v4 == (void *)1)
  {
    v5 = (void *)a2(v2);
    v6 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v5;
    v7 = v5;
    sub_1DA532940(v6);
  }
  sub_1DA532950(v4);
  return v5;
}

id sub_1DA52F240(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double v14;
  id v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  sub_1DA52F3E8(v17);
  v2 = v18;
  v3 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 160))(v2, v3);
  if ((v5 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    sub_1DA52F3E8(v17);
    v10 = v18;
    v11 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 168))(v10, v11);
    if ((v13 & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      return 0;
    }
    v14 = *(double *)&v12;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                               + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel), sel_topAnchor));
    v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                               + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView), sel_topAnchor));
    v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, v14);
  }
  else
  {
    v6 = *(double *)&v4;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    v7 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel), sel_firstBaselineAnchor);
    v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                               + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView), sel_topAnchor));
    v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, v6);
  }
  v15 = v9;

  return v15;
}

uint64_t sub_1DA52F3E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[2];

  v3 = v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___config;
  swift_beginAccess();
  sub_1DA532A18(v3, (uint64_t)&v16);
  if (*((_QWORD *)&v17 + 1))
    return sub_1DA4841BC(&v16, (uint64_t)a1);
  sub_1DA532960((uint64_t)&v16);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_bannerType))
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_bannerType) == 1)
    {
      sub_1DA53208C((uint64_t)&v16);
      a1[3] = &type metadata for iOSEpisodeUpsellConfiguration;
      a1[4] = &off_1EA0CB440;
    }
    else
    {
      sub_1DA532298((uint64_t)&v16);
      a1[3] = &type metadata for iOSNowPlayingEpisodeUpsellConfiguration;
      a1[4] = &off_1EA0CB500;
    }
  }
  else
  {
    sub_1DA531D6C((uint64_t)&v16);
    a1[3] = &type metadata for MacEpisodeUpsellConfiguration;
    a1[4] = &off_1EA0CB380;
  }
  v5 = (_OWORD *)swift_allocObject();
  v6 = v27;
  v7 = v29[0];
  v5[13] = v28;
  v5[14] = v7;
  *(_OWORD *)((char *)v5 + 233) = *(_OWORD *)((char *)v29 + 9);
  v8 = v23;
  v9 = v25;
  v10 = v26;
  v5[9] = v24;
  v5[10] = v9;
  v5[11] = v10;
  v5[12] = v6;
  v11 = v19;
  v12 = v21;
  v13 = v22;
  v5[5] = v20;
  v5[6] = v12;
  *a1 = v5;
  v5[7] = v13;
  v5[8] = v8;
  v14 = v17;
  v5[1] = v16;
  v5[2] = v14;
  v5[3] = v18;
  v5[4] = v11;
  sub_1DA4813E4((uint64_t)a1, (uint64_t)v15);
  swift_beginAccess();
  sub_1DA532A64((uint64_t)v15, v3);
  return swift_endAccess();
}

void EpisodeUpsellBannerView.__allocating_init(frame:bannerType:)(char *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  EpisodeUpsellBannerView.init(frame:bannerType:)(a1, a2, a3, a4, a5);
}

void EpisodeUpsellBannerView.init(frame:bannerType:)(char *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  char v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  id v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  double v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  void *v146;
  double v147;
  id v148;
  double v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  void *v171;
  id v172;
  uint64_t v173;
  _QWORD v174[3];
  uint64_t v175;
  uint64_t v176;
  objc_super v177;

  v10 = *a1;
  v11 = &v5[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapBannerBlock];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = &v5[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapCloseButtonBlock];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView;
  v14 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v15 = v5;
  v16 = objc_msgSend(v14, sel_init);
  v17 = objc_msgSend(v16, sel_layer);
  objc_msgSend(v17, sel_setMasksToBounds_, 1);

  *(_QWORD *)&v5[v13] = v16;
  v18 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v20 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v19, sel_setTextColor_, v20);

  objc_msgSend(v19, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(_QWORD *)&v15[v18] = v19;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___dismissButton] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___tapBannerGestureRecognizer] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___textLayout] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleLabelCenterYConstraint] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleTopAnchorConstraint] = 1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleBottomConstraint] = 1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleTopConstraint] = 1;
  v21 = &v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___config];
  *(_OWORD *)v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  *((_QWORD *)v21 + 4) = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_hoverRecognizer] = 0;
  v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_objectGraph] = 0;
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, a2, a3, a4, a5);
  *(_QWORD *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView] = v22;
  v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_bannerType] = v10;

  v177.receiver = v15;
  v177.super_class = (Class)type metadata accessor for EpisodeUpsellBannerView();
  v23 = (char *)objc_msgSendSuper2(&v177, sel_initWithFrame_, a2, a3, a4, a5);
  v24 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView;
  v25 = *(_QWORD *)&v23[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView];
  v26 = v23;
  objc_msgSend(v26, sel_addSubview_, v25);
  v27 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView;
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v26[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView]);
  v28 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel;
  objc_msgSend(*(id *)&v23[v24], sel_addSubview_, *(_QWORD *)&v26[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel]);
  v29 = *(id *)&v23[v24];
  v30 = sub_1DA52E7C8();
  objc_msgSend(v29, sel_addSubview_, v30);

  v31 = *(id *)&v23[v24];
  v32 = sub_1DA52E8EC();
  objc_msgSend(v31, sel_addSubview_, v32);

  v33 = *(id *)&v23[v24];
  v34 = sub_1DA52ED88();
  objc_msgSend(v33, sel_addLayoutGuide_, v34);

  objc_msgSend(*(id *)&v23[v24], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v35 = v27;
  objc_msgSend(*(id *)&v26[v27], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v173 = v28;
  objc_msgSend(*(id *)&v26[v28], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v36 = sub_1DA52E7C8();
  objc_msgSend(v36, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v37 = sub_1DA52E8EC();
  objc_msgSend(v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (isMac())
  {
    v38 = sub_1DA52E8EC();
    objc_msgSend(v38, sel_setHidden_, 1);

  }
  v172 = (id)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1DA67B870;
  v40 = objc_msgSend(*(id *)&v23[v24], sel_leadingAnchor);
  v41 = v24;
  v42 = objc_msgSend(v26, (SEL)&selRef_toggleVideoAspectScaleMode + 6);
  v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v42);

  *(_QWORD *)(v39 + 32) = v43;
  v44 = objc_msgSend(*(id *)&v23[v41], sel_trailingAnchor);
  v45 = objc_msgSend(v26, (SEL)&selRef_contentSize);
  v46 = objc_msgSend(v44, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 6, v45);

  *(_QWORD *)(v39 + 40) = v46;
  v47 = objc_msgSend(*(id *)&v23[v41], sel_topAnchor);
  v48 = objc_msgSend(v26, (SEL)&selRef__keyForSize_baseKey_ + 4);
  v49 = objc_msgSend(v47, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 6, v48);

  *(_QWORD *)(v39 + 48) = v49;
  v50 = objc_msgSend(*(id *)&v23[v41], sel_bottomAnchor);
  v51 = objc_msgSend(v26, (SEL)&selRef__cxx_construct + 5);
  v52 = objc_msgSend(v50, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 6, v51);

  *(_QWORD *)(v39 + 56) = v52;
  v53 = objc_msgSend(*(id *)&v26[v27], (SEL)&selRef_toggleVideoAspectScaleMode + 6);
  v54 = objc_msgSend(*(id *)&v23[v41], (SEL)&selRef_toggleVideoAspectScaleMode + 6);
  sub_1DA52F3E8(v174);
  v55 = v175;
  v56 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v56);
  v57 = objc_msgSend(v53, sel_constraintEqualToAnchor_constant_, v54);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(_QWORD *)(v39 + 64) = v57;
  v58 = objc_msgSend(*(id *)&v26[v35], sel_centerYAnchor);
  v59 = objc_msgSend(*(id *)&v23[v41], (SEL)&selRef_setMinimumSize_ + 4);
  v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

  *(_QWORD *)(v39 + 72) = v60;
  v61 = objc_msgSend(*(id *)&v26[v35], sel_topAnchor);
  v62 = objc_msgSend(*(id *)&v23[v41], sel_topAnchor);
  sub_1DA52F3E8(v174);
  v63 = v175;
  v64 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v64 + 16))(v63, v64);
  v65 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v62);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(_QWORD *)(v39 + 80) = v65;
  v66 = objc_msgSend(v26, sel_bottomAnchor);
  v67 = objc_msgSend(*(id *)&v26[v35], sel_bottomAnchor);
  sub_1DA52F3E8(v174);
  v68 = v175;
  v69 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v69 + 16))(v68, v69);
  v70 = objc_msgSend(v66, sel_constraintGreaterThanOrEqualToAnchor_constant_, v67);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(_QWORD *)(v39 + 88) = v70;
  v71 = objc_msgSend(*(id *)&v26[v35], sel_heightAnchor);
  sub_1DA52F3E8(v174);
  v72 = v175;
  v73 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v73 + 32))(v72, v73);
  v75 = objc_msgSend(v71, sel_constraintEqualToConstant_, v74);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(_QWORD *)(v39 + 96) = v75;
  v76 = objc_msgSend(*(id *)&v26[v35], sel_widthAnchor);
  sub_1DA52F3E8(v174);
  v77 = v175;
  v78 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v78 + 32))(v77, v78);
  v79 = objc_msgSend(v76, sel_constraintEqualToConstant_);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(_QWORD *)(v39 + 104) = v79;
  v80 = sub_1DA52E8EC();
  v81 = objc_msgSend(v80, sel_trailingAnchor);

  v82 = objc_msgSend(*(id *)&v23[v41], sel_trailingAnchor);
  sub_1DA52F3E8(v174);
  v83 = v175;
  v84 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  v85 = -(*(double (**)(uint64_t, uint64_t))(v84 + 80))(v83, v84);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  v86 = objc_msgSend(v81, sel_constraintEqualToAnchor_constant_, v82, v85);

  *(_QWORD *)(v39 + 112) = v86;
  v87 = sub_1DA52E8EC();
  v88 = objc_msgSend(v87, sel_topAnchor);

  v89 = objc_msgSend(*(id *)&v23[v41], sel_topAnchor);
  sub_1DA52F3E8(v174);
  v90 = v175;
  v91 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v91 + 72))(v90, v91);
  v92 = objc_msgSend(v88, sel_constraintEqualToAnchor_constant_, v89);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(_QWORD *)(v39 + 120) = v92;
  v93 = sub_1DA52ED88();
  v94 = objc_msgSend(v93, sel_leadingAnchor);

  v95 = objc_msgSend(*(id *)&v26[v35], sel_trailingAnchor);
  sub_1DA52F3E8(v174);
  v96 = v175;
  v97 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v97 + 24))(v96, v97);
  v98 = objc_msgSend(v94, (SEL)&selRef_constraintEqualToAnchor_ + 7, v95);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(_QWORD *)(v39 + 128) = v98;
  v99 = sub_1DA52ED88();
  v100 = objc_msgSend(v99, sel_trailingAnchor);

  v101 = sub_1DA52E8EC();
  v102 = objc_msgSend(v101, sel_leadingAnchor);

  sub_1DA52F3E8(v174);
  v103 = v175;
  v104 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  v105 = -(*(double (**)(uint64_t, uint64_t))(v104 + 88))(v103, v104);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  v106 = objc_msgSend(v100, (SEL)&selRef_constraintEqualToAnchor_ + 7, v102, v105);

  *(_QWORD *)(v39 + 136) = v106;
  v107 = sub_1DA52ED88();
  v108 = objc_msgSend(v107, sel_topAnchor);

  v109 = objc_msgSend(*(id *)&v23[v41], sel_topAnchor);
  v110 = objc_msgSend(v108, sel_constraintGreaterThanOrEqualToAnchor_, v109);

  *(_QWORD *)(v39 + 144) = v110;
  v111 = objc_msgSend(v26, sel_bottomAnchor);
  v112 = sub_1DA52ED88();
  v113 = objc_msgSend(v112, sel_bottomAnchor);

  v114 = objc_msgSend(v111, sel_constraintGreaterThanOrEqualToAnchor_, v113);
  *(_QWORD *)(v39 + 152) = v114;
  v115 = sub_1DA52ED88();
  v116 = objc_msgSend(v115, sel_centerYAnchor);

  v117 = objc_msgSend(*(id *)&v26[v35], sel_centerYAnchor);
  v118 = objc_msgSend(v116, sel_constraintEqualToAnchor_, v117);

  *(_QWORD *)(v39 + 160) = v118;
  v119 = objc_msgSend(*(id *)&v26[v173], sel_leadingAnchor);
  v120 = sub_1DA52ED88();
  v121 = objc_msgSend(v120, sel_leadingAnchor);

  v122 = objc_msgSend(v119, sel_constraintEqualToAnchor_, v121);
  *(_QWORD *)(v39 + 168) = v122;
  v123 = objc_msgSend(*(id *)&v26[v173], sel_trailingAnchor);
  v124 = sub_1DA52ED88();
  v125 = objc_msgSend(v124, sel_trailingAnchor);

  v126 = objc_msgSend(v123, sel_constraintEqualToAnchor_, v125);
  *(_QWORD *)(v39 + 176) = v126;
  v127 = objc_msgSend(*(id *)&v26[v173], sel_topAnchor);
  v128 = sub_1DA52ED88();
  v129 = objc_msgSend(v128, sel_topAnchor);

  v130 = objc_msgSend(v127, sel_constraintEqualToAnchor_, v129);
  *(_QWORD *)(v39 + 184) = v130;
  v131 = sub_1DA52E7C8();
  v132 = objc_msgSend(v131, sel_leadingAnchor);

  v133 = sub_1DA52ED88();
  v134 = objc_msgSend(v133, sel_leadingAnchor);

  v135 = objc_msgSend(v132, sel_constraintEqualToAnchor_, v134);
  *(_QWORD *)(v39 + 192) = v135;
  v136 = sub_1DA52E7C8();
  v137 = objc_msgSend(v136, sel_trailingAnchor);

  v138 = sub_1DA52ED88();
  v139 = objc_msgSend(v138, sel_trailingAnchor);

  v140 = objc_msgSend(v137, sel_constraintEqualToAnchor_, v139);
  *(_QWORD *)(v39 + 200) = v140;
  v141 = sub_1DA52E7C8();
  v142 = objc_msgSend(v141, sel_bottomAnchor);

  v143 = sub_1DA52ED88();
  v144 = objc_msgSend(v143, sel_bottomAnchor);

  v145 = objc_msgSend(v142, sel_constraintEqualToAnchor_, v144);
  *(_QWORD *)(v39 + 208) = v145;
  v174[0] = v39;
  sub_1DA66FAB4();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDADE8E0);
  v146 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v172, sel_activateConstraints_, v146);

  LODWORD(v147) = 1132068864;
  objc_msgSend(*(id *)&v26[v173], sel_setContentHuggingPriority_forAxis_, 0, v147);
  v148 = sub_1DA52E8EC();
  LODWORD(v149) = 1144750080;
  objc_msgSend(v148, sel_setContentHuggingPriority_forAxis_, 0, v149);

  v150 = v41;
  v151 = objc_msgSend(*(id *)&v23[v41], sel_layer);
  sub_1DA52F3E8(v174);
  v152 = v175;
  v153 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v153 + 120))(v152, v153);
  objc_msgSend(v151, sel_setCornerRadius_);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  v154 = objc_msgSend(*(id *)&v23[v150], sel_layer);
  objc_msgSend(v154, sel_setMasksToBounds_, 0);

  v155 = objc_msgSend(*(id *)&v23[v150], sel_layer);
  v156 = objc_msgSend(v26, sel_traitCollection);
  v157 = UITraitCollection.suggestedTextBlendModeFilter.getter();

  objc_msgSend(v155, sel_setCompositingFilter_, v157);
  v158 = objc_msgSend(v26, sel_layer);
  objc_msgSend(v158, sel_setAllowsGroupBlending_, 0);

  v159 = *(id *)&v23[v150];
  sub_1DA52F3E8(v174);
  v160 = v175;
  v161 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  v162 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v161 + 104))(v160, v161);
  objc_msgSend(v159, sel_setBackgroundColor_, v162);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  v163 = v26;
  sub_1DA52F3E8(v174);
  v164 = v175;
  v165 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  v166 = (*(uint64_t (**)(uint64_t, uint64_t))(v165 + 112))(v164, v165);
  objc_msgSend(v163, sel_setBackgroundColor_, v166);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  sub_1DA52F3E8(v174);
  v167 = v175;
  v168 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  LOBYTE(v166) = (*(uint64_t (**)(uint64_t, uint64_t))(v168 + 96))(v167, v168);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  if ((v166 & 1) != 0)
    sub_1DA531168();
  v169 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3858]), sel_initWithTarget_action_, v163, sel_didHover_);
  v170 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_hoverRecognizer;
  v171 = *(void **)&v163[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_hoverRecognizer];
  *(_QWORD *)&v163[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_hoverRecognizer] = v169;

  if (*(_QWORD *)&v163[v170])
  {
    objc_msgSend(v163, sel_addGestureRecognizer_);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for EpisodeUpsellBannerView()
{
  return objc_opt_self();
}

id EpisodeUpsellBannerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1DA5308E8()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for EpisodeUpsellBannerView();
  objc_msgSendSuper2(&v8, sel_layoutSubviews);
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView], sel_layer);
  sub_1DA52F3E8(v5);
  v2 = v6;
  v3 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
  objc_msgSend(v1, sel_setCornerRadius_);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
}

void sub_1DA530A60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  char *v9;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v9 = v8;
  v12 = a2;
  if (a4)
  {
    v13 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel;
    v14 = *(void **)&v8[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel];
    if (a2)
    {
      v15 = v14;
      v12 = (void *)sub_1DA66F88C();
    }
    else
    {
      v20 = v14;
    }
    objc_msgSend(v14, sel_setText_, v12);

    objc_msgSend(*(id *)&v9[v13], sel_setNumberOfLines_, 1);
    v21 = *(id *)&v9[v13];
    sub_1DA52F3E8(v40);
    v23 = v41;
    v22 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 136))(v23, v22);
    objc_msgSend(v21, sel_setFont_, v24);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    v25 = sub_1DA52E7C8();
    v26 = (void *)sub_1DA66F88C();
    objc_msgSend(v25, sel_setText_, v26);

    sub_1DA5316BC();
  }
  else
  {
    v16 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel;
    v17 = *(void **)&v8[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel];
    if (a2)
    {
      v18 = v17;
      v19 = (void *)sub_1DA66F88C();
    }
    else
    {
      v27 = v17;
      v19 = 0;
    }
    objc_msgSend(v17, sel_setText_, v19);

    v28 = *(id *)&v9[v16];
    sub_1DA52F3E8(v40);
    v29 = v41;
    v30 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 144))(v29, v30);
    objc_msgSend(v28, sel_setFont_, v31);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    objc_msgSend(*(id *)&v9[v16], sel_setNumberOfLines_, 3);
    v32 = sub_1DA52E7C8();
    objc_msgSend(v32, sel_setText_, 0);

    sub_1DA530D28();
  }
  v33 = &v9[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapBannerBlock];
  v34 = *(_QWORD *)&v9[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapBannerBlock];
  *(_QWORD *)v33 = a5;
  *((_QWORD *)v33 + 1) = a6;
  sub_1DA66BE60();
  sub_1DA4EFFCC(v34);
  v35 = &v9[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapCloseButtonBlock];
  v36 = *(_QWORD *)&v9[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapCloseButtonBlock];
  *(_QWORD *)v35 = a7;
  *((_QWORD *)v35 + 1) = a8;
  sub_1DA66BE60();
  sub_1DA4EFFCC(v36);
  v37 = sub_1DA52EC84();
  objc_msgSend(v9, sel_addGestureRecognizer_, v37);

}

void sub_1DA530D28()
{
  id v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;

  v0 = sub_1DA52EDF8();
  objc_msgSend(v0, sel_setActive_, 1);

  v1 = sub_1DA52EEC4();
  v2 = sub_1DA52F1C4();
  v3 = sub_1DA52F000();
  v9 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v4 = v1;
    MEMORY[0x1DF09E464]();
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DA66FAC0();
    sub_1DA66FB14();
    sub_1DA66FAB4();
  }
  if (v2)
  {
    v5 = v2;
    MEMORY[0x1DF09E464]();
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DA66FAC0();
    sub_1DA66FB14();
    sub_1DA66FAB4();
  }
  if (v3)
  {
    v6 = v3;
    MEMORY[0x1DF09E464]();
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DA66FAC0();
    sub_1DA66FB14();
    sub_1DA66FAB4();
  }
  v7 = (void *)objc_opt_self();

  sub_1DA47D774(0, (unint64_t *)&qword_1EDADE8E0);
  v8 = (id)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_deactivateConstraints_, v8);

}

void sub_1DA530F14()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;

  v0 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DA67B2A0;
  *(_QWORD *)(v1 + 32) = sub_1DA52EDF8();
  sub_1DA66FAB4();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDADE8E0);
  v2 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_deactivateConstraints_, v2);

  v3 = sub_1DA52EEC4();
  v4 = sub_1DA52F1C4();
  v5 = sub_1DA52F000();
  v10 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v6 = v3;
    MEMORY[0x1DF09E464]();
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DA66FAC0();
    sub_1DA66FB14();
    sub_1DA66FAB4();
  }
  if (v4)
  {
    v7 = v4;
    MEMORY[0x1DF09E464]();
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DA66FAC0();
    sub_1DA66FB14();
    sub_1DA66FAB4();
  }
  if (v5)
  {
    v8 = v5;
    MEMORY[0x1DF09E464]();
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DA66FAC0();
    sub_1DA66FB14();
    sub_1DA66FAB4();
  }

  v9 = (id)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_activateConstraints_, v9);

}

void sub_1DA531168()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double v17;
  id v18;
  _QWORD v19[6];

  v1 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView;
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView), sel_layer));
  if (qword_1F0268510 != -1)
    swift_once();
  objc_msgSend(v2, sel_setShadowRadius_, *(double *)&qword_1F026A628);

  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_blackColor);
  v5 = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.08);

  v6 = objc_msgSend(v3, sel_whiteColor);
  v7 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.1);

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  v9 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v19[4] = sub_1DA532A10;
  v19[5] = v8;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1DA58905C;
  v19[3] = &block_descriptor_3;
  v10 = _Block_copy(v19);
  v11 = v5;
  v12 = v7;
  v13 = objc_msgSend(v9, sel_initWithDynamicProvider_, v10);
  _Block_release(v10);
  swift_release();
  v14 = objc_msgSend(*(id *)(v0 + v1), sel_layer);
  v15 = objc_msgSend(v13, sel_CGColor);
  objc_msgSend(v14, sel_setShadowColor_, v15);

  v16 = objc_msgSend(*(id *)(v0 + v1), sel_layer);
  LODWORD(v17) = 1.0;
  objc_msgSend(v16, sel_setShadowOpacity_, v17);

  v18 = objc_msgSend(*(id *)(v0 + v1), sel_layer);
  objc_msgSend(v18, sel_setShadowOffset_, 0.0, 2.0);

}

void sub_1DA5313EC(id a1)
{
  char *v1;
  char *v2;
  id v4;
  char v5;
  int v6;
  id v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  if (a1)
  {
    v4 = objc_msgSend(a1, sel_preferredContentSizeCategory);
    v5 = sub_1DA67003C();

    v6 = v5 & 1;
  }
  else
  {
    v6 = 2;
  }
  v7 = objc_msgSend(v1, sel_traitCollection);
  v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  v9 = sub_1DA67003C();
  if (v6 == 2 || ((v9 ^ (v6 != 0)) & 1) != 0)
  {
    sub_1DA5316BC();
    if (a1)
      goto LABEL_7;
LABEL_9:
    v10 = 0;
    goto LABEL_10;
  }
  if (!a1)
    goto LABEL_9;
LABEL_7:
  v10 = objc_msgSend(a1, sel_userInterfaceStyle);
LABEL_10:
  v11 = objc_msgSend(v2, sel_traitCollection);
  v12 = objc_msgSend(v11, sel_userInterfaceStyle);

  if (!a1 || v10 != v12)
  {
    v13 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView], sel_layer);
    v14 = objc_msgSend(v2, sel_traitCollection);
    objc_msgSend(v14, sel_userInterfaceStyle);

    sub_1DA66F8BC();
    v15 = objc_allocWithZone(MEMORY[0x1E0CD2780]);
    v16 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v15, sel_initWithType_, v16);

    objc_msgSend(v13, sel_setCompositingFilter_, v17);
    sub_1DA52F3E8(v20);
    v18 = v21;
    v19 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    LOBYTE(v13) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 96))(v18, v19);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    if ((v13 & 1) != 0)
      sub_1DA531168();
  }
}

void sub_1DA5316BC()
{
  void *v0;
  id v1;
  id v2;
  char v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, sel_traitCollection);
  v2 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  v3 = sub_1DA67003C();
  v4 = sub_1DA52E7C8();
  v5 = v4;
  if ((v3 & 1) != 0)
  {
    v6 = objc_msgSend(v4, sel_text);

    if (v6)
    {
      v7 = sub_1DA66F8BC();
      v9 = v8;

      v11 = v7;
      sub_1DA5329A0();
      LOBYTE(v7) = sub_1DA66FCDC();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        v10 = sub_1DA52E7C8();
        objc_msgSend(v10, sel_setHidden_, 0, v11, v9);

        sub_1DA530F14();
      }
    }
  }
  else
  {
    objc_msgSend(v4, sel_setHidden_, 1);

    sub_1DA530D28();
  }
}

void sub_1DA531804(void *a1)
{
  uint64_t v1;
  char *v2;
  _BYTE *v3;
  char v4;
  int v5;
  id v6;

  v2 = (char *)objc_msgSend(a1, sel_state);
  if ((unint64_t)(v2 - 3) >= 2)
  {
    if ((unint64_t)(v2 - 1) > 1)
      return;
    v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering);
    v4 = *(_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering) = 1;
    if ((v4 & 1) != 0 || (isMac() & 1) == 0)
      return;
LABEL_8:
    v6 = sub_1DA52E8EC();
    objc_msgSend(v6, sel_setHidden_, (*v3 & 1) == 0);

    return;
  }
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering);
  v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering) = 0;
  if (v5 == 1 && isMac())
    goto LABEL_8;
}

uint64_t sub_1DA53194C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_objectGraph);
  swift_beginAccess();
  *v3 = v2;
  sub_1DA66BE60();
  return swift_release();
}

uint64_t sub_1DA5319B4()
{
  swift_beginAccess();
  return sub_1DA66BE60();
}

uint64_t sub_1DA5319FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_objectGraph);
  swift_beginAccess();
  *v3 = a1;
  sub_1DA66BE60();
  return swift_release();
}

id EpisodeUpsellBannerView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void EpisodeUpsellBannerView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EpisodeUpsellBannerView.__deallocating_deinit(uint64_t a1)
{
  return sub_1DA531D3C(a1, type metadata accessor for EpisodeUpsellBannerView);
}

void sub_1DA531D04()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1DA531D2C()
{
  return sub_1DA531D3C(0, type metadata accessor for CloseButton);
}

id sub_1DA531D3C(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id sub_1DA531D6C@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  _QWORD v21[6];
  char v22;
  char v23;
  char v24;
  char v25;

  if (qword_1EDAE2520 != -1)
    swift_once();
  v2 = (void *)qword_1EDAE2518;
  v3 = (void *)objc_opt_self();
  v4 = v2;
  v5 = objc_msgSend(v3, sel_secondaryLabelColor);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE25C8);
  v6 = UIColor.init(hexString:alpha:)(0x354635463546, 0xE600000000000000, 1.0);
  if (!v6)
    v6 = objc_msgSend(v3, sel_systemBackgroundColor);
  v7 = v6;
  v8 = UIColor.init(hexString:alpha:)(0x383038303830, 0xE600000000000000, 1.0);
  if (!v8)
    v8 = objc_msgSend(v3, sel_systemBackgroundColor);
  v9 = v8;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v9;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v21[4] = sub_1DA5330A4;
  v21[5] = v10;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v21[2] = sub_1DA58905C;
  v21[3] = &block_descriptor_16;
  v12 = _Block_copy(v21);
  v13 = v7;
  v14 = v9;
  v15 = objc_msgSend(v11, sel_initWithDynamicProvider_, v12);
  _Block_release(v12);

  swift_release();
  v16 = objc_msgSend(v3, sel_systemBackgroundColor);
  if (qword_1EDAE5268 != -1)
    swift_once();
  v17 = qword_1EDADE808;
  v18 = (id)qword_1EDAE5260;
  if (v17 != -1)
    swift_once();
  v19 = (void *)qword_1EDADE800;
  LOBYTE(v21[0]) = 0;
  v25 = 1;
  v24 = 1;
  v23 = 1;
  v22 = 1;
  *(_OWORD *)a1 = xmmword_1DA67B880;
  *(_OWORD *)(a1 + 16) = xmmword_1DA67B890;
  *(_OWORD *)(a1 + 32) = xmmword_1DA67B8A0;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = 0x6B72616D78;
  *(_QWORD *)(a1 + 64) = 0xE500000000000000;
  *(_QWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 80) = xmmword_1DA67B8B0;
  *(_QWORD *)(a1 + 96) = 0x4018000000000000;
  *(_BYTE *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = v15;
  *(_QWORD *)(a1 + 120) = v16;
  *(_QWORD *)(a1 + 128) = 0x4024000000000000;
  *(_QWORD *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 144) = v19;
  *(_QWORD *)(a1 + 152) = v19;
  *(_QWORD *)(a1 + 160) = 0x3FF0000000000000;
  *(_BYTE *)(a1 + 168) = v21[0];
  *(_QWORD *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = v25;
  *(_QWORD *)(a1 + 192) = 0;
  *(_BYTE *)(a1 + 200) = v24;
  *(_QWORD *)(a1 + 208) = 0;
  *(_BYTE *)(a1 + 216) = v23;
  *(_QWORD *)(a1 + 224) = 0;
  *(_BYTE *)(a1 + 232) = v22;
  return v19;
}

id sub_1DA53208C@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v17;
  id v19;

  if (qword_1EDAE5268 != -1)
    swift_once();
  v2 = (void *)qword_1EDAE5260;
  v3 = (void *)objc_opt_self();
  v4 = v2;
  v5 = objc_msgSend(v3, sel_systemGray4Color);
  v6 = objc_msgSend(v3, sel_systemBackgroundColor);
  v7 = objc_msgSend(v3, sel_systemBackgroundColor);
  if (qword_1EDADE928 != -1)
    swift_once();
  v8 = qword_1EDAE51C0;
  v9 = (id)qword_1EDADE750;
  v10 = v9;
  if (v8 != -1)
  {
    swift_once();
    v9 = (id)qword_1EDADE750;
  }
  v19 = v9;
  v11 = (void *)qword_1EDAE5248;
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)a1 = _Q0;
  *(_OWORD *)(a1 + 16) = xmmword_1DA67B8C0;
  *(_OWORD *)(a1 + 32) = xmmword_1DA67B8D0;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = 0xD000000000000011;
  *(_QWORD *)(a1 + 64) = 0x80000001DA68A550;
  *(_QWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 80) = xmmword_1DA67B8E0;
  *(_QWORD *)(a1 + 96) = 0x401C000000000000;
  *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 120) = v7;
  *(_QWORD *)(a1 + 128) = 0x4024000000000000;
  *(_QWORD *)(a1 + 136) = v10;
  *(_QWORD *)(a1 + 144) = v11;
  *(_QWORD *)(a1 + 152) = v9;
  *(_QWORD *)(a1 + 160) = 0;
  *(_BYTE *)(a1 + 168) = 1;
  *(_QWORD *)(a1 + 176) = 0x403B000000000000;
  *(_BYTE *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 192) = 0;
  *(_BYTE *)(a1 + 200) = 1;
  *(_QWORD *)(a1 + 208) = 0xC031000000000000;
  *(_BYTE *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_BYTE *)(a1 + 232) = 1;
  v17 = v11;
  return v19;
}

id sub_1DA532298@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v15;
  id v17;

  if (qword_1EDAE51C0 != -1)
    swift_once();
  v2 = (void *)qword_1EDAE5248;
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v4 = v2;
  v5 = objc_msgSend(v3, sel_initWithWhite_alpha_, 1.0, 0.7);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.08);
  v7 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  if (qword_1EDADE928 != -1)
    swift_once();
  v8 = (void *)qword_1EDADE750;
  v17 = (id)qword_1EDAE5248;
  v9 = qword_1EDAE5248;
  __asm { FMOV            V0.2D, #12.0 }
  *(_OWORD *)a1 = _Q0;
  *(_OWORD *)(a1 + 16) = xmmword_1DA67B8F0;
  *(_OWORD *)(a1 + 32) = xmmword_1DA67B900;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = 0xD000000000000011;
  *(_QWORD *)(a1 + 64) = 0x80000001DA68A550;
  *(_QWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 80) = xmmword_1DA67B910;
  *(_QWORD *)(a1 + 96) = 0x4020000000000000;
  *(_BYTE *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 120) = v7;
  *(_QWORD *)(a1 + 128) = 0x4030000000000000;
  *(_QWORD *)(a1 + 136) = v8;
  *(_QWORD *)(a1 + 144) = v9;
  *(_QWORD *)(a1 + 152) = v8;
  *(_QWORD *)(a1 + 160) = 0x4000000000000000;
  *(_BYTE *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 1;
  *(_QWORD *)(a1 + 192) = 0x402C000000000000;
  *(_BYTE *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_BYTE *)(a1 + 216) = 1;
  *(_QWORD *)(a1 + 224) = 0xC028000000000000;
  *(_BYTE *)(a1 + 232) = 0;
  v15 = v8;
  return v17;
}

void _s10PodcastsUI23EpisodeUpsellBannerViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;

  v1 = &v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapBannerBlock];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapCloseButtonBlock];
  *v2 = 0;
  v2[1] = 0;
  v3 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v5 = objc_msgSend(v4, sel_layer);
  objc_msgSend(v5, sel_setMasksToBounds_, 1);

  *(_QWORD *)&v0[v3] = v4;
  v6 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v7, sel_setTextColor_, v8);

  objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(_QWORD *)&v0[v6] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___dismissButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___tapBannerGestureRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___textLayout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleLabelCenterYConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleTopAnchorConstraint] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleBottomConstraint] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleTopConstraint] = 1;
  v9 = &v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___config];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_hoverRecognizer] = 0;
  v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_objectGraph] = 0;

  sub_1DA670444();
  swift_bridgeObjectRelease();
  sub_1DA670570();
  __break(1u);
}

unint64_t sub_1DA5326A4()
{
  unint64_t result;

  result = qword_1F026A6C0;
  if (!qword_1F026A6C0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for EpisodeUpsellBannerView.EpisodeUpsellBannerType, &type metadata for EpisodeUpsellBannerView.EpisodeUpsellBannerType);
    atomic_store(result, (unint64_t *)&qword_1F026A6C0);
  }
  return result;
}

uint64_t sub_1DA5326E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_objectGraph);
  swift_beginAccess();
  *a2 = *v3;
  return sub_1DA66BE60();
}

uint64_t method lookup function for EpisodeUpsellBannerView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EpisodeUpsellBannerView.__allocating_init(frame:bannerType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 552))();
}

uint64_t dispatch thunk of EpisodeUpsellBannerView.apply(primaryText:secondaryText:tapBannerBlock:tapCloseButtonBlock:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x230))();
}

uint64_t dispatch thunk of EpisodeUpsellBannerView.objectGraph.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of EpisodeUpsellBannerView.bind(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B8))();
}

uint64_t getEnumTagSinglePayload for ModalSheet.Action.ActionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeUpsellBannerView.EpisodeUpsellBannerType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DA532884 + 4 * byte_1DA67B935[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DA5328B8 + 4 * byte_1DA67B930[v4]))();
}

uint64_t sub_1DA5328B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5328C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5328C8);
  return result;
}

uint64_t sub_1DA5328D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5328DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DA5328E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5328E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUpsellBannerView.EpisodeUpsellBannerType()
{
  return &type metadata for EpisodeUpsellBannerView.EpisodeUpsellBannerType;
}

uint64_t type metadata accessor for CloseButton()
{
  return objc_opt_self();
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

void sub_1DA532940(id a1)
{
  if (a1 != (id)1)

}

id sub_1DA532950(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_1DA532960(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A6F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA5329A0()
{
  unint64_t result;

  result = qword_1EDADFFD0;
  if (!qword_1EDADFFD0)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDADFFD0);
  }
  return result;
}

uint64_t sub_1DA5329E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DA532A10(void *a1)
{
  uint64_t v1;

  return sub_1DA588224(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1DA532A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A6F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA532A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A6F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_2Tm()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

__n128 __swift_memcpy233_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_OWORD *)(a1 + 217) = *(__int128 *)((char *)a2 + 217);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

ValueMetadata *type metadata accessor for MacEpisodeUpsellConfiguration()
{
  return &type metadata for MacEpisodeUpsellConfiguration;
}

ValueMetadata *type metadata accessor for iOSEpisodeUpsellConfiguration()
{
  return &type metadata for iOSEpisodeUpsellConfiguration;
}

void _s10PodcastsUI29MacEpisodeUpsellConfigurationVwxx_0(id *a1)
{

  swift_bridgeObjectRelease();
}

uint64_t _s10PodcastsUI29MacEpisodeUpsellConfigurationVwcp_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v6 = *(void **)(a2 + 112);
  v7 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 120) = v7;
  v8 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v8;
  v9 = *(void **)(a2 + 144);
  v10 = *(void **)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v9;
  *(_QWORD *)(a1 + 152) = v10;
  v11 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v11;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v12 = v3;
  swift_bridgeObjectRetain();
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  v18 = v10;
  return a1;
}

uint64_t _s10PodcastsUI29MacEpisodeUpsellConfigurationVwca_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(void **)(a2 + 48);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 72);
  v8 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v10 = *(void **)(a2 + 112);
  v11 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 120);
  v14 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v13;
  v15 = v13;

  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v16 = *(void **)(a2 + 136);
  v17 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 144);
  v20 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v19;
  v21 = v19;

  v22 = *(void **)(a2 + 152);
  v23 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v22;
  v24 = v22;

  v25 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v25;
  v26 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v26;
  v27 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v27;
  v28 = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = v28;
  v29 = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = v29;
  return a1;
}

uint64_t _s10PodcastsUI29MacEpisodeUpsellConfigurationVwta_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);

  v7 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v8 = *(void **)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);

  v9 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);

  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v10 = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = v10;
  return a1;
}

uint64_t _s10PodcastsUI29MacEpisodeUpsellConfigurationVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 233))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1DA532FD4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 232) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 233) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 233) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for iOSNowPlayingEpisodeUpsellConfiguration()
{
  return &type metadata for iOSNowPlayingEpisodeUpsellConfiguration;
}

id Color.color.getter(uint64_t a1, char a2)
{
  uint64_t v2;
  id v3;

  if (a2)
  {
    if (a2 != 1)
      __asm { BR              X9 }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithCGColor_, a1);
  }
  else
  {
    v3 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
    return objc_msgSend(v3, sel_initWithRed_green_blue_alpha_, v2);
  }
}

id sub_1DA533180()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
}

id sub_1DA53323C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  id result;
  char v6;

  result = sub_1DA65777C(a1, a2);
  if (!v3)
  {
    *(_QWORD *)a3 = result;
    *(_BYTE *)(a3 + 8) = v6;
  }
  return result;
}

id static Color.custom(_:)(void *a1)
{
  return objc_msgSend(a1, sel_CGColor);
}

void Color.analyzedColor.getter(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_1DA4E762C(a1, a2);
  AnalyzedColor.init(color:)(a1, a2, a3);
}

uint64_t static EpisodeUnavailableReason.Translator.episodeUnavailableReason(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  int v14;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  void *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  id v32;

  v2 = sub_1DA66DEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66CF58();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - v11;
  v30 = a1;
  v13 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
    if (v14 == *MEMORY[0x1E0D7DDF0])
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

      return 6;
    }
    if (v14 == *MEMORY[0x1E0D7DDE8])
    {

      return 8;
    }
    if (v14 == *MEMORY[0x1E0D7DDD8])
    {
      (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
      v25 = &v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026A0C0) + 48)];
      v26 = sub_1DA66CF64();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
      v27 = sub_1DA66CFD0();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v9, v27);
    }
    else if (v14 != *MEMORY[0x1E0D7DE00])
    {
      if (v14 == *MEMORY[0x1E0D7DDE0])
      {

        return 1;
      }
      if (v14 == *MEMORY[0x1E0D7DDF8])
      {

        return 14;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

  }
  else
  {

    v32 = a1;
    v16 = a1;
    if (swift_dynamicCast())
      __asm { BR              X10 }

    sub_1DA66DE70();
    v17 = a1;
    v18 = a1;
    v19 = sub_1DA66DEDC();
    v20 = sub_1DA66FDA8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v21 = 138412290;
      v22 = a1;
      v23 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v30 = v23;
      sub_1DA6702C4();
      v24 = v29;
      *v29 = v23;

      _os_log_impl(&dword_1DA478000, v19, v20, "Unhandled player error: %@", v21, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v24, -1, -1);
      MEMORY[0x1DF0A0474](v21, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 5;
}

uint64_t sub_1DA53377C(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

ValueMetadata *type metadata accessor for EpisodeUnavailableReason.Translator()
{
  return &type metadata for EpisodeUnavailableReason.Translator;
}

char *initializeBufferWithCopyOfBuffer for PageRenderActivity(char *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  id v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = (char *)*a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    sub_1DA66BE60();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        v10 = (char *)*a2;
        v11 = (char *)*a2;
        *(_QWORD *)a1 = v10;
        a1[8] = *((_BYTE *)a2 + 8);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v12 = *a2;
        v13 = v12;
        *(_QWORD *)a1 = v12;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v8 = sub_1DA66ED28();
        (*(void (**)(char *, id *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for PageRenderActivity(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 2)
  {

  }
  else if (EnumCaseMultiPayload == 1)
  {
    v3 = sub_1DA66ED28();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

_BYTE *initializeWithCopy for PageRenderActivity(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      v8 = *(id *)a2;
      v9 = *(id *)a2;
      *(_QWORD *)a1 = v8;
      a1[8] = *(_BYTE *)(a2 + 8);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v10 = *(id *)a2;
      v11 = v10;
      *(_QWORD *)a1 = v10;
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v7 = sub_1DA66ED28();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *assignWithCopy for PageRenderActivity(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;

  if (a1 != (_BYTE *)a2)
  {
    sub_1DA533B14((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        v8 = *(id *)a2;
        v9 = *(id *)a2;
        *(_QWORD *)a1 = v8;
        a1[8] = *(_BYTE *)(a2 + 8);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v10 = *(id *)a2;
        v11 = v10;
        *(_QWORD *)a1 = v10;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v7 = sub_1DA66ED28();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1DA533B14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PageRenderActivity();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for PageRenderActivity(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1DA66ED28();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PageRenderActivity(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1DA533B14((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1DA66ED28();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t ClickLocationElement.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickLocationElement.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ClickLocationElement.id.modify())()
{
  return nullsub_1;
}

uint64_t ClickLocationElement._uniqueID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickLocationElement._uniqueID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ClickLocationElement._uniqueID.modify())()
{
  return nullsub_1;
}

uint64_t ClickLocationElement.parentUniqueID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickLocationElement.parentUniqueID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ClickLocationElement.parentUniqueID.modify())()
{
  return nullsub_1;
}

uint64_t ClickLocationElement.position.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t ClickLocationElement.position.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*ClickLocationElement.position.modify())()
{
  return nullsub_1;
}

uint64_t ClickLocationElement.fields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClickLocationElement.fields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*ClickLocationElement.fields.modify())()
{
  return nullsub_1;
}

uint64_t ClickLocationElement.init(id:uniqueID:parentUniqueID:position:fields:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t sub_1DA533E3C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ClickLocationElement.uniqueID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (v0[3])
  {
    v1 = v0[2];
  }
  else
  {
    v1 = *v0;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickLocationElement.init(impressionMetrics:uniqueID:parentUniqueID:position:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a2;
  v35 = a4;
  v12 = sub_1DA66EFB0();
  v32 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4960);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DA66EFEC();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA534090(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1DA47E2F0(a1, &qword_1EDAE4960);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1DA47E2F0((uint64_t)v17, &qword_1EDAE4960);
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
    *(_OWORD *)(a7 + 32) = 0u;
    *(_OWORD *)(a7 + 48) = 0u;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    sub_1DA66EFC8();
    v23 = sub_1DA66EFA4();
    v30 = a6;
    v31 = a1;
    v24 = a5;
    v25 = v23;
    v26 = a3;
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v33);
    v29 = sub_1DA66EF5C();
    *(_QWORD *)a7 = v25;
    *(_QWORD *)(a7 + 8) = v28;
    *(_QWORD *)(a7 + 16) = v34;
    *(_QWORD *)(a7 + 24) = v26;
    *(_QWORD *)(a7 + 32) = v35;
    *(_QWORD *)(a7 + 40) = v24;
    *(_QWORD *)(a7 + 48) = v30;
    *(_QWORD *)(a7 + 56) = v29;
    sub_1DA47E2F0(v31, &qword_1EDAE4960);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  return result;
}

uint64_t sub_1DA534090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ClickLocationElement.withUniqueID(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 32);
  v6 = *(_QWORD *)(v3 + 56);
  *(_QWORD *)a3 = *(_QWORD *)v3;
  *(_QWORD *)(a3 + 8) = v4;
  *(_QWORD *)(a3 + 24) = a2;
  *(_QWORD *)(a3 + 32) = v5;
  *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
  *(_QWORD *)(a3 + 56) = v6;
  *(_QWORD *)(a3 + 16) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ClickLocationElement.withParentUniqueID(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v8 = v3[6];
  v7 = v3[7];
  *a3 = *v3;
  a3[1] = v4;
  a3[2] = v5;
  a3[3] = v6;
  a3[6] = v8;
  a3[7] = v7;
  a3[4] = a1;
  a3[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ClickLocationElement.withPosition(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 48) = a1;
  *(_QWORD *)(a2 + 56) = v6;
  *(_QWORD *)(a2 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ClickLocationElement.playButton(adamID:uniqueID:parentUniqueID:position:kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  _OWORD v68[2];
  __int128 v69;
  uint64_t v70;
  unint64_t v71;

  v60 = a7;
  v66 = a2;
  v16 = sub_1DA66C454();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1DA66DCD8();
  v65 = a5;
  if ((v20 & 1) != 0)
  {
    v61 = 0xE000000000000000;
    v62 = 0;
  }
  else
  {
    *(_QWORD *)&v69 = a1;
    sub_1DA4F726C();
    v21 = sub_1DA670354();
    v61 = v22;
    v62 = v21;
  }
  v23 = sub_1DA66DCD8();
  v63 = a4;
  v64 = a6;
  if ((v23 & 1) != 0)
  {
    v24 = 0;
    v25 = 0;
    v26 = a3;
    if (a3)
      goto LABEL_9;
  }
  else
  {
    v24 = sub_1DA66CCA0();
    v25 = v27;
    v26 = a3;
    if (a3)
      goto LABEL_9;
  }
  sub_1DA66C448();
  v66 = sub_1DA66C43C();
  v26 = v28;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
LABEL_9:
  v29 = MEMORY[0x1E0DEE9E0];
  v71 = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRetain();
  v30 = sub_1DA66CAFC();
  v32 = v30;
  v33 = v31;
  v34 = MEMORY[0x1E0DEA968];
  if (v25)
  {
    v70 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v69 = v24;
    *((_QWORD *)&v69 + 1) = v25;
    sub_1DA49ACF0(&v69, v68);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v67 = v29;
    v71 = 0x8000000000000000;
    sub_1DA534964(v68, v32, v33, isUniquelyReferenced_nonNull_native);
    v71 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v30, v31, &v69);
    sub_1DA47E2F0((uint64_t)&v69, &qword_1EDAE5130);
  }
  swift_bridgeObjectRelease();
  v36 = v63;
  v37 = sub_1DA66CACC();
  v39 = v37;
  v40 = v38;
  if (a8)
  {
    v70 = v34;
    *(_QWORD *)&v69 = v60;
    *((_QWORD *)&v69 + 1) = a8;
    sub_1DA49ACF0(&v69, v68);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v41 = v71;
    v42 = swift_isUniquelyReferenced_nonNull_native();
    v67 = v41;
    v71 = 0x8000000000000000;
    sub_1DA534964(v68, v39, v40, v42);
    v71 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v37, v38, &v69);
    sub_1DA47E2F0((uint64_t)&v69, &qword_1EDAE5130);
  }
  swift_bridgeObjectRelease();
  v43 = sub_1DA66CAC0();
  v45 = v44;
  v46 = sub_1DA66D2D0();
  v70 = v34;
  *(_QWORD *)&v69 = v46;
  *((_QWORD *)&v69 + 1) = v47;
  sub_1DA49ACF0(&v69, v68);
  v48 = v71;
  v49 = swift_isUniquelyReferenced_nonNull_native();
  v67 = v48;
  v71 = 0x8000000000000000;
  sub_1DA534964(v68, v43, v45, v49);
  v71 = v67;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50 = sub_1DA66CB50();
  v52 = v51;
  v70 = v34;
  *(_QWORD *)&v69 = 2036427856;
  *((_QWORD *)&v69 + 1) = 0xE400000000000000;
  sub_1DA49ACF0(&v69, v68);
  v53 = v71;
  v54 = swift_isUniquelyReferenced_nonNull_native();
  v67 = v53;
  v71 = 0x8000000000000000;
  sub_1DA534964(v68, v50, v52, v54);
  v71 = v67;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55 = v71;
  v56 = v61;
  *a9 = v62;
  a9[1] = v56;
  v57 = v65;
  a9[2] = v66;
  a9[3] = v26;
  a9[4] = v36;
  a9[5] = v57;
  a9[6] = v64;
  a9[7] = v55;
  return swift_bridgeObjectRetain();
}

uint64_t static ClickLocationElement.seeAllButton(uniqueID:parentUniqueID:position:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;

  v10 = sub_1DA66CB50();
  v12 = v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v14 = sub_1DA66C19C();
  v16 = v15;

  v17 = MEMORY[0x1E0DEA968];
  v31 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v30 = v14;
  *((_QWORD *)&v30 + 1) = v16;
  sub_1DA49ACF0(&v30, v29);
  v18 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA534964(v29, v10, v12, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = sub_1DA66CAC0();
  v22 = v21;
  v23 = sub_1DA66D2D0();
  v31 = v17;
  *(_QWORD *)&v30 = v23;
  *((_QWORD *)&v30 + 1) = v24;
  sub_1DA49ACF0(&v30, v29);
  v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA534964(v29, v20, v22, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a6 = 0x6C6C41656553;
  a6[1] = 0xE600000000000000;
  a6[2] = a1;
  a6[3] = a2;
  a6[4] = a3;
  a6[5] = a4;
  a6[6] = a5;
  a6[7] = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1DA5347A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1DA591C4C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1DA534D08();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1DA49ACF0((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1DA535224(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1DA534890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1DA49ACF0((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DA534964(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DA47E2F0(a1, &qword_1EDAE5130);
    sub_1DA5347A0(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_1DA47E2F0((uint64_t)v9, &qword_1EDAE5130);
  }
}

_OWORD *sub_1DA534964(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  char v5;
  _QWORD **v6;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  _OWORD *v20;
  _OWORD *result;

  v6 = (_QWORD **)v4;
  v11 = (_QWORD *)*v4;
  v13 = sub_1DA591C4C(a2, a3);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = v12;
  if (v11[3] >= v16)
  {
    if ((a4 & 1) != 0)
    {
      v19 = *v6;
      if ((v12 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1DA5353F8(v13, a2, a3, a1, v19);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
LABEL_10:
    sub_1DA534D08();
    v19 = *v6;
    if ((v5 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
  sub_1DA534EFC(v16, a4 & 1);
  v17 = sub_1DA591C4C(a2, a3);
  if ((v5 & 1) == (v18 & 1))
  {
    v13 = v17;
    v19 = *v6;
    if ((v5 & 1) == 0)
      goto LABEL_11;
LABEL_8:
    v20 = (_OWORD *)(v19[7] + 32 * v13);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    return sub_1DA49ACF0(a1, v20);
  }
  result = (_OWORD *)sub_1DA670744();
  __break(1u);
  return result;
}

uint64_t sub_1DA534A94()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t destroy for ClickLocationElement()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ClickLocationElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ClickLocationElement(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for ClickLocationElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClickLocationElement(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClickLocationElement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickLocationElement()
{
  return &type metadata for ClickLocationElement;
}

void *sub_1DA534D08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE21C0);
  v2 = *v0;
  v3 = sub_1DA6705AC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_29:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v13)
      goto LABEL_27;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_27;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_27;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
        {
          v9 = v22 + 3;
          if (v22 + 3 >= v13)
          {
LABEL_27:
            result = (void *)swift_release();
            v1 = v25;
            goto LABEL_29;
          }
          v23 = *(_QWORD *)(v6 + 8 * v9);
          v24 = v22 + 3;
          if (!v23)
            break;
        }
      }
    }
LABEL_26:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1DA49ADD0(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1DA49ACF0(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_27;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_26;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1DA534EFC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t i;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE21C0);
  v6 = sub_1DA6705B8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v33 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = sub_1DA66BE60();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_35;
        v19 = v33[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_35;
          v19 = v33[v13];
          if (!v19)
          {
            v13 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_35;
            v19 = v33[v13];
            if (!v19)
            {
              v13 = v18 + 3;
              if (v18 + 3 >= v34)
              {
LABEL_35:
                swift_release();
                v3 = v2;
                if ((a2 & 1) != 0)
                {
                  v32 = 1 << *(_BYTE *)(v5 + 32);
                  if (v32 >= 64)
                    bzero(v33, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  else
                    *v33 = -1 << v32;
                  *(_QWORD *)(v5 + 16) = 0;
                }
                break;
              }
              v19 = v33[v13];
              for (i = v18 + 3; !v19; ++i)
              {
                v13 = i + 1;
                if (__OFADD__(i, 1))
                  goto LABEL_42;
                if (v13 >= v34)
                  goto LABEL_35;
                v19 = v33[v13];
              }
            }
          }
        }
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1DA49ACF0(v24, v35);
      }
      else
      {
        sub_1DA49ADD0((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1DA670798();
      sub_1DA66F94C();
      result = sub_1DA6707C8();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1DA49ACF0(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_1DA535224(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1DA670384();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1DA670798();
        swift_bridgeObjectRetain();
        sub_1DA66F94C();
        v10 = sub_1DA6707C8();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_1DA5353F8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1DA49ACF0(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t Array<A>.content.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v3 = *(_QWORD *)(sub_1DA66D0F0() - 8);
  v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v5 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_1DA535500(v4, (uint64_t)v7, a1);
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v7[0];
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v2 = sub_1DA66D0A8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v27 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A700);
  MEMORY[0x1E0C80A78](v33);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A708);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v26 - v13;
  v34 = 0;
  v35 = 0xE000000000000000;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v32 = *(_QWORD *)(v3 + 72);
    v30 = v12;
    v31 = v16 + v32 * (v15 - 1);
    v26 = a1;
    swift_bridgeObjectRetain();
    v29 = v6;
    while (1)
    {
      sub_1DA66D078();
      sub_1DA66F988();
      swift_bridgeObjectRelease();
      v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      v17(v14, v16, v2);
      v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56);
      v18(v14, 0, 1, v2);
      v17(v10, v31, v2);
      v18(v10, 0, 1, v2);
      v19 = (uint64_t)&v6[*(int *)(v33 + 48)];
      sub_1DA49CC94((uint64_t)v14, (uint64_t)v6, &qword_1F026A708);
      sub_1DA49CC94((uint64_t)v10, v19, &qword_1F026A708);
      v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
      if (v20((uint64_t)v6, 1, v2) == 1)
      {
        sub_1DA47E2F0((uint64_t)v10, &qword_1F026A708);
        sub_1DA47E2F0((uint64_t)v14, &qword_1F026A708);
        if (v20(v19, 1, v2) != 1)
          goto LABEL_10;
        sub_1DA47E2F0((uint64_t)v6, &qword_1F026A708);
      }
      else
      {
        v21 = (uint64_t)v6;
        v22 = v30;
        sub_1DA49CC94(v21, v30, &qword_1F026A708);
        if (v20(v19, 1, v2) == 1)
        {
          sub_1DA47E2F0((uint64_t)v10, &qword_1F026A708);
          sub_1DA47E2F0((uint64_t)v14, &qword_1F026A708);
          (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v22, v2);
          v6 = v29;
LABEL_10:
          sub_1DA47E2F0((uint64_t)v6, &qword_1F026A700);
LABEL_12:
          sub_1DA66F988();
          goto LABEL_4;
        }
        v23 = v27;
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v27, v19, v2);
        sub_1DA47E32C(&qword_1F026A710, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E010], MEMORY[0x1E0D7E020]);
        v28 = sub_1DA66F850();
        v24 = *(void (**)(char *, uint64_t))(v3 + 8);
        v24(v23, v2);
        sub_1DA47E2F0((uint64_t)v10, &qword_1F026A708);
        sub_1DA47E2F0((uint64_t)v14, &qword_1F026A708);
        v24((char *)v22, v2);
        v6 = v29;
        sub_1DA47E2F0((uint64_t)v29, &qword_1F026A708);
        if ((v28 & 1) == 0)
          goto LABEL_12;
      }
LABEL_4:
      v16 += v32;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        return v34;
      }
    }
  }
  return 0;
}

uint64_t sub_1DA535500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  void (*v34)(uint64_t, unint64_t, uint64_t);
  uint64_t v35;
  uint64_t (*v36)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  char v62;
  void (*v63)(char *, uint64_t);
  _QWORD v64[2];
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;

  v69 = a3;
  v6 = sub_1DA66D0F0();
  v71 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v65 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A718);
  MEMORY[0x1E0C80A78](v70);
  v72 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66D0A8();
  v88 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v75 = (char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A700);
  MEMORY[0x1E0C80A78](v80);
  v85 = (uint64_t)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A708);
  MEMORY[0x1E0C80A78](v12);
  v76 = (uint64_t)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v84 = (uint64_t)v64 - v15;
  MEMORY[0x1E0C80A78](v16);
  v82 = (uint64_t)v64 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A720);
  MEMORY[0x1E0C80A78](v18);
  v66 = (uint64_t)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v73 = (uint64_t)v64 - v21;
  MEMORY[0x1E0C80A78](v22);
  v74 = (uint64_t)v64 - v23;
  v68 = a1;
  v24 = sub_1DA66D0C0();
  v86 = 0;
  v87 = 0xE000000000000000;
  v25 = *(_QWORD *)(v24 + 16);
  v67 = v3;
  if (v25)
  {
    v64[0] = v6;
    v64[1] = a2;
    v26 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    v81 = v24;
    v27 = v24 + v26;
    v28 = *(_QWORD *)(v88 + 72);
    v29 = &qword_1F026A708;
    v77 = v24 + v26 + v28 * (v25 - 1);
    v78 = v28;
    v79 = v25;
    v30 = v25;
    while (1)
    {
      v32 = v29;
      sub_1DA66D078();
      sub_1DA66F988();
      swift_bridgeObjectRelease();
      v33 = v88;
      v34 = *(void (**)(uint64_t, unint64_t, uint64_t))(v88 + 16);
      v35 = v82;
      v34(v82, v27, v9);
      v36 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56);
      result = v36(v35, 0, 1, v9);
      if (v79 > *(_QWORD *)(v81 + 16))
      {
        __break(1u);
        return result;
      }
      v83 = v30;
      v38 = v9;
      v39 = v84;
      v34(v84, v77, v38);
      v36(v39, 0, 1, v38);
      v40 = v85;
      v41 = v85 + *(int *)(v80 + 48);
      sub_1DA49CC94(v35, v85, v29);
      v42 = v39;
      v9 = v38;
      sub_1DA49CC94(v42, v41, v29);
      v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
      if (v43(v40, 1, v38) != 1)
        break;
      sub_1DA47E2F0(v84, v29);
      sub_1DA47E2F0(v35, v29);
      if (v43(v41, 1, v38) != 1)
        goto LABEL_11;
      sub_1DA47E2F0(v85, v29);
      v31 = v83;
LABEL_4:
      v27 += v78;
      v30 = v31 - 1;
      if (!v30)
      {
        swift_bridgeObjectRelease();
        v6 = v64[0];
        goto LABEL_17;
      }
    }
    v44 = v84;
    v45 = v76;
    sub_1DA49CC94(v85, v76, v29);
    if (v43(v41, 1, v9) == 1)
    {
      sub_1DA47E2F0(v44, v29);
      sub_1DA47E2F0(v82, v29);
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v45, v9);
LABEL_11:
      sub_1DA47E2F0(v85, &qword_1F026A700);
      v31 = v83;
    }
    else
    {
      v46 = v88;
      v47 = v75;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(v75, v41, v9);
      sub_1DA47E32C(&qword_1F026A710, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E010], MEMORY[0x1E0D7E020]);
      v48 = sub_1DA66F850();
      v49 = *(void (**)(char *, uint64_t))(v46 + 8);
      v29 = v32;
      v49(v47, v9);
      sub_1DA47E2F0(v44, v32);
      sub_1DA47E2F0(v82, v32);
      v49((char *)v45, v9);
      sub_1DA47E2F0(v85, v32);
      v31 = v83;
      if ((v48 & 1) != 0)
        goto LABEL_4;
    }
    sub_1DA66F988();
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
LABEL_17:
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  v50 = v71;
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16);
  v52 = v74;
  v51(v74, v68, v6);
  v53 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56);
  v54 = 1;
  v53(v52, 0, 1, v6);
  v55 = *(_QWORD *)(v69 + 16);
  v56 = (uint64_t)v72;
  v57 = v73;
  if (v55)
  {
    v51(v73, v69+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * (v55 - 1), v6);
    v54 = 0;
  }
  v53(v57, v54, 1, v6);
  v58 = v56 + *(int *)(v70 + 48);
  sub_1DA49CC94(v52, v56, &qword_1F026A720);
  sub_1DA49CC94(v57, v58, &qword_1F026A720);
  v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
  if (v59(v56, 1, v6) == 1)
  {
    sub_1DA47E2F0(v57, &qword_1F026A720);
    sub_1DA47E2F0(v52, &qword_1F026A720);
    if (v59(v58, 1, v6) == 1)
      return sub_1DA47E2F0(v56, &qword_1F026A720);
    goto LABEL_24;
  }
  v60 = v66;
  sub_1DA49CC94(v56, v66, &qword_1F026A720);
  if (v59(v58, 1, v6) == 1)
  {
    sub_1DA47E2F0(v57, &qword_1F026A720);
    sub_1DA47E2F0(v52, &qword_1F026A720);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v60, v6);
LABEL_24:
    sub_1DA47E2F0(v56, &qword_1F026A718);
    return sub_1DA66F988();
  }
  v61 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v65, v58, v6);
  sub_1DA47E32C(&qword_1F026A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E070], MEMORY[0x1E0D7E080]);
  v62 = sub_1DA66F850();
  v63 = *(void (**)(char *, uint64_t))(v50 + 8);
  v63(v61, v6);
  sub_1DA47E2F0(v73, &qword_1F026A720);
  sub_1DA47E2F0(v74, &qword_1F026A720);
  v63((char *)v60, v6);
  result = sub_1DA47E2F0(v56, &qword_1F026A720);
  if ((v62 & 1) == 0)
    return sub_1DA66F988();
  return result;
}

uint64_t sub_1DA536070(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  uint64_t v19;
  uint64_t result;
  BOOL v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v26[2];
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = sub_1DA66D0A8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66D0F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(a1 + 16);
  if (!v33)
    return 0;
  v32 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v10 = *(_QWORD *)(v7 + 72);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v31 = v10;
  v26[1] = a1;
  swift_bridgeObjectRetain();
  v11 = 0;
  v12 = 0;
  v28 = v7;
  v29 = v6;
  v27 = v9;
  do
  {
    v36 = v11;
    v30(v9, v32 + v31 * v11, v6);
    v13 = sub_1DA66D0C0();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v34 = v13;
      v35 = v12;
      v15 = v13 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      swift_bridgeObjectRetain();
      v16 = 0;
      v17 = *(_QWORD *)(v3 + 72);
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      do
      {
        v18(v5, v15, v2);
        sub_1DA66D078();
        v19 = sub_1DA66F958();
        result = swift_bridgeObjectRelease();
        v21 = __OFADD__(v16, v19);
        v16 += v19;
        if (v21)
        {
          __break(1u);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v15 += v17;
        --v14;
      }
      while (v14);
      v22 = v34;
      swift_bridgeObjectRelease();
      v23 = *(_QWORD *)(v22 + 16);
      result = swift_bridgeObjectRelease();
      v24 = v23 - 1;
      v7 = v28;
      v6 = v29;
      v9 = v27;
      v12 = v35;
      if (v23 > 1)
      {
        v21 = __OFADD__(v16, v24);
        v16 += v24;
        if (v21)
          goto LABEL_22;
      }
    }
    else
    {
      result = swift_bridgeObjectRelease();
      v16 = 0;
    }
    v21 = __OFADD__(v12, v16);
    v12 += v16;
    if (v21)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      return result;
    }
    v11 = v36 + 1;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  while (v11 != v33);
  swift_bridgeObjectRelease();
  v25 = v33 - 1;
  if (v33 > 1)
  {
    v21 = __OFADD__(v12, v25);
    v12 += v25;
    if (v21)
    {
      __break(1u);
      return 0;
    }
  }
  return v12;
}

uint64_t sub_1DA5362AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[4];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A708);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v25 - v12;
  if (*(_QWORD *)(a3 + 16))
  {
    v25[2] = a2;
    v25[3] = a4;
    v25[0] = *(_QWORD *)(sub_1DA66D0F0() - 8);
    v14 = sub_1DA66D0C0();
    v15 = *(_QWORD *)(v14 + 16);
    v16 = sub_1DA66D0A8();
    v17 = *(_QWORD *)(v16 - 8);
    v25[1] = a1;
    if (v15)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v13, v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v16);
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v19(v13, v18, 1, v16);
    swift_bridgeObjectRelease();
    sub_1DA66D0A8();
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v20(v13, 1, v16) == 1)
    {
      sub_1DA47E2F0((uint64_t)v13, &qword_1F026A708);
    }
    else
    {
      sub_1DA66D09C();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v16);
    }
    v21 = sub_1DA66D0C0();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v10, v21+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * (v22 - 1), v16);
      v23 = 0;
    }
    else
    {
      v23 = 1;
    }
    v19(v10, v23, 1, v16);
    swift_bridgeObjectRelease();
    if (v20(v10, 1, v16) == 1)
    {
      sub_1DA47E2F0((uint64_t)v10, &qword_1F026A708);
    }
    else
    {
      sub_1DA66D084();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v16);
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA66D12C();
  swift_bridgeObjectRetain();
  return sub_1DA66D114();
}

uint64_t ArtworkLoaderConfig.template.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double ArtworkLoaderConfig.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t ArtworkLoaderConfig.format.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ArtworkLoaderConfig.crop.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop;
  v4 = sub_1DA66DD14();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

double ArtworkLoaderConfig.scale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale);
}

uint64_t ArtworkLoaderConfig.retainAspectRatio.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio);
}

uint64_t ArtworkLoaderConfig.__allocating_init(template:size:scale:format:crop:retainAspectRatio:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, double a6, double a7, double a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(double *)(v16 + 32) = a6;
  *(double *)(v16 + 40) = a7;
  *(_BYTE *)(v16 + 48) = a3;
  v17 = v16 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop;
  v18 = sub_1DA66DD14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a4, v18);
  *(double *)(v16 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) = a8;
  *(_BYTE *)(v16 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) = a5;
  return v16;
}

uint64_t ArtworkLoaderConfig.init(template:size:scale:format:crop:retainAspectRatio:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, double a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(double *)(v8 + 32) = a6;
  *(double *)(v8 + 40) = a7;
  *(_BYTE *)(v8 + 48) = a3;
  v12 = v8 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop;
  v13 = sub_1DA66DD14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a4, v13);
  *(double *)(v8 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) = a8;
  *(_BYTE *)(v8 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) = a5;
  return v8;
}

uint64_t sub_1DA536734()
{
  sub_1DA5368CC();
  sub_1DA66C334();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA536764(double (*a1)(uint64_t, double, double))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v20;

  v2 = v1;
  v4 = sub_1DA66DD14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v9 = *(_QWORD *)(v1 + 16);
    v8 = *(_QWORD *)(v1 + 24);
    v10 = *(double *)(v1 + 32);
    v11 = *(double *)(v1 + 40);
    sub_1DA4EF8F4((uint64_t)a1);
    v12 = swift_bridgeObjectRetain();
    v13 = a1(v12, v10, v11);
    v15 = v14;
    sub_1DA4EFFCC((uint64_t)a1);
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale);
    v17 = *(_BYTE *)(v1 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop, v4);
    v18 = *(_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio);
    type metadata accessor for ArtworkLoaderConfig();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v9;
    *(_QWORD *)(v2 + 24) = v8;
    *(double *)(v2 + 32) = v13;
    *(_QWORD *)(v2 + 40) = v15;
    *(_BYTE *)(v2 + 48) = v17;
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop, v7, v4);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) = v16;
    *(_BYTE *)(v2 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) = v18;
  }
  else
  {
    sub_1DA66BE60();
  }
  return v2;
}

uint64_t sub_1DA5368CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66D174();
  sub_1DA6700E4();
  sub_1DA66DD08();
  sub_1DA66CC28();
  sub_1DA66D168();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = sub_1DA66C358();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1DA4ED9D4((uint64_t)v2);
    return 0;
  }
  else
  {
    v5 = sub_1DA66C298();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5;
}

uint64_t type metadata accessor for ArtworkLoaderConfig()
{
  uint64_t result;

  result = qword_1F026A738;
  if (!qword_1F026A738)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA536A78()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v1 = *(double *)(v0 + 32);
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v1 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v2 = *(double *)(v0 + 40);
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v3 = (uint64_t)v2;
  v4 = (uint64_t)v1 + (uint64_t)v2;
  if (__OFADD__((uint64_t)v1, (uint64_t)v2))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v6 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  if (v6 >= 0)
    v7 = v4 * v5;
  else
    v7 = v6 + 1;
  result = v3 + (v7 >> 1);
  if (__OFADD__(v3, v7 >> 1))
    goto LABEL_24;
  return result;
}

uint64_t sub_1DA536B48()
{
  sub_1DA536A78();
  return sub_1DA6707A4();
}

uint64_t sub_1DA536B70()
{
  uint64_t v1;

  v1 = sub_1DA66FC28();
  sub_1DA66F988();
  sub_1DA66FC28();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66FC28();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_1DA536C40()
{
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA6700CC();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA66FC28();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA670528();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66DD14();
  sub_1DA670528();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t ArtworkLoaderConfig.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop;
  v2 = sub_1DA66DD14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ArtworkLoaderConfig.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop;
  v2 = sub_1DA66DD14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DA536FE4()
{
  sub_1DA670798();
  sub_1DA536A78();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t sub_1DA537024(uint64_t *a1, uint64_t *a2)
{
  return _s10PodcastsUI19ArtworkLoaderConfigC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1DA537030()
{
  sub_1DA670798();
  sub_1DA536A78();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t sub_1DA537074()
{
  sub_1DA536A78();
  return sub_1DA6707A4();
}

uint64_t sub_1DA5370A0()
{
  sub_1DA670798();
  sub_1DA536A78();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5370E0()
{
  return sub_1DA536B70();
}

unint64_t sub_1DA537100()
{
  return sub_1DA536C40();
}

uint64_t _s10PodcastsUI19ArtworkLoaderConfigC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v5;
  char v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(double *)(a1 + 32) == *(double *)(a2 + 32) && *(double *)(a1 + 40) == *(double *)(a2 + 40);
  if (!v2 || (sub_1DA66CC40() & 1) == 0)
    goto LABEL_16;
  sub_1DA66DD14();
  sub_1DA47E32C((unint64_t *)&unk_1F026A748, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7ED80], MEMORY[0x1E0D7ED90]);
  sub_1DA66FA54();
  sub_1DA66FA54();
  if (v11 == v9 && v12 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v5 = sub_1DA6706D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = 0;
    if ((v5 & 1) == 0)
      return v6 & 1;
  }
  if (*(double *)(a1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) != *(double *)(a2
                                                                                              + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale))
  {
LABEL_16:
    v6 = 0;
    return v6 & 1;
  }
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
    || (v7 = sub_1DA6706D8(), v6 = 0, (v7 & 1) != 0))
  {
    v6 = *(_BYTE *)(a1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) ^ *(_BYTE *)(a2 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_1DA53729C()
{
  return sub_1DA47E32C(&qword_1F026A730, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkLoaderConfig, (uint64_t)&protocol conformance descriptor for ArtworkLoaderConfig);
}

uint64_t sub_1DA5372C8()
{
  return type metadata accessor for ArtworkLoaderConfig();
}

uint64_t sub_1DA5372D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66DD14();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ArtworkLoaderConfig()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.__allocating_init(template:size:scale:format:crop:retainAspectRatio:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.url.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.withAlternativeSize(block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.resolvedTemplate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.debugDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DependencyBindableView.objectGraph.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DependencyBindableView.bind(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

_QWORD *SearchFiltersFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  char v11;
  _OWORD v12[2];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_1EDAE4988 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49E0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDAE4970);
  v4 = type metadata accessor for SearchFiltersSource();
  result = MEMORY[0x1DF09DB10](&v13, v3, v4);
  if ((_QWORD)v13)
  {
    sub_1DA66CBF8();
    v6 = v13;
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9E0];
    v8 = MEMORY[0x1E0DEA968];
    if (*((_QWORD *)&v6 + 1))
    {
      v15 = MEMORY[0x1E0DEA968];
      v13 = v6;
      sub_1DA49ACF0(&v13, v12);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v16 = v7;
      sub_1DA537CBC(v12, 0xD000000000000011, 0x80000001DA68CE70, isUniquelyReferenced_nonNull_native);
      v7 = v16;
      swift_bridgeObjectRelease();
    }
    sub_1DA66CBF8();
    swift_bridgeObjectRelease();
    v10 = v15;
    if (v15)
    {
      v15 = v8;
      *(_QWORD *)&v13 = v14;
      *((_QWORD *)&v13 + 1) = v10;
      sub_1DA49ACF0(&v13, v12);
      v11 = swift_isUniquelyReferenced_nonNull_native();
      v16 = v7;
      sub_1DA537CBC(v12, 0xD000000000000013, 0x80000001DA68CE50, v11);
      v7 = v16;
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)&v13 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AD0);
    sub_1DA537684(&qword_1EDAE4AE0, MEMORY[0x1E0DEA0E0]);
    if ((sub_1DA66FCDC() & 1) != 0)
    {
      *(_QWORD *)&v13 = v7;
      sub_1DA66CB38();
      __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
      sub_1DA537684((unint64_t *)&qword_1EDAE4AD8, MEMORY[0x1E0D7EF08]);
      MetricsFieldsBuilder.addValue<A>(_:forField:)();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1DA537670(uint64_t a1)
{
  return SearchFiltersFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(a1);
}

uint64_t sub_1DA537684(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE4AD0);
    result = MEMORY[0x1DF0A039C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA5376C8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1DA66D5C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1DA55C8B8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1DA57AE54();
      goto LABEL_7;
    }
    sub_1DA57734C(v17, a3 & 1);
    v24 = sub_1DA55C8B8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1DA53893C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1DA670744();
  __break(1u);
  return result;
}

void sub_1DA537854(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1DA66FDF0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1DA55C950(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = *(void **)(v21 + 8 * v14);
        *(_QWORD *)(v21 + 8 * v14) = a1;

        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1DA57B12C();
      goto LABEL_7;
    }
    sub_1DA577730(v17, a3 & 1);
    v23 = sub_1DA55C950(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      sub_1DA5389F8(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7EFB0]);
      return;
    }
  }
  sub_1DA670744();
  __break(1u);
}

uint64_t sub_1DA5379D0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1DA66C4E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1DA55C9E8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = sub_1DA66C544();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1DA57B348();
      goto LABEL_7;
    }
    sub_1DA577AAC(v17, a3 & 1);
    v24 = sub_1DA55C9E8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1DA538B70(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0F00], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB11F0]);
    }
  }
  result = sub_1DA670744();
  __break(1u);
  return result;
}

id sub_1DA537B68(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  id result;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1DA55CB70((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  result = (id)(v10 + v11);
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= (uint64_t)result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= (uint64_t)result && (a3 & 1) == 0)
  {
    result = sub_1DA57B61C();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v15[7] + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v17 = 8 * v9;
    *(_QWORD *)(v15[6] + v17) = a2;
    *(_QWORD *)(v15[7] + v17) = a1;
    v18 = v15[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v15[2] = v20;
      return a2;
    }
    goto LABEL_14;
  }
  sub_1DA577E8C((uint64_t)result, a3 & 1);
  result = (id)sub_1DA55CB70((uint64_t)a2);
  if ((v13 & 1) == (v16 & 1))
  {
    v9 = (unint64_t)result;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE4C00);
  result = (id)sub_1DA670744();
  __break(1u);
  return result;
}

_OWORD *sub_1DA537CBC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1DA499108(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_1DA49ACF0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1DA57B7BC();
      goto LABEL_7;
    }
    sub_1DA578158(v15, a4 & 1);
    v21 = sub_1DA499108(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1DA5353F8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1DA670744();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SearchFiltersFieldsProvider()
{
  return &type metadata for SearchFiltersFieldsProvider;
}

uint64_t sub_1DA537DFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1DA55CBBC(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1DA57B9A0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_bridgeObjectRelease();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DA578454(result, a4 & 1);
  result = sub_1DA55CBBC(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1DA670744();
  __break(1u);
  return result;
}

uint64_t sub_1DA537F38(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1DA66C454();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1DA55CE1C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1DA57BF28();
    goto LABEL_7;
  }
  sub_1DA57907C(v17, a3 & 1);
  v23 = sub_1DA55CE1C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_1DA670744();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1DA5389F8(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t sub_1DA53809C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1DA55CFAC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DA57C518();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1DA579A24(v15, a4 & 1);
  v21 = sub_1DA55CFAC(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1DA670744();
  __break(1u);
  return result;
}

uint64_t sub_1DA5381F8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_1DA66EFB0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1DA55D02C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1DA57C6C8();
    goto LABEL_7;
  }
  sub_1DA579D34(result, a3 & 1);
  result = sub_1DA55D02C(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_1DA670744();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1DA538AD8(v14, (uint64_t)v11, a1, v20);
}

void sub_1DA538348(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1DA538370(a1, a2, a3, a4, (void (*)(void))sub_1DA57C8EC, (void (*)(void))sub_1DA57A0D0);
}

void sub_1DA53835C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1DA538370(a1, a2, a3, a4, (void (*)(void))sub_1DA57C8F8, (void (*)(void))sub_1DA57A0DC);
}

void sub_1DA538370(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v9 = v6;
  v14 = *v6;
  v16 = sub_1DA499108(a2, a3);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];

      *(_QWORD *)(v23 + 8 * v16) = a1;
      return;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v26 = (uint64_t *)(v22[6] + 16 * v16);
    *v26 = a2;
    v26[1] = a3;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v27 = v22[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v22[2] = v29;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  a6();
  v24 = sub_1DA499108(a2, a3);
  if ((v20 & 1) == (v25 & 1))
  {
    v16 = v24;
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1DA670744();
  __break(1u);
}

id sub_1DA5384E0(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1DA48AF08((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1DA57CAAC();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_unknownObjectRelease();
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_1DA57A3F0(v12, a3 & 1);
  v18 = sub_1DA48AF08((uint64_t)a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1DA47D774(0, (unint64_t *)&unk_1F026A758);
  result = (id)sub_1DA670744();
  __break(1u);
  return result;
}

uint64_t sub_1DA538640(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1DA66D5C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1DA55C8B8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = sub_1DA66DA68();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1DA57CC54();
      goto LABEL_7;
    }
    sub_1DA57A6C4(v17, a3 & 1);
    v24 = sub_1DA55C8B8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1DA538B70(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E5D0], (uint64_t (*)(_QWORD))MEMORY[0x1E0D7EAB0]);
    }
  }
  result = sub_1DA670744();
  __break(1u);
  return result;
}

_QWORD *sub_1DA5387D8(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1DA499108(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DA57CF34();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1DA538C2C(a1, (_QWORD *)(v18[7] + (v12 << 6)));
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + (v12 << 6));
    v24 = *a1;
    v25 = a1[1];
    v26 = a1[3];
    v23[2] = a1[2];
    v23[3] = v26;
    *v23 = v24;
    v23[1] = v25;
    v27 = v18[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v18[2] = v29;
      return (_QWORD *)swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1DA57AABC(v15, a4 & 1);
  v20 = sub_1DA499108(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1DA538C2C(a1, (_QWORD *)(v18[7] + (v12 << 6)));
    goto LABEL_11;
  }
LABEL_15:
  result = (_QWORD *)sub_1DA670744();
  __break(1u);
  return result;
}

uint64_t sub_1DA53893C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1DA66D5C4();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_1DA5389F8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a4[6];
  v10 = a5(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a2, v10);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

unint64_t sub_1DA538A90(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_1DA538AD8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1DA66EFB0();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1DA538B70(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v11 = a4[6];
  v12 = a5(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a2, v12);
  v13 = a4[7];
  v14 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * a1, a3, v14);
  v16 = a4[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a4[2] = v18;
  return result;
}

_QWORD *sub_1DA538C2C(_QWORD *a1, _QWORD *a2)
{
  assignWithTake for ClickLocationElement(a2, a1);
  return a2;
}

uint64_t MetricsAdHocImpression.metricsId.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!*((_BYTE *)v0 + 48))
    return 0x61426C6C65737075;
  v2 = *v0;
  v1 = v0[1];
  if (*((_BYTE *)v0 + 48) == 1)
  {
    swift_bridgeObjectRetain();
    return v2;
  }
  else
  {
    v5 = v0[4];
    v4 = v0[5];
    v6 = v0[2];
    v7 = v0[3];
    if (v1 | v2 | v4 | v5 | v7 | v6)
    {
      v8 = v4 | v1 | v5 | v7 | v6;
      if (v2 != 1 || v8)
      {
        result = 0xD000000000000015;
        if (v2 != 2 || v8)
        {
          if (v2 != 3 || v8)
          {
            if ((v2 != 4 || v8) && (v2 != 5 || v8) && (v2 != 6 || v8))
            {
              if (v2 != 7 || v8)
              {
                if (v2 == 8 && v8 == 0)
                  return 0xD000000000000016;
                else
                  return 0x656E696665646E75;
              }
              else
              {
                return 0xD00000000000001BLL;
              }
            }
          }
          else
          {
            return 0xD000000000000029;
          }
        }
        else
        {
          return 0xD000000000000014;
        }
      }
      else
      {
        return 0x657469726F766146;
      }
    }
    else
    {
      return 0x6F54705579617453;
    }
  }
  return result;
}

uint64_t MetricsAdHocImpression.metricsName.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *v0;
  v2 = v0[1];
  if (*((_BYTE *)v0 + 48))
  {
    v3 = v0[2];
    v4 = v0[3];
    if (*((_BYTE *)v0 + 48) == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v5 = v3 | v2;
      v6 = v0[5] | v0[4];
      if (v3 | v2 | v1 | v4 | v6)
      {
        v3 = 0xD000000000000015;
        v7 = v5 | v4 | v6;
        if (v1 != 1 || v7)
        {
          if (v1 != 2 || v7)
          {
            if (v1 != 3 || v7)
            {
              if ((v1 != 4 || v7) && (v1 != 5 || v7) && (v1 != 6 || v7))
              {
                if (v1 != 7 || v7)
                {
                  if (v1 == 8 && v7 == 0)
                    return 0xD000000000000016;
                  else
                    return 0;
                }
                else
                {
                  return 0xD00000000000001BLL;
                }
              }
            }
            else
            {
              return 0xD000000000000029;
            }
          }
          else
          {
            return 0xD000000000000014;
          }
        }
      }
      else
      {
        return 0x6F54705579617453;
      }
    }
  }
  else if (v2)
  {
    return sub_1DA538FE4();
  }
  else
  {
    return 0x61426C6C65737075;
  }
  return v3;
}

uint64_t sub_1DA538FE4()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_1DA498918();
  v0 = sub_1DA670348();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1DA498794(0, v1, 0);
    v2 = v0 + 56;
    do
    {
      swift_bridgeObjectRetain();
      sub_1DA6702A0();
      v3 = sub_1DA66F934();
      v5 = v4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(v11 + 16);
      v6 = *(_QWORD *)(v11 + 24);
      if (v7 >= v6 >> 1)
        sub_1DA498794(v6 > 1, v7 + 1, 1);
      *(_QWORD *)(v11 + 16) = v7 + 1;
      v8 = v11 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v3;
      *(_QWORD *)(v8 + 40) = v5;
      v2 += 32;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA539538();
  v9 = sub_1DA66F838();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t MetricsAdHocImpression.impressionType.getter()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 48))
    return sub_1DA66D2C4();
  if (*(_BYTE *)(v0 + 48) == 1)
    return sub_1DA66D2DC();
  return sub_1DA66D2E8();
}

uint64_t MetricsAdHocImpression.channelAdamId.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 48))
    return 0;
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsAdHocImpression.eligibilityType.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 48))
    return 0;
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DA539218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if (a7 != 1)
  {
    if (a7)
      return result;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for MetricsAdHocImpression(uint64_t a1)
{
  return sub_1DA539280(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t sub_1DA539280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  result = a2;
  if (a7 != 1)
  {
    if (a7)
      return result;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsAdHocImpression(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1DA539218(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for MetricsAdHocImpression(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1DA539218(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1DA539280(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsAdHocImpression(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1DA539280(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsAdHocImpression(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsAdHocImpression(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DA5394E8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1DA539500(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsAdHocImpression()
{
  return &type metadata for MetricsAdHocImpression;
}

unint64_t sub_1DA539538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE5348;
  if (!qword_1EDAE5348)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE5340);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE5348);
  }
  return result;
}

uint64_t *sub_1DA539584(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = sub_1DA66F370();
    else
      v6 = sub_1DA66F388();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DA539654(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
    v2 = sub_1DA66F370();
  else
    v2 = sub_1DA66F388();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1DA5396A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = sub_1DA66F370();
  else
    v4 = sub_1DA66F388();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DA53972C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1DA5397C8(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
      v4 = sub_1DA66F370();
    else
      v4 = sub_1DA66F388();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DA5397C8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s8ActivityOMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s8ActivityOMa()
{
  uint64_t result;

  result = qword_1EDAE1EB8;
  if (!qword_1EDAE1EB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA539840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = sub_1DA66F370();
  else
    v4 = sub_1DA66F388();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DA5398CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1DA5397C8(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
      v4 = sub_1DA66F370();
    else
      v4 = sub_1DA66F388();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DA539968()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DA66F388();
  if (v1 <= 0x3F)
  {
    result = sub_1DA66F370();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

id IMImageBlur.init(_:)(uint64_t a1)
{
  double v2;
  char v3;
  id v4;
  uint64_t v5;
  double v6;

  if ((*(_BYTE *)(a1 + 9) & 1) != 0)
    return 0;
  v2 = *(double *)a1;
  v3 = *(_BYTE *)(a1 + 8);
  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  if ((v3 & 1) != 0)
  {
    v6 = 0.0;
    v5 = 0;
  }
  else
  {
    v5 = 1;
    v6 = v2;
  }
  return objc_msgSend(v4, sel_initWithStyle_radius_, v5, v6);
}

uint64_t sub_1DA539A54(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA539AB0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA539AE4(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DA539B28())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id PlayStateDataSource.accessQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 88);
}

uint64_t PlayStateDataSource.__allocating_init(playbackController:pendingPlaybackStore:episodeLookupUtil:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  PlayStateDataSource.init(playbackController:pendingPlaybackStore:episodeLookupUtil:)(a1, a2, a3);
  return v6;
}

uint64_t PlayStateDataSource.init(playbackController:pendingPlaybackStore:episodeLookupUtil:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = v3;
  v21 = a1;
  v22 = a3;
  v20 = a2;
  v5 = sub_1DA66FEBC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66EA04();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1DA66FE80();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  *(_OWORD *)(v3 + 32) = xmmword_1DA67BEF0;
  *(_OWORD *)(v3 + 48) = xmmword_1DA67BF00;
  *(_QWORD *)(v3 + 64) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 80) = MEMORY[0x1E0DEE9E0];
  v19[1] = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0108);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DA678510;
  sub_1DA66FE74();
  v23 = v12;
  sub_1DA53DBD0((unint64_t *)&unk_1EDADE730, 255, v11, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6F8);
  sub_1DA4841D4((unint64_t *)&unk_1EDADE700, &qword_1EDADE6F8, MEMORY[0x1E0DEAF38]);
  sub_1DA670378();
  sub_1DA66E9EC();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF8D0], v5);
  v13 = sub_1DA66FEF8();
  *(_QWORD *)(v3 + 96) = 0;
  *(_QWORD *)(v3 + 104) = 0;
  *(_QWORD *)(v3 + 88) = v13;
  v14 = v21;
  *(_QWORD *)(v3 + 16) = v20;
  *(_QWORD *)(v3 + 24) = v14;
  type metadata accessor for IdentifierUtil();
  v15 = swift_allocObject();
  v16 = sub_1DA640934(MEMORY[0x1E0DEE9D8]);
  v17 = v22;
  *(_QWORD *)(v15 + 16) = v16;
  *(_QWORD *)(v15 + 24) = v17;
  *(_QWORD *)(v4 + 72) = v15;
  return v4;
}

uint64_t type metadata accessor for IdentifierUtil()
{
  return objc_opt_self();
}

uint64_t PlayStateDataSource.__allocating_init(asPartOf:)()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for PlaybackController();
  sub_1DA66EE30();
  sub_1DA66F580();
  sub_1DA66D690();
  sub_1DA66F580();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A768);
  sub_1DA66F580();
  type metadata accessor for PlayStateDataSource();
  v0 = swift_allocObject();
  PlayStateDataSource.init(playbackController:pendingPlaybackStore:episodeLookupUtil:)(v4, v3, v2);
  swift_release();
  return v0;
}

uint64_t sub_1DA539F48@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 96);
  v5 = *(_QWORD *)(v3 + 104);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1DA53DFC0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_1DA4EF8F4(v4);
}

uint64_t sub_1DA539FD0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1DA53DF90;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_1DA4EF8F4(v1);
  return sub_1DA53A09C((uint64_t)v4, v3);
}

uint64_t sub_1DA53A050()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 96);
  sub_1DA4EF8F4(v1);
  return v1;
}

uint64_t sub_1DA53A09C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t i;

  v5 = v2 + 12;
  swift_beginAccess();
  v6 = v2[12];
  v2[12] = a1;
  v2[13] = a2;
  sub_1DA4EF8F4(v6);
  sub_1DA4EF8F4(a1);
  sub_1DA4EFFCC(v6);
  if (!v6)
  {
    sub_1DA53C038();
    if (!*v5)
      goto LABEL_5;
LABEL_15:
    sub_1DA4EFFCC(a1);
    return sub_1DA4EFFCC(v6);
  }
  if (*v5)
    goto LABEL_15;
LABEL_5:
  swift_beginAccess();
  v7 = v2[8];
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v8)
      goto LABEL_7;
LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain_n();
  result = sub_1DA6705A0();
  v8 = result;
  if (!result)
    goto LABEL_14;
LABEL_7:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        MEMORY[0x1DF09EE48](i, v7);
      else
        sub_1DA66BE60();
      sub_1DA66DF9C();
      swift_release();
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void (*sub_1DA53A220(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v3[3] = v4;
  v3[4] = v5;
  sub_1DA4EF8F4(v4);
  return sub_1DA53A284;
}

void sub_1DA53A284(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (*a1)[4];
  if ((a2 & 1) != 0)
  {
    sub_1DA4EF8F4((*a1)[3]);
    sub_1DA53A09C(v3, v4);
    sub_1DA4EFFCC(v2[3]);
  }
  else
  {
    sub_1DA53A09C((*a1)[3], v4);
  }
  free(v2);
}

uint64_t sub_1DA53A2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v69 = (char *)v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1D98);
  v60 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v55 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFD40);
  v63 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v56 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  v51 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  v52 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFCE8);
  v58 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v53 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFCD0);
  v12 = *(_QWORD *)(v11 - 8);
  v64 = v11;
  v65 = v12;
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFE48);
  v70 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v61 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFDA0);
  v73 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v66 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFD28);
  v74 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v67 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *(_QWORD *)(v0 + 24);
  v17 = v49 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v17, (uint64_t)&v76);
  v18 = v77;
  v19 = v78;
  __swift_project_boxed_opaque_existential_1(&v76, v77);
  v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
  sub_1DA66E2B4();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v76);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
  sub_1DA498314();
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v5);
  v20 = MEMORY[0x1E0C958E0];
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
  v21 = v50;
  v22 = (void *)sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v21);
  v76 = v22;
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE2060);
  v23 = v53;
  sub_1DA66E128();
  swift_release();
  v24 = v48[1];
  v75 = sub_1DA66D684();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1E40);
  v25 = v55;
  sub_1DA66E098();
  swift_endAccess();
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1D88, (uint64_t *)&unk_1EDAE1D98, MEMORY[0x1E0C96190]);
  sub_1DA53DDD4();
  v26 = v56;
  v27 = v59;
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v25, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFEE0);
  sub_1DA4841D4((unint64_t *)&unk_1EDADFCD8, &qword_1EDADFCE8, MEMORY[0x1E0C95708]);
  sub_1DA4841D4((unint64_t *)&unk_1EDADFED0, &qword_1EDADFEE0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4(&qword_1EDADFD38, &qword_1EDADFD40, v20);
  v28 = v54;
  v29 = v26;
  v30 = v57;
  v31 = v62;
  sub_1DA66E14C();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v29, v31);
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v23, v30);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v76 = (id)sub_1DA66FEC8();
  v32 = sub_1DA66FE8C();
  v33 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v69, 1, 1, v32);
  sub_1DA4841D4((unint64_t *)&unk_1EDADFCC0, &qword_1EDADFCD0, MEMORY[0x1E0C956B8]);
  sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v34 = v61;
  v35 = v64;
  sub_1DA66E248();
  sub_1DA47E2F0(v33, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v28, v35);
  v36 = *(_QWORD *)(v24 + 72);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v36;
  *(_OWORD *)(v37 + 24) = xmmword_1DA67BEF0;
  *(_OWORD *)(v37 + 40) = xmmword_1DA67BF00;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = sub_1DA53DE7C;
  *(_QWORD *)(v38 + 24) = v37;
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFE90);
  sub_1DA4841D4((unint64_t *)&unk_1EDADFE38, &qword_1EDADFE48, MEMORY[0x1E0C95CB8]);
  v39 = v66;
  v40 = v68;
  sub_1DA66E17C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v34, v40);
  v41 = sub_1DA4841D4((unint64_t *)&unk_1EDADFD90, (uint64_t *)&unk_1EDADFDA0, MEMORY[0x1E0C95950]);
  v42 = sub_1DA4841D4(&qword_1EDADFE88, &qword_1EDADFE90, MEMORY[0x1E0C95D90]);
  v43 = v67;
  v44 = v71;
  MEMORY[0x1DF09CC58](v71, v41, v42);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v39, v44);
  sub_1DA4841D4(&qword_1EDADFD20, (uint64_t *)&unk_1EDADFD28, MEMORY[0x1E0C95870]);
  v45 = v72;
  v46 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v45);
  return v46;
}

id sub_1DA53AC24@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_1DA53AC30(void *a1, void (*a2)(char *, uint64_t), void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  id v50;
  id v51;
  double v52;
  char v53;
  id v54;
  void (*v55)(char *, uint64_t);
  id v56;
  id v57;
  double v58;
  char v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  _QWORD *v66;
  id v67;
  id v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  int *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  void (*v149)(char *, uint64_t);
  char *v150;
  uint64_t v151;
  id v152;
  double v153;
  char v154;

  v149 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0090);
  MEMORY[0x1E0C80A78](v7);
  v134 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFD88);
  v137 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v136 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFCF0);
  v140 = *(_QWORD *)(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v138 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v11);
  v127 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0038);
  MEMORY[0x1E0C80A78](v13);
  v126 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_1DA66FEB0();
  v124 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v123 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF00);
  v146 = *(_QWORD *)(v16 - 8);
  v147 = v16;
  MEMORY[0x1E0C80A78](v16);
  v145 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v122 = (char *)&v113 - v19;
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFDC8);
  v129 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v128 = (char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFD00);
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v130 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_1DA66C430();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v118 = (char *)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1DA66D1BC();
  MEMORY[0x1E0C80A78](v115);
  v116 = (uint64_t *)((char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v142 = type metadata accessor for PlayStateData();
  v121 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v143 = (uint64_t *)((char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC88);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1DA66D8AC();
  v28 = *(_QWORD *)(v151 - 8);
  MEMORY[0x1E0C80A78](v151);
  v30 = (char *)&v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v150 = (char *)&v113 - v32;
  v148 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(qword_1EDADF830);
  v144 = *(v148 - 1);
  MEMORY[0x1E0C80A78](v148);
  v34 = (char *)&v113 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (uint64_t *)((char *)&v113 - v36);
  MEMORY[0x1E0C80A78](v38);
  v117 = (char *)&v113 - v39;
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v113 - v41;
  v43 = a1;
  v135 = a4;
  sub_1DA53D2C4(a1, (uint64_t)&v113 - v41);
  if (a3)
    objc_msgSend(a3, sel_isDeviceRoute);
  sub_1DA49CC94((uint64_t)v149, (uint64_t)v27, &qword_1EDADFC88);
  v44 = v151;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v27, 1, v151) == 1)
  {
    sub_1DA47E2F0((uint64_t)v27, &qword_1EDADFC88);
LABEL_14:
    v56 = objc_msgSend(v43, sel_tracklist);
    v57 = objc_msgSend(v56, sel_playingItem);

    if (v57
      && (objc_msgSend(v57, sel_duration),
          v58 = v153,
          v59 = v154,
          v60 = objc_msgSend(v43, sel_state),
          v57,
          v58 > 0.1)
      && v60 == (id)2
      && (v59 & 1) == 0)
    {
      sub_1DA47D774(0, &qword_1F026A7A0);
      v61 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
      v62 = sub_1DA670234();
      v63 = (uint64_t)v134;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v134, 1, 1, v62);
      v64 = (void *)sub_1DA67015C();

      sub_1DA47E2F0(v63, &qword_1EDAE0090);
      v152 = v64;
      sub_1DA670150();
      sub_1DA53DBD0(&qword_1F026A7A8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB20A0], MEMORY[0x1E0CB2088]);
      v65 = (void *)sub_1DA66E008();
      swift_release();
      v152 = v65;
      v66 = (_QWORD *)swift_allocObject();
      v66[2] = v135;
      v66[3] = v43;
      v66[4] = a3;
      v67 = a3;
      sub_1DA66BE60();
      v68 = v43;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A7B0);
      sub_1DA4841D4(&qword_1F026A7B8, &qword_1F026A7B0, MEMORY[0x1E0C95768]);
      v69 = v136;
      sub_1DA66E17C();
      swift_release();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A7C0);
      v70 = (*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80);
      v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_1DA678510;
      sub_1DA49CC94((uint64_t)v42, v71 + v70, qword_1EDADF830);
      sub_1DA4841D4(&qword_1F026A7C8, &qword_1EDADFD88, MEMORY[0x1E0C95950]);
      v72 = v138;
      v73 = v139;
      sub_1DA66E23C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v69, v73);
      sub_1DA4841D4(&qword_1F026A7D0, (uint64_t *)&unk_1EDADFCF0, MEMORY[0x1E0C95788]);
      v74 = v141;
      v75 = sub_1DA66E11C();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v72, v74);
    }
    else
    {
      sub_1DA49CC94((uint64_t)v42, (uint64_t)v34, qword_1EDADF830);
      v76 = v145;
      sub_1DA66E02C();
      sub_1DA4841D4(&qword_1EDADFEF8, &qword_1EDADFF00, MEMORY[0x1E0C960B0]);
      v77 = v147;
      v75 = sub_1DA66E11C();
      (*(void (**)(char *, uint64_t))(v146 + 8))(v76, v77);
    }
    goto LABEL_26;
  }
  v45 = v150;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v150, v27, v44);
  v46 = sub_1DA66D870();
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v30, v45, v44);
  v114 = v42;
  if ((v46 & 1) == 0)
  {
    v55 = *(void (**)(char *, uint64_t))(v28 + 8);
    v55(v30, v44);
    goto LABEL_13;
  }
  v47 = sub_1DA66D84C();
  v149 = (void (*)(char *, uint64_t))v43;
  v48 = sub_1DA53BB58();
  swift_bridgeObjectRetain();
  v49 = sub_1DA53BCBC(v47, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v49 & 1) == 0
    || (v50 = objc_msgSend(v149, sel_tracklist),
        v51 = objc_msgSend(v50, sel_playingItem),
        v50,
        !v51))
  {
    v55 = *(void (**)(char *, uint64_t))(v28 + 8);
    v55(v30, v44);
    goto LABEL_22;
  }
  objc_msgSend(v51, sel_duration);
  v52 = v153;
  v53 = v154;
  v54 = objc_msgSend(v149, sel_state);

  v55 = *(void (**)(char *, uint64_t))(v28 + 8);
  v55(v30, v44);
  if (v52 > 0.1 && v54 == (id)2 && (v53 & 1) == 0)
  {
LABEL_13:
    v55(v150, v44);
    v42 = v114;
    goto LABEL_14;
  }
LABEL_22:
  v149 = v55;
  v78 = sub_1DA66D84C();
  sub_1DA66D8A0();
  v80 = v79;
  sub_1DA66D894();
  v81 = (uint64_t)v116;
  *v116 = v80;
  *(_QWORD *)(v81 + 8) = v82;
  swift_storeEnumTagMultiPayload();
  v83 = v118;
  sub_1DA66C424();
  sub_1DA66C3B8();
  v85 = v84;
  (*(void (**)(char *, uint64_t))(v119 + 8))(v83, v120);
  v86 = v143;
  *v143 = v78;
  v87 = (int *)v142;
  sub_1DA4F7228(v81, (uint64_t)v86 + *(int *)(v142 + 20), (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E168]);
  *(uint64_t *)((char *)v86 + v87[6]) = v85;
  *((_BYTE *)v86 + v87[7]) = 0;
  sub_1DA66D858();
  sub_1DA49CC94((uint64_t)v114, (uint64_t)v37, qword_1EDADF830);
  v88 = v121;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v121 + 48))(v37, 1, v87) == 1)
  {
    sub_1DA47E2F0((uint64_t)v37, qword_1EDADF830);
    v89 = *(_QWORD **)(v88 + 56);
    v90 = v117;
    v91 = 1;
  }
  else
  {
    v92 = *v37;
    v93 = v117;
    sub_1DA484504((uint64_t)v37 + v87[5], (uint64_t)&v117[v87[5]], (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E168]);
    v94 = v87[6];
    v95 = *(uint64_t *)((char *)v37 + v94);
    *v93 = v92;
    *(_QWORD *)((char *)v93 + v94) = v95;
    *((_BYTE *)v93 + v87[7]) = 1;
    swift_bridgeObjectRetain();
    sub_1DA47F880((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for PlayStateData);
    v89 = *(_QWORD **)(v88 + 56);
    v90 = v93;
    v91 = 0;
  }
  v148 = v89;
  ((void (*)(_QWORD *, uint64_t, uint64_t, int *))v89)(v90, v91, 1, v87);
  v96 = v122;
  sub_1DA66E02C();
  v97 = v123;
  sub_1DA66FEA4();
  v98 = v124;
  v99 = (uint64_t)v126;
  v100 = v125;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v124 + 56))(v126, 1, 1, v125);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v152 = (id)sub_1DA66FEC8();
  v101 = sub_1DA66FE8C();
  v102 = (uint64_t)v127;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v127, 1, 1, v101);
  sub_1DA4841D4(&qword_1EDADFEF8, &qword_1EDADFF00, MEMORY[0x1E0C960B0]);
  sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v103 = v128;
  v104 = v147;
  sub_1DA66E1C4();
  sub_1DA47E2F0(v102, (uint64_t *)&unk_1EDAE20A0);

  sub_1DA47E2F0(v99, &qword_1EDAE0038);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v100);
  (*(void (**)(char *, uint64_t))(v146 + 8))(v96, v104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A7C0);
  v105 = (*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80);
  v106 = swift_allocObject();
  *(_OWORD *)(v106 + 16) = xmmword_1DA678510;
  v107 = v106 + v105;
  v108 = v143;
  sub_1DA484504((uint64_t)v143, v106 + v105, (uint64_t (*)(_QWORD))type metadata accessor for PlayStateData);
  ((void (*)(unint64_t, _QWORD, uint64_t, uint64_t))v148)(v107, 0, 1, v142);
  sub_1DA4841D4(&qword_1F026A7D8, &qword_1EDADFDC8, MEMORY[0x1E0C95A20]);
  v109 = v130;
  v110 = v131;
  sub_1DA66E23C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v103, v110);
  sub_1DA4841D4((unint64_t *)&unk_1F026A7E0, &qword_1EDADFD00, MEMORY[0x1E0C95788]);
  v111 = v133;
  v75 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v109, v111);
  sub_1DA47F880((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for PlayStateData);
  v149(v150, v151);
  v42 = v114;
LABEL_26:
  sub_1DA47E2F0((uint64_t)v42, qword_1EDADF830);
  return v75;
}

uint64_t sub_1DA53BB58()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v6;
  id v7;
  id v8;
  uint64_t v9;

  v0 = (void *)MPCPlayerResponse.currentItem.getter();
  if (!v0)
    return MEMORY[0x1E0DEE9E8];
  v1 = v0;
  v2 = objc_msgSend(v1, sel_identifiers);
  v3 = objc_msgSend(v2, sel_library);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_databaseID);
    swift_unknownObjectRelease();
    sub_1DA66F8BC();

  }
  else
  {

  }
  v6 = v1;
  v7 = objc_msgSend(v6, sel_identifiers);
  v8 = objc_msgSend(v7, sel_universalStore);

  if (v8)
  {
    objc_msgSend(v8, sel_adamID);
    swift_unknownObjectRelease();
    sub_1DA66DCE4();
  }

  v9 = sub_1DA66D75C();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1DA53BCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = swift_allocObject();
  v5 = *(_QWORD *)(a1 + 56);
  v35 = a1 + 56;
  *(_QWORD *)(v4 + 16) = a2;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & v5;
  v36 = (unint64_t)(v6 + 63) >> 6;
  v39 = a2 + 56;
  v40 = a2;
  swift_bridgeObjectRetain();
  v37 = a1;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v10 << 6);
LABEL_23:
    if (*(_QWORD *)(v40 + 16))
    {
      v38 = v10;
      v16 = *(_QWORD *)(v37 + 48) + 24 * v12;
      v18 = *(_QWORD *)v16;
      v17 = *(_QWORD *)(v16 + 8);
      v19 = *(_BYTE *)(v16 + 16);
      sub_1DA670798();
      sub_1DA5242E8(v18, v17, v19);
      sub_1DA66D774();
      v20 = sub_1DA6707C8();
      v21 = -1 << *(_BYTE *)(v40 + 32);
      v22 = v20 & ~v21;
      if (((*(_QWORD *)(v39 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
      {
        v23 = *(_QWORD *)(v40 + 48) + 24 * v22;
        v24 = *(_QWORD *)v23;
        v25 = *(_QWORD *)(v23 + 8);
        v26 = *(_BYTE *)(v23 + 16);
        sub_1DA5242E8(*(_QWORD *)v23, v25, v26);
        v27 = sub_1DA66D768();
        sub_1DA5242F8(v24, v25, v26);
        if ((v27 & 1) != 0)
        {
LABEL_29:
          sub_1DA5242F8(v18, v17, v19);
          swift_release();
          v34 = 1;
LABEL_30:
          swift_bridgeObjectRelease();
          swift_release();
          return v34;
        }
        v28 = ~v21;
        while (1)
        {
          v22 = (v22 + 1) & v28;
          if (((*(_QWORD *)(v39 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
            break;
          v29 = *(_QWORD *)(v40 + 48) + 24 * v22;
          v30 = *(_QWORD *)v29;
          v31 = *(_QWORD *)(v29 + 8);
          v32 = *(_BYTE *)(v29 + 16);
          sub_1DA5242E8(*(_QWORD *)v29, v31, v32);
          v33 = sub_1DA66D768();
          sub_1DA5242F8(v30, v31, v32);
          if ((v33 & 1) != 0)
            goto LABEL_29;
        }
      }
      result = sub_1DA5242F8(v18, v17, v19);
      v10 = v38;
    }
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v13 >= v36)
    goto LABEL_31;
  v14 = *(_QWORD *)(v35 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_22;
  v10 = v13 + 1;
  if (v13 + 1 >= v36)
    goto LABEL_31;
  v14 = *(_QWORD *)(v35 + 8 * v10);
  if (v14)
    goto LABEL_22;
  v10 = v13 + 2;
  if (v13 + 2 >= v36)
    goto LABEL_31;
  v14 = *(_QWORD *)(v35 + 8 * v10);
  if (v14)
    goto LABEL_22;
  v10 = v13 + 3;
  if (v13 + 3 >= v36)
    goto LABEL_31;
  v14 = *(_QWORD *)(v35 + 8 * v10);
  if (v14)
    goto LABEL_22;
  v15 = v13 + 4;
  if (v15 >= v36)
  {
LABEL_31:
    swift_release();
    v34 = 0;
    goto LABEL_30;
  }
  v14 = *(_QWORD *)(v35 + 8 * v15);
  v10 = v15;
  if (v14)
  {
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v36)
      goto LABEL_31;
    v14 = *(_QWORD *)(v35 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1DA53C038()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADF820);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EDADF830);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFDB8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = sub_1DA53A2EC();
  v13 = type metadata accessor for PlayStateData();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v8, 1, 1, v13);
  v14(v5, 1, 1, v13);
  v15 = (uint64_t)&v2[*(int *)(v0 + 48)];
  sub_1DA53E008((uint64_t)v8, (uint64_t)v2);
  sub_1DA53E008((uint64_t)v5, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFE90);
  sub_1DA4841D4(&qword_1EDADFE88, &qword_1EDADFE90, MEMORY[0x1E0C95D90]);
  sub_1DA66E1A0();
  sub_1DA47E2F0((uint64_t)v2, (uint64_t *)&unk_1EDADF820);
  swift_release();
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1DA53E074;
  *(_QWORD *)(v17 + 24) = v16;
  sub_1DA4841D4(&qword_1EDADFDB0, (uint64_t *)&unk_1EDADFDB8, MEMORY[0x1E0C959B8]);
  sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1FD0);
  sub_1DA4841D4(&qword_1EDAE1FE0, (uint64_t *)&unk_1EDAE1FD0, MEMORY[0x1E0DEAF58]);
  sub_1DA66DF90();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1DA53C318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADF820);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(int *)(v9 + 48);
  v11 = a3 + v10;
  v12 = (uint64_t)&v8[v10];
  v13 = a1 + v10;
  sub_1DA49CC94(a1, (uint64_t)v8, qword_1EDADF830);
  sub_1DA49CC94(v13, v12, qword_1EDADF830);
  sub_1DA53E008(v12, a3);
  sub_1DA49CC94(a2, v11, qword_1EDADF830);
  return sub_1DA47E2F0((uint64_t)v8, qword_1EDADF830);
}

uint64_t sub_1DA53C3F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  _QWORD v8[7];
  uint64_t v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v9 = MEMORY[0x1E0DEE9D8];
    MEMORY[0x1E0C80A78](result);
    v8[2] = &v9;
    v8[3] = v5;
    v8[4] = a2;
    sub_1DA53C9F0((uint64_t)sub_1DA53E0C0, (uint64_t)v8);
    swift_beginAccess();
    v6 = *(void (**)(uint64_t))(v4 + 96);
    if (v6)
    {
      sub_1DA4EF8F4(*(_QWORD *)(v4 + 96));
      v7 = swift_bridgeObjectRetain();
      v6(v7);
      sub_1DA4EFFCC((uint64_t)v6);
      swift_bridgeObjectRelease();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA53C4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD v56[2];
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  _QWORD *v64;

  v6 = sub_1DA66D1BC();
  v60 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v63 = (uint64_t)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EDADF830);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlayStateData();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)(a2 + 80);
  swift_beginAccess();
  v16 = swift_bridgeObjectRetain();
  v17 = sub_1DA549520(v16);
  swift_bridgeObjectRelease();
  v56[1] = a1;
  sub_1DA65F064((uint64_t)v17);
  *(_QWORD *)(a2 + 80) = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  sub_1DA49CC94(a3, (uint64_t)v10, qword_1EDADF830);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v61 = v11;
  if (v18(v10, 1, v11) == 1)
    return sub_1DA47E2F0((uint64_t)v10, qword_1EDADF830);
  sub_1DA4F7228((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for PlayStateData);
  v20 = *(_QWORD *)v14;
  v21 = *(_QWORD *)(*(_QWORD *)v14 + 56);
  v57 = *(_QWORD *)v14 + 56;
  v22 = 1 << *(_BYTE *)(v20 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v58 = (unint64_t)(v22 + 63) >> 6;
  v59 = v20;
  swift_bridgeObjectRetain();
  v25 = 0;
  v26 = (uint64_t)v14;
  while (1)
  {
    if (v24)
    {
      v27 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      v62 = v25;
      v28 = v27 | (v25 << 6);
    }
    else
    {
      v29 = v25 + 1;
      if (__OFADD__(v25, 1))
        goto LABEL_39;
      if (v29 >= v58)
      {
LABEL_35:
        swift_release();
        v54 = swift_bridgeObjectRetain();
        v55 = sub_1DA54942C(v54);
        swift_bridgeObjectRelease();
        sub_1DA65F064((uint64_t)v55);
        return sub_1DA47F880(v26, (uint64_t (*)(_QWORD))type metadata accessor for PlayStateData);
      }
      v30 = *(_QWORD *)(v57 + 8 * v29);
      v31 = v25 + 1;
      if (!v30)
      {
        v31 = v25 + 2;
        if (v25 + 2 >= v58)
          goto LABEL_35;
        v30 = *(_QWORD *)(v57 + 8 * v31);
        if (!v30)
        {
          v31 = v25 + 3;
          if (v25 + 3 >= v58)
            goto LABEL_35;
          v30 = *(_QWORD *)(v57 + 8 * v31);
          if (!v30)
          {
            v32 = v25 + 4;
            if (v25 + 4 >= v58)
              goto LABEL_35;
            v30 = *(_QWORD *)(v57 + 8 * v32);
            if (!v30)
            {
              while (1)
              {
                v31 = v32 + 1;
                if (__OFADD__(v32, 1))
                  goto LABEL_40;
                if (v31 >= v58)
                  goto LABEL_35;
                v30 = *(_QWORD *)(v57 + 8 * v31);
                ++v32;
                if (v30)
                  goto LABEL_23;
              }
            }
            v31 = v25 + 4;
          }
        }
      }
LABEL_23:
      v24 = (v30 - 1) & v30;
      v62 = v31;
      v28 = __clz(__rbit64(v30)) + (v31 << 6);
    }
    v33 = *(_QWORD *)(v59 + 48) + 24 * v28;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v33 + 8);
    v36 = *(_BYTE *)(v33 + 16);
    v37 = v26;
    v38 = v26 + *(int *)(v61 + 20);
    swift_beginAccess();
    sub_1DA484504(v38, v63, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E168]);
    sub_1DA5242E8(v34, v35, v36);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v64 = (_QWORD *)*v15;
    v40 = v64;
    *v15 = 0x8000000000000000;
    v42 = sub_1DA55CBEC(v34, v35, v36);
    v43 = v40[2];
    v44 = (v41 & 1) == 0;
    v45 = v43 + v44;
    if (__OFADD__(v43, v44))
      break;
    v46 = v41;
    if (v40[3] >= v45)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v49 = v64;
        if ((v41 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1DA57BB4C();
        v49 = v64;
        if ((v46 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1DA578708(v45, isUniquelyReferenced_nonNull_native);
      v47 = sub_1DA55CBEC(v34, v35, v36);
      if ((v46 & 1) != (v48 & 1))
        goto LABEL_41;
      v42 = v47;
      v49 = v64;
      if ((v46 & 1) != 0)
      {
LABEL_6:
        sub_1DA53E0E4(v63, v49[7] + *(_QWORD *)(v60 + 72) * v42);
        goto LABEL_7;
      }
    }
    v49[(v42 >> 6) + 8] |= 1 << v42;
    v50 = v49[6] + 24 * v42;
    *(_QWORD *)v50 = v34;
    *(_QWORD *)(v50 + 8) = v35;
    *(_BYTE *)(v50 + 16) = v36;
    sub_1DA4F7228(v63, v49[7] + *(_QWORD *)(v60 + 72) * v42, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E168]);
    v51 = v49[2];
    v52 = __OFADD__(v51, 1);
    v53 = v51 + 1;
    if (v52)
      goto LABEL_38;
    v49[2] = v53;
    sub_1DA5242E8(v34, v35, v36);
LABEL_7:
    *v15 = v49;
    swift_bridgeObjectRelease();
    sub_1DA5242F8(v34, v35, v36);
    swift_endAccess();
    v26 = v37;
    v25 = v62;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_1DA670744();
  __break(1u);
  return result;
}

uint64_t sub_1DA53C9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  uint64_t v11;
  id v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = sub_1DA66E9C8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(void **)(v2 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00D8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DA678510;
  v12 = v10;
  sub_1DA66E9BC();
  v17 = v11;
  sub_1DA53DBD0((unint64_t *)&qword_1EDADE6D0, 255, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA4841D4((unint64_t *)&qword_1EDADE6F0, (uint64_t *)&unk_1EDADE6E0, MEMORY[0x1E0DEAF38]);
  sub_1DA670378();
  v15 = a1;
  v16 = a2;
  sub_1DA66FED4();

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v5);
}

uint64_t PlayStateDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  sub_1DA4EFFCC(*(_QWORD *)(v0 + 96));
  return v0;
}

uint64_t PlayStateDataSource.__deallocating_deinit()
{
  PlayStateDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1DA53CBE4()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

id sub_1DA53CC24()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 88);
}

uint64_t sub_1DA53CC30()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 96);
  sub_1DA4EF8F4(v2);
  return v2;
}

uint64_t sub_1DA53CC80(uint64_t a1, uint64_t a2)
{
  return sub_1DA53A09C(a1, a2);
}

void (*sub_1DA53CCA0(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v3[5] = *v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 96);
  v6 = *(_QWORD *)(v4 + 104);
  v3[3] = v5;
  v3[4] = v6;
  sub_1DA4EF8F4(v5);
  return sub_1DA53A284;
}

void sub_1DA53CD08()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED78);
  sub_1DA66FEE0();

}

uint64_t sub_1DA53CD88@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  id v15;
  id v16;
  char v17;
  uint64_t v18;
  double v20;
  int v21;
  double v22;
  double v23;
  double v24;
  double v25;
  float v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  BOOL v33;
  id v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  double v40;
  double v41;
  float v42;
  unsigned __int8 v43;

  v10 = (int *)type metadata accessor for PlayStateData();
  v11 = *((_QWORD *)v10 - 1);
  *(_QWORD *)&v12 = MEMORY[0x1E0C80A78](v10).n128_u64[0];
  v14 = (uint64_t *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = objc_msgSend(a1, sel_tracklist, v12);
  v16 = objc_msgSend(v15, sel_playingItem);

  if (!v16)
    goto LABEL_5;
  v37 = a2;
  v38 = a4;
  *(double *)&v39 = COERCE_DOUBLE(sub_1DA53BB58());
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A780);
  sub_1DA4841D4(&qword_1F026A788, &qword_1F026A780, MEMORY[0x1E0DEB3E0]);
  v17 = sub_1DA66FCDC();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0 || objc_msgSend(a1, sel_state) == (id)1)
  {

LABEL_5:
    swift_bridgeObjectRelease();
    v18 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v11 + 56))(a5, v18, 1, v10);
  }
  objc_msgSend(v16, sel_duration);
  v20 = v40;
  v21 = v43;
  objc_msgSend(v16, sel_duration);
  v22 = 0.0;
  if (v40 > 0.0)
  {
    objc_msgSend(v16, sel_duration, v40);
    v23 = *(double *)&v39;
    v24 = v40;
    v25 = v41;
    v26 = v42;
    sub_1DA66C3C4();
    v28 = v25 + (v27 - v23) * v26;
    if (v28 >= v24)
      v28 = v24;
    v22 = fmax(v28, 0.0);
  }
  v29 = sub_1DA53BB58();
  HIDWORD(v36) = v21;
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A790);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1DA678510;
    *(_QWORD *)(v30 + 32) = v37;
    *(_QWORD *)(v30 + 40) = a3;
    *(_BYTE *)(v30 + 48) = 1;
  }
  else
  {
    v30 = MEMORY[0x1E0DEE9D8];
  }
  v31 = sub_1DA53DD48(v30, v29);
  swift_bridgeObjectRelease();
  *v14 = v31;
  objc_msgSend(v16, sel_duration);
  *(uint64_t *)((char *)v14 + v10[6]) = v39;
  *((_BYTE *)v14 + v10[7]) = v38 & 1;
  v32 = (double *)((char *)v14 + v10[5]);
  v33 = objc_msgSend(a1, sel_state) != (id)2;
  v34 = objc_msgSend(a1, sel_playerPath);
  v35 = sub_1DA53D0C0();

  *v32 = v22;
  v32[1] = v20;
  *((_BYTE *)v32 + 16) = v33;
  *((_BYTE *)v32 + 17) = BYTE4(v36);
  *((_BYTE *)v32 + 18) = v35 & 1;
  sub_1DA66D1BC();
  swift_storeEnumTagMultiPayload();
  sub_1DA4F7228((uint64_t)v14, a5, (uint64_t (*)(_QWORD))type metadata accessor for PlayStateData);
  v18 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v11 + 56))(a5, v18, 1, v10);
}

id sub_1DA53D0C0()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id result;
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unsigned int v12;

  v1 = (uint64_t)objc_msgSend(v0, sel_route);
  if (!v1)
    return (id)v1;
  objc_opt_self();
  v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
LABEL_17:

    return 0;
  }
  result = objc_msgSend(v2, sel_endpointObject);
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, sel_outputDevices);

    if (v5)
    {
      sub_1DA47D774(0, &qword_1F026A798);
      v6 = sub_1DA66FA9C();

      if (v6 >> 62)
        goto LABEL_24;
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v7; v7 = sub_1DA6705A0())
      {
        v8 = 4;
        while (1)
        {
          v9 = (v6 & 0xC000000000000001) != 0
             ? (id)MEMORY[0x1DF09EE48](v8 - 4, v6)
             : *(id *)(v6 + 8 * v8);
          v10 = v9;
          v11 = v8 - 3;
          if (__OFADD__(v8 - 4, 1))
            break;
          if (!objc_msgSend(v9, sel_isLocalDevice)
            || objc_msgSend(v10, sel_deviceType) == 3)
          {
            swift_bridgeObjectRelease();

LABEL_20:
            v1 = 1;
            goto LABEL_21;
          }
          v12 = objc_msgSend(v10, sel_deviceSubtype);

          if (v12 == 14)
          {

            swift_bridgeObjectRelease();
            goto LABEL_20;
          }
          ++v8;
          if (v11 == v7)
            goto LABEL_16;
        }
        __break(1u);
LABEL_24:
        swift_bridgeObjectRetain();
      }
LABEL_16:

      swift_bridgeObjectRelease();
      v1 = 0;
LABEL_21:
      swift_bridgeObjectRelease();
      return (id)v1;
    }
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_1DA53D2C4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v6 = sub_1DA66EA28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  *v9 = sub_1DA66FEC8();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = sub_1DA66EA40();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v11 = (void *)MPCPlayerResponse.currentItem.getter();
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_identifiers);
    v14 = objc_msgSend(v13, sel_library);

    if (v14)
    {
      v15 = objc_msgSend(v14, sel_databaseID);

      swift_unknownObjectRelease();
LABEL_16:
      v28 = a1;
      v29 = a2;
      v30 = 0;
      v31 = 0;
      goto LABEL_17;
    }

  }
  v16 = (void *)MPCPlayerResponse.currentItem.getter();
  if (!v16)
    goto LABEL_16;
  v17 = v16;
  v18 = objc_msgSend(v16, sel_identifiers);
  v19 = objc_msgSend(v18, sel_universalStore);

  if (!v19)
  {

    goto LABEL_16;
  }
  objc_msgSend(v19, sel_adamID);
  swift_unknownObjectRelease();
  v20 = sub_1DA66DCE4();

  if (v20 < 0)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v21 = (uint64_t *)(v3 + 16);
  swift_beginAccess();
  v22 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v22 + 16))
  {
    v23 = sub_1DA55CBBC(v20);
    if ((v24 & 1) != 0)
    {
      v25 = (uint64_t *)(*(_QWORD *)(v22 + 56) + 16 * v23);
      v26 = *v25;
      v27 = v25[1];
      swift_bridgeObjectRetain();
      v28 = a1;
      v29 = a2;
      v30 = v26;
      v31 = v27;
LABEL_17:
      sub_1DA53CD88(v28, v30, v31, 0, v29);
      return;
    }
  }
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7F228]), sel_init);
  objc_msgSend(v32, sel_setStoreTrackId_, v20);
  v33 = objc_msgSend(*(id *)(v3 + 24), sel_findEpisodeWithRequest_, v32);
  if (v33 && (v34 = v33, v35 = objc_msgSend(v33, sel_uuid), v34, v35))
  {
    v36 = sub_1DA66F8BC();
    v38 = v37;

    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45 = *v21;
    *v21 = 0x8000000000000000;
    sub_1DA537DFC(v36, v38, v20, isUniquelyReferenced_nonNull_native);
    *v21 = v45;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v40 = a1;
    v41 = a2;
    v42 = v36;
    v43 = v38;
  }
  else
  {
    v40 = a1;
    v41 = a2;
    v42 = 0;
    v43 = 0;
  }
  sub_1DA53CD88(v40, v42, v43, 0, v41);

}

uint64_t sub_1DA53D630()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DA53D65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 80);
  if (*(_QWORD *)(v10 + 16))
  {
    v11 = a4 & 1;
    swift_bridgeObjectRetain();
    sub_1DA5242E8(a2, a3, v11);
    v12 = sub_1DA55CBEC(a2, a3, v11);
    if ((v13 & 1) != 0)
    {
      v14 = v12;
      v20 = *(_QWORD *)(v10 + 56);
      v15 = sub_1DA66D1BC();
      v16 = *(_QWORD *)(v15 - 8);
      sub_1DA484504(v20 + *(_QWORD *)(v16 + 72) * v14, a5, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E168]);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a5, 0, 1, v15);
    }
    else
    {
      v19 = sub_1DA66D1BC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a5, 1, 1, v19);
    }
    swift_bridgeObjectRelease();
    return sub_1DA5242F8(a2, a3, v11);
  }
  else
  {
    v17 = sub_1DA66D1BC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a5, 1, 1, v17);
  }
}

uint64_t sub_1DA53D7BC(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v30 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v31 = (unint64_t)(v4 + 63) >> 6;
  v32 = result;
  v35 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v33 = (v6 - 1) & v6;
      v34 = v3;
      v7 = __clz(__rbit64(v6)) | (v3 << 6);
      goto LABEL_26;
    }
    v8 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v8 >= v31)
      return 1;
    v9 = *(_QWORD *)(v30 + 8 * v8);
    v10 = v3 + 1;
    if (!v9)
    {
      v10 = v3 + 2;
      if (v3 + 2 >= v31)
        return 1;
      v9 = *(_QWORD *)(v30 + 8 * v10);
      if (!v9)
      {
        v10 = v3 + 3;
        if (v3 + 3 >= v31)
          return 1;
        v9 = *(_QWORD *)(v30 + 8 * v10);
        if (!v9)
        {
          v10 = v3 + 4;
          if (v3 + 4 >= v31)
            return 1;
          v9 = *(_QWORD *)(v30 + 8 * v10);
          if (!v9)
            break;
        }
      }
    }
LABEL_25:
    v33 = (v9 - 1) & v9;
    v34 = v10;
    v7 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_26:
    v12 = *(_QWORD *)(result + 48) + 24 * v7;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 16);
    sub_1DA670798();
    sub_1DA5242E8(v13, v14, v15);
    sub_1DA66D774();
    v16 = sub_1DA6707C8();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      goto LABEL_33;
    v19 = *(_QWORD *)(a2 + 48) + 24 * v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_BYTE *)(v19 + 16);
    sub_1DA5242E8(*(_QWORD *)v19, v21, v22);
    v23 = sub_1DA66D768();
    sub_1DA5242F8(v20, v21, v22);
    if ((v23 & 1) == 0)
    {
      v24 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v24;
        if (((*(_QWORD *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v25 = *(_QWORD *)(a2 + 48) + 24 * v18;
        v26 = *(_QWORD *)v25;
        v27 = *(_QWORD *)(v25 + 8);
        v28 = *(_BYTE *)(v25 + 16);
        sub_1DA5242E8(*(_QWORD *)v25, v27, v28);
        v29 = sub_1DA66D768();
        sub_1DA5242F8(v26, v27, v28);
        if ((v29 & 1) != 0)
          goto LABEL_7;
      }
LABEL_33:
      sub_1DA5242F8(v13, v14, v15);
      return 0;
    }
LABEL_7:
    sub_1DA5242F8(v13, v14, v15);
    result = v32;
    v6 = v33;
    v3 = v34;
  }
  v11 = v3 + 5;
  if (v3 + 5 >= v31)
    return 1;
  v9 = *(_QWORD *)(v30 + 8 * v11);
  if (v9)
  {
    v10 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v10 >= v31)
      return 1;
    v9 = *(_QWORD *)(v30 + 8 * v10);
    ++v11;
    if (v9)
      goto LABEL_25;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DA53DAE0(uint64_t *a1, uint64_t *a2)
{
  int *v4;
  char v5;

  if ((sub_1DA53D7BC(*a1, *a2) & 1) != 0
    && (v4 = (int *)type metadata accessor for PlayStateData(),
        (MEMORY[0x1DF09BB90]((char *)a1 + v4[5], (char *)a2 + v4[5]) & 1) != 0)
    && *(double *)((char *)a1 + v4[6]) == *(double *)((char *)a2 + v4[6]))
  {
    v5 = *((_BYTE *)a1 + v4[7]) ^ *((_BYTE *)a2 + v4[7]) ^ 1;
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t type metadata accessor for PlayStateDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1DA53DB94(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DA53DBD0((unint64_t *)&unk_1F026A770, a2, (uint64_t (*)(uint64_t))type metadata accessor for PlayStateDataSource, (uint64_t)&protocol conformance descriptor for PlayStateDataSource);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DA53DBD0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1DF0A039C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA53DC10()
{
  return sub_1DA53DBD0(&qword_1EDADFC58, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E168], MEMORY[0x1E0D7E160]);
}

uint64_t sub_1DA53DC40@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for PlayStateDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlayStateDataSource.expectedEpisodeStates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PlayStateDataSource.expectedEpisodeStates.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PlayStateDataSource.expectedEpisodeStates.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of PlayStateDataSource.__allocating_init(playbackController:pendingPlaybackStore:episodeLookupUtil:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of PlayStateDataSource.refreshControllerStates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of PlayStateDataSource.refreshControllerStates.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of PlayStateDataSource.refreshControllerStates.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of PlayStateDataSource.startObservingChanges()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

ValueMetadata *type metadata accessor for PlayStateDataSource.Config()
{
  return &type metadata for PlayStateDataSource.Config;
}

uint64_t type metadata accessor for PlayStateData()
{
  uint64_t result;

  result = qword_1EDADF810;
  if (!qword_1EDADF810)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA53DD48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8[2];
  char v9;
  uint64_t v10;

  v10 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (char *)(a1 + 48);
    do
    {
      v4 = *((_QWORD *)v3 - 2);
      v5 = *((_QWORD *)v3 - 1);
      v6 = *v3;
      v3 += 24;
      sub_1DA5242E8(v4, v5, v6);
      sub_1DA5D9CCC((uint64_t)v8, v4, v5, v6);
      sub_1DA5242F8(v8[0], v8[1], v9);
      --v2;
    }
    while (v2);
    return v10;
  }
  return a2;
}

unint64_t sub_1DA53DDD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EDAE0060;
  if (!qword_1EDAE0060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE2158);
    v2 = sub_1DA4982D4((unint64_t *)&unk_1EDAE0070, (unint64_t *)&unk_1EDAE2148, 0x1E0CC2308, MEMORY[0x1E0DEFD00]);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EDAE0060);
  }
  return result;
}

uint64_t sub_1DA53DE58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA53DE7C(void *a1, void (*a2)(char *, uint64_t), void *a3)
{
  uint64_t v3;

  return sub_1DA53AC30(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1DA53DE8C@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, char *, _QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(uint64_t (**)(uint64_t, char *, _QWORD))(v2 + 16);
  v6 = *(_QWORD *)a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0028);
  result = v5(v6, &a1[*(int *)(v7 + 48)], *(_QWORD *)&a1[*(int *)(v7 + 64)]);
  *a2 = result;
  return result;
}

uint64_t sub_1DA53DEEC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1DA53DF20(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1DA53D2C4(*(void **)(v1 + 24), a1);
}

uint64_t sub_1DA53DF48()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DA53DF6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA53DF90(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1DA53DFC0(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1DA53DFE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA53D65C(**(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
}

uint64_t sub_1DA53E008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EDADF830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA53E050()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA53E074(uint64_t a1, uint64_t a2)
{
  return sub_1DA53C3F0(a1, a2);
}

uint64_t sub_1DA53E07C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADF820);
  return v3(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_1DA53E0C0()
{
  uint64_t *v0;

  return sub_1DA53C4F0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1DA53E0CC()
{
  uint64_t v0;

  return sub_1DA58F8E8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1DA53E0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66D1BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1DA53E128(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    sub_1DA66BE60();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DA66D1BC();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v12 = sub_1DA66C430();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A7F0);
      v9[*(int *)(v15 + 48)] = v10[*(int *)(v15 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v16 = a3[7];
    *(_QWORD *)((char *)v7 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)v7 + v16) = *((_BYTE *)a2 + v16);
  }
  return v7;
}

uint64_t sub_1DA53E298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  sub_1DA66D1BC();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v6 = sub_1DA66C430();
    v7 = *(_QWORD *)(v6 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  return result;
}

_QWORD *sub_1DA53E330(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DA66D1BC();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v10 = sub_1DA66C430();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A7F0);
    v7[*(int *)(v13 + 48)] = v8[*(int *)(v13 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v14 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  return a1;
}

_QWORD *sub_1DA53E478(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1DA47F880((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E168]);
    v9 = sub_1DA66D1BC();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v10 = sub_1DA66C430();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A7F0);
      v7[*(int *)(v13 + 48)] = v8[*(int *)(v13 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_1DA53E5E4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DA66D1BC();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v10 = sub_1DA66C430();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A7F0);
    v7[*(int *)(v13 + 48)] = v8[*(int *)(v13 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v14 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  return a1;
}

_QWORD *sub_1DA53E724(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1DA47F880((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E168]);
    v9 = sub_1DA66D1BC();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v10 = sub_1DA66C430();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A7F0);
      v7[*(int *)(v13 + 48)] = v8[*(int *)(v13 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v14 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  return a1;
}

uint64_t sub_1DA53E884()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA53E890(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DA66D1BC();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1DA53E90C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1DA53E918(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1DA66D1BC();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1DA53E98C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66D1BC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double UIEdgeInsets.init(top:leading:bottom:trailing:layoutDirection:)(uint64_t a1, double a2)
{
  uint64_t v4;
  _QWORD v6[4];

  if (a1 && a1 != 1)
  {
    type metadata accessor for UIUserInterfaceLayoutDirection(0);
    v6[3] = v4;
    v6[0] = a1;
    unrecognizedEnumValueEncountered(_:)((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  return a2;
}

uint64_t sub_1DA53EAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v0 = sub_1DA66ECF8();
  __swift_allocate_value_buffer(v0, qword_1EDAE48B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE48B8);
  sub_1DA66CBA4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D58);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4920);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = v1;
  v25 = *(_QWORD *)(v2 + 72);
  v26 = v1;
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA678FD0;
  v6 = v5 + v4;
  v23 = *(int *)(v3 + 48);
  v24 = v5;
  sub_1DA66EEF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D60);
  sub_1DA66F46C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DA678FA0;
  sub_1DA66F43C();
  sub_1DA66F448();
  sub_1DA66F454();
  sub_1DA66F418();
  v8 = sub_1DA5CCDE0(v7);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v6 + v23) = v8;
  v9 = *(int *)(v26 + 48);
  sub_1DA66EEE4();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DA678FF0;
  sub_1DA66F418();
  sub_1DA66F430();
  sub_1DA66F448();
  v11 = sub_1DA5CCDE0(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v6 + v25 + v9) = v11;
  v21 = *(int *)(v26 + 48);
  sub_1DA66EF08();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DA678FE0;
  sub_1DA66F418();
  sub_1DA66F430();
  v13 = sub_1DA5CCDE0(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v6 + 2 * v25 + v21) = v13;
  v22 = *(int *)(v26 + 48);
  sub_1DA66EED8();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1DA678FF0;
  sub_1DA66F424();
  sub_1DA66F418();
  sub_1DA66F430();
  v15 = sub_1DA5CCDE0(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v6 + 3 * v25 + v22) = v15;
  v16 = *(int *)(v26 + 48);
  sub_1DA66EEFC();
  *(_QWORD *)(v6 + 4 * v25 + v16) = MEMORY[0x1E0DEE9E8];
  v17 = *(int *)(v26 + 48);
  sub_1DA66EECC();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1DA678510;
  sub_1DA66F418();
  v19 = sub_1DA5CCDE0(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v6 + 5 * v25 + v17) = v19;
  sub_1DA63C8D0(v24);
  sub_1DA63C8F4(MEMORY[0x1E0DEE9D8]);
  return sub_1DA66ECEC();
}

uint64_t static MetricsData.Configuration.podcasts.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDAE48D8 != -1)
    swift_once();
  v2 = sub_1DA66ECF8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDAE48B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, unint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _OWORD v55[2];
  __int128 v56;
  uint64_t v57;
  unint64_t v58;

  v51 = a3;
  v52 = a4;
  v49 = a1;
  v50 = a2;
  v48[1] = a9;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1DA66C358();
  v53 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v48[0] = (char *)v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = a12;
  swift_bridgeObjectRetain();
  v22 = sub_1DA66CAA8();
  v24 = v22;
  v25 = v23;
  v26 = MEMORY[0x1E0DEA968];
  if (a6)
  {
    v57 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v56 = a5;
    *((_QWORD *)&v56 + 1) = a6;
    sub_1DA49ACF0(&v56, v55);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v54 = a12;
    v58 = 0x8000000000000000;
    sub_1DA534964(v55, v24, v25, isUniquelyReferenced_nonNull_native);
    v58 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v22, v23, &v56);
    sub_1DA47E2F0((uint64_t)&v56, &qword_1EDAE5130);
  }
  swift_bridgeObjectRelease();
  v28 = sub_1DA66CAF0();
  v30 = v28;
  v31 = v29;
  if (a8)
  {
    v57 = v26;
    *(_QWORD *)&v56 = a7;
    *((_QWORD *)&v56 + 1) = a8;
    sub_1DA49ACF0(&v56, v55);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v32 = v58;
    v33 = swift_isUniquelyReferenced_nonNull_native();
    v54 = v32;
    v58 = 0x8000000000000000;
    sub_1DA534964(v55, v30, v31, v33);
    v58 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v28, v29, &v56);
    sub_1DA47E2F0((uint64_t)&v56, &qword_1EDAE5130);
  }
  swift_bridgeObjectRelease();
  v34 = sub_1DA66CAE4();
  v36 = v34;
  v37 = v35;
  v38 = v53;
  if (*((_QWORD *)&a10 + 1))
  {
    v57 = v26;
    v56 = a10;
    sub_1DA49ACF0(&v56, v55);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v39 = v58;
    v40 = swift_isUniquelyReferenced_nonNull_native();
    v54 = v39;
    v58 = 0x8000000000000000;
    sub_1DA534964(v55, v36, v37, v40);
    v58 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v34, v35, &v56);
    sub_1DA47E2F0((uint64_t)&v56, &qword_1EDAE5130);
  }
  swift_bridgeObjectRelease();
  v41 = sub_1DA66CB20();
  v43 = v42;
  sub_1DA4B2F78(a11, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v19, 1, v20) == 1)
  {
    sub_1DA47E2F0((uint64_t)v19, &qword_1EDAE5020);
    swift_bridgeObjectRetain();
    sub_1DA5347A0(v41, v43, &v56);
    swift_bridgeObjectRelease();
    sub_1DA47E2F0((uint64_t)&v56, &qword_1EDAE5130);
  }
  else
  {
    v44 = v48[0];
    (*(void (**)(_QWORD, char *, uint64_t))(v38 + 32))(v48[0], v19, v20);
    swift_bridgeObjectRetain();
    sub_1DA66D9F0();
    sub_1DA49ACF0(&v56, v55);
    v45 = v58;
    v46 = swift_isUniquelyReferenced_nonNull_native();
    v54 = v45;
    v58 = 0x8000000000000000;
    sub_1DA534964(v55, v41, v43, v46);
    v58 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v44, v20);
  }
  swift_bridgeObjectRelease();
  MEMORY[0x1DF09D6B4](v49, v50, v51, v52, v58, a13);
  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.searchData(targetType:term:prefix:actionType:actionURL:fields:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  unint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[5];
  _OWORD v25[2];
  __int128 v26;
  uint64_t v27;

  v24[2] = a7;
  v24[3] = a8;
  v24[1] = a4;
  v24[0] = a3;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  if (a6)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1DA66CB2C();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2690);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DA678510;
    strcpy((char *)(inited + 32), "searchPrefix");
    *(_BYTE *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = a5;
    *(_QWORD *)(inited + 56) = a6;
    v19 = sub_1DA63CAB4(inited);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AD0);
    *(_QWORD *)&v26 = v19;
    sub_1DA49ACF0(&v26, v25);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24[4] = a10;
    sub_1DA534964(v25, v15, v17, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DA4B2F78(a9, (uint64_t)v14);
  v21 = sub_1DA66C358();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21) == 1)
  {
    sub_1DA47E2F0((uint64_t)v14, &qword_1EDAE5020);
  }
  else
  {
    sub_1DA66C298();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v21);
  }
  sub_1DA66ECE0();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1DA53F68C(void *a1, id a2, void *a3)
{
  double v6;
  char v7;
  double v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id result;
  uint64_t v23;

  v6 = COERCE_DOUBLE(sub_1DA670120());
  if ((v7 & 1) != 0)
  {
LABEL_8:
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v17 = a2;
LABEL_9:
    sub_1DA66F58C();
    swift_willThrow();
    return a2;
  }
  v8 = v6;
  if (v6 <= 0.0)
  {
    a2 = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, a1);
    if (a2)
      return a2;
    __break(1u);
  }
  else if ((objc_msgSend(a3, sel_isUndefined) & 1) != 0)
  {
LABEL_4:
    v9 = 0;
    goto LABEL_5;
  }
  sub_1DA670138();
  if (!v18)
    goto LABEL_16;
  v19 = sub_1DA670600();
  swift_bridgeObjectRelease();
  if (v19 == 1)
    goto LABEL_4;
  if (v19)
  {
LABEL_16:
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    a2 = v20;
    v21 = a3;
    goto LABEL_9;
  }
  v9 = 1;
LABEL_5:
  v10 = objc_msgSend((id)objc_opt_self(), sel_prettyShortStringWithDuration_abbreviated_, v9, v8);
  if (v10)
  {
    v11 = v10;
    v12 = sub_1DA66F8BC();
    v14 = v13;

    v23 = v12;
    v15 = a1;
    v16 = sub_1DA67072C();
    a2 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v16, v15, v23, v14);
    swift_unknownObjectRelease();

    if (a2)
      return a2;
    __break(1u);
    goto LABEL_8;
  }
  result = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, a1);
  a2 = result;
  if (result)
    return a2;
  __break(1u);
  return result;
}

unint64_t sub_1DA53F9A4()
{
  unint64_t result;

  result = qword_1EDAE2140;
  if (!qword_1EDAE2140)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDAE2140);
  }
  return result;
}

id sub_1DA53F9E0(void *a1)
{
  uint64_t v1;

  return sub_1DA53F68C(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_1DA53F9FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026A7F8;
  if (!qword_1F026A7F8)
  {
    v1 = sub_1DA66F598();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D411E0], v1);
    atomic_store(result, (unint64_t *)&qword_1F026A7F8);
  }
  return result;
}

uint64_t MTPlaylist.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  _BYTE v32[32];
  _OWORD v33[2];
  __int128 v34;
  uint64_t v35;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66CA0C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v30 = (uint64_t)&v26 - v11;
  v12 = sub_1DA66C244();
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v14 = MEMORY[0x1E0C80A78](v12).n128_u64[0];
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(v1, sel_podcasts, v14);
  if (!v17)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, 1, 1, v6);
  v27 = v13;
  v28 = a1;
  v18 = v17;
  sub_1DA66FD6C();
  v26 = v18;

  sub_1DA53FDB8();
  sub_1DA6702B8();
  if (v35)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    v29 = v9;
    do
    {
      sub_1DA49ACF0(&v34, v33);
      sub_1DA49ADD0((uint64_t)v33, (uint64_t)v32);
      sub_1DA53FE00();
      if (swift_dynamicCast())
      {
        v20 = v31;
        sub_1DA670210();

      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_1DA51C17C((uint64_t)v5);
      }
      else
      {
        v21 = v30;
        sub_1DA51C1BC((uint64_t)v5, v30);
        sub_1DA51C1BC(v21, (uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_1DA53FE8C(0, *(_QWORD *)(v19 + 16) + 1, 1, v19, &qword_1EDAE4D38, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
        v23 = *(_QWORD *)(v19 + 16);
        v22 = *(_QWORD *)(v19 + 24);
        if (v23 >= v22 >> 1)
          v19 = sub_1DA53FE8C(v22 > 1, v23 + 1, 1, v19, &qword_1EDAE4D38, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
        *(_QWORD *)(v19 + 16) = v23 + 1;
        v24 = v19
            + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
            + *(_QWORD *)(v7 + 72) * v23;
        v9 = v29;
        sub_1DA51C1BC((uint64_t)v29, v24);
      }
      sub_1DA6702B8();
    }
    while (v35);
  }
  else
  {
    v19 = MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v12);

  return ArtworkModel.init(composite:width:height:backgroundColor:)(v19, 0, 255, v28);
}

unint64_t sub_1DA53FDB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026A800;
  if (!qword_1F026A800)
  {
    v1 = sub_1DA66C244();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CAFB80], v1);
    atomic_store(result, (unint64_t *)&qword_1F026A800);
  }
  return result;
}

unint64_t sub_1DA53FE00()
{
  unint64_t result;

  result = qword_1EDAE0080;
  if (!qword_1EDAE0080)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDAE0080);
  }
  return result;
}

uint64_t sub_1DA53FE3C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F026A828, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
}

_QWORD *sub_1DA53FE50(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DA5401B8(a1, a2, a3, a4, &qword_1F026AE90, &qword_1EDAE4070);
}

_QWORD *sub_1DA53FE64(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DA54032C(a1, a2, a3, a4, &qword_1F026A790);
}

uint64_t sub_1DA53FE78(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1EDAE4D38, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
}

uint64_t sub_1DA53FE8C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1DA670564();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DA5414A4(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1DA540098(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D80);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA540EA4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DA5401A4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DA5401B8(a1, a2, a3, a4, &qword_1F026A9C0, (uint64_t *)&unk_1F026A9D0);
}

_QWORD *sub_1DA5401B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1DA54109C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA5402E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F026A838, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E168]);
}

_QWORD *sub_1DA5402F8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DA5408DC(a1, a2, a3, a4, &qword_1F02698F8);
}

uint64_t sub_1DA540304(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F0269970, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

_QWORD *sub_1DA540318(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DA54032C(a1, a2, a3, a4, &qword_1F0269360);
}

_QWORD *sub_1DA54032C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4])
          memmove(v13, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1DA5411A4(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA540458(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A808);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026A810) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_1DA670564();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026A810) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DA541294(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_1DA540668(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DA540CA4(a1, a2, a3, a4, &qword_1F026A818, &qword_1F026A820);
}

uint64_t sub_1DA54067C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F0269938, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E010]);
}

_QWORD *sub_1DA540690(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A830);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA481124(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DA54079C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F0269BC0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA540DBC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA5408A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F0269948, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E0B8]);
}

uint64_t sub_1DA5408BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F0269940, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E070]);
}

_QWORD *sub_1DA5408D0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DA5408DC(a1, a2, a3, a4, &qword_1EDAE2218);
}

_QWORD *sub_1DA5408DC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA540DBC(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA5409E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F0269918, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1DA5409F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F0269910, (uint64_t (*)(_QWORD))type metadata accessor for StationEntity);
}

uint64_t sub_1DA540A0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F0269908, (uint64_t (*)(_QWORD))type metadata accessor for ChannelEntity);
}

uint64_t sub_1DA540A20(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F0269900, (uint64_t (*)(_QWORD))type metadata accessor for ShowEntity);
}

_QWORD *sub_1DA540A34(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A840);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1DA5413B0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA540B5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1F0269968, (uint64_t (*)(_QWORD))type metadata accessor for FairPlayKeyViewModel);
}

uint64_t sub_1DA540B70(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA53FE8C(a1, a2, a3, a4, &qword_1EDAE4D40, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7DD28]);
}

_QWORD *sub_1DA540B84(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4D20);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA540FAC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DA540C90(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DA540CA4(a1, a2, a3, a4, &qword_1EDAE4D70, &qword_1EDAE4AD0);
}

_QWORD *sub_1DA540CA4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA5415BC(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_1DA540DBC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA540EA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4BC0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA540FAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA54109C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA5411A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA541294(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026A810) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA5413B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA5414A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA5415BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA5416C0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DA66F2C8();
  __swift_allocate_value_buffer(v0, qword_1EDAE0970);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE0970);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0D40958], v0);
}

void sub_1DA541718(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;

  sub_1DA670138();
  if (v9)
  {
    sub_1DA5433FC(a3);
    if (v4)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)(a4 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer), *(_QWORD *)(a4 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer + 24));
      if (qword_1EDAE0990 != -1)
        swift_once();
      v11 = sub_1DA66F2C8();
      __swift_project_value_buffer(v11, (uint64_t)qword_1EDAE0970);
      v12 = sub_1DA66F718();
      v14 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = a1;
      v16 = sub_1DA67072C();
      v17 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v16, v15, v12, v14);
      swift_unknownObjectRelease();

      if (!v17)
        __break(1u);
    }
  }
  else
  {
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v10 = a2;
    sub_1DA66F58C();
    swift_willThrow();
  }
}

void sub_1DA54198C(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  char v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;

  v32 = a6;
  v33 = a1;
  v11 = sub_1DA66EEC0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (void *)sub_1DA67012C();
  if (!v15)
  {
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v16 = a2;
    sub_1DA66F58C();
    swift_willThrow();
    return;
  }
  v30 = v12;
  v31 = v11;
  v36 = v15;
  if ((objc_msgSend(a3, sel_isUndefined) & 1) != 0)
  {
    v29 = 0;
  }
  else
  {
    v17 = sub_1DA670108();
    if ((v18 & 1) != 0)
    {
      sub_1DA66F598();
      sub_1DA53F9FC();
      swift_allocError();
      v22 = a3;
      sub_1DA66F58C();
      swift_willThrow();

      return;
    }
    v29 = v17;
  }
  if ((objc_msgSend(a4, sel_isUndefined) & 1) != 0)
  {
    v19 = v36;
  }
  else
  {
    sub_1DA670108();
    v20 = v36;
    if ((v21 & 1) != 0)
    {
      sub_1DA66F598();
      sub_1DA53F9FC();
      swift_allocError();
      v27 = a4;
      sub_1DA66F58C();
      swift_willThrow();

      return;
    }
    v19 = v36;
  }
  sub_1DA541C7C(a5, (uint64_t)v14);
  if (v6)
  {

  }
  else
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v32 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer), *(_QWORD *)(v32 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer + 24));
    v34 = sub_1DA66F730();
    v35 = v23;
    v24 = v33;
    v25 = sub_1DA67072C();
    v26 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v25, v24);
    swift_unknownObjectRelease();

    if (v26)
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v31);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DA541C7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1EB0);
  *(_QWORD *)&v5 = MEMORY[0x1E0C80A78](v4).n128_u64[0];
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, sel_isUndefined, v5) & 1) != 0)
  {
    v8 = *MEMORY[0x1E0D3FFC8];
    v9 = sub_1DA66EEC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(a2, v8, v9);
  }
  sub_1DA670138();
  if (v11)
  {
    sub_1DA66EEB4();
    v12 = sub_1DA66EEC0();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v7, v12);
  }
  else
  {
    v14 = sub_1DA66EEC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  sub_1DA47E2F0((uint64_t)v7, &qword_1EDAE1EB0);
  sub_1DA66F598();
  sub_1DA53F9FC();
  swift_allocError();
  v15 = a1;
  sub_1DA66F58C();
  return swift_willThrow();
}

id sub_1DA541EE4(id a1, id a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DA670138();
  if (!v11)
  {
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v14 = a2;
LABEL_7:
    sub_1DA66F58C();
    swift_willThrow();
    return a2;
  }
  v12 = sub_1DA670108();
  if ((v13 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    a2 = v15;
    v16 = a3;
    goto LABEL_7;
  }
  a2 = (id)v12;
  sub_1DA5433FC(a4);
  if (v5)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a5 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer), *(_QWORD *)(a5 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer + 24));
    if (qword_1EDAE0990 != -1)
      goto LABEL_12;
    while (1)
    {
      v18 = sub_1DA66F2C8();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EDAE0970);
      v19 = sub_1DA66F724();
      v21 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = a1;
      v22 = sub_1DA67072C();
      a2 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v22, a1, v19, v21);
      swift_unknownObjectRelease();

      if (a2)
        break;
      __break(1u);
LABEL_12:
      swift_once();
    }
  }
  return a2;
}

id sub_1DA5421D8(void *a1, id a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v12;
  uint64_t v13;

  sub_1DA670108();
  if ((v6 & 1) != 0)
    goto LABEL_4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer), *(_QWORD *)(a3 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer + 24));
  v12 = sub_1DA66F70C();
  v13 = v7;
  v8 = a1;
  v9 = sub_1DA67072C();
  a2 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v9, v8, v12, v13);
  swift_unknownObjectRelease();

  if (!a2)
  {
    __break(1u);
LABEL_4:
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v10 = a2;
    sub_1DA66F58C();
    swift_willThrow();
  }
  return a2;
}

id sub_1DA542310(void *a1, id a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v12;
  uint64_t v13;

  sub_1DA670120();
  if ((v6 & 1) != 0)
    goto LABEL_4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer), *(_QWORD *)(a3 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer + 24));
  v12 = sub_1DA66F73C();
  v13 = v7;
  v8 = a1;
  v9 = sub_1DA67072C();
  a2 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v9, v8, v12, v13);
  swift_unknownObjectRelease();

  if (!a2)
  {
    __break(1u);
LABEL_4:
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v10 = a2;
    sub_1DA66F58C();
    swift_willThrow();
  }
  return a2;
}

